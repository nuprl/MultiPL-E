name: HumanEval_102_choose_num
language: jl
results:
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz9u7hynx.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz9u7hynx.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz9u7hynx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpz9u7hynx.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz9u7hynx.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz9u7hynx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpz9u7hynx.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz9u7hynx.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz9u7hynx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpz9u7hynx.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz9u7hynx.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz9u7hynx.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz9u7hynx.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpufvefrx2.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpufvefrx2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpufvefrx2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpufvefrx2.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpufvefrx2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpufvefrx2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpufvefrx2.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpufvefrx2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpufvefrx2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpufvefrx2.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpufvefrx2.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpufvefrx2.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpufvefrx2.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi5guku7b.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi5guku7b.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi5guku7b.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi5guku7b.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi5guku7b.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi5guku7b.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi5guku7b.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi5guku7b.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi5guku7b.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi5guku7b.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi5guku7b.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi5guku7b.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi5guku7b.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpviq9t1io.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpviq9t1io.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpviq9t1io.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpviq9t1io.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpviq9t1io.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpviq9t1io.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpviq9t1io.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpviq9t1io.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpviq9t1io.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpviq9t1io.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpviq9t1io.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpviq9t1io.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpviq9t1io.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwuk54p0y.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwuk54p0y.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwuk54p0y.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpwuk54p0y.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwuk54p0y.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwuk54p0y.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpwuk54p0y.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwuk54p0y.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwuk54p0y.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpwuk54p0y.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwuk54p0y.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwuk54p0y.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwuk54p0y.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp33m0l1v4.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp33m0l1v4.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp33m0l1v4.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp33m0l1v4.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp33m0l1v4.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp33m0l1v4.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp33m0l1v4.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp33m0l1v4.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp33m0l1v4.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp33m0l1v4.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv8ythrop.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv8ythrop.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv8ythrop.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv8ythrop.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv8ythrop.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv8ythrop.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv8ythrop.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv8ythrop.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv8ythrop.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv8ythrop.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv8ythrop.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv8ythrop.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv8ythrop.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqc94zj0d.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqc94zj0d.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqc94zj0d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqc94zj0d.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqc94zj0d.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqc94zj0d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqc94zj0d.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqc94zj0d.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqc94zj0d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqc94zj0d.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqc94zj0d.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqc94zj0d.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqc94zj0d.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps2u0rl17.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps2u0rl17.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps2u0rl17.jl:26\ntest set: Test\
    \ Failed at /tmp/tmps2u0rl17.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps2u0rl17.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps2u0rl17.jl:26\ntest set: Test\
    \ Failed at /tmp/tmps2u0rl17.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps2u0rl17.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps2u0rl17.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps2u0rl17.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp63e79g_4.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63e79g_4.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63e79g_4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp63e79g_4.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63e79g_4.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63e79g_4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp63e79g_4.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63e79g_4.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63e79g_4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp63e79g_4.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp63e79g_4.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp63e79g_4.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp63e79g_4.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpagas1ntz.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpagas1ntz.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpagas1ntz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpagas1ntz.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpagas1ntz.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpagas1ntz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpagas1ntz.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpagas1ntz.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpagas1ntz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpagas1ntz.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpagas1ntz.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpagas1ntz.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpagas1ntz.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptf3g1bso.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptf3g1bso.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptf3g1bso.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptf3g1bso.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptf3g1bso.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptf3g1bso.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptf3g1bso.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptf3g1bso.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptf3g1bso.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptf3g1bso.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptf3g1bso.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptf3g1bso.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptf3g1bso.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplmlphqqt.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplmlphqqt.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplmlphqqt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplmlphqqt.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplmlphqqt.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplmlphqqt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplmlphqqt.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplmlphqqt.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplmlphqqt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplmlphqqt.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplmlphqqt.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplmlphqqt.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplmlphqqt.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpabs1x6dw.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpabs1x6dw.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpabs1x6dw.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpabs1x6dw.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpabs1x6dw.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpabs1x6dw.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpabs1x6dw.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpabs1x6dw.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpabs1x6dw.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpabs1x6dw.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1vcoe36i.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1vcoe36i.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1vcoe36i.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1vcoe36i.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1vcoe36i.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1vcoe36i.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1vcoe36i.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1vcoe36i.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1vcoe36i.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1vcoe36i.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1vcoe36i.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1vcoe36i.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1vcoe36i.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphjtkyvb3.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphjtkyvb3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphjtkyvb3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphjtkyvb3.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphjtkyvb3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphjtkyvb3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphjtkyvb3.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphjtkyvb3.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphjtkyvb3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphjtkyvb3.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphjtkyvb3.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphjtkyvb3.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphjtkyvb3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp66mn9z1g.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp66mn9z1g.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp66mn9z1g.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp66mn9z1g.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp66mn9z1g.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp66mn9z1g.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp66mn9z1g.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp66mn9z1g.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp66mn9z1g.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp66mn9z1g.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx3576ofs.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx3576ofs.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx3576ofs.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpx3576ofs.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx3576ofs.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx3576ofs.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpx3576ofs.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx3576ofs.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx3576ofs.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpx3576ofs.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx3576ofs.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx3576ofs.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx3576ofs.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyd2r16cm.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyd2r16cm.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyd2r16cm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpyd2r16cm.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyd2r16cm.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyd2r16cm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpyd2r16cm.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyd2r16cm.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyd2r16cm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpyd2r16cm.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyd2r16cm.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyd2r16cm.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyd2r16cm.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfuw3ldl2.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfuw3ldl2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfuw3ldl2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfuw3ldl2.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfuw3ldl2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfuw3ldl2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfuw3ldl2.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfuw3ldl2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfuw3ldl2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfuw3ldl2.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfuw3ldl2.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfuw3ldl2.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfuw3ldl2.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_meb5zuu.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_meb5zuu.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_meb5zuu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_meb5zuu.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_meb5zuu.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_meb5zuu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_meb5zuu.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_meb5zuu.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_meb5zuu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_meb5zuu.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_meb5zuu.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_meb5zuu.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_meb5zuu.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppnasum99.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppnasum99.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppnasum99.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppnasum99.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppnasum99.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppnasum99.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppnasum99.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppnasum99.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppnasum99.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppnasum99.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppnasum99.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppnasum99.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppnasum99.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa_ntorpi.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_ntorpi.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_ntorpi.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpa_ntorpi.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_ntorpi.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_ntorpi.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpa_ntorpi.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_ntorpi.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_ntorpi.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpa_ntorpi.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_ntorpi.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_ntorpi.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa_ntorpi.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeo0thf8e.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeo0thf8e.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeo0thf8e.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpeo0thf8e.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeo0thf8e.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeo0thf8e.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpeo0thf8e.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeo0thf8e.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeo0thf8e.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpeo0thf8e.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeo0thf8e.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeo0thf8e.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeo0thf8e.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvujnq847.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvujnq847.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvujnq847.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvujnq847.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvujnq847.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvujnq847.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvujnq847.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvujnq847.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvujnq847.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvujnq847.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvujnq847.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvujnq847.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvujnq847.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa2b4xho2.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa2b4xho2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa2b4xho2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpa2b4xho2.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa2b4xho2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa2b4xho2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpa2b4xho2.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa2b4xho2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa2b4xho2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpa2b4xho2.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa2b4xho2.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa2b4xho2.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa2b4xho2.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn80jo30r.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn80jo30r.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn80jo30r.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn80jo30r.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn80jo30r.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn80jo30r.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn80jo30r.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn80jo30r.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn80jo30r.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn80jo30r.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn80jo30r.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn80jo30r.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn80jo30r.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_hz_i5kw.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hz_i5kw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hz_i5kw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_hz_i5kw.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hz_i5kw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hz_i5kw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_hz_i5kw.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hz_i5kw.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hz_i5kw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_hz_i5kw.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hz_i5kw.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hz_i5kw.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_hz_i5kw.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp58f3fcq6.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58f3fcq6.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58f3fcq6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp58f3fcq6.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58f3fcq6.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58f3fcq6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp58f3fcq6.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58f3fcq6.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58f3fcq6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp58f3fcq6.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58f3fcq6.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58f3fcq6.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp58f3fcq6.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3mbs3x8a.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3mbs3x8a.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3mbs3x8a.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3mbs3x8a.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3mbs3x8a.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3mbs3x8a.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3mbs3x8a.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3mbs3x8a.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3mbs3x8a.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3mbs3x8a.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3mbs3x8a.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3mbs3x8a.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3mbs3x8a.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_e43ldha.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_e43ldha.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_e43ldha.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_e43ldha.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_e43ldha.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_e43ldha.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_e43ldha.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_e43ldha.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_e43ldha.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_e43ldha.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_e43ldha.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_e43ldha.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_e43ldha.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6g1kge1u.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6g1kge1u.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6g1kge1u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6g1kge1u.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6g1kge1u.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6g1kge1u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6g1kge1u.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6g1kge1u.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6g1kge1u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6g1kge1u.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6g1kge1u.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6g1kge1u.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6g1kge1u.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9w37_gft.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9w37_gft.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9w37_gft.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9w37_gft.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9w37_gft.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9w37_gft.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9w37_gft.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9w37_gft.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9w37_gft.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9w37_gft.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9w37_gft.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9w37_gft.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9w37_gft.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppicuy13w.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppicuy13w.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppicuy13w.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppicuy13w.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppicuy13w.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppicuy13w.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppicuy13w.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppicuy13w.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppicuy13w.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppicuy13w.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppicuy13w.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppicuy13w.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppicuy13w.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr0d212yn.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr0d212yn.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr0d212yn.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpr0d212yn.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr0d212yn.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr0d212yn.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpr0d212yn.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr0d212yn.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr0d212yn.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr0d212yn.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpow3nigwb.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpow3nigwb.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpow3nigwb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpow3nigwb.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpow3nigwb.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpow3nigwb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpow3nigwb.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpow3nigwb.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpow3nigwb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpow3nigwb.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpow3nigwb.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpow3nigwb.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpow3nigwb.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjw_lbulj.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjw_lbulj.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjw_lbulj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjw_lbulj.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjw_lbulj.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjw_lbulj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjw_lbulj.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjw_lbulj.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjw_lbulj.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjw_lbulj.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjw_lbulj.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjw_lbulj.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjw_lbulj.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpki2yx_zy.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpki2yx_zy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpki2yx_zy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpki2yx_zy.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpki2yx_zy.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpki2yx_zy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpki2yx_zy.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpki2yx_zy.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpki2yx_zy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpki2yx_zy.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpki2yx_zy.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpki2yx_zy.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpki2yx_zy.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk3j812hf.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk3j812hf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk3j812hf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk3j812hf.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk3j812hf.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk3j812hf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk3j812hf.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk3j812hf.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk3j812hf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk3j812hf.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk3j812hf.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk3j812hf.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk3j812hf.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp65gxplc.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp65gxplc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp65gxplc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpp65gxplc.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp65gxplc.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp65gxplc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpp65gxplc.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp65gxplc.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp65gxplc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpp65gxplc.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp65gxplc.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp65gxplc.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp65gxplc.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqzxdnnhp.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqzxdnnhp.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqzxdnnhp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqzxdnnhp.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqzxdnnhp.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqzxdnnhp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqzxdnnhp.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqzxdnnhp.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqzxdnnhp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqzxdnnhp.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqzxdnnhp.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqzxdnnhp.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqzxdnnhp.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphqekmoob.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphqekmoob.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphqekmoob.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphqekmoob.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphqekmoob.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphqekmoob.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphqekmoob.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphqekmoob.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphqekmoob.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphqekmoob.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphqekmoob.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphqekmoob.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphqekmoob.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp99hlyh2j.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp99hlyh2j.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp99hlyh2j.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp99hlyh2j.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp99hlyh2j.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp99hlyh2j.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp99hlyh2j.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp99hlyh2j.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp99hlyh2j.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp99hlyh2j.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp99hlyh2j.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp99hlyh2j.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp99hlyh2j.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqx_2hr1v.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqx_2hr1v.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqx_2hr1v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqx_2hr1v.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqx_2hr1v.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqx_2hr1v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqx_2hr1v.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqx_2hr1v.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqx_2hr1v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqx_2hr1v.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqx_2hr1v.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqx_2hr1v.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqx_2hr1v.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9b_224d0.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9b_224d0.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9b_224d0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9b_224d0.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9b_224d0.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9b_224d0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9b_224d0.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9b_224d0.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9b_224d0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9b_224d0.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9b_224d0.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9b_224d0.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9b_224d0.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2d_5fg2y.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2d_5fg2y.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2d_5fg2y.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2d_5fg2y.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2d_5fg2y.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2d_5fg2y.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2d_5fg2y.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2d_5fg2y.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2d_5fg2y.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2d_5fg2y.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2d_5fg2y.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2d_5fg2y.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2d_5fg2y.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxvs3ldjt.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxvs3ldjt.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxvs3ldjt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxvs3ldjt.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxvs3ldjt.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxvs3ldjt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxvs3ldjt.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxvs3ldjt.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxvs3ldjt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxvs3ldjt.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxvs3ldjt.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxvs3ldjt.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxvs3ldjt.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjk6jjczc.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjk6jjczc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjk6jjczc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjk6jjczc.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjk6jjczc.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjk6jjczc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjk6jjczc.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjk6jjczc.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjk6jjczc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjk6jjczc.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjk6jjczc.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjk6jjczc.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjk6jjczc.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd2x7fv_p.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd2x7fv_p.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd2x7fv_p.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpd2x7fv_p.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd2x7fv_p.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd2x7fv_p.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpd2x7fv_p.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd2x7fv_p.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd2x7fv_p.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpd2x7fv_p.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd2x7fv_p.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd2x7fv_p.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd2x7fv_p.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn26kgsks.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn26kgsks.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn26kgsks.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn26kgsks.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn26kgsks.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn26kgsks.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn26kgsks.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn26kgsks.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn26kgsks.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn26kgsks.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn26kgsks.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn26kgsks.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn26kgsks.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzbkeuhfm.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzbkeuhfm.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzbkeuhfm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzbkeuhfm.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzbkeuhfm.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzbkeuhfm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzbkeuhfm.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzbkeuhfm.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzbkeuhfm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzbkeuhfm.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzbkeuhfm.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzbkeuhfm.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzbkeuhfm.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm5b66x2v.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm5b66x2v.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm5b66x2v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpm5b66x2v.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm5b66x2v.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm5b66x2v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpm5b66x2v.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm5b66x2v.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm5b66x2v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpm5b66x2v.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm5b66x2v.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm5b66x2v.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm5b66x2v.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp05x9t1md.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp05x9t1md.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp05x9t1md.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp05x9t1md.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp05x9t1md.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp05x9t1md.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp05x9t1md.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp05x9t1md.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp05x9t1md.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp05x9t1md.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp05x9t1md.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp05x9t1md.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp05x9t1md.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpncfpeguu.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpncfpeguu.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpncfpeguu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpncfpeguu.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpncfpeguu.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpncfpeguu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpncfpeguu.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpncfpeguu.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpncfpeguu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpncfpeguu.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpncfpeguu.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpncfpeguu.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpncfpeguu.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcptj_v7o.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcptj_v7o.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcptj_v7o.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpcptj_v7o.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcptj_v7o.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcptj_v7o.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpcptj_v7o.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcptj_v7o.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcptj_v7o.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpcptj_v7o.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcptj_v7o.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcptj_v7o.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcptj_v7o.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdhktrd0v.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdhktrd0v.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdhktrd0v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdhktrd0v.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdhktrd0v.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdhktrd0v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdhktrd0v.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdhktrd0v.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdhktrd0v.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdhktrd0v.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdhktrd0v.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdhktrd0v.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdhktrd0v.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxsjo03_t.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxsjo03_t.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxsjo03_t.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxsjo03_t.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxsjo03_t.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxsjo03_t.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxsjo03_t.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxsjo03_t.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxsjo03_t.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpxsjo03_t.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxsjo03_t.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxsjo03_t.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxsjo03_t.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4sonqyr_.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4sonqyr_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4sonqyr_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4sonqyr_.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4sonqyr_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4sonqyr_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4sonqyr_.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4sonqyr_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4sonqyr_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4sonqyr_.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4sonqyr_.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4sonqyr_.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4sonqyr_.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x%2 == 0\n     \
    \   return x\n    elseif y%2 == 0\n        return y\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t\
    @test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6b39b66z.jl:25\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6b39b66z.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6b39b66z.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp6b39b66z.jl:26\n  Expression: candidate(13, 12) == -1\n  \
    \ Evaluated: 12 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6b39b66z.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6b39b66z.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp6b39b66z.jl:28\n  Expression: candidate(5234, 5233) == -1\n\
    \   Evaluated: 5234 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6b39b66z.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6b39b66z.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp6b39b66z.jl:29\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6b39b66z.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6b39b66z.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp6b39b66z.jl:30\n  Expression: candidate(27, 10) == -1\n  \
    \ Evaluated: 10 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n "
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6b39b66z.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdk__dlwj.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdk__dlwj.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdk__dlwj.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdk__dlwj.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdk__dlwj.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdk__dlwj.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpdk__dlwj.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdk__dlwj.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdk__dlwj.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdk__dlwj.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2ecz02ea.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ecz02ea.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ecz02ea.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2ecz02ea.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ecz02ea.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ecz02ea.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2ecz02ea.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ecz02ea.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ecz02ea.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2ecz02ea.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ecz02ea.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ecz02ea.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2ecz02ea.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmperq_mn3m.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmperq_mn3m.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmperq_mn3m.jl:25\ntest set: Test\
    \ Failed at /tmp/tmperq_mn3m.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmperq_mn3m.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmperq_mn3m.jl:25\ntest set: Test\
    \ Failed at /tmp/tmperq_mn3m.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmperq_mn3m.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmperq_mn3m.jl:25\ntest set: Test\
    \ Failed at /tmp/tmperq_mn3m.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmperq_mn3m.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmperq_mn3m.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmperq_mn3m.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy70_qpz7.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy70_qpz7.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy70_qpz7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpy70_qpz7.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy70_qpz7.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy70_qpz7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpy70_qpz7.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy70_qpz7.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy70_qpz7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpy70_qpz7.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy70_qpz7.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy70_qpz7.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy70_qpz7.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2iyu21c2.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2iyu21c2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2iyu21c2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2iyu21c2.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2iyu21c2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2iyu21c2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2iyu21c2.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2iyu21c2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2iyu21c2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2iyu21c2.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2iyu21c2.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2iyu21c2.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2iyu21c2.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsise3ev2.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsise3ev2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsise3ev2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsise3ev2.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsise3ev2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsise3ev2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsise3ev2.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsise3ev2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsise3ev2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsise3ev2.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsise3ev2.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsise3ev2.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsise3ev2.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr03_7l0_.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr03_7l0_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr03_7l0_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpr03_7l0_.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr03_7l0_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr03_7l0_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpr03_7l0_.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr03_7l0_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr03_7l0_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpr03_7l0_.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr03_7l0_.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr03_7l0_.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr03_7l0_.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqx7pwm__.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqx7pwm__.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqx7pwm__.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqx7pwm__.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqx7pwm__.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqx7pwm__.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqx7pwm__.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqx7pwm__.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqx7pwm__.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqx7pwm__.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqx7pwm__.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqx7pwm__.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqx7pwm__.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw33gl805.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw33gl805.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw33gl805.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpw33gl805.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw33gl805.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw33gl805.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpw33gl805.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw33gl805.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw33gl805.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpw33gl805.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw33gl805.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw33gl805.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw33gl805.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpveibmj38.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpveibmj38.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpveibmj38.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpveibmj38.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpveibmj38.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpveibmj38.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpveibmj38.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpveibmj38.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpveibmj38.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpveibmj38.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpveibmj38.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpveibmj38.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpveibmj38.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk24fbfb2.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk24fbfb2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk24fbfb2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk24fbfb2.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk24fbfb2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk24fbfb2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk24fbfb2.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk24fbfb2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk24fbfb2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk24fbfb2.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk24fbfb2.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk24fbfb2.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk24fbfb2.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0mkyhikx.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mkyhikx.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mkyhikx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp0mkyhikx.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mkyhikx.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mkyhikx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp0mkyhikx.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mkyhikx.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mkyhikx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp0mkyhikx.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mkyhikx.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mkyhikx.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0mkyhikx.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppgsvh9k_.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppgsvh9k_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppgsvh9k_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppgsvh9k_.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppgsvh9k_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppgsvh9k_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppgsvh9k_.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppgsvh9k_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppgsvh9k_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmppgsvh9k_.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppgsvh9k_.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppgsvh9k_.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppgsvh9k_.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqcg8wm6u.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqcg8wm6u.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqcg8wm6u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqcg8wm6u.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqcg8wm6u.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqcg8wm6u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqcg8wm6u.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqcg8wm6u.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqcg8wm6u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqcg8wm6u.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqcg8wm6u.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqcg8wm6u.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqcg8wm6u.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_mld_et9.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_mld_et9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_mld_et9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_mld_et9.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_mld_et9.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_mld_et9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_mld_et9.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_mld_et9.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_mld_et9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_mld_et9.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_mld_et9.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_mld_et9.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_mld_et9.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjo9xgnj4.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjo9xgnj4.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjo9xgnj4.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpjo9xgnj4.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjo9xgnj4.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjo9xgnj4.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpjo9xgnj4.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjo9xgnj4.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjo9xgnj4.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjo9xgnj4.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi1quur8o.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi1quur8o.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi1quur8o.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi1quur8o.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi1quur8o.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi1quur8o.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi1quur8o.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi1quur8o.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi1quur8o.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi1quur8o.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi1quur8o.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi1quur8o.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi1quur8o.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnah3umgs.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnah3umgs.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnah3umgs.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnah3umgs.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnah3umgs.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnah3umgs.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnah3umgs.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnah3umgs.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnah3umgs.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnah3umgs.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnah3umgs.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnah3umgs.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnah3umgs.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkkqrpgag.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkkqrpgag.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkkqrpgag.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpkkqrpgag.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkkqrpgag.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkkqrpgag.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpkkqrpgag.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkkqrpgag.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkkqrpgag.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpkkqrpgag.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkkqrpgag.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkkqrpgag.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkkqrpgag.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5lx6o914.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5lx6o914.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5lx6o914.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp5lx6o914.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5lx6o914.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5lx6o914.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp5lx6o914.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5lx6o914.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5lx6o914.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5lx6o914.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkmiv04ui.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkmiv04ui.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkmiv04ui.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpkmiv04ui.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkmiv04ui.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkmiv04ui.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpkmiv04ui.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkmiv04ui.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkmiv04ui.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpkmiv04ui.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkmiv04ui.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkmiv04ui.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkmiv04ui.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaj04xdzm.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj04xdzm.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj04xdzm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpaj04xdzm.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj04xdzm.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj04xdzm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpaj04xdzm.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj04xdzm.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj04xdzm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpaj04xdzm.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaj04xdzm.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaj04xdzm.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaj04xdzm.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3cp3gnkm.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3cp3gnkm.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3cp3gnkm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3cp3gnkm.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3cp3gnkm.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3cp3gnkm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3cp3gnkm.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3cp3gnkm.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3cp3gnkm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3cp3gnkm.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3cp3gnkm.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3cp3gnkm.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3cp3gnkm.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd4hplrei.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd4hplrei.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd4hplrei.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpd4hplrei.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd4hplrei.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd4hplrei.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpd4hplrei.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd4hplrei.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd4hplrei.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpd4hplrei.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd4hplrei.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd4hplrei.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd4hplrei.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgo_5ga34.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgo_5ga34.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgo_5ga34.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgo_5ga34.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgo_5ga34.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgo_5ga34.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgo_5ga34.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgo_5ga34.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgo_5ga34.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgo_5ga34.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgo_5ga34.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgo_5ga34.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgo_5ga34.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcq_xj85s.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcq_xj85s.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcq_xj85s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpcq_xj85s.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcq_xj85s.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcq_xj85s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpcq_xj85s.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcq_xj85s.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcq_xj85s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpcq_xj85s.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcq_xj85s.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcq_xj85s.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcq_xj85s.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplqil5qpe.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplqil5qpe.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplqil5qpe.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplqil5qpe.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplqil5qpe.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplqil5qpe.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplqil5qpe.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplqil5qpe.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplqil5qpe.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplqil5qpe.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplqil5qpe.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplqil5qpe.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplqil5qpe.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk099hfvc.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk099hfvc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk099hfvc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk099hfvc.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk099hfvc.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk099hfvc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk099hfvc.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk099hfvc.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk099hfvc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk099hfvc.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk099hfvc.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk099hfvc.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk099hfvc.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk_2iwfjn.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk_2iwfjn.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk_2iwfjn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk_2iwfjn.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk_2iwfjn.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk_2iwfjn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk_2iwfjn.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk_2iwfjn.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk_2iwfjn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk_2iwfjn.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk_2iwfjn.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk_2iwfjn.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk_2iwfjn.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdsulr_49.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdsulr_49.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdsulr_49.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdsulr_49.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdsulr_49.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdsulr_49.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdsulr_49.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdsulr_49.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdsulr_49.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpdsulr_49.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdsulr_49.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdsulr_49.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdsulr_49.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5mj_hcei.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5mj_hcei.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5mj_hcei.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp5mj_hcei.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5mj_hcei.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5mj_hcei.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp5mj_hcei.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5mj_hcei.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5mj_hcei.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp5mj_hcei.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5mj_hcei.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5mj_hcei.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5mj_hcei.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqe4eobm2.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqe4eobm2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqe4eobm2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqe4eobm2.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqe4eobm2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqe4eobm2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqe4eobm2.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqe4eobm2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqe4eobm2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqe4eobm2.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqe4eobm2.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqe4eobm2.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqe4eobm2.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqylewkdx.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqylewkdx.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqylewkdx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqylewkdx.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqylewkdx.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqylewkdx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqylewkdx.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqylewkdx.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqylewkdx.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqylewkdx.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqylewkdx.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqylewkdx.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqylewkdx.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw0hrr4im.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw0hrr4im.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw0hrr4im.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpw0hrr4im.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw0hrr4im.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw0hrr4im.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpw0hrr4im.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw0hrr4im.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw0hrr4im.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpw0hrr4im.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw0hrr4im.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw0hrr4im.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw0hrr4im.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplhevcuxt.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplhevcuxt.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplhevcuxt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplhevcuxt.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplhevcuxt.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplhevcuxt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplhevcuxt.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplhevcuxt.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplhevcuxt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmplhevcuxt.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplhevcuxt.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplhevcuxt.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplhevcuxt.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzakq22ib.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzakq22ib.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzakq22ib.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzakq22ib.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzakq22ib.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzakq22ib.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzakq22ib.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzakq22ib.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzakq22ib.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzakq22ib.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzakq22ib.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzakq22ib.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzakq22ib.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2s5xpex2.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2s5xpex2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2s5xpex2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2s5xpex2.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2s5xpex2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2s5xpex2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2s5xpex2.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2s5xpex2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2s5xpex2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2s5xpex2.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2s5xpex2.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2s5xpex2.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2s5xpex2.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7atpq112.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7atpq112.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7atpq112.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7atpq112.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7atpq112.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7atpq112.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7atpq112.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7atpq112.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7atpq112.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7atpq112.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7atpq112.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7atpq112.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7atpq112.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo9hbp5wb.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo9hbp5wb.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo9hbp5wb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo9hbp5wb.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo9hbp5wb.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo9hbp5wb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo9hbp5wb.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo9hbp5wb.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo9hbp5wb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo9hbp5wb.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo9hbp5wb.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo9hbp5wb.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo9hbp5wb.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf_os8vy9.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_os8vy9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_os8vy9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpf_os8vy9.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_os8vy9.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_os8vy9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpf_os8vy9.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_os8vy9.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_os8vy9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpf_os8vy9.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf_os8vy9.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf_os8vy9.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf_os8vy9.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if y % 2 == 0\n        return y\n    else\n        return y\
    \ - 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4b2eaxrl.jl:32\n  Expression: candidate(7,\
    \ 7) == -1\n   Evaluated: 6 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4b2eaxrl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4b2eaxrl.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4b2eaxrl.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpayz_fqra.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpayz_fqra.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpayz_fqra.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpayz_fqra.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpayz_fqra.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpayz_fqra.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpayz_fqra.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpayz_fqra.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpayz_fqra.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpayz_fqra.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2ssfymyk.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ssfymyk.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ssfymyk.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2ssfymyk.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ssfymyk.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ssfymyk.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2ssfymyk.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ssfymyk.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ssfymyk.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2ssfymyk.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ssfymyk.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ssfymyk.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2ssfymyk.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpctpmzjuh.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpctpmzjuh.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpctpmzjuh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpctpmzjuh.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpctpmzjuh.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpctpmzjuh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpctpmzjuh.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpctpmzjuh.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpctpmzjuh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpctpmzjuh.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpctpmzjuh.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpctpmzjuh.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpctpmzjuh.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpan75lgue.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpan75lgue.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpan75lgue.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpan75lgue.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpan75lgue.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpan75lgue.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpan75lgue.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpan75lgue.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpan75lgue.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpan75lgue.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpan75lgue.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpan75lgue.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpan75lgue.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsk3fhz0b.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsk3fhz0b.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsk3fhz0b.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpsk3fhz0b.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsk3fhz0b.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsk3fhz0b.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpsk3fhz0b.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsk3fhz0b.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsk3fhz0b.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsk3fhz0b.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpppid68z6.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpppid68z6.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpppid68z6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpppid68z6.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpppid68z6.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpppid68z6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpppid68z6.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpppid68z6.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpppid68z6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpppid68z6.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpppid68z6.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpppid68z6.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpppid68z6.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi982d3m_.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi982d3m_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi982d3m_.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpi982d3m_.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi982d3m_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi982d3m_.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpi982d3m_.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi982d3m_.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi982d3m_.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi982d3m_.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprklr7jc0.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprklr7jc0.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprklr7jc0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprklr7jc0.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprklr7jc0.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprklr7jc0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprklr7jc0.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprklr7jc0.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprklr7jc0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprklr7jc0.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprklr7jc0.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprklr7jc0.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprklr7jc0.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk2l7e8cz.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk2l7e8cz.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk2l7e8cz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk2l7e8cz.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk2l7e8cz.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk2l7e8cz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk2l7e8cz.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk2l7e8cz.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk2l7e8cz.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpk2l7e8cz.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk2l7e8cz.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk2l7e8cz.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk2l7e8cz.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4m3wq972.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4m3wq972.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4m3wq972.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4m3wq972.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4m3wq972.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4m3wq972.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4m3wq972.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4m3wq972.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4m3wq972.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4m3wq972.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4m3wq972.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4m3wq972.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4m3wq972.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_speshld.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_speshld.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_speshld.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_speshld.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_speshld.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_speshld.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_speshld.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_speshld.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_speshld.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_speshld.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_speshld.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_speshld.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_speshld.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn32o2f6h.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn32o2f6h.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn32o2f6h.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn32o2f6h.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn32o2f6h.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn32o2f6h.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn32o2f6h.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn32o2f6h.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn32o2f6h.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn32o2f6h.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn32o2f6h.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn32o2f6h.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn32o2f6h.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp0slohj2.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp0slohj2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0slohj2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpp0slohj2.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp0slohj2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0slohj2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpp0slohj2.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp0slohj2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0slohj2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpp0slohj2.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp0slohj2.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0slohj2.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp0slohj2.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiwyyd8uf.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwyyd8uf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwyyd8uf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpiwyyd8uf.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwyyd8uf.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwyyd8uf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpiwyyd8uf.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwyyd8uf.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwyyd8uf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpiwyyd8uf.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwyyd8uf.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwyyd8uf.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiwyyd8uf.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpibymm_ju.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpibymm_ju.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpibymm_ju.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpibymm_ju.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpibymm_ju.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpibymm_ju.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpibymm_ju.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpibymm_ju.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpibymm_ju.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpibymm_ju.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpibymm_ju.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpibymm_ju.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpibymm_ju.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgfpe29_g.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgfpe29_g.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgfpe29_g.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpgfpe29_g.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgfpe29_g.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgfpe29_g.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpgfpe29_g.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgfpe29_g.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgfpe29_g.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgfpe29_g.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvuted1t7.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvuted1t7.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvuted1t7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvuted1t7.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvuted1t7.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvuted1t7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvuted1t7.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvuted1t7.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvuted1t7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvuted1t7.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvuted1t7.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvuted1t7.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvuted1t7.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd79nnfih.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd79nnfih.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd79nnfih.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpd79nnfih.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd79nnfih.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd79nnfih.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpd79nnfih.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd79nnfih.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd79nnfih.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpd79nnfih.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd79nnfih.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd79nnfih.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd79nnfih.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgobgyg4o.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgobgyg4o.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgobgyg4o.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpgobgyg4o.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgobgyg4o.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgobgyg4o.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpgobgyg4o.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgobgyg4o.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgobgyg4o.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgobgyg4o.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptrxxndq7.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptrxxndq7.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptrxxndq7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptrxxndq7.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptrxxndq7.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptrxxndq7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptrxxndq7.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptrxxndq7.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptrxxndq7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptrxxndq7.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptrxxndq7.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptrxxndq7.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptrxxndq7.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp51bxtx3d.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp51bxtx3d.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp51bxtx3d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp51bxtx3d.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp51bxtx3d.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp51bxtx3d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp51bxtx3d.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp51bxtx3d.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp51bxtx3d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp51bxtx3d.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp51bxtx3d.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp51bxtx3d.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp51bxtx3d.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvy1gwzk_.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvy1gwzk_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvy1gwzk_.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpvy1gwzk_.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvy1gwzk_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvy1gwzk_.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpvy1gwzk_.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvy1gwzk_.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvy1gwzk_.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvy1gwzk_.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if y % 2 == 0\n        return y\n    else\n        return y\
    \ - 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp23mynrpf.jl:32\n  Expression: candidate(7,\
    \ 7) == -1\n   Evaluated: 6 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp23mynrpf.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp23mynrpf.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp23mynrpf.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp03sjl6z0.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp03sjl6z0.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp03sjl6z0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp03sjl6z0.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp03sjl6z0.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp03sjl6z0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp03sjl6z0.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp03sjl6z0.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp03sjl6z0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp03sjl6z0.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp03sjl6z0.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp03sjl6z0.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp03sjl6z0.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv4d_wayn.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv4d_wayn.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv4d_wayn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv4d_wayn.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv4d_wayn.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv4d_wayn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv4d_wayn.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv4d_wayn.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv4d_wayn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpv4d_wayn.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv4d_wayn.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv4d_wayn.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv4d_wayn.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3jjsodo2.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3jjsodo2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3jjsodo2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3jjsodo2.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3jjsodo2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3jjsodo2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3jjsodo2.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3jjsodo2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3jjsodo2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3jjsodo2.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3jjsodo2.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3jjsodo2.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3jjsodo2.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4i0e6io1.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4i0e6io1.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4i0e6io1.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4i0e6io1.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4i0e6io1.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4i0e6io1.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4i0e6io1.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4i0e6io1.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4i0e6io1.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4i0e6io1.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4i0e6io1.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4i0e6io1.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4i0e6io1.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo1lpquor.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo1lpquor.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo1lpquor.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo1lpquor.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo1lpquor.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo1lpquor.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo1lpquor.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo1lpquor.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo1lpquor.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo1lpquor.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo1lpquor.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo1lpquor.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo1lpquor.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8yhde9s3.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yhde9s3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yhde9s3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8yhde9s3.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yhde9s3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yhde9s3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8yhde9s3.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yhde9s3.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yhde9s3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8yhde9s3.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yhde9s3.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yhde9s3.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8yhde9s3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfaptxwu_.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfaptxwu_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfaptxwu_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfaptxwu_.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfaptxwu_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfaptxwu_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfaptxwu_.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfaptxwu_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfaptxwu_.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfaptxwu_.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfaptxwu_.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfaptxwu_.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfaptxwu_.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphd8yes1c.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphd8yes1c.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphd8yes1c.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphd8yes1c.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphd8yes1c.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphd8yes1c.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphd8yes1c.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphd8yes1c.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphd8yes1c.jl:25\ntest set: Test\
    \ Failed at /tmp/tmphd8yes1c.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphd8yes1c.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphd8yes1c.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphd8yes1c.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi43bibdt.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi43bibdt.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi43bibdt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi43bibdt.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi43bibdt.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi43bibdt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi43bibdt.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi43bibdt.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi43bibdt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi43bibdt.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi43bibdt.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi43bibdt.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi43bibdt.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4w43g36c.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4w43g36c.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4w43g36c.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4w43g36c.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4w43g36c.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4w43g36c.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4w43g36c.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4w43g36c.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4w43g36c.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4w43g36c.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4w43g36c.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4w43g36c.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4w43g36c.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_eufhma6.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_eufhma6.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_eufhma6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_eufhma6.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_eufhma6.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_eufhma6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_eufhma6.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_eufhma6.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_eufhma6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_eufhma6.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_eufhma6.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_eufhma6.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_eufhma6.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy0ledvi_.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy0ledvi_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy0ledvi_.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpy0ledvi_.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy0ledvi_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy0ledvi_.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpy0ledvi_.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy0ledvi_.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy0ledvi_.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy0ledvi_.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2ra3p80g.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ra3p80g.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ra3p80g.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2ra3p80g.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ra3p80g.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ra3p80g.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2ra3p80g.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ra3p80g.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ra3p80g.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2ra3p80g.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ra3p80g.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ra3p80g.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2ra3p80g.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsa1wkmdd.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsa1wkmdd.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsa1wkmdd.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpsa1wkmdd.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsa1wkmdd.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsa1wkmdd.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpsa1wkmdd.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsa1wkmdd.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsa1wkmdd.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsa1wkmdd.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpat5inzhn.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpat5inzhn.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpat5inzhn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpat5inzhn.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpat5inzhn.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpat5inzhn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpat5inzhn.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpat5inzhn.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpat5inzhn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpat5inzhn.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpat5inzhn.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpat5inzhn.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpat5inzhn.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaw8fr930.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaw8fr930.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaw8fr930.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpaw8fr930.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaw8fr930.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaw8fr930.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpaw8fr930.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaw8fr930.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaw8fr930.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpaw8fr930.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpaw8fr930.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpaw8fr930.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaw8fr930.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzo81gxrg.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzo81gxrg.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzo81gxrg.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpzo81gxrg.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzo81gxrg.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzo81gxrg.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpzo81gxrg.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzo81gxrg.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzo81gxrg.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzo81gxrg.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoa2fe2ww.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoa2fe2ww.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoa2fe2ww.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpoa2fe2ww.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoa2fe2ww.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoa2fe2ww.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpoa2fe2ww.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoa2fe2ww.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoa2fe2ww.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpoa2fe2ww.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoa2fe2ww.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoa2fe2ww.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoa2fe2ww.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpysoltjat.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpysoltjat.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpysoltjat.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpysoltjat.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpysoltjat.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpysoltjat.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpysoltjat.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpysoltjat.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpysoltjat.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpysoltjat.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpysoltjat.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpysoltjat.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpysoltjat.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbrxoi70i.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbrxoi70i.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbrxoi70i.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbrxoi70i.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbrxoi70i.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbrxoi70i.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbrxoi70i.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbrxoi70i.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbrxoi70i.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpbrxoi70i.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbrxoi70i.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbrxoi70i.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbrxoi70i.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgj86_hbm.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgj86_hbm.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgj86_hbm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgj86_hbm.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgj86_hbm.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgj86_hbm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgj86_hbm.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgj86_hbm.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgj86_hbm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgj86_hbm.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgj86_hbm.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgj86_hbm.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgj86_hbm.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzdtoi72l.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzdtoi72l.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzdtoi72l.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpzdtoi72l.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzdtoi72l.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzdtoi72l.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpzdtoi72l.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzdtoi72l.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzdtoi72l.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzdtoi72l.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3ndymho8.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3ndymho8.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3ndymho8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3ndymho8.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3ndymho8.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3ndymho8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3ndymho8.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3ndymho8.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3ndymho8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3ndymho8.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3ndymho8.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3ndymho8.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3ndymho8.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeld7rfyl.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeld7rfyl.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeld7rfyl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpeld7rfyl.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeld7rfyl.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeld7rfyl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpeld7rfyl.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeld7rfyl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeld7rfyl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpeld7rfyl.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeld7rfyl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeld7rfyl.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeld7rfyl.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuxnhl573.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuxnhl573.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuxnhl573.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpuxnhl573.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuxnhl573.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuxnhl573.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpuxnhl573.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuxnhl573.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuxnhl573.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpuxnhl573.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuxnhl573.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuxnhl573.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuxnhl573.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz5cjt7a1.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz5cjt7a1.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz5cjt7a1.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpz5cjt7a1.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz5cjt7a1.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz5cjt7a1.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpz5cjt7a1.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz5cjt7a1.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz5cjt7a1.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpz5cjt7a1.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz5cjt7a1.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz5cjt7a1.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz5cjt7a1.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7em9uuwb.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7em9uuwb.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7em9uuwb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7em9uuwb.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7em9uuwb.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7em9uuwb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7em9uuwb.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7em9uuwb.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7em9uuwb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp7em9uuwb.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7em9uuwb.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7em9uuwb.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7em9uuwb.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2e2eeh2w.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2e2eeh2w.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2e2eeh2w.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2e2eeh2w.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2e2eeh2w.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2e2eeh2w.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2e2eeh2w.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2e2eeh2w.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2e2eeh2w.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2e2eeh2w.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2e2eeh2w.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2e2eeh2w.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2e2eeh2w.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp264hk7l4.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp264hk7l4.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp264hk7l4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp264hk7l4.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp264hk7l4.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp264hk7l4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp264hk7l4.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp264hk7l4.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp264hk7l4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp264hk7l4.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp264hk7l4.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp264hk7l4.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp264hk7l4.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpexsxckiu.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpexsxckiu.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpexsxckiu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpexsxckiu.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpexsxckiu.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpexsxckiu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpexsxckiu.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpexsxckiu.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpexsxckiu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpexsxckiu.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpexsxckiu.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpexsxckiu.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpexsxckiu.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm533ekdu.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm533ekdu.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm533ekdu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpm533ekdu.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm533ekdu.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm533ekdu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpm533ekdu.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm533ekdu.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm533ekdu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpm533ekdu.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm533ekdu.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm533ekdu.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm533ekdu.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9yv3sd9n.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9yv3sd9n.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9yv3sd9n.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9yv3sd9n.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9yv3sd9n.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9yv3sd9n.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9yv3sd9n.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9yv3sd9n.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9yv3sd9n.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9yv3sd9n.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9yv3sd9n.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9yv3sd9n.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9yv3sd9n.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpku8xul5c.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpku8xul5c.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpku8xul5c.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpku8xul5c.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpku8xul5c.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpku8xul5c.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpku8xul5c.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpku8xul5c.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpku8xul5c.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpku8xul5c.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpku8xul5c.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpku8xul5c.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpku8xul5c.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2uw0fcgp.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2uw0fcgp.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2uw0fcgp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2uw0fcgp.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2uw0fcgp.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2uw0fcgp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2uw0fcgp.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2uw0fcgp.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2uw0fcgp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2uw0fcgp.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2uw0fcgp.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2uw0fcgp.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2uw0fcgp.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpee9hamvh.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpee9hamvh.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpee9hamvh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpee9hamvh.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpee9hamvh.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpee9hamvh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpee9hamvh.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpee9hamvh.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpee9hamvh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpee9hamvh.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpee9hamvh.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpee9hamvh.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpee9hamvh.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp57yxsifv.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp57yxsifv.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp57yxsifv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp57yxsifv.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp57yxsifv.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp57yxsifv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp57yxsifv.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp57yxsifv.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp57yxsifv.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp57yxsifv.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp57yxsifv.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp57yxsifv.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp57yxsifv.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvszsoqci.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvszsoqci.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvszsoqci.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpvszsoqci.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvszsoqci.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvszsoqci.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpvszsoqci.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvszsoqci.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvszsoqci.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvszsoqci.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb0ethm0f.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0ethm0f.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0ethm0f.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpb0ethm0f.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0ethm0f.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0ethm0f.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpb0ethm0f.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0ethm0f.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0ethm0f.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpb0ethm0f.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0ethm0f.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0ethm0f.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb0ethm0f.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuwcefrjb.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuwcefrjb.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuwcefrjb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpuwcefrjb.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuwcefrjb.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuwcefrjb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpuwcefrjb.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuwcefrjb.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuwcefrjb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpuwcefrjb.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuwcefrjb.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuwcefrjb.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuwcefrjb.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprt2gzwam.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprt2gzwam.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprt2gzwam.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprt2gzwam.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprt2gzwam.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprt2gzwam.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprt2gzwam.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprt2gzwam.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprt2gzwam.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprt2gzwam.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprt2gzwam.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprt2gzwam.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprt2gzwam.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq82wnuwd.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq82wnuwd.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq82wnuwd.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpq82wnuwd.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq82wnuwd.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq82wnuwd.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpq82wnuwd.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq82wnuwd.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq82wnuwd.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq82wnuwd.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt56yqxe9.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt56yqxe9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt56yqxe9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpt56yqxe9.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt56yqxe9.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt56yqxe9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpt56yqxe9.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt56yqxe9.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt56yqxe9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpt56yqxe9.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt56yqxe9.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt56yqxe9.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt56yqxe9.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp918m4oz2.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp918m4oz2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp918m4oz2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp918m4oz2.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp918m4oz2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp918m4oz2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp918m4oz2.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp918m4oz2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp918m4oz2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp918m4oz2.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp918m4oz2.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp918m4oz2.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp918m4oz2.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3vwlm9a0.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3vwlm9a0.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3vwlm9a0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3vwlm9a0.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3vwlm9a0.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3vwlm9a0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3vwlm9a0.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3vwlm9a0.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3vwlm9a0.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3vwlm9a0.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3vwlm9a0.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3vwlm9a0.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3vwlm9a0.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvccoc_u3.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvccoc_u3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvccoc_u3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvccoc_u3.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvccoc_u3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvccoc_u3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvccoc_u3.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvccoc_u3.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvccoc_u3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvccoc_u3.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvccoc_u3.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvccoc_u3.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvccoc_u3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpixqvro2x.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpixqvro2x.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpixqvro2x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpixqvro2x.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpixqvro2x.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpixqvro2x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpixqvro2x.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpixqvro2x.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpixqvro2x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpixqvro2x.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpixqvro2x.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpixqvro2x.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpixqvro2x.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprrs7p2fw.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprrs7p2fw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprrs7p2fw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprrs7p2fw.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprrs7p2fw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprrs7p2fw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprrs7p2fw.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprrs7p2fw.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprrs7p2fw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmprrs7p2fw.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprrs7p2fw.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprrs7p2fw.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprrs7p2fw.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsjd8sg6o.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsjd8sg6o.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsjd8sg6o.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsjd8sg6o.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsjd8sg6o.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsjd8sg6o.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsjd8sg6o.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsjd8sg6o.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsjd8sg6o.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpsjd8sg6o.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsjd8sg6o.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsjd8sg6o.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsjd8sg6o.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwt8cyo2u.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwt8cyo2u.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwt8cyo2u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpwt8cyo2u.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwt8cyo2u.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwt8cyo2u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpwt8cyo2u.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwt8cyo2u.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwt8cyo2u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpwt8cyo2u.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwt8cyo2u.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwt8cyo2u.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwt8cyo2u.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpddddzfgf.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpddddzfgf.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpddddzfgf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpddddzfgf.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpddddzfgf.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpddddzfgf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpddddzfgf.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpddddzfgf.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpddddzfgf.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpddddzfgf.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpddddzfgf.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpddddzfgf.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpddddzfgf.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp22u869pw.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22u869pw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22u869pw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp22u869pw.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22u869pw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22u869pw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp22u869pw.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22u869pw.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22u869pw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp22u869pw.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp22u869pw.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp22u869pw.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp22u869pw.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpthtsr7kh.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpthtsr7kh.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpthtsr7kh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpthtsr7kh.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpthtsr7kh.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpthtsr7kh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpthtsr7kh.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpthtsr7kh.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpthtsr7kh.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpthtsr7kh.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpthtsr7kh.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpthtsr7kh.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpthtsr7kh.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvlysz417.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvlysz417.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvlysz417.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvlysz417.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvlysz417.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvlysz417.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvlysz417.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvlysz417.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvlysz417.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvlysz417.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvlysz417.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvlysz417.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvlysz417.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnyp2jnhw.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnyp2jnhw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnyp2jnhw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnyp2jnhw.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnyp2jnhw.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnyp2jnhw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnyp2jnhw.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnyp2jnhw.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnyp2jnhw.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnyp2jnhw.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnyp2jnhw.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnyp2jnhw.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnyp2jnhw.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1ijzl4yo.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ijzl4yo.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ijzl4yo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1ijzl4yo.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ijzl4yo.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ijzl4yo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1ijzl4yo.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ijzl4yo.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ijzl4yo.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp1ijzl4yo.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ijzl4yo.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ijzl4yo.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ijzl4yo.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8rjto2qs.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8rjto2qs.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8rjto2qs.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8rjto2qs.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8rjto2qs.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8rjto2qs.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8rjto2qs.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8rjto2qs.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8rjto2qs.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8rjto2qs.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8rjto2qs.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8rjto2qs.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8rjto2qs.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    for i in x:y\n        if i % 2 == 0\n            return i\n\
    \        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = choose_num;\n\t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) ==\
    \ -1)\n\t@test(candidate(33, 12354) == 12354)\n\t@test(candidate(5234, 5233) ==\
    \ -1)\n\t@test(candidate(6, 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7,\
    \ 7) == -1)\n\t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzc4df8mp.jl:27\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzc4df8mp.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzc4df8mp.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpzc4df8mp.jl:29\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzc4df8mp.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzc4df8mp.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpzc4df8mp.jl:31\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzc4df8mp.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzc4df8mp.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzc4df8mp.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqb7yyh55.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqb7yyh55.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqb7yyh55.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqb7yyh55.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqb7yyh55.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqb7yyh55.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqb7yyh55.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqb7yyh55.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqb7yyh55.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpqb7yyh55.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqb7yyh55.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqb7yyh55.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqb7yyh55.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9xl4o657.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9xl4o657.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9xl4o657.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9xl4o657.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9xl4o657.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9xl4o657.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9xl4o657.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9xl4o657.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9xl4o657.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp9xl4o657.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9xl4o657.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9xl4o657.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9xl4o657.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo202tgem.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo202tgem.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo202tgem.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo202tgem.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo202tgem.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo202tgem.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo202tgem.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo202tgem.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo202tgem.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpo202tgem.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo202tgem.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo202tgem.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo202tgem.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2mrxon21.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2mrxon21.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2mrxon21.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2mrxon21.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2mrxon21.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2mrxon21.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2mrxon21.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2mrxon21.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2mrxon21.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2mrxon21.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2mrxon21.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2mrxon21.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2mrxon21.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp54c73kiy.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp54c73kiy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp54c73kiy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp54c73kiy.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp54c73kiy.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp54c73kiy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp54c73kiy.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp54c73kiy.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp54c73kiy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp54c73kiy.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp54c73kiy.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp54c73kiy.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp54c73kiy.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf6a54qjc.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf6a54qjc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf6a54qjc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpf6a54qjc.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf6a54qjc.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf6a54qjc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpf6a54qjc.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf6a54qjc.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf6a54qjc.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpf6a54qjc.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf6a54qjc.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf6a54qjc.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf6a54qjc.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpljhpkpv5.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpljhpkpv5.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpljhpkpv5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpljhpkpv5.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpljhpkpv5.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpljhpkpv5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpljhpkpv5.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpljhpkpv5.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpljhpkpv5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpljhpkpv5.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpljhpkpv5.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpljhpkpv5.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpljhpkpv5.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2d930r_a.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2d930r_a.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2d930r_a.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2d930r_a.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2d930r_a.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2d930r_a.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2d930r_a.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2d930r_a.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2d930r_a.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2d930r_a.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2d930r_a.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2d930r_a.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2d930r_a.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x < y\n        for\
    \ i in x:y\n            if i % 2 == 0\n                return i\n            end\n\
    \        end\n    else\n        for i in y:x\n            if i % 2 == 0\n    \
    \            return i\n            end\n        end\n    end\n    return -1\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
    \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
    \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
    \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
    \ 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3huznnhs.jl:32\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3huznnhs.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3huznnhs.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp3huznnhs.jl:33\n  Expression: candidate(13, 12) == -1\n  \
    \ Evaluated: 12 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3huznnhs.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3huznnhs.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp3huznnhs.jl:34\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3huznnhs.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3huznnhs.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp3huznnhs.jl:35\n  Expression: candidate(5234, 5233) == -1\n\
    \   Evaluated: 5234 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3huznnhs.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3huznnhs.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp3huznnhs.jl:36\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro ex"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3huznnhs.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnulhl3jp.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnulhl3jp.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnulhl3jp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnulhl3jp.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnulhl3jp.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnulhl3jp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnulhl3jp.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnulhl3jp.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnulhl3jp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnulhl3jp.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnulhl3jp.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnulhl3jp.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnulhl3jp.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptqx3ig4s.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptqx3ig4s.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptqx3ig4s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptqx3ig4s.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptqx3ig4s.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptqx3ig4s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptqx3ig4s.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptqx3ig4s.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptqx3ig4s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptqx3ig4s.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptqx3ig4s.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptqx3ig4s.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptqx3ig4s.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpamahsoq3.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpamahsoq3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpamahsoq3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpamahsoq3.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpamahsoq3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpamahsoq3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpamahsoq3.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpamahsoq3.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpamahsoq3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpamahsoq3.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpamahsoq3.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpamahsoq3.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpamahsoq3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptxoaiyef.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptxoaiyef.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptxoaiyef.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptxoaiyef.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptxoaiyef.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptxoaiyef.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptxoaiyef.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptxoaiyef.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptxoaiyef.jl:25\ntest set: Test\
    \ Failed at /tmp/tmptxoaiyef.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptxoaiyef.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptxoaiyef.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptxoaiyef.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn31pycwu.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn31pycwu.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn31pycwu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn31pycwu.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn31pycwu.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn31pycwu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn31pycwu.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn31pycwu.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn31pycwu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn31pycwu.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn31pycwu.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn31pycwu.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn31pycwu.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5gtgqolu.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gtgqolu.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gtgqolu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp5gtgqolu.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gtgqolu.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gtgqolu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp5gtgqolu.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gtgqolu.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gtgqolu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp5gtgqolu.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gtgqolu.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gtgqolu.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5gtgqolu.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm67m19e6.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm67m19e6.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm67m19e6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpm67m19e6.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm67m19e6.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm67m19e6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpm67m19e6.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm67m19e6.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm67m19e6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpm67m19e6.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm67m19e6.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm67m19e6.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm67m19e6.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8bwj1kfs.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8bwj1kfs.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8bwj1kfs.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8bwj1kfs.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8bwj1kfs.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8bwj1kfs.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8bwj1kfs.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8bwj1kfs.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8bwj1kfs.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8bwj1kfs.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8bwj1kfs.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8bwj1kfs.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8bwj1kfs.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzjh4gjlb.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzjh4gjlb.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzjh4gjlb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzjh4gjlb.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzjh4gjlb.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzjh4gjlb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzjh4gjlb.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzjh4gjlb.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzjh4gjlb.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzjh4gjlb.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzjh4gjlb.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzjh4gjlb.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzjh4gjlb.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzjxvi5y9.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzjxvi5y9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzjxvi5y9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzjxvi5y9.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzjxvi5y9.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzjxvi5y9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzjxvi5y9.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzjxvi5y9.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzjxvi5y9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzjxvi5y9.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzjxvi5y9.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzjxvi5y9.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzjxvi5y9.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"This function takes two positive numbers x and y and returns the\n\
    \    biggest even integer number that is in the range [x, y] inclusive. If \n\
    \    there's no such number, then the function should return -1.\n\n    For example:\n\
    \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\
    \"\"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n    if x > y\n        return\
    \ -1\n    end\n    if x % 2 == 0\n        return x\n    else\n        return x\
    \ + 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = choose_num;\n\
    \t@test(candidate(12, 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33,\
    \ 12354) == 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6,\
    \ 29) == 28)\n\t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\
    \t@test(candidate(546, 546) == 546)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4sdkvel9.jl:26\n  Expression: candidate(12,\
    \ 15) == 14\n   Evaluated: 12 == 14\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4sdkvel9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4sdkvel9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4sdkvel9.jl:28\n  Expression: candidate(33, 12354) == 12354\n\
    \   Evaluated: 34 == 12354\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4sdkvel9.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4sdkvel9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4sdkvel9.jl:30\n  Expression: candidate(6, 29) == 28\n   Evaluated:\
    \ 6 == 28\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4sdkvel9.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4sdkvel9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4sdkvel9.jl:32\n  Expression: candidate(7, 7) == -1\n   Evaluated:\
    \ 8 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4sdkvel9.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4sdkvel9.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4sdkvel9.jl:23\n"
  exit_code: 1
  status: SyntaxError

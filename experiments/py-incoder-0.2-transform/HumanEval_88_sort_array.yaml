name: HumanEval_88_sort_array
language: py
prompt: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
  \    \"\"\"\n    Given an array of non-negative integers, return a copy of the given\
  \ array after sorting,\n    you will sort the given array in ascending order if\
  \ the sum( first index value, last index value) is odd,\n    or sort it in descending\
  \ order if the sum( first index value, last index value) is even.\n\n    Note:\n\
  \    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
  \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1, 5])\n\
  \    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n    [6, 5, 4,\
  \ 3, 2, 1, 0]\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
  \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert\
  \ candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2,\
  \ 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32,\
  \ 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
  \    check(sort_array)\n\ntest_check()\n"
completions: ["    sum_of_first_and_last_element = sum(array[0:-1])\n    if sum_of_first_and_last_element\
    \ % 2 == 0:\n        return sorted(array)\n    else:\n        return sorted(array,\
    \ reverse=True)\n", "    # write your code here\n    sum = 0\n    for i in array:\n\
    \        sum += i\n    if sum % 2 == 0:\n        array.sort()\n    else:\n   \
    \     array.reverse()\n    return array\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_and_last_element % 2 == 0:\n       \
    \ array.sort()\n    else:\n        array.reverse()\n    return array\n", "   \
    \ array_copy = array.copy()\n    array_copy.sort()\n    return array_copy\n",
  "    sum_of_first_and_last_element = sum(array[0:-1])\n    if sum_of_first_and_last_element\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\n", "    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n\
    \        array.sort(reverse=True)\n    else:\n        array.sort()\n    return\
    \ array\n", "    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n  \
    \      array.sort()\n    else:\n        array.reverse()\n    return array\n",
  "    sum_array = sum(array)\n    if sum_array % 2 == 0:\n        array.sort(reverse=True)\n\
    \    else:\n        array.sort()\n    return array\n", "    array_copy = array.copy()\n\
    \    array_copy.sort()\n    return array_copy\n", "    sum_of_array = sum(array)\n\
    \    if sum_of_array % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n", "    sum_of_array = sum(array)\n    if sum_of_array % 2\
    \ == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n", "    array_copy = array.copy()\n    array_copy.sort()\n    return\
    \ array_copy\n", "    # write your code here\n    sum = 0\n    for i in array:\n\
    \        sum += i\n    if sum % 2 == 0:\n        array.sort()\n    else:\n   \
    \     array.reverse()\n    return array\n", "    sum = 0\n    for num in array:\n\
    \        sum += num\n    if sum % 2 == 0:\n        array.sort(reverse=True)\n\
    \    else:\n        array.sort()\n    return array\n", "    sum_array = sum(array)\n\
    \    if sum_array % 2 == 0:\n        array.sort(reverse=True)\n    else:\n   \
    \     array.sort()\n    return array\n", "    sum_array = [sum(array[:i]) + array[i]\
    \ for i in range(len(array))]\n    sum_array.sort()\n    if sum_array[-1] % 2\
    \ == 0:\n        return sum_array[::-1]\n    else:\n        return sum_array\n",
  "    array_copy = array.copy()\n    array_copy.sort()\n    return array_copy\n",
  "    # write your code here\n    sum = 0\n    for i in array:\n        sum += i\n\
    \    if sum % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n", "    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_and_last_element % 2 == 0:\n       \
    \ array.sort()\n    else:\n        array.reverse()\n    return array\n\n", " \
    \   sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    # write your code\
    \ here\n    sum = 0\n    for i in array:\n        sum += i\n    if sum % 2 ==\
    \ 0:\n        array.sort()\n    else:\n        array.reverse()\n    return array\n",
  "    sum_of_first_and_last_element = sum(array[0:-1])\n    if sum_of_first_and_last_element\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n", "    sum_of_first_and_last_element = sum(array[0:-1]) + array[-1]\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_and_last_element % 2 == 0:\n       \
    \ array.sort()\n    else:\n        array.reverse()\n    return array\n", "   \
    \ sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\n", "    # write your\
    \ code here\n    \n    sum = 0\n    for i in array:\n        sum += i\n    if\
    \ sum % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n  \
    \  return array\n", "    sum = 0\n    for i in array:\n        sum += i\n    if\
    \ sum % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n  \
    \  return array\n", "    length = len(array)\n    if length == 0:\n        return\
    \ []\n    if length == 1:\n        return array\n    mid = length // 2\n    left\
    \ = array[:mid]\n    right = array[mid:]\n    if sum(left) % 2 == 1:\n       \
    \ left = sort_array(left)\n    else:\n        left = sort_array(right)\n    left_sum\
    \ = sum(left)\n    right_sum = sum(right)\n    if left_sum % 2 == 1:\n       \
    \ right = sort_array(right)\n    else:\n        right = sort_array(left)\n   \
    \ right_sum = sum(right)\n    if left_sum % 2 == 1:\n        left = sort_array(left)\n\
    \    else:\n        left = sort_array(right)\n    left_sum = sum(left)\n    if\
    \ left_sum % 2 == 1:\n        right = sort_array(right)\n    else:\n        right\
    \ = sort_array(left)\n    return left + right\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_and_last_element % 2 == 0:\n       \
    \ array.sort()\n    else:\n        array.reverse()\n    return array\n", "   \
    \ sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        return sorted(array)\n\
    \    else:\n        return sorted(array, key=lambda x: -x)\n\n", "    sum_of_array\
    \ = sum(array)\n    if sum_of_array % 2 == 0:\n        sorted_array = sorted(array)\n\
    \    else:\n        sorted_array = sorted(array, reverse=True)\n    return sorted_array\n",
  "    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort(reverse=True)\n\
    \    else:\n        array.sort()\n    return array\n", "    sum_of_array = sum(array)\n\
    \    if sum_of_array % 2 == 0:\n        return sorted(array)\n    else:\n    \
    \    return sorted(array, reverse=True)\n", "    sum_array = [sum(array[0:i])\
    \ + array[i] for i in range(len(array))]\n    odd_sum = [i for i in sum_array\
    \ if i % 2 == 1]\n    even_sum = [i for i in sum_array if i % 2 == 0]\n    odd_sum.sort()\n\
    \    even_sum.sort()\n    return odd_sum + even_sum\n", "    sum_of_array = sum(array)\n\
    \    if sum_of_array % 2 == 0:\n        array.sort(reverse=True)\n    else:\n\
    \        array.sort()\n    return array\n", "    sum_of_array = sum(array)\n \
    \   if sum_of_array % 2 == 0:\n        return sorted(array)\n    else:\n     \
    \   return sorted(array, reverse=True)\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1]) + array[-1]\n    if sum_of_first_and_last_element % 2 ==\
    \ 0:\n        return sorted(array)\n    else:\n        return sorted(array, reverse=True)\n",
  "    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        sorted_array\
    \ = sorted(array)\n    else:\n        sorted_array = sorted(array, reverse=True)\n\
    \    return sorted_array\n", "    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n", "    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n", "    array_copy = array.copy()\n\
    \    array_copy.sort()\n    return array_copy\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1]) + array[-1]\n    if sum_of_first_and_last_element % 2 ==\
    \ 0:\n        array.sort()\n    else:\n        array.reverse()\n    return array\n",
  "    length = len(array)\n    if length == 0:\n        return []\n    if length\
    \ <= 1:\n        return array\n    sum_first = array[0]\n    sum_last = array[-1]\n\
    \    if sum_first + sum_last % 2 == 0:\n        array.sort()\n    else:\n    \
    \    array.reverse()\n    return array\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_and_last_element % 2 == 0:\n       \
    \ array.sort()\n    else:\n        array.reverse()\n    return array\n\n", " \
    \   sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        return sorted(array)\n\
    \    else:\n        return sorted(array, key=lambda x: -x)\n", "    sum_array\
    \ = sum(array)\n    if sum_array % 2 == 0:\n        sorted_array = sorted(array)\n\
    \    else:\n        sorted_array = sorted(array, reverse=True)\n    return sorted_array\n",
  "    sum_of_first_and_last_element = sum(array[0:-1])\n    if sum_of_first_and_last_element\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n", "    sum_array = [sum(array[0:i]) for i in range(len(array))]\n  \
    \  odd_sum = sum_array[::2]\n    even_sum = sum_array[1::2]\n    odd_sum = sorted(odd_sum)\n\
    \    even_sum = sorted(even_sum, reverse=True)\n    return odd_sum + even_sum\n",
  "    sum_of_first_and_last_element = sum(array[0:-1]) + array[-1]\n    if sum_of_first_and_last_element\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n", "    sum = 0\n    array_copy = array.copy()\n    for i in range(len(array_copy)):\n\
    \        sum += array_copy[i]\n        if sum % 2 == 0:\n            array_copy[i],\
    \ array_copy[i - 1] = array_copy[i - 1], array_copy[i]\n        else:\n      \
    \      array_copy[i], array_copy[i - 1] = array_copy[i - 1], array_copy[i]\n \
    \   return array_copy\n", "    sum_of_first_index_value = sum(array[:1])\n   \
    \ sum_of_last_index_value = sum(array[-1:])\n    if sum_of_first_index_value %\
    \ 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n", "    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n  \
    \      array.sort()\n    else:\n        array.reverse()\n    return array\n",
  "    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort(reverse=True)\n\
    \    else:\n        array.sort()\n    return array\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_and_last_element % 2 == 0:\n       \
    \ return sorted(array)\n    else:\n        return sorted(array, reverse=True)\n",
  "    sum = 0\n    for i in array:\n        sum += i\n    if sum % 2 == 0:\n    \
    \    array.sort()\n    else:\n        array.reverse()\n    return array\n", " \
    \   sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    sum_of_array =\
    \ sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort(reverse=True)\n\
    \    else:\n        array.sort()\n    return array\n", "    sum_of_array = sum(array)\n\
    \    if sum_of_array % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n", "    sum_array = []\n    sum_array.append(array[0])\n  \
    \  sum_array.append(array[-1])\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(",
  "    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort(reverse=True)\n\
    \    else:\n        array.sort()\n    return array\n", "    sum_of_array = sum(array)\n\
    \    if sum_of_array % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n", "    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n", "    # write your code here\n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    ", "    sum_of_array = sum(array)\n \
    \   if sum_of_array % 2 == 0:\n        return sorted(array)\n    else:\n     \
    \   return sorted(array, key=lambda x: -x)\n\n", "    length = len(array)\n  \
    \  if length == 0:\n        return []\n    if length == 1:\n        return array\n\
    \    mid = length // 2\n    if array[mid] % 2 == 0:\n        return sort_array(array[mid:]\
    \ + array[:mid])\n    else:\n        return sort_array(array[:mid] + array[mid:])\n",
  "    sum_of_first_and_last_element = sum(array[0:-1])\n    if sum_of_first_and_last_element\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n", "    length = len(array)\n    if length == 0:\n        return []\n\
    \    if length == 1:\n        return array\n    if array[length - 1] < array[0]:\n\
    \        array.reverse()\n        length = len(array)\n        if length == 1:\n\
    \            return array\n    if array[length - 1] > array[0]:\n        array\
    \ = array[:length - 1] + array[length - 1]\n        length = len(array)\n    \
    \    if length == 1:\n            return array\n    array = array[:length - 1]\
    \ + array[length - 1]\n    length = len(array)\n    if length == 1:\n        return\
    \ array\n    array = array[:length - 1] + array[length - 1]\n    length = len(array)\n\
    \    if length == 1:\n        return array\n    array = array[:length - 1] + array[length\
    \ - 1]\n    length = len(array)\n    if length == 1:\n        return array\n \
    \   array = array[:length - 1] + array[length - 1]\n    length = len(array)\n\
    \    if length == 1:\n        return array\n    array = array[:length - 1] + array[length\
    \ - 1]\n    length = len(array)\n    if length == 1:\n        return array\n \
    \   array = array[:length - 1] + array[length - 1]\n    length = len(array)\n\
    \    if length == 1:\n        return array\n    array = array[:length - 1] + array[length\
    \ - 1]\n    length = len(array)\n    if length == 1:\n        return array\n \
    \   array = array[:length - 1] + array[length - 1]\n    length = len(array)\n\
    \    if length == 1:\n        return array\n    array = array[:length - 1] + array[length\
    \ - 1]\n    length = len(array)\n    if length == 1:\n        return array\n \
    \   array = array[:length - 1] + array[length - 1]\n    length = len(array)\n\
    \    if length == 1:\n        return array\n    array = array[:length - 1] + array[length\
    \ - 1]\n    length = len(array)\n    if length == 1:\n        return array\n \
    \   array = array[:length - 1] + array[length - 1]\n    length = len(array)\n\
    \    if length == 1:\n        return array\n    array = array[:length - 1] + array[length\
    \ - 1]\n    length = len(array)\n    if length == 1:\n        return array\n \
    \   array = array[:length - 1] + array[length - 1]\n    length = len(array)\n\
    \    if length == 1:\n        return array\n    array = array[:length - 1] + array[length\
    \ - 1]\n    length = len(array)\n    if length == 1:\n        return array\n \
    \   array = array[:length - 1] + array[length - 1]\n    length = len(array)\n\
    \    if length == 1:\n        return array\n    array = array[:length - 1] + array[length\
    \ - 1]\n    length = len(array)\n    if length == 1:\n        return array\n \
    \   array = array[:length - 1] + array[length - 1]\n    length = len(array)\n\
    \    if length == 1:\n        return array\n    array = array[:length - 1] + array[length\
    \ - 1]\n    length = len(array)\n    if length == 1:\n        return array\n \
    \   array = array[:length - 1] + array[length - 1]\n    length = len(array)\n\
    \    if length == 1:\n        return array\n    ", "    sum_of_array = sum(array)\n\
    \    if sum_of_array % 2 == 0:\n        sorted_array = sorted(array)\n    else:\n\
    \        sorted_array = sorted(array, reverse=True)\n    return sorted_array\n",
  "    sum = 0\n    for i in array:\n        sum += i\n    if sum % 2 == 0:\n    \
    \    return sorted(array)\n    else:\n        return sorted(array, reverse=True)\n",
  "    array_copy = array.copy()\n    array_copy.sort()\n    return array_copy\n",
  "    sum_of_first_and_last_element = sum(array[0:-1]) + array[-1]\n    if sum_of_first_and_last_element\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n", "    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length-1]\
    \ = array[length-1], array[i]\n            length -= 1\n    return array\n", " \
    \   sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_and_last_element % 2 == 0:\n       \
    \ array.sort()\n    else:\n        array.reverse()\n    return array\n", "   \
    \ sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    sum_of_array =\
    \ sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort(reverse=True)\n\
    \    else:\n        array.sort()\n    return array\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1]) + array[-1]\n    if sum_of_first_and_last_element % 2 ==\
    \ 0:\n        return sorted(array)\n    else:\n        return sorted(array, reverse=True)\n",
  "    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    sum = 0\n    for\
    \ i in array:\n        sum += i\n    if sum % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\n", "    array_copy =\
    \ array.copy()\n    array_copy.sort()\n    return array_copy\n", "    array_copy\
    \ = array.copy()\n    array_copy.sort()\n    return array_copy\n", "    sum =\
    \ 0\n    for i in array:\n        sum += i\n    if sum % 2 == 0:\n        array.sort(reverse=True)\n\
    \    else:\n        array.sort()\n    return array\n", "    length = len(array)\n\
    \    if length == 0:\n        return []\n    if length == 1:\n        return array\n\
    \    mid = length // 2\n    left = array[:mid]\n    right = array[mid:]\n    if\
    \ sum(left) % 2 == 1:\n        left = sort_array(left)\n    else:\n        left\
    \ = sort_array(right)\n    return left + right\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_and_last_element % 2 == 0:\n       \
    \ array.sort()\n    else:\n        array.reverse()\n    return array\n", "   \
    \ sum_of_first_and_last_element = sum(array[0:-1])\n    if sum_of_first_and_last_element\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n", "    sum_of_first_and_last_element = sum(array[0:-1])\n    if sum_of_first_and_last_element\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n", "    sum_of_first_and_last_element = sum(array[0:-1])\n    if sum_of_first_and_last_element\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n", "    length = len(array)\n    if length == 0:\n        return []\n\
    \    if length == 1:\n        return array\n    mid = length // 2\n    left =\
    \ sort_array(array[:mid])\n    right = sort_array(array[mid:])\n    if sum(left)\
    \ + sum(right) % 2 == 1:\n        return left + right\n    else:\n        return\
    \ right + left\n", "    sum_array = sum(array)\n    if sum_array % 2 == 0:\n \
    \       array.sort()\n    else:\n        array.reverse()\n    return array\n",
  "    sum_of_first_and_last_element = sum(array[0:-1])\n    if sum_of_first_and_last_element\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n", "    sum_array = sum(array)\n    if sum_array % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    sum_array = sum(array)\n\
    \    if sum_array % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n", "    sum_of_array = sum(array)\n    if sum_of_array % 2\
    \ == 0:\n        sorted_array = sorted(array)\n    else:\n        sorted_array\
    \ = sorted(array, reverse=True)\n    return sorted_array\n", "    sum_array =\
    \ []\n    sum_array.append(array[0])\n    sum_array.append(array[-1])\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n    sum_array.append(sum(array))\n\
    \    sum_array.append(sum(", "    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_and_last_element % 2 == 0:\n       \
    \ array.sort()\n    else:\n        array.reverse()\n    return array\n\n", " \
    \   sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        return sorted(array)\n\
    \    else:\n        return sorted(array, key=lambda x: -x)\n", "    array_copy\
    \ = array.copy()\n    array_copy.sort()\n    return array_copy\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_and_last_element % 2 == 0:\n       \
    \ array.sort()\n    else:\n        array.reverse()\n    return array\n", "   \
    \ # write your code here\n    sum = 0\n    for i in array:\n        sum += i\n\
    \    if sum % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n", "    sum_of_array = sum(array)\n    if sum_of_array % 2\
    \ == 0:\n        sorted_array = sorted(array)\n    else:\n        sorted_array\
    \ = sorted(array, reverse=True)\n    return sorted_array\n", "    length = len(array)\n\
    \    if length == 0:\n        return []\n    if length == 1:\n        return array\n\
    \    mid = length // 2\n    left = sort_array(array[:mid])\n    right = sort_array(array[mid:])\n\
    \    if sum(left) % 2 == 1:\n        return left + right\n    else:\n        return\
    \ right + left\n", "    sum_of_array = sum(array)\n    if sum_of_array % 2 ==\
    \ 0:\n        array.sort()\n    else:\n        array.reverse()\n    return array\n",
  "    sum_array = [sum(array[0:i]) for i in range(len(array))]\n    odd_sum = sum_array[::2]\n\
    \    even_sum = sum_array[1::2]\n    if odd_sum == even_sum:\n        return array\n\
    \    else:\n        return sorted(array, key=lambda x: (x+array[-1]), reverse=True)\n",
  "    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\n", "    sum_of_array\
    \ = sum(array)\n    if sum_of_array % 2 == 0:\n        sorted_array = sorted(array)\n\
    \    else:\n        sorted_array = sorted(array, reverse=True)\n    return sorted_array\n",
  "    sum_of_first_and_last_element = sum(array[0:-1]) + array[-1]\n    if sum_of_first_and_last_element\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n", "    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n  \
    \      array.sort()\n    else:\n        array.reverse()\n    return array\n",
  "    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        sorted_array\
    \ = sorted(array)\n    else:\n        sorted_array = sorted(array, reverse=True)\n\
    \    return sorted_array\n", "    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n", "    sum = 0\n    for i in array:\n        sum += i\n  \
    \  if sum % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n", "    sum_of_first_and_last_element = sum(array[0:-1]) +\
    \ array[-1]\n    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    sum = 0\n    length\
    \ = len(array)\n    i = 0\n    while i < length:\n        sum += array[i]\n  \
    \      i += 1\n    if sum % 2 == 0:\n        return sorted(array)\n    else:\n\
    \        return sorted(array, reverse=True)\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1]) + array[-1]\n    if sum_of_first_and_last_element % 2 ==\
    \ 0:\n        array.sort()\n    else:\n        array.reverse()\n    return array\n",
  "    sum = 0\n    sorted_array = []\n    for num in array:\n        sum += num\n\
    \        sorted_array.append(num)\n    if sum % 2 == 0:\n        sorted_array.sort()\n\
    \    else:\n        sorted_array.reverse()\n    return sorted_array\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_and_last_element % 2 == 0:\n       \
    \ array.sort()\n    else:\n        array.reverse()\n    return array\n", "   \
    \ array_copy = array.copy()\n    array_copy.sort()\n    return array_copy\n",
  "    array_copy = array.copy()\n    array_copy.sort()\n    return array_copy\n",
  "    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    sum_of_array =\
    \ sum(array)\n    if sum_of_array % 2 == 0:\n        sorted_array = sorted(array)\n\
    \    else:\n        sorted_array = sorted(array, reverse=True)\n    return sorted_array\n",
  "    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    array_copy = array.copy()\n\
    \    array_copy.sort()\n    return array_copy\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1]) + array[-1]\n    if sum_of_first_and_last_element % 2 ==\
    \ 0:\n        array.sort()\n    else:\n        array.reverse()\n    return array\n",
  "    array_copy = array.copy()\n    array_copy.sort()\n    return array_copy\n",
  "    sum_array = sum(array)\n    if sum_array % 2 == 0:\n        array.sort(reverse=True)\n\
    \    else:\n        array.sort()\n    return array\n", "    array_copy = array.copy()\n\
    \    array_copy.sort()\n    return array_copy\n", "    array_copy = array.copy()\n\
    \    array_copy.sort()\n    return array_copy\n", "    sum_of_array = sum(array)\n\
    \    if sum_of_array % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n", "    sum_of_first_and_last_element = sum(array[0:-1]) +\
    \ array[-1]\n    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    sum = 0\n    for\
    \ i in array:\n        sum += i\n    if sum % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    sum_of_array =\
    \ sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n", "    sum_of_array = sum(array)\n\
    \    if sum_of_array % 2 == 0:\n        sorted_array = sorted(array)\n    else:\n\
    \        sorted_array = sorted(array, reverse=True)\n    return sorted_array\n",
  "    sum_array = [sum(array[:i]) + array[i] for i in range(len(array))]\n    if\
    \ sum_array[0] % 2 == 0:\n        return sorted(array, key=lambda x: sum_array.index(x)\
    \ + 1)\n    else:\n        return sorted(array, key=lambda x: sum_array.index(x)\
    \ - 1)\n", "    sum = 0\n    length = len(array)\n    i = 0\n    while i < length:\n\
    \        sum += array[i]\n        i += 1\n    if sum % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    sum_array = []\n\
    \    for i in array:\n        sum_array.append(i)\n    sum_array.sort()\n    sum_array.reverse()\n\
    \    return sum_array\n", "    length = len(array)\n    if length < 2:\n     \
    \   return array\n    sum_of_first_two = sum(array[0:2])\n    sum_of_last_two\
    \ = sum(array[-2:])\n    if sum_of_first_two % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    elif sum_of_last_two % 2 == 1:\n        return sorted(array)\n\
    \    else:\n        return sorted(array, reverse=False)\n", "    array_copy =\
    \ array.copy()\n    array_copy.sort()\n    return array_copy\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_and_last_element % 2 == 0:\n       \
    \ array.sort()\n    else:\n        array.reverse()\n    return array\n\n", " \
    \   sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    sum_of_first_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_last_element % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    sum_of_array =\
    \ sum(array)\n    if sum_of_array % 2 == 0:\n        sorted_array = sorted(array)\n\
    \    else:\n        sorted_array = sorted(array, reverse=True)\n    return sorted_array\n",
  "    array_copy = array.copy()\n    array_copy.sort()\n    return array_copy\n",
  "    sum_array = sum(array)\n    if sum_array % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    length = len(array)\n\
    \    if length == 0:\n        return []\n    if length == 1:\n        return array\n\
    \    mid = length // 2\n    left = sort_array(array[:mid])\n    right = sort_array(array[mid:])\n\
    \    if sum(left) % 2 == 1:\n        return left + right\n    else:\n        return\
    \ right + left\n", "    # write your code here\n    sum = 0\n    for i in array:\n\
    \        sum += i\n    if sum % 2 == 0:\n        array.sort()\n    else:\n   \
    \     array.reverse()\n    return array\n", "    array_copy = array.copy()\n \
    \   array_copy.sort()\n    return array_copy\n", "    sum_of_array = sum(array)\n\
    \    if sum_of_array % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n\n", "    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 != 0:\n            array[i], array[length\
    \ - i - 1] = array[length - i - 1], array[i]\n    return array\n", "    sum_of_array\
    \ = sum(array)\n    if sum_of_array % 2 == 0:\n        sorted_array = sorted(array)\n\
    \    else:\n        sorted_array = sorted(array, key=lambda x: -x)\n    return\
    \ sorted_array\n", "    sum_of_array = sum(array)\n    if sum_of_array % 2 ==\
    \ 0:\n        array.sort()\n    else:\n        array.reverse()\n    return array\n",
  "    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    length = len(array)\n\
    \    if length == 0:\n        return array\n    if length == 1:\n        return\
    \ array\n    mid = length // 2\n    left = array[:mid]\n    right = array[mid:]\n\
    \    if sum(left) % 2 == 1:\n        return sort_array(right)\n    else:\n   \
    \     return sort_array(left)\n", "    sum_of_first_and_last_element = sum(array[0:-1])\
    \ + array[-1]\n    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    sum_of_array =\
    \ sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n", "    sum_array = [sum(array[:i])\
    \ + array[i] for i in range(len(array))]\n    sum_array.sort()\n    if sum_array[-1]\
    \ % 2 == 0:\n        sum_array.reverse()\n    return sum_array\n", "    sum_array\
    \ = sum(array)\n    if sum_array % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n", "    sum_of_array = sum(array)\n\
    \    if sum_of_array % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n", "    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_and_last_element % 2 == 0:\n       \
    \ array.sort()\n    else:\n        array.reverse()\n    return array\n", "   \
    \ sum_array = sum(array)\n    if sum_array % 2 == 0:\n        array.sort(reverse=True)\n\
    \    else:\n        array.sort()\n    return array\n", "    sum_of_first_and_last_element\
    \ = sum(array[0:-1]) + array[-1]\n    if sum_of_first_and_last_element % 2 ==\
    \ 0:\n        array.sort()\n    else:\n        array.reverse()\n    return array\n\
    \n", "    array_copy = array.copy()\n    array_copy.sort()\n    return array_copy\n",
  "    sum = 0\n    for num in array:\n        sum += num\n    if sum % 2 == 0:\n\
    \        array.sort()\n    else:\n        array.reverse()\n    return array\n",
  "    length = len(array)\n    if length < 2:\n        return array\n    mid = length\
    \ // 2\n    left = array[mid]\n    right = array[mid-1]\n    if left > right:\n\
    \        left, right = right, left\n    left_sum = sum(array[mid-1:mid+1])\n \
    \   right_sum = sum(array[mid:mid+2])\n    if left_sum % 2 == 1:\n        array[mid],\
    \ array[mid-1] = array[mid-1], array[mid]\n        left_sum -= array[mid-1]\n\
    \        right_sum -= array[mid]\n    array[mid], array[mid-1] = array[mid-1],\
    \ array[mid]\n    left_sum -= array[mid-1]\n    right_sum -= array[mid]\n    if\
    \ left_sum % 2 == 1:\n        array[mid], array[mid-1] = array[mid-1], array[mid]\n\
    \        left_sum -= array[mid-1]\n        right_sum -= array[mid]\n    array[mid],\
    \ array[mid-1] = array[mid-1], array[mid]\n    left_sum -= array[mid-1]\n    right_sum\
    \ -= array[mid]\n    if left_sum % 2 == 1:\n        array[mid], array[mid-1] =\
    \ array[mid-1], array[mid]\n        left_sum -= array[mid-1]\n        right_sum\
    \ -= array[mid]\n    array[mid], array[mid-1] = array[mid-1], array[mid]\n   \
    \ left_sum -= array[mid-1]\n    right_sum -= array[mid]\n    if left_sum % 2 ==\
    \ 1:\n        array[mid], array[mid-1] = array[mid-1], array[mid]\n        left_sum\
    \ -= array[mid-1]\n        right_sum -= array[mid]\n    array[mid], array[mid-1]\
    \ = array[mid-1], array[mid]\n    left_sum -= array[mid-1]\n    right_sum -= array[mid]\n\
    \    if left_sum % 2 == 1:\n        array[mid], array[mid-1] = array[mid-1], array[mid]\n\
    \        left_sum -= array[mid-1]\n        right_sum -= array[mid]\n    array[mid],\
    \ array[mid-1] = array[mid-1], array[mid]\n    left_sum -= array[mid-1]\n    right_sum\
    \ -= array[mid]\n    if left_sum % 2 == 1:\n        array[mid], array[mid-1] =\
    \ array[mid-1], array[mid]\n        left_sum -= array[mid-1]\n        right_sum\
    \ -= array[mid]\n    array[mid], array[mid-1] = array[mid-1], array[mid]\n   \
    \ left_sum -= array[mid-1]\n    right_sum -= array[mid]\n    if left_sum % 2 ==\
    \ 1:\n        array[mid], array[mid-1] = array[mid-1], array[mid]\n", "    sum_of_array\
    \ = sum(array)\n    if sum_of_array % 2 == 0:\n        sorted_array = sorted(array)\n\
    \    else:\n        sorted_array = sorted(array, reverse=True)\n    return sorted_array\n",
  "    sum = 0\n    length = len(array)\n    \n    if length == 0:\n        return\
    \ []\n    \n    for i in range(length):\n        sum += array[i]\n    \n    if\
    \ sum % 2 == 0:\n        return sorted(array)\n    else:\n        return sorted(array,\
    \ key=lambda x: -x)\n", "    sum_of_array = sum(array)\n    if sum_of_array %\
    \ 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n", "    sum = 0\n    length = len(array)\n    i = 0\n    while\
    \ i < length:\n        sum += array[i]\n        i += 1\n    \n    if sum % 2 ==\
    \ 0:\n        array.sort()\n    else:\n        array.reverse()\n    return array\n",
  "    sum_array = sum(array)\n    if sum_array % 2 == 0:\n        array.sort(reverse=True)\n\
    \    else:\n        array.sort()\n    return array\n", "    sum_of_first_last_elements\
    \ = 0\n    sum_of_first_last_elements = sum(array[0:-1])\n    if sum_of_first_last_elements\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n", "    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n  \
    \      sorted_array = sorted(array)\n    else:\n        sorted_array = sorted(array,\
    \ reverse=True)\n    return sorted_array\n", "    length = len(array)\n    if\
    \ length == 0:\n        return []\n    if length == 1:\n        return array\n\
    \    if length == 2:\n        if array[0] > array[1]:\n            return array\n\
    \        else:\n            return array[::-1]\n    mid = length // 2\n    left\
    \ = sort_array(array[:mid])\n    right = sort_array(array[mid:])\n    if sum(left)\
    \ + sum(right) % 2 == 0:\n        return left + right\n    else:\n        return\
    \ right + left\n", "    sum_of_array = sum(array)\n    if sum_of_array % 2 ==\
    \ 0:\n        array.sort()\n    else:\n        array.reverse()\n    return array\n",
  "    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort(reverse=True)\n\
    \    else:\n        array.sort()\n    return array\n", "    array_copy = array.copy()\n\
    \    array_copy.sort()\n    return array_copy\n", "    sum_of_array = sum(array)\n\
    \    if sum_of_array % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n", "    sum_of_array = sum(array)\n    if sum_of_array % 2\
    \ == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n", "    sum_array = sum(array)\n    if sum_array % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    sum_of_array =\
    \ sum(array)\n    if sum_of_array % 2 == 0:\n        sorted_array = sorted(array)\n\
    \    else:\n        sorted_array = sorted(array, reverse=True)\n    return sorted_array\n",
  "    sum = 0\n    for num in array:\n        sum += num\n    if sum % 2 == 0:\n\
    \        array.sort()\n    else:\n        array.reverse()\n    return array\n",
  "    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n        sorted_array\
    \ = sorted(array)\n    else:\n        sorted_array = sorted(array, reverse=True)\n\
    \    return sorted_array\n", "    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n", "    sum_of_array = sum(array)\n\
    \    if sum_of_array % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n", "    sum_of_array = sum(array)\n    if sum_of_array % 2\
    \ == 0:\n        return sorted(array)\n    else:\n        return sorted(array,\
    \ reverse=True)\n", "    sum_of_array = sum(array)\n    if sum_of_array % 2 ==\
    \ 0:\n        array.sort()\n    else:\n        array.reverse()\n    return array\n",
  "    sum_array = sum(array)\n    if sum_array % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    sum_of_array =\
    \ sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n", "    sum_of_first_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_last_element % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n", "    sum_of_first_index_value\
    \ = sum(array[0:-1])\n    sum_of_last_index_value = sum(array[1:])\n    if sum_of_first_index_value\
    \ % 2 == 0:\n        return sorted(array)\n    else:\n        return sorted(array,\
    \ key=lambda x: -x)\n", "    sum_of_array = sum(array)\n    if sum_of_array %\
    \ 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n", "    sum_of_first_and_last_element = sum(array[0:-1])\n    if sum_of_first_and_last_element\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n", "    # write your code here\n    \n    sum = 0\n    for i in array:\n\
    \        sum += i\n    if sum % 2 == 0:\n        array.sort()\n    else:\n   \
    \     array.reverse()\n    return array\n", "    sum = 0\n    length = len(array)\n\
    \    for i in range(length):\n        sum += array[i]\n        if sum % 2 == 0:\n\
    \            array[i], array[length-i-1] = array[length-i-1], array[i]\n     \
    \       length -= 1\n    return array\n", "    sum_of_array = sum(array)\n   \
    \ if sum_of_array % 2 == 0:\n        return sorted(array)\n    else:\n       \
    \ return sorted(array, reverse=True)\n", "    sum_of_first_and_last_element =\
    \ sum(array[0:-1])\n    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\n", "    sum_of_array\
    \ = sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n", "    # write your code here\n \
    \   sum = 0\n    for i in array:\n        sum += i\n    if sum % 2 == 0:\n   \
    \     array.sort()\n    else:\n        array.reverse()\n    return array\n", " \
    \   sum = 0\n    for i in array:\n        sum += i\n    if sum % 2 == 0:\n   \
    \     array.sort(reverse=True)\n    else:\n        array.sort()\n    return array\n",
  "    # write your code here\n    sum = 0\n    for i in array:\n        sum += i\n\
    \    if sum % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

language: py
name: HumanEval_66_digitSum
results:
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n         \
    \   sum += ord(c)\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwppn8cg.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpuwppn8cg.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpuwppn8cg.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpuwppn8cg.py\"\
    , line 20, in digitSum\n    return sum(int(c) for c in s if c.isupper())\n  File\
    \ \"/tmp/tmpuwppn8cg.py\", line 20, in <genexpr>\n    return sum(int(c) for c\
    \ in s if c.isupper())\nValueError: invalid literal for int() with base 10: 'A'\n"
  stdout: ''
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwppn8cg.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpuwppn8cg.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpuwppn8cg.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpuwppn8cg.py\"\
    , line 20, in digitSum\n    return sum(int(c) for c in s if c.isupper())\n  File\
    \ \"/tmp/tmpuwppn8cg.py\", line 20, in <genexpr>\n    return sum(int(c) for c\
    \ in s if c.isupper())\nValueError: invalid literal for int() with base 10: 'A'\n"
  stdout: ''
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for char in s:\n        sum += ord(char)\n    return\
    \ sum\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuslpux68.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpuslpux68.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpuslpux68.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwppn8cg.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpuwppn8cg.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpuwppn8cg.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpuwppn8cg.py\"\
    , line 20, in digitSum\n    return sum(int(c) for c in s if c.isupper())\n  File\
    \ \"/tmp/tmpuwppn8cg.py\", line 20, in <genexpr>\n    return sum(int(c) for c\
    \ in s if c.isupper())\nValueError: invalid literal for int() with base 10: 'A'\n"
  stdout: ''
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n         \
    \   sum += ord(c)\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n         \
    \   sum += ord(c)\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for char in s:\n        if char.isupper():\n   \
    \         sum += ord(char)\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) - ord('A') for c in s)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5wy39cab.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp5wy39cab.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp5wy39cab.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n         \
    \   sum += ord(c)\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n         \
    \   sum += ord(c)\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n         \
    \   sum += ord(c)\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n         \
    \   sum += ord(c)\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for char in s:\n        if char.isupper():\n   \
    \         sum += ord(char)\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n         \
    \   sum += ord(c)\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n         \
    \   sum += ord(c)\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n         \
    \   sum += ord(c)\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(ord, s))\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppgd7d3yq.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmppgd7d3yq.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmppgd7d3yq.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n         \
    \   sum += ord(c)\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for char in s:\n        if char.isupper():\n   \
    \         sum += ord(char)\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''

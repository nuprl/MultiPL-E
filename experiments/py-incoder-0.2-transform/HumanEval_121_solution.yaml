name: HumanEval_121_solution
language: py
prompt: "from typing import List\n\ndef solution(lst: List[int]) -> int:\n    \"\"\
  \"Given a non-empty list of integers, return the sum of all of the odd elements\
  \ that are in even positions.\n    \n\n    Examples\n    >>> solution([5, 8, 7,\
  \ 1])\n    12\n    >>> solution([3, 3, 3, 3, 3])\n    9\n    >>> solution([30, 13,\
  \ 24, 321])\n    0\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([5, 8, 7, 1]) == 12\n    assert\
  \ candidate([3, 3, 3, 3, 3]) == 9\n    assert candidate([30, 13, 24, 321]) == 0\n\
  \    assert candidate([5, 9]) == 5\n    assert candidate([2, 4, 8]) == 0\n    assert\
  \ candidate([30, 13, 23, 32]) == 23\n    assert candidate([3, 13, 2, 9]) == 3\n\n\
  def test_check():\n    check(solution)\n\ntest_check()\n"
completions: ["    even = 0\n    odd = 0\n    for x in lst:\n        if x % 2 == 0:\n\
    \            even += x\n        else:\n            odd += x\n    return even +\
    \ odd\n", "    even = 0\n    odd = 0\n    \n    for num in lst:\n        if num\
    \ % 2 == 0:\n            even += num\n        else:\n            odd += num\n\
    \    \n    return even + odd\n", "    even = 0\n    odd = 0\n    \n    for num\
    \ in lst:\n        if num % 2 == 0:\n            even += num\n        else:\n\
    \            odd += num\n    \n    return even + odd\n", "    even = 0\n    odd\
    \ = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n            even +=\
    \ num\n        else:\n            odd += num\n    \n    return even + odd\n",
  "    even = 0\n    odd = 0\n    for num in lst:\n        if num % 2 == 0:\n    \
    \        even += num\n        else:\n            odd += num\n    return even +\
    \ odd\n", "    \n    even = 0\n    odd = 0\n    \n    for num in lst:\n      \
    \  if num % 2 == 0:\n            even += num\n        else:\n            odd +=\
    \ num\n    \n    return even + odd\n", "    even = 0\n    odd = 0\n    \n    for\
    \ num in lst:\n        if num % 2 == 0:\n            even += num\n        else:\n\
    \            odd += num\n    \n    return even + odd\n", "    even = lst[::2]\n\
    \    odd = lst[1::2]\n    return sum(x for x in even if x % 2 == 1)\n", "    even\
    \ = 0\n    odd = 0\n    \n    for num in lst:\n        if num % 2 == 0:\n    \
    \        even += num\n        else:\n            odd += num\n    \n    return\
    \ even + odd\n", "    even = 0\n    odd = 0\n    for num in lst:\n        if num\
    \ % 2 == 0:\n            even += num\n        else:\n            odd += num\n\
    \    return even + odd\n", "    even = sum(lst[i : i + 2] for i in range(0, len(lst),\
    \ 2))\n    odd = sum(lst[i : i + 2] for i in range(1, len(lst), 2))\n    return\
    \ even - odd\n", "    even = 0\n    odd = 0\n    \n    for i in range(len(lst)):\n\
    \        if lst[i] % 2 == 0:\n            even += lst[i]\n        else:\n    \
    \        odd += lst[i]\n    \n    return even + odd\n", "    even = 0\n    odd\
    \ = 0\n    for num in lst:\n        if num % 2 == 0:\n            even += num\n\
    \        else:\n            odd += num\n    return even + odd\n", "    even =\
    \ 0\n    odd = 0\n    for num in lst:\n        if num % 2 == 0:\n            even\
    \ += num\n        else:\n            odd += num\n    return even + odd\n", " \
    \   even = sum(lst[i : i + 2] for i in range(0, len(lst), 2))\n    odd = sum(lst[i\
    \ : i + 2] for i in range(1, len(lst), 2))\n    return even - odd\n", "    even\
    \ = 0\n    odd = 0\n    for num in lst:\n        if num % 2 == 0:\n          \
    \  even += num\n        else:\n            odd += num\n    return even + odd\n",
  "    even = lst[::2]\n    odd = lst[1::2]\n    \n    return sum(x for x in odd if\
    \ x in even)\n", "    even = 0\n    odd = 0\n    for num in lst:\n        if num\
    \ % 2 == 0:\n            even += num\n        else:\n            odd += num\n\
    \    return even + odd\n", "    even = 0\n    odd = 0\n    \n    for num in lst:\n\
    \        if num % 2 == 0:\n            even += num\n        else:\n          \
    \  odd += num\n    \n    return even + odd\n", "    even = 0\n    odd = 0\n  \
    \  for i in lst:\n        if i % 2 == 0:\n            even += i\n        else:\n\
    \            odd += i\n    return even + odd\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_99_closest_integer
language: py
prompt: "def closest_integer(value: str) -> int:\n    \"\"\"\n    Create a function\
  \ that takes a value (string) representing a number\n    and returns the closest\
  \ integer to it. If the number is equidistant\n    from two integers, round it away\
  \ from zero.\n\n    Examples\n    >>> closest_integer('10')\n    10\n    >>> closest_integer('15.3')\n\
  \    15\n\n    Note:\n    Rounding away from zero means that if the given number\
  \ is equidistant\n    from two integers, the one you should return is the one that\
  \ is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n\
  \    return 15 and closest_integer(\"-14.5\") should return -15.\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate('10') == 10\n    assert candidate('14.5')\
  \ == 15\n    assert candidate('-15.5') == -16\n    assert candidate('15.3') == 15\n\
  \    assert candidate('0') == 0\n\ndef test_check():\n    check(closest_integer)\n\
  \ntest_check()\n"
completions: ["    number = float(value)\n    closest_integer = int(number)\n    if\
    \ abs(closest_integer - number) < abs(closest_integer - number + 1):\n       \
    \ closest_integer -= 1\n    return closest_integer\n\n", "    number = float(value)\n\
    \    differences = []\n    for x in range(1, 10):\n        differences.append(abs(x\
    \ - number))\n    return min(differences)\n\n", "    number = float(value)\n \
    \   if number == int(number):\n        return int(number)\n    return int(math.ceil(number))\n\
    \n", "    number = float(value)\n    difference = abs(number - int(number))\n\
    \    if difference < 0.5:\n        return int(number)\n    else:\n        return\
    \ int(number - difference)\n\n", "    number = float(value)\n    difference =\
    \ abs(number - int(number))\n    if difference < 0.5:\n        return int(number)\n\
    \    else:\n        return int(number) + 1\n\n", "    number = float(value)\n\
    \    difference = abs(number - int(number))\n    if difference <= 0.5:\n     \
    \   return int(number)\n    else:\n        return int(number) + 1\n\n", "    number\
    \ = float(value)\n    difference = abs(number - int(number))\n    if difference\
    \ < 0.5:\n        return int(number)\n    else:\n        return int(number) +\
    \ 1\n\n", "    number = float(value)\n    difference = abs(number - int(number))\n\
    \    if difference < .1:\n        return int(number)\n    else:\n        return\
    \ int(round(number))\n\n", "    number = float(value)\n    difference = abs(number\
    \ - int(number))\n    if difference < 0.5:\n        return int(number)\n    else:\n\
    \        return int(number) + 1\n\n", "    number = float(value)\n    difference\
    \ = abs(number - int(number))\n    if difference <= 0.5:\n        return int(number)\n\
    \    else:\n        return int(number) + 1\n\n", "    number = float(value)\n\
    \    difference = abs(number - int(number))\n    if difference < 0.5:\n      \
    \  return int(number)\n    else:\n        return int(number) + 1\n\n", "    number\
    \ = float(value)\n    difference = abs(number - int(number))\n    if difference\
    \ < 0.5:\n        return int(number)\n    else:\n        return int(number) +\
    \ 1\n\n", "    number = float(value)\n    differences = [abs(number - int(number))\
    \ for number in str(number)]\n    return int(min(differences)) if differences\
    \ else None\n\n", "    number = float(value)\n    difference = abs(number - int(number))\n\
    \    if difference < 0.5:\n        return int(number)\n    else:\n        return\
    \ int(number - difference)\n\n", "    number = float(value)\n    difference =\
    \ abs(number - int(number))\n    if difference < 0.5:\n        return int(number)\n\
    \    else:\n        return int(number) + 1\n\n", "    number = float(value)\n\
    \    difference = abs(number - int(number))\n    if difference < 0.5:\n      \
    \  return int(number)\n    else:\n        return int(number) + 1\n\n", "    number\
    \ = float(value)\n    difference = abs(number - int(number))\n    if difference\
    \ < .0000000001:\n        return int(number)\n    else:\n        return int(number\
    \ - difference)\n\n", "    number = float(value)\n    difference = abs(number\
    \ - int(number))\n    if difference < 0.5:\n        return int(number)\n    else:\n\
    \        return int(number) + 1\n\n", "    number = float(value)\n    closest_integer\
    \ = int(round(number))\n    if abs(number - closest_integer) < abs(number - number\
    \ % 1):\n        return closest_integer\n    else:\n        return closest_integer\
    \ + 1\n\n", "    number = float(value)\n    difference = abs(number - int(number))\n\
    \    if difference < 0.5:\n        return int(number)\n    else:\n        return\
    \ int(number) + 1\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_2_truncate_number
language: py
prompt: "def truncate_number(number: float) -> float:\n    \"\"\" Given a positive\
  \ floating point number, it can be decomposed into\n    and integer part (largest\
  \ integer smaller than given number) and decimals\n    (leftover part always smaller\
  \ than 1).\n\n    Return the decimal part of the number.\n    >>> truncate_number(3.5)\n\
  \    0.5\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(3.5) == 0.5\n    assert candidate(1.25)\
  \ == 0.25\n    assert candidate(123.0) == 0.0\n\ndef test_check():\n    check(truncate_number)\n\
  \ntest_check()\n"
completions: ["    int_part = int(number)\n    decimal_part = number - int_part\n\
    \    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part =\
    \ number - int_part\n    return decimal_part\n\n", "    decimals = math.floor(math.log10(number))\n\
    \    return number / 10 ** decimals\n\n", "    return number - int(number)\n\n",
  "    int_part = int(number)\n    decimal = number - int_part\n    return decimal\n\
    \n", "    return float(number) - int(number)\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    int_part\
    \ = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    int_part = int(number)\n    decimal_part = number - int_part\n    return\
    \ decimal_part\n\n", "    int_part = int(number)\n    decimal_part = number -\
    \ int_part\n    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part\
    \ = number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    int_part\
    \ = int(number)\n    decimal = number - int_part\n    return decimal\n\n", " \
    \   integer_part = int(number)\n    decimal_part = number - integer_part\n   \
    \ return decimal_part\n\n", "    int_part = int(number)\n    decimal_part = number\
    \ - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part\
    \ = number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    int_part\
    \ = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    decimals = math.floor(math.log10(number))\n    return number / 10 **\
    \ decimals\n\n", "    int_part = int(number)\n    decimal = number - int_part\n\
    \    return decimal\n\n", "    int_part = int(number)\n    decimal_part = number\
    \ - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part\
    \ = number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    integer_part\
    \ = int(number)\n    decimal_part = number - integer_part\n    return decimal_part\n\
    \n", "    decimals = math.floor(math.log10(number))\n    return number / 10 **\
    \ decimals\n\n", "    int_part = int(number)\n    decimal_part = number - int_part\n\
    \    return decimal_part\n\n", "    decimals = math.floor(math.log10(number))\n\
    \    return number / 10**decimals\n\n", "    decimals = math.floor(math.log10(number))\n\
    \    return number / 10 ** decimals\n\n", "    int_part = int(number)\n    decimal_part\
    \ = number - int_part\n    return decimal_part\n\n", "    decimals = math.floor(math.log10(number))\n\
    \    return number / 10**decimals\n\n", "    int_part = int(number)\n    decimal_part\
    \ = number - int_part\n    return decimal_part\n\n", "    return math.trunc(number\
    \ * 10. / 10.)\n\n", "    int_part = int(number)\n    decimal_part = number -\
    \ int_part\n    return decimal_part\n\n", "    integer_part = int(number)\n  \
    \  decimal_part = number - integer_part\n    return decimal_part\n\n", "    return\
    \ number - int(number) if number < 0 else number\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    int_part\
    \ = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    integer_part = int(number)\n    decimal_part = number - integer_part\n\
    \    return decimal_part\n\n", "    return number - int(number) if number < 0\
    \ else number\n\n", "    return math.trunc(number)\n\n", "    return math.trunc(number\
    \ * 10. / 10.)\n\n", "    return number - int(number) if number < 0 else number\n\
    \n", "    int_part = int(number)\n    decimal_part = number - int_part\n    return\
    \ decimal_part\n\n", "    int_part = int(number)\n    decimal_part = number -\
    \ int_part\n    return decimal_part\n\n", "    integer_part, decimal_part = math.modf(number)\n\
    \    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part =\
    \ number - int_part\n    return decimal_part\n\n", "    return float(number) -\
    \ int(number)\n\n", "    int_part = int(number)\n    decimal_part = number - int_part\n\
    \    return decimal_part\n\n", "    integer_part = int(number)\n    decimal_part\
    \ = number - integer_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    return\
    \ math.trunc(number * 100) / 100\n\n", "    decimals = math.floor(math.log10(number))\n\
    \    return number / 10 ** decimals\n\n", "    int_part = int(number)\n    decimal_part\
    \ = number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    return\
    \ math.trunc(number * 10. / 10.)\n\n", "    integer_part = int(number)\n    decimal_part\
    \ = number - integer_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    return\
    \ number - int(number) if number < 0 else number\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    int_part\
    \ = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    decimals = math.floor(math.log10(number))\n    return number / 10 **\
    \ decimals\n\n", "    int_part = int(number)\n    decimal_part = number - int_part\n\
    \    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part =\
    \ number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    int_part\
    \ = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    int_part = int(number)\n    decimals = number - int_part\n    return\
    \ decimals\n\n", "    int_part = int(number)\n    decimal_part = number - int_part\n\
    \    return decimal_part\n\n", "    return number - int(number) if number > 0\
    \ else 0\n\n", "    int_part = int(number)\n    decimal_part = number - int_part\n\
    \    return decimal_part\n\n", "    integer_part, decimal_part = math.modf(number)\n\
    \    return decimal_part\n\n", "    decimals = math.floor(math.log10(number))\n\
    \    return number / 10 ** decimals\n\n", "    int_part = int(number)\n    decimal_part\
    \ = number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimals = number - int_part\n    return decimals\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    int_part\
    \ = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    int_part = int(number)\n    decimal_part = number - int_part\n    return\
    \ decimal_part\n\n", "    decimal = number - int(number)\n    if decimal < 0:\n\
    \        decimal = 0\n    return decimal\n\n", "    int_part = int(number)\n \
    \   decimal_part = number - int_part\n    return decimal_part\n\n", "    int_part\
    \ = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    int_part = int(number)\n    decimals = number - int_part\n    return\
    \ decimals\n\n", "    return number - int(number) if number < 0 else number\n\n",
  "    int_part = int(number)\n    decimal = number - int_part\n    return decimal\n\
    \n", "    decimals = math.floor(math.log10(number))\n    return number / 10**decimals\n\
    \n", "    decimals = math.floor(math.log10(number))\n    return number / 10 **\
    \ decimals\n\n", "    int_part = int(number)\n    decimal_part = number - int_part\n\
    \    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part =\
    \ number - int_part\n    return decimal_part\n\n", "    decimals = math.floor(math.log10(number))\n\
    \    return number / 10 ** decimals\n\n", "    decimals = math.floor(math.log10(number))\n\
    \    return number / 10 ** decimals\n\n", "    int_part = int(number)\n    decimal_part\
    \ = number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    int_part\
    \ = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    decimals = math.floor(math.log10(number))\n    return number / 10 **\
    \ decimals\n\n", "    int_part = int(number)\n    decimal_part = number - int_part\n\
    \    return decimal_part\n\n", "    integer_part, decimal_part = math.modf(number)\n\
    \    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part =\
    \ number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    int_part\
    \ = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    integer_part = int(number)\n    decimal_part = number - integer_part\n\
    \    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part =\
    \ number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal = number - int_part\n    return decimal\n\n", "    return math.trunc(number\
    \ * 100) / 100\n\n", "    decimals = math.floor(math.log10(number))\n    return\
    \ number / 10 ** decimals\n\n", "    int_part = int(number)\n    decimal_part\
    \ = number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimals = number - int_part\n    return decimals\n\n", "    return number\
    \ - int(number) if number < 0 else number\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    int_part\
    \ = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    integer_part = int(number)\n    decimal_part = number - integer_part\n\
    \    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part =\
    \ number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    int_part\
    \ = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    int_part = int(number)\n    decimal_part = number - int_part\n    return\
    \ decimal_part\n\n", "    int_part = int(number)\n    decimal_part = number -\
    \ int_part\n    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part\
    \ = number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    int_part\
    \ = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    int_part = int(number)\n    decimal_part = number - int_part\n    return\
    \ decimal_part\n\n", "    return math.trunc(number * 10. / 10.)\n\n", "    int_part\
    \ = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    integer_part = int(number)\n    decimal_part = number - integer_part\n\
    \    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part =\
    \ number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    integer_part\
    \ = int(number)\n    decimal_part = number - integer_part\n    return decimal_part\n\
    \n", "    int_part = int(number)\n    decimal_part = number - int_part\n    return\
    \ decimal_part\n\n", "    int_part = int(number)\n    decimal_part = number -\
    \ int_part\n    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part\
    \ = number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    int_part\
    \ = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    int_part = int(number)\n    decimal_part = number - int_part\n    return\
    \ decimal_part\n\n", "    int_part = int(number)\n    decimal_part = number -\
    \ int_part\n    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part\
    \ = number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    decimals\
    \ = math.floor(math.log10(number))\n    return number / 10**decimals\n\n", " \
    \   return number - int(number) if number > 0 else 0\n\n", "    decimals = math.floor(math.log10(number))\n\
    \    return number / 10**decimals\n\n", "    int_part = int(number)\n    decimal_part\
    \ = number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal = number - int_part\n    return decimal\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    integer_part\
    \ = int(number)\n    decimal_part = number - integer_part\n    return decimal_part\n\
    \n", "    int_part = int(number)\n    decimal_part = number - int_part\n    return\
    \ decimal_part\n\n", "    int_part = int(number)\n    decimal_part = number -\
    \ int_part\n    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part\
    \ = number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    return\
    \ float(number) if number < 1 else math.floor(number)\n\n", "    integer_part\
    \ = int(number)\n    decimal_part = number - integer_part\n    return decimal_part\n\
    \n", "    decimals = math.floor(math.log10(number))\n    return number / 10 **\
    \ decimals\n\n", "    int_part = int(number)\n    decimal = number - int_part\n\
    \    return decimal\n\n", "    int_part = int(number)\n    decimal_part = number\
    \ - int_part\n    return decimal_part\n\n", "    integer_part = int(number)\n\
    \    decimal_part = number - integer_part\n    return decimal_part\n\n", "   \
    \ return number - int(number) if number > 0 else 0\n\n", "    decimals = math.floor(math.log10(number))\n\
    \    return number / 10 ** decimals\n\n", "    integer_part = int(number)\n  \
    \  decimal_part = number - integer_part\n    return decimal_part\n\n", "    int_part\
    \ = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    int_part = int(number)\n    decimal_part = number - int_part\n    return\
    \ decimal_part\n\n", "    return number - int(number) if number < 0 else number\n\
    \n", "    integer_part = int(number)\n    decimal_part = number - integer_part\n\
    \    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part =\
    \ number - int_part\n    return decimal_part\n\n", "    integer_part = int(number)\n\
    \    decimal_part = number - integer_part\n    return decimal_part\n\n", "   \
    \ int_part = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    int_part = int(number)\n    decimal_part = number - int_part\n    return\
    \ decimal_part\n\n", "    return number - int(number) if number < 0 else number\n\
    \n", "    int_part = int(number)\n    decimal_part = number - int_part\n    return\
    \ decimal_part\n\n", "    int_part = int(number)\n    decimal_part = number -\
    \ int_part\n    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part\
    \ = number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    int_part\
    \ = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    decimals = math.floor(math.log10(number))\n    return number / 10 **\
    \ decimals\n\n", "    return math.trunc(number * 100) / 100\n\n", "    int_part\
    \ = int(number)\n    decimal = number - int_part\n    return decimal\n\n", " \
    \   decimals = math.floor(math.log10(number))\n    return number / 10 ** decimals\n\
    \n", "    int_part = int(number)\n    decimal_part = number - int_part\n    return\
    \ decimal_part\n\n", "    integer_part = int(number)\n    decimal_part = number\
    \ - integer_part\n    return decimal_part\n\n", "    integer_part = int(number)\n\
    \    decimal_part = number - integer_part\n    return decimal_part\n\n", "   \
    \ return float(number) - int(number)\n\n", "    integer_part, decimal_part = math.modf(number)\n\
    \    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part =\
    \ number - int_part\n    return decimal_part\n\n", "    integer_part = int(number)\n\
    \    decimal_part = number - integer_part\n    return decimal_part\n\n", "   \
    \ int_part = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    return number - int(number) if number < 0 else number\n\n", "    int_part\
    \ = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    return number - int(number) if number > 0 else 0\n\n", "    integer_part\
    \ = int(number)\n    decimal_part = number - integer_part\n    return decimal_part\n\
    \n", "    integer_part = int(number)\n    decimal_part = number - integer_part\n\
    \    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part =\
    \ number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    int_part\
    \ = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    decimals = math.fmod(number, 1)\n    return number - decimals\n\n",
  "    int_part = int(number)\n    decimal_part = number - int_part\n    return decimal_part\n\
    \n", "    return number - int(number) if number < 0 else number\n\n", "    integer_part\
    \ = int(number)\n    decimal_part = number - integer_part\n    return decimal_part\n\
    \n", "    int_part = int(number)\n    decimal_part = number - int_part\n    return\
    \ decimal_part\n\n", "    int_part = int(number)\n    decimal_part = number -\
    \ int_part\n    return decimal_part\n\n", "    return math.trunc(number * 100)\
    \ / 100\n\n", "    int_part = int(number)\n    decimal_part = number - int_part\n\
    \    return decimal_part\n\n", "    integer_part = int(number)\n    decimal_part\
    \ = number - integer_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n", "    return\
    \ number - int(number)\n\n", "    int_part = int(number)\n    decimal_part = number\
    \ - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n    decimal_part\
    \ = number - int_part\n    return decimal_part\n\n", "    int_part = int(number)\n\
    \    decimal_part = number - int_part\n    return decimal_part\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_122_add_elements
language: py
prompt: "from typing import List\n\ndef add_elements(arr: List[int], k: int) -> int:\n\
  \    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n\
  \    the sum of the elements with at most two digits from the first k elements of\
  \ arr.\n\n    Example:\n\n    >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
  \ 4)\n    24\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1\
  \ <= k <= len(arr)\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([1, -2, -3, 41, 57, 76, 87, 88,\
  \ 99], 3) == -4\n    assert candidate([111, 121, 3, 4000, 5, 6], 2) == 0\n    assert\
  \ candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125\n    assert candidate([111,\
  \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n    assert candidate([1], 1) == 1\n\ndef\
  \ test_check():\n    check(add_elements)\n\ntest_check()\n"
completions: ["    sum = 0\n    i = 0\n    while i < k:\n        sum += arr[i]\n \
    \       i += 1\n    return sum\n", "    sum_ = 0\n    sum_of_digits = 0\n    sum_of_digits_2\
    \ = 0\n    sum_of_digits_3 = 0\n    sum_of_digits_4 = 0\n    sum_of_digits_5 =\
    \ 0\n    sum_of_digits_6 = 0\n    sum_of_digits_7 = 0\n    sum_of_digits_8 = 0\n\
    \    sum_of_digits_9 = 0\n    sum_of_digits_10 = 0\n    sum_of_digits_11 = 0\n\
    \    sum_of_digits_12 = 0\n    sum_of_digits_13 = 0\n    sum_of_digits_14 = 0\n\
    \    sum_of_digits_15 = 0\n    sum_of_digits_16 = 0\n    sum_of_digits_17 = 0\n\
    \    sum_of_digits_18 = 0\n    sum_of_digits_19 = 0\n    sum_of_digits_20 = 0\n\
    \    sum_of_digits_21 = 0\n    sum_of_digits_22 = 0\n    sum_of_digits_23 = 0\n\
    \    sum_of_digits_24 = 0\n    sum_of_digits_25 = 0\n    sum_of_digits_26 = 0\n\
    \    sum_of_digits_27 = 0\n    sum_of_digits_28 = 0\n    sum_of_digits_29 = 0\n\
    \    sum_of_digits_30 = 0\n    sum_of_digits_31 = 0\n    sum_of_digits_32 = 0\n\
    \    sum_of_digits_33 = 0\n    sum_of_digits_34 = 0\n    sum_of_digits_35 = 0\n\
    \    sum_of_digits_36 = 0\n    sum_of_digits_37 = 0\n    sum_of_digits_38 = 0\n\
    \    sum_of_digits_39 = 0\n    sum_of_digits_40 = 0\n    sum_of_digits_41 = 0\n\
    \    sum_of_digits_42 = 0\n    sum_of_digits_43 = 0\n    sum_of_digits_44 = 0\n\
    \    sum_of_digits_45 = 0\n    sum_of_digits_46 = 0\n    sum_of_digits_47 = 0\n\
    \    sum_of_digits_48 = 0\n    sum_of_digits_49 = 0\n    sum_of_digits_50 = 0\n\
    \    sum_of_digits_51 = 0\n    sum_of_digits_52 = 0\n    sum_of_digits_53 = 0\n\
    \    sum_of_digits_54 = 0\n    sum_of_digits_55 = 0\n    sum_of_digits_56 = 0\n\
    \    sum_of_digits_57 = 0\n    sum_of_digits_58 = 0\n    sum_of_digits_59 = 0\n\
    \    sum_of_digits_60 = 0\n    sum_of_digits_61 = 0\n    sum_of_digits_62 = 0\n\
    \    sum_of_digits_63 = 0\n    sum_of_digits_64", "    sum = 0\n    i = 0\n  \
    \  while i < k:\n        sum += arr[i]\n        i += 1\n    return sum\n", " \
    \   sum = 0\n    i = 0\n    while i < k:\n        sum += arr[i]\n        i +=\
    \ 1\n    return sum\n", "    sum = 0\n    i = 0\n    while i < len(arr):\n   \
    \     sum += arr[i]\n        i += 1\n        if sum > 9:\n            sum -= 10\n\
    \            i += 1\n        if sum > k:\n            sum += 10\n            i\
    \ += 1\n    return sum\n\n", "    sum = 0\n    i = 0\n    while i < k:\n     \
    \   sum += arr[i]\n        i += 1\n    return sum\n", "    sum = 0\n    i = 0\n\
    \    while i < len(arr):\n        sum += arr[i]\n        i += 1\n        if sum\
    \ > 9:\n            sum -= 10\n            i += 1\n    return sum\n\n", "    sum\
    \ = 0\n    i = 0\n    while i < k:\n        sum += arr[i]\n        i += 1\n  \
    \  return sum\n", "    sum = 0\n    i = 0\n    while i < k:\n        sum += arr[i]\n\
    \        i += 1\n    return sum\n\n", "    sum = 0\n    i = 0\n    while i < k:\n\
    \        sum += arr[i]\n        i += 1\n    return sum\n", "    sum = 0\n    for\
    \ num in arr[:k]:\n        sum += num\n    return sum\n\n", "    sum = 0\n   \
    \ sum_of_digits = 0\n    digits_left = 0\n    \n    for num in arr:\n        digits_left\
    \ -= 1\n        sum += num\n        sum_of_digits += num // 10\n        \n   \
    \     if digits_left == 0:\n            sum += sum_of_digits\n            sum_of_digits\
    \ = 0\n            digits_left = k - len(arr)\n    \n    return sum\n", "    sum\
    \ = 0\n    i = 0\n    while i < k:\n        sum += arr[i]\n        i += 1\n  \
    \  return sum\n", "    sum = 0\n    i = 0\n    while i < k:\n        sum += arr[i]\n\
    \        i += 1\n    return sum\n\n", "    sum = 0\n    count = 0\n    for num\
    \ in arr:\n        sum += num\n        count += 1\n        if count >= k:\n  \
    \          break\n    return sum\n\n", "    sum = 0\n    i = 0\n    while i <\
    \ len(arr) and sum < k:\n        sum += arr[i]\n        i += 1\n    return sum\n\
    \n", "    sum_arr = 0\n    sum_arr += arr[0]\n    for i in range(1, len(arr)):\n\
    \        sum_arr += arr[i]\n        if sum_arr > k:\n            sum_arr -= arr[i-1]\n\
    \    return sum_arr\n", "    sum = 0\n    count = 0\n    for num in arr:\n   \
    \     if count < k:\n            sum += num\n            count += 1\n        else:\n\
    \            sum -= num\n            count = 0\n    return sum\n", "    sum =\
    \ 0\n    i = 0\n    while i < len(arr):\n        if arr[i] > 9:\n            sum\
    \ += arr[i]\n            i += 1\n        else:\n            sum += arr[i] + 10\n\
    \            i += 1\n    return sum\n", "    # Your code here\n    sum = 0\n \
    \   i = 0\n    while i < k:\n        sum += arr[i]\n        i += 1\n    return\
    \ sum\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_76_is_simple_power
language: py
prompt: "def is_simple_power(x: int, n: int) -> bool:\n    \"\"\"Your task is to write\
  \ a function that returns true if a number x is a simple\n    power of n and false\
  \ in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n\
  \    >>> is_simple_power(1, 4)\n    true\n    >>> is_simple_power(2, 2)\n    true\n\
  \    >>> is_simple_power(8, 2)\n    true\n    >>> is_simple_power(3, 2)\n    false\n\
  \    >>> is_simple_power(3, 1)\n    false\n    >>> is_simple_power(5, 3)\n    false\n\
  \    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(16, 2) == True\n    assert candidate(143214,\
  \ 16) == False\n    assert candidate(4, 2) == True\n    assert candidate(9, 3) ==\
  \ True\n    assert candidate(16, 4) == True\n    assert candidate(24, 2) == False\n\
  \    assert candidate(128, 4) == False\n    assert candidate(12, 6) == False\n \
  \   assert candidate(1, 1) == True\n    assert candidate(1, 12) == True\n\ndef test_check():\n\
  \    check(is_simple_power)\n\ntest_check()\n"
completions: ["    if n == 0:\n        return True\n    if n == 1:\n        return\
    \ x == int(x)\n    if x == int(x):\n        return is_simple_power(x, n - 1)\n\
    \    return False\n\n", "    if n == 0:\n        return True\n    if n == 1:\n\
    \        return x % 1 == 0\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x,\
    \ n // 3)\n\n", "    if n == 1:\n        return True\n    if n == 0:\n       \
    \ return False\n    if x % n == 0:\n        return True\n    else:\n        return\
    \ False\n\n", "    if n == 1:\n        return True\n    if n == 2:\n        return\
    \ True\n    if n % 2 == 0:\n        return False\n    if n % 3 == 0:\n       \
    \ return False\n    if n % 5 == 0:\n        return False\n    if n % 7 == 0:\n\
    \        return False\n    if n % 11 == 0:\n        return False\n    if n % 13\
    \ == 0:\n        return False\n    if n % 17 == 0:\n        return False\n   \
    \ if n % 19 == 0:\n        return False\n    if n % 23 == 0:\n        return False\n\
    \    if n % 29 == 0:\n        return False\n    if n % 31 == 0:\n        return\
    \ False\n    if n % 37 == 0:\n        return False\n    if n % 41 == 0:\n    \
    \    return False\n    if n % 43 == 0:\n        return False\n    if n % 47 ==\
    \ 0:\n        return False\n    if n % 53 == 0:\n        return False\n    if\
    \ n % 59 == 0:\n        return False\n    if n % 61 == 0:\n        return False\n\
    \    if n % 67 == 0:\n        return False\n    if n % 71 == 0:\n        return\
    \ False\n    if n % 73 == 0:\n        return False\n    if n % 79 == 0:\n    \
    \    return False\n    if n % 83 == 0:\n        return False\n    if n % 89 ==\
    \ 0:\n        return False\n    if n % 97 == 0:\n        return False\n    if\
    \ n % 103 == 0:\n        return False\n    if n % 107 == 0:\n        return False\n\
    \    if n % 113 == 0:\n        return False\n    if n % 123 == 0:\n        return\
    \ False\n    if n % 129 == 0:\n        return False\n    if n % 131 == 0:\n  \
    \      return False\n    if n % 137 == 0:\n        return False\n    if n % 145\
    \ == 0:\n        return False\n    if n % 149 == 0:\n        return False\n  \
    \  if n % 151 == 0:\n        return False\n    if n % 157 == 0:\n        return\
    \ False\n    if n % 163 == 0:\n        return False\n    if n % 167 == 0:\n  \
    \      return False\n    if n % 173 == 0:\n        return False\n    if n % 179\
    \ == 0:\n        return False\n    if n % 181 == 0:\n        return False\n  \
    \  if n % 187 == 0:\n        return False\n    if n % 193 == 0:\n        return\
    \ False\n    if n % 199 == 0:\n        return False\n    if n % 203 == 0:\n  \
    \      return False\n    if n % 209 == 0:\n        return False\n    if n % 215\
    \ == 0:\n        return False\n    if n % 221 == 0:\n        return False\n  \
    \  if n % 227 == 0:\n        return False\n    if n % 233 == 0:\n        return\
    \ False\n    if n % 239 == 0:\n        return False\n    if n % 243 == 0:\n  \
    \      return False\n    if n % 247 == 0:\n        return False\n    if n % 251\
    \ == 0:\n        return False\n    if n % 257 == 0:\n        return False\n  \
    \  if n % 263 == 0:\n        return False\n    if n % 269 == 0:\n        return\
    \ False\n    if n % 273 == 0:\n        return False\n    if n % 279 == 0:\n  \
    \      return False\n    if n % 283 == 0:\n        return False\n    if n % 289\
    \ == 0:\n        return False\n    if n % 293 == 0:\n        return False\n  \
    \  if n % 299 == 0:\n        return False\n    if n % 303 == 0:\n        return\
    \ False\n    if n % 309 == 0:\n        return False\n    if n % 313 == 0:\n  \
    \      return False\n    if n % 317 == 0:\n        return False\n    if n % 323\
    \ == 0:\n        return False\n    if n % 329 == 0:\n        return False\n  \
    \  if ", "    if n == 0:\n        return True\n    if n == 1:\n        return\
    \ x == n\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n\
    \        return is_simple_power(x, n // 2) or x == n ** 2\n\n", "    if n == 0:\n\
    \        return True\n    if n == 1:\n        return x == n\n    if n % 2 == 0:\n\
    \        return is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x,\
    \ (n - 1) // 2)\n\n", "    if n == 1:\n        return True\n    if n % 2 == 0:\n\
    \        return is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x,\
    \ n // 2) or is_simple_power(x, n // 3)\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return x == 1 and is_simple_power(x, 2)\n    if\
    \ n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n        return\
    \ is_simple_power(x, n // 2)\n\n", "    if n == 0:\n        return True\n    if\
    \ n == 1:\n        return x == int(x)\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or x == int(x)\
    \ ** n\n\n", "    if n == 1:\n        return True\n    if n == 0:\n        return\
    \ False\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n\
    \        return is_simple_power(x, n // 2) or is_simple_power(x, n // 3)\n\n",
  "    if n == 0:\n        return True\n    if n == 1:\n        return x == 1 and\
    \ is_power_of_two(x)\n    if x == 1 or x == n ** 2:\n        return True\n   \
    \ if x % n == 0:\n        return is_power_of_two(x) and is_simple_power(x, n //\
    \ 2)\n    return False\n\n", "    if n == 0:\n        return True\n    if n ==\
    \ 1:\n        return x == n\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or x == n ** 2\n\
    \n", "    if n == 1:\n        return True\n    if n % 2 == 0:\n        return\
    \ False\n    if n % 3 == 0:\n        return True\n    if n % 5 == 0:\n       \
    \ return False\n    if n % 7 == 0:\n        return True\n    if n % 9 == 0:\n\
    \        return False\n    if n % 11 == 0:\n        return True\n    if n % 13\
    \ == 0:\n        return False\n    if n % 17 == 0:\n        return True\n    if\
    \ n % 19 == 0:\n        return False\n    if n % 23 == 0:\n        return True\n\
    \    if n % 29 == 0:\n        return False\n    if n % 31 == 0:\n        return\
    \ True\n    if n % 37 == 0:\n        return False\n    if n % 41 == 0:\n     \
    \   return True\n    if n % 43 == 0:\n        return False\n    if n % 47 == 0:\n\
    \        return True\n    if n % 49 == 0:\n        return False\n    if n % 53\
    \ == 0:\n        return True\n    if n % 57 == 0:\n        return False\n    if\
    \ n % 61 == 0:\n        return True\n    if n % 67 == 0:\n        return False\n\
    \    if n % 71 == 0:\n        return True\n    if n % 73 == 0:\n        return\
    \ False\n    if n % 79 == 0:\n        return True\n    if n % 83 == 0:\n     \
    \   return False\n    if n % 89 == 0:\n        return True\n    if n % 97 == 0:\n\
    \        return False\n    if n % 101 == 0:\n        return True\n    if n % 103\
    \ == 0:\n        return False\n    if n % 107 == 0:\n        return True\n   \
    \ if n % 109 == 0:\n        return False\n    if n % 113 == 0:\n        return\
    \ True\n    if n % 117 == 0:\n        return False\n    if n % 121 == 0:\n   \
    \     return True\n    if n % 123 == 0:\n        return False\n    if n % 127\
    \ == 0:\n        return True\n    if n % 129 == 0:\n        return False\n   \
    \ if n % 131 == 0:\n        return True\n    if n % 133 == 0:\n        return\
    \ False\n    if n % 137 == 0:\n        return True\n    if n % 139 == 0:\n   \
    \     return False\n    if n % 141 == 0:\n        return True\n    if n % 143\
    \ == 0:\n        return False\n    if n % 147 == 0:\n        return True\n   \
    \ if n % 149 == 0:\n        return False\n    if n % 151 == 0:\n        return\
    \ True\n    if n % 153 == 0:\n        return False\n    if n % 157 == 0:\n   \
    \     return True\n    if n % 159 == 0:\n        return False\n    if n % 161\
    \ == 0:\n        return True\n    if n % 163 == 0:\n        return False\n   \
    \ if n % 167 == 0:\n        return True\n    if n % 169 == 0:\n        return\
    \ False\n    if n % 171 == 0:\n        return True\n    if n % 173 == 0:\n   \
    \     return False\n    if n % 177 == 0:\n        return True\n    if n % 179\
    \ == 0:\n        return False\n    if n % 181 == 0:\n        return True\n   \
    \ if n % 183 == 0:\n        return False\n    if n % 187 == 0:\n        return\
    \ True\n    if n % 189 == 0:\n        return False\n    if n % 191 == 0:\n   \
    \     return True\n    if n % 193 == 0:\n        return False\n    if n % 197\
    \ == 0:\n        return True\n    if n % 199 == 0:\n        return False\n   \
    \ if n % 201 == 0:\n        return True\n    if n % 203 == 0:\n        return\
    \ False\n    if n % 207 == 0:\n        return True\n    if n % 209 == 0:\n   \
    \     return False\n    if n % 211 == 0:\n        return True\n    if n % ", " \
    \   if n == 0:\n        return True\n    if n == 1:\n        return x == 1 and\
    \ is_simple_power(x, 2)\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or x == n\n\n",
  "    if n == 0:\n        return True\n    if n == 1:\n        return x % 1 == 0\n\
    \    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n  \
    \      return is_simple_power(x, (n - 1) // 2)\n\n", "    if n == 0:\n       \
    \ return True\n    if n == 1:\n        return x == n\n    if n == 2:\n       \
    \ return x == x * x\n    if n % 2 == 0:\n        return is_simple_power(x, n /\
    \ 2)\n    else:\n        return is_simple_power(x, n / 2) or x == x * x\n\n",
  "    if n == 0:\n        return True\n    if n == 1:\n        return (x == 1)\n\
    \    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n  \
    \      return is_simple_power(x, n // 2) or is_simple_power(x, n // 3)\n\n", " \
    \   if n == 1:\n        return True\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x,\
    \ n // 3)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n       \
    \ return (x == 1)\n    if n % 2 == 0:\n        return is_simple_power(x, n //\
    \ 2)\n    else:\n        return is_simple_power(x, (n - 1) // 2)\n\n", "    if\
    \ n == 1:\n        return True\n    if n % 2 == 0:\n        return False\n   \
    \ if n % 3 == 0:\n        return True\n    if n % 5 == 0:\n        return False\n\
    \    if n % 7 == 0:\n        return True\n    if n % 9 == 0:\n        return False\n\
    \    if n % 11 == 0:\n        return True\n    if n % 13 == 0:\n        return\
    \ False\n    if n % 17 == 0:\n        return True\n    if n % 19 == 0:\n     \
    \   return False\n    if n % 23 == 0:\n        return True\n    if n % 29 == 0:\n\
    \        return False\n    if n % 31 == 0:\n        return True\n    if n % 37\
    \ == 0:\n        return False\n    if n % 41 == 0:\n        return True\n    if\
    \ n % 43 == 0:\n        return False\n    if n % 47 == 0:\n        return True\n\
    \    if n % 49 == 0:\n        return False\n    if n % 53 == 0:\n        return\
    \ True\n    if n % 57 == 0:\n        return False\n    if n % 61 == 0:\n     \
    \   return True\n    if n % 67 == 0:\n        return False\n    if n % 71 == 0:\n\
    \        return True\n    if n % 73 == 0:\n        return False\n    if n % 79\
    \ == 0:\n        return True\n    if n % 83 == 0:\n        return False\n    if\
    \ n % 89 == 0:\n        return True\n    if n % 97 == 0:\n        return False\n\
    \    if n % 103 == 0:\n        return True\n    if n % 107 == 0:\n        return\
    \ False\n    if n % 109 == 0:\n        return True\n    if n % 113 == 0:\n   \
    \     return False\n    if n % 127 == 0:\n        return True\n    if n % 131\
    \ == 0:\n        return False\n    if n % 137 == 0:\n        return True\n   \
    \ if n % 141 == 0:\n        return False\n    if n % 147 == 0:\n        return\
    \ True\n    if n % 151 == 0:\n        return False\n    if n % 157 == 0:\n   \
    \     return True\n    if n % 161 == 0:\n        return False\n    if n % 167\
    \ == 0:\n        return True\n    if n % 171 == 0:\n        return False\n   \
    \ if n % 177 == 0:\n        return True\n    if n % 181 == 0:\n        return\
    \ False\n    if n % 187 == 0:\n        return True\n    if n % 191 == 0:\n   \
    \     return False\n    if n % 197 == 0:\n        return True\n    if n % 201\
    \ == 0:\n        return False\n    if n % 207 == 0:\n        return True\n   \
    \ if n % 211 == 0:\n        return False\n    if n % 217 == 0:\n        return\
    \ True\n    if n % 221 == 0:\n        return False\n    if n % 227 == 0:\n   \
    \     return True\n    if n % 231 == 0:\n        return False\n    if n % 237\
    \ == 0:\n        return True\n    if n % 241 == 0:\n        return False\n   \
    \ if n % 247 == 0:\n        return True\n    if n % 251 == 0:\n        return\
    \ False\n    if n % 257 == 0:\n        return True\n    if n % 261 == 0:\n   \
    \     return False\n    if n % 267 == 0:\n        return True\n    if n % 271\
    \ == 0:\n        return False\n    if n % 277 == 0:\n        return True\n   \
    \ if n % 281 == 0:\n        return False\n    if n % 287 == 0:\n        return\
    \ True\n    if n % 291 == 0:\n        return False\n    if n % 297 == 0:\n   \
    \     return True\n    if n % 301 == 0:\n        return False\n    if n % 307\
    \ == 0:\n        return True\n    if n % 311 == 0:\n        return False\n   \
    \ if n % 317 == 0:\n        return True", "    if n == 0:\n        return True\n\
    \    if n == 1:\n        return x == n\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or x == n ** 2\n\
    \n", "    if n == 1:\n        return True\n    if x == n:\n        return True\n\
    \    if x % n == 0:\n        return is_simple_power(x, n // 2)\n    else:\n  \
    \      return False\n\n", "    if n == 0:\n        return True\n    if n == 1:\n\
    \        return True\n    if n % 2 == 0:\n        return is_simple_power(x, n\
    \ // 2)\n    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x,\
    \ n // 3)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n       \
    \ return x == n\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n\
    \    else:\n        return is_simple_power(x, n // 2) or x == n ** 2\n\n", " \
    \   if n == 0:\n        return True\n    if n == 1:\n        return x == n\n \
    \   if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n   \
    \     return is_simple_power(x, n // 2) or x == n ** 2\n\n", "    if n == 0:\n\
    \        return True\n    if n == 1:\n        return x == n\n    if n % 2 == 0:\n\
    \        return is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x,\
    \ n // 2) or x == n ** 2\n\n", "    if n == 0:\n        return True\n    if n\
    \ == 1:\n        return x == 1 and is_power_of_two(x)\n    if x == 1 or x == n-1:\n\
    \        return True\n    if x % n == 0:\n        return is_power_of_two(x) and\
    \ is_simple_power(x, n-1)\n    return False\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return x == 1 and is_power_of_two(x)\n    if x\
    \ == 1 or x == n:\n        return True\n    if n % 2 == 0:\n        return is_power_of_two(x\
    \ * 2) and is_power_of_two(n // 2)\n    return False\n\n", "    if n == 0:\n \
    \       return True\n    if n == 1:\n        return x == int(x)\n    if n == 2:\n\
    \        return x == int(x) ** 2\n    if n == 3:\n        return x == int(x) **\
    \ 3\n    if n == 4:\n        return x == int(x) ** 4\n    if n == 5:\n       \
    \ return x == int(x) ** 5\n    if n == 6:\n        return x == int(x) ** 6\n \
    \   if n == 7:\n        return x == int(x) ** 7\n    if n == 8:\n        return\
    \ x == int(x) ** 8\n    if n == 9:\n        return x == int(x) ** 9\n    if n\
    \ == 10:\n        return x == int(x) ** 10\n    if n == 11:\n        return x\
    \ == int(x) ** 11\n    if n == 12 or n == 13:\n        return x == int(x) ** 12\n\
    \    if n == 14:\n        return x == int(x) ** 13\n    if n == 15:\n        return\
    \ x == int(x) ** 14\n    if n == 16:\n        return x == int(x) ** 15\n    if\
    \ n == 17:\n        return x == int(x) ** 16\n    if n == 18:\n        return\
    \ x == int(x) ** 17\n    if n == 19:\n        return x == int(x) ** 18\n    if\
    \ n == 20:\n        return x == int(x) ** 19\n    if n == 21:\n        return\
    \ x == int(x) ** 20\n    if n == 22:\n        return x == int(x) ** 21\n    if\
    \ n == 23:\n        return x == int(x) ** 22\n    if n == 24:\n        return\
    \ x == int(x) ** 23\n    if n == 25:\n        return x == int(x) ** 24\n    if\
    \ n == 26:\n        return x == int(x) ** 25\n    if n == 27:\n        return\
    \ x == int(x) ** 26\n    if n == 28:\n        return x == int(x) ** 27\n    if\
    \ n == 29:\n        return x == int(x) ** 28\n    if n == 30 or n == 31:\n   \
    \     return x == int(x) ** 29\n    if n == 32:\n        return x == int(x) **\
    \ 30\n    if n == 33:\n        return x == int(x) ** 31\n    if n == 34:\n   \
    \     return x == int(x) ** 32\n    if n == 35:\n        return x == int(x) **\
    \ 33\n    if n == 36:\n        return x == int(x) ** 34\n    if n == 37:\n   \
    \     return x == int(x) ** 35\n    if n == 38:\n        return x == int(x) **\
    \ 36\n    if n == 39:\n        return x == int(x) ** 37\n    if n == 40 or n ==\
    \ 41:\n        return x == int(x) ** 38\n    if n == 42:\n        return x ==\
    \ int(x) ** 39\n    if n == 43:\n        return x == int(x) ** 40\n    if n ==\
    \ 44:\n        return x == int(x) ** 41\n    if n == 45:\n        return x ==\
    \ int(x) ** 42\n    if n == 46:\n        return x == int(x) ** ", "    if n ==\
    \ 0:\n        return True\n    if n == 1:\n        return x == n\n    if n % 2\
    \ == 0:\n        return is_simple_power(x, n // 2)\n    else:\n        return\
    \ is_simple_power(x, (n - 1) // 2)\n\n", "    if n == 0:\n        return True\n\
    \    if n == 1:\n        return (x == 1)\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x,\
    \ n // 3)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n       \
    \ return x % 1 == 0\n    if n % 2 == 0:\n        return is_simple_power(x, n //\
    \ 2)\n    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x,\
    \ n // 3)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n       \
    \ return x == n\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n\
    \    else:\n        return is_simple_power(x, n // 2) or x == n ** 2\n\n", " \
    \   if n == 0:\n        return True\n    if n == 1:\n        return x == n\n \
    \   if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n   \
    \     return is_simple_power(x, n // 2) or x == n ** 2\n\n", "    if n == 0:\n\
    \        return True\n    if n == 1:\n        return x == n\n    if n % 2 == 0:\n\
    \        return is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x,\
    \ (n - 1) // 2)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n \
    \       return x == n\n    if n % 2 == 0:\n        return is_simple_power(x, n\
    \ // 2)\n    else:\n        return is_simple_power(x, n // 2) or x == n ** 2\n\
    \n", "    if n == 1:\n        return True\n    if n % 2 == 0:\n        return\
    \ False\n    if n % 3 == 0:\n        return True\n    if n % 5 == 0:\n       \
    \ return False\n    if n % 7 == 0:\n        return True\n    if n % 9 == 0:\n\
    \        return False\n    if n % 11 == 0:\n        return True\n    if n % 13\
    \ == 0:\n        return False\n    if n % 17 == 0:\n        return True\n    if\
    \ n % 19 == 0:\n        return False\n    if n % 23 == 0:\n        return True\n\
    \    if n % 29 == 0:\n        return False\n    if n % 31 == 0:\n        return\
    \ True\n    if n % 37 == 0:\n        return False\n    if n % 41 == 0:\n     \
    \   return True\n    if n % 43 == 0:\n        return False\n    if n % 47 == 0:\n\
    \        return True\n    if n % 49 == 0:\n        return False\n    if n % 53\
    \ == 0:\n        return True\n    if n % 57 == 0:\n        return False\n    if\
    \ n % 61 == 0:\n        return True\n    if n % 67 == 0:\n        return False\n\
    \    if n % 71 == 0:\n        return True\n    if n % 73 == 0:\n        return\
    \ False\n    if n % 79 == 0:\n        return True\n    if n % 83 == 0:\n     \
    \   return False\n    if n % 89 == 0:\n        return True\n    if n % 97 == 0:\n\
    \        return False\n    if n % 101 == 0:\n        return True\n    if n % 103\
    \ == 0:\n        return False\n    if n % 107 == 0:\n        return True\n   \
    \ if n % 109 == 0:\n        return False\n    if n % 113 == 0:\n        return\
    \ True\n    if n % 127 == 0:\n        return False\n    if n % 131 == 0:\n   \
    \     return True\n    if n % 137 == 0:\n        return False\n    if n % 141\
    \ == 0:\n        return True\n    if n % 147 == 0:\n        return False\n   \
    \ if n % 151 == 0:\n        return True\n    if n % 157 == 0:\n        return\
    \ False\n    if n % 161 == 0:\n        return True\n    if n % 167 == 0:\n   \
    \     return False\n    if n % 171 == 0:\n        return True\n    if n % 177\
    \ == 0:\n        return False\n    if n % 181 == 0:\n        return True\n   \
    \ if n % 187 == 0:\n        return False\n    if n % 191 == 0:\n        return\
    \ True\n    if n % 197 == 0:\n        return False\n    if n % 201 == 0:\n   \
    \     return True\n    if n % 207 == 0:\n        return False\n    if n % 211\
    \ == 0:\n        return True\n    if n % 217 == 0:\n        return False\n   \
    \ if n % 221 == 0:\n        return True\n    if n % 227 == 0:\n        return\
    \ False\n    if n % 231 == 0:\n        return True\n    if n % 237 == 0:\n   \
    \     return False\n    if n % 241 == 0:\n        return True\n    if n % 247\
    \ == 0:\n        return False\n    if n % 251 == 0:\n        return True\n   \
    \ if n % 257 == 0:\n        return False\n    if n % 261 == 0:\n        return\
    \ True\n    if n % 267 == 0:\n        return False\n    if n % 271 == 0:\n   \
    \     return True\n    if n % 277 == 0:\n        return False\n    if n % 281\
    \ == 0:\n        return True\n    if n % 287 == 0:\n        return False\n   \
    \ if n % 291 == 0:\n        return True\n    if n % 297 == 0:\n        return\
    \ False\n    if n % 301 == 0:\n        return True\n    if n % 307 == 0:\n   \
    \     return False\n    if n % 311 == 0:\n        return True", "    if n == 0:\n\
    \        return True\n    if n == 1:\n        return x == n\n    if n % 2 == 0:\n\
    \        return is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x,\
    \ n // 2) or x == n ** 2\n\n", "    if n == 0:\n        return True\n    if n\
    \ == 1:\n        return x == 1 and is_power_of_two(x)\n    if x == 1 or x == n-1:\n\
    \        return True\n    if x % n == 0:\n        return is_power_of_two(x //\
    \ n)\n    return False\n\n", "    if n == 0:\n        return True\n    if n ==\
    \ 1:\n        return x == 1 and is_simple_power(x, 2)\n    if n % 2 == 0:\n  \
    \      return is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x,\
    \ (n - 1) // 2)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n \
    \       return True\n    if n % 2 == 0:\n        return False\n    if n % 3 ==\
    \ 0:\n        return False\n    if n % 5 == 0:\n        return False\n    if n\
    \ % 7 == 0:\n        return False\n    if n % 11 == 0:\n        return False\n\
    \    if n % 13 == 0:\n        return False\n    if n % 17 == 0:\n        return\
    \ False\n    if n % 19 == 0:\n        return False\n    if n % 23 == 0:\n    \
    \    return False\n    if n % 29 == 0:\n        return False\n    if n % 31 ==\
    \ 0:\n        return False\n    if n % 37 == 0:\n        return False\n    if\
    \ n % 41 == 0:\n        return False\n    if n % 43 == 0:\n        return False\n\
    \    if n % 47 == 0:\n        return False\n    if n % 53 == 0:\n        return\
    \ False\n    if n % 59 == 0:\n        return False\n    if n % 61 == 0:\n    \
    \    return False\n    if n % 67 == 0:\n        return False\n    if n % 71 ==\
    \ 0:\n        return False\n    if n % 73 == 0:\n        return False\n    if\
    \ n % 79 == 0:\n        return False\n    if n % 83 == 0:\n        return False\n\
    \    if n % 89 == 0:\n        return False\n    if n % 97 == 0:\n        return\
    \ False\n    if n % 103 == 0:\n        return False\n    if n % 107 == 0:\n  \
    \      return False\n    if n % 113 == 0:\n        return False\n    if n % 123\
    \ == 0:\n        return False\n    if n % 129 == 0:\n        return False\n  \
    \  if n % 137 == 0:\n        return False\n    if n % 145 == 0:\n        return\
    \ False\n    if n % 149 == 0:\n        return False\n    if n % 153 == 0:\n  \
    \      return False\n    if n % 157 == 0:\n        return False\n    if n % 163\
    \ == 0:\n        return False\n    if n % 167 == 0:\n        return False\n  \
    \  if n % 173 == 0:\n        return False\n    if n % 177 == 0:\n        return\
    \ False\n    if n % 181 == 0:\n        return False\n    if n % 183 == 0:\n  \
    \      return False\n    if n % 189 == 0:\n        return False\n    if n % 193\
    \ == 0:\n        return False\n    if n % 197 == 0:\n        return False\n  \
    \  if n % 203 == 0:\n        return False\n    if n % 207 == 0:\n        return\
    \ False\n    if n % 211 == 0:\n        return False\n    if n % 213 == 0:\n  \
    \      return False\n    if n % 217 == 0:\n        return False\n    if n % 221\
    \ == 0:\n        return False\n    if n % 223 == 0:\n        return False\n  \
    \  if n % 227 == 0:\n        return False\n    if n % 229 == 0:\n        return\
    \ False\n    if n % 233 == 0:\n        return False\n    if n % 239 == 0:\n  \
    \      return False\n    if n % 243 == 0:\n        return False\n    if n % 247\
    \ == 0:\n        return False\n    if n % 251 == 0:\n        return False\n  \
    \  if n % 253 == 0:\n        return False\n    if n % 257 == 0:\n        return\
    \ False\n    if n % 263 == 0:\n        return False\n    if n % 267 == 0:\n  \
    \      return False\n    if n % 271 == 0:\n        return False\n    if n % 273\
    \ == 0:\n        return False\n    if n % 279 == 0:\n        return False\n  \
    \  if n % 283 == 0:\n        return False\n    if n % 287 == 0:\n        return\
    \ False\n    if n % 291 == 0:\n        return False\n    if n % 293 == 0:\n  \
    \      return False", "    if n == 1:\n        return True\n    if n % 2 == 0:\n\
    \        return False\n    if n % 3 == 0:\n        return True\n    if n % 5 ==\
    \ 0:\n        return True\n    if n % 7 == 0:\n        return True\n    return\
    \ False\n\n", "    if n == 0:\n        return True\n    if n == 1:\n        return\
    \ x % 1 == 0\n    if n == 2:\n        return is_simple_power(x, n-1) and is_simple_power(x,\
    \ n-1)\n    if n == 3:\n        return is_simple_power(x, n-1) and is_simple_power(x,\
    \ n-2) and is_simple_power(x, n-1)\n    if n == 4:\n        return is_simple_power(x,\
    \ n-1) and is_simple_power(x, n-2) and is_simple_power(x, n-3) and is_simple_power(x,\
    \ n-1)\n    if n == 5:\n        return is_simple_power(x, n-1) and is_simple_power(x,\
    \ n-2) and is_simple_power(x, n-3) and is_simple_power(x, n-4) and is_simple_power(x,\
    \ n-1)\n    if n == 6:\n        return is_simple_power(x, n-1) and is_simple_power(x,\
    \ n-2) and is_simple_power(x, n-3) and is_simple_power(x, n-4) and is_simple_power(x,\
    \ n-5) and is_simple_power(x, n-1)\n    if n == 7:\n        return is_simple_power(x,\
    \ n-1) and is_simple_power(x, n-2) and is_simple_power(x, n-3) and is_simple_power(x,\
    \ n-4) and is_simple_power(x, n-5) and is_simple_power(x, n-6) and is_simple_power(x,\
    \ n-1)\n    if n == 8:\n        return is_simple_power(x, n-1) and is_simple_power(x,\
    \ n-2) and is_simple_power(x, n-3) and is_simple_power(x, n-4) and is_simple_power(x,\
    \ n-5) and is_simple_power(x, n-6) and is_simple_power(x, n-7) and is_simple_power(x,\
    \ n-1)\n    if n == 9:\n        return is_simple_power(x, n-1) and is_simple_power(x,\
    \ n-2) and is_simple_power(x, n-3) and is_simple_power(x, n-4) and is_simple_power(x,\
    \ n-5) and is_simple_power(x, n-6) and is_simple_power(x, n-7) and is_simple_power(x,\
    \ n-8) and is_simple_power(x, n-1)\n    if n == 10:\n        return is_simple_power(x,\
    \ n-1) and is_simple_power(x, n-2) and is_simple_power(x, n-3) and is_simple_power(x,\
    \ n-4) and is_simple_power(x, n-5) and is_simple_power(x, n-6) and is_simple_power(x,\
    \ n-7) and is_simple_power(x, n-8) and is_simple_power(x, n-9) and is_simple_power(x,\
    \ n-1)\n    if n == 11:\n        return is_simple_power(x, n-1) and is_simple_power(x,\
    \ n-2) and is_simple_power(x, n-3) and is_simple_power(x, n-4) and is_simple_power(x,\
    \ n-5) and is_simple_power(x, n-6) and is_simple_power(x, n-7) and is_simple_power(x,\
    \ n-8) and is_simple_power(x, n", "    if n == 0:\n        return True\n    if\
    \ n == 1:\n        return x == 1 and is_simple_power(x, 2)\n    if x == 1 or x\
    \ == n:\n        return True\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return False\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return x == n\n    if n % 2 == 0:\n        return\
    \ is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x, n //\
    \ 2) or is_simple_power(x, n // 3)\n\n", "    if n == 0:\n        return True\n\
    \    if n == 1:\n        return x == n\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or x == n ** 2\n\
    \n", "    if n == 0:\n        return True\n    if n == 1:\n        return x ==\
    \ n\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n\
    \        return is_simple_power(x, n // 2) or x == n ** 2\n\n", "    if n == 1:\n\
    \        return True\n    if n == 0:\n        return False\n    if n % 2 == 0:\n\
    \        return is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x,\
    \ n // 2) or is_simple_power(x, n // 3)\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return x == n\n    if n % 2 == 0:\n        return\
    \ is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x, n //\
    \ 2) or x == n ** 2\n\n", "    if n == 0:\n        return True\n    if n == 1:\n\
    \        return x % 1 == 0\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x,\
    \ n // 3)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n       \
    \ return x == 1 and is_power_of_two(x)\n    if n == 2:\n        return x == 1\
    \ and is_power_of_two(x // 2)\n    if n == 3:\n        return x == 1 and is_power_of_two(x\
    \ // 4) and is_power_of_two(x // 4)\n    if n == 4:\n        return x == 1 and\
    \ is_power_of_two(x // 8) and is_power_of_two(x // 8)\n    if n == 5:\n      \
    \  return x == 1 and is_power_of_two(x // 16) and is_power_of_two(x // 16)\n \
    \   if n == 6:\n        return x == 1 and is_power_of_two(x // 32) and is_power_of_two(x\
    \ // 32)\n    if n == 7:\n        return x == 1 and is_power_of_two(x // 64) and\
    \ is_power_of_two(x // 64)\n    if n == 8:\n        return x == 1 and is_power_of_two(x\
    \ // 128) and is_power_of_two(x // 128)\n    if n == 9:\n        return x == 1\
    \ and is_power_of_two(x // 256) and is_power_of_two(x // 256)\n    if n == 10:\n\
    \        return x == 1 and is_power_of_two(x // 512) and is_power_of_two(x //\
    \ 512)\n    if n == 11:\n        return x == 1 and is_power_of_two(x // 1024)\
    \ and is_power_of_two(x // 1024)\n    if n == 12 or n == 13:\n        return x\
    \ == 1 and is_power_of_two(x // 2048) and is_power_of_two(x // 2048)\n    if n\
    \ == 14:\n        return x == 1 and is_power_of_two(x // 4096) and is_power_of_two(x\
    \ // 4096)\n    if n == 15:\n        return x == 1 and is_power_of_two(x // 8192)\
    \ and is_power_of_two(x // 8192)\n    if n == 16:\n        return x == 1 and is_power_of_two(x\
    \ // 16384) and is_power_of_two(x // 16384)\n    if n == 17:\n        return x\
    \ == 1 and is_power_of_two(x // 32768) and is_power_of_two(x // 32768)\n    if\
    \ n == 18:\n        return x == 1 and is_power_of_two(x // 65536) and is_power_of_two(x\
    \ // 65536)\n    if n == 19:\n        return x == 1 and is_power_of_two(x // 131072)\
    \ and is_power_of_two(x // 131072)\n    if n == 20:\n        return x == 1 and\
    \ is_power_of_two(x // 262144) and is_power_of_two(x // 262144)\n    if n == 21:\n\
    \        return x == 1 and is_power_of_two(x // 524288) and is_", "    if n ==\
    \ 1:\n        return True\n    if n == 2:\n        return True\n    if n % 2 ==\
    \ 0:\n        return False\n    if n % 3 == 0:\n        return False\n    if n\
    \ % 5 == 0:\n        return False\n    if n % 7 == 0:\n        return False\n\
    \    if n % 11 == 0:\n        return False\n    if n % 13 == 0:\n        return\
    \ False\n    if n % 17 == 0:\n        return False\n    if n % 19 == 0:\n    \
    \    return False\n    if n % 23 == 0:\n        return False\n    if n % 29 ==\
    \ 0:\n        return False\n    if n % 31 == 0:\n        return False\n    if\
    \ n % 37 == 0:\n        return False\n    if n % 41 == 0:\n        return False\n\
    \    if n % 43 == 0:\n        return False\n    if n % 47 == 0:\n        return\
    \ False\n    if n % 53 == 0:\n        return False\n    if n % 59 == 0:\n    \
    \    return False\n    if n % 61 == 0:\n        return False\n    if n % 67 ==\
    \ 0:\n        return False\n    if n % 71 == 0:\n        return False\n    if\
    \ n % 73 == 0:\n        return False\n    if n % 79 == 0:\n        return False\n\
    \    if n % 83 == 0:\n        return False\n    if n % 89 == 0:\n        return\
    \ False\n    if n % 97 == 0:\n        return False\n    if n % 103 == 0:\n   \
    \     return False\n    if n % 109 == 0:\n        return False\n    if n % 113\
    \ == 0:\n        return False\n    if n % 127 == 0:\n        return False\n  \
    \  if n % 131 == 0:\n        return False\n    if n % 137 == 0:\n        return\
    \ False\n    if n % 141 == 0:\n        return False\n    if n % 147 == 0:\n  \
    \      return False\n    if n % 151 == 0:\n        return False\n    if n % 157\
    \ == 0:\n        return False\n    if n % 161 == 0:\n        return False\n  \
    \  if n % 167 == 0:\n        return False\n    if n % 171 == 0:\n        return\
    \ False\n    if n % 177 == 0:\n        return False\n    if n % 181 == 0:\n  \
    \      return False\n    if n % 187 == 0:\n        return False\n    if n % 191\
    \ == 0:\n        return False\n    if n % 197 == 0:\n        return False\n  \
    \  if n % 201 == 0:\n        return False\n    if n % 207 == 0:\n        return\
    \ False\n    if n % 211 == 0:\n        return False\n    if n % 217 == 0:\n  \
    \      return False\n    if n % 221 == 0:\n        return False\n    if n % 227\
    \ == 0:\n        return False\n    if n % 231 == 0:\n        return False\n  \
    \  if n % 237 == 0:\n        return False\n    if n % 241 == 0:\n        return\
    \ False\n    if n % 247 == 0:\n        return False\n    if n % 251 == 0:\n  \
    \      return False\n    if n % 257 == 0:\n        return False\n    if n % 261\
    \ == 0:\n        return False\n    if n % 267 == 0:\n        return False\n  \
    \  if n % 271 == 0:\n        return False\n    if n % 277 == 0:\n        return\
    \ False\n    if n % 281 == 0:\n        return False\n    if n % 287 == 0:\n  \
    \      return False\n    if n % 291 == 0:\n        return False\n    if n % 297\
    \ == 0:\n        return False\n    if n % 301 == 0:\n        return False\n  \
    \  if n % 307 == 0:\n        return False\n    if n % 311 == 0:\n        return\
    \ False\n    if n % 317 == 0:\n        return False\n    if n % 321 == 0:\n  \
    \      return False\n    if n % 327 == 0:\n        return False", "    if n ==\
    \ 0:\n        return True\n    if n == 1:\n        return x == n\n    if n ==\
    \ 2:\n        return x == n * x\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n / 2)\n    else:\n        return is_simple_power(x * x, n / 2)\n\n", "    if\
    \ n == 1:\n        return True\n    if n % 2 == 0:\n        return False\n   \
    \ if n % 3 == 0:\n        return True\n    if n % 5 == 0:\n        return False\n\
    \    if n % 7 == 0:\n        return True\n    return False\n\n", "    if n ==\
    \ 1:\n        return True\n    if n == 0:\n        return False\n    if n % 2\
    \ == 0:\n        return is_simple_power(x, n // 2)\n    else:\n        return\
    \ is_simple_power(x, n // 2) or is_simple_power(x, n // 3)\n\n", "    if n ==\
    \ 0:\n        return True\n    if n == 1:\n        return x == n\n    if n % 2\
    \ == 0:\n        return is_simple_power(x, n // 2)\n    else:\n        return\
    \ is_simple_power(x, n // 2) or x == n ** 2\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return x == n\n    if n % 2 == 0:\n        return\
    \ is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x, n //\
    \ 2) or x == n ** 2\n\n", "    if n == 0:\n        return True\n    if n == 1:\n\
    \        return x % 1 == 0\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x,\
    \ n // 3)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n       \
    \ return x == 1 and is_simple_power(x, 2)\n    if x == 1 or x == n**1:\n     \
    \   return True\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n\
    \    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x, n\
    \ // 3)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n        return\
    \ x == 1 and is_simple_power(x, 2)\n    if x == 0 or x == 1:\n        return False\n\
    \    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n  \
    \      return is_simple_power(x, n // 2) or is_simple_power(x, n // 3)\n\n", " \
    \   if n == 0:\n        return True\n    if n == 1:\n        return x == 1 and\
    \ is_simple_power(x, 2)\n    if n == 2:\n        return x == 1 and is_simple_power(x,\
    \ 3)\n    if n == 3:\n        return x == 1 and is_simple_power(x, 4)\n    if\
    \ n == 4:\n        return x == 1 and is_simple_power(x, 5)\n    if n == 5:\n \
    \       return x == 1 and is_simple_power(x, 6)\n    if n == 6:\n        return\
    \ x == 1 and is_simple_power(x, 7)\n    if n == 7:\n        return x == 1 and\
    \ is_simple_power(x, 8)\n    if n == 8:\n        return x == 1 and is_simple_power(x,\
    \ 9)\n    if n == 9:\n        return x == 1 and is_simple_power(x, 10)\n    if\
    \ n == 10:\n        return x == 1 and is_simple_power(x, 11)\n    if n == 11:\n\
    \        return x == 1 and is_simple_power(x, 12)\n    if n == 12:\n        return\
    \ x == 1 and is_simple_power(x, 13)\n    if n == 13:\n        return x == 1 and\
    \ is_simple_power(x, 14)\n    if n == 14:\n        return x == 1 and is_simple_power(x,\
    \ 15)\n    if n == 15:\n        return x == 1 and is_simple_power(x, 16)\n   \
    \ if n == 16:\n        return x == 1 and is_simple_power(x, 17)\n    if n == 17:\n\
    \        return x == 1 and is_simple_power(x, 18)\n    if n == 18:\n        return\
    \ x == 1 and is_simple_power(x, 19)\n    if n == 19:\n        return x == 1 and\
    \ is_simple_power(x, 20)\n    if n == 20:\n        return x == 1 and is_simple_power(x,\
    \ 21)\n    if n == 21:\n        return x == 1 and is_simple_power(x, 22)\n   \
    \ if n == 22:\n        return x == 1 and is_simple_power(x, 23)\n    if n == 23:\n\
    \        return x == 1 and is_simple_power(x, 24)\n    if n == 24:\n        return\
    \ x == 1 and is_simple_power(x, 25)\n    if n == 25:\n        return x == 1 and\
    \ is_simple_power(x, 26)\n    if n == 26:\n        return x == 1 and is_simple_power(x,\
    \ 27)\n    if n == 27:\n        return x == 1 and is_simple_power(x, 28)\n   \
    \ if n == 28:\n        return x == 1 and is_simple_power(x, 29)\n    if n == 29:\n\
    \        return x == 1 and is_simple_power(x, 30)\n    if n == 31:\n        return\
    \ x == 1 and is_simple_power(x, 32)\n    if n == 32:\n        return x == 1 and\
    \ is_simple_power(x, 33)\n    if n == 33:\n        return x == 1 and is_simple_power(x,\
    \ 34)\n    if n == 34:\n        return x == 1 and is_simple_power(x, 35)\n   \
    \ if n == 35:\n        return x == 1 and is_simple_power(x, 36)\n    if n == 36:\n\
    \        return x == 1 and is_simple_power(x, 37)\n    if n == 37:\n        return\
    \ x == 1 and is_simple_power(x, 38)\n    if n == 38:\n        return x == ", " \
    \   if n == 0:\n        return True\n    if n == 1:\n        return x == 1 and\
    \ is_simple_power(x, 2)\n    if x == 1 or x == n:\n        return True\n    if\
    \ n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n        return\
    \ is_simple_power(x, n // 2) or is_simple_power(x, n // 3)\n\n", "    if n ==\
    \ 1:\n        return True\n    if n % 2 == 0:\n        return False\n    if n\
    \ % 3 == 0:\n        return True\n    if n % 5 == 0:\n        return False\n \
    \   if n % 7 == 0:\n        return True\n    if n % 9 == 0:\n        return False\n\
    \    if n % 11 == 0:\n        return True\n    if n % 13 == 0:\n        return\
    \ False\n    if n % 17 == 0:\n        return True\n    if n % 19 == 0:\n     \
    \   return False\n    if n % 23 == 0:\n        return True\n    if n % 29 == 0:\n\
    \        return False\n    if n % 31 == 0:\n        return True\n    if n % 37\
    \ == 0:\n        return False\n    if n % 41 == 0:\n        return True\n    if\
    \ n % 43 == 0:\n        return False\n    if n % 47 == 0:\n        return True\n\
    \    if n % 49 == 0:\n        return False\n    if n % 53 == 0:\n        return\
    \ True\n    if n % 57 == 0:\n        return False\n    if n % 61 == 0:\n     \
    \   return True\n    if n % 67 == 0:\n        return False\n    if n % 71 == 0:\n\
    \        return True\n    if n % 73 == 0:\n        return False\n    if n % 79\
    \ == 0:\n        return True\n    if n % 83 == 0:\n        return False\n    if\
    \ n % 89 == 0:\n        return True\n    if n % 97 == 0:\n        return False\n\
    \    if n % 103 == 0:\n        return True\n    if n % 107 == 0:\n        return\
    \ False\n    if n % 109 == 0:\n        return True\n    if n % 113 == 0:\n   \
    \     return False\n    if n % 127 == 0:\n        return True\n    if n % 131\
    \ == 0:\n        return False\n    if n % 137 == 0:\n        return True\n   \
    \ if n % 141 == 0:\n        return False\n    if n % 147 == 0:\n        return\
    \ True\n    if n % 151 == 0:\n        return False\n    if n % 157 == 0:\n   \
    \     return True\n    if n % 161 == 0:\n        return False\n    if n % 167\
    \ == 0:\n        return True\n    if n % 171 == 0:\n        return False\n   \
    \ if n % 177 == 0:\n        return True\n    if n % 181 == 0:\n        return\
    \ False\n    if n % 187 == 0:\n        return True\n    if n % 191 == 0:\n   \
    \     return False\n    if n % 197 == 0:\n        return True\n    if n % 201\
    \ == 0:\n        return False\n    if n % 207 == 0:\n        return True\n   \
    \ if n % 211 == 0:\n        return False\n    if n % 217 == 0:\n        return\
    \ True\n    if n % 221 == 0:\n        return False\n    if n % 227 == 0:\n   \
    \     return True\n    if n % 231 == 0:\n        return False\n    if n % 237\
    \ == 0:\n        return True\n    if n % 241 == 0:\n        return False\n   \
    \ if n % 247 == 0:\n        return True\n    if n % 251 == 0:\n        return\
    \ False\n    if n % 257 == 0:\n        return True\n    if n % 261 == 0:\n   \
    \     return False\n    if n % 267 == 0:\n        return True\n    if n % 271\
    \ == 0:\n        return False\n    if n % 277 == 0:\n        return True\n   \
    \ if n % 281 == 0:\n        return False\n    if n % 287 == 0:\n        return\
    \ True\n    if n % 291 == 0:\n        return False\n    if n % 297 == 0:\n   \
    \     return True\n    if n % 301 == 0:\n        return False\n    if n % 307\
    \ == 0:\n        return True\n    if n % 311 == 0:\n        return False\n   \
    \ if n % 317 == 0:\n        return True", "    if n == 0:\n        return True\n\
    \    if n == 1:\n        return x % 1 == 0\n    if n % 2 == 0:\n        return\
    \ is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x, n //\
    \ 2) or is_simple_power(x, n // 3)\n\n", "    if n == 0:\n        return True\n\
    \    if n == 1:\n        return x == 1 and is_power_of_two(x)\n    if x == 1 or\
    \ x == n:\n        return True\n    if n % 2 == 0:\n        return is_power_of_two(x\
    \ // 2)\n    else:\n        return is_power_of_two(x // 2) or is_power_of_two(x\
    \ // n)\n\n", "    if n == 1:\n        return True\n    if n == 0:\n        return\
    \ False\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n\
    \        return is_simple_power(x, n // 2) or is_simple_power(x, n // 3)\n\n",
  "    if n == 0:\n        return True\n    if n == 1:\n        return x == n\n  \
    \  if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n    \
    \    return is_simple_power(x, (n - 1) // 2)\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return x == n\n    if n % 2 == 0:\n        return\
    \ is_simple_power(x, n / 2)\n    else:\n        return is_simple_power(x, n /\
    \ 2) or is_simple_power(x, n / 2 ** (n - 1))\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return True\n    if n % 2 == 0:\n        return\
    \ is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x, n //\
    \ 2) or is_simple_power(x, n // 3) or is_simple_power(x, n // 4)\n\n", "    if\
    \ n == 1:\n        return True\n    if n == 0:\n        return False\n    if n\
    \ % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n        return\
    \ is_simple_power(x, n // 2) or is_simple_power(x, n // 3)\n\n", "    if n ==\
    \ 0:\n        return True\n    if n == 1:\n        return True\n    if n % 2 ==\
    \ 0:\n        return is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x,\
    \ n // 2) or is_simple_power(x, n // 3)\n\n", "    if n == 1:\n        return\
    \ True\n    if n % 2 == 0:\n        return False\n    if n % 3 == 0:\n       \
    \ return True\n    if n % 5 == 0:\n        return False\n    if n % 7 == 0:\n\
    \        return True\n    if n % 9 == 0:\n        return False\n    if n % 11\
    \ == 0:\n        return True\n    if n % 13 == 0:\n        return False\n    if\
    \ n % 17 == 0:\n        return True\n    if n % 19 == 0:\n        return False\n\
    \    if n % 23 == 0:\n        return True\n    if n % 29 == 0:\n        return\
    \ False\n    if n % 31 == 0:\n        return True\n    if n % 37 == 0:\n     \
    \   return False\n    if n % 41 == 0:\n        return True\n    if n % 43 == 0:\n\
    \        return False\n    if n % 47 == 0:\n        return True\n    if n % 49\
    \ == 0:\n        return False\n    if n % 53 == 0:\n        return True\n    if\
    \ n % 57 == 0:\n        return False\n    if n % 61 == 0:\n        return True\n\
    \    if n % 67 == 0:\n        return False\n    if n % 71 == 0:\n        return\
    \ True\n    if n % 73 == 0:\n        return False\n    if n % 79 == 0:\n     \
    \   return True\n    if n % 83 == 0:\n        return False\n    if n % 89 == 0:\n\
    \        return True\n    if n % 97 == 0:\n        return False\n    if n % 101\
    \ == 0:\n        return True\n    if n % 103 == 0:\n        return False\n   \
    \ if n % 107 == 0:\n        return True\n    if n % 109 == 0:\n        return\
    \ False\n    if n % 113 == 0:\n        return True\n    if n % 117 == 0:\n   \
    \     return False\n    if n % 121 == 0:\n        return True\n    if n % 123\
    \ == 0:\n        return False\n    if n % 127 == 0:\n        return True\n   \
    \ if n % 131 == 0:\n        return False\n    if n % 133 == 0:\n        return\
    \ True\n    if n % 137 == 0:\n        return False\n    if n % 141 == 0:\n   \
    \     return True\n    if n % 143 == 0:\n        return False\n    if n % 147\
    \ == 0:\n        return True\n    if n % 151 == 0:\n        return False\n   \
    \ if n % 153 == 0:\n        return True\n    if n % 157 == 0:\n        return\
    \ False\n    if n % 161 == 0:\n        return True\n    if n % 163 == 0:\n   \
    \     return False\n    if n % 167 == 0:\n        return True\n    if n % 171\
    \ == 0:\n        return False\n    if n % 173 == 0:\n        return True\n   \
    \ if n % 177 == 0:\n        return False\n    if n % 181 == 0:\n        return\
    \ True\n    if n % 183 == 0:\n        return False\n    if n % 187 == 0:\n   \
    \     return True\n    if n % 191 == 0:\n        return False\n    if n % 193\
    \ == 0:\n        return True\n    if n % 197 == 0:\n        return False\n   \
    \ if n % 201 == 0:\n        return True\n    if n % 203 == 0:\n        return\
    \ False\n    if n % 207 == 0:\n        return True\n    if n % 211 == 0:\n   \
    \     return False\n    if n % 213 == 0:\n        return True\n    if n % 217\
    \ == 0:\n        return False\n    if n % 221 == 0:\n        return True\n   \
    \ if n % 223 == 0:\n        return False\n    if n % 227 == 0:\n        return\
    \ True\n    if n % 231 == 0:\n        return False\n    if n % 233 == 0:\n   \
    \     return True\n    if n % 239 == 0:\n        return False\n    if n % 243\
    \ == 0:\n", "    if n == 0:\n        return True\n    if n == 1:\n        return\
    \ x == n\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n\
    \        return is_simple_power(x, n // 2) or x == n ** 2\n\n", "    if n == 0:\n\
    \        return True\n    if n == 1:\n        return (x == 1)\n    if n % 2 ==\
    \ 0:\n        return is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x,\
    \ n // 2) or is_simple_power(x, n // 3)\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return True\n    if n % 2 == 0:\n        return\
    \ is_simple_power(x, n // 2)\n    else:\n        return False\n\n", "    if n\
    \ == 0:\n        return True\n    if n == 1:\n        return x == n\n    if n\
    \ % 2 == 0:\n        return is_simple_power(x, n / 2)\n    else:\n        return\
    \ is_simple_power(x, n / 2) or x == n ** 2\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return x == 1 and is_simple_power(x, 2)\n    if\
    \ x == 1 or x == n:\n        return True\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, (n - 1) // 2)\n\n", " \
    \   if n == 0:\n        return True\n    if n == 1:\n        return x == n\n \
    \   if n == 2:\n        return x == n * x\n    if n == 3:\n        return x ==\
    \ n * x * x\n    if n == 4:\n        return x == n * x * x * x\n    if n == 5:\n\
    \        return x == n * x * x * x * x\n    if n == 6:\n        return x == n\
    \ * x * x * x * x * x\n    if n == 7:\n        return x == n * x * x * x * x *\
    \ x * x\n    if n == 8:\n        return x == n * x * x * x * x * x * x * x\n \
    \   if n == 9:\n        return x == n * x * x * x * x * x * x * x * x\n    if\
    \ n == 10:\n        return x == n * x * x * x * x * x * x * x * x * x\n    if\
    \ n == 11:\n        return x == n * x * x * x * x * x * x * x * x * x * x\n  \
    \  if n == 12 or n == 1:\n        return True\n    return False\n\n", "    if\
    \ n == 1:\n        return True\n    if n % 2 == 0:\n        return False\n   \
    \ if n % 3 == 0:\n        return True\n    if n % 5 == 0:\n        return False\n\
    \    if x % n == 0:\n        return True\n    return False\n\n", "    if n ==\
    \ 0:\n        return True\n    if n == 1:\n        return x == 1 and is_power_of_two(x)\n\
    \    if x == 0 or x == 1:\n        return False\n    if n % 2 == 0:\n        return\
    \ is_power_of_two(x) and is_simple_power(x, n // 2)\n    else:\n        return\
    \ is_power_of_two(x) and is_simple_power(x, n // 2)\n\n", "    if n == 0:\n  \
    \      return True\n    if n == 1:\n        return x == 1 and is_power_of_two(x)\n\
    \    if x == 1 or x == n:\n        return True\n    if x % n == 0:\n        return\
    \ is_power_of_two(x // n)\n    return False\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return x == 1 and is_simple_power(x, 2)\n    if\
    \ n == 2:\n        return x == 1 and is_simple_power(x, 3)\n    if n == 3:\n \
    \       return x == 1 and is_simple_power(x, 4)\n    if n == 4:\n        return\
    \ x == 1 and is_simple_power(x, 5)\n    if n == 5:\n        return x == 1 and\
    \ is_simple_power(x, 6)\n    if n == 6:\n        return x == 1 and is_simple_power(x,\
    \ 7)\n    if n == 7:\n        return x == 1 and is_simple_power(x, 8)\n    if\
    \ n == 8:\n        return x == 1 and is_simple_power(x, 9)\n    if n == 9:\n \
    \       return x == 1 and is_simple_power(x, 10)\n    if n == 10:\n        return\
    \ x == 1 and is_simple_power(x, 11)\n    if n == 11:\n        return x == 1 and\
    \ is_simple_power(x, 12)\n    if n == 12:\n        return x == 1 and is_simple_power(x,\
    \ 13)\n    if n == 13:\n        return x == 1 and is_simple_power(x, 14)\n   \
    \ if n == 14:\n        return x == 1 and is_simple_power(x, 15)\n    if n == 15:\n\
    \        return x == 1 and is_simple_power(x, 16)\n    if n == 16:\n        return\
    \ x == 1 and is_simple_power(x, 17)\n    if n == 17:\n        return x == 1 and\
    \ is_simple_power(x, 18)\n    if n == 18:\n        return x == 1 and is_simple_power(x,\
    \ 19)\n    if n == 19:\n        return x == 1 and is_simple_power(x, 20)\n   \
    \ if n == 20:\n        return x == 1 and is_simple_power(x, 21)\n    if n == 21:\n\
    \        return x == 1 and is_simple_power(x, 22)\n    if n == 22:\n        return\
    \ x == 1 and is_simple_power(x, 23)\n    if n == 23:\n        return x == 1 and\
    \ is_simple_power(x, 24)\n    if n == 24:\n        return x == 1 and is_simple_power(x,\
    \ 25)\n    if n == 25:\n        return x == 1 and is_simple_power(x, 26)\n   \
    \ if n == 26:\n        return x == 1 and is_simple_power(x, 27)\n    if n == 27:\n\
    \        return x == 1 and is_simple_power(x, 28)\n    if n == 28:\n        return\
    \ x == 1 and is_simple_power(x, 29)\n    if n == 29:\n        return x == 1 and\
    \ is_simple_power(x, 30)\n    if n == 31:\n        return x == 1 and is_simple_power(x,\
    \ 32)\n    if n == 32:\n        return x == 1 and is_simple_power(x, 33)\n   \
    \ if n == 33:\n        return x == 1 and is_simple_power(x, 34)\n    if n == 34:\n\
    \        return x == 1 and is_simple_power(x, 35)\n    if n == 35:\n        return\
    \ x == 1 and is_simple_power(x, 36)\n    if n == 36:\n        return x == 1 and\
    \ is_simple_power(x, 37)\n    if n == 37:\n        return x == 1 and is_simple_power(x,\
    \ 38)\n    if n == 38:\n        return x", "    if n == 0:\n        return True\n\
    \    if n == 1:\n        return x == 1 and is_power_of_two(x)\n    if n % 2 ==\
    \ 0:\n        return is_power_of_two(x) and is_simple_power(x, n // 2)\n    else:\n\
    \        return is_power_of_two(x) and not is_simple_power(x, n // 2)\n\n", " \
    \   if n == 1:\n        return True\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return False\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return x == n\n    if n % 2 == 0:\n        return\
    \ is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x, n //\
    \ 2) or x == n ** 2\n\n", "    if n == 0:\n        return True\n    if n == 1:\n\
    \        return x == 1 and is_power_of_two(x)\n    if n == 2:\n        return\
    \ x == 1 and is_power_of_two(x >> 1)\n    if n == 3:\n        return x == 1 and\
    \ is_power_of_two(x >> 2)\n    if n == 4:\n        return x == 1 and is_power_of_two(x\
    \ >> 3)\n    if n == 5:\n        return x == 1 and is_power_of_two(x >> 4)\n \
    \   if n == 6:\n        return x == 1 and is_power_of_two(x >> 5)\n    if n ==\
    \ 7:\n        return x == 1 and is_power_of_two(x >> 6)\n    if n == 8:\n    \
    \    return x == 1 and is_power_of_two(x >> 7)\n    if n == 9:\n        return\
    \ x == 1 and is_power_of_two(x >> 8)\n    if n == 10:\n        return x == 1 and\
    \ is_power_of_two(x >> 9)\n    if n == 11:\n        return x == 1 and is_power_of_two(x\
    \ >> 10)\n    if n == 12 and is_power_of_two(x >> 11):\n        return True\n\
    \    if n == 13 and is_power_of_two(x >> 12):\n        return True\n    if n ==\
    \ 14 and is_power_of_two(x >> 13):\n        return True\n    if n == 15 and is_power_of_two(x\
    \ >> 14):\n        return True\n    if n == 16 and is_power_of_two(x >> 15):\n\
    \        return True\n    if n == 17 and is_power_of_two(x >> 16):\n        return\
    \ True\n    if n == 18 and is_power_of_two(x >> 17):\n        return True\n  \
    \  if n == 19 and is_power_of_two(x >> 18):\n        return True\n    if n ==\
    \ 20 and is_power_of_two(x >> 19):\n        return True\n    if n == 21 and is_power_of_two(x\
    \ >> 20):\n        return True\n    if n == 22 and is_power_of_two(x >> 21):\n\
    \        return True\n    if n == 23 and is_power_of_two(x >> 22):\n        return\
    \ True\n    if n == 24 and is_power_of_two(x >> 23):\n        return True\n  \
    \  if n == 25 and is_power_of_two(x >> 24):\n        return True\n    if n ==\
    \ 26 and is_power_of_two(x >> 25):\n        return True\n    if n == 27 and is_power_of_two(x\
    \ >> 26):\n        return True\n    if n == 28 and is_power_of_two(x >> 27):\n\
    \        return True\n    if n == 29 and is_power_of_two(x >> 28):\n        return\
    \ True\n    if n == 30 and is_power_of_two(x >> 29):\n        return True\n  \
    \  if n == 31 and is_power_of_two(x >> 30):\n        return True\n    if n ==\
    \ 32 and is_power_", "    if n == 1:\n        return True\n    if n % 2 == 0:\n\
    \        return is_simple_power(x, n // 2)\n    else:\n        return False\n\n",
  "    if n == 0:\n        return True\n    if n == 1:\n        return True\n    if\
    \ n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    if n % 3 == 0:\n\
    \        return is_simple_power(x, n // 3)\n    return False\n\n", "    if n ==\
    \ 0:\n        return True\n    if n == 1:\n        return True\n    if n % 2 ==\
    \ 0:\n        return is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x,\
    \ n // 2) or is_simple_power(x, n // 3)\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return x == 1 and is_simple_power(x, n - 1)\n\
    \    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n  \
    \      return is_simple_power(x, n // 2) or x == n\n\n", "    if n == 0:\n   \
    \     return True\n    if n == 1:\n        return (x == 1)\n    if x == 1 or x\
    \ == n:\n        return True\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x,\
    \ n // 3)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n       \
    \ return x % 1 == 0\n    if n == 2:\n        return x % 2 == 0\n    if n == 3:\n\
    \        return x % 3 == 0\n    if n == 4:\n        return x % 4 == 0\n    if\
    \ n == 5:\n        return x % 5 == 0\n    if n == 6:\n        return x % 6 ==\
    \ 0\n    if n == 7:\n        return x % 7 == 0\n    if n == 8:\n        return\
    \ x % 8 == 0\n    if n == 9:\n        return x % 9 == 0\n    if n == 10:\n   \
    \     return x % 10 == 0\n    if n == 11:\n        return x % 11 == 0\n    if\
    \ n == 12:\n        return x % 12 == 0\n    if n == 13:\n        return x % 13\
    \ == 0\n    if n == 14:\n        return x % 14 == 0\n    if n == 15:\n       \
    \ return x % 15 == 0\n    if n == 16:\n        return x % 16 == 0\n    if n ==\
    \ 17:\n        return x % 17 == 0\n    if n == 18:\n        return x % 18 == 0\n\
    \    if n == 19:\n        return x % 19 == 0\n    if n == 20:\n        return\
    \ x % 20 == 0\n    if n == 21:\n        return x % 21 == 0\n    if n == 22:\n\
    \        return x % 22 == 0\n    if n == 23:\n        return x % 23 == 0\n   \
    \ if n == 24:\n        return x % 24 == 0\n    if n == 25:\n        return x %\
    \ 25 == 0\n    if n == 26:\n        return x % 26 == 0\n    if n == 27:\n    \
    \    return x % 27 == 0\n    if n == 28:\n        return x % 28 == 0\n    if n\
    \ == 29:\n        return x % 29 == 0\n    if n == 101:\n        return x % 101\
    \ == 0\n    if n == 102:\n        return x % 102 == 0\n    if n == 103:\n    \
    \    return x % 103 == 0\n    if n == 104:\n        return x % 104 == 0\n    if\
    \ n == 105:\n        return x % 105 == 0\n    if n == 106:\n        return x %\
    \ 106 == 0\n    if n == 107:\n        return x % 107 == 0\n    if n == 108:\n\
    \        return x % 108 == 0\n    if n == 109:\n        return x % 109 == 0\n\
    \    if n == 111:\n        return x % 111 == 0\n    if n == 114:\n        return\
    \ x % 114 == 0\n    if n == 115:\n        return x % 115 == 0\n    if n == 116:\n\
    \        return x % 116 == 0\n    if n == 117:\n        return x % 117 == 0\n\
    \    if n == 118:\n        return x % 118 == 0\n    if n == 119:\n        return\
    \ x % 119 == 0\n    if n == 121:\n        return x % 121 == 0\n    if n == 122:\n\
    \        return x % 122 == 0\n", "    if n == 1:\n        return True\n    if\
    \ n % 2 == 0:\n        return False\n    if n % 3 == 0:\n        return True\n\
    \    if n % 5 == 0:\n        return True\n    if n % 7 == 0:\n        return True\n\
    \    if n % 11 == 0:\n        return True\n    if n % 13 == 0:\n        return\
    \ True\n    if n % 17 == 0:\n        return True\n    if n % 19 == 0:\n      \
    \  return True\n    if n % 23 == 0:\n        return True\n    if n % 29 == 0:\n\
    \        return True\n    if n % 31 == 0:\n        return True\n    if n % 37\
    \ == 0:\n        return True\n    if n % 41 == 0:\n        return True\n    if\
    \ n % 43 == 0:\n        return True\n    if n % 47 == 0:\n        return True\n\
    \    if n % 53 == 0:\n        return True\n    if n % 59 == 0:\n        return\
    \ True\n    if n % 61 == 0:\n        return True\n    if n % 67 == 0:\n      \
    \  return True\n    if n % 71 == 0:\n        return True\n    if n % 73 == 0:\n\
    \        return True\n    if n % 79 == 0:\n        return True\n    if n % 83\
    \ == 0:\n        return True\n    if n % 89 == 0:\n        return True\n    if\
    \ n % 97 == 0:\n        return True\n    if n % 103 == 0:\n        return True\n\
    \    if n % 107 == 0:\n        return True\n    if n % 113 == 0:\n        return\
    \ True\n    if n % 123 == 0:\n        return True\n    if n % 139 == 0:\n    \
    \    return True\n    if n % 147 == 0:\n        return True\n    if n % 153 ==\
    \ 0:\n        return True\n    if n % 159 == 0:\n        return True\n    if n\
    \ % 163 == 0:\n        return True\n    if n % 167 == 0:\n        return True\n\
    \    if n % 173 == 0:\n        return True\n    if n % 179 == 0:\n        return\
    \ True\n    if n % 181 == 0:\n        return True\n    if n % 185 == 0:\n    \
    \    return True\n    if n % 187 == 0:\n        return True\n    if n % 193 ==\
    \ 0:\n        return True\n    if n % 199 == 0:\n        return True\n    if n\
    \ % 203 == 0:\n        return True\n    if n % 209 == 0:\n        return True\n\
    \    if n % 215 == 0:\n        return True\n    if n % 217 == 0:\n        return\
    \ True\n    if n % 223 == 0:\n        return True\n    if n % 229 == 0:\n    \
    \    return True\n    if n % 233 == 0:\n        return True\n    if n % 239 ==\
    \ 0:\n        return True\n    if n % 241 == 0:\n        return True\n    if n\
    \ % 245 == 0:\n        return True\n    if n % 247 == 0:\n        return True\n\
    \    if n % 253 == 0:\n        return True\n    if n % 259 == 0:\n        return\
    \ True\n    if n % 261 == 0:\n        return True\n    if n % 265 == 0:\n    \
    \    return True\n    if n % 267 == 0:\n        return True\n    if n % 273 ==\
    \ 0:\n        return True\n    if n % 279 == 0:\n        return True\n    if n\
    \ % 281 == 0:\n        return True\n    if n % 285 == 0:\n        return True\n\
    \    if n % 287 == 0:\n        return True\n    if n % 293 == 0:\n        return\
    \ True\n    if n % 299 == 0:\n        return True\n    if n % 301 == 0:\n    \
    \    return True\n    if n % 305 == 0:\n        return True\n    if n % 307 ==\
    \ 0:\n        return True\n    if n % 311 == 0:\n        return True\n    if n\
    \ % 315 == 0:\n        return True\n    if ", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return x == n\n    if n % 2 == 0:\n        return\
    \ is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x, n //\
    \ 2) or x == n ** 2\n\n", "    if n == 1:\n        return True\n    if n == 2:\n\
    \        return True\n    if n % 2 == 0:\n        return False\n    if n % 3 ==\
    \ 0:\n        return True\n    if n % 5 == 0:\n        return True\n    if n %\
    \ 7 == 0:\n        return True\n    return False\n\n", "    if n == 0:\n     \
    \   return True\n    if n == 1:\n        return x % 1 == 0\n    if n % 2 == 0:\n\
    \        return is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x,\
    \ n // 2) or is_simple_power(x, n // 3)\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return True\n    if n % 2 == 0:\n        return\
    \ is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x, n //\
    \ 2) or is_simple_power(x, n // 3)\n\n", "    if n == 0:\n        return True\n\
    \    if n == 1:\n        return x == n\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or x == n ** 2\n\
    \n", "    if n == 0:\n        return True\n    if n == 1:\n        return x ==\
    \ 1 and is_power_of_two(x)\n    if x == 1 or x == n:\n        return True\n  \
    \  if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n    \
    \    return is_simple_power(x, (n - 1) // 2)\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return (x == 1)\n    if n % 2 == 0:\n        return\
    \ is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x, (n\
    \ - 1) // 2)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n    \
    \    return x == n\n    if n % 2 == 0:\n        return is_simple_power(x, n //\
    \ 2)\n    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x,\
    \ n // 3) or is_simple_power(x, n // 5)\n\n", "    if n == 1:\n        return\
    \ True\n    if n == 0:\n        return False\n    if n % 2 == 0:\n        return\
    \ is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x, n //\
    \ 2) or is_simple_power(x, n // 3)\n\n", "    if n == 0:\n        return True\n\
    \    if n == 1:\n        return (x == 1)\n    if n == 2:\n        return (x ==\
    \ 1)\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n\
    \        return is_simple_power(x, n // 2) or is_simple_power(x, n // 3)\n\n",
  "    if n == 0:\n        return True\n    if n == 1:\n        return x == 1 and\
    \ is_power_of_two(x)\n    if x == 1 or x == n:\n        return True\n    if n\
    \ % 2 == 0:\n        return is_power_of_two(x // 2)\n    else:\n        return\
    \ is_power_of_two(x // 2) or is_power_of_two(x // 4)\n\n", "    if n == 1:\n \
    \       return True\n    if n % 2 == 0:\n        return False\n    if n % 3 ==\
    \ 0:\n        return True\n    if n % 5 == 0:\n        return False\n    if n\
    \ % 7 == 0:\n        return True\n    if n % 9 == 0:\n        return False\n \
    \   if n % 11 == 0:\n        return True\n    if n % 13 == 0:\n        return\
    \ False\n    if n % 17 == 0:\n        return True\n    if n % 19 == 0:\n     \
    \   return False\n    if n % 23 == 0:\n        return True\n    if n % 29 == 0:\n\
    \        return False\n    if n % 31 == 0:\n        return True\n    if n % 37\
    \ == 0:\n        return False\n    if n % 41 == 0:\n        return True\n    if\
    \ n % 43 == 0:\n        return False\n    if n % 47 == 0:\n        return True\n\
    \    if n % 49 == 0:\n        return False\n    if n % 53 == 0:\n        return\
    \ True\n    if n % 57 == 0:\n        return False\n    if n % 61 == 0:\n     \
    \   return True\n    if n % 67 == 0:\n        return False\n    if n % 71 == 0:\n\
    \        return True\n    if n % 73 == 0:\n        return False\n    if n % 79\
    \ == 0:\n        return True\n    if n % 83 == 0:\n        return False\n    if\
    \ n % 89 == 0:\n        return True\n    if n % 97 == 0:\n        return False\n\
    \    if n % 103 == 0:\n        return True\n    if n % 107 == 0:\n        return\
    \ False\n    if n % 113 == 0:\n        return True\n    if n % 117 == 0:\n   \
    \     return False\n    if n % 121 == 0:\n        return True\n    if n % 123\
    \ == 0:\n        return False\n    if n % 127 == 0:\n        return True\n   \
    \ if n % 131 == 0:\n        return False\n    if n % 137 == 0:\n        return\
    \ True\n    if n % 141 == 0:\n        return False\n    if n % 147 == 0:\n   \
    \     return True\n    if n % 151 == 0:\n        return False\n    if n % 157\
    \ == 0:\n        return True\n    if n % 161 == 0:\n        return False\n   \
    \ if n % 163 == 0:\n        return True\n    if n % 167 == 0:\n        return\
    \ False\n    if n % 171 == 0:\n        return True\n    if n % 173 == 0:\n   \
    \     return False\n    if n % 177 == 0:\n        return True\n    if n % 181\
    \ == 0:\n        return False\n    if n % 183 == 0:\n        return True\n   \
    \ if n % 187 == 0:\n        return False\n    if n % 191 == 0:\n        return\
    \ True\n    if n % 193 == 0:\n        return False\n    if n % 197 == 0:\n   \
    \     return True\n    if n % 201 == 0:\n        return False\n    if n % 203\
    \ == 0:\n        return True\n    if n % 207 == 0:\n        return False\n   \
    \ if n % 211 == 0:\n        return True\n    if n % 213 == 0:\n        return\
    \ False\n    if n % 217 == 0:\n        return True\n    if n % 221 == 0:\n   \
    \     return False\n    if n % 223 == 0:\n        return True\n    if n % 227\
    \ == 0:\n        return False\n    if n % 231 == 0:\n        return True\n   \
    \ if n % 233 == 0:\n        return False\n    if n % 239 == 0:\n        return\
    \ True\n    if n % 243 == 0:\n        return False\n    if n % 247 == 0:\n   \
    \     return True\n    if n % 251 == 0:\n        return False\n    if n % 253\
    \ == 0:\n        return True\n    if n % 257 == 0:\n        return False\n   \
    \ if n % 261", "    if n == 0:\n        return True\n    if n == 1:\n        return\
    \ x == 1 and is_power_of_two(x)\n    if n == 2:\n        return x == 1 and is_power_of_two(x)\
    \ and is_power_of_two(x >> 1)\n    if n == 3:\n        return x == 1 and is_power_of_two(x)\
    \ and is_power_of_two(x >> 1) and is_power_of_two(x >> 2)\n    if n == 4:\n  \
    \      return x == 1 and is_power_of_two(x) and is_power_of_two(x >> 1) and is_power_of_two(x\
    \ >> 2) and is_power_of_two(x >> 3)\n    if n == 5:\n        return x == 1 and\
    \ is_power_of_two(x) and is_power_of_two(x >> 1) and is_power_of_two(x >> 2) and\
    \ is_power_of_two(x >> 3) and is_power_of_two(x >> 4)\n    if n == 6:\n      \
    \  return x == 1 and is_power_of_two(x) and is_power_of_two(x >> 1) and is_power_of_two(x\
    \ >> 2) and is_power_of_two(x >> 3) and is_power_of_two(x >> 4) and is_power_of_two(x\
    \ >> 5)\n    if n == 7:\n        return x == 1 and is_power_of_two(x) and is_power_of_two(x\
    \ >> 1) and is_power_of_two(x >> 2) and is_power_of_two(x >> 3) and is_power_of_two(x\
    \ >> 4) and is_power_of_two(x >> 5) and is_power_of_two(x >> 6)\n    if n == 8:\n\
    \        return x == 1 and is_power_of_two(x) and is_power_of_two(x >> 1) and\
    \ is_power_of_two(x >> 2) and is_power_of_two(x >> 3) and is_power_of_two(x >>\
    \ 4) and is_power_of_two(x >> 5) and is_power_of_two(x >> 6) and is_power_of_two(x\
    \ >> 7)\n    if n == 9:\n        return x == 1 and is_power_of_two(x) and is_power_of_two(x\
    \ >> 1) and is_power_of_two(x >> 2) and is_power_of_two(x >> 3) and is_power_of_two(x\
    \ >> 4) and is_power_of_two(x >> 5) and is_power_of_two(x >> 6) and is_power_of_two(x\
    \ >> 7) and is_power_of_two(x >> 8)\n    if n == 10:\n        return x == 1 and\
    \ is_power_of_two(x) and is_power_of_two(x >> 1) and is_power_of_two(x >> 2) and\
    \ is_power_of_two(x >> 3) and is_power_of_two(x >> 4) and is_power_of_two(x >>\
    \ 5) and is_", "    if n == 0:\n        return True\n    if n == 1:\n        return\
    \ True\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n\
    \        return is_simple_power(x, n // 2) or is_simple_power(x, n // 3) or is_simple_power(x,\
    \ n // 4)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n       \
    \ return x == n\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n\
    \    else:\n        return is_simple_power(x, n // 2) or x == n ** 2\n\n", " \
    \   if n == 1:\n        return True\n    if n % 2 == 0:\n        return False\n\
    \    if n % 3 == 0:\n        return True\n    if n % 5 == 0:\n        return False\n\
    \    if n % 7 == 0:\n        return True\n    return False\n\n", "    if n ==\
    \ 0:\n        return True\n    if n == 1:\n        return x == n\n    if n % 2\
    \ == 0:\n        return is_simple_power(x, n // 2)\n    else:\n        return\
    \ is_simple_power(x, n // 2) or x == n ** 2\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return True\n    if n % 2 == 0:\n        return\
    \ False\n    if n % 3 == 0:\n        return False\n    if n % 5 == 0:\n      \
    \  return False\n    if n % 7 == 0:\n        return False\n    if n % 11 == 0:\n\
    \        return False\n    if n % 13 == 0:\n        return False\n    if n % 17\
    \ == 0:\n        return False\n    if n % 19 == 0:\n        return False\n   \
    \ if n % 23 == 0:\n        return False\n    if n % 29 == 0:\n        return False\n\
    \    if n % 31 == 0:\n        return False\n    if n % 37 == 0:\n        return\
    \ False\n    if n % 41 == 0:\n        return False\n    if n % 43 == 0:\n    \
    \    return False\n    if n % 47 == 0:\n        return False\n    if n % 53 ==\
    \ 0:\n        return False\n    if n % 59 == 0:\n        return False\n    if\
    \ n % 61 == 0:\n        return False\n    if n % 67 == 0:\n        return False\n\
    \    if n % 71 == 0:\n        return False\n    if n % 73 == 0:\n        return\
    \ False\n    if n % 79 == 0:\n        return False\n    if n % 83 == 0:\n    \
    \    return False\n    if n % 89 == 0:\n        return False\n    if n % 97 ==\
    \ 0:\n        return False\n    if n % 103 == 0:\n        return False\n    if\
    \ n % 107 == 0:\n        return False\n    if n % 113 == 0:\n        return False\n\
    \    if n % 121 == 0:\n        return False\n    if n % 127 == 0:\n        return\
    \ False\n    if n % 131 == 0:\n        return False\n    if n % 137 == 0:\n  \
    \      return False\n    if n % 141 == 0:\n        return False\n    if n % 147\
    \ == 0:\n        return False\n    if n % 151 == 0:\n        return False\n  \
    \  if n % 157 == 0:\n        return False\n    if n % 161 == 0:\n        return\
    \ False\n    if n % 167 == 0:\n        return False\n    if n % 171 == 0:\n  \
    \      return False\n    if n % 177 == 0:\n        return False\n    if n % 181\
    \ == 0:\n        return False\n    if n % 187 == 0:\n        return False\n  \
    \  if n % 191 == 0:\n        return False\n    if n % 197 == 0:\n        return\
    \ False\n    if n % 201 == 0:\n        return False\n    if n % 207 == 0:\n  \
    \      return False\n    if n % 211 == 0:\n        return False\n    if n % 217\
    \ == 0:\n        return False\n    if n % 221 == 0:\n        return False\n  \
    \  if n % 227 == 0:\n        return False\n    if n % 231 == 0:\n        return\
    \ False\n    if n % 237 == 0:\n        return False\n    if n % 241 == 0:\n  \
    \      return False\n    if n % 247 == 0:\n        return False\n    if n % 251\
    \ == 0:\n        return False\n    if n % 257 == 0:\n        return False\n  \
    \  if n % 261 == 0:\n        return False\n    if n % 267 == 0:\n        return\
    \ False\n    if n % 271 == 0:\n        return False\n    if n % 277 == 0:\n  \
    \      return False\n    if n % 281 == 0:\n        return False\n    if n % 287\
    \ == 0:\n        return False\n    if n % 291 == 0:\n        return False\n  \
    \  if n % 297 == 0:\n        return False\n    if n % 301 == 0:\n        return\
    \ False\n    if n % 307 == 0:\n        return False\n    if n % 311 == 0:\n  \
    \      return False\n    if n % 317 == 0:\n        return False\n    if n % 321\
    \ == 0:\n", "    if n == 0:\n        return True\n    if n == 1:\n        return\
    \ x == n\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n\
    \        return is_simple_power(x, n // 2) or is_simple_power(x, n // 3)\n\n",
  "    if n == 1:\n        return True\n    if n == 0:\n        return False\n   \
    \ if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n     \
    \   return is_simple_power(x, n // 2) or is_simple_power(x, n // 3)\n\n", "  \
    \  if n == 0:\n        return True\n    if n == 1:\n        return x == 1 and\
    \ is_power_of_two(x)\n    if n % 2 == 0:\n        return is_power_of_two(x) and\
    \ is_simple_power(x, n // 2)\n    else:\n        return is_power_of_two(x) and\
    \ is_simple_power(x, n // 2)\n\n", "    if n == 0:\n        return True\n    if\
    \ n == 1:\n        return x == 1 and is_power_of_two(x)\n    if x == 1 or x ==\
    \ n:\n        return True\n    if n % 2 == 0:\n        return is_power_of_two(x\
    \ // 2)\n    else:\n        return is_power_of_two(x // 2) or is_power_of_two(x\
    \ // n)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n        return\
    \ x == 1 and is_power_of_two(x)\n    if n % 2 == 0:\n        return is_power_of_two(x)\
    \ and is_simple_power(x, n // 2)\n    else:\n        return is_power_of_two(x)\
    \ and is_simple_power(x, n // 2)\n\n", "    if n == 1:\n        return True\n\
    \    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n  \
    \      return is_simple_power(x, n // 2) or is_simple_power(x, n // 3)\n\n", " \
    \   if n == 1:\n        return True\n    if n % 2 == 0:\n        return False\n\
    \    if n % 3 == 0:\n        return True\n    if n % 5 == 0:\n        return False\n\
    \    if x % n == 0:\n        return True\n    return False\n\n", "    if n ==\
    \ 1:\n        return True\n    if n % 2 == 0:\n        return False\n    if n\
    \ % 3 == 0:\n        return True\n    if n % 5 == 0:\n        return False\n \
    \   if n % 7 == 0:\n        return True\n    return False\n\n", "    if n == 0:\n\
    \        return True\n    if n == 1:\n        return True\n    if n % 2 == 0:\n\
    \        return is_simple_power(x, n // 2)\n    else:\n        return False\n\n",
  "    if n == 0:\n        return True\n    if n == 1:\n        return x == 1 and\
    \ is_power_of_two(x)\n    if n % 2 == 0:\n        return is_power_of_two(x) and\
    \ is_simple_power(x, n // 2)\n    else:\n        return is_power_of_two(x) and\
    \ is_simple_power(x, n // 2)\n\n", "    if n == 0:\n        return True\n    if\
    \ n == 1:\n        return x == n\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x,\
    \ n // 3)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n       \
    \ return True\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n\
    \    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x, n\
    \ // 3)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n        return\
    \ True\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n\
    \        return is_simple_power(x, (n - 1) // 2)\n\n", "    if n == 0:\n     \
    \   return True\n    if n == 1:\n        return x == 1 and is_simple_power(x,\
    \ n - 1)\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n\
    \        return is_simple_power(x, n // 2) or x == n\n\n", "    if n == 0:\n \
    \       return True\n    if n == 1:\n        return True\n    if n % 2 == 0:\n\
    \        return is_simple_power(x, n // 2)\n    else:\n        return False\n\n",
  "    if n == 1:\n        return True\n    if n == 0:\n        return False\n   \
    \ if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n     \
    \   return is_simple_power(x, n // 2) or is_simple_power(x, n // 3)\n\n", "  \
    \  if n == 0:\n        return True\n    if n == 1:\n        return x == n\n  \
    \  if n % 2 == 0:\n        return is_simple_power(x, n / 2)\n    else:\n     \
    \   return is_simple_power(x, n / 2) or is_simple_power(x, n / 3) or is_simple_power(x,\
    \ n / 4)\n\n", "    if n == 1:\n        return True\n    if n % 2 == 0:\n    \
    \    return False\n    if n % 3 == 0:\n        return True\n    if n % 5 == 0:\n\
    \        return False\n    if n % 7 == 0:\n        return True\n    if n % 9 ==\
    \ 0:\n        return False\n    if n % 11 == 0:\n        return True\n    if n\
    \ % 13 == 0:\n        return False\n    if n % 17 == 0:\n        return True\n\
    \    if n % 19 == 0:\n        return False\n    if n % 23 == 0:\n        return\
    \ True\n    if n % 29 == 0:\n        return False\n    if n % 31 == 0:\n     \
    \   return True\n    if n % 37 == 0:\n        return False\n    if n % 41 == 0:\n\
    \        return True\n    if n % 43 == 0:\n        return False\n    if n % 47\
    \ == 0:\n        return True\n    if n % 49 == 0:\n        return False\n    if\
    \ n % 53 == 0:\n        return True\n    if n % 57 == 0:\n        return False\n\
    \    if n % 61 == 0:\n        return True\n    if n % 67 == 0:\n        return\
    \ False\n    if n % 71 == 0:\n        return True\n    if n % 73 == 0:\n     \
    \   return False\n    if n % 79 == 0:\n        return True\n    if n % 83 == 0:\n\
    \        return False\n    if n % 89 == 0:\n        return True\n    if n % 97\
    \ == 0:\n        return False\n    if n % 101 == 0:\n        return True\n   \
    \ if n % 103 == 0:\n        return False\n    if n % 107 == 0:\n        return\
    \ True\n    if n % 109 == 0:\n        return False\n    if n % 113 == 0:\n   \
    \     return True\n    if n % 117 == 0:\n        return False\n    if n % 121\
    \ == 0:\n        return True\n    if n % 123 == 0:\n        return False\n   \
    \ if n % 127 == 0:\n        return True\n    if n % 129 == 0:\n        return\
    \ False\n    if n % 131 == 0:\n        return True\n    if n % 133 == 0:\n   \
    \     return False\n    if n % 137 == 0:\n        return True\n    if n % 139\
    \ == 0:\n        return False\n    if n % 141 == 0:\n        return True\n   \
    \ if n % 143 == 0:\n        return False\n    if n % 147 == 0:\n        return\
    \ True\n    if n % 149 == 0:\n        return False\n    if n % 151 == 0:\n   \
    \     return True\n    if n % 153 == 0:\n        return False\n    if n % 157\
    \ == 0:\n        return True\n    if n % 159 == 0:\n        return False\n   \
    \ if n % 161 == 0:\n        return True\n    if n % 163 == 0:\n        return\
    \ False\n    if n % 167 == 0:\n        return True\n    if n % 169 == 0:\n   \
    \     return False\n    if n % 171 == 0:\n        return True\n    if n % 173\
    \ == 0:\n        return False\n    if n % 177 == 0:\n        return True\n   \
    \ if n % 179 == 0:\n        return False\n    if n % 181 == 0:\n        return\
    \ True\n    if n % 183 == 0:\n        return False\n    if n % 187 == 0:\n   \
    \     return True\n    if n % 189 == 0:\n        return False\n    if n % 191\
    \ == 0:\n        return True\n    if n % 193 == 0:\n        return False\n   \
    \ if n % 197 == 0:\n        return True\n    if n % 199 == 0:\n        return\
    \ False\n    if n % 201 == 0:\n        return True\n    if n % 203 == 0:\n   \
    \     return False\n    if n % 207 == 0:\n        return True\n    if n % 209\
    \ == 0:\n        return False\n    if n % 211 == 0:\n        return True\n   \
    \ if n % ", "    if n == 0:\n        return True\n    if n == 1:\n        return\
    \ x == 1 and is_power_of_two(x)\n    if x == 1 or x == n:\n        return True\n\
    \    if x % n == 0:\n        return is_power_of_two(x) and is_simple_power(x,\
    \ n // 2)\n    return False\n\n", "    if n == 0:\n        return True\n    if\
    \ n == 1:\n        return x == int(x)\n    if n == 2:\n        return x == int(x)\
    \ ** 2\n    if n == 3:\n        return x == int(x) ** 3\n    if n == 4:\n    \
    \    return x == int(x) ** 4\n    if n == 5:\n        return x == int(x) ** 5\n\
    \    if n == 6:\n        return x == int(x) ** 6\n    if n == 7:\n        return\
    \ x == int(x) ** 7\n    if n == 8:\n        return x == int(x) ** 8\n    if n\
    \ == 9:\n        return x == int(x) ** 9\n    if n == 10:\n        return x ==\
    \ int(x) ** 10\n    if n == 11:\n        return x == int(x) ** 11\n    if n ==\
    \ 12 or n == 13:\n        return x == int(x) ** 12\n    if n == 14:\n        return\
    \ x == int(x) ** 13\n    if n == 15:\n        return x == int(x) ** 14\n    if\
    \ n == 16:\n        return x == int(x) ** 15\n    if n == 17:\n        return\
    \ x == int(x) ** 16\n    if n == 18:\n        return x == int(x) ** 17\n    if\
    \ n == 19:\n        return x == int(x) ** 18\n    if n == 20:\n        return\
    \ x == int(x) ** 19\n    if n == 21:\n        return x == int(x) ** 20\n    if\
    \ n == 22:\n        return x == int(x) ** 21\n    if n == 23:\n        return\
    \ x == int(x) ** 22\n    if n == 24:\n        return x == int(x) ** 23\n    if\
    \ n == 25:\n        return x == int(x) ** 24\n    if n == 26:\n        return\
    \ x == int(x) ** 25\n    if n == 27:\n        return x == int(x) ** 26\n    if\
    \ n == 28:\n        return x == int(x) ** 27\n    if n == 29:\n        return\
    \ x == int(x) ** 28\n    if n == 30 or n == 31:\n        return x == int(x) **\
    \ 29\n    if n == 32:\n        return x == int(x) ** 30\n    if n == 33:\n   \
    \     return x == int(x) ** 31\n    if n == 34:\n        return x == int(x) **\
    \ 32\n    if n == 35:\n        return x == int(x) ** 33\n    if n == 36:\n   \
    \     return x == int(x) ** 34\n    if n == 37:\n        return x == int(x) **\
    \ 35\n    if n == 38:\n        return x == int(x) ** 36\n    if n == 39:\n   \
    \     return x == int(x) ** 37\n    if n == 40 or n == 41:\n        return x ==\
    \ int(x) ** 38\n    if n == 42:\n        return x == int(x) ** 39\n    if n ==\
    \ 43:\n        return x == int(x) ** 40\n    if n == 44:\n        return x ==\
    \ int(x) ** 41\n    if n == 45:\n        return x == int(x) ** 42\n    if n ==\
    \ 46:\n        return x == int(x) ** ", "    if n == 0:\n        return True\n\
    \    if n == 1:\n        return x == n\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x,\
    \ n // 3) or is_simple_power(x, n // 5)\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return (x == 1)\n    if n % 2 == 0:\n        return\
    \ is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x, n //\
    \ 2) or is_simple_power(x, n // 3)\n\n", "    if n == 0:\n        return True\n\
    \    if n == 1:\n        return x == n\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, (n - 1) // 2)\n\n", " \
    \   if n == 0:\n        return True\n    if n == 1:\n        return x == n\n \
    \   if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n   \
    \     return is_simple_power(x, (n - 1) // 2)\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return x == 1 and is_simple_power(x, 2)\n    if\
    \ n == 2:\n        return x == 1 and is_simple_power(x, 3)\n    if n == 3:\n \
    \       return x == 1 and is_simple_power(x, 4)\n    if n == 4:\n        return\
    \ x == 1 and is_simple_power(x, 5)\n    if n == 5:\n        return x == 1 and\
    \ is_simple_power(x, 6)\n    if n == 6:\n        return x == 1 and is_simple_power(x,\
    \ 7)\n    if n == 7:\n        return x == 1 and is_simple_power(x, 8)\n    if\
    \ n == 8:\n        return x == 1 and is_simple_power(x, 9)\n    if n == 9:\n \
    \       return x == 1 and is_simple_power(x, 10)\n    if n == 10:\n        return\
    \ x == 1 and is_simple_power(x, 11)\n    if n == 11:\n        return x == 1 and\
    \ is_simple_power(x, 12)\n    if n == 12:\n        return x == 1 and is_simple_power(x,\
    \ 13)\n    if n == 13:\n        return x == 1 and is_simple_power(x, 14)\n   \
    \ if n == 14:\n        return x == 1 and is_simple_power(x, 15)\n    if n == 15:\n\
    \        return x == 1 and is_simple_power(x, 16)\n    if n == 16:\n        return\
    \ x == 1 and is_simple_power(x, 17)\n    if n == 17:\n        return x == 1 and\
    \ is_simple_power(x, 18)\n    if n == 18:\n        return x == 1 and is_simple_power(x,\
    \ 19)\n    if n == 19:\n        return x == 1 and is_simple_power(x, 20)\n   \
    \ if n == 20:\n        return x == 1 and is_simple_power(x, 21)\n    if n == 21:\n\
    \        return x == 1 and is_simple_power(x, 22)\n    if n == 22:\n        return\
    \ x == 1 and is_simple_power(x, 23)\n    if n == 23:\n        return x == 1 and\
    \ is_simple_power(x, 24)\n    if n == 24:\n        return x == 1 and is_simple_power(x,\
    \ 25)\n    if n == 25:\n        return x == 1 and is_simple_power(x, 26)\n   \
    \ if n == 26:\n        return x == 1 and is_simple_power(x, 27)\n    if n == 27:\n\
    \        return x == 1 and is_simple_power(x, 28)\n    if n == 28:\n        return\
    \ x == 1 and is_simple_power(x, 29)\n    if n == 29:\n        return x == 1 and\
    \ is_simple_power(x, 30)\n    if n == 31:\n        return x == 1 and is_simple_power(x,\
    \ 32)\n    if n == 32:\n        return x == 1 and is_simple_power(x, 33)\n   \
    \ if n == 33:\n        return x == 1 and is_simple_power(x, 34)\n    if n == 34:\n\
    \        return x == 1 and is_simple_power(x, 35)\n    if n == 35:\n        return\
    \ x == 1 and is_simple_power(x, 36)\n    if n == 36:\n        return x == 1 and\
    \ is_simple_power(x, 37)\n    if n == 37:\n        return x == 1 and is_simple_power(x,\
    \ 38)\n    if n == 38:\n        return x", "    if n == 0:\n        return True\n\
    \    if n == 1:\n        return True\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x,\
    \ n // 3)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n       \
    \ return x % n == 0\n    if n == 2:\n        return x % n == 0 and x % 2 == 0\n\
    \    if n == 3:\n        return x % n == 0 and x % 2 == 0 and x % 3 == 0\n   \
    \ if n == 4:\n        return x % n == 0 and x % 2 == 0 and x % 3 == 0 and x %\
    \ 4 == 0\n    if n == 5:\n        return x % n == 0 and x % 2 == 0 and x % 3 ==\
    \ 0 and x % 4 == 0 and x % 5 == 0\n    if n == 6:\n        return x % n == 0 and\
    \ x % 2 == 0 and x % 3 == 0 and x % 4 == 0 and x % 5 == 0 and x % 6 == 0\n   \
    \ if n == 7:\n        return x % n == 0 and x % 2 == 0 and x % 3 == 0 and x %\
    \ 4 == 0 and x % 5 == 0 and x % 6 == 0 and x % 7 == 0\n    if n == 8:\n      \
    \  return x % n == 0 and x % 2 == 0 and x % 3 == 0 and x % 4 == 0 and x % 5 ==\
    \ 0 and x % 6 == 0 and x % 7 == 0 and x % 8 == 0\n    if n == 9:\n        return\
    \ x % n == 0 and x % 2 == 0 and x % 3 == 0 and x % 4 == 0 and x % 5 == 0 and x\
    \ % 6 == 0 and x % 7 == 0 and x % 8 == 0 and x % 9 == 0\n    if n == 10:\n   \
    \     return x % n == 0 and x % 2 == 0 and x % 3 == 0 and x % 4 == 0 and x % 5\
    \ == 0 and x % 6 == 0 and x % 7 == 0 and x % 8 == 0 and x % 9 == 0 and x % 10\
    \ == 0\n    if n == 11:\n        return x % n == 0 and x % 2 == 0 and x % 3 ==\
    \ 0 and x % 4 == 0 and x % 5 == 0 and x % 6 == 0 and x % 7 == 0 and x % 8 == 0\
    \ and x % 9 == 0 and x % 10 == 0 and x % 11 == 0\n    if n == 12:\n        return\
    \ x % n == 0 and x % 2 == 0 and x % 3 == 0 and x % 4 == 0 and x % 5 == 0 and x\
    \ % 6 == 0 and x % 7 == 0 and x % 8 == 0 and x % 9 == 0 and x % 10 == 0 and x\
    \ % 11 == 0 and x % 12 == 0\n    if n == 13:\n        return x % n == 0 and x\
    \ % 2 == 0 and x % 3 == 0 and x % 4 == 0 and x % 5 == 0 and x % 6 == 0 and x %\
    \ 7 == 0 and x % 8 == 0 and x % 9 == 0 and x % 10 == 0 and x % 11 == 0 and x %\
    \ 12 == 0 and x % 13 == 0\n    if n == 14:\n        return x % n == 0 and x %\
    \ 2 == ", "    if n == 0:\n        return True\n    if n == 1:\n        return\
    \ x == int(x)\n    if n == 2:\n        return x == int(x) ** 2\n    if n == 3:\n\
    \        return x == int(x) ** 3\n    if n == 4:\n        return x == int(x) **\
    \ 4\n    if n == 5:\n        return x == int(x) ** 5\n    if n == 6:\n       \
    \ return x == int(x) ** 6\n    if n == 7:\n        return x == int(x) ** 7\n \
    \   if n == 8:\n        return x == int(x) ** 8\n    if n == 9:\n        return\
    \ x == int(x) ** 9\n    if n == 10:\n        return x == int(x) ** 10\n    if\
    \ n == 11:\n        return x == int(x) ** 11\n    if n == 12 or n == 13:\n   \
    \     return x == int(x) ** 12\n    if n == 14:\n        return x == int(x) **\
    \ 13\n    if n == 15:\n        return x == int(x) ** 14\n    if n == 16:\n   \
    \     return x == int(x) ** 15\n    if n == 17:\n        return x == int(x) **\
    \ 16\n    if n == 18:\n        return x == int(x) ** 17\n    if n == 19:\n   \
    \     return x == int(x) ** 18\n    if n == 20:\n        return x == int(x) **\
    \ 19\n    if n == 21:\n        return x == int(x) ** 20\n    if n == 22:\n   \
    \     return x == int(x) ** 21\n    if n == 23:\n        return x == int(x) **\
    \ 22\n    if n == 24:\n        return x == int(x) ** 23\n    if n == 25:\n   \
    \     return x == int(x) ** 24\n    if n == 26:\n        return x == int(x) **\
    \ 25\n    if n == 27:\n        return x == int(x) ** 26\n    if n == 28:\n   \
    \     return x == int(x) ** 27\n    if n == 29:\n        return x == int(x) **\
    \ 28\n    if n == 30 or n == 31:\n        return x == int(x) ** 29\n    if n ==\
    \ 32:\n        return x == int(x) ** 30\n    if n == 33:\n        return x ==\
    \ int(x) ** 31\n    if n == 34:\n        return x == int(x) ** 32\n    if n ==\
    \ 35:\n        return x == int(x) ** 33\n    if n == 36:\n        return x ==\
    \ int(x) ** 34\n    if n == 37:\n        return x == int(x) ** 35\n    if n ==\
    \ 38:\n        return x == int(x) ** 36\n    if n == 39:\n        return x ==\
    \ int(x) ** 37\n    if n == 40 or n == 41:\n        return x == int(x) ** 38\n\
    \    if n == 42:\n        return x == int(x) ** 39\n    if n == 43:\n        return\
    \ x == int(x) ** 40\n    if n == 44:\n        return x == int(x) ** 41\n    if\
    \ n == 45:\n        return x == int(x) ** 42\n    if n == 46:\n        return\
    \ x == int(x) ** ", "    if n == 1:\n        return True\n    if n == 0:\n   \
    \     return False\n    if n % 2 == 0:\n        return is_simple_power(x, n //\
    \ 2)\n    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x,\
    \ n // 3)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n       \
    \ return x == 1 and is_power_of_two(x)\n    if x == 1 or x == n-1:\n        return\
    \ True\n    if x % n == 0:\n        return is_power_of_two(x // n)\n    return\
    \ False\n\n", "    if n == 0:\n        return True\n    if n == 1:\n        return\
    \ x % 1 == 0\n    if n == 2:\n        return x % 2 == 0\n    if n % 2 == 0:\n\
    \        return is_simple_power(x, n / 2)\n    else:\n        return is_simple_power(x,\
    \ n // 2)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n       \
    \ return x == 1 and is_power_of_two(x)\n    if n % 2 == 0:\n        return is_power_of_two(x)\
    \ and is_simple_power(x, n // 2)\n    else:\n        return is_power_of_two(x)\
    \ and is_simple_power(x, n // 2)\n\n", "    if n == 0:\n        return True\n\
    \    if n == 1:\n        return x % 1 == 0\n    if n % 2 == 0:\n        return\
    \ is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x, n //\
    \ 2) or is_simple_power(x, n // 3)\n\n", "    if n == 0:\n        return True\n\
    \    if n == 1:\n        return x == 1 and is_power_of_two(x)\n    if n % 2 ==\
    \ 0:\n        return is_power_of_two(x) and is_simple_power(x, n // 2)\n    else:\n\
    \        return is_power_of_two(x) and is_simple_power(x, n // 2)\n\n", "    if\
    \ n == 0:\n        return True\n    if n == 1:\n        return x == int(x)\n \
    \   if n == 2:\n        return x == int(x) ** 2\n    if n == 3:\n        return\
    \ x == int(x) ** 3\n    if n == 4:\n        return x == int(x) ** 4\n    if n\
    \ == 5:\n        return x == int(x) ** 5\n    if n == 6:\n        return x ==\
    \ int(x) ** 6\n    if n == 7:\n        return x == int(x) ** 7\n    if n == 8:\n\
    \        return x == int(x) ** 8\n    if n == 9:\n        return x == int(x) **\
    \ 9\n    if n == 10:\n        return x == int(x) ** 10\n    if n == 11:\n    \
    \    return x == int(x) ** 11\n    if n == 12 or n == 13:\n        return x ==\
    \ int(x) ** 12\n    if n == 14:\n        return x == int(x) ** 13\n    if n ==\
    \ 15:\n        return x == int(x) ** 14\n    if n == 16:\n        return x ==\
    \ int(x) ** 15\n    if n == 17:\n        return x == int(x) ** 16\n    if n ==\
    \ 18:\n        return x == int(x) ** 17\n    if n == 19:\n        return x ==\
    \ int(x) ** 18\n    if n == 20:\n        return x == int(x) ** 19\n    if n ==\
    \ 21:\n        return x == int(x) ** 20\n    if n == 22:\n        return x ==\
    \ int(x) ** 21\n    if n == 23:\n        return x == int(x) ** 22\n    if n ==\
    \ 24:\n        return x == int(x) ** 23\n    if n == 25:\n        return x ==\
    \ int(x) ** 24\n    if n == 26:\n        return x == int(x) ** 25\n    if n ==\
    \ 27:\n        return x == int(x) ** 26\n    if n == 28:\n        return x ==\
    \ int(x) ** 27\n    if n == 29:\n        return x == int(x) ** 28\n    if n ==\
    \ 30 or n == 31:\n        return x == int(x) ** 29\n    if n == 32:\n        return\
    \ x == int(x) ** 30\n    if n == 33:\n        return x == int(x) ** 31\n    if\
    \ n == 34:\n        return x == int(x) ** 32\n    if n == 35:\n        return\
    \ x == int(x) ** 33\n    if n == 36:\n        return x == int(x) ** 34\n    if\
    \ n == 37:\n        return x == int(x) ** 35\n    if n == 38:\n        return\
    \ x == int(x) ** 36\n    if n == 39:\n        return x == int(x) ** 37\n    if\
    \ n == 40 or n == 41:\n        return x == int(x) ** 38\n    if n == 42:\n   \
    \     return x == int(x) ** 39\n    if n == 43:\n        return x == int(x) **\
    \ 40\n    if n == 44:\n        return x == int(x) ** 41\n    if n == 45:\n   \
    \     return x == int(x) ** 42\n    if n == 46:\n        return x == int(x) ** ",
  "    if n == 0:\n        return True\n    if n == 1:\n        return x == n\n  \
    \  if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n    \
    \    return is_simple_power(x, n // 2) or x == n ** 2\n\n", "    if n == 0:\n\
    \        return True\n    if n == 1:\n        return (x == 1)\n    if n % 2 ==\
    \ 0:\n        return is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x,\
    \ n // 2) or is_simple_power(x, n // 3)\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return (x == 1)\n    if n % 2 == 0:\n        return\
    \ is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x, n //\
    \ 2) or is_simple_power(x, n // 3)\n\n", "    if n == 0:\n        return True\n\
    \    if n == 1:\n        return x == int(x)\n    if n == 2:\n        return x\
    \ == int(x) ** 2\n    if n == 3:\n        return x == int(x) ** 3\n    if n ==\
    \ 4:\n        return x == int(x) ** 4\n    if n == 5:\n        return x == int(x)\
    \ ** 5\n    if n == 6:\n        return x == int(x) ** 6\n    if n == 7:\n    \
    \    return x == int(x) ** 7\n    if n == 8:\n        return x == int(x) ** 8\n\
    \    if n == 9:\n        return x == int(x) ** 9\n    if n == 10:\n        return\
    \ x == int(x) ** 10\n    if n == 11:\n        return x == int(x) ** 11\n    if\
    \ n == 12 or n == 13:\n        return x == int(x) ** 12\n    if n == 14:\n   \
    \     return x == int(x) ** 13\n    if n == 15:\n        return x == int(x) **\
    \ 14\n    if n == 16:\n        return x == int(x) ** 15\n    if n == 17:\n   \
    \     return x == int(x) ** 16\n    if n == 18:\n        return x == int(x) **\
    \ 17\n    if n == 19:\n        return x == int(x) ** 18\n    if n == 20:\n   \
    \     return x == int(x) ** 19\n    if n == 21:\n        return x == int(x) **\
    \ 20\n    if n == 22:\n        return x == int(x) ** 21\n    if n == 23:\n   \
    \     return x == int(x) ** 22\n    if n == 24:\n        return x == int(x) **\
    \ 23\n    if n == 25:\n        return x == int(x) ** 24\n    if n == 26:\n   \
    \     return x == int(x) ** 25\n    if n == 27:\n        return x == int(x) **\
    \ 26\n    if n == 28:\n        return x == int(x) ** 27\n    if n == 29:\n   \
    \     return x == int(x) ** 28\n    if n == 30 or n == 31:\n        return x ==\
    \ int(x) ** 29\n    if n == 32:\n        return x == int(x) ** 30\n    if n ==\
    \ 33:\n        return x == int(x) ** 31\n    if n == 34:\n        return x ==\
    \ int(x) ** 32\n    if n == 35:\n        return x == int(x) ** 33\n    if n ==\
    \ 36:\n        return x == int(x) ** 34\n    if n == 37:\n        return x ==\
    \ int(x) ** 35\n    if n == 38:\n        return x == int(x) ** 36\n    if n ==\
    \ 39:\n        return x == int(x) ** 37\n    if n == 40 or n == 41:\n        return\
    \ x == int(x) ** 38\n    if n == 42:\n        return x == int(x) ** 39\n    if\
    \ n == 43:\n        return x == int(x) ** 40\n    if n == 44:\n        return\
    \ x == int(x) ** 41\n    if n == 45:\n        return x == int(x) ** 42\n    if\
    \ n == 46:\n        return x == int(x) ** ", "    if n == 1:\n        return True\n\
    \    if n % 2 == 0:\n        return False\n    if n % 3 == 0:\n        return\
    \ True\n    if n % 5 == 0:\n        return False\n    if x % n == 0:\n       \
    \ return True\n    return False\n\n", "    if n == 0:\n        return True\n \
    \   if n == 1:\n        return (x == 1)\n    if n == 2:\n        return (x ==\
    \ 1)\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n\
    \        return is_simple_power(x, n // 2) or is_simple_power(x, n // 3)\n\n",
  "    if n == 0:\n        return True\n    if n == 1:\n        return x == 1 and\
    \ is_simple_power(x, 2)\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, (n - 1) // 2)\n\n", " \
    \   if n == 1:\n        return True\n    if n == 0:\n        return False\n  \
    \  if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n    \
    \    return is_simple_power(x, n // 2) or is_simple_power(x, n // 2)\n\n", " \
    \   if n == 0:\n        return True\n    if n == 1:\n        return True\n   \
    \ if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n     \
    \   return is_simple_power(x, n // 2) or is_simple_power(x, n // 3)\n\n", "  \
    \  if n == 1:\n        return True\n    if n % 2 == 0:\n        return False\n\
    \    if n % 3 == 0:\n        return True\n    if n % 5 == 0:\n        return False\n\
    \    if n % 7 == 0:\n        return True\n    return False\n\n", "    if n ==\
    \ 0:\n        return True\n    if n == 1:\n        return x % 1 == 0\n    if n\
    \ % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n        return\
    \ is_simple_power(x, n // 2) or is_simple_power(x, n // 3)\n\n", "    if n ==\
    \ 0:\n        return True\n    if n == 1:\n        return x == n\n    if n % 2\
    \ == 0:\n        return is_simple_power(x, n // 2)\n    else:\n        return\
    \ is_simple_power(x, (n - 1) // 2)\n\n", "    if n == 0:\n        return True\n\
    \    if n == 1:\n        return x == n\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or x == n ** 2\n\
    \n", "    if n == 0:\n        return True\n    if n == 1:\n        return x ==\
    \ 1 and is_simple_power(x, n - 1)\n    if n == 2:\n        return x == 1 and is_simple_power(x,\
    \ n - 1) or x == 0 and is_simple_power(x, n - 2)\n    if n == 3:\n        return\
    \ x == 1 and is_simple_power(x, n - 1) or x == 0 and is_simple_power(x, n - 2)\
    \ or x == 0 and is_simple_power(x, n - 3)\n    if n == 4:\n        return x ==\
    \ 1 and is_simple_power(x, n - 1) or x == 0 and is_simple_power(x, n - 2) or x\
    \ == 0 and is_simple_power(x, n - 3) or x == 0 and is_simple_power(x, n - 4)\n\
    \    if n == 5:\n        return x == 1 and is_simple_power(x, n - 1) or x == 0\
    \ and is_simple_power(x, n - 2) or x == 0 and is_simple_power(x, n - 3) or x ==\
    \ 0 and is_simple_power(x, n - 4) or x == 0 and is_simple_power(x, n - 5)\n  \
    \  if n == 6:\n        return x == 1 and is_simple_power(x, n - 1) or x == 0 and\
    \ is_simple_power(x, n - 2) or x == 0 and is_simple_power(x, n - 3) or x == 0\
    \ and is_simple_power(x, n - 4) or x == 0 and is_simple_power(x, n - 5) or x ==\
    \ 0 and is_simple_power(x, n - 6)\n    if n == 7:\n        return x == 1 and is_simple_power(x,\
    \ n - 1) or x == 0 and is_simple_power(x, n - 2) or x == 0 and is_simple_power(x,\
    \ n - 3) or x == 0 and is_simple_power(x, n - 4) or x == 0 and is_simple_power(x,\
    \ n - 5) or x == 0 and is_simple_power(x, n - 6) or x == 0 and is_simple_power(x,\
    \ n - 7)\n    if n == 8:\n        return x == 1 and is_simple_power(x, n - 1)\
    \ or x == 0 and is_simple_power(x, n - 2) or x == 0 and is_simple_power(x, n -\
    \ 3) or x == 0 and is_simple_power(x, n - 4) or x == 0 and is_simple_power(x,\
    \ n - 5) or x == 0 and is_simple_power(x, n - 6) or x == 0 and is_simple_power(x,\
    \ n - 7) or x == 0 and is_simple_power(x, n - 8)\n    if n == 9:\n        return\
    \ x == 1 and is_simple_power(x, n - 1) or x == 0 and is_simple_power(x, n - 2)\
    \ or x == 0 and is_simple_power(x, n - 3) or x == 0 and is_simple_power(x, n -\
    \ 4) or x == 0 and is_simple_power(x, n - 5) or x == 0 and is_simple_power(x,\
    \ n - 6) or x == 0 and is_simple_power(x, n - 7) or x == 0 and is_simple_power(x,\
    \ n - 8) or x == 0 and is_simple_power(x, n - 9)\n    if n == 10:\n        return\
    \ x == 1 and is_simple_power(x, n - 1) or x == 0 and is_simple_power(x, n - 2)\
    \ or x == 0 and is_simple_power(x, n - 3) or x == 0 and is_simple_power(x, n -\
    \ 4) or x == 0 and is_simple_power(x, n - 5) or ", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return x == int(x)\n    if n == 2:\n        return\
    \ x == int(x) ** 2\n    if n == 3:\n        return x == int(x) ** 3\n    if n\
    \ == 4:\n        return x == int(x) ** 4\n    if n == 5:\n        return x ==\
    \ int(x) ** 5\n    if n == 6:\n        return x == int(x) ** 6\n    if n == 7:\n\
    \        return x == int(x) ** 7\n    if n == 8:\n        return x == int(x) **\
    \ 8\n    if n == 9:\n        return x == int(x) ** 9\n    if n == 10:\n      \
    \  return x == int(x) ** 10\n    if n == 11:\n        return x == int(x) ** 11\n\
    \    if n == 12 or n == 13:\n        return x == int(x) ** 12\n    if n == 14:\n\
    \        return x == int(x) ** 13\n    if n == 15:\n        return x == int(x)\
    \ ** 14\n    if n == 16:\n        return x == int(x) ** 15\n    if n == 17:\n\
    \        return x == int(x) ** 16\n    if n == 18:\n        return x == int(x)\
    \ ** 17\n    if n == 19:\n        return x == int(x) ** 18\n    if n == 20:\n\
    \        return x == int(x) ** 19\n    if n == 21:\n        return x == int(x)\
    \ ** 20\n    if n == 22:\n        return x == int(x) ** 21\n    if n == 23:\n\
    \        return x == int(x) ** 22\n    if n == 24:\n        return x == int(x)\
    \ ** 23\n    if n == 25:\n        return x == int(x) ** 24\n    if n == 26:\n\
    \        return x == int(x) ** 25\n    if n == 27:\n        return x == int(x)\
    \ ** 26\n    if n == 28:\n        return x == int(x) ** 27\n    if n == 29:\n\
    \        return x == int(x) ** 28\n    if n == 30 or n == 31:\n        return\
    \ x == int(x) ** 29\n    if n == 32:\n        return x == int(x) ** 30\n    if\
    \ n == 33:\n        return x == int(x) ** 31\n    if n == 34:\n        return\
    \ x == int(x) ** 32\n    if n == 35:\n        return x == int(x) ** 33\n    if\
    \ n == 36:\n        return x == int(x) ** 34\n    if n == 37:\n        return\
    \ x == int(x) ** 35\n    if n == 38:\n        return x == int(x) ** 36\n    if\
    \ n == 39:\n        return x == int(x) ** 37\n    if n == 40 or n == 41:\n   \
    \     return x == int(x) ** 38\n    if n == 42:\n        return x == int(x) **\
    \ 39\n    if n == 43:\n        return x == int(x) ** 40\n    if n == 44:\n   \
    \     return x == int(x) ** 41\n    if n == 45:\n        return x == int(x) **\
    \ 42\n    if n == 46:\n        return x == int(x) ** ", "    if n == 0:\n    \
    \    return True\n    if n == 1:\n        return True\n    if n % 2 == 0:\n  \
    \      return is_simple_power(x, n // 2)\n    if n % 3 == 0:\n        return is_simple_power(x,\
    \ n // 3)\n    if n % 5 == 0:\n        return is_simple_power(x, n // 5)\n   \
    \ return False\n\n", "    if n == 0:\n        return True\n    if n == 1:\n  \
    \      return True\n    if n % 2 == 0:\n        return False\n    if n % 3 ==\
    \ 0:\n        return False\n    if n % 5 == 0:\n        return False\n    if n\
    \ % 7 == 0:\n        return False\n    if n % 11 == 0:\n        return False\n\
    \    if n % 13 == 0:\n        return False\n    if n % 17 == 0:\n        return\
    \ False\n    if n % 19 == 0:\n        return False\n    if n % 23 == 0:\n    \
    \    return False\n    if n % 29 == 0:\n        return False\n    if n % 31 ==\
    \ 0:\n        return False\n    if n % 37 == 0:\n        return False\n    if\
    \ n % 41 == 0:\n        return False\n    if n % 43 == 0:\n        return False\n\
    \    if n % 47 == 0:\n        return False\n    if n % 53 == 0:\n        return\
    \ False\n    if n % 59 == 0:\n        return False\n    if n % 61 == 0:\n    \
    \    return False\n    if n % 67 == 0:\n        return False\n    if n % 71 ==\
    \ 0:\n        return False\n    if n % 73 == 0:\n        return False\n    if\
    \ n % 79 == 0:\n        return False\n    if n % 83 == 0:\n        return False\n\
    \    if n % 89 == 0:\n        return False\n    if n % 97 == 0:\n        return\
    \ False\n    if n % 103 == 0:\n        return False\n    if n % 109 == 0:\n  \
    \      return False\n    if n % 113 == 0:\n        return False\n    if n % 127\
    \ == 0:\n        return False\n    if n % 131 == 0:\n        return False\n  \
    \  if n % 137 == 0:\n        return False\n    if n % 141 == 0:\n        return\
    \ False\n    if n % 147 == 0:\n        return False\n    if n % 151 == 0:\n  \
    \      return False\n    if n % 157 == 0:\n        return False\n    if n % 161\
    \ == 0:\n        return False\n    if n % 167 == 0:\n        return False\n  \
    \  if n % 171 == 0:\n        return False\n    if n % 177 == 0:\n        return\
    \ False\n    if n % 181 == 0:\n        return False\n    if n % 187 == 0:\n  \
    \      return False\n    if n % 191 == 0:\n        return False\n    if n % 197\
    \ == 0:\n        return False\n    if n % 201 == 0:\n        return False\n  \
    \  if n % 207 == 0:\n        return False\n    if n % 211 == 0:\n        return\
    \ False\n    if n % 217 == 0:\n        return False\n    if n % 221 == 0:\n  \
    \      return False\n    if n % 227 == 0:\n        return False\n    if n % 231\
    \ == 0:\n        return False\n    if n % 237 == 0:\n        return False\n  \
    \  if n % 241 == 0:\n        return False\n    if n % 247 == 0:\n        return\
    \ False\n    if n % 251 == 0:\n        return False\n    if n % 257 == 0:\n  \
    \      return False\n    if n % 261 == 0:\n        return False\n    if n % 267\
    \ == 0:\n        return False\n    if n % 271 == 0:\n        return False\n  \
    \  if n % 277 == 0:\n        return False\n    if n % 281 == 0:\n        return\
    \ False\n    if n % 287 == 0:\n        return False\n    if n % 291 == 0:\n  \
    \      return False\n    if n % 297 == 0:\n        return False\n    if n % 301\
    \ == 0:\n        return False\n    if n % 307 == 0:\n        return False\n  \
    \  if n % 311 == 0:\n        return False\n    if n % 317 == 0:\n        return\
    \ False\n    if n % 321 == 0:\n        return False\n    if n % 327 == 0:\n  \
    \      return False", "    if n == 0:\n        return True\n    if n == 1:\n \
    \       return x % 1 == 0\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x,\
    \ n // 3)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n       \
    \ return x == 1 and is_power_of_two(x)\n    if n % 2 == 0:\n        return is_power_of_two(x)\
    \ and is_simple_power(x, n // 2)\n    else:\n        return is_power_of_two(x)\
    \ and not is_simple_power(x, n // 2)\n\n", "    if n == 0:\n        return True\n\
    \    if n == 1:\n        return x == 1 and is_simple_power(x, n - 1)\n    if n\
    \ % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n        return\
    \ is_simple_power(x, n // 2) or x == n\n\n", "    if n == 0:\n        return True\n\
    \    if n == 1:\n        return x == n\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x,\
    \ n // 3)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n       \
    \ return x == 1 and is_power_of_two(x)\n    if n == 2:\n        return x == 1\
    \ and is_power_of_two(x) and is_power_of_two(x >> 1)\n    if n == 3:\n       \
    \ return x == 1 and is_power_of_two(x) and is_power_of_two(x >> 1) and is_power_of_two(x\
    \ >> 2)\n    if n == 4:\n        return x == 1 and is_power_of_two(x) and is_power_of_two(x\
    \ >> 1) and is_power_of_two(x >> 2) and is_power_of_two(x >> 3)\n    if n == 5:\n\
    \        return x == 1 and is_power_of_two(x) and is_power_of_two(x >> 1) and\
    \ is_power_of_two(x >> 2) and is_power_of_two(x >> 3) and is_power_of_two(x >>\
    \ 4)\n    if n == 6:\n        return x == 1 and is_power_of_two(x) and is_power_of_two(x\
    \ >> 1) and is_power_of_two(x >> 2) and is_power_of_two(x >> 3) and is_power_of_two(x\
    \ >> 4) and is_power_of_two(x >> 5)\n    if n == 7:\n        return x == 1 and\
    \ is_power_of_two(x) and is_power_of_two(x >> 1) and is_power_of_two(x >> 2) and\
    \ is_power_of_two(x >> 3) and is_power_of_two(x >> 4) and is_power_of_two(x >>\
    \ 5) and is_power_of_two(x >> 6)\n    if n == 8:\n        return x == 1 and is_power_of_two(x)\
    \ and is_power_of_two(x >> 1) and is_power_of_two(x >> 2) and is_power_of_two(x\
    \ >> 3) and is_power_of_two(x >> 4) and is_power_of_two(x >> 5) and is_power_of_two(x\
    \ >> 6) and is_power_of_two(x >> 7)\n    if n == 9:\n        return x == 1 and\
    \ is_power_of_two(x) and is_power_of_two(x >> 1) and is_power_of_two(x >> 2) and\
    \ is_power_of_two(x >> 3) and is_power_of_two(x >> 4) and is_power_of_two(x >>\
    \ 5) and is_power_of_two(x >> 6) and is_power_of_two(x >> 7) and is_power_of_two(x\
    \ >> 8)\n    if n == 10:\n        return x == 1 and is_power_of_two(x) and is_power_of_two(x\
    \ >> 1) and is_power_of_two(x >> 2) and is_power_of_two(x >> 3) and is_power_of_two(x\
    \ >> 4) and is_power_of_two(x >> 5) and is_", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return x == n\n    if n % 2 == 0:\n        return\
    \ is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x, n //\
    \ 2) or x == n ** 2\n\n", "    if n == 0:\n        return True\n    if n == 1:\n\
    \        return x % 1 == 0\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x,\
    \ n // 3)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n       \
    \ return x == n\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n\
    \    else:\n        return is_simple_power(x, n // 2) or x == n ** 2\n\n", " \
    \   if n == 0:\n        return True\n    if n == 1:\n        return x == n\n \
    \   if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n   \
    \     return is_simple_power(x, n // 2) or x == n ** 2\n\n", "    if n == 0:\n\
    \        return True\n    if n == 1:\n        return x == n\n    if n % 2 == 0:\n\
    \        return is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x,\
    \ n // 2) or x == n ** 2\n\n", "    if n == 1:\n        return True\n    if n\
    \ % 2 == 0:\n        return False\n    if n % 3 == 0:\n        return True\n \
    \   if n % 5 == 0:\n        return False\n    if n % 7 == 0:\n        return True\n\
    \    return False\n\n", "    if n == 0:\n        return True\n    if n == 1:\n\
    \        return True\n    if n % 2 == 0:\n        return is_simple_power(x, n\
    \ // 2)\n    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x,\
    \ n // 3)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n       \
    \ return x == n\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n\
    \    else:\n        return is_simple_power(x, n // 2) or x == n ** 2\n\n", " \
    \   if n == 0:\n        return True\n    if n == 1:\n        return x == n\n \
    \   if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n   \
    \     return is_simple_power(x, n // 2) or x == n ** 2\n\n", "    if n == 0:\n\
    \        return True\n    if n == 1:\n        return x == n\n    if n % 2 == 0:\n\
    \        return is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x,\
    \ n // 2) or x == n ** 2\n\n", "    if n == 0:\n        return True\n    if n\
    \ == 1:\n        return x == 1 and is_power_of_two(x)\n    if x == 0 or x % n\
    \ == 0:\n        return False\n    lower = x // n\n    upper = lower + n\n   \
    \ return is_power_of_two(upper) and is_power_of_two(lower)\n\n", "    if n ==\
    \ 0:\n        return True\n    if n == 1:\n        return x == 1 and is_simple_power(x,\
    \ 2)\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n\
    \        return is_simple_power(x, n // 2) or x == n\n\n", "    if n == 0:\n \
    \       return True\n    if n == 1:\n        return x == n\n    if n % 2 == 0:\n\
    \        return is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x,\
    \ n // 2) or x == n ** 2\n\n", "    if n == 1:\n        return True\n    if n\
    \ % 2 == 0:\n        return False\n    if n % 3 == 0:\n        return True\n \
    \   if n % 5 == 0:\n        return False\n    if n % 7 == 0:\n        return True\n\
    \    if n % 9 == 0:\n        return False\n    if n % 11 == 0:\n        return\
    \ True\n    if n % 13 == 0:\n        return False\n    if n % 17 == 0:\n     \
    \   return True\n    if n % 19 == 0:\n        return False\n    if n % 23 == 0:\n\
    \        return True\n    if n % 29 == 0:\n        return False\n    if n % 31\
    \ == 0:\n        return True\n    if n % 37 == 0:\n        return False\n    if\
    \ n % 41 == 0:\n        return True\n    if n % 43 == 0:\n        return False\n\
    \    if n % 47 == 0:\n        return True\n    if n % 49 == 0:\n        return\
    \ False\n    if n % 53 == 0:\n        return True\n    if n % 57 == 0:\n     \
    \   return False\n    if n % 61 == 0:\n        return True\n    if n % 67 == 0:\n\
    \        return False\n    if n % 71 == 0:\n        return True\n    if n % 73\
    \ == 0:\n        return False\n    if n % 79 == 0:\n        return True\n    if\
    \ n % 83 == 0:\n        return False\n    if n % 89 == 0:\n        return True\n\
    \    if n % 97 == 0:\n        return False\n    if n % 101 == 0:\n        return\
    \ True\n    if n % 103 == 0:\n        return False\n    if n % 107 == 0:\n   \
    \     return True\n    if n % 109 == 0:\n        return False\n    if n % 113\
    \ == 0:\n        return True\n    if n % 127 == 0:\n        return False\n   \
    \ if n % 131 == 0:\n        return True\n    if n % 137 == 0:\n        return\
    \ False\n    if n % 141 == 0:\n        return True\n    if n % 147 == 0:\n   \
    \     return False\n    if n % 151 == 0:\n        return True\n    if n % 157\
    \ == 0:\n        return False\n    if n % 161 == 0:\n        return True\n   \
    \ if n % 167 == 0:\n        return False\n    if n % 171 == 0:\n        return\
    \ True\n    if n % 177 == 0:\n        return False\n    if n % 181 == 0:\n   \
    \     return True\n    if n % 187 == 0:\n        return False\n    if n % 191\
    \ == 0:\n        return True\n    if n % 197 == 0:\n        return False\n   \
    \ if n % 201 == 0:\n        return True\n    if n % 207 == 0:\n        return\
    \ False\n    if n % 211 == 0:\n        return True\n    if n % 217 == 0:\n   \
    \     return False\n    if n % 221 == 0:\n        return True\n    if n % 227\
    \ == 0:\n        return False\n    if n % 231 == 0:\n        return True\n   \
    \ if n % 237 == 0:\n        return False\n    if n % 241 == 0:\n        return\
    \ True\n    if n % 247 == 0:\n        return False\n    if n % 251 == 0:\n   \
    \     return True\n    if n % 257 == 0:\n        return False\n    if n % 261\
    \ == 0:\n        return True\n    if n % 267 == 0:\n        return False\n   \
    \ if n % 271 == 0:\n        return True\n    if n % 277 == 0:\n        return\
    \ False\n    if n % 281 == 0:\n        return True\n    if n % 287 == 0:\n   \
    \     return False\n    if n % 291 == 0:\n        return True\n    if n % 297\
    \ == 0:\n        return False\n    if n % 301 == 0:\n        return True\n   \
    \ if n % 307 == 0:\n        return False\n    if n % 311 == 0:\n        return\
    \ True", "    if n == 0:\n        return True\n    if n == 1:\n        return\
    \ x == n\n    if n == 2:\n        return x == n ** 2\n    if n == 3:\n       \
    \ return x == n ** 3\n    if n == 4:\n        return x == n ** 4\n    if n ==\
    \ 5:\n        return x == n ** 5\n    if n == 6:\n        return x == n ** 6\n\
    \    if n == 7:\n        return x == n ** 7\n    if n == 8:\n        return x\
    \ == n ** 8\n    if n == 9:\n        return x == n ** 9\n    if n == 10:\n   \
    \     return x == n ** 10\n    if n == 11:\n        return x == n ** 11\n    if\
    \ n == 12 or n == 13:\n        return x == n ** 12\n    if n == 14:\n        return\
    \ x == n ** 13\n    if n == 15:\n        return x == n ** 14\n    if n == 16:\n\
    \        return x == n ** 15\n    if n == 17:\n        return x == n ** 16\n \
    \   if n == 18:\n        return x == n ** 17\n    if n == 19:\n        return\
    \ x == n ** 18\n    if n == 20:\n        return x == n ** 19\n    if n == 21:\n\
    \        return x == n ** 20\n    if n == 22:\n        return x == n ** 21\n \
    \   if n == 23:\n        return x == n ** 22\n    if n == 24:\n        return\
    \ x == n ** 23\n    if n == 25:\n        return x == n ** 24\n    if n == 26:\n\
    \        return x == n ** 25\n    if n == 27:\n        return x == n ** 26\n \
    \   if n == 28:\n        return x == n ** 27\n    if n == 29:\n        return\
    \ x == n ** 28\n    if n == 30 or n == 31:\n        return x == n ** 29\n    if\
    \ n == 32:\n        return x == n ** 30\n    if n == 33:\n        return x ==\
    \ n ** 31\n    if n == 34:\n        return x == n ** 32\n    if n == 35:\n   \
    \     return x == n ** 33\n    if n == 36:\n        return x == n ** 34\n    if\
    \ n == 37:\n        return x == n ** 35\n    if n == 38:\n        return x ==\
    \ n ** 36\n    if n == 39:\n        return x == n ** 37\n    if n == 40 or n ==\
    \ 41:\n        return x == n ** 38\n    if n == 42:\n        return x == n **\
    \ 39\n    if n == 43:\n        return x == n ** 40\n    if n == 44:\n        return\
    \ x == n ** 41\n    if n == 45:\n        return x == n ** 42\n    if n == 46:\n\
    \        return x == n ** 43\n    if n == 47:\n        return x == n ** 44\n \
    \   if n == 48:\n        return x == n ** 45\n    if n == 49:\n        return\
    \ x == n ** 46\n    if n == 50:\n        return x == n ** ", "    if n == 0:\n\
    \        return True\n    if n == 1:\n        return True\n    if n % 2 == 0:\n\
    \        return False\n    if n % 3 == 0:\n        return False\n    if n % 5\
    \ == 0:\n        return False\n    if n % 7 == 0:\n        return False\n    if\
    \ n % 11 == 0:\n        return False\n    if n % 13 == 0:\n        return False\n\
    \    if n % 17 == 0:\n        return False\n    if n % 19 == 0:\n        return\
    \ False\n    if n % 23 == 0:\n        return False\n    if n % 29 == 0:\n    \
    \    return False\n    if n % 31 == 0:\n        return False\n    if n % 37 ==\
    \ 0:\n        return False\n    if n % 41 == 0:\n        return False\n    if\
    \ n % 43 == 0:\n        return False\n    if n % 47 == 0:\n        return False\n\
    \    if n % 53 == 0:\n        return False\n    if n % 59 == 0:\n        return\
    \ False\n    if n % 61 == 0:\n        return False\n    if n % 67 == 0:\n    \
    \    return False\n    if n % 71 == 0:\n        return False\n    if n % 73 ==\
    \ 0:\n        return False\n    if n % 79 == 0:\n        return False\n    if\
    \ n % 83 == 0:\n        return False\n    if n % 89 == 0:\n        return False\n\
    \    if n % 97 == 0:\n        return False\n    if n % 103 == 0:\n        return\
    \ False\n    if n % 107 == 0:\n        return False\n    if n % 113 == 0:\n  \
    \      return False\n    if n % 123 == 0:\n        return False\n    if n % 129\
    \ == 0:\n        return False\n    if n % 131 == 0:\n        return False\n  \
    \  if n % 137 == 0:\n        return False\n    if n % 141 == 0:\n        return\
    \ False\n    if n % 147 == 0:\n        return False\n    if n % 151 == 0:\n  \
    \      return False\n    if n % 157 == 0:\n        return False\n    if n % 161\
    \ == 0:\n        return False\n    if n % 167 == 0:\n        return False\n  \
    \  if n % 171 == 0:\n        return False\n    if n % 177 == 0:\n        return\
    \ False\n    if n % 181 == 0:\n        return False\n    if n % 187 == 0:\n  \
    \      return False\n    if n % 191 == 0:\n        return False\n    if n % 197\
    \ == 0:\n        return False\n    if n % 201 == 0:\n        return False\n  \
    \  if n % 207 == 0:\n        return False\n    if n % 211 == 0:\n        return\
    \ False\n    if n % 217 == 0:\n        return False\n    if n % 221 == 0:\n  \
    \      return False\n    if n % 227 == 0:\n        return False\n    if n % 231\
    \ == 0:\n        return False\n    if n % 237 == 0:\n        return False\n  \
    \  if n % 241 == 0:\n        return False\n    if n % 247 == 0:\n        return\
    \ False\n    if n % 251 == 0:\n        return False\n    if n % 257 == 0:\n  \
    \      return False\n    if n % 261 == 0:\n        return False\n    if n % 267\
    \ == 0:\n        return False\n    if n % 271 == 0:\n        return False\n  \
    \  if n % 277 == 0:\n        return False\n    if n % 281 == 0:\n        return\
    \ False\n    if n % 287 == 0:\n        return False\n    if n % 291 == 0:\n  \
    \      return False\n    if n % 297 == 0:\n        return False\n    if n % 301\
    \ == 0:\n        return False\n    if n % 307 == 0:\n        return False\n  \
    \  if n % 311 == 0:\n        return False\n    if n % 317 == 0:\n        return\
    \ False\n    if n % 321 == 0:\n        return False", "    if n == 0:\n      \
    \  return True\n    if n == 1:\n        return x == n\n    if n % 2 == 0:\n  \
    \      return is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x,\
    \ n // 2) or is_simple_power(x, n // 3)\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return x == 1 and is_simple_power(x, 2)\n    if\
    \ n == 2:\n        return x == 1 and is_simple_power(x, 3)\n    if n == 3:\n \
    \       return x == 1 and is_simple_power(x, 4)\n    if n == 4:\n        return\
    \ x == 1 and is_simple_power(x, 5)\n    if n == 5:\n        return x == 1 and\
    \ is_simple_power(x, 6)\n    if n == 6:\n        return x == 1 and is_simple_power(x,\
    \ 7)\n    if n == 7:\n        return x == 1 and is_simple_power(x, 8)\n    if\
    \ n == 8:\n        return x == 1 and is_simple_power(x, 9)\n    if n == 9:\n \
    \       return x == 1 and is_simple_power(x, 10)\n    if n == 10:\n        return\
    \ x == 1 and is_simple_power(x, 11)\n    if n == 11:\n        return x == 1 and\
    \ is_simple_power(x, 12)\n    if n == 12:\n        return x == 1 and is_simple_power(x,\
    \ 13)\n    if n == 13:\n        return x == 1 and is_simple_power(x, 14)\n   \
    \ if n == 14:\n        return x == 1 and is_simple_power(x, 15)\n    if n == 15:\n\
    \        return x == 1 and is_simple_power(x, 16)\n    if n == 16:\n        return\
    \ x == 1 and is_simple_power(x, 17)\n    if n == 17:\n        return x == 1 and\
    \ is_simple_power(x, 18)\n    if n == 18:\n        return x == 1 and is_simple_power(x,\
    \ 19)\n    if n == 19:\n        return x == 1 and is_simple_power(x, 20)\n   \
    \ if n == 20:\n        return x == 1 and is_simple_power(x, 21)\n    if n == 21:\n\
    \        return x == 1 and is_simple_power(x, 22)\n    if n == 22:\n        return\
    \ x == 1 and is_simple_power(x, 23)\n    if n == 23:\n        return x == 1 and\
    \ is_simple_power(x, 24)\n    if n == 24:\n        return x == 1 and is_simple_power(x,\
    \ 25)\n    if n == 25:\n        return x == 1 and is_simple_power(x, 26)\n   \
    \ if n == 26:\n        return x == 1 and is_simple_power(x, 27)\n    if n == 27:\n\
    \        return x == 1 and is_simple_power(x, 28)\n    if n == 28:\n        return\
    \ x == 1 and is_simple_power(x, 29)\n    if n == 29:\n        return x == 1 and\
    \ is_simple_power(x, 30)\n    if n == 31:\n        return x == 1 and is_simple_power(x,\
    \ 32)\n    if n == 32:\n        return x == 1 and is_simple_power(x, 33)\n   \
    \ if n == 33:\n        return x == 1 and is_simple_power(x, 34)\n    if n == 34:\n\
    \        return x == 1 and is_simple_power(x, 35)\n    if n == 35:\n        return\
    \ x == 1 and is_simple_power(x, 36)\n    if n == 36:\n        return x == 1 and\
    \ is_simple_power(x, 37)\n    if n == 37:\n        return x == 1 and is_simple_power(x,\
    \ 38)\n    if n == 38:\n        return x", "    if n == 1:\n        return True\n\
    \    if n == 0:\n        return False\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, n // 2) or is_simple_power(x,\
    \ n // 3)\n\n", "    if n == 0:\n        return True\n    if n == 1:\n       \
    \ return x == n\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n\
    \    else:\n        return is_simple_power(x, n // 2) or x == n ** 2\n\n", " \
    \   if n == 0:\n        return True\n    if n == 1:\n        return x == 1 and\
    \ is_power_of_two(x)\n    if x == 1 or x == n:\n        return True\n    if x\
    \ % n == 0:\n        return is_power_of_two(x // n) and is_power_of_two(x % n)\n\
    \    return False\n\n", "    if n == 0:\n        return True\n    if n == 1:\n\
    \        return x == 1 and is_power_of_two(x)\n    if x == 1 or x == n:\n    \
    \    return True\n    if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n\
    \    else:\n        return is_simple_power(x, n // 2) or is_power_of_two(x)\n\n",
  "    if n == 0:\n        return True\n    if n == 1:\n        return x == n\n  \
    \  if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n    \
    \    return is_simple_power(x, (n - 1) // 2)\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return x == n\n    if n % 2 == 0:\n        return\
    \ is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x, n //\
    \ 2) or x == n ** 2\n\n", "    if n == 0:\n        return True\n    if n == 1:\n\
    \        return x == n\n    if n % 2 == 0:\n        return is_simple_power(x,\
    \ n // 2)\n    else:\n        return is_simple_power(x, (n - 1) // 2)\n\n", " \
    \   if n == 0:\n        return True\n    if n == 1:\n        return x == n\n \
    \   if n % 2 == 0:\n        return is_simple_power(x, n // 2)\n    else:\n   \
    \     return is_simple_power(x, n // 2) or x == n ** 2\n\n", "    if n == 0:\n\
    \        return True\n    if n == 1:\n        return x == n\n    if n % 2 == 0:\n\
    \        return is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x,\
    \ n // 2) or x == n ** 2\n\n", "    if n == 0:\n        return True\n    if n\
    \ == 1:\n        return x == 1 and is_power_of_two(x)\n    if x == 1 or x == n:\n\
    \        return True\n    if x % n == 0:\n        return is_power_of_two(x //\
    \ n)\n    return False\n\n", "    if n == 1:\n        return True\n    if n %\
    \ 2 == 0:\n        return False\n    if n % 3 == 0:\n        return True\n   \
    \ if n % 5 == 0:\n        return True\n    if n % 7 == 0:\n        return True\n\
    \    if n % 11 == 0:\n        return True\n    if n % 13 == 0:\n        return\
    \ True\n    if n % 17 == 0:\n        return True\n    if n % 19 == 0:\n      \
    \  return True\n    if n % 23 == 0:\n        return True\n    if n % 29 == 0:\n\
    \        return True\n    if n % 31 == 0:\n        return True\n    if n % 37\
    \ == 0:\n        return True\n    if n % 41 == 0:\n        return True\n    if\
    \ n % 43 == 0:\n        return True\n    if n % 47 == 0:\n        return True\n\
    \    if n % 53 == 0:\n        return True\n    if n % 59 == 0:\n        return\
    \ True\n    if n % 61 == 0:\n        return True\n    if n % 67 == 0:\n      \
    \  return True\n    if n % 71 == 0:\n        return True\n    if n % 73 == 0:\n\
    \        return True\n    if n % 79 == 0:\n        return True\n    if n % 83\
    \ == 0:\n        return True\n    if n % 89 == 0:\n        return True\n    if\
    \ n % 97 == 0:\n        return True\n    if n % 103 == 0:\n        return True\n\
    \    if n % 109 == 0:\n        return True\n    if n % 113 == 0:\n        return\
    \ True\n    if n % 127 == 0:\n        return True\n    if n % 131 == 0:\n    \
    \    return True\n    if n % 137 == 0:\n        return True\n    if n % 141 ==\
    \ 0:\n        return True\n    if n % 147 == 0:\n        return True\n    if n\
    \ % 151 == 0:\n        return True\n    if n % 157 == 0:\n        return True\n\
    \    if n % 161 == 0:\n        return True\n    if n % 167 == 0:\n        return\
    \ True\n    if n % 171 == 0:\n        return True\n    if n % 177 == 0:\n    \
    \    return True\n    if n % 181 == 0:\n        return True\n    if n % 187 ==\
    \ 0:\n        return True\n    if n % 191 == 0:\n        return True\n    if n\
    \ % 197 == 0:\n        return True\n    if n % 201 == 0:\n        return True\n\
    \    if n % 207 == 0:\n        return True\n    if n % 211 == 0:\n        return\
    \ True\n    if n % 217 == 0:\n        return True\n    if n % 221 == 0:\n    \
    \    return True\n    if n % 227 == 0:\n        return True\n    if n % 231 ==\
    \ 0:\n        return True\n    if n % 237 == 0:\n        return True\n    if n\
    \ % 241 == 0:\n        return True\n    if n % 247 == 0:\n        return True\n\
    \    if n % 251 == 0:\n        return True\n    if n % 257 == 0:\n        return\
    \ True\n    if n % 261 == 0:\n        return True\n    if n % 267 == 0:\n    \
    \    return True\n    if n % 271 == 0:\n        return True\n    if n % 277 ==\
    \ 0:\n        return True\n    if n % 281 == 0:\n        return True\n    if n\
    \ % 287 == 0:\n        return True\n    if n % 291 == 0:\n        return True\n\
    \    if n % 297 == 0:\n        return True\n    if n % 301 == 0:\n        return\
    \ True\n    if n % 307 == 0:\n        return True\n    if n % 311 == 0:\n    \
    \    return True\n    if n % 317 == 0:\n        return True\n    if n % 321 ==\
    \ 0:\n        return True\n    if n % 327 == 0:\n        return True\n    if n\
    \ % 331 == 0:", "    if n == 0:\n        return True\n    if n == 1:\n       \
    \ return x % 1 == 0\n    if n == 2:\n        return x % 2 == 0\n    if n % 2 ==\
    \ 0:\n        return is_simple_power(x, n // 2)\n    else:\n        return is_simple_power(x,\
    \ n // 2) or is_simple_power(x, n // 3)\n\n", "    if n == 0:\n        return\
    \ True\n    if n == 1:\n        return x == 1 and is_simple_power(x, 2)\n    if\
    \ x == 1 or x == n ** 2:\n        return True\n    if x % n == 0:\n        return\
    \ True\n    return False\n\n", "    if n == 1:\n        return True\n    if n\
    \ % 2 == 0:\n        return False\n    if n % 3 == 0:\n        return True\n \
    \   if n % 5 == 0:\n        return True\n    if n % 7 == 0:\n        return True\n\
    \    if n % 11 == 0:\n        return True\n    if n % 13 == 0:\n        return\
    \ True\n    if n % 17 == 0:\n        return True\n    if n % 19 == 0:\n      \
    \  return True\n    if n % 23 == 0:\n        return True\n    if n % 29 == 0:\n\
    \        return True\n    if n % 31 == 0:\n        return True\n    if n % 37\
    \ == 0:\n        return True\n    if n % 41 == 0:\n        return True\n    if\
    \ n % 43 == 0:\n        return True\n    if n % 47 == 0:\n        return True\n\
    \    if n % 53 == 0:\n        return True\n    if n % 59 == 0:\n        return\
    \ True\n    if n % 61 == 0:\n        return True\n    if n % 67 == 0:\n      \
    \  return True\n    if n % 71 == 0:\n        return True\n    if n % 73 == 0:\n\
    \        return True\n    if n % 79 == 0:\n        return True\n    if n % 83\
    \ == 0:\n        return True\n    if n % 89 == 0:\n        return True\n    if\
    \ n % 97 == 0:\n        return True\n    if n % 103 == 0:\n        return True\n\
    \    if n % 107 == 0:\n        return True\n    if n % 113 == 0:\n        return\
    \ True\n    if n % 127 == 0:\n        return True\n    if n % 131 == 0:\n    \
    \    return True\n    if n % 137 == 0:\n        return True\n    if n % 141 ==\
    \ 0:\n        return True\n    if n % 147 == 0:\n        return True\n    if n\
    \ % 151 == 0:\n        return True\n    if n % 157 == 0:\n        return True\n\
    \    if n % 161 == 0:\n        return True\n    if n % 167 == 0:\n        return\
    \ True\n    if n % 171 == 0:\n        return True\n    if n % 177 == 0:\n    \
    \    return True\n    if n % 181 == 0:\n        return True\n    if n % 187 ==\
    \ 0:\n        return True\n    if n % 191 == 0:\n        return True\n    if n\
    \ % 197 == 0:\n        return True\n    if n % 201 == 0:\n        return True\n\
    \    if n % 207 == 0:\n        return True\n    if n % 211 == 0:\n        return\
    \ True\n    if n % 217 == 0:\n        return True\n    if n % 221 == 0:\n    \
    \    return True\n    if n % 227 == 0:\n        return True\n    if n % 231 ==\
    \ 0:\n        return True\n    if n % 237 == 0:\n        return True\n    if n\
    \ % 241 == 0:\n        return True\n    if n % 247 == 0:\n        return True\n\
    \    if n % 251 == 0:\n        return True\n    if n % 257 == 0:\n        return\
    \ True\n    if n % 261 == 0:\n        return True\n    if n % 267 == 0:\n    \
    \    return True\n    if n % 271 == 0:\n        return True\n    if n % 277 ==\
    \ 0:\n        return True\n    if n % 281 == 0:\n        return True\n    if n\
    \ % 287 == 0:\n        return True\n    if n % 291 == 0:\n        return True\n\
    \    if n % 297 == 0:\n        return True\n    if n % 301 == 0:\n        return\
    \ True\n    if n % 307 == 0:\n        return True\n    if n % 311 == 0:\n    \
    \    return True\n    if n % 317 == 0:\n        return True\n    if n % 321 ==\
    \ 0:\n        return True\n    if n % 327 == 0:\n        return True\n    if n\
    \ % 331 == 0:"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

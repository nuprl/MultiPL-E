language: py
name: HumanEval_88_sort_array
results:
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        return sorted(array)\n\
    \    else:\n        return sorted(array, reverse=True)\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa7s3941v.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpa7s3941v.py\", line 38,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpa7s3941v.py\", line 34,\
    \ in check\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    sum = 0\n\
    \    for i in array:\n        sum += i\n    if sum % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph1upvf4k.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmph1upvf4k.py\", line 42,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmph1upvf4k.py\", line 35,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc3cg8l5i.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpc3cg8l5i.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpc3cg8l5i.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3cpcb2xe.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp3cpcb2xe.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp3cpcb2xe.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiw7rewux.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpiw7rewux.py\", line 40,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpiw7rewux.py\", line 34,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv8ykx3ip.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpv8ykx3ip.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpv8ykx3ip.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx08cwa5u.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpx08cwa5u.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpx08cwa5u.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_72o_f43.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp_72o_f43.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp_72o_f43.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3cpcb2xe.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp3cpcb2xe.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp3cpcb2xe.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx08cwa5u.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpx08cwa5u.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpx08cwa5u.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx08cwa5u.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpx08cwa5u.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpx08cwa5u.py\", line 32,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3cpcb2xe.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp3cpcb2xe.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp3cpcb2xe.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    sum = 0\n\
    \    for i in array:\n        sum += i\n    if sum % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph1upvf4k.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmph1upvf4k.py\", line 42,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmph1upvf4k.py\", line 35,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum = 0\n    for num in array:\n    \
    \    sum += num\n    if sum % 2 == 0:\n        array.sort(reverse=True)\n    else:\n\
    \        array.sort()\n    return array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk6u39y_6.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpk6u39y_6.py\", line 41,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpk6u39y_6.py\", line 35,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_72o_f43.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp_72o_f43.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp_72o_f43.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_array = [sum(array[:i]) + array[i]\
    \ for i in range(len(array))]\n    sum_array.sort()\n    if sum_array[-1] % 2\
    \ == 0:\n        return sum_array[::-1]\n    else:\n        return sum_array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphgz0pmm9.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmphgz0pmm9.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmphgz0pmm9.py\", line 30,\
    \ in check\n    assert candidate([]) == []\n  File \"/tmp/tmphgz0pmm9.py\", line\
    \ 24, in sort_array\n    if sum_array[-1] % 2 == 0:\nIndexError: list index out\
    \ of range\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3cpcb2xe.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp3cpcb2xe.py\", line 36,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmp3cpcb2xe.py\", line 30,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    sum = 0\n\
    \    for i in array:\n        sum += i\n    if sum % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph1upvf4k.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmph1upvf4k.py\", line 42,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmph1upvf4k.py\", line 35,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc3cg8l5i.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpc3cg8l5i.py\", line 39,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpc3cg8l5i.py\", line 33,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
    \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1,\
    \ 5])\n    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n   \
    \ [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiw7rewux.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpiw7rewux.py\", line 40,\
    \ in test_check\n    check(sort_array)\n  File \"/tmp/tmpiw7rewux.py\", line 34,\
    \ in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\nAssertionError\n"
  stdout: ''

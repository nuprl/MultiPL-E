name: HumanEval_85_add
language: py
prompt: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"Given\
  \ a non-empty list of integers lst. add the even elements that are at odd indices..\n\
  \n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([4, 88]) == 88\n    assert candidate([4,\
  \ 5, 6, 7, 2, 122]) == 122\n    assert candidate([4, 0, 6, 7]) == 0\n    assert\
  \ candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
completions: ["    even = 0\n    odd = 0\n    for i in lst:\n        if i % 2 == 0:\n\
    \            even += i\n        else:\n            odd += i\n    return even +\
    \ odd\n", "    even = 0\n    odd = 0\n    for i in lst:\n        if i % 2 == 0:\n\
    \            even += i\n        else:\n            odd += i\n    return even +\
    \ odd\n", "    even = 0\n    odd = 0\n    for i in lst:\n        if i % 2 == 0:\n\
    \            even += i\n        else:\n            odd += i\n    return even +\
    \ odd\n", "    even = 0\n    odd = 0\n    for i in lst:\n        if i % 2 == 0:\n\
    \            even += i\n        else:\n            odd += i\n    return even +\
    \ odd\n", "    even = 0\n    odd = 0\n    for i in lst:\n        if i % 2 == 0:\n\
    \            even += i\n        else:\n            odd += i\n    return even +\
    \ odd\n", "    even = 0\n    odd = 0\n    for num in lst:\n        if num % 2\
    \ == 0:\n            even += num\n        else:\n            odd += num\n    return\
    \ even + odd\n", "    even = 0\n    odd = 0\n    for i in lst:\n        if i %\
    \ 2 == 0:\n            even += i\n        else:\n            odd += i\n    return\
    \ even + odd\n", "    even = 0\n    odd = 0\n    for num in lst:\n        if num\
    \ % 2 == 0:\n            even += num\n        else:\n            odd += num\n\
    \    return even + odd\n", "    even = 0\n    odd = 0\n    for x in lst:\n   \
    \     if x % 2 == 0:\n            even += x\n        else:\n            odd +=\
    \ x\n    return even + odd\n", "    even = 0\n    odd = 0\n    for num in lst:\n\
    \        if num % 2 == 0:\n            even += num\n        else:\n          \
    \  odd += num\n    return even + odd\n", "    even = 0\n    odd = 0\n    for i\
    \ in lst:\n        if i % 2 == 0:\n            even += i\n        else:\n    \
    \        odd += i\n    return even + odd\n", "    even = 0\n    odd = 0\n    for\
    \ i in lst:\n        if i % 2 == 0:\n            even += i\n        else:\n  \
    \          odd += i\n    return even + odd\n", "    even = 0\n    odd = 0\n  \
    \  for i in lst:\n        if i % 2 == 0:\n            even += i\n        else:\n\
    \            odd += i\n    return even + odd\n", "    even = 0\n    odd = 0\n\
    \    even = lst[0]\n    odd = lst[1]\n    for i in range(2, len(lst)):\n     \
    \   if lst[i] % 2 == 0:\n            even += lst[i]\n        else:\n         \
    \   odd += lst[i]\n    return even + odd\n", "    even = 0\n    odd = 0\n    for\
    \ num in lst:\n        if num % 2 == 0:\n            even += num\n        else:\n\
    \            odd += num\n    return even + odd\n", "    even = 0\n    odd = 0\n\
    \    for i in lst:\n        if i % 2 == 0:\n            even += i\n        else:\n\
    \            odd += i\n    return even + odd\n", "    even = 0\n    odd = 0\n\
    \    for i in lst:\n        if i % 2 == 0:\n            even += i\n        else:\n\
    \            odd += i\n    return even + odd\n", "    even = 0\n    odd = 0\n\
    \    for num in lst:\n        if num % 2 == 0:\n            even += num\n    \
    \    else:\n            odd += num\n    return even + odd\n", "    even = 0\n\
    \    odd = 0\n    for i in lst:\n        if i % 2 == 0:\n            even += i\n\
    \        else:\n            odd += i\n    return even + odd\n", "    even = 0\n\
    \    odd = 0\n    for i in lst:\n        if i % 2 == 0:\n            even += i\n\
    \        else:\n            odd += i\n    return even + odd\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_57_monotonic
language: py
prompt: "from typing import List\n\ndef monotonic(l: List[int]) -> bool:\n    \"\"\
  \"Return True is list elements are monotonically increasing or decreasing.\n   \
  \ >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n  \
  \  False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([1, 2, 4, 10]) == True\n    assert\
  \ candidate([1, 2, 4, 20]) == True\n    assert candidate([1, 20, 4, 10]) == False\n\
  \    assert candidate([4, 1, 0, -10]) == True\n    assert candidate([4, 1, 1, 0])\
  \ == True\n    assert candidate([1, 2, 3, 2, 5, 60]) == False\n    assert candidate([1,\
  \ 2, 3, 4, 5, 60]) == True\n    assert candidate([9, 9, 9, 9]) == True\n\ndef test_check():\n\
  \    check(monotonic)\n\ntest_check()\n"
completions: ["    if len(l) < 2:\n        return True\n    if l[0] < l[1]:\n    \
    \    return True\n    if l[-1] < l[-2]:\n        return True\n    return False\n",
  "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n\
    \        if prev < x:\n            return False\n        prev = x\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    if l[-1] < l[0]:\n  \
    \      return True\n    if l[-1] > l[-2]:\n        return True\n    return False\n",
  "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for i in l[1:]:\n\
    \        if prev < i:\n            return False\n        prev = i\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    prev = l[0]\n    for\
    \ i in l[1:]:\n        if prev < i:\n            return False\n        prev =\
    \ i\n    return True\n", "    if len(l) < 2:\n        return True\n    \n    prev\
    \ = l[0]\n    for x in l[1:]:\n        if prev < x:\n            return False\n\
    \        prev = x\n    return True\n", "    if len(l) < 2:\n        return True\n\
    \    i = -1\n    j = len(l) - 2\n    while j > i:\n        if l[j] < l[j + 1]:\n\
    \            return True\n        elif l[j] > l[j + 1]:\n            return False\n\
    \        i -= 1\n        j += 1\n    return True\n", "    if len(l) < 2:\n   \
    \     return True\n    \n    prev = l[0]\n    for x in l[1:]:\n        if prev\
    \ <= x:\n            return False\n        prev = x\n    return True\n", "   \
    \ if len(l) < 2:\n        return True\n    if l[-1] < l[0]:\n        return True\n\
    \    return False\n", "    if len(l) < 2:\n        return True\n    \n    prev\
    \ = l[0]\n    for x in l[1:]:\n        if prev < x:\n            return False\n\
    \        prev = x\n    return True\n", "    if len(l) < 2:\n        return True\n\
    \    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n", "    if len(l) <\
    \ 2:\n        return True\n    diff = l[1] - l[0]\n    for x in l[2:]:\n     \
    \   if x < l[0]:\n            return False\n        if x > l[-1]:\n          \
    \  return False\n        diff += x - l[0]\n        if diff < 0:\n            return\
    \ False\n    return True\n", "    if len(l) < 2:\n        return True\n    i,\
    \ j = 0, len(l) - 1\n    while i < j:\n        if l[i] < l[j]:\n            return\
    \ False\n        elif l[i] > l[j]:\n            i += 1\n        else:\n      \
    \      j -= 1\n    return True\n\n", "    if len(l) < 2:\n        return True\n\
    \    head, *tail = l\n    if head < tail[0]:\n        return True\n    if head\
    \ > tail[-1]:\n        return True\n    return monotonic(tail)\n", "    if len(l)\
    \ < 2:\n        return True\n    head, *tail = l\n    if head < tail[0]:\n   \
    \     return True\n    if head > tail[-1]:\n        return True\n    return monotonic(tail)\n",
  "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n\
    \        if prev < x:\n            return False\n        prev = x\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    if l[-1] < l[0]:\n  \
    \      return True\n    return False\n", "    if len(l) < 2:\n        return True\n\
    \    else:\n        return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n", " \
    \   if len(l) < 2:\n        return True\n    i = 0\n    j = len(l) - 1\n    while\
    \ i < j:\n        if l[i] < l[j]:\n            return False\n        elif l[i]\
    \ > l[j]:\n            i += 1\n        else:\n            j -= 1\n    return True\n",
  "    l = list(l)\n    l.sort()\n    return l[0] < l[-1]\n", "    if len(l) < 2:\n\
    \        return True\n    i = 0\n    j = len(l) - 1\n    while i < j:\n      \
    \  if l[i] < l[j]:\n            return False\n        elif l[i] > l[j]:\n    \
    \        i += 1\n        else:\n            j -= 1\n    return True\n", "    if\
    \ len(l) < 2:\n        return True\n    i = 0\n    j = i\n    while j < len(l)\
    \ - 1:\n        if l[j] < l[j + 1]:\n            return False\n        j += 1\n\
    \    return True\n", "    if len(l) < 2:\n        return True\n    else:\n   \
    \     first = l[0]\n        last = l[-1]\n        if first < last:\n         \
    \   return True\n        else:\n            return False\n", "    if len(l) <\
    \ 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n      \
    \  if prev <= x:\n            return False\n        prev = x\n    return True\n",
  "    if len(l) < 2:\n        return True\n    diffs = l[1:] - l[:-1]\n    if diffs[0]\
    \ > 0 and diffs[-1] > 0:\n        return True\n    return False\n", "    if len(l)\
    \ < 2:\n        return True\n    head, *tail = l\n    if head < tail[0]:\n   \
    \     return True\n    if head > tail[-1]:\n        return True\n    return monotonic(tail)\n",
  "    if len(l) < 2:\n        return True\n    if l[-1] < l[0]:\n        return False\n\
    \    left, right = 0, len(l) - 1\n    while left < right:\n        mid = (left\
    \ + right) // 2\n        if l[mid] < l[left]:\n            left = mid + 1\n  \
    \      elif l[mid] > l[right]:\n            right = mid - 1\n        else:\n \
    \           return True\n    return False\n", "    if len(l) < 2:\n        return\
    \ True\n    \n    prev = l[0]\n    for x in l[1:]:\n        if prev < x:\n   \
    \         return False\n        prev = x\n    return True\n", "    if len(l) <\
    \ 2:\n        return True\n    diff1 = l[1] - l[0]\n    diff2 = l[2] - l[1]\n\
    \    return diff1 < diff2\n", "    if len(l) < 2:\n        return True\n    head,\
    \ *tail = l\n    if head <= tail[0]:\n        return True\n    if head < tail[-1]:\n\
    \        return False\n    return monotonic(tail)\n", "    if len(l) < 2:\n  \
    \      return True\n    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in\
    \ range(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    i = 0\n \
    \   j = len(l) - 1\n    while i < j:\n        if l[i] < l[j]:\n            return\
    \ True\n        elif l[i] > l[j]:\n            return False\n        i += 1\n\
    \        j -= 1\n    return True\n", "    if len(l) < 2:\n        return True\n\
    \    return all(l[i] <= l[i+1] for i in range(len(l)-1))\n", "    if len(l) <\
    \ 2:\n        return True\n    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for i in l[1:]:\n\
    \        if prev < i:\n            return False\n        prev = i\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    i = len(l) - 2\n    j\
    \ = i\n    while j > 0 and l[j] < l[j-1]:\n        j -= 1\n    if j == i:\n  \
    \      return True\n    return False\n", "    if len(l) < 2:\n        return True\n\
    \    i = 0\n    j = len(l) - 1\n    while i < j:\n        if l[i] > l[j]:\n  \
    \          return False\n        elif l[i] < l[j]:\n            i += 1\n     \
    \   else:\n            j -= 1\n    return True\n", "    if len(l) < 2:\n     \
    \   return True\n    else:\n        return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    l.sort()\n    return l[0] < l[-1]\n",
  "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in\
    \ range(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    if l[-1]\
    \ < l[0]:\n        return True\n    return False\n", "    if len(l) < 2:\n   \
    \     return True\n    \n    prev = l[0]\n    for x in l[1:]:\n        if prev\
    \ > x:\n            return False\n        prev = x\n    return True\n", "    if\
    \ len(l) < 2:\n        return True\n    i = 0\n    j = -1\n    while i < len(l)\
    \ - 1:\n        if l[i] > l[i + 1]:\n            return False\n        elif l[i]\
    \ < l[i + 1]:\n            i += 1\n        else:\n            j += 1\n       \
    \     if j == len(l) - 1:\n                return True\n    return False\n", " \
    \   if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for i in l[1:]:\n\
    \        if prev < i:\n            return False\n        prev = i\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    i = len(l) - 2\n    j\
    \ = i\n    while j > 0 and l[j] < l[j-1]:\n        j -= 1\n    if j == i:\n  \
    \      return True\n    return False\n", "    if len(l) < 2:\n        return True\n\
    \    \n    prev = l[0]\n    for i in l[1:]:\n        if prev < i:\n          \
    \  return False\n        prev = i\n    return True\n", "    if len(l) < 2:\n \
    \       return True\n    if l[-1] < l[-2]:\n        return True\n    return False\n",
  "    if len(l) < 2:\n        return True\n    if l[-1] < l[0]:\n        return True\n\
    \    return False\n", "    if len(l) < 2:\n        return True\n    if l[0] >\
    \ l[-1]:\n        return True\n    if l[0] == l[-1]:\n        return False\n \
    \   for i in range(len(l) - 1):\n        if l[i] > l[i + 1]:\n            return\
    \ False\n    return True\n", "    if len(l) < 2:\n        return True\n    if\
    \ l[-1] < l[0]:\n        return False\n    i, j = 0, len(l) - 1\n    while i <\
    \ j:\n        if l[i] < l[j]:\n            return True\n        elif l[i] > l[j]:\n\
    \            return False\n        i += 1\n        i %= len(l)\n        j -= 1\n\
    \        j %= len(l)\n    return True\n", "    if len(l) < 2:\n        return\
    \ True\n    if l[-1] < l[0]:\n        return False\n    i, j = 0, len(l) - 1\n\
    \    while i < j:\n        if l[i] < l[j]:\n            return True\n        elif\
    \ l[i] > l[j]:\n            return False\n        i, j = i + 1, j - 1\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    if l[-1] < l[0]:\n  \
    \      return False\n    i, j = 0, len(l) - 1\n    while i < j:\n        if l[i]\
    \ < l[j]:\n            return True\n        elif l[i] > l[j]:\n            return\
    \ False\n        i += 1\n        j -= 1\n    return True\n", "    if len(l) <\
    \ 2:\n        return True\n    else:\n        return all(l[i] <= l[i+1] for i\
    \ in range(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    \n   \
    \ prev = l[0]\n    for x in l[1:]:\n        if prev < x:\n            return False\n\
    \        prev = x\n    return True\n", "    if len(l) < 2:\n        return True\n\
    \    \n    prev = l[0]\n    for x in l[1:]:\n        if prev < x:\n          \
    \  return False\n        prev = x\n    return True\n", "    if len(l) < 2:\n \
    \       return True\n    \n    prev = l[0]\n    for i in l[1:]:\n        if prev\
    \ < i:\n            return False\n        prev = i\n    return True\n", "    if\
    \ len(l) < 2:\n        return True\n    else:\n        return all(l[i] <= l[i+1]\
    \ for i in xrange(len(l)-1))\n", "    if len(l) < 2:\n        return True\n  \
    \  \n    prev = l[0]\n    for i in l[1:]:\n        if prev > i:\n            return\
    \ False\n        prev = i\n    return True\n", "    if len(l) < 2:\n        return\
    \ True\n    else:\n        return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    i = 0\n    j = len(l) - 1\n    while\
    \ i < j:\n        if l[i] < l[j]:\n            return False\n        elif l[i]\
    \ > l[j]:\n            return True\n        i += 1\n        j -= 1\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1]\
    \ for i in xrange(len(l)-1))\n", "    if len(l) < 2:\n        return True\n  \
    \  i, j = 0, len(l) - 1\n    while i < j:\n        if l[i] < l[j]:\n         \
    \   return True\n        elif l[i] > l[j]:\n            return False\n       \
    \ i += 1\n        i %= len(l)\n        j -= 1\n        j %= len(l)\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    if l[-1] < l[0]:\n  \
    \      return True\n    if l[-1] > l[-2]:\n        return True\n    return False\n",
  "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in\
    \ range(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    i = 0\n \
    \   j = len(l) - 1\n    while i < j:\n        if l[i] < l[j]:\n            return\
    \ False\n        elif l[i] > l[j]:\n            i += 1\n        else:\n      \
    \      j -= 1\n    return True\n", "    if len(l) < 2:\n        return True\n\
    \    if l[-1] < l[0]:\n        return True\n    if l[-1] > l[-2]:\n        return\
    \ True\n    return False\n", "    if len(l) < 2:\n        return True\n    \n\
    \    prev = l[0]\n    for i in l[1:]:\n        if prev < i:\n            return\
    \ False\n        prev = i\n    return True\n", "    if len(l) < 2:\n        return\
    \ True\n    if l[-1] < l[0]:\n        return True\n    return False\n", "    if\
    \ len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n\
    \        if prev < x:\n            return False\n        prev = x\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    i = len(l) - 2\n    j\
    \ = i\n    while j > 0 and l[j-1] > l[j]:\n        j -= 1\n    return l[i] > l[j]\n",
  "    if len(l) < 2:\n        return True\n    if l[-1] < l[-2]:\n        return\
    \ True\n    return False\n", "    if len(l) < 2:\n        return True\n    else:\n\
    \        first = l[0]\n        last = l[-1]\n        if first < last:\n      \
    \      return True\n        else:\n            return False\n", "    if len(l)\
    \ < 2:\n        return True\n    \n    prev = l[0]\n    for i in l[1:]:\n    \
    \    if prev < i:\n            return False\n        prev = i\n    return True\n",
  "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for i in l[1:]:\n\
    \        if prev > i:\n            return False\n        prev = i\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n \
    \   for x in l[1:]:\n        if prev < x:\n            return False\n        prev\
    \ = x\n    return True\n", "    if len(l) < 2:\n        return True\n    else:\n\
    \        first = l[0]\n        last = l[-1]\n        if first < last:\n      \
    \      return True\n        else:\n            return False\n", "    if len(l)\
    \ < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    i = -1\n    j = len(l) - 1\n    while\
    \ j > i:\n        if l[j] < l[i]:\n            return False\n        if l[j] ==\
    \ l[i]:\n            if j == i:\n                return False\n            i -=\
    \ 1\n            j += 1\n        else:\n            i -= 1\n    return True\n",
  "    if len(l) < 2:\n        return True\n    i = 0\n    j = len(l) - 1\n    while\
    \ i < j:\n        if l[i] < l[j]:\n            return False\n        elif l[i]\
    \ > l[j]:\n            i += 1\n        else:\n            j -= 1\n    return True\n",
  "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in\
    \ range(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    else:\n \
    \       return all(l[i] <= l[i+1] for i in range(len(l)-1))\n", "    if len(l)\
    \ < 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n    \
    \    if prev > x:\n            return False\n        prev = x\n    return True\n",
  "    if len(l) < 2:\n        return True\n    i = 0\n    j = i\n    while i < len(l)\
    \ - 1:\n        if l[i] < l[j]:\n            return False\n        elif l[i] >\
    \ l[j]:\n            i += 1\n        else:\n            j += 1\n    return True\n",
  "    l = list(l)\n    l.sort()\n    return l[0] == l[-1]\n", "    if len(l) < 2:\n\
    \        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n        if prev\
    \ < x:\n            return False\n        prev = x\n    return True\n", "    if\
    \ len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    diff1 = l[1] - l[0]\n    diff2 = l[2]\
    \ - l[1]\n    return diff1 < diff2\n", "    if len(l) < 2:\n        return True\n\
    \    if l[0] > l[1]:\n        return True\n    return False\n", "    if len(l)\
    \ < 2:\n        return True\n    if l[-1] < l[0]:\n        return False\n    left,\
    \ right = 0, len(l) - 1\n    while left < right:\n        mid = (left + right)\
    \ // 2\n        if l[mid] < l[mid+1]:\n            left = mid + 1\n        else:\n\
    \            right = mid\n    return l[left] >= l[left+1]\n", "    if len(l) <\
    \ 2:\n        return True\n    \n    prev = l[0]\n    for i in l[1:]:\n      \
    \  if prev > i:\n            return False\n        prev = i\n    return True\n",
  "    if len(l) < 2:\n        return True\n    i = len(l) - 2\n    j = i\n    while\
    \ j > 0 and l[j-1] > l[j]:\n        j -= 1\n    return j > 0\n", "    if len(l)\
    \ < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in\
    \ range(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    diff1 = l[1]\
    \ - l[0]\n    diff2 = l[2] - l[1]\n    return diff1 < diff2\n", "    if len(l)\
    \ < 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n    \
    \    if prev < x:\n            return False\n        prev = x\n    return True\n",
  "    l = list(l)\n    l.sort()\n    return l[0] == l[-1]\n", "    if len(l) < 2:\n\
    \        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n        if prev\
    \ < x:\n            return False\n        prev = x\n    return True\n", "    if\
    \ len(l) < 2:\n        return True\n    i = 0\n    j = i\n    while j < len(l)\
    \ - 1:\n        if l[j] < l[j + 1]:\n            return False\n        j += 1\n\
    \    return True\n", "    if len(l) < 2:\n        return True\n    head, *tail\
    \ = l\n    if head <= tail[0]:\n        return True\n    elif head < tail[-1]:\n\
    \        return False\n    return monotonic(tail)\n", "    if len(l) < 2:\n  \
    \      return True\n    \n    prev = l[0]\n    for x in l[1:]:\n        if prev\
    \ < x:\n            return False\n        prev = x\n    return True\n", "    if\
    \ len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for i in l[1:]:\n\
    \        if prev > i:\n            return False\n        prev = i\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    if l[-1] < l[-2]:\n \
    \       return True\n    return False\n", "    if len(l) < 2:\n        return\
    \ True\n    diff = l[1] - l[0]\n    for x in l[2:]:\n        if x < l[0]:\n  \
    \          return False\n        if x > l[-1]:\n            return False\n   \
    \     if diff == 0:\n            return True\n        diff -= x\n    return True\n",
  "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in\
    \ xrange(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    if l[-1]\
    \ < l[-2]:\n        return True\n    return False\n", "    if len(l) < 2:\n  \
    \      return True\n    else:\n        first = l[0]\n        last = l[-1]\n  \
    \      if first < last:\n            return True\n        else:\n            return\
    \ False\n", "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n\
    \    for i in l[1:]:\n        if prev < i:\n            return False\n       \
    \ prev = i\n    return True\n", "    if len(l) < 2:\n        return True\n   \
    \ head, *tail = l\n    if head < tail[0]:\n        return True\n    if head >\
    \ tail[-1]:\n        return True\n    return monotonic(tail)\n", "    if len(l)\
    \ < 2:\n        return True\n    l.sort()\n    return l[0] == l[-1] and l[-1]\
    \ - l[-2] >= 0\n", "    if len(l) < 2:\n        return True\n    if l[-1] < l[0]:\n\
    \        return True\n    return False\n", "    if len(l) < 2:\n        return\
    \ True\n    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n", "    if len(l)\
    \ < 2:\n        return True\n    if l[0] > l[-1]:\n        return True\n    if\
    \ l[0] == l[-1]:\n        return False\n    mid = l[len(l)//2]\n    left, right\
    \ = 0, len(l)-1\n    while left < right:\n        if l[left] > mid:\n        \
    \    left += 1\n        elif l[right] > mid:\n            right -= 1\n       \
    \ else:\n            return True\n    return False\n", "    if len(l) < 2:\n \
    \       return True\n    i = 0\n    j = len(l) - 1\n    while i < j:\n       \
    \ if l[i] < l[j]:\n            return False\n        elif l[i] > l[j]:\n     \
    \       return True\n        i += 1\n        j -= 1\n    return True\n", "   \
    \ if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in\
    \ xrange(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    return all(l[i]\
    \ <= l[i+1] for i in xrange(len(l)-1))\n", "    if len(l) < 2:\n        return\
    \ True\n    else:\n        first = l[0]\n        last = l[-1]\n        if first\
    \ < last:\n            return False\n        else:\n            return True\n",
  "    if len(l) < 2:\n        return True\n    i = 0\n    j = i\n    while i < len(l)\
    \ - 1:\n        if l[i] > l[i + 1]:\n            return False\n        i += 1\n\
    \    while j < len(l):\n        if l[j] < l[j + 1]:\n            return False\n\
    \        j += 1\n    return True\n", "    if len(l) < 2:\n        return True\n\
    \    \n    prev = l[0]\n    for x in l[1:]:\n        if prev <= x:\n         \
    \   return False\n        prev = x\n    return True\n", "    if len(l) < 2:\n\
    \        return True\n    if l[-1] < l[0]:\n        return True\n    return False\n",
  "    if len(l) < 2:\n        return True\n    i = -1\n    j = len(l) - 2\n    while\
    \ i < j:\n        if l[i] > l[j]:\n            return False\n        i += 1\n\
    \        i -= 1\n        j += 1\n        j -= 1\n    return True\n", "    if len(l)\
    \ < 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n    \
    \    if prev < x:\n            return False\n        prev = x\n    return True\n",
  "    if len(l) < 2:\n        return True\n    else:\n        return all(l[i] <=\
    \ l[i+1] for i in xrange(len(l)-1))\n", "    if len(l) < 2:\n        return True\n\
    \    if l[-1] < l[0]:\n        return True\n    return False\n", "    if len(l)\
    \ < 2:\n        return True\n    i = j = 0\n    while i < len(l) - 1:\n      \
    \  if l[i] < l[i + 1]:\n            return False\n        i += 1\n    while j\
    \ < len(l) - 1:\n        if l[j] > l[j + 1]:\n            return False\n     \
    \   j += 1\n    return True\n", "    if len(l) < 2:\n        return True\n   \
    \ i = len(l) - 2\n    j = i\n    while j > 0 and l[j-1] > l[j]:\n        j -=\
    \ 1\n    return j == 0 or l[j-1] <= l[j]\n", "    if len(l) < 2:\n        return\
    \ True\n    if l[-1] < l[-2]:\n        return True\n    return False\n", "   \
    \ if len(l) < 2:\n        return True\n    else:\n        return all(l[i] <= l[i+1]\
    \ for i in range(len(l)-1))\n", "    if len(l) < 2:\n        return True\n   \
    \ i = len(l) - 2\n    j = i\n    while j > 0 and l[j] < l[j-1]:\n        j -=\
    \ 1\n    return l[i] > l[j]\n", "    l = list(l)\n    l.sort()\n    return l[0]\
    \ == l[-1]\n", "    if len(l) < 2:\n        return True\n    if l[-1] < l[-2]:\n\
    \        return True\n    return False\n", "    if len(l) < 2:\n        return\
    \ True\n    if l[-1] < l[0]:\n        return True\n    return False\n", "    if\
    \ len(l) < 2:\n        return True\n    i, j = 0, len(l) - 1\n    while i < j:\n\
    \        if l[i] < l[j]:\n            return False\n        elif l[i] > l[j]:\n\
    \            i += 1\n        else:\n            j -= 1\n    return True\n", " \
    \   if len(l) < 2:\n        return True\n    l.sort()\n    return l[0] < l[-1]\n",
  "    if len(l) < 2:\n        return True\n    if l[-1] < l[0]:\n        return True\n\
    \    return False\n", "    if len(l) < 2:\n        return True\n    prev = l[0]\n\
    \    for i in l[1:]:\n        if prev < i:\n            return False\n       \
    \ prev = i\n    return True\n", "    if len(l) < 2:\n        return True\n   \
    \ if l[0] < l[1]:\n        return True\n    if l[-1] < l[-2]:\n        return\
    \ True\n    return False\n", "    if len(l) < 2:\n        return True\n    else:\n\
    \        if l[0] > l[1]:\n            return True\n        else:\n           \
    \ return False\n", "    if len(l) < 2:\n        return True\n    \n    prev =\
    \ l[0]\n    for x in l[1:]:\n        if prev < x:\n            return False\n\
    \        prev = x\n    return True\n", "    if len(l) < 2:\n        return True\n\
    \    else:\n        return all(l[i] <= l[i+1] for i in range(len(l)-1))\n", " \
    \   if len(l) < 2:\n        return True\n    prev = l[0]\n    for i in l[1:]:\n\
    \        if prev < i:\n            return False\n        prev = i\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    i = len(l) - 2\n    j\
    \ = i\n    while j > 0 and l[j] < l[j-1]:\n        j -= 1\n    if j == i:\n  \
    \      return True\n    else:\n        return False\n", "    if len(l) < 2:\n\
    \        return True\n    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in\
    \ range(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    if l[-1]\
    \ < l[0]:\n        return True\n    return False\n", "    if len(l) < 2:\n   \
    \     return True\n    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    if l[0] < l[1]:\n        return True\n\
    \    if l[-1] < l[-2]:\n        return True\n    return False\n", "    if len(l)\
    \ < 2:\n        return True\n    else:\n        return all(l[i] <= l[i+1] for\
    \ i in xrange(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    \n\
    \    prev = l[0]\n    for i in l[1:]:\n        if prev > i:\n            return\
    \ False\n        prev = i\n    return True\n", "    if len(l) < 2:\n        return\
    \ True\n    head, *tail = l\n    if head < tail[0]:\n        return True\n   \
    \ if head > tail[-1]:\n        return True\n    return monotonic(tail)\n", " \
    \   if len(l) < 2:\n        return True\n    if l[-1] < l[-2]:\n        return\
    \ True\n    return False\n", "    if len(l) < 2:\n        return True\n    return\
    \ all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n", "    if len(l) < 2:\n    \
    \    return True\n    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for i in l[1:]:\n\
    \        if prev > i:\n            return False\n        prev = i\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    if l[-1] < l[0]:\n  \
    \      return True\n    return False\n", "    if len(l) < 2:\n        return True\n\
    \    \n    prev = l[0]\n    for i in l[1:]:\n        if prev < i:\n          \
    \  return False\n        prev = i\n    return True\n", "    if len(l) < 2:\n \
    \       return True\n    if l[-1] < l[0]:\n        return True\n    if l[-1] >\
    \ l[-2]:\n        return True\n    return False\n", "    if len(l) < 2:\n    \
    \    return True\n    \n    prev = l[0]\n    for i in l[1:]:\n        if prev\
    \ > i:\n            return False\n        prev = i\n    return True\n", "    if\
    \ len(l) < 2:\n        return True\n    if l[-1] < l[0]:\n        return True\n\
    \    return False\n", "    if len(l) < 2:\n        return True\n    l.sort()\n\
    \    return l[0] < l[-1]\n", "    if len(l) < 2:\n        return True\n    return\
    \ all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n", "    if len(l) < 2:\n    \
    \    return True\n    \n    prev = l[0]\n    for i in l[1:]:\n        if prev\
    \ > i:\n            return False\n        prev = i\n    return True\n", "    if\
    \ len(l) < 2:\n        return True\n    i = len(l) - 1\n    while i > 0:\n   \
    \     if l[i] <= l[i-1]:\n            return False\n        i -= 1\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n \
    \   for x in l[1:]:\n        if prev < x:\n            return False\n        prev\
    \ = x\n    return True\n", "    if len(l) < 2:\n        return True\n    return\
    \ all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n", "    if len(l) < 2:\n    \
    \    return True\n    head, *tail = l\n    if head <= tail[0]:\n        return\
    \ True\n    if head < tail[-1]:\n        return False\n    return monotonic(tail)\n",
  "    if len(l) < 2:\n        return True\n    head, *tail = l\n    if head < tail[0]:\n\
    \        return True\n    if head > tail[-1]:\n        return True\n    return\
    \ monotonic(tail)\n", "    if len(l) < 2:\n        return True\n    return all(l[i]\
    \ <= l[i+1] for i in range(len(l)-1))\n", "    if len(l) < 2:\n        return\
    \ True\n    \n    prev = l[0]\n    for x in l[1:]:\n        if prev < x:\n   \
    \         return False\n        prev = x\n    return True\n", "    if len(l) <\
    \ 2:\n        return True\n    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in\
    \ xrange(len(l)-1))\n", "    if len(l) < 2:\n        return True\n    i = len(l)\
    \ - 1\n    j = i - 1\n    while j >= 0:\n        if l[i] < l[j]:\n           \
    \ return False\n        i -= 1\n        j -= 1\n    return True\n", "    if len(l)\
    \ < 2:\n        return True\n    if l[-1] < l[0]:\n        return True\n    return\
    \ False\n", "    l = list(l)\n    l.sort()\n    return l[0] < l[-1]\n", "    if\
    \ len(l) < 2:\n        return True\n    diff1 = l[1] - l[0]\n    diff2 = l[2]\
    \ - l[1]\n    return diff1 < diff2\n", "    if len(l) < 2:\n        return True\n\
    \    diff1 = l[1] - l[0]\n    diff2 = l[2] - l[1]\n    return diff1 < diff2\n",
  "    if len(l) < 2:\n        return True\n    else:\n        prev = l[0]\n     \
    \   for e in l[1:]:\n            if e < prev:\n                return False\n\
    \            prev = e\n        return True\n", "    if len(l) < 2:\n        return\
    \ True\n    \n    prev = l[0]\n    for i in l[1:]:\n        if prev > i:\n   \
    \         return False\n        prev = i\n    return True\n", "    if len(l) <\
    \ 2:\n        return True\n    if l[-1] < l[-2]:\n        return True\n    return\
    \ False\n", "    if len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1]\
    \ for i in range(len(l)-1))\n", "    if len(l) < 2:\n        return True\n   \
    \ else:\n        first = l[0]\n        last = l[-1]\n        if first < last:\n\
    \            return True\n        else:\n            return False\n", "    if\
    \ len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    l.sort()\n    return l[0] < l[-1]\n",
  "    if len(l) < 2:\n        return True\n    diff = l[1] - l[0]\n    for x in l[2:]:\n\
    \        if x < l[0]:\n            return False\n        if x > l[-1]:\n     \
    \       return False\n        if x - l[0] >= diff:\n            return True\n\
    \    return False\n", "    if len(l) < 2:\n        return True\n    return all(l[i]\
    \ <= l[i+1] for i in xrange(len(l)-1))\n", "    if len(l) < 2:\n        return\
    \ True\n    i = 0\n    j = len(l) - 1\n    while i < j:\n        if l[i] < l[j]:\n\
    \            return False\n        elif l[i] > l[j]:\n            i += 1\n   \
    \     else:\n            j -= 1\n    return True\n", "    if len(l) < 2:\n   \
    \     return True\n    l.sort()\n    return l[0] < l[-1]\n", "    if len(l) <\
    \ 2:\n        return True\n    \n    prev = l[0]\n    for i in l[1:]:\n      \
    \  if prev < i:\n            return False\n        prev = i\n    return True\n",
  "    if len(l) < 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n\
    \        if prev > x:\n            return False\n        prev = x\n    return\
    \ True\n", "    if len(l) < 2:\n        return True\n    if l[0] < l[-1]:\n  \
    \      return True\n    return False\n", "    if len(l) < 2:\n        return True\n\
    \    prev = l[0]\n    for i in l[1:]:\n        if prev <= i:\n            return\
    \ False\n        prev = i\n    return True\n", "    if len(l) < 2:\n        return\
    \ True\n    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n", "    if len(l)\
    \ < 2:\n        return True\n    \n    prev = l[0]\n    for x in l[1:]:\n    \
    \    if prev < x:\n            return False\n        prev = x\n    return True\n",
  "    if len(l) < 2:\n        return True\n    else:\n        return all(l[i] <=\
    \ l[i+1] for i in xrange(len(l)-1))\n", "    if len(l) < 2:\n        return True\n\
    \    \n    prev = l[0]\n    for x in l[1:]:\n        if prev <= x:\n         \
    \   return False\n        prev = x\n    return True\n", "    if len(l) < 2:\n\
    \        return True\n    \n    prev = l[0]\n    for i in l[1:]:\n        if prev\
    \ > i:\n            return False\n        prev = i\n    return True\n", "    if\
    \ len(l) < 2:\n        return True\n    return all(l[i] <= l[i+1] for i in xrange(len(l)-1))\n",
  "    if len(l) < 2:\n        return True\n    if l[-1] < l[0]:\n        return True\n\
    \    return False\n", "    if len(l) < 2:\n        return True\n    else:\n  \
    \      return all(l[i] <= l[i+1] for i in range(len(l)-1))\n", "    if len(l)\
    \ < 2:\n        return True\n    i = 0\n    j = -1\n    while i < len(l) - 1:\n\
    \        if l[i] < l[i + 1]:\n            return False\n        i += 1\n    while\
    \ j < len(l) - 1:\n        if l[j] > l[j + 1]:\n            return False\n   \
    \     j += 1\n    return True\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

language: py
name: HumanEval_47_median
results:
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2) - 1]\n   \
    \ else:\n        mid = len(l) // 2\n        return (l[mid-1] + l[mid]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj_l99l9l.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpj_l99l9l.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpj_l99l9l.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[len(l) // 2]\n    else:\n\
    \        return (l[len(l) // 2 - 1] + l[len(l) // 2]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyyif5f18.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpyyif5f18.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpyyif5f18.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2) - 1]\n   \
    \ else:\n        return l[len(l)/2]\n\ndef check(candidate):\n    assert candidate([3,\
    \ 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n\
    \    assert candidate([5]) == 5\n    assert candidate([6, 5]) == 5.5\n    assert\
    \ candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n    check(median)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpntn3t81m.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpntn3t81m.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpntn3t81m.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpntn3t81m.py\"\
    , line 14, in median\n    return l[len(l)/2]\nTypeError: list indices must be\
    \ integers or slices, not float\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) / 2) -\
    \ 1]\n    else:\n        return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\n\ndef\
    \ check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvpoodihx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpvpoodihx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpvpoodihx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpvpoodihx.py\"\
    , line 14, in median\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\nTypeError:\
    \ list indices must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return l[((len(l) - 1) // 2)]\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprmkreep3.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmprmkreep3.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmprmkreep3.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz6ysntqz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpz6ysntqz.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpz6ysntqz.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmc29s5_u.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmc29s5_u.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpmc29s5_u.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[len(l) // 2]\n    else:\n\
    \        return (l[len(l) // 2 - 1] + l[len(l) // 2]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyyif5f18.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpyyif5f18.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpyyif5f18.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnz1gqzjq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpnz1gqzjq.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpnz1gqzjq.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmc29s5_u.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmc29s5_u.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpmc29s5_u.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmc29s5_u.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmc29s5_u.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpmc29s5_u.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[len(l) // 2]\n    else:\n\
    \        return (l[len(l) // 2] + l[len(l) // 2 - 1]) // 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw5teme3t.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpw5teme3t.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpw5teme3t.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[len(l) // 2]\n    else:\n\
    \        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpze15ewet.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpze15ewet.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpze15ewet.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnz1gqzjq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpnz1gqzjq.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpnz1gqzjq.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiwf28a4f.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpiwf28a4f.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpiwf28a4f.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) / 2) -\
    \ 1]\n    else:\n        return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\n\ndef\
    \ check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvpoodihx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpvpoodihx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpvpoodihx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpvpoodihx.py\"\
    , line 14, in median\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\nTypeError:\
    \ list indices must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz6ysntqz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpz6ysntqz.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpz6ysntqz.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2) - 1]\n   \
    \ else:\n        mid = len(l) // 2\n        return (l[mid-1] + l[mid]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj_l99l9l.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpj_l99l9l.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpj_l99l9l.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[len(l) // 2]\n    else:\n\
    \        return (l[len(l) // 2 - 1] + l[len(l) // 2]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyyif5f18.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpyyif5f18.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpyyif5f18.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmc29s5_u.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmc29s5_u.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpmc29s5_u.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz6ysntqz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpz6ysntqz.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpz6ysntqz.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2) - 1]\n   \
    \ else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpirmj4pvd.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpirmj4pvd.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpirmj4pvd.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)//2]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) // 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpev2wbnki.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpev2wbnki.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpev2wbnki.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz6ysntqz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpz6ysntqz.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpz6ysntqz.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmc29s5_u.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmc29s5_u.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpmc29s5_u.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) / 2) -\
    \ 1]\n    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1])\
    \ / 2\n\ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n \
    \   assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5])\
    \ == 5\n    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9,\
    \ 9, 2, 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptyzzdoy6.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmptyzzdoy6.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmptyzzdoy6.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz6ysntqz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpz6ysntqz.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpz6ysntqz.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[len(l) // 2]\n    else:\n\
    \        return (l[len(l) // 2] + l[len(l) // 2 - 1]) // 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw5teme3t.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpw5teme3t.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpw5teme3t.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) / 2) -\
    \ 1]\n    else:\n        return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\n\ndef\
    \ check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvpoodihx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpvpoodihx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpvpoodihx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpvpoodihx.py\"\
    , line 14, in median\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\nTypeError:\
    \ list indices must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2)-1]\n    else:\n\
    \        mid = len(l) // 2\n        return (l[mid-1] + l[mid]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu3j3dutm.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpu3j3dutm.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpu3j3dutm.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiwf28a4f.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpiwf28a4f.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpiwf28a4f.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2)-1]\n    else:\n\
    \        return (l[len(l)/2-1] + l[len(l)/2])/2\n\ndef check(candidate):\n   \
    \ assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000,\
    \ 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5])\
    \ == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2v272fi.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmph2v272fi.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmph2v272fi.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmph2v272fi.py\"\
    , line 14, in median\n    return (l[len(l)/2-1] + l[len(l)/2])/2\nTypeError: list\
    \ indices must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmc29s5_u.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmc29s5_u.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpmc29s5_u.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz6ysntqz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpz6ysntqz.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpz6ysntqz.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2) - 1]\n   \
    \ else:\n        return (l[len(l)/2] + l[len(l)/2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpegi3y9m3.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpegi3y9m3.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpegi3y9m3.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpegi3y9m3.py\"\
    , line 14, in median\n    return (l[len(l)/2] + l[len(l)/2 - 1]) / 2\nTypeError:\
    \ list indices must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[len(l) // 2]\n    else:\n\
    \        return (l[len(l) // 2 - 1] + l[len(l) // 2]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyyif5f18.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpyyif5f18.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpyyif5f18.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) / 2) -\
    \ 1]\n    else:\n        return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\n\ndef\
    \ check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvpoodihx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpvpoodihx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpvpoodihx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpvpoodihx.py\"\
    , line 14, in median\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\nTypeError:\
    \ list indices must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg816t2kb.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpg816t2kb.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpg816t2kb.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[len(l) // 2]\n    else:\n\
    \        return (l[len(l) // 2 - 1] + l[len(l) // 2]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyyif5f18.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpyyif5f18.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpyyif5f18.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) / 2) -\
    \ 1]\n    else:\n        return l[len(l) / 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp762gipmj.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp762gipmj.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp762gipmj.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmp762gipmj.py\"\
    , line 14, in median\n    return l[len(l) / 2]\nTypeError: list indices must be\
    \ integers or slices, not float\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnz1gqzjq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpnz1gqzjq.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpnz1gqzjq.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz6ysntqz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpz6ysntqz.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpz6ysntqz.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)//2]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) // 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpev2wbnki.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpev2wbnki.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpev2wbnki.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3syo3ima.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp3syo3ima.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp3syo3ima.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)//2]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) // 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpev2wbnki.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpev2wbnki.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpev2wbnki.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz6ysntqz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpz6ysntqz.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpz6ysntqz.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmc29s5_u.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmc29s5_u.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpmc29s5_u.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmc29s5_u.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmc29s5_u.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpmc29s5_u.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2) - 1]\n   \
    \ else:\n        mid = len(l) // 2\n        return (l[mid-1] + l[mid]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj_l99l9l.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpj_l99l9l.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpj_l99l9l.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnz1gqzjq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpnz1gqzjq.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpnz1gqzjq.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg816t2kb.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpg816t2kb.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpg816t2kb.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz6ysntqz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpz6ysntqz.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpz6ysntqz.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) / 2) -\
    \ 1]\n    else:\n        return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\n\ndef\
    \ check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvpoodihx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpvpoodihx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpvpoodihx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpvpoodihx.py\"\
    , line 14, in median\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\nTypeError:\
    \ list indices must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnz1gqzjq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpnz1gqzjq.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpnz1gqzjq.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2) - 1]\n   \
    \ else:\n        return l[len(l)/2]\n\ndef check(candidate):\n    assert candidate([3,\
    \ 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n\
    \    assert candidate([5]) == 5\n    assert candidate([6, 5]) == 5.5\n    assert\
    \ candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n    check(median)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpntn3t81m.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpntn3t81m.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpntn3t81m.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpntn3t81m.py\"\
    , line 14, in median\n    return l[len(l)/2]\nTypeError: list indices must be\
    \ integers or slices, not float\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmc29s5_u.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmc29s5_u.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpmc29s5_u.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmc29s5_u.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmc29s5_u.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpmc29s5_u.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmc29s5_u.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmc29s5_u.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpmc29s5_u.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)//2]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) // 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpev2wbnki.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpev2wbnki.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpev2wbnki.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2) - 1]\n   \
    \ else:\n        mid = len(l) // 2\n        return (l[mid-1] + l[mid]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj_l99l9l.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpj_l99l9l.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpj_l99l9l.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3syo3ima.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp3syo3ima.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp3syo3ima.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2)-1]\n    else:\n\
    \        mid = len(l) // 2\n        return (l[mid-1] + l[mid]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu3j3dutm.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpu3j3dutm.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpu3j3dutm.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmc29s5_u.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmc29s5_u.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpmc29s5_u.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)//2]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) // 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpev2wbnki.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpev2wbnki.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpev2wbnki.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2) - 1]\n   \
    \ else:\n        mid = len(l) // 2\n        return (l[mid-1] + l[mid]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj_l99l9l.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpj_l99l9l.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpj_l99l9l.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnz1gqzjq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpnz1gqzjq.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpnz1gqzjq.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1)//2)-1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid-1] + l[mid])/2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5t2bskov.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp5t2bskov.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp5t2bskov.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[len(l) // 2]\n    else:\n\
    \        return (l[len(l) // 2 - 1] + l[len(l) // 2]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyyif5f18.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpyyif5f18.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpyyif5f18.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmc29s5_u.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmc29s5_u.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpmc29s5_u.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)//2]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) // 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpev2wbnki.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpev2wbnki.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpev2wbnki.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2) - 1]\n   \
    \ else:\n        mid = len(l) // 2\n        return (l[mid-1] + l[mid]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj_l99l9l.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpj_l99l9l.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpj_l99l9l.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz6ysntqz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpz6ysntqz.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpz6ysntqz.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[len(l) // 2]\n    else:\n\
    \        return (l[len(l) // 2 - 1] + l[len(l) // 2]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyyif5f18.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpyyif5f18.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpyyif5f18.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) / 2) -\
    \ 1]\n    else:\n        return l[len(l) / 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp762gipmj.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp762gipmj.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp762gipmj.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmp762gipmj.py\"\
    , line 14, in median\n    return l[len(l) / 2]\nTypeError: list indices must be\
    \ integers or slices, not float\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz6ysntqz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpz6ysntqz.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpz6ysntqz.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) / 2) -\
    \ 1]\n    else:\n        return l[len(l) / 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp762gipmj.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp762gipmj.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmp762gipmj.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmp762gipmj.py\"\
    , line 14, in median\n    return l[len(l) / 2]\nTypeError: list indices must be\
    \ integers or slices, not float\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[len(l) // 2]\n    else:\n\
    \        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpze15ewet.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpze15ewet.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpze15ewet.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmc29s5_u.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmc29s5_u.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpmc29s5_u.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) // 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbbsjjhd5.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpbbsjjhd5.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpbbsjjhd5.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz6ysntqz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpz6ysntqz.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpz6ysntqz.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmc29s5_u.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmc29s5_u.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpmc29s5_u.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnz1gqzjq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpnz1gqzjq.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpnz1gqzjq.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmc29s5_u.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmc29s5_u.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpmc29s5_u.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmc29s5_u.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmc29s5_u.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpmc29s5_u.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l)/2) - 1]\n   \
    \ else:\n        mid = len(l) // 2\n        return (l[mid-1] + l[mid]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj_l99l9l.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpj_l99l9l.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpj_l99l9l.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return l[len(l) // 2]\n\ndef check(candidate):\n    assert\
    \ candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10,\
    \ 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) ==\
    \ 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnz1gqzjq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpnz1gqzjq.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpnz1gqzjq.py\", line 18, in\
    \ check\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) - 1) // 2) -\
    \ 1]\n    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\n\
    def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz6ysntqz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpz6ysntqz.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpz6ysntqz.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) + 1) / 2) -\
    \ 1]\n    else:\n        return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\n\ndef\
    \ check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10,\
    \ 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvpoodihx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpvpoodihx.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpvpoodihx.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\n  File \"/tmp/tmpvpoodihx.py\"\
    , line 14, in median\n    return (l[len(l) / 2] + l[len(l) / 2 - 1]) / 2\nTypeError:\
    \ list indices must be integers or slices, not float\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        mid = len(l) // 2\n        return (l[mid] + l[mid-1]) / 2\n\
    \ndef check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert\
    \ candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n\
    \    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2,\
    \ 7]) == 7\n\ndef test_check():\n    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmc29s5_u.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmc29s5_u.py\", line 25,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpmc29s5_u.py\", line 18, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[((len(l) // 2) - 1)]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2j_4_tr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr2j_4_tr.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpr2j_4_tr.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379
- exit_code: -1
  program: "from typing import List\n\ndef median(l: List[int]) -> float:\n    \"\"\
    \"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n\
    \    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n    l\
    \ = sorted(l)\n    if len(l) % 2 == 0:\n        return l[(len(l) // 2) - 1]\n\
    \    else:\n        return (l[len(l) // 2] + l[len(l) // 2 - 1]) / 2\n\ndef check(candidate):\n\
    \    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6,\
    \ 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6,\
    \ 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n\
    \    check(median)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisp17qlc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpisp17qlc.py\", line 24,\
    \ in test_check\n    check(median)\n  File \"/tmp/tmpisp17qlc.py\", line 17, in\
    \ check\n    assert candidate([3, 1, 2, 4, 5]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1659792379

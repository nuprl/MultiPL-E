name: HumanEval_21_rescale_to_unit
language: py
prompt: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) -> List[float]:\n\
  \    \"\"\" Given list of numbers (of at least two elements), apply a linear transform\
  \ to that list,\n    such that the smallest number will become 0 and the largest\
  \ will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25,\
  \ 0.5, 0.75, 1.0]\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n \
  \   assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0,\
  \ 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0,\
  \ 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
  \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
  \ntest_check()\n"
completions: ["    smallest_number = min(numbers)\n    largest_number = max(numbers)\n\
    \    rescaled_numbers = [((x - smallest_number) / (largest_number - smallest_number))\
    \ for x in numbers]\n    return rescaled_numbers\n", "    smallest = min(numbers)\n\
    \    largest = max(numbers)\n    rescaled_numbers = [((number - smallest) / (largest\
    \ - smallest)) for number in numbers]\n    return rescaled_numbers\n", "    smallest\
    \ = min(numbers)\n    largest = max(numbers)\n    rescaled_numbers = [((x - smallest)\
    \ / (largest - smallest)) for x in numbers]\n    return rescaled_numbers\n", " \
    \   smallest_number = min(numbers)\n    largest_number = max(numbers)\n    rescaled_numbers\
    \ = [((number - smallest_number) / (largest_number - smallest_number)) for number\
    \ in numbers]\n    return rescaled_numbers\n", "    minimum = min(numbers)\n \
    \   maximum = max(numbers)\n    rescaled = [((x - minimum) / (maximum - minimum))\
    \ for x in numbers]\n    return rescaled\n", "    smallest = min(numbers)\n  \
    \  largest = max(numbers)\n    rescaled = [((x - smallest) / (largest - smallest))\
    \ for x in numbers]\n    return rescaled\n", "    smallest_number = min(numbers)\n\
    \    largest_number = max(numbers)\n    rescaled_numbers = [((number - smallest_number)\
    \ / (largest_number - smallest_number)) for number in numbers]\n    return rescaled_numbers\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    rescaled_numbers\
    \ = [((x - smallest_number) / (largest_number - smallest_number)) for x in numbers]\n\
    \    return rescaled_numbers\n", "    minimum = min(numbers)\n    maximum = max(numbers)\n\
    \    rescaled_numbers = [((number - minimum) / (maximum - minimum)) for number\
    \ in numbers]\n    return rescaled_numbers\n", "    smallest_number = min(numbers)\n\
    \    largest_number = max(numbers)\n    rescaled_numbers = [float((x - smallest_number)\
    \ / (largest_number - smallest_number)) for x in numbers]\n    return rescaled_numbers\n",
  "    smallest = min(numbers)\n    largest = max(numbers)\n    rescaled = [((x -\
    \ smallest) / (largest - smallest)) for x in numbers]\n    return rescaled\n",
  "    smallest = min(numbers)\n    largest = max(numbers)\n    rescaled = [((number\
    \ - smallest) / (largest - smallest)) for number in numbers]\n    return rescaled\n",
  "    smallest = min(numbers)\n    largest = max(numbers)\n    rescaled = [((x -\
    \ smallest) / (largest - smallest)) for x in numbers]\n    return rescaled\n",
  "    smallest = min(numbers)\n    largest = max(numbers)\n    rescaled_numbers =\
    \ [((number - smallest) / (largest - smallest)) for number in numbers]\n    return\
    \ rescaled_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    rescaled_numbers = [((number - smallest_number) / (largest_number\
    \ - smallest_number)) for number in numbers]\n    return rescaled_numbers\n",
  "    smallest = min(numbers)\n    largest = max(numbers)\n    rescaled = [((x -\
    \ smallest) / (largest - smallest)) for x in numbers]\n    return rescaled\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    rescaled_numbers\
    \ = [((number - smallest_number) / (largest_number - smallest_number)) for number\
    \ in numbers]\n    return rescaled_numbers\n", "    smallest_number = min(numbers)\n\
    \    largest_number = max(numbers)\n    rescaled_numbers = [((number - smallest_number)\
    \ / (largest_number - smallest_number)) for number in numbers]\n    return rescaled_numbers\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    rescaled_numbers\
    \ = [((number - smallest_number) / (largest_number - smallest_number)) \\\n  \
    \                      for number in numbers]\n    return rescaled_numbers\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    rescaled_numbers\
    \ = [float(x) / largest_number for x in numbers]\n    return rescaled_numbers\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

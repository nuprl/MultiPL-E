language: py
name: HumanEval_14_all_prefixes
results:
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    for s in string:\n        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpwskpmxde.py\", line 20,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  [Previous line repeated 993 more times]\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 10, in all_prefixes\n    prefixes.append(s)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    for c in string:\n        prefixes.append(c)\n        prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpi6cx1x27.py\", line 20,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  [Previous line repeated 993 more times]\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 10, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    prefix_length = 0\n    for c in string:\n        prefix_length\
    \ += 1\n        if prefix_length == len(string):\n            prefixes.append(c)\n\
    \        else:\n            prefixes.append(c[:prefix_length])\n    return prefixes\n\
    \ndef check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj9a3lg06.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpj9a3lg06.py\", line 24,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpj9a3lg06.py\", line\
    \ 20, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    prefix_length = 0\n    for c in string:\n        if c ==\
    \ '_':\n            prefix_length += 1\n        else:\n            prefix_length\
    \ = 0\n            prefixes.append(string[:prefix_length])\n    return prefixes\n\
    \ndef check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsqqjdwi0.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpsqqjdwi0.py\", line 24,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpsqqjdwi0.py\", line\
    \ 20, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    for c in string:\n        prefixes.append(c)\n        prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpi6cx1x27.py\", line 20,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  [Previous line repeated 993 more times]\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 10, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    for c in string:\n        prefixes.append(c)\n        prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpi6cx1x27.py\", line 20,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  [Previous line repeated 993 more times]\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 10, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    for c in string:\n        prefixes.append(c)\n        prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpi6cx1x27.py\", line 20,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  [Previous line repeated 993 more times]\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 10, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    for s in string:\n        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpwskpmxde.py\", line 20,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  [Previous line repeated 993 more times]\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 10, in all_prefixes\n    prefixes.append(s)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    for s in string:\n        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpwskpmxde.py\", line 20,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  [Previous line repeated 993 more times]\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 10, in all_prefixes\n    prefixes.append(s)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    for s in string:\n        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpwskpmxde.py\", line 20,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  [Previous line repeated 993 more times]\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 10, in all_prefixes\n    prefixes.append(s)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    for s in string:\n        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpwskpmxde.py\", line 20,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  [Previous line repeated 993 more times]\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 10, in all_prefixes\n    prefixes.append(s)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    for c in string:\n        prefixes.append(c)\n        prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpi6cx1x27.py\", line 20,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  [Previous line repeated 993 more times]\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 10, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    for s in string:\n        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpwskpmxde.py\", line 20,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  [Previous line repeated 993 more times]\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 10, in all_prefixes\n    prefixes.append(s)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    for s in string:\n        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpwskpmxde.py\", line 20,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  [Previous line repeated 993 more times]\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 10, in all_prefixes\n    prefixes.append(s)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    for c in string:\n        prefixes.append(c)\n        prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpi6cx1x27.py\", line 20,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  [Previous line repeated 993 more times]\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 10, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    for c in string:\n        prefixes.append(c)\n        prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpi6cx1x27.py\", line 20,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  [Previous line repeated 993 more times]\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 10, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    for s in string:\n        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpwskpmxde.py\", line 20,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  [Previous line repeated 993 more times]\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 10, in all_prefixes\n    prefixes.append(s)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    for s in string:\n        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpwskpmxde.py\", line 20,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  [Previous line repeated 993 more times]\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 10, in all_prefixes\n    prefixes.append(s)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    for s in string:\n        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpwskpmxde.py\", line 20,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  File \"/tmp/tmpwskpmxde.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n\
    \  [Previous line repeated 993 more times]\n  File \"/tmp/tmpwskpmxde.py\", line\
    \ 10, in all_prefixes\n    prefixes.append(s)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n  \
    \  prefixes = []\n    for c in string:\n        prefixes.append(c)\n        prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpi6cx1x27.py\", line 20,\
    \ in test_check\n    check(all_prefixes)\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  File \"/tmp/tmpi6cx1x27.py\", line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n\
    \  [Previous line repeated 993 more times]\n  File \"/tmp/tmpi6cx1x27.py\", line\
    \ 10, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  stdout: ''

name: HumanEval_36_fizz_buzz
language: py
prompt: "def fizz_buzz(n: int) -> int:\n    \"\"\"Return the number of times the digit\
  \ 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n\
  \    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(50) == 0\n    assert candidate(78)\
  \ == 2\n    assert candidate(79) == 3\n    assert candidate(100) == 3\n    assert\
  \ candidate(200) == 6\n    assert candidate(4000) == 192\n    assert candidate(10000)\
  \ == 639\n    assert candidate(100000) == 8026\n\ndef test_check():\n    check(fizz_buzz)\n\
  \ntest_check()\n"
completions: ["    if n % 11 == 0 or n % 13 == 0:\n        return 0\n    else:\n \
    \       return fizz_buzz(n // 10) + fizz_buzz(n // 100) + fizz_buzz(n // 1000)\n\
    \n", "    if n % 11 == 0:\n        return fizz_buzz(n // 11) + 2\n    elif n %\
    \ 13 == 0:\n        return fizz_buzz(n // 13) + 1\n    else:\n        return 0\n\
    \n", "    if n % 11 == 0 or n % 13 == 0:\n        return 0\n    else:\n      \
    \  return fizz_buzz(n // 10) + fizz_buzz(n // 100) + fizz_buzz(n // 1000)\n\n",
  "    count = 0\n    while n > 0:\n        if n % 11 == 0:\n            count +=\
    \ 1\n        if n % 13 == 0:\n            count += 1\n        n //= 10\n    return\
    \ count\n\n", "    if n % 11 == 0 or n % 13 == 0:\n        return 0\n    else:\n\
    \        return fizz_buzz(n // 10) + fizz_buzz(n // 100) + fizz_buzz(n // 1000)\n\
    \n", "    count = 0\n    while n > 0:\n        if n % 11 == 0 or n % 13 == 0:\n\
    \            count += 1\n        n //= 10\n    return count\n\n", "    if n %\
    \ 11 == 0:\n        return fizz_buzz(n // 11)\n    elif n % 13 == 0:\n       \
    \ return fizz_buzz(n // 13)\n    elif n % n % 11 == 0:\n        return fizz_buzz(n\
    \ // n)\n    elif n % n % 13 == 0:\n        return fizz_buzz(n // n)\n    elif\
    \ n % n % n % 11 == 0:\n        return fizz_buzz(n // n)\n    elif n % n % n %\
    \ 13 == 0:\n        return fizz_buzz(n // n)\n    elif n % n % n % n % 11 == 0:\n\
    \        return fizz_buzz(n // n)\n    elif n % n % n % n % 13 == 0:\n       \
    \ return fizz_buzz(n // n)\n    elif n % n % n % n % n % 11 == 0:\n        return\
    \ fizz_buzz(n // n)\n    elif n % n % n % n % n % 13 == 0:\n        return fizz_buzz(n\
    \ // n)\n    else:\n        return 0\n\n", "    if n % 11 == 0 or n % 13 == 0:\n\
    \        return 0\n    else:\n        return fizz_buzz(n // 10) + fizz_buzz(n\
    \ // 100) + fizz_buzz(n // 1000)\n\n", "    if n % 11 == 0 or n % 13 == 0:\n \
    \       return 0\n    return 1\n\n", "    count = 0\n    while n > 0:\n      \
    \  if n % 11 == 0 or n % 13 == 0:\n            count += 1\n        n //= 10\n\
    \    return count\n\n", "    count = 0\n    while n > 0:\n        if n % 11 ==\
    \ 0 or n % 13 == 0:\n            count += 1\n        n //= 10\n    return count\n\
    \n", "    if n % 11 == 0 or n % 13 == 0:\n        return 0\n    return 1 if n\
    \ % 11 == 7 else 2\n\n", "    if n % 11 == 0 and n % 13 == 0:\n        return\
    \ 0\n    elif n % 11 == 0:\n        return 1\n    elif n % 13 == 0:\n        return\
    \ 2\n    else:\n        return 3\n\n", "    count = 0\n    while n > 0:\n    \
    \    if n % 11 == 0 or n % 13 == 0:\n            count += 1\n        n //= 10\n\
    \    return count\n\n", "    count = 0\n    while n > 0:\n        if n % 11 ==\
    \ 0 or n % 13 == 0:\n            count += 1\n        n //= 10\n    return count\n\
    \n", "    if n % 11 == 0 or n % 13 == 0:\n        return 0\n    return 1 if n\
    \ % 7 == 0 else 2\n\n", "    if n % 11 == 0:\n        return fizz_buzz(n // 11)\n\
    \    elif n % 13 == 0:\n        return fizz_buzz(n // 13)\n    elif n % n % 11\
    \ == 0:\n        return fizz_buzz(n // 11)\n    elif n % n % 13 == 0:\n      \
    \  return fizz_buzz(n // 13)\n    else:\n        return 0\n\n", "    if n % 11\
    \ == 0:\n        return fizz_buzz(n // 11)\n    elif n % 13 == 0:\n        return\
    \ fizz_buzz(n // 13)\n    elif n % n % 11 == 0:\n        return fizz_buzz(n //\
    \ 11)\n    elif n % n % 13 == 0:\n        return fizz_buzz(n // 13)\n    else:\n\
    \        return 1\n\n", "    if n % 11 == 0 or n % 13 == 0:\n        return 0\n\
    \    return 1\n\n", "    count = 0\n    while n >= 100:\n        if n % 11 ==\
    \ 0:\n            count += 1\n        if n % 13 == 0:\n            count += 1\n\
    \        n //= 10\n    return count\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_58_common
language: py
prompt: "from typing import List\n\ndef common(l1: List[int], l2: List[int]) -> List[int]:\n\
  \    \"\"\"Return sorted unique common elements for two lists.\n    >>> common([1,\
  \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    [1, 5, 653]\n    >>> common([5,\
  \ 3, 2, 8], [3, 2])\n    [2, 3]\n\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([1, 4, 3, 34, 653, 2, 5], [5,\
  \ 7, 1, 5, 9, 653, 121]) == [1, 5, 653]\n    assert candidate([5, 3, 2, 8], [3,\
  \ 2]) == [2, 3]\n    assert candidate([4, 3, 2, 8], [3, 2, 4]) == [2, 3, 4]\n  \
  \  assert candidate([4, 3, 2, 8], []) == []\n\ndef test_check():\n    check(common)\n\
  \ntest_check()\n"
completions: ["    return list(set(l1) & set(l2))\n", "    return sorted(set(l1) &\
    \ set(l2))\n", "    return list(set(l1) & set(l2))\n", "    common = []\n    for\
    \ x in l1:\n        if x in l2:\n            common.append(x)\n    return sorted(common)\n",
  "    return sorted(list(set(l1) & set(l2)))\n", "    common = []\n    for x in l1:\n\
    \        if x in l2:\n            common.append(x)\n    return sorted(common)\n",
  "    common = []\n    i = 0\n    j = 0\n    while i < len(l1) and j < len(l2):\n\
    \        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i +=\
    \ 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n   \
    \     else:\n            j += 1\n    return common\n\n", "    return list(set(l1)\
    \ & set(l2))\n", "    l1 = list(set(l1))\n    l2 = list(set(l2))\n    return sorted(l1\
    \ & l2)\n", "    return list(set(l1) & set(l2))\n", "    return sorted(set(l1)\
    \ & set(l2))\n", "    return list(set(l1) & set(l2))\n", "    common = []\n  \
    \  for x in l1:\n        if x in l2:\n            common.append(x)\n    return\
    \ common\n", "    return list(set(l1) & set(l2))\n", "    return list(set(l1)\
    \ & set(l2))\n", "    common = []\n    i = j = 0\n    while i < len(l1) and j\
    \ < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n \
    \           i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n        \
    \    i += 1\n        else:\n            j += 1\n    return common\n\n", "    return\
    \ list(set(l1) & set(l2))\n", "    return sorted(set(l1) & set(l2))\n", "    common\
    \ = []\n    i = j = 0\n    while i < len(l1) and j < len(l2):\n        if l1[i]\
    \ == l2[j]:\n            common.append(l1[i])\n            i += 1\n          \
    \  j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n  \
    \          j += 1\n    return common\n", "    return list(set(l1) & set(l2))\n",
  "    l1 = list(set(l1))\n    l2 = list(set(l2))\n    l1.sort()\n    l2.sort()\n\
    \    return list(set(l1) & set(l2))\n", "    return sorted(set(l1) & set(l2))\n",
  "    return sorted(set(l1) & set(l2))\n", "    return list(set(l1) & set(l2))\n",
  "    common = []\n    i = j = 0\n    while i < len(l1) and j < len(l2):\n      \
    \  if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n\
    \            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n       \
    \ else:\n            j += 1\n    return common\n", "    l1 = list(l1)\n    l2\
    \ = list(l2)\n    common = []\n    i = 0\n    j = 0\n    while i < len(l1) and\
    \ j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n\
    \            i += 1\n            j += 1\n        elif l1[i] > l2[j]:\n       \
    \     j += 1\n        else:\n            i += 1\n    return common\n", "    return\
    \ sorted(set(l1) & set(l2))\n", "    return list(set(l1) & set(l2))\n", "    return\
    \ sorted(set(l1) & set(l2))\n", "    common = []\n    i = j = 0\n    while i <\
    \ len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n\
    \            i += 1\n            j += 1\n        elif l1[i] > l2[j]:\n       \
    \     j += 1\n        else:\n            i += 1\n    return common\n\n", "   \
    \ common = []\n    i = j = 0\n    while i < len(l1) and j < len(l2):\n       \
    \ if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n \
    \           j += 1\n        elif l1[i] > l2[j]:\n            j += 1\n        else:\n\
    \            i += 1\n    return common\n", "    return list(set(l1) & set(l2))\n",
  "    return sorted(set(l1) & set(l2))\n", "    return list(set(l1) & set(l2))\n",
  "    common = []\n    i = j = 0\n    while i < len(l1) and j < len(l2):\n      \
    \  if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n\
    \            j += 1\n        elif l1[i] > l2[j]:\n            j += 1\n       \
    \ else:\n            i += 1\n    return common\n\n", "    return list(set(l1)\
    \ & set(l2))\n", "    return sorted(set(l1) & set(l2))\n", "    common = []\n\
    \    i = j = 0\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n\
    \            common.append(l1[i])\n            i += 1\n            j += 1\n  \
    \      elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j +=\
    \ 1\n    return common\n", "    common = []\n    i = j = 0\n    while i < len(l1)\
    \ and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n\
    \            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n       \
    \     i += 1\n        else:\n            j += 1\n    return common\n", "    common\
    \ = []\n    i = j = 0\n    while i < len(l1) and j < len(l2):\n        if l1[i]\
    \ == l2[j]:\n            common.append(l1[i])\n            i += 1\n          \
    \  j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n  \
    \          j += 1\n    return common\n", "    return list(set(l1) & set(l2))\n",
  "    common = []\n    i = 0\n    j = 0\n    while i < len(l1) and j < len(l2):\n\
    \        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i +=\
    \ 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n   \
    \     else:\n            j += 1\n    return common\n", "    return sorted(set(l1)\
    \ & set(l2))\n", "    return sorted(set(l1) & set(l2))\n", "    return sorted(list(set(l1)\
    \ & set(l2)))\n", "    return sorted(set(l1) & set(l2))\n", "    return list(set(l1)\
    \ & set(l2))\n", "    return list(set(l1) & set(l2))\n", "    return sorted(set(l1)\
    \ & set(l2))\n", "    return sorted(set(l1) & set(l2))\n", "    return list(set(l1)\
    \ & set(l2))\n", "    return list(set(l1) & set(l2))\n", "    common = []\n  \
    \  i = 0\n    j = 0\n    while i < len(l1) and j < len(l2):\n        if l1[i]\
    \ == l2[j]:\n            common.append(l1[i])\n            i += 1\n          \
    \  j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n  \
    \          j += 1\n    return common\n", "    common = []\n    i = j = 0\n   \
    \ while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n           \
    \ common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i]\
    \ < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return\
    \ common\n", "    return list(set(l1) & set(l2))\n", "    return sorted(list(set(l1)\
    \ & set(l2)))\n", "    common = []\n    i = 0\n    j = 0\n    while i < len(l1)\
    \ and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n\
    \            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n       \
    \     i += 1\n        else:\n            j += 1\n    return common\n", "    return\
    \ sorted(set(l1) & set(l2))\n", "    return list(set(l1) & set(l2))\n", "    return\
    \ sorted(set(l1) & set(l2))\n", "    return list(set(l1) & set(l2))\n", "    common\
    \ = []\n    for x in l1:\n        if x in l2:\n            common.append(x)\n\
    \    return sorted(common)\n", "    return sorted(set(l1) & set(l2))\n", "   \
    \ return list(set(l1) & set(l2))\n", "    return list(set(l1) & set(l2))\n", " \
    \   return sorted(set(l1) & set(l2))\n", "    return sorted(set(l1) & set(l2))\n",
  "    return list(set(l1) & set(l2))\n", "    return sorted(set(l1) & set(l2))\n",
  "    return sorted(set(l1) & set(l2))\n", "    return sorted(set(l1) & set(l2))\n",
  "    common = []\n    i = 0\n    j = 0\n    while i < len(l1) and j < len(l2):\n\
    \        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i +=\
    \ 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n   \
    \     else:\n            j += 1\n    return common\n", "    common = []\n    i\
    \ = 0\n    j = 0\n    while i < len(l1) and j < len(l2):\n        if l1[i] ==\
    \ l2[j]:\n            common.append(l1[i])\n            i += 1\n            j\
    \ += 1\n        elif l1[i] > l2[j]:\n            j += 1\n        else:\n     \
    \       i += 1\n    return common\n\n", "    common = []\n    for x in l1:\n \
    \       if x in l2:\n            common.append(x)\n    return common\n", "   \
    \ return list(set(l1) & set(l2))\n", "    return sorted(set(l1) & set(l2))\n",
  "    return sorted(set(l1) & set(l2))\n", "    return sorted(set(l1) & set(l2))\n",
  "    l1 = list(set(l1))\n    l2 = list(set(l2))\n    return sorted(list(set(l1)\
    \ & set(l2)))\n", "    common = []\n    i = 0\n    j = 0\n    while i < len(l1)\
    \ and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n\
    \            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n       \
    \     i += 1\n        else:\n            j += 1\n    return common\n", "    return\
    \ list(set(l1) & set(l2))\n", "    return sorted(set(l1) & set(l2))\n", "    return\
    \ sorted(set(l1) & set(l2))\n", "    common = []\n    for x in l1:\n        if\
    \ x in l2:\n            common.append(x)\n    return common\n", "    return sorted(set(l1)\
    \ & set(l2))\n", "    return list(set(l1) & set(l2))\n", "    return sorted(set(l1)\
    \ & set(l2))\n", "    return sorted(set(l1) & set(l2))\n", "    common = []\n\
    \    i = j = 0\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n\
    \            common.append(l1[i])\n            i += 1\n            j += 1\n  \
    \      elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j +=\
    \ 1\n    return common\n", "    return list(set(l1) & set(l2))\n", "    l1 = list(set(l1))\n\
    \    l2 = list(set(l2))\n    l1.sort()\n    l2.sort()\n    return l1[: len(l2)\
    \ if l1 == l2 else min(len(l1), len(l2))]\n", "    return list(set(l1) & set(l2))\n",
  "    return sorted(list(set(l1) & set(l2)))\n", "    return sorted(set(l1) & set(l2))\n",
  "    return sorted(set(l1) & set(l2))\n", "    common = []\n    i = 0\n    j = 0\n\
    \    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n        \
    \    common.append(l1[i])\n            i += 1\n            j += 1\n        elif\
    \ l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return\
    \ common\n", "    return sorted(list(set(l1) & set(l2)))\n", "    common = []\n\
    \    i = 0\n    j = 0\n    while i < len(l1) and j < len(l2):\n        if l1[i]\
    \ == l2[j]:\n            common.append(l1[i])\n            i += 1\n          \
    \  j += 1\n        elif l1[i] > l2[j]:\n            j += 1\n        else:\n  \
    \          i += 1\n    return common\n", "    return list(set(l1) & set(l2))\n",
  "    return sorted(set(l1) & set(l2))\n", "    return sorted(set(l1) & set(l2))\n",
  "    common = []\n    i = j = 0\n    while i < len(l1) and j < len(l2):\n      \
    \  if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n\
    \            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n       \
    \ else:\n            j += 1\n    return common\n", "    return list(set(l1) &\
    \ set(l2))\n", "    common = []\n    i = j = 0\n    while i < len(l1) and j <\
    \ len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n   \
    \         i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n          \
    \  i += 1\n        else:\n            j += 1\n    return common\n", "    return\
    \ sorted(set(l1) & set(l2))\n", "    return list(set(l1) & set(l2))\n", "    l1\
    \ = list(set(l1))\n    l2 = list(set(l2))\n    common = []\n    i = 0\n    while\
    \ i < len(l1) and i < len(l2):\n        if l1[i] == l2[i]:\n            common.append(l1[i])\n\
    \            i += 1\n        else:\n            break\n    return common\n", " \
    \   return list(set(l1) & set(l2))\n", "    return sorted(set(l1) & set(l2))\n",
  "    common = []\n    i = j = 0\n    while i < len(l1) and j < len(l2):\n      \
    \  if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n\
    \            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n       \
    \ else:\n            j += 1\n    return common\n\n", "    return sorted(list(set(l1)\
    \ & set(l2)))\n", "    return list(set(l1) & set(l2))\n", "    return sorted(set(l1)\
    \ & set(l2))\n", "    return list(set(l1) & set(l2))\n", "    common = []\n  \
    \  i = 0\n    j = 0\n    while i < len(l1) and j < len(l2):\n        if l1[i]\
    \ == l2[j]:\n            common.append(l1[i])\n            i += 1\n          \
    \  j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n  \
    \          j += 1\n    return common\n", "    return list(set(l1) & set(l2))\n",
  "    return list(set(l1) & set(l2))\n", "    return sorted(set(l1) & set(l2))\n",
  "    return list(set(l1) & set(l2))\n", "    common = []\n    i = 0\n    j = 0\n\
    \    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n        \
    \    common.append(l1[i])\n            i += 1\n            j += 1\n        elif\
    \ l1[i] > l2[j]:\n            j += 1\n        else:\n            i += 1\n    return\
    \ common\n", "    common = []\n    for x in l1:\n        if x in l2:\n       \
    \     common.append(x)\n    return sorted(common)\n", "    return sorted(set(l1)\
    \ & set(l2))\n", "    return list(set(l1) & set(l2))\n", "    return sorted(set(l1)\
    \ & set(l2))\n", "    common = []\n    i = j = 0\n    while i < len(l1) and j\
    \ < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n \
    \           i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n        \
    \    i += 1\n        else:\n            j += 1\n    return common\n\n", "    return\
    \ list(set(l1) & set(l2))\n", "    return sorted(set(l1) & set(l2))\n", "    return\
    \ list(set(l1) & set(l2))\n", "    return sorted(set(l1) & set(l2))\n", "    common\
    \ = []\n    i = j = 0\n    while i < len(l1) and j < len(l2):\n        if l1[i]\
    \ == l2[j]:\n            common.append(l1[i])\n            i += 1\n          \
    \  j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n  \
    \          j += 1\n    return common\n", "    l1 = list(set(l1))\n    l2 = list(set(l2))\n\
    \    common = []\n    i = 0\n    j = 0\n    while i < len(l1) and j < len(l2):\n\
    \        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i +=\
    \ 1\n            j += 1\n        elif l1[i] > l2[j]:\n            j += 1\n   \
    \     else:\n            i += 1\n    return common\n", "    return list(set(l1)\
    \ & set(l2))\n", "    common = []\n    i = j = 0\n    while i < len(l1) and j\
    \ < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n \
    \           i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n        \
    \    i += 1\n        else:\n            j += 1\n    return common\n", "    l1\
    \ = list(set(l1))\n    l2 = list(set(l2))\n    common = []\n    i = 0\n    while\
    \ i < len(l1) and i < len(l2):\n        if l1[i] == l2[i]:\n            common.append(l1[i])\n\
    \            i += 1\n        else:\n            break\n    return common\n", " \
    \   return sorted(set(l1) & set(l2))\n", "    return sorted(set(l1) & set(l2))\n",
  "    common = []\n    for x in l1:\n        if x in l2:\n            common.append(x)\n\
    \    return sorted(common)\n", "    common = []\n    i = j = 0\n    while i <\
    \ len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n\
    \            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n       \
    \     i += 1\n        else:\n            j += 1\n    return common\n", "    return\
    \ sorted(set(l1) & set(l2))\n", "    return sorted(set(l1) & set(l2))\n", "  \
    \  return list(set(l1) & set(l2))\n", "    common = []\n    i = 0\n    j = 0\n\
    \    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n        \
    \    common.append(l1[i])\n            i += 1\n            j += 1\n        elif\
    \ l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return\
    \ common\n", "    common = []\n    i = j = 0\n    while i < len(l1) and j < len(l2):\n\
    \        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i +=\
    \ 1\n            j += 1\n        elif l1[i] > l2[j]:\n            j += 1\n   \
    \     else:\n            i += 1\n    return common\n", "    return sorted(set(l1)\
    \ & set(l2))\n", "    return list(set(l1) & set(l2))\n", "    return sorted(set(l1)\
    \ & set(l2))\n", "    l1 = list(set(l1))\n    l2 = list(set(l2))\n    common =\
    \ []\n    i = j = 0\n    while i < len(l1) and j < len(l2):\n        if l1[i]\
    \ == l2[j]:\n            common.append(l1[i])\n            i += 1\n          \
    \  j += 1\n        elif l1[i] > l2[j]:\n            j += 1\n        else:\n  \
    \          i += 1\n    return common\n", "    return sorted(set(l1) & set(l2))\n",
  "    common = []\n    i = 0\n    j = 0\n    while i < len(l1) and j < len(l2):\n\
    \        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i +=\
    \ 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n   \
    \     else:\n            j += 1\n    return common\n", "    common = []\n    i\
    \ = j = 0\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n\
    \            common.append(l1[i])\n            i += 1\n            j += 1\n  \
    \      elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j +=\
    \ 1\n    return common\n", "    return list(set(l1) & set(l2))\n", "    common\
    \ = []\n    i = 0\n    j = 0\n    while i < len(l1) and j < len(l2):\n       \
    \ if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n \
    \           j += 1\n        elif l1[i] > l2[j]:\n            j += 1\n        else:\n\
    \            i += 1\n    return common\n", "    return list(set(l1) & set(l2))\n",
  "    common = []\n    i = j = 0\n    while i < len(l1) and j < len(l2):\n      \
    \  if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n\
    \            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n       \
    \ else:\n            j += 1\n    return common\n", "    return sorted(set(l1)\
    \ & set(l2))\n", "    common = []\n    i = j = 0\n    while i < len(l1) and j\
    \ < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n \
    \           i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n        \
    \    i += 1\n        else:\n            j += 1\n    return common\n", "    return\
    \ sorted(set(l1) & set(l2))\n", "    return sorted(set(l1) & set(l2))\n", "  \
    \  return sorted(set(l1) & set(l2))\n", "    return sorted(set(l1) & set(l2))\n",
  "    return list(set(l1) & set(l2))\n", "    return list(set(l1) & set(l2))\n",
  "    return sorted(set(l1) & set(l2))\n", "    common = []\n    i = 0\n    j = 0\n\
    \    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n        \
    \    common.append(l1[i])\n            i += 1\n            j += 1\n        elif\
    \ l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return\
    \ common\n\n", "    l1 = list(set(l1))\n    l2 = list(set(l2))\n    return sorted(list(set(l1)\
    \ & set(l2)))\n", "    return sorted(set(l1) & set(l2))\n", "    common = []\n\
    \    i = 0\n    j = 0\n    while i < len(l1) and j < len(l2):\n        if l1[i]\
    \ == l2[j]:\n            common.append(l1[i])\n            i += 1\n          \
    \  j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n  \
    \          j += 1\n    return common\n", "    common = []\n    i = 0\n    j =\
    \ 0\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n    \
    \        common.append(l1[i])\n            i += 1\n            j += 1\n      \
    \  elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n\
    \    return common\n", "    return list(set(l1) & set(l2))\n", "    return list(set(l1)\
    \ & set(l2))\n", "    return sorted(set(l1) & set(l2))\n", "    return sorted(set(l1)\
    \ & set(l2))\n", "    return list(set(l1) & set(l2))\n", "    return sorted(list(set(l1)\
    \ & set(l2)))\n", "    common = []\n    i = 0\n    j = 0\n    while i < len(l1)\
    \ and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n\
    \            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n       \
    \     i += 1\n        else:\n            j += 1\n    return common\n", "    return\
    \ sorted(set(l1) & set(l2))\n", "    return sorted(set(l1) & set(l2))\n", "  \
    \  common = []\n    i = j = 0\n    while i < len(l1) and j < len(l2):\n      \
    \  if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n\
    \            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n       \
    \ else:\n            j += 1\n    return common\n", "    return sorted(set(l1)\
    \ & set(l2))\n", "    common = []\n    i = 0\n    j = 0\n    while i < len(l1)\
    \ and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n\
    \            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n       \
    \     i += 1\n        else:\n            j += 1\n    return common\n", "    return\
    \ list(set(l1) & set(l2))\n", "    return sorted(set(l1) & set(l2))\n", "    return\
    \ list(set(l1) & set(l2))\n", "    common = []\n    i = j = 0\n    while i < len(l1)\
    \ and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n\
    \            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n       \
    \     i += 1\n        else:\n            j += 1\n    return common\n", "    return\
    \ sorted(list(set(l1) & set(l2)))\n", "    return sorted(set(l1) & set(l2))\n",
  "    return sorted(set(l1) & set(l2))\n", "    common = []\n    i = j = 0\n    while\
    \ i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n\
    \            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n       \
    \     i += 1\n        else:\n            j += 1\n    return common\n", "    return\
    \ list(set(l1) & set(l2))\n", "    return list(set(l1) & set(l2))\n", "    common\
    \ = []\n    i = j = 0\n    while i < len(l1) and j < len(l2):\n        if l1[i]\
    \ == l2[j]:\n            common.append(l1[i])\n            i += 1\n          \
    \  j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n  \
    \          j += 1\n    return common\n\n", "    return list(set(l1) & set(l2))\n",
  "    l1 = list(set(l1))\n    l2 = list(set(l2))\n    return sorted(l1 for l1 in\
    \ l1 if l1 in l2)\n", "    common = []\n    i = j = 0\n    while i < len(l1) and\
    \ j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n\
    \            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n       \
    \     i += 1\n        else:\n            j += 1\n    return common\n", "    return\
    \ sorted(set(l1) & set(l2))\n", "    common = []\n    i = j = 0\n    while i <\
    \ len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n\
    \            i += 1\n            j += 1\n        elif l1[i] > l2[j]:\n       \
    \     j += 1\n        else:\n            i += 1\n    return common\n", "    return\
    \ sorted(set(l1) & set(l2))\n", "    common = []\n    i = j = 0\n    while i <\
    \ len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n\
    \            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n       \
    \     i += 1\n        else:\n            j += 1\n    return common\n", "    return\
    \ list(set(l1) & set(l2))\n", "    common = []\n    i = j = 0\n    while i < len(l1)\
    \ and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n\
    \            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n       \
    \     i += 1\n        else:\n            j += 1\n    return common\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_81_numerical_letter_grade
language: py
prompt: "from typing import List\n\ndef numerical_letter_grade(grades: List[float])\
  \ -> List[str]:\n    \"\"\"It is the last week of the semester and the teacher has\
  \ to give the grades\n    to students. The teacher has been making her own algorithm\
  \ for grading.\n    The only problem is, she has lost the code she used for grading.\n\
  \    She has given you a list of GPAs for some students and you have to write \n\
  \    a function that can output a list of letter grades using the following table:\n\
  \             GPA       |    Letter grade\n              4.0                A+\n\
  \            > 3.7                A \n            > 3.3                A- \n   \
  \         > 3.0                B+\n            > 2.7                B \n       \
  \     > 2.3                B-\n            > 2.0                C+\n           \
  \ > 1.7                C\n            > 1.3                C-\n            > 1.0\
  \                D+ \n            > 0.7                D \n            > 0.0   \
  \             D-\n              0.0                E\n    \n\n    Example:\n   \
  \ >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    ['A+', 'B', 'C-', 'C', 'A-']\n\
  \    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([4.0, 3, 1.7, 2, 3.5]) == ['A+',\
  \ 'B', 'C-', 'C', 'A-']\n    assert candidate([1.2]) == ['D+']\n    assert candidate([0.5])\
  \ == ['D-']\n    assert candidate([0.0]) == ['E']\n    assert candidate([1.0, 0.3,\
  \ 1.5, 2.8, 3.3]) == ['D', 'D-', 'C-', 'B', 'B+']\n    assert candidate([0.0, 0.7])\
  \ == ['E', 'D-']\n\ndef test_check():\n    check(numerical_letter_grade)\n\ntest_check()\n"
completions: ["    \n    letter_grades = []\n    \n    for grade in grades:\n    \
    \    if grade >= 4.0:\n            letter_grades.append('A+')\n        elif grade\
    \ > 3.7:\n            letter_grades.append('A')\n        elif grade > 3.3:\n \
    \           letter_grades.append('A-')\n        elif grade > 3.0:\n          \
    \  letter_grades.append('B+')\n        elif grade > 2.7:\n            letter_grades.append('B')\n\
    \        elif grade > 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade > 2.0:\n            letter_grades.append('C+')\n        elif grade > 1.7:\n\
    \            letter_grades.append('C')\n        elif grade > 1.3:\n          \
    \  letter_grades.append('C-')\n        elif grade > 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade > 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade > 0.0:\n            letter_grades.append('D-')\n        else:\n      \
    \      letter_grades.append('E')\n    \n    return letter_grades\n", "    \n \
    \   grades_sorted = sorted(grades)\n    \n    grades_sorted_length = len(grades_sorted)\n\
    \    \n    grades_sorted_index = 0\n    \n    grades_sorted_index_length = len(grades_sorted_index)\n\
    \    \n    grades_sorted_index_index_length = len(grades_sorted_index_index)\n\
    \    \n    grades_sorted_index_index_index_length = len(grades_sorted_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_length = len(grades_sorted_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index)\n    \n\
    \    grades_sorted_index_index_index_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_",
  "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n            \n    return letter_grades\n",
  "    \n    grades_sorted = sorted(grades)\n    \n    grades_sorted_length = len(grades_sorted)\n\
    \    \n    grades_sorted_index = 0\n    \n    grades_sorted_index_length = len(grades_sorted_index)\n\
    \    \n    grades_sorted_index_index = 0\n    \n    grades_sorted_index_index_length\
    \ = len(grades_sorted_index_index)\n    \n    grades_sorted_index_index_index\
    \ = 0\n    \n    grades_sorted_index_index_index_length = len(grades_sorted_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index = 0\n    \n    grades_sorted_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index)\n    \n    grades_sorted_index_index_index_index_index\
    \ = 0\n    \n    grades_sorted_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index = 0\n    \n    grades_sorted_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index)\n    \n    grades_sorted_index_index_index_index_index_index_index\
    \ = 0\n    \n    grades_sorted_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index)\n    \n    grades_sorted_index_index_index_index_index_index_index_index\
    \ = 0\n    \n    grades_sorted_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index)\n    \n\
    \    grades_sorted_index_index_index_index_index_index_index_index_index = 0\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index\
    \ = 0\n    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index\
    \ = 0\n    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index\
    \ = 0\n    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index\
    \ = 0", "    \n    grades.sort()\n    \n    letter_grades = []\n    \n    \n \
    \   for grade in grades:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    letter_grades = []\n    \n    for grade in grades:\n        if grade\
    \ > 3.0:\n            letter_grades.append('A+')\n        elif grade > 2.7:\n\
    \            letter_grades.append('B')\n        elif grade > 2.3:\n          \
    \  letter_grades.append('B-')\n        elif grade > 1.7:\n            letter_grades.append('C')\n\
    \        elif grade > 1.3:\n            letter_grades.append('C-')\n        elif\
    \ grade > 1.0:\n            letter_grades.append('D+')\n        elif grade > 0.7:\n\
    \            letter_grades.append('D')\n        elif grade > 0.0:\n          \
    \  letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \            \n    return letter_grades\n", "    \n    grades.sort()\n    \n \
    \   letter_grades = []\n    \n    for grade in grades:\n        if grade >= 3.0:\n\
    \            letter_grades.append('A+')\n        elif grade >= 2.7:\n        \
    \    letter_grades.append('B')\n        elif grade >= 2.3:\n            letter_grades.append('B-')\n\
    \        elif grade >= 1.7:\n            letter_grades.append('C')\n        elif\
    \ grade >= 1.3:\n            letter_grades.append('C-')\n        elif grade >=\
    \ 1.0:\n            letter_grades.append('D+')\n        elif grade >= 0.7:\n \
    \           letter_grades.append('D')\n        elif grade >= 0.0:\n          \
    \  letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n</cell>\n<cell>", "    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.0:\n            letter_grades.append('A')\n        elif grade >= 1.7:\n\
    \            letter_grades.append('A-')\n        elif grade >= 1.3:\n        \
    \    letter_grades.append('B+')\n        elif grade >= 1.0:\n            letter_grades.append('B')\n\
    \        elif grade >= 0.7:\n            letter_grades.append('B-')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('C+')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('C')\n        elif grade >= 0.0:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 0.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.0:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('E')\n        else:\n      \
    \      letter_grades.append('F')\n            \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    letter_grades = []\n    \n    for grade in grades:\n     \
    \   if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.7:\n            letter_grades.append('B')\n        elif grade >= 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade >= 1.7:\n        \
    \    letter_grades.append('C')\n        elif grade >= 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade >= 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade >= 0.7:\n            letter_grades.append('D')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades.sort()\n    \n    letter_grades\
    \ = []\n    \n    \n    for grade in grades:\n        if grade < 3.0:\n      \
    \      letter_grades.append('F')\n        elif grade < 4.0:\n            letter_grades.append('D-')\
    \ \n        elif grade < 5.0:\n            letter_grades.append('B-') \n     \
    \   elif grade < 6.0:\n            letter_grades.append('B-') \n        elif grade\
    \ < 7.0:\n            letter_grades.append('B-') \n        elif grade < 8.0:\n\
    \            letter_grades.append('B-') \n        elif grade < 9.0:\n        \
    \    letter_grades.append('B-') \n        elif grade < 10.0:\n            letter_grades.append('B-')\
    \ \n        elif grade < 11.0:\n            letter_grades.append('B-') \n    \
    \    elif grade < 12.0:\n            letter_grades.append('B-') \n        elif\
    \ grade < 13.0:\n            letter_grades.append('B-') \n        elif grade <\
    \ 14.0:\n            letter_grades.append('B-') \n        elif grade < 15.0:\n\
    \            letter_grades.append('B-') \n        elif grade < 16.0:\n       \
    \     letter_grades.append('B-') \n        elif grade < 17.0:\n            letter_grades.append('B-')\
    \ \n        elif grade < 18.0:\n            letter_grades.append('B-') \n    \
    \    elif grade < 19.0:\n            letter_grades.append('B-') \n        elif\
    \ grade < 20.0:\n            letter_grades.append('B-') \n        elif grade <\
    \ 21.0:\n            letter_grades.append('B-') \n        elif grade < 22.0:\n\
    \            letter_grades.append('B-') \n        elif grade < 23.0:\n       \
    \     letter_grades.append('B-') \n        elif grade < 24.0:\n            letter_grades.append('B-')\
    \ \n        elif grade < 25.0:\n            letter_grades.append('B-') \n    \
    \    elif grade < 26.0:\n            letter_grades.append('B-') \n        elif\
    \ grade < 27.0:\n            letter_grades.append('B-') \n        elif grade <\
    \ 28.0:\n            letter_grades.append('B-') \n        elif grade < 29.0:\n\
    \            letter_grades.append('B-') \n        elif grade < 30.0:\n       \
    \     letter_grades.append('B-') \n        elif grade < 31.0:\n            letter_grades.append('B-')\
    \ \n        elif grade < 32.0:\n            letter_grades.append('B-') \n    \
    \    elif grade < 33.0:\n            letter_grades.append('B-') \n        elif\
    \ grade < 34.0:\n            letter_grades.append('B-') \n        elif grade <\
    \ 35.0:\n            letter_grades.append('B-') \n        elif grade < 36.0:\n\
    \            letter_grades.append('B-') \n        elif grade < 37.0:\n       \
    \     letter_grade", "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades\
    \ = []\n    \n    for grade in grades_sorted:\n        if grade >= 3.0:\n    \
    \        letter_grades.append('A+')\n        elif grade >= 2.7:\n            letter_grades.append('B')\n\
    \        elif grade >= 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade >= 1.7:\n            letter_grades.append('C')\n        elif grade >=\
    \ 1.3:\n            letter_grades.append('C-')\n        elif grade >= 1.0:\n \
    \           letter_grades.append('D+')\n        elif grade >= 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade >= 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n",
  "    \n    grades.sort()\n    \n    letter_grades = []\n    \n    \n    for grade\
    \ in grades:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    grades.sort()\n\
    \    \n    grades_length = len(grades)\n    \n    if grades_length == 0:\n   \
    \     return []\n    \n    if grades_length == 1:\n        return ['A+']\n   \
    \ \n    if grades_length == 2:\n        return ['A', 'B+']\n    \n    if grades_length\
    \ == 3:\n        return ['A', 'B', 'C+']\n    \n    if grades_length == 4:\n \
    \       return ['A', 'B', 'C', 'D+']\n    \n    if grades_length == 5:\n     \
    \   return ['A', 'B', 'C', 'D', 'E']\n    \n    if grades_length == 6:\n     \
    \   return ['A', 'B', 'C', 'D', 'E', 'F']\n    \n    if grades_length == 7:\n\
    \        return ['A', 'B', 'C', 'D', 'E', 'F', 'G']\n    \n    if grades_length\
    \ == 8:\n        return ['A', 'B', 'C', 'D', 'E', 'F', 'G+']\n    \n    if grades_length\
    \ == 9:\n        return ['A', 'B', 'C', 'D', 'E', 'F', 'G+', 'A-']\n    \n   \
    \ if grades_length == 10:\n        return ['A', 'B', 'C', 'D', 'E', 'F', 'G+',\
    \ 'A-', 'B+']\n    \n    if grades_length == 11:\n        return ['A', 'B', 'C',\
    \ 'D', 'E', 'F', 'G+', 'A-', 'B+', 'C+']\n    \n    if grades_length == 12:\n\
    \        return ['A', 'B', 'C', 'D', 'E', 'F', 'G+', 'A-', 'B+', 'C+', 'D+']\n\
    \    \n    if grades_length == 13:\n        return ['A', 'B', 'C', 'D', 'E', 'F',\
    \ 'G+', 'A-', 'B+', 'C+', 'D+', 'E']\n    \n    if grades_length == 14:\n    \
    \    return ['A', 'B', 'C', 'D', 'E', 'F', 'G+', 'A-', 'B+', 'C+', 'D+', 'E',\
    \ 'F']\n    \n    if grades_length == 15:\n        return ['A', 'B', 'C', 'D',\
    \ 'E', 'F', 'G+', 'A-', 'B+', 'C+', 'D+', 'E', 'F', 'G']\n    \n    if grades_length\
    \ == 16:\n        return ['A', 'B', 'C', 'D', 'E', 'F', 'G+', 'A-', 'B+', 'C+',\
    \ 'D+', 'E', 'F', 'G+']\n    \n    if grades_length == 17:\n        return ['A',\
    \ 'B', 'C', 'D', 'E', 'F', 'G+', 'A-', 'B+', 'C+', 'D+', 'E', 'F', 'G+', 'A-']\n\
    \    \n    if grades_length == 18:\n        return ['A', 'B', 'C', 'D', 'E', 'F',\
    \ 'G+', 'A-', 'B+', 'C+', 'D+', 'E', 'F', 'G+', 'A-', 'B+']\n    \n    if grades_length\
    \ == 19:\n        return ['A', 'B', 'C', 'D', 'E', 'F', 'G+', 'A-', 'B+', 'C+',\
    \ 'D+', 'E', 'F', 'G+', 'A-', 'B+', 'C+']\n    \n    if grades_length == 20:\n\
    \        return ['A', 'B', 'C', 'D', 'E', 'F', 'G+', 'A-', 'B+', 'C", "    \n\
    \    grades.sort()\n    grades_len = len(grades)\n    \n    if grades_len < 2:\n\
    \        return ['E']\n    \n    if grades_len == 2:\n        if grades[0] > grades[1]:\n\
    \            return ['A+']\n        elif grades[0] == grades[1]:\n           \
    \ return ['A']\n        else:\n            return ['B']\n    \n    if grades_len\
    \ == 3:\n        if grades[0] > grades[1] and grades[0] > grades[2]:\n       \
    \     return ['A+']\n        elif grades[0] == grades[1] and grades[0] == grades[2]:\n\
    \            return ['A']\n        elif grades[0] < grades[1] and grades[0] <\
    \ grades[2]:\n            return ['A- ']\n        elif grades[0] == grades[1]\
    \ and grades[0] < grades[2]:\n            return ['A- ']\n        elif grades[0]\
    \ > grades[1] and grades[0] == grades[2]:\n            return ['A- ']\n      \
    \  elif grades[0] < grades[1] and grades[0] > grades[2]:\n            return ['A-\
    \ ']\n        elif grades[0] == grades[1] and grades[0] > grades[2]:\n       \
    \     return ['A- ']\n        elif grades[0] > grades[1] and grades[0] < grades[2]:\n\
    \            return ['A- ']\n        elif grades[0] < grades[1] and grades[0]\
    \ == grades[2]:\n            return ['A- ']\n        elif grades[0] == grades[1]\
    \ and grades[0] < grades[2]:\n            return ['A- ']\n        elif grades[0]\
    \ > grades[1] and grades[0] == grades[2]:\n            return ['A- ']\n      \
    \  elif grades[0] < grades[1] and grades[0] > grades[2]:\n            return ['A-\
    \ ']\n        elif grades[0] == grades[1] and grades[0] == grades[2]:\n      \
    \      return ['A- ']\n        else:\n            return ['B']\n    \n    if grades_len\
    \ == 4:\n        if grades[0] > grades[1] and grades[0] > grades[2] and grades[0]\
    \ > grades[3]:\n            return ['A+']\n        elif grades[0] == grades[1]\
    \ and grades[0] == grades[2] and grades[0] == grades[3]:\n            return ['A']\n\
    \        elif grades[0] < grades[1] and grades[0] < grades[2] and grades[0] <\
    \ grades[3]:\n            return ['A- ']\n        elif grades[0] == grades[1]\
    \ and grades[0] < grades[2] and grades[0] < grades[3]:\n            return ['A-\
    \ ']\n        elif grades[0] > grades[1] and grades[0] == grades[2] and grades[0]\
    \ < grades[3]:\n            return ['A- ']\n        elif grades[0] < grades[1]\
    \ and grades[0] == grades[2] and grades[0] == grades[3]:\n            return ['A-\
    \ ']\n        elif grades[0] == grades[1] and grades[0] > grades[2] and grades[0]\
    \ < grades[3", "    \n    grades.sort()\n    \n    grades_len = len(grades)\n\
    \    \n    if grades_len < 2:\n        return ['E']\n    \n    if grades_len ==\
    \ 2:\n        if grades[0] > grades[1]:\n            return ['A+']\n        else:\n\
    \            return ['A']\n    \n    if grades_len == 3:\n        if grades[0]\
    \ > grades[1] and grades[0] > grades[2]:\n            return ['A+', 'B+']\n  \
    \      elif grades[0] > grades[1] and grades[0] < grades[2]:\n            return\
    \ ['A+', 'B-']\n        elif grades[0] < grades[1] and grades[0] > grades[2]:\n\
    \            return ['A', '-', 'B+']\n        elif grades[0] < grades[1] and grades[0]\
    \ < grades[2]:\n            return ['A', '-', 'B-']\n        elif grades[0] ==\
    \ grades[1] and grades[0] > grades[2]:\n            return ['A+', 'B-']\n    \
    \    elif grades[0] == grades[1] and grades[0] < grades[2]:\n            return\
    \ ['A', '-', 'B+']\n        elif grades[0] == grades[1] and grades[0] == grades[2]:\n\
    \            return ['A+', 'B']\n        elif grades[0] < grades[1] and grades[0]\
    \ == grades[2]:\n            return ['A', '-', 'B']\n        elif grades[0] >\
    \ grades[1] and grades[0] == grades[2]:\n            return ['A+', 'B-']\n   \
    \     elif grades[0] < grades[1] and grades[0] < grades[2]:\n            return\
    \ ['A', '-', 'B-']\n        elif grades[0] > grades[1] and grades[0] < grades[2]:\n\
    \            return ['A+', 'B']\n        elif grades[0] < grades[1] and grades[0]\
    \ > grades[2]:\n            return ['A', '-', 'B']\n        elif grades[0] ==\
    \ grades[1] and grades[0] < grades[2]:\n            return ['A+', 'B-']\n    \
    \    elif grades[0] == grades[1] and grades[0] > grades[2]:\n            return\
    \ ['A', '-', 'B+']\n        elif grades[0] == grades[1] and grades[0] == grades[2]:\n\
    \            return ['A+', 'B']\n        elif grades[0] < grades[1] and grades[0]\
    \ == grades[2]:\n            return ['A', '-', 'B']\n        elif grades[0] >\
    \ grades[1] and grades[0] == grades[2]:\n            return ['A+', 'B-']\n   \
    \     elif grades[0] < grades[1] and grades[0] < grades[2]:\n            return\
    \ ['A', '-', 'B-']\n        elif grades[0] == grades[1] and grades[0] < grades[2]:\n\
    \            return ['A+', 'B']\n        elif grades[0] == grades[1] and grades[0]\
    \ > grades[2]:\n            return ['A', '-', 'B']\n        elif grades[0] < grades[1]\
    \ and grades[0] == grades[2]:\n            return ['A', '-', 'B']\n        elif\
    \ grades[0] > grades[1] and grades[0] == grades[2]:\n            return ", " \
    \   \n    grades.sort()\n    \n    grades_length = len(grades)\n    \n    if grades_length\
    \ == 0:\n        return []\n    \n    if grades_length == 1:\n        return [\"\
    A+\"]\n    \n    if grades_length == 2:\n        if grades[0] > grades[1]:\n \
    \           return [\"A+\"]\n        else:\n            return [\"A-\"]\n    \n\
    \    if grades_length == 3:\n        if grades[0] > grades[1] and grades[0] >\
    \ grades[2]:\n            return [\"A+\"]\n        elif grades[1] > grades[2]:\n\
    \            return [\"A-\"]\n        else:\n            return [\"B+\"]\n   \
    \ \n    if grades_length == 4:\n        if grades[0] > grades[1] and grades[0]\
    \ > grades[2] and grades[0] > grades[3]:\n            return [\"A+\"]\n      \
    \  elif grades[1] > grades[2] and grades[1] > grades[3]:\n            return [\"\
    A-\"]\n        elif grades[2] > grades[3]:\n            return [\"B+\"]\n    \
    \    else:\n            return [\"B-\"]\n    \n    if grades_length == 5:\n  \
    \      if grades[0] > grades[1] and grades[0] > grades[2] and grades[0] > grades[3]\
    \ and grades[0] > grades[4]:\n            return [\"A+\"]\n        elif grades[1]\
    \ > grades[2] and grades[1] > grades[3] and grades[1] > grades[4]:\n         \
    \   return [\"A-\"]\n        elif grades[2] > grades[3] and grades[2] > grades[4]:\n\
    \            return [\"B+\"]\n        elif grades[3] > grades[4]:\n          \
    \  return [\"B-\"]\n        else:\n            return [\"C+\"]\n    \n    if grades_length\
    \ == 6:\n        if grades[0] > grades[1] and grades[0] > grades[2] and grades[0]\
    \ > grades[3] and grades[0] > grades[4] and grades[0] > grades[5]:\n         \
    \   return [\"A+\"]\n        elif grades[1] > grades[2] and grades[1] > grades[3]\
    \ and grades[1] > grades[4] and grades[1] > grades[5]:\n            return [\"\
    A-\"]\n        elif grades[2] > grades[3] and grades[2] > grades[4] and grades[2]\
    \ > grades[5]:\n            return [\"B+\"]\n        elif grades[3] > grades[4]\
    \ and grades[3] > grades[5]:\n            return [\"B-\"]\n        elif grades[4]\
    \ > grades[5]:\n            return [\"C+\"]\n        else:\n            return\
    \ [\"C-\"]\n    \n    if grades_length == 7:\n        if grades[0] > grades[1]\
    \ and grades[0] > grades[2] and grades[0] > grades[3] and grades[0] > grades[4]\
    \ and grades[0] > grades[5", "    \n    grades_sorted = sorted(grades)\n    \n\
    \    letter_grades = []\n    \n    for grade in grades_sorted:\n        if grade\
    \ >= 3.0 and grade <= 3.7:\n            letter_grades.append('A+')\n        elif\
    \ grade >= 3.7 and grade <= 3.3:\n            letter_grades.append('A')\n    \
    \    elif grade >= 3.3 and grade <= 3.0:\n            letter_grades.append('A-')\n\
    \        elif grade >= 3.0 and grade <= 2.7:\n            letter_grades.append('B+')\n\
    \        elif grade >= 2.7 and grade <= 2.3:\n            letter_grades.append('B')\n\
    \        elif grade >= 2.3 and grade <= 2.0:\n            letter_grades.append('B-')\n\
    \        elif grade >= 2.0 and grade <= 1.7:\n            letter_grades.append('C+')\n\
    \        elif grade >= 1.7 and grade <= 1.3:\n            letter_grades.append('C')\n\
    \        elif grade >= 1.3 and grade <= 1.0:\n            letter_grades.append('C-')\n\
    \        elif grade >= 1.0 and grade <= 0.7:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7 and grade <= 0.0:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade < 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade < 3.7:\n            letter_grades.append('A')\n        elif\
    \ grade < 3.3:\n            letter_grades.append('A-')\n        elif grade < 3.0:\n\
    \            letter_grades.append('B+')\n        elif grade < 2.7:\n         \
    \   letter_grades.append('B')\n        elif grade < 2.3:\n            letter_grades.append('B-')\n\
    \        elif grade < 2.0:\n            letter_grades.append('C+')\n        elif\
    \ grade < 1.7:\n            letter_grades.append('C')\n        elif grade < 1.3:\n\
    \            letter_grades.append('C-')\n        elif grade < 1.0:\n         \
    \   letter_grades.append('D+')\n        elif grade < 0.7:\n            letter_grades.append('D')\n\
    \        elif grade < 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades.sort()\n    \n    grades_length = len(grades)\n    \n    if grades_length\
    \ == 0:\n        return []\n    \n    \n    \n    if grades_length == 1:\n   \
    \     return [\"A+\"]\n    \n    if grades_length == 2:\n        if grades[0]\
    \ > grades[1]:\n            return [\"A+\"]\n        else:\n            return\
    \ [\"A-\"]\n    \n    if grades_length == 3:\n        if grades[0] > grades[1]\
    \ and grades[0] > grades[2]:\n            return [\"A+\"]\n        elif grades[1]\
    \ > grades[2]:\n            return [\"A-\"]\n        else:\n            return\
    \ [\"B+\"]\n    \n    if grades_length == 4:\n        if grades[0] > grades[1]\
    \ and grades[0] > grades[2] and grades[0] > grades[3]:\n            return [\"\
    A+\"]\n        elif grades[1] > grades[2] and grades[1] > grades[3]:\n       \
    \     return [\"A-\"]\n        elif grades[2] > grades[3]:\n            return\
    \ [\"B+\"]\n        else:\n            return [\"B-\"]\n    \n    if grades_length\
    \ == 5:\n        if grades[0] > grades[1] and grades[0] > grades[2] and grades[0]\
    \ > grades[3] and grades[0] > grades[4]:\n            return [\"A+\"]\n      \
    \  elif grades[1] > grades[2] and grades[1] > grades[3] and grades[1] > grades[4]:\n\
    \            return [\"A-\"]\n        elif grades[2] > grades[3] and grades[2]\
    \ > grades[4]:\n            return [\"B+\"]\n        elif grades[3] > grades[4]:\n\
    \            return [\"B-\"]\n        else:\n            return [\"C+\"]\n   \
    \ \n    if grades_length == 6:\n        if grades[0] > grades[1] and grades[0]\
    \ > grades[2] and grades[0] > grades[3] and grades[0] > grades[4] and grades[0]\
    \ > grades[5]:\n            return [\"A+\"]\n        elif grades[1] > grades[2]\
    \ and grades[1] > grades[3] and grades[1] > grades[4] and grades[1] > grades[5]:\n\
    \            return [\"A-\"]\n        elif grades[2] > grades[3] and grades[2]\
    \ > grades[4] and grades[2] > grades[5]:\n            return [\"B+\"]\n      \
    \  elif grades[3] > grades[4] and grades[3] > grades[5]:\n            return [\"\
    B-\"]\n        elif grades[4] > grades[5]:\n            return [\"C+\"]\n    \
    \    else:\n            return [\"C-\"]\n    \n    if grades_length == 7:\n  \
    \      if grades[0] > grades[1] and grades[0] > grades[2] and grades[0] > grades[3]\
    \ and grades[0] > grades[4] and grades[0]", "    \n    grades.sort()\n    \n \
    \   letter_grades = []\n    \n    for grade in grades:\n        if grade >= 4.0:\n\
    \            letter_grades.append('A+')\n        elif grade > 3.7:\n         \
    \   letter_grades.append('A')\n        elif grade > 3.3:\n            letter_grades.append('A-')\n\
    \        elif grade > 3.0:\n            letter_grades.append('B+')\n        elif\
    \ grade > 2.7:\n            letter_grades.append('B')\n        elif grade > 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade > 2.0:\n         \
    \   letter_grades.append('C+')\n        elif grade > 1.7:\n            letter_grades.append('C')\n\
    \        elif grade > 1.3:\n            letter_grades.append('C-')\n        elif\
    \ grade > 1.0:\n            letter_grades.append('D+')\n        elif grade > 0.7:\n\
    \            letter_grades.append('D')\n        elif grade > 0.0:\n          \
    \  letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n</cell>\n<cell>", "    \n    grades_sorted =\
    \ sorted(grades)\n    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n\
    \        if grade >= 3.0:\n            letter_grades.append('A+')\n        elif\
    \ grade >= 2.7:\n            letter_grades.append('B')\n        elif grade >=\
    \ 2.3:\n            letter_grades.append('B-')\n        elif grade >= 1.7:\n \
    \           letter_grades.append('C')\n        elif grade >= 1.3:\n          \
    \  letter_grades.append('C-')\n        elif grade >= 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n     \
    \       letter_grades.append('E')\n    \n    return letter_grades\n", "    \n\
    \    grades.sort()\n    \n    letter_grades = []\n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B+')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C+')\n        elif grade >= 1.3:\n \
    \           letter_grades.append('C-')\n        elif grade >= 1.0:\n         \
    \   letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + [0]\n    grades_sorted = grades_sorted + [0]\n    grades_sorted\
    \ = grades_sorted + ", "    \n    grades.sort()\n    \n    grades_length = len(grades)\n\
    \    \n    if grades_length == 0:\n        return []\n    \n    if grades_length\
    \ == 1:\n        return [\"A+\"]\n    \n    if grades_length == 2:\n        if\
    \ grades[0] > grades[1]:\n            return [\"A+\"]\n        else:\n       \
    \     return [\"A\", \"A-\"]\n    \n    if grades_length == 3:\n        if grades[0]\
    \ > grades[1] and grades[0] > grades[2]:\n            return [\"A+\"]\n      \
    \  elif grades[1] > grades[2]:\n            return [\"A\", \"A-\"]\n        else:\n\
    \            return [\"B+\", \"B\", \"B-\"]\n    \n    if grades_length == 4:\n\
    \        if grades[0] > grades[1] and grades[0] > grades[2] and grades[0] > grades[3]:\n\
    \            return [\"A+\"]\n        elif grades[1] > grades[2] and grades[1]\
    \ > grades[3]:\n            return [\"A\", \"A-\"]\n        elif grades[2] > grades[3]:\n\
    \            return [\"B+\", \"B\", \"B-\"]\n        else:\n            return\
    \ [\"C+\", \"C\", \"C\"]\n    \n    if grades_length == 5:\n        if grades[0]\
    \ > grades[1] and grades[0] > grades[2] and grades[0] > grades[3] and grades[0]\
    \ > grades[4]:\n            return [\"A+\"]\n        elif grades[1] > grades[2]\
    \ and grades[1] > grades[3] and grades[1] > grades[4]:\n            return [\"\
    A\", \"A-\"]\n        elif grades[2] > grades[3] and grades[2] > grades[4]:\n\
    \            return [\"B+\", \"B\", \"B-\"]\n        elif grades[3] > grades[4]:\n\
    \            return [\"C+\", \"C\", \"C\"]\n        else:\n            return\
    \ [\"D+\", \"D\", \"D-\"]\n    \n    if grades_length == 6:\n        if grades[0]\
    \ > grades[1] and grades[0] > grades[2] and grades[0] > grades[3] and grades[0]\
    \ > grades[4] and grades[0] > grades[5]:\n            return [\"A+\"]\n      \
    \  elif grades[1] > grades[2] and grades[1] > grades[3] and grades[1] > grades[4]\
    \ and grades[1] > grades[5]:\n            return [\"A\", \"A-\"]\n        elif\
    \ grades[2] > grades[3] and grades[2] > grades[4] and grades[2] > grades[5]:\n\
    \            return [\"B+\", \"B\", \"B-\"]\n        elif grades[3] > grades[4]\
    \ and grades[3] > grades[5]:\n            return [\"C+\", \"C\", \"C\"]\n    \
    \    elif grades[4] > grades[5]:\n            return [\"D+\", \"D\", \"D-\"]\n\
    \        else:\n            return ", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.0:\n            letter_grades.append('B+')\n        elif grade >= 1.7:\n\
    \            letter_grades.append('C+')\n        elif grade >= 1.3:\n        \
    \    letter_grades.append('C-')\n        elif grade >= 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n     \
    \       letter_grades.append('E')\n    \n    return letter_grades\n</cell>\n<cell>",
  "    \n    grades.sort()\n    \n    grades_length = len(grades)\n    \n    if grades_length\
    \ < 2:\n        return ['E']\n    \n    if grades_length == 2:\n        if grades[0]\
    \ > grades[1]:\n            return ['A+']\n        else:\n            return ['A']\n\
    \    \n    if grades_length == 3:\n        if grades[0] > grades[1]:\n       \
    \     if grades[0] > grades[2]:\n                return ['A+', 'B']\n        \
    \    else:\n                return ['A', 'B-']\n        else:\n            if\
    \ grades[1] > grades[2]:\n                return ['A', 'B-']\n            else:\n\
    \                return ['A+', 'B-']\n    \n    if grades_length == 4:\n     \
    \   if grades[0] > grades[1]:\n            if grades[0] > grades[2]:\n       \
    \         if grades[0] > grades[3]:\n                    return ['A+', 'B', 'C']\n\
    \                else:\n                    return ['A', 'B', 'C-']\n        \
    \    else:\n                if grades[1] > grades[2]:\n                    return\
    \ ['A', 'B', 'C-']\n                else:\n                    if grades[2] >\
    \ grades[3]:\n                        return ['A+', 'B', 'C-']\n             \
    \       else:\n                        return ['A', 'B', 'C']\n        else:\n\
    \            if grades[1] > grades[2]:\n                if grades[1] > grades[3]:\n\
    \                    return ['A', 'B', 'C-']\n                else:\n        \
    \            if grades[2] > grades[3]:\n                        return ['A+',\
    \ 'B', 'C-']\n                    else:\n                        return ['A',\
    \ 'B', 'C']\n            else:\n                if grades[2] > grades[3]:\n  \
    \                  if grades[2] > grades[3]:\n                        return ['A+',\
    \ 'B', 'C-']\n                    else:\n                        return ['A',\
    \ 'B', 'C']\n                else:\n                    if grades[3] > grades[4]:\n\
    \                        return ['A+', 'B', 'C']\n                    else:\n\
    \                        return ['A', 'B', 'C-']\n    \n    if grades_length ==\
    \ 5:\n        if grades[0] > grades[1]:\n            if grades[0] > grades[2]:\n\
    \                if grades[0] > grades[3]:\n                    if grades[0] >\
    \ grades[4]:\n                        if grades[0] > grades[5]:\n            \
    \                return ['A+', 'B', 'C', 'D']\n                        else:\n\
    \                            return ['A', 'B', 'C-D']\n                    else:\n\
    \                        if grades[1] > grades[4]:\n                         \
    \   if grades[1] > grades[5]:\n                                return ['A+', 'B',\
    \ 'C-D']\n                            else:\n                                return\
    \ ['A', 'B', 'C-D-']\n                        else:\n                        \
    \    if grades[2] > grades[4]:\n                                if grades[2] >\
    \ grades[5]:\n                                    return ['A+', 'B', 'C-D-']\n\
    \                                else:\n                                    return\
    \ ['A', 'B', 'C-D']\n                            else:\n                     \
    \           if grades[3] > grades[4]:\n                                    if\
    \ grades[3] > grades[5]:\n                                        return ['A+',\
    \ 'B', 'C-D']\n                                    else:\n", "    \n    grades.sort()\n\
    \    \n    grades_length = len(grades)\n    \n    letter_grades = []\n    \n \
    \   if grades_length == 0:\n        letter_grades.append('E')\n        return\
    \ letter_grades\n    \n    if grades_length == 1:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 2:\n        if grades[0]\
    \ > grades[1]:\n            letter_grades.append('A')\n        else:\n       \
    \     letter_grades.append('B')\n        return letter_grades\n    \n    if grades_length\
    \ == 3:\n        if grades[0] > grades[1] and grades[0] > grades[2]:\n       \
    \     letter_grades.append('A')\n        elif grades[1] > grades[2]:\n       \
    \     letter_grades.append('B')\n        else:\n            letter_grades.append('C')\n\
    \        return letter_grades\n    \n    if grades_length == 4:\n        if grades[0]\
    \ > grades[1] and grades[0] > grades[2] and grades[0] > grades[3]:\n         \
    \   letter_grades.append('A')\n        elif grades[1] > grades[2] and grades[1]\
    \ > grades[3]:\n            letter_grades.append('B')\n        elif grades[2]\
    \ > grades[3]:\n            letter_grades.append('C')\n        else:\n       \
    \     letter_grades.append('D')\n        return letter_grades\n    \n    if grades_length\
    \ == 5:\n        if grades[0] > grades[1] and grades[0] > grades[2] and grades[0]\
    \ > grades[3] and grades[0] > grades[4]:\n            letter_grades.append('A')\n\
    \        elif grades[1] > grades[2] and grades[1] > grades[3] and grades[1] >\
    \ grades[4]:\n            letter_grades.append('B')\n        elif grades[2] >\
    \ grades[3] and grades[2] > grades[4]:\n            letter_grades.append('C')\n\
    \        elif grades[3] > grades[4]:\n            letter_grades.append('D')\n\
    \        else:\n            letter_grades.append('E')\n        return letter_grades\n\
    \    \n    if grades_length == 6:\n        if grades[0] > grades[1] and grades[0]\
    \ > grades[2] and grades[0] > grades[3] and grades[0] > grades[4] and grades[0]\
    \ > grades[5]:\n            letter_grades.append('A')\n        elif grades[1]\
    \ > grades[2] and grades[1] > grades[3] and grades[1] > grades[4] and grades[1]\
    \ > grades[5]:\n            letter_grades.append('B')\n        elif grades[2]\
    \ > grades[3] and grades[2] > grades[4] and grades[2] > grades[5]:\n         \
    \   letter_grades.append('C')\n        elif grades[3] > grades[4] and grades[3]\
    \ > grades[5]:\n            letter_grade", "    \n    grades.sort()\n    \n  \
    \  grades_length = len(grades)\n    \n    letter_grades = []\n    \n    if grades_length\
    \ == 0:\n        letter_grades.append('E')\n        return letter_grades\n   \
    \ \n    if grades_length == 1:\n        letter_grades.append('A')\n        return\
    \ letter_grades\n    \n    if grades_length == 2:\n        if grades[0] > grades[1]:\n\
    \            letter_grades.append('A+')\n        else:\n            letter_grades.append('B')\n\
    \        return letter_grades\n    \n    if grades_length == 3:\n        if grades[0]\
    \ > grades[1] and grades[0] > grades[2]:\n            letter_grades.append('A+')\n\
    \        elif grades[1] > grades[2]:\n            letter_grades.append('B+')\n\
    \        else:\n            letter_grades.append('C+')\n        return letter_grades\n\
    \    \n    if grades_length == 4:\n        if grades[0] > grades[1] and grades[0]\
    \ > grades[2] and grades[0] > grades[3]:\n            letter_grades.append('A+')\n\
    \        elif grades[1] > grades[2] and grades[1] > grades[3]:\n            letter_grades.append('B+')\n\
    \        elif grades[2] > grades[3]:\n            letter_grades.append('C+')\n\
    \        else:\n            letter_grades.append('D+')\n        return letter_grades\n\
    \    \n    if grades_length == 5:\n        if grades[0] > grades[1] and grades[0]\
    \ > grades[2] and grades[0] > grades[3] and grades[0] > grades[4]:\n         \
    \   letter_grades.append('A+')\n        elif grades[1] > grades[2] and grades[1]\
    \ > grades[3] and grades[1] > grades[4]:\n            letter_grades.append('B+')\n\
    \        elif grades[2] > grades[3] and grades[2] > grades[4]:\n            letter_grades.append('C+')\n\
    \        elif grades[3] > grades[4]:\n            letter_grades.append('D+')\n\
    \        else:\n            letter_grades.append('E')\n        return letter_grades\n\
    \    \n    if grades_length == 6:\n        if grades[0] > grades[1] and grades[0]\
    \ > grades[2] and grades[0] > grades[3] and grades[0] > grades[4] and grades[0]\
    \ > grades[5]:\n            letter_grades.append('A+')\n        elif grades[1]\
    \ > grades[2] and grades[1] > grades[3] and grades[1] > grades[4] and grades[1]\
    \ > grades[5]:\n            letter_grades.append('B+')\n        elif grades[2]\
    \ > grades[3] and grades[2] > grades[4] and grades[2] > grades[5]:\n         \
    \   letter_grades.append('C+')\n        elif grades[3] > ", "    \n    grades.sort()\n\
    \    \n    letter_grades = []\n    \n    for grade in grades:\n        if grade\
    \ >= 3.0:\n            letter_grades.append('A+')\n        elif grade >= 2.0:\n\
    \            letter_grades.append('A')\n        elif grade >= 1.7:\n         \
    \   letter_grades.append('A-')\n        elif grade >= 1.3:\n            letter_grades.append('B+')\n\
    \        elif grade >= 1.0:\n            letter_grades.append('B')\n        elif\
    \ grade >= 0.7:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('C+')\n        elif grade >= 0.0:\n \
    \           letter_grades.append('C')\n        elif grade >= 0.0:\n          \
    \  letter_grades.append('C-')\n        elif grade >= 0.0:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('D-')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('E')\n        else:\n            letter_grades.append('F')\n\
    \    \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade < 3.0:\n            letter_grades.append('A')\n        elif grade <\
    \ 3.7:\n            letter_grades.append('A-')\n        elif grade < 4.0:\n  \
    \          letter_grades.append('B+')\n        elif grade < 4.7:\n           \
    \ letter_grades.append('B')\n        elif grade < 5.0:\n            letter_grades.append('B-')\n\
    \        elif grade < 5.7:\n            letter_grades.append('C+')\n        elif\
    \ grade < 6.0:\n            letter_grades.append('C')\n        elif grade < 6.7:\n\
    \            letter_grades.append('C-')\n        elif grade < 7.0:\n         \
    \   letter_grades.append('D+')\n        elif grade < 7.7:\n            letter_grades.append('D')\n\
    \        elif grade < 8.0:\n            letter_grades.append('D-')\n        elif\
    \ grade < 8.7:\n            letter_grades.append('E')\n        else:\n       \
    \     letter_grades.append('F')\n    \n    return letter_grades\n", "    \n  \
    \  letter_grades = []\n    \n    for grade in grades:\n        if grade >= 3.0:\n\
    \            letter_grades.append('A+')\n        elif grade >= 2.7:\n        \
    \    letter_grades.append('B')\n        elif grade >= 2.3:\n            letter_grades.append('B-')\n\
    \        elif grade >= 1.7:\n            letter_grades.append('C')\n        elif\
    \ grade >= 1.3:\n            letter_grades.append('C-')\n        elif grade >=\
    \ 1.0:\n            letter_grades.append('D+')\n        elif grade >= 0.7:\n \
    \           letter_grades.append('D')\n        elif grade >= 0.0:\n          \
    \  letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \            \n    return letter_grades\n", "    \n    grades.sort()\n    grades_length\
    \ = len(grades)\n    \n    if grades_length < 1:\n        return []\n    \n  \
    \  if grades_length == 1:\n        return [\"A+\"]\n    \n    if grades_length\
    \ == 2:\n        if grades[0] > grades[1]:\n            return [\"A+\"]\n    \
    \    else:\n            return [\"A\"]\n    \n    if grades_length == 3:\n   \
    \     if grades[0] > grades[1] and grades[0] > grades[2]:\n            return\
    \ [\"A+\"]\n        elif grades[1] > grades[2]:\n            return [\"A\"]\n\
    \        elif grades[0] == grades[1] and grades[0] > grades[2]:\n            return\
    \ [\"A\"]\n        elif grades[0] == grades[1] and grades[1] > grades[2]:\n  \
    \          return [\"A-\"]\n        elif grades[0] > grades[1] and grades[1] >\
    \ grades[2]:\n            return [\"B+\"]\n        elif grades[1] > grades[2]:\n\
    \            return [\"B\"]\n        elif grades[0] == grades[1] and grades[1]\
    \ > grades[2]:\n            return [\"B\"]\n        elif grades[0] == grades[1]\
    \ and grades[1] == grades[2]:\n            return [\"B\"]\n        elif grades[0]\
    \ > grades[1] and grades[1] == grades[2]:\n            return [\"B-\"]\n     \
    \   elif grades[0] == grades[1] and grades[1] < grades[2]:\n            return\
    \ [\"B-\"]\n        elif grades[0] == grades[1] and grades[1] == grades[2]:\n\
    \            return [\"B-\"]\n        elif grades[0] > grades[1] and grades[1]\
    \ < grades[2]:\n            return [\"C+\"]\n        elif grades[1] > grades[2]:\n\
    \            return [\"C\"]\n        elif grades[0] == grades[1] and grades[1]\
    \ < grades[2]:\n            return [\"C\"]\n        elif grades[0] == grades[1]\
    \ and grades[1] == grades[2]:\n            return [\"C\"]\n        elif grades[0]\
    \ > grades[1] and grades[1] < grades[2]:\n            return [\"C-\"]\n      \
    \  elif grades[0] == grades[1] and grades[1] == grades[2]:\n            return\
    \ [\"C-\"]\n        elif grades[0] > grades[1] and grades[1] < grades[2]:\n  \
    \          return [\"D+\"]\n        elif grades[1] > grades[2]:\n            return\
    \ [\"D\"]\n        elif grades[0] == grades[1] and grades[1] < grades[2]:\n  \
    \          return [\"D\"]\n        elif grades[0] == grades[1] and grades[1] ==\
    \ grades[2]:\n            return [\"D\"]\n        elif grades[0] > grades[1] and\
    \ grades[1] < grades[2]:\n            return [\"D-\"]\n        elif grades[0]\
    \ == grades[1] and grades[1] == grades[2]:\n            return [\"D-\"]\n    \
    \    elif grades[0] > grades[1] and grades[1] == grades[2]:\n            return\
    \ [\"E", "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades =\
    \ []\n    \n    for grade in grades_sorted:\n        if grade < 3.0:\n       \
    \     letter_grades.append('A')\n        elif grade < 3.7:\n            letter_grades.append('A-')\n\
    \        elif grade < 4.0:\n            letter_grades.append('B+')\n        elif\
    \ grade < 4.7:\n            letter_grades.append('B')\n        elif grade < 5.0:\n\
    \            letter_grades.append('B-')\n        elif grade < 5.7:\n         \
    \   letter_grades.append('C+')\n        elif grade < 6.0:\n            letter_grades.append('C')\n\
    \        elif grade < 6.7:\n            letter_grades.append('C-')\n        elif\
    \ grade < 7.0:\n            letter_grades.append('D+')\n        elif grade < 7.7:\n\
    \            letter_grades.append('D')\n        elif grade < 8.0:\n          \
    \  letter_grades.append('D-')\n        elif grade < 8.7:\n            letter_grades.append('E')\n\
    \        else:\n            letter_grades.append('F')\n    \n    return letter_grades\n",
  "    \n    grades.sort()\n    \n    grades_length = len(grades)\n    \n    if grades_length\
    \ < 1:\n        return []\n    \n    if grades_length == 1:\n        return ['A+']\n\
    \    \n    if grades_length == 2:\n        return ['A+', 'B']\n    \n    if grades_length\
    \ == 3:\n        return ['A+', 'B-', 'C']\n    \n    if grades_length == 4:\n\
    \        return ['A+', 'B-', 'C-', 'D']\n    \n    if grades_length == 5:\n  \
    \      return ['A+', 'B-', 'C-', 'D-', 'E']\n    \n    if grades_length == 6:\n\
    \        return ['A+', 'B-', 'C-', 'D-', 'E', 'F']\n    \n    if grades_length\
    \ == 7:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-']\n    \n    if grades_length\
    \ == 8:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G']\n    \n    if\
    \ grades_length == 9:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-']\n\
    \    \n    if grades_length == 10:\n        return ['A+', 'B-', 'C-', 'D-', 'E',\
    \ 'F-', 'G-', 'A-']\n    \n    if grades_length == 11:\n        return ['A+',\
    \ 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A-', 'B']\n    \n    if grades_length ==\
    \ 12:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A-', 'B-', 'C']\n\
    \    \n    if grades_length == 13:\n        return ['A+', 'B-', 'C-', 'D-', 'E',\
    \ 'F-', 'G-', 'A-', 'B-', 'C-', 'D']\n    \n    if grades_length == 14:\n    \
    \    return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A-', 'B-', 'C-', 'D-',\
    \ 'E']\n    \n    if grades_length == 15:\n        return ['A+', 'B-', 'C-', 'D-',\
    \ 'E', 'F-', 'G-', 'A-', 'B-', 'C-', 'D-', 'E-', 'F']\n    \n    if grades_length\
    \ == 16:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A-', 'B-',\
    \ 'C-', 'D-', 'E-', 'F-']\n    \n    if grades_length == 17:\n        return ['A+',\
    \ 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A-', 'B-', 'C-', 'D-', 'E-', 'F-', 'G']\n\
    \    \n    if grades_length == 18:\n        return ['A+', 'B-', 'C-', 'D-', 'E',\
    \ 'F-', 'G-', 'A-', 'B-', 'C-', 'D-', 'E-', 'F-', 'G-']\n    \n    if grades_length\
    \ == ", "    \n    letter_grades = []\n    for grade in grades:\n        if grade\
    \ >= 3.0:\n            letter_grades.append('A+')\n        elif grade >= 2.7:\n\
    \            letter_grades.append('B')\n        elif grade >= 2.3:\n         \
    \   letter_grades.append('B-')\n        elif grade >= 1.7:\n            letter_grades.append('C')\n\
    \        elif grade >= 1.3:\n            letter_grades.append('C-')\n        elif\
    \ grade >= 1.0:\n            letter_grades.append('D+')\n        elif grade >=\
    \ 0.7:\n            letter_grades.append('D')\n        elif grade >= 0.0:\n  \
    \          letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    return letter_grades\n", "    \n    grades.sort()\n    \n    grades_length\
    \ = len(grades)\n    \n    letter_grades = []\n    \n    if grades_length == 0:\n\
    \        letter_grades.append('E')\n        return letter_grades\n    \n    if\
    \ grades_length == 1:\n        letter_grades.append('A')\n        return letter_grades\n\
    \    \n    if grades_length == 2:\n        letter_grades.append('A')\n       \
    \ letter_grades.append('B')\n        return letter_grades\n    \n    if grades_length\
    \ == 3:\n        letter_grades.append('A')\n        letter_grades.append('B')\n\
    \        letter_grades.append('C')\n        return letter_grades\n    \n    if\
    \ grades_length == 4:\n        letter_grades.append('A')\n        letter_grades.append('B')\n\
    \        letter_grades.append('C')\n        letter_grades.append('D')\n      \
    \  return letter_grades\n    \n    if grades_length == 5:\n        letter_grades.append('A')\n\
    \        letter_grades.append('B')\n        letter_grades.append('C')\n      \
    \  letter_grades.append('D')\n        letter_grades.append('E')\n        return\
    \ letter_grades\n    \n    if grades_length == 6:\n        letter_grades.append('A')\n\
    \        letter_grades.append('B')\n        letter_grades.append('C')\n      \
    \  letter_grades.append('D')\n        letter_grades.append('E')\n        letter_grades.append('F')\n\
    \        return letter_grades\n    \n    if grades_length == 7:\n        letter_grades.append('A')\n\
    \        letter_grades.append('B')\n        letter_grades.append('C')\n      \
    \  letter_grades.append('D')\n        letter_grades.append('E')\n        letter_grades.append('F')\n\
    \        letter_grades.append('G')\n        return letter_grades\n    \n    if\
    \ grades_length == 8:\n        letter_grades.append('A')\n        letter_grades.append('B')\n\
    \        letter_grades.append('C')\n        letter_grades.append('D')\n      \
    \  letter_grades.append('E')\n        letter_grades.append('F')\n        letter_grades.append('G')\n\
    \        letter_grades.append('H')\n        return letter_grades\n    \n    if\
    \ grades_length == 9:\n        letter_grades.append('A')\n        letter_grades.append('B')\n\
    \        letter_grades.append('C')\n        letter_grades.append('D')\n      \
    \  letter_grades.append('E')\n        letter_grades.append('F')\n        letter_grades.append('G')\n\
    \        letter_grades.append('H')\n        letter_grades.append('I')\n      \
    \  return letter_grades\n    \n    if grades_length == 10:\n        letter_grades.append('A')\n\
    \        letter_grades.append('B')\n        letter_grades.append('C')\n      \
    \  ", "    \n    grades.sort()\n    \n    grades_length = len(grades)\n    \n\
    \    if grades_length == 0:\n        return []\n    \n    if grades_length ==\
    \ 1:\n        return [\"A+\"]\n    \n    if grades_length == 2:\n        if grades[0]\
    \ > grades[1]:\n            return [\"A+\", \"B\"]\n        else:\n          \
    \  return [\"A\", \"B\"]\n    \n    if grades_length == 3:\n        if grades[0]\
    \ > grades[1] and grades[0] > grades[2]:\n            return [\"A+\", \"B\", \"\
    C\"]\n        elif grades[1] > grades[2]:\n            return [\"A\", \"B+\",\
    \ \"C\"]\n        elif grades[0] > grades[2]:\n            return [\"A\", \"B\"\
    , \"C+\"]\n        elif grades[1] > grades[2]:\n            return [\"A\", \"\
    B\", \"C\"]\n        elif grades[0] == grades[1]:\n            return [\"A\",\
    \ \"B\", \"C\"]\n        elif grades[0] == grades[2]:\n            return [\"\
    A\", \"B\", \"C+\"]\n        elif grades[1] == grades[2]:\n            return\
    \ [\"A\", \"B\", \"C\"]\n        elif grades[0] == grades[1] and grades[1] ==\
    \ grades[2]:\n            return [\"A\", \"B\", \"C\"]\n        elif grades[0]\
    \ > grades[1] and grades[1] > grades[2]:\n            return [\"A+\", \"B\", \"\
    C\"]\n        elif grades[0] > grades[1] and grades[1] < grades[2]:\n        \
    \    return [\"A\", \"B+\", \"C\"]\n        elif grades[0] > grades[1] and grades[1]\
    \ == grades[2]:\n            return [\"A\", \"B\", \"C+\"]\n        elif grades[0]\
    \ > grades[1] and grades[1] > grades[2]:\n            return [\"A\", \"B\", \"\
    C\"]\n        elif grades[0] > grades[1] and grades[1] < grades[2]:\n        \
    \    return [\"A\", \"B\", \"C+\"]\n        elif grades[0] == grades[1] and grades[1]\
    \ == grades[2]:\n            return [\"A\", \"B\", \"C\"]\n        elif grades[0]\
    \ == grades[1] and grades[1] < grades[2]:\n            return [\"A\", \"B\", \"\
    C+\"]\n        elif grades[0] == grades[1] and grades[1] > grades[2]:\n      \
    \      return [\"A\", \"B\", \"C\"]\n        elif grades[0] == grades[1] and grades[1]\
    \ == grades[2]:\n            return [\"A\", \"B\", \"C+\"]\n        elif grades[0]\
    \ > grades[1] and grades[1] > grades[2]:\n            return [\"A+\", \"B\", \"\
    C\"]\n        elif grades[0] > grades[1] and grades[1] < grades[2]:\n        \
    \    return [\"A\", \"B+\", \"C\"]\n        elif grades[0] > grades[1] and grades[1]\
    \ == grades[2]:\n            return [\"A\", \"B\", \"C+\"]\n        elif grades[0]\
    \ > grades[1] and grades[1] > grades[2]", "    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \n    grades.sort()\n    \n    letter_grades = []\n\
    \    \n    \n    for grade in grades:\n        if grade > 3.7:\n            letter_grades.append('A+')\n\
    \        elif grade > 3.3:\n            letter_grades.append('A-')\n        elif\
    \ grade > 3.0:\n            letter_grades.append('B+')\n        elif grade > 2.7:\n\
    \            letter_grades.append('B')\n        elif grade > 2.3:\n          \
    \  letter_grades.append('B-')\n        elif grade > 2.0:\n            letter_grades.append('C+')\n\
    \        elif grade > 1.7:\n            letter_grades.append('C')\n        elif\
    \ grade > 1.3:\n            letter_grades.append('C-')\n        elif grade > 1.0:\n\
    \            letter_grades.append('D+')\n        elif grade > 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade > 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n\
    </cell>\n<cell>", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    grades_sorted\
    \ = sorted(grades)\n    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n\
    \        if grade >= 3.0:\n            letter_grades.append('A+')\n        elif\
    \ grade >= 2.7:\n            letter_grades.append('B+')\n        elif grade >=\
    \ 2.3:\n            letter_grades.append('B-')\n        elif grade >= 1.7:\n \
    \           letter_grades.append('C+')\n        elif grade >= 1.3:\n         \
    \   letter_grades.append('C-')\n        elif grade >= 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n     \
    \       letter_grades.append('E')\n    \n    return letter_grades\n", "    \n\
    \    grades.sort()\n    \n    grades_len = len(grades)\n    \n    if grades_len\
    \ == 0:\n        return []\n    \n    if grades_len == 1:\n        return [\"\
    A+\"]\n    \n    if grades_len == 2:\n        if grades[0] > grades[1]:\n    \
    \        return [\"A+\"]\n        else:\n            return [\"A-\"]\n    \n \
    \   if grades_len == 3:\n        if grades[0] > grades[1] and grades[0] > grades[2]:\n\
    \            return [\"A+\"]\n        elif grades[1] > grades[2]:\n          \
    \  return [\"A-\"]\n        else:\n            return [\"B+\"]\n    \n    if grades_len\
    \ == 4:\n        if grades[0] > grades[1] and grades[0] > grades[2] and grades[0]\
    \ > grades[3]:\n            return [\"A+\"]\n        elif grades[1] > grades[2]\
    \ and grades[1] > grades[3]:\n            return [\"A-\"]\n        elif grades[2]\
    \ > grades[3]:\n            return [\"B+\"]\n        else:\n            return\
    \ [\"B-\"]\n    \n    if grades_len == 5:\n        if grades[0] > grades[1] and\
    \ grades[0] > grades[2] and grades[0] > grades[3] and grades[0] > grades[4]:\n\
    \            return [\"A+\"]\n        elif grades[1] > grades[2] and grades[1]\
    \ > grades[3] and grades[1] > grades[4]:\n            return [\"A-\"]\n      \
    \  elif grades[2] > grades[3] and grades[2] > grades[4]:\n            return [\"\
    B+\"]\n        elif grades[3] > grades[4]:\n            return [\"B-\"]\n    \
    \    else:\n            return [\"C+\"]\n    \n    if grades_len == 6:\n     \
    \   if grades[0] > grades[1] and grades[0] > grades[2] and grades[0] > grades[3]\
    \ and grades[0] > grades[4] and grades[0] > grades[5]:\n            return [\"\
    A+\"]\n        elif grades[1] > grades[2] and grades[1] > grades[3] and grades[1]\
    \ > grades[4] and grades[1] > grades[5]:\n            return [\"A-\"]\n      \
    \  elif grades[2] > grades[3] and grades[2] > grades[4] and grades[2] > grades[5]:\n\
    \            return [\"B+\"]\n        elif grades[3] > grades[4] and grades[3]\
    \ > grades[5]:\n            return [\"B-\"]\n        elif grades[4] > grades[5]:\n\
    \            return [\"C+\"]\n        else:\n            return [\"C-\"]\n   \
    \ \n    if grades_len == 7:\n        if grades[0] > grades[1] and grades[0] >\
    \ grades[2] and grades[0] > grades[3] and grades[0] > grades[4] and grades[0]\
    \ > grades[5", "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades\
    \ = []\n    \n    for grade in grades_sorted:\n        if grade >= 3.0:\n    \
    \        letter_grades.append('A+')\n        elif grade >= 2.0:\n            letter_grades.append('B+')\n\
    \        elif grade >= 1.7:\n            letter_grades.append('C+')\n        elif\
    \ grade >= 1.3:\n            letter_grades.append('C-')\n        elif grade >=\
    \ 1.0:\n            letter_grades.append('D+')\n        elif grade >= 0.7:\n \
    \           letter_grades.append('D')\n        elif grade >= 0.0:\n          \
    \  letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    grades_sorted.reverse()\n    \n    grades_sorted = grades_sorted +\
    \ [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    \n    grades_sorted = grades_sorted\
    \ + [grades_sorted[0]]\n    \n    grades_sorted = grades_sorted + [grades_sorted[-1]]\n\
    \    \n    grades_sorted = grades_sorted + [grades_sorted[0]]\n    \n    grades_sorted\
    \ = grades_sorted + [grades_sorted[-1]]\n    ", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    grades_sorted_length = len(grades_sorted)\n    \n    letter_grades\
    \ = []\n    \n    for i in range(grades_sorted_length):\n        if grades_sorted[i]\
    \ < 3.0:\n            letter_grades.append('A+')\n        elif grades_sorted[i]\
    \ < 3.7:\n            letter_grades.append('A')\n        elif grades_sorted[i]\
    \ < 3.3:\n            letter_grades.append('A-')\n        elif grades_sorted[i]\
    \ < 3.0:\n            letter_grades.append('B+')\n        elif grades_sorted[i]\
    \ < 2.7:\n            letter_grades.append('B')\n        elif grades_sorted[i]\
    \ < 2.3:\n            letter_grades.append('B-')\n        elif grades_sorted[i]\
    \ < 2.0:\n            letter_grades.append('C+')\n        elif grades_sorted[i]\
    \ < 1.7:\n            letter_grades.append('C')\n        elif grades_sorted[i]\
    \ < 1.3:\n            letter_grades.append('C-')\n        elif grades_sorted[i]\
    \ < 1.0:\n            letter_grades.append('D+')\n        elif grades_sorted[i]\
    \ < 0.7:\n            letter_grades.append('D')\n        elif grades_sorted[i]\
    \ < 0.0:\n            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade > 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ > 2.7:\n            letter_grades.append('B')\n        elif grade > 2.3:\n \
    \           letter_grades.append('B-')\n        elif grade > 1.7:\n          \
    \  letter_grades.append('C')\n        elif grade > 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade > 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade > 0.7:\n            letter_grades.append('D')\n        elif grade > 0.0:\n\
    \            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades.sort()\n    \n    grades_length\
    \ = len(grades)\n    \n    if grades_length < 4:\n        return ['E']\n    \n\
    \    if grades_length < 5:\n        return ['D-']\n    \n    if grades_length\
    \ < 6:\n        return ['D']\n    \n    if grades_length < 7:\n        return\
    \ ['D+']\n    \n    if grades_length < 8:\n        return ['D', 'C-', 'C']\n \
    \   \n    if grades_length < 9:\n        return ['D+', 'C']\n    \n    if grades_length\
    \ < 10:\n        return ['D', 'C']\n    \n    if grades_length < 11:\n       \
    \ return ['D', 'C+']\n    \n    if grades_length < 12:\n        return ['D+',\
    \ 'C+']\n    \n    if grades_length < 13:\n        return ['D+', 'C']\n    \n\
    \    if grades_length < 14:\n        return ['D', 'C-']\n    \n    if grades_length\
    \ < 15:\n        return ['D', 'C']\n    \n    if grades_length < 16:\n       \
    \ return ['D', 'C+']\n    \n    if grades_length < 17:\n        return ['D+',\
    \ 'C-']\n    \n    if grades_length < 18:\n        return ['D+', 'C']\n    \n\
    \    if grades_length < 19:\n        return ['D', 'C-']\n    \n    if grades_length\
    \ < 20:\n        return ['D', 'C']\n    \n    if grades_length < 21:\n       \
    \ return ['D', 'C+']\n    \n    if grades_length < 22:\n        return ['D+',\
    \ 'C-']\n    \n    if grades_length < 23:\n        return ['D+', 'C']\n    \n\
    \    if grades_length < 24:\n        return ['D', 'C-']\n    \n    if grades_length\
    \ < 25:\n        return ['D', 'C']\n    \n    if grades_length < 26:\n       \
    \ return ['D', 'C+']\n    \n    if grades_length < 27:\n        return ['D+',\
    \ 'C-']\n    \n    if grades_length < 28:\n        return ['D+', 'C']\n    \n\
    \    if grades_length < 29:\n        return ['D', 'C-']\n    \n    if grades_length\
    \ < 30:\n        return ['D', 'C']\n    \n    if grades_length < 31:\n       \
    \ return ['D', 'C+']\n    \n    if grades_length < 32:\n        return ['D+',\
    \ 'C-']\n    \n    if grades_length < 33:\n        return ['D+', 'C']\n    \n\
    \    if grades_length < 34:\n        return ['D', 'C", "    \n    grades_sorted\
    \ = sorted(grades)\n    \n    letter_grades = []\n    \n    \n    for grade in\
    \ grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    grades_sorted_length = len(grades_sorted)\n\
    \    \n    letter_grades = []\n    \n    if grades_sorted_length < 4:\n      \
    \  letter_grades.append('E')\n        return letter_grades\n    \n    if grades_sorted_length\
    \ < 5:\n        letter_grades.append('D-')\n        return letter_grades\n   \
    \ \n    if grades_sorted_length < 6:\n        letter_grades.append('C-')\n   \
    \     return letter_grades\n    \n    if grades_sorted_length < 7:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_sorted_length < 8:\n      \
    \  letter_grades.append('B')\n        return letter_grades\n    \n    if grades_sorted_length\
    \ < 9:\n        letter_grades.append('B-')\n        return letter_grades\n   \
    \ \n    if grades_sorted_length < 10:\n        letter_grades.append('B+')\n  \
    \      return letter_grades\n    \n    if grades_sorted_length < 11:\n       \
    \ letter_grades.append('C')\n        return letter_grades\n    \n    if grades_sorted_length\
    \ < 12:\n        letter_grades.append('C+')\n        return letter_grades\n  \
    \  \n    if grades_sorted_length < 13:\n        letter_grades.append('C+')\n \
    \       return letter_grades\n    \n    if grades_sorted_length < 14:\n      \
    \  letter_grades.append('C')\n        return letter_grades\n    \n    if grades_sorted_length\
    \ < 15:\n        letter_grades.append('C')\n        return letter_grades\n   \
    \ \n    if grades_sorted_length < 16:\n        letter_grades.append('C')\n   \
    \     return letter_grades\n    \n    if grades_sorted_length < 17:\n        letter_grades.append('C')\n\
    \        return letter_grades\n    \n    if grades_sorted_length < 18:\n     \
    \   letter_grades.append('C')\n        return letter_grades\n    \n    if grades_sorted_length\
    \ < 19:\n        letter_grades.append('C')\n        return letter_grades\n   \
    \ \n    if grades_sorted_length < 20:\n        letter_grades.append('C')\n   \
    \     return letter_grades\n    \n    if grades_sorted_length < 21:\n        letter_grades.append('C')\n\
    \        return letter_grades\n    \n    if grades_sorted_length < 22:\n     \
    \   letter_grades.append('C')\n        return letter_grades\n    \n    if grades_sorted_length\
    \ < 23:\n        letter_grades.append('C')\n        return letter_grades\n   \
    \ \n    if grades_sorted_length < 24:\n        letter_grades.append('C')\n   \
    \     return letter_grades\n    \n    if grades_sorted_length < 25:\n        letter_grades.append('C",
  "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    \n    if grades_sorted[0] < 3.0:\n        letter_grades.append('A+')\n  \
    \  elif grades_sorted[0] < 3.3:\n        letter_grades.append('A')\n    elif grades_sorted[0]\
    \ < 3.7:\n        letter_grades.append('A-')\n    elif grades_sorted[0] < 4.0:\n\
    \        letter_grades.append('B+')\n    elif grades_sorted[0] < 2.7:\n      \
    \  letter_grades.append('B')\n    elif grades_sorted[0] < 2.3:\n        letter_grades.append('B-')\n\
    \    elif grades_sorted[0] < 2.0:\n        letter_grades.append('C+')\n    elif\
    \ grades_sorted[0] < 1.7:\n        letter_grades.append('C')\n    elif grades_sorted[0]\
    \ < 1.3:\n        letter_grades.append('C-')\n    elif grades_sorted[0] < 1.0:\n\
    \        letter_grades.append('D+')\n    elif grades_sorted[0] < 0.7:\n      \
    \  letter_grades.append('D')\n    elif grades_sorted[0] < 0.0:\n        letter_grades.append('D-')\n\
    \    else:\n        letter_grades.append('E')\n    \n    return letter_grades\n",
  "    \n    grades.sort()\n    \n    letter_grades = []\n    \n    for grade in grades:\n\
    \        if grade >= 3.0:\n            letter_grades.append('A+')\n        elif\
    \ grade >= 2.7:\n            letter_grades.append('B')\n        elif grade >=\
    \ 2.3:\n            letter_grades.append('B-')\n        elif grade >= 1.7:\n \
    \           letter_grades.append('C')\n        elif grade >= 1.3:\n          \
    \  letter_grades.append('C-')\n        elif grade >= 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n     \
    \       letter_grades.append('E')\n    \n    return letter_grades\n", "    \n\
    \    letter_grades = []\n    \n    for grade in grades:\n        if grade < 3.0:\n\
    \            letter_grades.append('A')\n        elif grade < 4.0:\n          \
    \  letter_grades.append('A-')\n        elif grade < 5.0:\n            letter_grades.append('B+')\n\
    \        elif grade < 6.0:\n            letter_grades.append('B')\n        elif\
    \ grade < 7.0:\n            letter_grades.append('B-')\n        elif grade < 8.0:\n\
    \            letter_grades.append('C+')\n        elif grade < 9.0:\n         \
    \   letter_grades.append('C')\n        elif grade < 10.0:\n            letter_grades.append('C-')\n\
    \        elif grade < 11.0:\n            letter_grades.append('D+')\n        elif\
    \ grade < 12.0:\n            letter_grades.append('D')\n        elif grade < 13.0:\n\
    \            letter_grades.append('D-')\n        elif grade < 14.0:\n        \
    \    letter_grades.append('E')\n        else:\n            letter_grades.append('F')\n\
    \    \n    return letter_grades\n", "    \n    letter_grades = []\n    \n    for\
    \ grade in grades:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    letter_grades = []\n    \n    for grade in grades:\n     \
    \   if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.7:\n            letter_grades.append('B')\n        elif grade >= 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade >= 1.7:\n        \
    \    letter_grades.append('C')\n        elif grade >= 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade >= 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade >= 0.7:\n            letter_grades.append('D')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades.sort()\n    grades_length\
    \ = len(grades)\n    \n    if grades_length < 1:\n        return []\n    \n  \
    \  if grades_length == 1:\n        return ['A+']\n    \n    if grades_length ==\
    \ 2:\n        return ['A+', 'B']\n    \n    if grades_length == 3:\n        return\
    \ ['A+', 'B+', 'C']\n    \n    if grades_length == 4:\n        return ['A+', 'B+',\
    \ 'C+', 'D']\n    \n    if grades_length == 5:\n        return ['A+', 'B+', 'C+',\
    \ 'D+', 'E']\n    \n    if grades_length == 6:\n        return ['A+', 'B+', 'C+',\
    \ 'D+', 'E+', 'F']\n    \n    if grades_length == 7:\n        return ['A+', 'B+',\
    \ 'C+', 'D+', 'E+', 'F+', 'G']\n    \n    if grades_length == 8:\n        return\
    \ ['A+', 'B+', 'C+', 'D+', 'E+', 'F+', 'G+', 'H']\n    \n    if grades_length\
    \ == 9:\n        return ['A+', 'B+', 'C+', 'D+', 'E+', 'F+', 'G+', 'H+', 'I']\n\
    \    \n    if grades_length == 10:\n        return ['A+', 'B+', 'C+', 'D+', 'E+',\
    \ 'F+', 'G+', 'H+', 'I+', 'J']\n    \n    if grades_length == 11:\n        return\
    \ ['A+', 'B+', 'C+', 'D+', 'E+', 'F+', 'G+', 'H+', 'I+', 'J+', 'K']\n    \n  \
    \  if grades_length == 12:\n        return ['A+', 'B+', 'C+', 'D+', 'E+', 'F+',\
    \ 'G+', 'H+', 'I+', 'J+', 'K+', 'L']\n    \n    if grades_length == 13:\n    \
    \    return ['A+', 'B+', 'C+', 'D+', 'E+', 'F+', 'G+', 'H+', 'I+', 'J+', 'K+',\
    \ 'L+', 'M']\n    \n    if grades_length == 14:\n        return ['A+', 'B+', 'C+',\
    \ 'D+', 'E+', 'F+', 'G+', 'H+', 'I+', 'J+', 'K+', 'L+', 'M+', 'N']\n    \n   \
    \ if grades_length == 15:\n        return ['A+', 'B+', 'C+', 'D+', 'E+', 'F+',\
    \ 'G+', 'H+', 'I+', 'J+', 'K+', 'L+', 'M+', 'N+', 'O']\n    \n    if grades_length\
    \ == 16:\n        return ['A+', 'B+', 'C+', 'D+', 'E+', 'F+', 'G+', 'H+', 'I+',\
    \ 'J+', 'K+', 'L+', 'M+', 'N+', 'O+", "    \n    letter_grades = []\n    \n  \
    \  for grade in grades:\n        if grade < 3.0:\n            letter_grades.append('A')\n\
    \        elif grade < 3.7:\n            letter_grades.append('A-')\n        elif\
    \ grade < 4.0:\n            letter_grades.append('B+')\n        elif grade < 4.7:\n\
    \            letter_grades.append('B')\n        elif grade < 5.0:\n          \
    \  letter_grades.append('B-')\n        elif grade < 5.7:\n            letter_grades.append('C+')\n\
    \        elif grade < 6.0:\n            letter_grades.append('C')\n        elif\
    \ grade < 6.7:\n            letter_grades.append('C-')\n        elif grade < 7.0:\n\
    \            letter_grades.append('D+')\n        elif grade < 7.7:\n         \
    \   letter_grades.append('D')\n        elif grade < 8.0:\n            letter_grades.append('D-')\n\
    \        elif grade < 8.7:\n            letter_grades.append('E')\n        else:\n\
    \            letter_grades.append('F')\n    \n    return letter_grades\n", " \
    \   \n    grades.sort()\n    grades_length = len(grades)\n    \n    if grades_length\
    \ == 0:\n        return []\n    \n    if grades_length == 1:\n        return [\"\
    A+\"]\n    \n    if grades_length == 2:\n        if grades[0] > grades[1]:\n \
    \           return [\"A+\"]\n        else:\n            return [\"A\", \"A-\"\
    ]\n    \n    if grades_length == 3:\n        if grades[0] > grades[1] and grades[0]\
    \ > grades[2]:\n            return [\"A+\"]\n        elif grades[1] > grades[2]:\n\
    \            return [\"A\", \"A-\"]\n        else:\n            return [\"B+\"\
    , \"B\", \"B-\"]\n    \n    if grades_length == 4:\n        if grades[0] > grades[1]\
    \ and grades[0] > grades[2] and grades[0] > grades[3]:\n            return [\"\
    A+\"]\n        elif grades[1] > grades[2] and grades[1] > grades[3]:\n       \
    \     return [\"A\", \"A-\"]\n        elif grades[2] > grades[3]:\n          \
    \  return [\"B+\", \"B\", \"B-\"]\n        else:\n            return [\"C+\",\
    \ \"C\", \"C-\"]\n    \n    if grades_length == 5:\n        if grades[0] > grades[1]\
    \ and grades[0] > grades[2] and grades[0] > grades[3] and grades[0] > grades[4]:\n\
    \            return [\"A+\"]\n        elif grades[1] > grades[2] and grades[1]\
    \ > grades[3] and grades[1] > grades[4]:\n            return [\"A\", \"A-\"]\n\
    \        elif grades[2] > grades[3] and grades[2] > grades[4]:\n            return\
    \ [\"B+\", \"B\", \"B-\"]\n        elif grades[3] > grades[4]:\n            return\
    \ [\"C+\", \"C\", \"C-\"]\n        else:\n            return [\"D+\", \"D\", \"\
    D-\"]\n    \n    if grades_length == 6:\n        if grades[0] > grades[1] and\
    \ grades[0] > grades[2] and grades[0] > grades[3] and grades[0] > grades[4] and\
    \ grades[0] > grades[5]:\n            return [\"A+\"]\n        elif grades[1]\
    \ > grades[2] and grades[1] > grades[3] and grades[1] > grades[4] and grades[1]\
    \ > grades[5]:\n            return [\"A\", \"A-\"]\n        elif grades[2] > grades[3]\
    \ and grades[2] > grades[4] and grades[2] > grades[5]:\n            return [\"\
    B+\", \"B\", \"B-\"]\n        elif grades[3] > grades[4] and grades[3] > grades[5]:\n\
    \            return [\"C+\", \"C\", \"C-\"]\n        elif grades[4] > grades[5]:\n\
    \            return [\"D+\", \"D\", \"D-\"]\n        else:\n            return\
    \ [\"E", "    \n    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n\
    \    grades_sorted = grades_sorted[:5]\n    \n    letter_grades = []\n    \n \
    \   for grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    letter_grades = []\n    \n    for grade in grades:\n        if grade\
    \ >= 3.0:\n            letter_grades.append('A+')\n        elif grade >= 2.7:\n\
    \            letter_grades.append('B')\n        elif grade >= 2.3:\n         \
    \   letter_grades.append('B-')\n        elif grade >= 1.7:\n            letter_grades.append('C')\n\
    \        elif grade >= 1.3:\n            letter_grades.append('C-')\n        elif\
    \ grade >= 1.0:\n            letter_grades.append('D+')\n        elif grade >=\
    \ 0.7:\n            letter_grades.append('D')\n        elif grade >= 0.0:\n  \
    \          letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n</cell>\n<cell>", "    \n    grades.sort()\n\
    \    \n    grades_length = len(grades)\n    \n    letter_grades = []\n    \n \
    \   if grades_length == 0:\n        letter_grades.append('E')\n        return\
    \ letter_grades\n    \n    if grades_length == 1:\n        letter_grades.append('D-'\
    \ if grades[0] > 0 else 'D')\n        return letter_grades\n    \n    if grades_length\
    \ == 2:\n        letter_grades.append('C-' if grades[0] > 0 and grades[1] > 0\
    \ else 'C')\n        return letter_grades\n    \n    if grades_length == 3:\n\
    \        letter_grades.append('B-' if grades[0] > 0 and grades[1] > 0 and grades[2]\
    \ > 0 else 'B')\n        return letter_grades\n    \n    if grades_length == 4:\n\
    \        letter_grades.append('A-' if grades[0] > 0 and grades[1] > 0 and grades[2]\
    \ > 0 and grades[3] > 0 else 'A')\n        return letter_grades\n    \n    if\
    \ grades_length == 5:\n        letter_grades.append('A+' if grades[0] > 0 and\
    \ grades[1] > 0 and grades[2] > 0 and grades[3] > 0 and grades[4] > 0 else 'A')\n\
    \        return letter_grades\n    \n    if grades_length == 6:\n        letter_grades.append('A-'\
    \ if grades[0] > 0 and grades[1] > 0 and grades[2] > 0 and grades[3] > 0 and grades[4]\
    \ > 0 and grades[5] > 0 else 'A')\n        return letter_grades\n    \n    if\
    \ grades_length == 7:\n        letter_grades.append('B+' if grades[0] > 0 and\
    \ grades[1] > 0 and grades[2] > 0 and grades[3] > 0 and grades[4] > 0 and grades[5]\
    \ > 0 and grades[6] > 0 else 'B')\n        return letter_grades\n    \n    if\
    \ grades_length == 8:\n        letter_grades.append('B-' if grades[0] > 0 and\
    \ grades[1] > 0 and grades[2] > 0 and grades[3] > 0 and grades[4] > 0 and grades[5]\
    \ > 0 and grades[6] > 0 and grades[7] > 0 else 'B')\n        return letter_grades\n\
    \    \n    if grades_length == 9:\n        letter_grades.append('C+' if grades[0]\
    \ > 0 and grades[1] > 0 and grades[2] > 0 and grades[3] > 0 and grades[4] > 0\
    \ and grades[5] > 0 and grades[6] > 0 and grades[7] > 0 and grades[8] > 0 else\
    \ 'C')\n        return letter_grades\n    \n    if grades_length == 10:\n    \
    \    letter_grades.append('C-' if grades[0] > 0 and grades[1] > 0 and grades[2]\
    \ > 0 and grades[3] > 0 and grades[4] > 0 and grades[5] > 0 and grades[6] > 0\
    \ and grades[7", "    \n    grades.sort()\n    \n    grades_length = len(grades)\n\
    \    \n    if grades_length == 0:\n        return []\n    \n    if grades_length\
    \ == 1:\n        return [\"A+\"]\n    \n    if grades_length == 2:\n        if\
    \ grades[0] > grades[1]:\n            return [\"A+\"]\n        else:\n       \
    \     return [\"A-\"]\n    \n    if grades_length == 3:\n        if grades[0]\
    \ > grades[1] and grades[0] > grades[2]:\n            return [\"A+\"]\n      \
    \  elif grades[1] > grades[2]:\n            return [\"A-\"]\n        else:\n \
    \           return [\"B+\"]\n    \n    if grades_length == 4:\n        if grades[0]\
    \ > grades[1] and grades[0] > grades[2] and grades[0] > grades[3]:\n         \
    \   return [\"A+\"]\n        elif grades[1] > grades[2] and grades[1] > grades[3]:\n\
    \            return [\"A-\"]\n        elif grades[2] > grades[3]:\n          \
    \  return [\"B+\"]\n        else:\n            return [\"B-\"]\n    \n    if grades_length\
    \ == 5:\n        if grades[0] > grades[1] and grades[0] > grades[2] and grades[0]\
    \ > grades[3] and grades[0] > grades[4]:\n            return [\"A+\"]\n      \
    \  elif grades[1] > grades[2] and grades[1] > grades[3] and grades[1] > grades[4]:\n\
    \            return [\"A-\"]\n        elif grades[2] > grades[3] and grades[2]\
    \ > grades[4]:\n            return [\"B+\"]\n        elif grades[3] > grades[4]:\n\
    \            return [\"B-\"]\n        else:\n            return [\"C+\"]\n   \
    \ \n    if grades_length == 6:\n        if grades[0] > grades[1] and grades[0]\
    \ > grades[2] and grades[0] > grades[3] and grades[0] > grades[4] and grades[0]\
    \ > grades[5]:\n            return [\"A+\"]\n        elif grades[1] > grades[2]\
    \ and grades[1] > grades[3] and grades[1] > grades[4] and grades[1] > grades[5]:\n\
    \            return [\"A-\"]\n        elif grades[2] > grades[3] and grades[2]\
    \ > grades[4] and grades[2] > grades[5]:\n            return [\"B+\"]\n      \
    \  elif grades[3] > grades[4] and grades[3] > grades[5]:\n            return [\"\
    B-\"]\n        elif grades[4] > grades[5]:\n            return [\"C+\"]\n    \
    \    else:\n            return [\"C-\"]\n    \n    if grades_length == 7:\n  \
    \      if grades[0] > grades[1] and grades[0] > grades[2] and grades[0] > grades[3]\
    \ and grades[0] > grades[4] and grades[0] > grades[5", "    \n    grades.sort()\n\
    \    \n    letter_grades = []\n    \n    for grade in grades:\n        if grade\
    \ >= 3.0:\n            letter_grades.append('A+')\n        elif grade >= 2.7:\n\
    \            letter_grades.append('B')\n        elif grade >= 2.3:\n         \
    \   letter_grades.append('B-')\n        elif grade >= 1.7:\n            letter_grades.append('C')\n\
    \        elif grade >= 1.3:\n            letter_grades.append('C-')\n        elif\
    \ grade >= 1.0:\n            letter_grades.append('D+')\n        elif grade >=\
    \ 0.7:\n            letter_grades.append('D')\n        elif grade >= 0.0:\n  \
    \          letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \            \n    return letter_grades\n</cell>\n<cell>", "    \n    grades_sorted\
    \ = sorted(grades)\n    \n    letter_grades = []\n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    grades_sorted\
    \ = sorted(grades)\n    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n\
    \        if grade >= 3.0:\n            letter_grades.append('A+')\n        elif\
    \ grade >= 2.0:\n            letter_grades.append('A')\n        elif grade >=\
    \ 1.0:\n            letter_grades.append('A-')\n        elif grade >= 0.0:\n \
    \           letter_grades.append('B+')\n        elif grade >= 0.0:\n         \
    \   letter_grades.append('B')\n        elif grade >= 0.0:\n            letter_grades.append('B-')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('C+')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('C')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('C-')\n        elif grade >= 0.0:\n \
    \           letter_grades.append('D+')\n        elif grade >= 0.0:\n         \
    \   letter_grades.append('D')\n        elif grade >= 0.0:\n            letter_grades.append('D-')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('E')\n        else:\n\
    \            letter_grades.append('F')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n    grades_sorted\
    \ = grades_sorted[:5]\n    \n    grades_sorted = [str(grade) for grade in grades_sorted]\n\
    \    \n    grades_sorted = [grades_sorted[0], grades_sorted[1], grades_sorted[2],\
    \ grades_sorted[3], grades_sorted[4]]\n    \n    grades_sorted = [grades_sorted[0]\
    \ + grades_sorted[1], grades_sorted[2] + grades_sorted[3], grades_sorted[4] +\
    \ grades_sorted[5]]\n    \n    grades_sorted = [grades_sorted[0] + grades_sorted[1],\
    \ grades_sorted[2] + grades_sorted[3]]\n    \n    grades_sorted = [grades_sorted[0]\
    \ + grades_sorted[1], grades_sorted[2] + grades_sorted[3] + grades_sorted[4]]\n\
    \    \n    grades_sorted = [grades_sorted[0] + grades_sorted[1], grades_sorted[2]\
    \ + grades_sorted[3] + grades_sorted[4] + grades_sorted[5]]\n    \n    grades_sorted\
    \ = [grades_sorted[0] + grades_sorted[1], grades_sorted[2] + grades_sorted[3]\
    \ + grades_sorted[4] + grades_sorted[5] + grades_sorted[6]]\n    \n    grades_sorted\
    \ = [grades_sorted[0] + grades_sorted[1], grades_sorted[2] + grades_sorted[3]\
    \ + grades_sorted[4] + grades_sorted[5] + grades_sorted[6] + grades_sorted[7]]\n\
    \    \n    grades_sorted = [grades_sorted[0] + grades_sorted[1], grades_sorted[2]\
    \ + grades_sorted[3] + grades_sorted[4] + grades_sorted[5] + grades_sorted[6]\
    \ + grades_sorted[7] + grades_sorted[8]]\n    \n    grades_sorted = [grades_sorted[0]\
    \ + grades_sorted[1], grades_sorted[2] + grades_sorted[3] + grades_sorted[4] +\
    \ grades_sorted[5] + grades_sorted[6] + grades_sorted[7] + grades_sorted[8] +\
    \ grades_sorted[9]]\n    \n    grades_sorted = [grades_sorted[0] + grades_sorted[1],\
    \ grades_sorted[2] + grades_sorted[3] + grades_sorted[4] + grades_sorted[5] +\
    \ grades_sorted[6] + grades_sorted[7] + grades_sorted[8] + grades_sorted[9] +\
    \ grades_sorted[10]]\n    \n    grades_sorted = [grades_sorted[0] + grades_sorted[1],\
    \ grades_sorted[2] + grades_sorted[3] + grades_sorted[4] + grades_sorted[5] +\
    \ grades_sorted[6] + ", "    \n    grades.sort()\n    grades_length = len(grades)\n\
    \    \n    if grades_length < 2:\n        return ['E']\n    \n    if grades_length\
    \ == 2:\n        if grades[0] > grades[1]:\n            return ['A+', 'B']\n \
    \       else:\n            return ['A', 'B']\n    \n    if grades_length == 3:\n\
    \        if grades[0] > grades[1] and grades[0] > grades[2]:\n            return\
    \ ['A+', 'B+', 'C']\n        elif grades[0] > grades[1] and grades[0] < grades[2]:\n\
    \            return ['A+', 'B', 'C']\n        elif grades[0] < grades[1] and grades[0]\
    \ > grades[2]:\n            return ['A', 'C+', 'B']\n        elif grades[0] <\
    \ grades[1] and grades[0] < grades[2]:\n            return ['A', 'C', 'B']\n \
    \       elif grades[0] == grades[1]:\n            return ['A', 'B+', 'C']\n  \
    \      elif grades[0] == grades[2]:\n            return ['A', 'B', 'C+']\n   \
    \     elif grades[0] == grades[3]:\n            return ['A', 'B', 'C']\n     \
    \   elif grades[0] < grades[1] and grades[1] > grades[2]:\n            return\
    \ ['A+', 'B+', 'C-']\n        elif grades[0] < grades[1] and grades[1] < grades[2]:\n\
    \            return ['A+', 'B', 'C-']\n        elif grades[0] < grades[2] and\
    \ grades[1] > grades[2]:\n            return ['A+', 'B-C', 'A-']\n        elif\
    \ grades[0] < grades[2] and grades[1] < grades[2]:\n            return ['A+',\
    \ 'B-C', 'A']\n        elif grades[0] < grades[3] and grades[1] > grades[2]:\n\
    \            return ['A+', 'B-C+', 'A']\n        elif grades[0] < grades[3] and\
    \ grades[1] < grades[2]:\n            return ['A+', 'B-C+', 'A+']\n        elif\
    \ grades[0] < grades[4] and grades[1] > grades[2]:\n            return ['A+',\
    \ 'B-C+', 'A+']\n        elif grades[0] < grades[4] and grades[1] < grades[2]:\n\
    \            return ['A+', 'B-C+', 'A']\n        elif grades[0] < grades[5] and\
    \ grades[1] > grades[2]:\n            return ['A+', 'B-C+', 'A']\n        elif\
    \ grades[0] < grades[5] and grades[1] < grades[2]:\n            return ['A+',\
    \ 'B-C+', 'A+']\n        elif grades[0] < grades[6] and grades[1] > grades[2]:\n\
    \            return ['A+', 'B-C+', 'A']\n        elif grades[0] < grades[6] and\
    \ grades[1] < grades[2]:\n            return ['A+', 'B-C+', 'A+']\n        elif\
    \ grades[0] == grades[1] and grades[1] > grades[2]:\n            return ['A+',\
    \ 'B', 'C+']\n        elif grades[0] == grades[1] and grades[1] < grade", "  \
    \  \n    grades.sort()\n    \n    grades_len = len(grades)\n    \n    letter_grades\
    \ = []\n    \n    \n    if grades_len == 0:\n        letter_grades.append('E')\n\
    \        return letter_grades\n    \n    if grades_len == 1:\n        letter_grades.append('D-')\n\
    \        return letter_grades\n    \n    if grades_len == 2:\n        letter_grades.append('C-')\n\
    \        return letter_grades\n    \n    if grades_len == 3:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 4:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 5:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 6:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 7:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 8:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 9:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 10:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 11:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 12:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 13:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 14:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 15:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 16:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 17:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 18:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 19:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 20:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 21:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 22:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_len == 23:", "    \n    grades.sort()\n\
    \    \n    letter_grades = []\n    \n    for grade in grades:\n        if grade\
    \ >= 3.0:\n            letter_grades.append('A+')\n        elif grade >= 2.0:\n\
    \            letter_grades.append('A')\n        elif grade >= 1.7:\n         \
    \   letter_grades.append('A-')\n        elif grade >= 1.3:\n            letter_grades.append('B+')\n\
    \        elif grade >= 1.0:\n            letter_grades.append('B')\n        elif\
    \ grade >= 0.7:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('C+')\n        elif grade >= 0.0:\n \
    \           letter_grades.append('C')\n        elif grade >= 0.0:\n          \
    \  letter_grades.append('C-')\n        elif grade >= 0.0:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('D-')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('E')\n        else:\n            letter_grades.append('F')\n\
    \            \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    grades_sorted.reverse()\n    \n    grades_sorted_length = len(grades_sorted)\n\
    \    \n    letter_grades = []\n    \n    if grades_sorted_length >= 10:\n    \
    \    letter_grades.append('A+')\n        grades_sorted_length -= 10\n    \n  \
    \  if grades_sorted_length >= 7:\n        letter_grades.append('A')\n        grades_sorted_length\
    \ -= 7\n    \n    if grades_sorted_length >= 5:\n        letter_grades.append('A-')\n\
    \        grades_sorted_length -= 5\n    \n    if grades_sorted_length >= 3:\n\
    \        letter_grades.append('B+')\n        grades_sorted_length -= 3\n    \n\
    \    if grades_sorted_length >= 1:\n        letter_grades.append('B')\n      \
    \  grades_sorted_length -= 1\n    \n    if grades_sorted_length >= 0:\n      \
    \  letter_grades.append('B-')\n        grades_sorted_length -= 1\n    \n    if\
    \ grades_sorted_length == 0:\n        letter_grades.append('C')\n        grades_sorted_length\
    \ -= 1\n    \n    if grades_sorted_length >= -1:\n        letter_grades.append('C+')\n\
    \        grades_sorted_length -= 1\n    \n    if grades_sorted_length >= -2:\n\
    \        letter_grades.append('D+')\n        grades_sorted_length -= 2\n    \n\
    \    if grades_sorted_length >= -3:\n        letter_grades.append('D')\n     \
    \   grades_sorted_length -= 3\n    \n    if grades_sorted_length >= -4:\n    \
    \    letter_grades.append('D-')\n        grades_sorted_length -= 4\n    \n   \
    \ if grades_sorted_length >= -5:\n        letter_grades.append('E')\n        grades_sorted_length\
    \ -= 5\n    \n    return letter_grades\n", "    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    \n    grades_sorted = sorted(grades)\n    \n\
    \    grades_sorted_reverse = sorted(grades_sorted, reverse=True)\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.reverse()\n\
    \    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_", "    \n\
    \    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n    for\
    \ grade in grades_sorted:\n        if grade >= 3.0 and grade <= 3.7:\n       \
    \     letter_grades.append('A+')\n        elif grade >= 3.7 and grade <= 3.3:\n\
    \            letter_grades.append('A')\n        elif grade >= 3.3 and grade <=\
    \ 3.0:\n            letter_grades.append('A-')\n        elif grade >= 3.0 and\
    \ grade <= 2.7:\n            letter_grades.append('B+')\n        elif grade >=\
    \ 2.7 and grade <= 2.3:\n            letter_grades.append('B')\n        elif grade\
    \ >= 2.3 and grade <= 2.0:\n            letter_grades.append('B-')\n        elif\
    \ grade >= 2.0 and grade <= 1.7:\n            letter_grades.append('C+')\n   \
    \     elif grade >= 1.7 and grade <= 1.3:\n            letter_grades.append('C')\n\
    \        elif grade >= 1.3 and grade <= 1.0:\n            letter_grades.append('C-')\n\
    \        elif grade >= 1.0 and grade <= 0.7:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7 and grade <= 0.0:\n            letter_grades.append('D')\n\
    \        elif grade <= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    grades_sorted_reverse = sorted(grades_sorted,\
    \ reverse=True)\n    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    ", "    \n    letter_grades = []\n    \n    for grade in grades:\n\
    \        if grade >= 3.0:\n            letter_grades.append('A+')\n        elif\
    \ grade >= 2.7:\n            letter_grades.append('B')\n        elif grade >=\
    \ 2.3:\n            letter_grades.append('B-')\n        elif grade >= 1.7:\n \
    \           letter_grades.append('C')\n        elif grade >= 1.3:\n          \
    \  letter_grades.append('C-')\n        elif grade >= 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n     \
    \       letter_grades.append('E')\n            \n    return letter_grades\n  \
    \  \n    ", "    \n    grades.sort()\n    \n    letter_grades = []\n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    ", "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades\
    \ = []\n    \n    for grade in grades_sorted:\n        if grade >= 3.0:\n    \
    \        letter_grades.append('A+')\n        elif grade >= 2.7:\n            letter_grades.append('B')\n\
    \        elif grade >= 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade >= 1.7:\n            letter_grades.append('C')\n        elif grade >=\
    \ 1.3:\n            letter_grades.append('C-')\n        elif grade >= 1.0:\n \
    \           letter_grades.append('D+')\n        elif grade >= 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade >= 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n\
    \    \n    ", "    \n    grades_sorted = sorted(grades)\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    ", "    \n\
    \    grades.sort()\n    \n    letter_grades = []\n    \n    for grade in grades:\n\
    \        if grade > 3.7:\n            letter_grades.append('A+')\n        elif\
    \ grade > 3.3:\n            letter_grades.append('A-')\n        elif grade > 3.0:\n\
    \            letter_grades.append('B+')\n        elif grade > 2.7:\n         \
    \   letter_grades.append('B')\n        elif grade > 2.3:\n            letter_grades.append('B-')\n\
    \        elif grade > 2.0:\n            letter_grades.append('C+')\n        elif\
    \ grade > 1.7:\n            letter_grades.append('C')\n        elif grade > 1.3:\n\
    \            letter_grades.append('C-')\n        elif grade > 1.0:\n         \
    \   letter_grades.append('D+')\n        elif grade > 0.7:\n            letter_grades.append('D')\n\
    \        elif grade > 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    grades.sort()\n    grades_len = len(grades)\n    \n    if\
    \ grades_len < 1:\n        return ['E']\n    \n    if grades_len == 1:\n     \
    \   return ['A+']\n    \n    if grades_len == 2:\n        if grades[0] > grades[1]:\n\
    \            return ['A+', 'B']\n        else:\n            return ['A', 'B']\n\
    \    \n    if grades_len == 3:\n        if grades[0] > grades[1] and grades[0]\
    \ > grades[2]:\n            return ['A+', 'B', 'C']\n        elif grades[1] >\
    \ grades[0] and grades[1] > grades[2]:\n            return ['A', 'B', 'C']\n \
    \       elif grades[2] > grades[0] and grades[2] > grades[1]:\n            return\
    \ ['A', 'B', 'C-']\n        elif grades[0] > grades[1] and grades[0] > grades[2]:\n\
    \            return ['A+', 'B', 'C-']\n        elif grades[1] > grades[0] and\
    \ grades[1] > grades[2]:\n            return ['A', 'B', 'C-']\n        elif grades[2]\
    \ > grades[0] and grades[2] > grades[1]:\n            return ['A', 'B', 'C-']\n\
    \        elif grades[0] > grades[1] and grades[0] > grades[2]:\n            return\
    \ ['A+', 'B', 'C-']\n        elif grades[1] > grades[0] and grades[1] > grades[2]:\n\
    \            return ['A', 'B', 'C-']\n        elif grades[2] > grades[0] and grades[2]\
    \ > grades[1]:\n            return ['A', 'B', 'C-']\n        elif grades[0] >\
    \ grades[1] and grades[0] > grades[2]:\n            return ['A+', 'B', 'C-']\n\
    \        elif grades[1] > grades[0] and grades[1] > grades[2]:\n            return\
    \ ['A', 'B', 'C-']\n        elif grades[2] > grades[0] and grades[2] > grades[1]:\n\
    \            return ['A', 'B', 'C-']\n        elif grades[0] > grades[1] and grades[0]\
    \ > grades[2]:\n            return ['A+', 'B', 'C-']\n        elif grades[1] >\
    \ grades[0] and grades[1] > grades[2]:\n            return ['A', 'B', 'C-']\n\
    \        elif grades[2] > grades[0] and grades[2] > grades[1]:\n            return\
    \ ['A', 'B', 'C-']\n        elif grades[0] > grades[1] and grades[0] > grades[2]:\n\
    \            return ['A+', 'B', 'C-']\n        elif grades[1] > grades[0] and\
    \ grades[1] > grades[2]:\n            return ['A', 'B', 'C-']\n        elif grades[2]\
    \ > grades[0] and grades[2] > grades[1]:\n            return ['A', 'B', 'C-']\n\
    \        elif grades[0] > grades[1] and grades[0] > grades[2]:\n            return\
    \ ['A+', 'B', 'C-']\n        elif grades[1] > grades[0] and grades[1] > grades[2]:\n\
    \            return ['A', 'B', 'C", "    \n    grades_sorted = sorted(grades)\n\
    \    grades_sorted.reverse()\n    \n    grades_sorted_len = len(grades_sorted)\n\
    \    \n    letter_grades = []\n    \n    for i in range(grades_sorted_len):\n\
    \        if grades_sorted[i] >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grades_sorted[i] >= 2.7:\n            letter_grades.append('B')\n\
    \        elif grades_sorted[i] >= 2.3:\n            letter_grades.append('B-')\n\
    \        elif grades_sorted[i] >= 1.7:\n            letter_grades.append('C')\n\
    \        elif grades_sorted[i] >= 1.3:\n            letter_grades.append('C-')\n\
    \        elif grades_sorted[i] >= 1.0:\n            letter_grades.append('D+')\n\
    \        elif grades_sorted[i] >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grades_sorted[i] >= 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n\
    </cell>\n<cell>", "    \n    letter_grades = []\n    \n    for grade in grades:\n\
    \        if grade >= 3.0:\n            letter_grades.append('A+')\n        elif\
    \ grade >= 2.7:\n            letter_grades.append('B')\n        elif grade >=\
    \ 2.3:\n            letter_grades.append('B-')\n        elif grade >= 1.7:\n \
    \           letter_grades.append('C')\n        elif grade >= 1.3:\n          \
    \  letter_grades.append('C-')\n        elif grade >= 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n     \
    \       letter_grades.append('E')\n    \n    return letter_grades\n", "    \n\
    \    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n    for\
    \ grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.0:\n            letter_grades.append('A')\n        elif\
    \ grade >= 1.7:\n            letter_grades.append('A-')\n        elif grade >=\
    \ 1.3:\n            letter_grades.append('B+')\n        elif grade >= 1.0:\n \
    \           letter_grades.append('B')\n        elif grade >= 0.7:\n          \
    \  letter_grades.append('B-')\n        elif grade >= 0.0:\n            letter_grades.append('C+')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('C')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('C-')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('D+')\n        elif grade >= 0.0:\n \
    \           letter_grades.append('D')\n        elif grade >= 0.0:\n          \
    \  letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \            \n    return letter_grades\n", "    \n    letter_grades = []\n  \
    \  \n    for grade in grades:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    grades_sorted = sorted(grades)\n    \n    grades_sorted_length\
    \ = len(grades_sorted)\n    \n    letter_grades = []\n    \n    if grades_sorted_length\
    \ < 7:\n        letter_grades.append('E')\n    elif grades_sorted_length < 9:\n\
    \        letter_grades.append('D-') \n    elif grades_sorted_length < 11:\n  \
    \      letter_grades.append('C-')\n    elif grades_sorted_length < 13:\n     \
    \   letter_grades.append('B-')\n    elif grades_sorted_length < 15:\n        letter_grades.append('B-')\n\
    \    elif grades_sorted_length < 17:\n        letter_grades.append('B-')\n   \
    \ elif grades_sorted_length < 19:\n        letter_grades.append('B-')\n    elif\
    \ grades_sorted_length < 21:\n        letter_grades.append('B-')\n    elif grades_sorted_length\
    \ < 23:\n        letter_grades.append('B-')\n    elif grades_sorted_length < 25:\n\
    \        letter_grades.append('B-')\n    elif grades_sorted_length < 27:\n   \
    \     letter_grades.append('B-')\n    elif grades_sorted_length < 29:\n      \
    \  letter_grades.append('B-')\n    elif grades_sorted_length < 31:\n        letter_grades.append('B-')\n\
    \    elif grades_sorted_length < 33:\n        letter_grades.append('B-')\n   \
    \ elif grades_sorted_length < 35:\n        letter_grades.append('B-')\n    elif\
    \ grades_sorted_length < 37:\n        letter_grades.append('B-')\n    elif grades_sorted_length\
    \ < 39:\n        letter_grades.append('B-')\n    elif grades_sorted_length < 41:\n\
    \        letter_grades.append('B-')\n    elif grades_sorted_length < 43:\n   \
    \     letter_grades.append('B-')\n    elif grades_sorted_length < 45:\n      \
    \  letter_grades.append('B-')\n    elif grades_sorted_length < 47:\n        letter_grades.append('B-')\n\
    \    elif grades_sorted_length < 49:\n        letter_grades.append('B-')\n   \
    \ elif grades_sorted_length < 51:\n        letter_grades.append('B-')\n    elif\
    \ grades_sorted_length < 53:\n        letter_grades.append('B-')\n    elif grades_sorted_length\
    \ < 55:\n        letter_grades.append('B-')\n    elif grades_sorted_length < 57:\n\
    \        letter_grades.append('B-')\n    elif grades_sorted_length < 59:\n   \
    \     letter_grades.append('B-')\n    elif grades_sorted_length < 61:\n      \
    \  letter_grades.append('B-')\n    elif grades_sorted_length < 63:\n        letter_grades.append('B-')\n\
    \    elif grades_sorted_length < 65:\n        letter_grades.append('B-')\n   \
    \ elif grades_sorted_length < 67:", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    grades_sorted.reverse()\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n\
    \    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n    \n    grades_sorted.append(0)\n\
    \    ", "    \n    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n\
    \    \n    grades_sorted_length = len(grades_sorted)\n    \n    letter_grades\
    \ = []\n    \n    for i in range(grades_sorted_length):\n        \n        if\
    \ grades_sorted[i] < 3.0:\n            letter_grades.append('A')\n        elif\
    \ grades_sorted[i] < 3.7:\n            letter_grades.append('A-')\n        elif\
    \ grades_sorted[i] < 3.3:\n            letter_grades.append('B+')\n        elif\
    \ grades_sorted[i] < 3.2:\n            letter_grades.append('B')\n        elif\
    \ grades_sorted[i] < 3.0:\n            letter_grades.append('B-')\n        elif\
    \ grades_sorted[i] < 2.7:\n            letter_grades.append('C+')\n        elif\
    \ grades_sorted[i] < 2.3:\n            letter_grades.append('C')\n        elif\
    \ grades_sorted[i] < 2.0:\n            letter_grades.append('C-')\n        elif\
    \ grades_sorted[i] < 1.7:\n            letter_grades.append('D+')\n        elif\
    \ grades_sorted[i] < 1.3:\n            letter_grades.append('D')\n        elif\
    \ grades_sorted[i] < 1.0:\n            letter_grades.append('D-')\n        elif\
    \ grades_sorted[i] < 0.7:\n            letter_grades.append('E')\n        elif\
    \ grades_sorted[i] < 0.0:\n            letter_grades.append('F')\n        else:\n\
    \            letter_grades.append('F')\n            \n    return letter_grades\n\
    </cell>\n<cell>", "    \n    grades.sort()\n    \n    letter_grades = []\n   \
    \ \n    prev_gpa = grades[0]\n    \n    for grade in grades:\n        if grade\
    \ > prev_gpa:\n            letter_grades.append('A+')\n        elif grade > 3.7:\n\
    \            letter_grades.append('A')\n        elif grade > 3.3:\n          \
    \  letter_grades.append('A-')\n        elif grade > 3.0:\n            letter_grades.append('B+')\n\
    \        elif grade > 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade > 2.3:\n            letter_grades.append('B-')\n        elif grade > 2.0:\n\
    \            letter_grades.append('C+')\n        elif grade > 1.7:\n         \
    \   letter_grades.append('C')\n        elif grade > 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade > 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade > 0.7:\n            letter_grades.append('D')\n        elif grade > 0.0:\n\
    \            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \        prev_gpa = grade\n    \n    return letter_grades\n</cell>\n<cell>", " \
    \   \n    grades.sort()\n    \n    letter_grades = []\n    \n    for grade in\
    \ grades:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    \n    for grade in grades_sorted:\n        if grade >= 3.0:\n           \
    \ letter_grades.append('A+')\n        elif grade >= 2.7:\n            letter_grades.append('B')\n\
    \        elif grade >= 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade >= 1.7:\n            letter_grades.append('C')\n        elif grade >=\
    \ 1.3:\n            letter_grades.append('C-')\n        elif grade >= 1.0:\n \
    \           letter_grades.append('D+')\n        elif grade >= 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade >= 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    grades.sort()\n\
    \    \n    grades_length = len(grades)\n    \n    letter_grades = []\n    \n \
    \   \n    if grades_length < 4:\n        letter_grades.append('E')\n        return\
    \ letter_grades\n    \n    \n    if grades_length < 5:\n        letter_grades.append('D-')\n\
    \        return letter_grades\n    \n    \n    if grades_length < 6:\n       \
    \ letter_grades.append('C-')\n        return letter_grades\n    \n    \n    if\
    \ grades_length < 7:\n        letter_grades.append('B-')\n        return letter_grades\n\
    \    \n    \n    if grades_length < 8:\n        letter_grades.append('B')\n  \
    \      return letter_grades\n    \n    \n    if grades_length < 9:\n        letter_grades.append('A-')\n\
    \        return letter_grades\n    \n    \n    if grades_length < 10:\n      \
    \  letter_grades.append('A')\n        return letter_grades\n    \n    \n    if\
    \ grades_length < 11:\n        letter_grades.append('A+')\n        return letter_grades\n\
    \    \n    \n    if grades_length < 12:\n        letter_grades.append('D')\n \
    \       return letter_grades\n    \n    \n    if grades_length < 13:\n       \
    \ letter_grades.append('C')\n        return letter_grades\n    \n    \n    if\
    \ grades_length < 14:\n        letter_grades.append('B+')\n        return letter_grades\n\
    \    \n    \n    if grades_length < 15:\n        letter_grades.append('B')\n \
    \       return letter_grades\n    \n    \n    if grades_length < 16:\n       \
    \ letter_grades.append('A-')\n        return letter_grades\n    \n    \n    if\
    \ grades_length < 17:\n        letter_grades.append('A')\n        return letter_grades\n\
    \    \n    \n    if grades_length < 18:\n        letter_grades.append('A+')\n\
    \        return letter_grades\n    \n    \n    if grades_length < 19:\n      \
    \  letter_grades.append('D')\n        return letter_grades\n    \n    \n    if\
    \ grades_length < 20:\n        letter_grades.append('C')\n        return letter_grades\n\
    \    \n    \n    if grades_length < 21:\n        letter_grades.append('B+')\n\
    \        return letter_grades\n    \n    \n    if grades_length < 22:\n      \
    \  letter_grades.append('B')\n        return letter_grades\n    \n    \n    if\
    \ grades_length < 23:\n        letter_grades.append('A-')\n        return letter_grades\n\
    \    \n    \n    if grades_length < 24:\n        letter_grades.append('A')\n \
    \       return letter_grades\n    \n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    grades_sorted.reverse()\n    \n    grades_sorted.append(0.0)\n    \n\
    \    grades_sorted = [str(grade) for grade in grades_sorted]\n    \n    grades_sorted.insert(0,'')\n\
    \    \n    grades_sorted = grades_sorted[:len(grades_sorted)-1]\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '-']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != '+']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != 'A']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != 'B']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != 'C']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != 'D']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != 'E']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != 'F']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != 'G']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != 'H']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != 'I']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != 'J']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != 'K']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != 'L']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != 'M']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != 'N']\n    \n    grades_sorted\
    \ = [grade for grade in grades_sorted if grade != 'O']\n    ", "    \n    letter_grades\
    \ = []\n    \n    for grade in grades:\n        if grade >= 3.0:\n           \
    \ letter_grades.append('A+')\n        elif grade >= 2.7:\n            letter_grades.append('B')\n\
    \        elif grade >= 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade >= 1.7:\n            letter_grades.append('C')\n        elif grade >=\
    \ 1.3:\n            letter_grades.append('C-')\n        elif grade >= 1.0:\n \
    \           letter_grades.append('D+')\n        elif grade >= 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade >= 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n",
  "    \n    grades_sorted = sorted(grades)\n    \n    grades_sorted_length = len(grades_sorted)\n\
    \    \n    letter_grades = []\n    \n    \n    if grades_sorted_length < 7:\n\
    \        letter_grades.append('E')\n    elif grades_sorted_length < 9:\n     \
    \   letter_grades.append('D-')\n    elif grades_sorted_length < 11:\n        letter_grades.append('C-')\n\
    \    elif grades_sorted_length < 13:\n        letter_grades.append('B-')\n   \
    \ elif grades_sorted_length < 15:\n        letter_grades.append('B-')\n    elif\
    \ grades_sorted_length < 17:\n        letter_grades.append('B-')\n    elif grades_sorted_length\
    \ < 19:\n        letter_grades.append('B-')\n    elif grades_sorted_length < 21:\n\
    \        letter_grades.append('B-')\n    elif grades_sorted_length < 23:\n   \
    \     letter_grades.append('B-')\n    elif grades_sorted_length < 25:\n      \
    \  letter_grades.append('B-')\n    elif grades_sorted_length < 27:\n        letter_grades.append('B-')\n\
    \    elif grades_sorted_length < 29:\n        letter_grades.append('B-')\n   \
    \ elif grades_sorted_length < 31:\n        letter_grades.append('B-')\n    elif\
    \ grades_sorted_length < 33:\n        letter_grades.append('B-')\n    elif grades_sorted_length\
    \ < 35:\n        letter_grades.append('B-')\n    elif grades_sorted_length < 37:\n\
    \        letter_grades.append('B-')\n    elif grades_sorted_length < 39:\n   \
    \     letter_grades.append('B-')\n    elif grades_sorted_length < 41:\n      \
    \  letter_grades.append('B-')\n    elif grades_sorted_length < 43:\n        letter_grades.append('B-')\n\
    \    elif grades_sorted_length < 45:\n        letter_grades.append('B-')\n   \
    \ elif grades_sorted_length < 47:\n        letter_grades.append('B-')\n    elif\
    \ grades_sorted_length < 49:\n        letter_grades.append('B-')\n    elif grades_sorted_length\
    \ < 51:\n        letter_grades.append('B-')\n    elif grades_sorted_length < 53:\n\
    \        letter_grades.append('B-')\n    elif grades_sorted_length < 55:\n   \
    \     letter_grades.append('B-')\n    elif grades_sorted_length < 57:\n      \
    \  letter_grades.append('B-')\n    elif grades_sorted_length < 59:\n        letter_grades.append('B-')\n\
    \    elif grades_sorted_length < 61:\n        letter_grades.append('B-')\n   \
    \ elif grades_sorted_length < 63:\n        letter_grades.append('B-')\n    elif\
    \ grades_sorted_length < 65:\n        letter_grades.append('B-')\n    elif grades_sorted_length\
    \ < 67", "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades =\
    \ []\n    \n    \n    for grade in grades_sorted:\n        if grade >= 3.0:\n\
    \            letter_grades.append('A+')\n        elif grade >= 2.7:\n        \
    \    letter_grades.append('B')\n        elif grade >= 2.3:\n            letter_grades.append('B-')\n\
    \        elif grade >= 1.7:\n            letter_grades.append('C')\n        elif\
    \ grade >= 1.3:\n            letter_grades.append('C-')\n        elif grade >=\
    \ 1.0:\n            letter_grades.append('D+')\n        elif grade >= 0.7:\n \
    \           letter_grades.append('D')\n        elif grade >= 0.0:\n          \
    \  letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n\
    \    grades_sorted = grades_sorted + [0]\n    \n    grades_sorted = [str(grade)\
    \ for grade in grades_sorted]\n    grades_sorted = grades_sorted + ['E']\n   \
    \ \n    grades_sorted = [grades_sorted[i] for i in range(len(grades_sorted)) if\
    \ grades_sorted[i] == 'E']\n    \n    grades_sorted = [grades_sorted[i] for i\
    \ in range(len(grades_sorted)) if grades_sorted[i] == 'D']\n    \n    grades_sorted\
    \ = [grades_sorted[i] for i in range(len(grades_sorted)) if grades_sorted[i] ==\
    \ 'C']\n    \n    grades_sorted = [grades_sorted[i] for i in range(len(grades_sorted))\
    \ if grades_sorted[i] == 'B']\n    \n    grades_sorted = [grades_sorted[i] for\
    \ i in range(len(grades_sorted)) if grades_sorted[i] == 'A']\n    \n    grades_sorted\
    \ = [grades_sorted[i] for i in range(len(grades_sorted)) if grades_sorted[i] ==\
    \ 'A+']\n    \n    grades_sorted = [grades_sorted[i] for i in range(len(grades_sorted))\
    \ if grades_sorted[i] == 'A-']\n    \n    grades_sorted = [grades_sorted[i] for\
    \ i in range(len(grades_sorted)) if grades_sorted[i] == 'B+']\n    \n    grades_sorted\
    \ = [grades_sorted[i] for i in range(len(grades_sorted)) if grades_sorted[i] ==\
    \ 'B-']\n    \n    grades_sorted = [grades_sorted[i] for i in range(len(grades_sorted))\
    \ if grades_sorted[i] == 'C+']\n    \n    grades_sorted = [grades_sorted[i] for\
    \ i in range(len(grades_sorted)) if grades_sorted[i] == 'C']\n    \n    grades_sorted\
    \ = [grades_sorted[i] for i in range(len(grades_sorted)) if grades_sorted[i] ==\
    \ 'C-']\n    \n    grades_sorted = [grades_sorted[i] for i in range(len(grades_sorted))\
    \ if grades_sorted[i] == 'D+']\n    \n    grades_sorted = [grades_sorted[i] for\
    \ i in range(len(grades_sorted)) if grades_sorted[i] == 'D']\n    \n    grades_sorted\
    \ = [grades_sorted[i] for i in range(len(grades_sorted)) if grades_sorted[i] ==\
    \ 'D-']\n    \n    grades_sorted = [grades_sorted[i] for i in range(len(grades_sorted))\
    \ if grades_sorted[i] == 'E']\n    \n    grades_sorted = [grades_sorted[i] for\
    \ i in range(len(grades_sorted)) if grades_sorted[i] == 'F']\n    \n    ", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    \n    for grade in grades_sorted:\n        if grade >= 3.0:\n           \
    \ letter_grades.append('A+')\n        elif grade >= 2.7:\n            letter_grades.append('B')\n\
    \        elif grade >= 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade >= 1.7:\n            letter_grades.append('C')\n        elif grade >=\
    \ 1.3:\n            letter_grades.append('C-')\n        elif grade >= 1.0:\n \
    \           letter_grades.append('D+')\n        elif grade >= 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade >= 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    grades.sort()\n\
    \    \n    letter_grades = []\n    \n    for grade in grades:\n        if grade\
    \ < 3.0:\n            letter_grades.append('A+')\n        elif grade < 4.0:\n\
    \            letter_grades.append('A-')\n        elif grade < 5.0:\n         \
    \   letter_grades.append('B+')\n        elif grade < 6.0:\n            letter_grades.append('B')\n\
    \        elif grade < 7.0:\n            letter_grades.append('B-')\n        elif\
    \ grade < 8.0:\n            letter_grades.append('C+')\n        elif grade < 9.0:\n\
    \            letter_grades.append('C')\n        elif grade < 10.0:\n         \
    \   letter_grades.append('C-')\n        elif grade < 11.0:\n            letter_grades.append('D+')\n\
    \        elif grade < 12.0:\n            letter_grades.append('D')\n        elif\
    \ grade < 13.0:\n            letter_grades.append('D-')\n        elif grade <\
    \ 14.0:\n            letter_grades.append('E')\n        else:\n            letter_grades.append('F')\n\
    \            \n    return letter_grades\n</cell>\n<cell>", "    \n    grades.sort()\n\
    \    \n    grades_len = len(grades)\n    \n    if grades_len == 0:\n        return\
    \ []\n    \n    if grades_len == 1:\n        return ['A+']\n    \n    if grades_len\
    \ == 2:\n        return ['A+', 'B']\n    \n    if grades_len == 3:\n        return\
    \ ['A+', 'B-', 'C']\n    \n    if grades_len == 4:\n        return ['A+', 'B-',\
    \ 'C-', 'D']\n    \n    if grades_len == 5:\n        return ['A+', 'B-', 'C-',\
    \ 'D-', 'E']\n    \n    if grades_len == 6:\n        return ['A+', 'B-', 'C-',\
    \ 'D-', 'E', 'F']\n    \n    if grades_len == 7:\n        return ['A+', 'B-',\
    \ 'C-', 'D-', 'E', 'F-']\n    \n    if grades_len == 8:\n        return ['A+',\
    \ 'B-', 'C-', 'D-', 'E', 'F-', 'G']\n    \n    if grades_len == 9:\n        return\
    \ ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-']\n    \n    if grades_len == 10:\n\
    \        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A']\n    \n    if grades_len\
    \ == 11:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A+']\n   \
    \ \n    if grades_len == 12:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-',\
    \ 'G-', 'A+', 'B']\n    \n    if grades_len == 13:\n        return ['A+', 'B-',\
    \ 'C-', 'D-', 'E', 'F-', 'G-', 'A+', 'B-']\n    \n    if grades_len == 14:\n \
    \       return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A+', 'B-', 'C']\n  \
    \  \n    if grades_len == 15:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-',\
    \ 'G-', 'A+', 'B-', 'C-']\n    \n    if grades_len == 16:\n        return ['A+',\
    \ 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A+', 'B-', 'C-', 'D']\n    \n    if grades_len\
    \ == 17:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A+', 'B-',\
    \ 'C-', 'D-']\n    \n    if grades_len == 18:\n        return ['A+', 'B-', 'C-',\
    \ 'D-', 'E', 'F-', 'G-', 'A+', 'B-', 'C-', 'D-', 'E']\n    \n    if grades_len\
    \ == 19:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A+', 'B-',\
    \ 'C-', 'D-', 'E-']\n    \n    if grade", "    \n    letter_grades = []\n    \n\
    \    for grade in grades:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B+')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C+')\n        elif grade >= 1.3:\n \
    \           letter_grades.append('C-')\n        elif grade >= 1.0:\n         \
    \   letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n\
    \    \n    grades_sorted = [str(grade) for grade in grades_sorted]\n    \n   \
    \ grades_sorted = [grades_sorted[grades_sorted.index(i)+1] for i in grades_sorted]\n\
    \    \n    grades_sorted = [grades_sorted[grades_sorted.index(i)-1] for i in grades_sorted]\n\
    \    \n    grades_sorted = [grades_sorted[grades_sorted.index(i)+1] for i in grades_sorted]\n\
    \    \n    grades_sorted = [grades_sorted[grades_sorted.index(i)-1] for i in grades_sorted]\n\
    \    \n    grades_sorted = [grades_sorted[grades_sorted.index(i)+1] for i in grades_sorted]\n\
    \    \n    grades_sorted = [grades_sorted[grades_sorted.index(i)-1] for i in grades_sorted]\n\
    \    \n    grades_sorted = [grades_sorted[grades_sorted.index(i)-1] for i in grades_sorted]\n\
    \    \n    grades_sorted = [grades_sorted[grades_sorted.index(i)-1] for i in grades_sorted]\n\
    \    \n    grades_sorted = [grades_sorted[grades_sorted.index(i)-1] for i in grades_sorted]\n\
    \    \n    grades_sorted = [grades_sorted[grades_sorted.index(i)-1] for i in grades_sorted]\n\
    \    \n    grades_sorted = [grades_sorted[grades_sorted.index(i)-1] for i in grades_sorted]\n\
    \    \n    grades_sorted = [grades_sorted[grades_sorted.index(i)-1] for i in grades_sorted]\n\
    \    \n    grades_sorted = [grades_sorted[grades_sorted.index(i)-1] for i in grades_sorted]\n\
    \    \n    grades_sorted = [grades_sorted[grades_sorted.index(i)-1] for i in grades_sorted]\n\
    \    \n    grades_sorted = [grades_sorted[grades_sorted.index(i)-1] for i in grades_sorted]\n\
    \    \n    grades_sorted = [grades_sorted[grades_sorted.index(i)-1] for i in grades_sorted]\n\
    \    \n    grades_sorted = [grades_sorted[grades_sorted.index(i)-1] for i in grades_sorted]\n\
    \    \n    grades_sorted = [grades_sorted[grades_sorted.index(i)-1] for i in grades_sorted]\n\
    \    \n    grades_sor", "    \n    grades_sorted = sorted(grades)\n    \n    grades_sorted_length\
    \ = len(grades_sorted)\n    \n    if grades_sorted_length < 7:\n        \n   \
    \     grades_sorted_length = len(grades_sorted)\n        \n        grades_sorted_length\
    \ = len(grades_sorted)\n        \n        grades_sorted_length = len(grades_sorted)\n\
    \        \n        grades_sorted_length = len(grades_sorted)\n        \n     \
    \   grades_sorted_length = len(grades_sorted)\n        \n        grades_sorted_length\
    \ = len(grades_sorted)\n        \n        grades_sorted_length = len(grades_sorted)\n\
    \        \n        grades_sorted_length = len(grades_sorted)\n        \n     \
    \   grades_sorted_length = len(grades_sorted)\n        \n        grades_sorted_length\
    \ = len(grades_sorted)\n        \n        grades_sorted_length = len(grades_sorted)\n\
    \        \n        grades_sorted_length = len(grades_sorted)\n        \n     \
    \   grades_sorted_length = len(grades_sorted)\n        \n        grades_sorted_length\
    \ = len(grades_sorted)\n        \n        grades_sorted_length = len(grades_sorted)\n\
    \        \n        grades_sorted_length = len(grades_sorted)\n        \n     \
    \   grades_sorted_length = len(grades_sorted)\n        \n        grades_sorted_length\
    \ = len(grades_sorted)\n        \n        grades_sorted_length = len(grades_sorted)\n\
    \        \n        grades_sorted_length = len(grades_sorted)\n        \n     \
    \   grades_sorted_length = len(grades_sorted)\n        \n        grades_sorted_length\
    \ = len(grades_sorted)\n        \n        grades_sorted_length = len(grades_sorted)\n\
    \        \n        grades_sorted_length = len(grades_sorted)\n        \n     \
    \   grades_sorted_length = len(grades_sorted)\n        \n        grades_sorted_length\
    \ = len(grades_sorted)\n        \n        grades_sorted_length = len(grades_sorted)\n\
    \        \n        grades_sorted_length = len(grades_sorted)\n        \n     \
    \   grades_sorted_length = len(grades_sorted)\n        \n        grades_sorted_length\
    \ = len(grades_sorted)\n        \n        grades_sorted_length = len(grades_sorted)\n\
    \        \n        grades_sorted_length = len(grades_sorted)\n        \n     \
    \   grades_sorted_length = len(grades_sorted)\n        \n        grades_sorted_length\
    \ = len(grades_sorted)\n        \n        grades_sorted_length = len(grades_sorted)\n\
    \        \n        grades_sorted_length = len(grades_sorted)\n        \n     \
    \   grades_sorted_length = len(grades_sorted)\n        \n        grades_sorted_length\
    \ = len(grades_sorted)\n        \n        grades_sorted_length = len(grades_sorted)\n\
    \        \n        grades_sorted_length = len(grades_sorted)", "    \n    grades_sorted\
    \ = sorted(grades)\n    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n\
    \        if grade >= 3.0:\n            letter_grades.append('A+')\n        elif\
    \ grade >= 2.0:\n            letter_grades.append('B+')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C+')\n        elif grade >= 1.3:\n \
    \           letter_grades.append('C-')\n        elif grade >= 1.0:\n         \
    \   letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    grades.sort()\n    \n    letter_grades = []\n    \n    grade\
    \ = grades[-1]\n    \n    if grade >= 4.0:\n        letter_grades.append('A+')\n\
    \    elif grade > 3.7:\n        letter_grades.append('A')\n    elif grade > 3.3:\n\
    \        letter_grades.append('A-')\n    elif grade > 3.0:\n        letter_grades.append('B+')\n\
    \    elif grade > 2.7:\n        letter_grades.append('B')\n    elif grade > 2.3:\n\
    \        letter_grades.append('B-')\n    elif grade > 2.0:\n        letter_grades.append('C+')\n\
    \    elif grade > 1.7:\n        letter_grades.append('C')\n    elif grade > 1.3:\n\
    \        letter_grades.append('C-')\n    elif grade > 1.0:\n        letter_grades.append('D+')\n\
    \    elif grade > 0.7:\n        letter_grades.append('D')\n    elif grade > 0.0:\n\
    \        letter_grades.append('D-')\n    else:\n        letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    \n    \n    for grade in grades_sorted:\n\
    \        if grade >= 3.0:\n            letter_grades.append('A+')\n        elif\
    \ grade >= 2.7:\n            letter_grades.append('B')\n        elif grade >=\
    \ 2.3:\n            letter_grades.append('B-')\n        elif grade >= 1.7:\n \
    \           letter_grades.append('C')\n        elif grade >= 1.3:\n          \
    \  letter_grades.append('C-')\n        elif grade >= 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n     \
    \       letter_grades.append('E')\n    \n    return letter_grades\n", "    \n\
    \    grades.sort()\n    \n    letter_grades = []\n    \n    for grade in grades:\n\
    \        if grade >= 3.0:\n            letter_grades.append('A+')\n        elif\
    \ grade >= 2.0:\n            letter_grades.append('B+')\n        elif grade >=\
    \ 1.0:\n            letter_grades.append('C+')\n        elif grade >= 0.7:\n \
    \           letter_grades.append('D+')\n        elif grade >= 0.0:\n         \
    \   letter_grades.append('D-')\n        elif grade >= 0.0:\n            letter_grades.append('E')\n\
    \        else:\n            letter_grades.append('F')\n            \n    return\
    \ letter_grades\n</cell>\n<cell>", "    \n    grades.sort()\n    \n    letter_grades\
    \ = []\n    \n    for grade in grades:\n        if grade >= 4.0:\n           \
    \ letter_grades.append('A+')\n        elif grade >= 3.7:\n            letter_grades.append('A')\n\
    \        elif grade >= 3.3:\n            letter_grades.append('A-')\n        elif\
    \ grade >= 3.0:\n            letter_grades.append('B+')\n        elif grade >=\
    \ 2.7:\n            letter_grades.append('B')\n        elif grade >= 2.3:\n  \
    \          letter_grades.append('B-')\n        elif grade >= 2.0:\n          \
    \  letter_grades.append('C+')\n        elif grade >= 1.7:\n            letter_grades.append('C')\n\
    \        elif grade >= 1.3:\n            letter_grades.append('C-')\n        elif\
    \ grade >= 1.0:\n            letter_grades.append('D+')\n        elif grade >=\
    \ 0.7:\n            letter_grades.append('D')\n        elif grade >= 0.0:\n  \
    \          letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n</cell>\n<cell>", "    \n    grades.sort()\n\
    \    \n    letter_grades = []\n    \n    for grade in grades:\n        if grade\
    \ > 3.0:\n            letter_grades.append('A+')\n        elif grade > 2.7:\n\
    \            letter_grades.append('B+')\n        elif grade > 2.3:\n         \
    \   letter_grades.append('B-')\n        elif grade > 1.7:\n            letter_grades.append('C+')\n\
    \        elif grade > 1.3:\n            letter_grades.append('C-')\n        elif\
    \ grade > 1.0:\n            letter_grades.append('D+')\n        elif grade > 0.7:\n\
    \            letter_grades.append('D')\n        elif grade > 0.0:\n          \
    \  letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \            \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.7:\n            letter_grades.append('B+')\n        elif grade >= 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade >= 1.7:\n        \
    \    letter_grades.append('C+')\n        elif grade >= 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade >= 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade >= 0.7:\n            letter_grades.append('D')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    \n    for grade in grades_sorted:\n \
    \       if grade < 3.0:\n            letter_grades.append('A')\n        elif grade\
    \ < 3.7:\n            letter_grades.append('A-')\n        elif grade < 4.0:\n\
    \            letter_grades.append('B+')\n        elif grade < 4.7:\n         \
    \   letter_grades.append('B')\n        elif grade < 5.0:\n            letter_grades.append('B-')\n\
    \        elif grade < 5.7:\n            letter_grades.append('C+')\n        elif\
    \ grade < 6.0:\n            letter_grades.append('C')\n        elif grade < 6.7:\n\
    \            letter_grades.append('C-')\n        elif grade < 7.0:\n         \
    \   letter_grades.append('D+')\n        elif grade < 7.7:\n            letter_grades.append('D')\n\
    \        elif grade < 8.0:\n            letter_grades.append('D-')\n        elif\
    \ grade < 8.7:\n            letter_grades.append('E')\n        else:\n       \
    \     letter_grades.append('F')\n            \n    return letter_grades\n", " \
    \   \n    grades.sort()\n    grades_length = len(grades)\n    \n    if grades_length\
    \ < 4:\n        return ['E']\n    \n    if grades_length < 5:\n        return\
    \ ['D-']\n    \n    if grades_length < 6:\n        return ['D', 'A-']\n    \n\
    \    if grades_length < 7:\n        return ['D', 'B-']\n    \n    if grades_length\
    \ < 8:\n        return ['D', 'B', 'C-']\n    \n    if grades_length < 9:\n   \
    \     return ['D', 'B', 'C', 'A-']\n    \n    if grades_length < 10:\n       \
    \ return ['D', 'B', 'C', 'A+']\n    \n    if grades_length < 11:\n        return\
    \ ['D', 'B', 'C', 'A']\n    \n    if grades_length < 12:\n        return ['D',\
    \ 'B', 'C', 'A- ']\n    \n    if grades_length < 13:\n        return ['D', 'B',\
    \ 'C', 'B+']\n    \n    if grades_length < 14:\n        return ['D', 'B', 'C',\
    \ 'B']\n    \n    if grades_length < 15:\n        return ['D', 'B', 'C', 'B-']\n\
    \    \n    if grades_length < 16:\n        return ['D', 'B', 'C', 'C+']\n    \n\
    \    if grades_length < 17:\n        return ['D', 'B', 'C', 'C']\n    \n    if\
    \ grades_length < 18:\n        return ['D', 'B', 'C', 'C-']\n    \n    if grades_length\
    \ < 19:\n        return ['D', 'B', 'C', 'D+']\n    \n    if grades_length < 20:\n\
    \        return ['D', 'B', 'C', 'D']\n    \n    if grades_length < 21:\n     \
    \   return ['D', 'B', 'C', 'D-']\n    \n    if grades_length < 22:\n        return\
    \ ['D', 'B', 'C', 'E']\n    \n    if grades_length < 23:\n        return ['D',\
    \ 'B', 'C', 'E- ']\n    \n    if grades_length < 24:\n        return ['D', 'B',\
    \ 'C', 'F']\n    \n    if grades_length < 25:\n        return ['D', 'B', 'C',\
    \ 'F-']\n    \n    if grades_length < 26:\n        return ['D', 'B', 'C', 'G']\n\
    \    \n    if grades_length < 27:\n        return ['D', 'B', 'C', 'G-']\n    \n\
    \    if grades_length < 28:\n        return ['D', 'B', 'C', 'A+']\n    \n    if\
    \ grades_length < 29:\n        return ['D', 'B', 'C', 'A']\n    \n    if grades_length\
    \ < 30:\n        return ['D', 'B', 'C', 'A- ']\n    \n    if grades_length < 31:\n\
    \        return ['D', 'B', 'C', 'B+']\n    \n    if grades_length < 32:", "  \
    \  \n    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n    \n \
    \   grades_length = len(grades)\n    \n    letter_grades = []\n    \n    \n  \
    \  if grades_length < 2:\n        letter_grades.append('E')\n        return letter_grades\n\
    \    \n    if grades_length == 2:\n        letter_grades.append('D-')\n      \
    \  return letter_grades\n    \n    if grades_length == 3:\n        letter_grades.append('C-')\n\
    \        return letter_grades\n    \n    if grades_length == 4:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 5:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 6:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 7:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 8:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 9:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 10:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 11:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 12:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 13:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 14:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 15:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 16:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 17:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 18:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 19:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 20:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 21:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 22:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 23:\n        letter_grades.append('B-",
  "    \n    grades.sort()\n    \n    letter_grades = []\n    \n    for grade in grades:\n\
    \        if grade > 3.0:\n            letter_grades.append('A+')\n        elif\
    \ grade > 2.7:\n            letter_grades.append('B+')\n        elif grade > 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade > 1.7:\n         \
    \   letter_grades.append('C+')\n        elif grade > 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade > 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade > 0.7:\n            letter_grades.append('D')\n        elif grade > 0.0:\n\
    \            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \            \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.0:\n            letter_grades.append('B+')\n        elif grade >= 1.0:\n\
    \            letter_grades.append('C+')\n        elif grade >= 0.7:\n        \
    \    letter_grades.append('D+')\n        elif grade >= 0.0:\n            letter_grades.append('D-')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('E')\n        else:\n\
    \            letter_grades.append('F')\n    \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    grades_sorted = sorted(grades)\n    \n    grades_sorted.reverse()\n    \n\
    \    grades_sorted = [str(grade) for grade in grades_sorted]\n    \n    grades_sorted.insert(0,'')\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),2)]\n\
    \    \n    grades_sorted = [grades_sorted[i:i+2] for i in range(0,len(grades_sorted),",
  "    \n    grades.sort()\n    \n    letter_grades = []\n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  \n    letter_grades = []\n    \n    for grade in grades:\n        if grade\
    \ >= 3.0:\n            letter_grades.append('A+')\n        elif grade >= 2.7:\n\
    \            letter_grades.append('B')\n        elif grade >= 2.3:\n         \
    \   letter_grades.append('B-')\n        elif grade >= 1.7:\n            letter_grades.append('C')\n\
    \        elif grade >= 1.3:\n            letter_grades.append('C-')\n        elif\
    \ grade >= 1.0:\n            letter_grades.append('D+')\n        elif grade >=\
    \ 0.7:\n            letter_grades.append('D')\n        elif grade >= 0.0:\n  \
    \          letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.7:\n            letter_grades.append('B+')\n        elif grade >= 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade >= 1.7:\n        \
    \    letter_grades.append('C+')\n        elif grade >= 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade >= 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade >= 0.7:\n            letter_grades.append('D')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades.sort()\n    \n    letter_grades\
    \ = []\n    \n    \n    for grade in grades:\n        if grade > 3.7:\n      \
    \      letter_grades.append('A+')\n        elif grade > 3.3:\n            letter_grades.append('A-')\n\
    \        elif grade > 3.0:\n            letter_grades.append('B+')\n        elif\
    \ grade > 2.7:\n            letter_grades.append('B')\n        elif grade > 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade > 2.0:\n         \
    \   letter_grades.append('C+')\n        elif grade > 1.7:\n            letter_grades.append('C')\n\
    \        elif grade > 1.3:\n            letter_grades.append('C-')\n        elif\
    \ grade > 1.0:\n            letter_grades.append('D+')\n        elif grade > 0.7:\n\
    \            letter_grades.append('D')\n        elif grade > 0.0:\n          \
    \  letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades.sort()\n    grades_length\
    \ = len(grades)\n    \n    if grades_length == 0:\n        return []\n    \n \
    \   if grades_length == 1:\n        if grades[0] > 3.7:\n            return ['A+']\n\
    \        elif grades[0] > 3.3:\n            return ['A']\n        elif grades[0]\
    \ > 3:\n            return ['B+']\n        elif grades[0] > 2.7:\n           \
    \ return ['B']\n        elif grades[0] > 2.3:\n            return ['B-']\n   \
    \     elif grades[0] > 2:\n            return ['C+']\n        elif grades[0] >\
    \ 1.7:\n            return ['C']\n        elif grades[0] > 1.3:\n            return\
    \ ['C-']\n        elif grades[0] > 1:\n            return ['D+']\n        elif\
    \ grades[0] > 0.7:\n            return ['D']\n        elif grades[0] > 0.0:\n\
    \            return ['D-']\n        else:\n            return ['E']\n    \n  \
    \  if grades_length == 2:\n        if grades[0] > 3.7:\n            return ['A+',\
    \ 'B']\n        elif grades[0] > 3.3:\n            return ['A', 'B-']\n      \
    \  elif grades[0] > 3:\n            return ['B+', 'B-']\n        elif grades[0]\
    \ > 2.7:\n            return ['B', 'B-']\n        elif grades[0] > 2.3:\n    \
    \        return ['B', 'B-']\n        elif grades[0] > 2:\n            return ['C+',\
    \ 'B-']\n        elif grades[0] > 1.7:\n            return ['C', 'B-']\n     \
    \   elif grades[0] > 1.3:\n            return ['C', 'B-']\n        elif grades[0]\
    \ > 1:\n            return ['D+', 'B-']\n        elif grades[0] > 0.7:\n     \
    \       return ['D', 'B-']\n        elif grades[0] > 0.0:\n            return\
    \ ['D-', 'B-']\n        else:\n            return ['E', 'B-']\n    \n    if grades_length\
    \ == 3:\n        if grades[0] > 3.7:\n            return ['A+', 'B+', 'B']\n \
    \       elif grades[0] > 3.3:\n            return ['A+', 'B', 'B-']\n        elif\
    \ grades[0] > 3:\n            return ['A+', 'B+', 'B-']\n        elif grades[0]\
    \ > 2.7:\n            return ['A+', 'B', 'B-']\n        elif grades[0] > 2.3:\n\
    \            return ['A+', 'B', 'B-']\n        elif grades[0] > 2:\n         \
    \   return ['A+', 'B+', 'B-']\n        elif grades[0] > 1.7:\n            return\
    \ ['A+', 'B', 'B-']\n        elif grades[0] > 1.3:\n            return ['A+',\
    \ 'B', 'B-']\n        elif grades[0] > 1:\n            return ['A+', 'B+', 'B-']\n\
    \        elif grades[0] > 0.7:\n            return ['A+', 'B', 'B-']\n       \
    \ elif grades[0] > 0.0:\n            return ['A+', 'B+', 'B-']\n        else:\n\
    \            return ['E", "    \n    grades.sort()\n    \n    letter_grades =\
    \ []\n    \n    letter_grades.append('A+' if grades[0] > 3.7 else 'A')\n    letter_grades.append('A-'\
    \ if grades[0] > 3.3 else 'A')\n    letter_grades.append('B+' if grades[0] > 2.7\
    \ else 'B')\n    letter_grades.append('B-' if grades[0] > 2.3 else 'B')\n    letter_grades.append('C+'\
    \ if grades[0] > 1.7 else 'C')\n    letter_grades.append('C' if grades[0] > 1.3\
    \ else 'C')\n    letter_grades.append('C-' if grades[0] > 1.0 else 'C')\n    letter_grades.append('D+'\
    \ if grades[0] > 0.7 else 'D')\n    letter_grades.append('D' if grades[0] > 0.3\
    \ else 'D')\n    letter_grades.append('D-' if grades[0] > 0.0 else 'D')\n    letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    grades_sorted.reverse()\n    \n    grades_sorted_length = len(grades_sorted)\n\
    \    \n    grades_sorted_index = 0\n    \n    letter_grades = []\n    \n    while\
    \ grades_sorted_index < grades_sorted_length:\n        \n        grade = grades_sorted[grades_sorted_index]\n\
    \        \n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        elif\
    \ grade < 0.0:\n            letter_grades.append('E')\n        \n        grades_sorted_index\
    \ += 1\n        \n    return letter_grades\n</cell>\n<cell>", "    \n    grades.sort()\n\
    \    \n    grades_length = len(grades)\n    \n    letter_grades = []\n    \n \
    \   \n    if grades_length < 4:\n        letter_grades.append('E')\n        return\
    \ letter_grades\n    \n    if grades_length < 5:\n        letter_grades.append('D-')\n\
    \        return letter_grades\n    \n    if grades_length < 6:\n        letter_grades.append('C-')\n\
    \        return letter_grades\n    \n    if grades_length < 7:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 8:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 9:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 10:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 11:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 12:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 13:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 14:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 15:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 16:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 17:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 18:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 19:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 20:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 21:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 22:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 23:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 24:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 25:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length < 26:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    grades_sorted.reverse()\n    \n    grades_sorted = [grade for grade\
    \ in grades_sorted if grade > 0]\n    \n    grades_sorted = [grade for grade in\
    \ grades_sorted if grade < 5]\n    \n    grades_sorted = [grade for grade in grades_sorted\
    \ if grade > 5]\n    \n    grades_sorted = [grade for grade in grades_sorted if\
    \ grade < 10]\n    \n    grades_sorted = [grade for grade in grades_sorted if\
    \ grade > 10]\n    \n    grades_sorted = [grade for grade in grades_sorted if\
    \ grade < 15]\n    \n    grades_sorted = [grade for grade in grades_sorted if\
    \ grade > 15]\n    \n    grades_sorted = [grade for grade in grades_sorted if\
    \ grade < 20]\n    \n    grades_sorted = [grade for grade in grades_sorted if\
    \ grade > 20]\n    \n    grades_sorted = [grade for grade in grades_sorted if\
    \ grade < 25]\n    \n    grades_sorted = [grade for grade in grades_sorted if\
    \ grade > 25]\n    \n    grades_sorted = [grade for grade in grades_sorted if\
    \ grade < 30]\n    \n    grades_sorted = [grade for grade in grades_sorted if\
    \ grade > 30]\n    \n    grades_sorted = [grade for grade in grades_sorted if\
    \ grade < 35]\n    \n    grades_sorted = [grade for grade in grades_sorted if\
    \ grade > 35]\n    \n    grades_sorted = [grade for grade in grades_sorted if\
    \ grade < 40]\n    \n    grades_sorted = [grade for grade in grades_sorted if\
    \ grade > 40]\n    \n    grades_sorted = [grade for grade in grades_sorted if\
    \ grade < 45]\n    \n    grades_sorted = [grade for grade in grades_sorted if\
    \ grade > 45]\n    \n    grades_sorted = [grade for grade in grades_sorted if\
    \ grade < 50]\n    \n    grades_sorted = [grade for grade in grades_", "    \n\
    \    grades.sort()\n    \n    grades_length = len(grades)\n    \n    if grades_length\
    \ < 1:\n        return []\n    \n    grades_average = sum(grades) / grades_length\n\
    \    \n    if grades_average < 3.0:\n        grades_average = 3.0\n    \n    if\
    \ grades_average > 3.7:\n        grades_average = 3.7\n    \n    grades_average\
    \ = grades_average * 100\n    \n    grades_average = int(grades_average)\n   \
    \ \n    if grades_average < 100:\n        grades_average = 100\n    \n    grades_average\
    \ = grades_average / 100\n    \n    grades_average = grades_average\n    \n  \
    \  grades_average = grades_average\n    \n    grades_average = grades_average\n\
    \    \n    grades_average = grades_average\n    \n    grades_average = grades_average\n\
    \    \n    grades_average = grades_average\n    \n    grades_average = grades_average\n\
    \    \n    grades_average = grades_average\n    \n    grades_average = grades_average\n\
    \    \n    grades_average = grades_average\n    \n    grades_average = grades_average\n\
    \    \n    grades_average = grades_average\n    \n    grades_average = grades_average\n\
    \    \n    grades_average = grades_average\n    \n    grades_average = grades_average\n\
    \    \n    grades_average = grades_average\n    \n    grades_average = grades_average\n\
    \    \n    grades_average = grades_average\n    \n    grades_average = grades_average\n\
    \    \n    grades_average = grades_average\n    \n    grades_average = grades_average\n\
    \    \n    grades_average = grades_average\n    \n    grades_average = grades_average\n\
    \    \n    grades_average = grades_average\n    \n    grades_average = grades_average\n\
    \    \n    grades_average = grades_average\n    \n    grades_average = grades_average\n\
    \    \n    grades_average = grades_average\n    \n    grades_average = grades_average\n\
    \    \n    grades_average = grades_average\n    \n    grades_average = grades_average\n\
    \    \n    grades_average = grades_average\n    \n    grades_average = grades_average\n\
    \    \n    grades_average = grades_average\n    \n    grades_average = grades_average",
  "    \n    grades.sort()\n    \n    grades_length = len(grades)\n    \n    letter_grades\
    \ = []\n    \n    if grades_length < 1:\n        return letter_grades\n    \n\
    \    if grades_length == 1:\n        letter_grades.append('A')\n        return\
    \ letter_grades\n    \n    if grades_length == 2:\n        letter_grades.append('A')\n\
    \        letter_grades.append('B')\n        return letter_grades\n    \n    if\
    \ grades_length == 3:\n        letter_grades.append('A')\n        letter_grades.append('B')\n\
    \        letter_grades.append('C')\n        return letter_grades\n    \n    if\
    \ grades_length == 4:\n        letter_grades.append('A')\n        letter_grades.append('B')\n\
    \        letter_grades.append('C')\n        letter_grades.append('D')\n      \
    \  return letter_grades\n    \n    if grades_length == 5:\n        letter_grades.append('A')\n\
    \        letter_grades.append('B')\n        letter_grades.append('C')\n      \
    \  letter_grades.append('D')\n        letter_grades.append('E')\n        return\
    \ letter_grades\n    \n    if grades_length == 6:\n        letter_grades.append('A')\n\
    \        letter_grades.append('B')\n        letter_grades.append('C')\n      \
    \  letter_grades.append('D')\n        letter_grades.append('E')\n        letter_grades.append('F')\n\
    \        return letter_grades\n    \n    if grades_length == 7:\n        letter_grades.append('A')\n\
    \        letter_grades.append('B')\n        letter_grades.append('C')\n      \
    \  letter_grades.append('D')\n        letter_grades.append('E')\n        letter_grades.append('F')\n\
    \        letter_grades.append('G')\n        return letter_grades\n    \n    if\
    \ grades_length == 8:\n        letter_grades.append('A')\n        letter_grades.append('B')\n\
    \        letter_grades.append('C')\n        letter_grades.append('D')\n      \
    \  letter_grades.append('E')\n        letter_grades.append('F')\n        letter_grades.append('G')\n\
    \        letter_grades.append('H')\n        return letter_grades\n    \n    if\
    \ grades_length == 9:\n        letter_grades.append('A')\n        letter_grades.append('B')\n\
    \        letter_grades.append('C')\n        letter_grades.append('D')\n      \
    \  letter_grades.append('E')\n        letter_grades.append('F')\n        letter_grades.append('G')\n\
    \        letter_grades.append('H')\n        letter_grades.append('I')\n      \
    \  return letter_grades\n    \n    if grades_length == 10:\n        letter_grades.append('A')\n\
    \        letter_grades.append('B')\n        letter_grades.append('C')\n      \
    \  letter_grades.append('D')\n", "    \n    grades.sort()\n    grades_len = len(grades)\n\
    \    \n    if grades_len == 0:\n        return []\n    \n    if grades_len ==\
    \ 1:\n        return [\"A+\"]\n    \n    if grades_len == 2:\n        if grades[0]\
    \ > grades[1]:\n            return [\"A+\"]\n        else:\n            return\
    \ [\"A-\"]\n    \n    if grades_len == 3:\n        if grades[0] > grades[1] and\
    \ grades[0] > grades[2]:\n            return [\"A+\"]\n        elif grades[1]\
    \ > grades[2]:\n            return [\"A-\"]\n        else:\n            return\
    \ [\"B+\"]\n    \n    if grades_len == 4:\n        if grades[0] > grades[1] and\
    \ grades[0] > grades[2] and grades[0] > grades[3]:\n            return [\"A+\"\
    ]\n        elif grades[1] > grades[2] and grades[1] > grades[3]:\n           \
    \ return [\"A-\"]\n        elif grades[2] > grades[3]:\n            return [\"\
    B+\"]\n        else:\n            return [\"B-\"]\n    \n    if grades_len ==\
    \ 5:\n        if grades[0] > grades[1] and grades[0] > grades[2] and grades[0]\
    \ > grades[3] and grades[0] > grades[4]:\n            return [\"A+\"]\n      \
    \  elif grades[1] > grades[2] and grades[1] > grades[3] and grades[1] > grades[4]:\n\
    \            return [\"A-\"]\n        elif grades[2] > grades[3] and grades[2]\
    \ > grades[4]:\n            return [\"B+\"]\n        elif grades[3] > grades[4]:\n\
    \            return [\"B-\"]\n        else:\n            return [\"C+\"]\n   \
    \ \n    if grades_len == 6:\n        if grades[0] > grades[1] and grades[0] >\
    \ grades[2] and grades[0] > grades[3] and grades[0] > grades[4] and grades[0]\
    \ > grades[5]:\n            return [\"A+\"]\n        elif grades[1] > grades[2]\
    \ and grades[1] > grades[3] and grades[1] > grades[4] and grades[1] > grades[5]:\n\
    \            return [\"A-\"]\n        elif grades[2] > grades[3] and grades[2]\
    \ > grades[4] and grades[2] > grades[5]:\n            return [\"B+\"]\n      \
    \  elif grades[3] > grades[4] and grades[3] > grades[5]:\n            return [\"\
    B-\"]\n        elif grades[4] > grades[5]:\n            return [\"C+\"]\n    \
    \    else:\n            return [\"C-\"]\n    \n    if grades_len == 7:\n     \
    \   if grades[0] > grades[1] and grades[0] > grades[2] and grades[0] > grades[3]\
    \ and grades[0] > grades[4] and grades[0] > grades[5] and grade", "    \n    letter_grades\
    \ = []\n    \n    for grade in grades:\n        if grade >= 3.0:\n           \
    \ letter_grades.append('A+')\n        elif grade >= 2.7:\n            letter_grades.append('B')\n\
    \        elif grade >= 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade >= 1.7:\n            letter_grades.append('C')\n        elif grade >=\
    \ 1.3:\n            letter_grades.append('C-')\n        elif grade >= 1.0:\n \
    \           letter_grades.append('D+')\n        elif grade >= 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade >= 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n",
  "    \n    grades.sort()\n    \n    grades_length = len(grades)\n    \n    if grades_length\
    \ < 2:\n        return ['E']\n    \n    if grades_length == 2:\n        if grades[0]\
    \ > grades[1]:\n            return ['A+', 'B']\n        else:\n            return\
    \ ['A', 'B']\n    \n    if grades_length == 3:\n        if grades[0] > grades[1]\
    \ and grades[0] > grades[2]:\n            return ['A+', 'B+', 'C']\n        elif\
    \ grades[0] > grades[1] and grades[0] < grades[2]:\n            return ['A+',\
    \ 'B', 'C']\n        elif grades[0] < grades[1] and grades[0] > grades[2]:\n \
    \           return ['A', 'C+', 'B']\n        elif grades[0] < grades[1] and grades[0]\
    \ < grades[2]:\n            return ['A', 'C', 'B']\n        elif grades[0] ==\
    \ grades[1]:\n            return ['A', 'B+']\n        elif grades[0] == grades[2]:\n\
    \            return ['A', 'B', 'C']\n        elif grades[0] < grades[1] and grades[1]\
    \ > grades[2]:\n            return ['A+', 'B', 'C']\n        elif grades[0] <\
    \ grades[1] and grades[1] < grades[2]:\n            return ['A', 'C+', 'B']\n\
    \        elif grades[0] < grades[1] and grades[1] == grades[2]:\n            return\
    \ ['A', 'B', 'C']\n        elif grades[0] > grades[1] and grades[1] > grades[2]:\n\
    \            return ['A+', 'B', 'C']\n        elif grades[0] > grades[1] and grades[1]\
    \ < grades[2]:\n            return ['A', 'C+', 'B']\n        elif grades[0] >\
    \ grades[1] and grades[1] == grades[2]:\n            return ['A', 'B', 'C']\n\
    \        elif grades[0] < grades[1] and grades[1] > grades[2]:\n            return\
    \ ['A+', 'B', 'C']\n        elif grades[0] < grades[1] and grades[1] < grades[2]:\n\
    \            return ['A', 'C+', 'B']\n        elif grades[0] == grades[1] and\
    \ grades[1] > grades[2]:\n            return ['A', 'B', 'C']\n        elif grades[0]\
    \ == grades[1] and grades[1] < grades[2]:\n            return ['A', 'B', 'C']\n\
    \        elif grades[0] == grades[1] and grades[1] == grades[2]:\n           \
    \ return ['A', 'B', 'C']\n        elif grades[0] > grades[1] and grades[1] > grades[2]:\n\
    \            return ['A+', 'B', 'C']\n        elif grades[0] > grades[1] and grades[1]\
    \ < grades[2]:\n            return ['A', 'C+', 'B']\n        elif grades[0] >\
    \ grades[1] and grades[1] == grades[2]:\n            return ['A', 'B', 'C']\n\
    \        elif grades[0] < grades[1] and grades[1] > grades[2]:\n            return\
    \ ['A+', 'B', 'C']\n        elif grades[0] < grades[1] and grades[1] < grades[2]:\n\
    \            return ['A', 'C+', 'B']\n        elif grades[0]", "    \n    grades.sort()\n\
    \    \n    grades_length = len(grades)\n    \n    if grades_length < 2:\n    \
    \    return ['E']\n    \n    if grades_length == 2:\n        if grades[0] > grades[1]:\n\
    \            return ['A+']\n        elif grades[0] == grades[1]:\n           \
    \ return ['A']\n        else:\n            return ['B']\n    \n    if grades_length\
    \ == 3:\n        if grades[0] > grades[1]:\n            if grades[0] > grades[2]:\n\
    \                return ['A+', 'B+']\n            elif grades[0] == grades[2]:\n\
    \                return ['A+', 'B']\n            elif grades[0] == grades[1]:\n\
    \                return ['A', 'B']\n            else:\n                return\
    \ ['A+', 'B-']\n        elif grades[0] == grades[1]:\n            if grades[1]\
    \ > grades[2]:\n                return ['A+', 'B+']\n            elif grades[1]\
    \ == grades[2]:\n                return ['A+', 'B']\n            elif grades[1]\
    \ == grades[0]:\n                return ['A', 'B']\n            else:\n      \
    \          return ['A+', 'B-']\n        elif grades[0] == grades[2]:\n       \
    \     if grades[1] > grades[2]:\n                return ['A+', 'B+']\n       \
    \     elif grades[1] == grades[2]:\n                return ['A+', 'B']\n     \
    \       elif grades[1] == grades[0]:\n                return ['A', 'B']\n    \
    \        else:\n                return ['A+', 'B-']\n        else:\n         \
    \   if grades[1] > grades[2]:\n                return ['A+', 'B+']\n         \
    \   elif grades[1] == grades[2]:\n                return ['A+', 'B']\n       \
    \     elif grades[1] == grades[0]:\n                return ['A', 'B']\n      \
    \      else:\n                return ['A+', 'B-']\n    \n    if grades_length\
    \ == 4:\n        if grades[0] > grades[1]:\n            if grades[0] > grades[2]:\n\
    \                if grades[0] > grades[3]:\n                    return ['A+',\
    \ 'B+', 'C+']\n                elif grades[0] == grades[3]:\n                \
    \    return ['A+', 'B', 'C']\n                elif grades[0] == grades[2]:\n \
    \                   return ['A+', 'B', 'C-']\n                elif grades[0] ==\
    \ grades[1]:\n                    return ['A', 'B', 'C-']\n                else:\n\
    \                    return ['A+', 'B', 'C-']\n            elif grades[0] == grades[2]:\n\
    \                if grades[1] > grades[3]:\n                    return ['A+',\
    \ 'B+', 'C+']\n                elif grades[1] == grades[3]:\n                \
    \    return ['A+', 'B', 'C']\n                elif grades[1] == grades[2]:\n \
    \                   return ['A+', 'B', 'C-']\n                elif grades[1] ==\
    \ grades[0]:\n                    return ['A', 'B', 'C-']\n                else:\n\
    \                    return ['A+', 'B', 'C-']\n            elif grades[0] == grades[3]:\n\
    \                if grades[1] > grades[2]:\n                    return ['A+',\
    \ 'B+', 'C+']\n", "    \n    grades.sort()\n    \n    grades_length = len(grades)\n\
    \    \n    letter_grades = []\n    \n    if grades_length == 0:\n        letter_grades.append('E')\n\
    \        return letter_grades\n    \n    if grades_length == 1:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 2:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 3:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 4:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 5:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 6:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 7:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 8:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 9:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 10:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 11:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 12 or grades_length\
    \ == 13:\n        letter_grades.append('A')\n        return letter_grades\n  \
    \  \n    if grades_length == 14:\n        letter_grades.append('A')\n        return\
    \ letter_grades\n    \n    if grades_length == 15:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 16:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 17:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 18:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 19:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 20:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 21:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 22:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_length == 23:\n        letter_grades.append('A')\n\
    \        return letter_grades\n    \n    if grades_", "    \n    grades_sorted\
    \ = sorted(grades)\n    grades_sorted.reverse()\n    \n    grades_sorted_length\
    \ = len(grades_sorted)\n    \n    grades_sorted_index = 0\n    \n    letter_grades\
    \ = []\n    \n    while grades_sorted_index < grades_sorted_length:\n        \n\
    \        grade = grades_sorted[grades_sorted_index]\n        \n        if grade\
    \ >= 3.0:\n            letter_grades.append('A+')\n        elif grade >= 2.7:\n\
    \            letter_grades.append('B')\n        elif grade >= 2.3:\n         \
    \   letter_grades.append('B-')\n        elif grade >= 1.7:\n            letter_grades.append('C')\n\
    \        elif grade >= 1.3:\n            letter_grades.append('C-')\n        elif\
    \ grade >= 1.0:\n            letter_grades.append('D+')\n        elif grade >=\
    \ 0.7:\n            letter_grades.append('D')\n        elif grade >= 0.0:\n  \
    \          letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \        \n        grades_sorted_index += 1\n        \n    return letter_grades\n\
    </cell>\n<cell>", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    grades.sort()\n    \n    letter_grades = []\n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  \n    grades_sorted = sorted(grades)\n    \n    grades_sorted_length = len(grades_sorted)\n\
    \    \n    grades_sorted_index = 0\n    \n    grades_sorted_index_length = len(grades_sorted_index)\n\
    \    \n    grades_sorted_index_index_length = len(grades_sorted_index_index)\n\
    \    \n    grades_sorted_index_index_index_length = len(grades_sorted_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_length = len(grades_sorted_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index)\n    \n\
    \    grades_sorted_index_index_index_index_index_index_index_index_length = len(grades_sorted_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = len(grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index)\n\
    \    \n    grades_sorted_index_index_index_index_index_index_index_index_index_index_index_index_index_",
  "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    letter_grades = []\n    for grade in grades:\n        if grade\
    \ >= 3.0:\n            letter_grades.append('A+')\n        elif grade >= 2.7:\n\
    \            letter_grades.append('B')\n        elif grade >= 2.3:\n         \
    \   letter_grades.append('B-')\n        elif grade >= 1.7:\n            letter_grades.append('C')\n\
    \        elif grade >= 1.3:\n            letter_grades.append('C-')\n        elif\
    \ grade >= 1.0:\n            letter_grades.append('D+')\n        elif grade >=\
    \ 0.7:\n            letter_grades.append('D')\n        elif grade >= 0.0:\n  \
    \          letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    return letter_grades\n</cell>\n<cell>", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.7:\n            letter_grades.append('B')\n        elif grade >= 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade >= 1.7:\n        \
    \    letter_grades.append('C')\n        elif grade >= 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade >= 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade >= 0.7:\n            letter_grades.append('D')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades\
    \ = []\n    \n    \n    for grade in grades_sorted:\n        if grade >= 3.0:\n\
    \            letter_grades.append('A+')\n        elif grade >= 2.7:\n        \
    \    letter_grades.append('B+')\n        elif grade >= 2.3:\n            letter_grades.append('B-')\n\
    \        elif grade >= 1.7:\n            letter_grades.append('C+')\n        elif\
    \ grade >= 1.3:\n            letter_grades.append('C-')\n        elif grade >=\
    \ 1.0:\n            letter_grades.append('D+')\n        elif grade >= 0.7:\n \
    \           letter_grades.append('D')\n        elif grade >= 0.0:\n          \
    \  letter_grades.append('D-')\n        elif grade < 0.0:\n            letter_grades.append('E')\n\
    \            \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.7:\n            letter_grades.append('B')\n        elif grade >= 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade >= 1.7:\n        \
    \    letter_grades.append('C')\n        elif grade >= 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade >= 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade >= 0.7:\n            letter_grades.append('D')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades.sort()\n    \n    grades_len\
    \ = len(grades)\n    \n    if grades_len < 1:\n        return []\n    \n    if\
    \ grades_len == 1:\n        return [\"A\"]\n    \n    if grades_len == 2:\n  \
    \      if grades[0] > grades[1]:\n            return [\"B+\"]\n        else:\n\
    \            return [\"B\"]\n    \n    if grades_len == 3:\n        if grades[0]\
    \ > grades[1] and grades[0] > grades[2]:\n            return [\"C+\"]\n      \
    \  elif grades[0] > grades[1] and grades[0] < grades[2]:\n            return [\"\
    C\"]\n        elif grades[0] < grades[1] and grades[0] > grades[2]:\n        \
    \    return [\"C-\"]\n        elif grades[0] < grades[1] and grades[0] < grades[2]:\n\
    \            return [\"C\"]\n        elif grades[0] == grades[1] and grades[0]\
    \ > grades[2]:\n            return [\"C-\"]\n        elif grades[0] == grades[1]\
    \ and grades[0] < grades[2]:\n            return [\"C\"]\n        elif grades[0]\
    \ == grades[1] and grades[0] == grades[2]:\n            return [\"D\"]\n     \
    \   elif grades[0] > grades[1] and grades[0] == grades[2]:\n            return\
    \ [\"D+\"]\n        elif grades[0] < grades[1] and grades[0] == grades[2]:\n \
    \           return [\"D-\"]\n        elif grades[0] < grades[1] and grades[0]\
    \ > grades[2]:\n            return [\"D-\"]\n        elif grades[0] > grades[1]\
    \ and grades[0] < grades[2]:\n            return [\"D+\"]\n        elif grades[0]\
    \ < grades[1] and grades[0] > grades[2]:\n            return [\"D+\"]\n      \
    \  elif grades[0] > grades[1] and grades[0] == grades[2]:\n            return\
    \ [\"D+\"]\n        elif grades[0] < grades[1] and grades[0] == grades[2]:\n \
    \           return [\"D+\"]\n        elif grades[0] < grades[1] and grades[0]\
    \ > grades[2]:\n            return [\"D+\"]\n        elif grades[0] > grades[1]\
    \ and grades[0] < grades[2]:\n            return [\"D+\"]\n        elif grades[0]\
    \ < grades[1] and grades[0] == grades[2]:\n            return [\"D+\"]\n     \
    \   elif grades[0] == grades[1] and grades[0] > grades[2]:\n            return\
    \ [\"D+\"]\n        elif grades[0] == grades[1] and grades[0] < grades[2]:\n \
    \           return [\"D+\"]\n        elif grades[0] == grades[1] and grades[0]\
    \ == grades[2]:\n            return [\"D+\"]\n        elif grades[0] > grades[1]\
    \ and grades[0] == grades[2]:\n            return [\"D+\"]\n        elif grades[0]\
    \ < grades[1] and grades[0] == grades[2]:\n            return [\"D+\"]\n     \
    \   elif ", "    \n    grades.sort()\n    \n    letter_grades = []\n    \n   \
    \ for grade in grades:\n        if grade < 3.0:\n            letter_grades.append('A')\n\
    \        elif grade < 3.7:\n            letter_grades.append('A-')\n        elif\
    \ grade < 4.0:\n            letter_grades.append('B+')\n        elif grade < 4.7:\n\
    \            letter_grades.append('B')\n        elif grade < 5.0:\n          \
    \  letter_grades.append('B-')\n        elif grade < 5.7:\n            letter_grades.append('C+')\n\
    \        elif grade < 6.0:\n            letter_grades.append('C')\n        elif\
    \ grade < 6.7:\n            letter_grades.append('C-')\n        elif grade < 7.0:\n\
    \            letter_grades.append('D+')\n        elif grade < 7.7:\n         \
    \   letter_grades.append('D')\n        elif grade < 8.0:\n            letter_grades.append('D-')\n\
    \        elif grade < 8.7:\n            letter_grades.append('E')\n        else:\n\
    \            letter_grades.append('F')\n    \n    return letter_grades\n", " \
    \   \n    grades.sort()\n    grades_length = len(grades)\n    \n    if grades_length\
    \ == 0:\n        return []\n    \n    if grades_length == 1:\n        return [\"\
    A+\"]\n    \n    if grades_length == 2:\n        if grades[0] > grades[1]:\n \
    \           return [\"A+\"]\n        else:\n            return [\"A-\"]\n    \n\
    \    if grades_length == 3:\n        if grades[0] > grades[1] and grades[0] >\
    \ grades[2]:\n            return [\"A+\"]\n        elif grades[0] > grades[1]\
    \ and grades[0] < grades[2]:\n            return [\"A-\"]\n        elif grades[0]\
    \ < grades[1] and grades[0] > grades[2]:\n            return [\"B+\"]\n      \
    \  elif grades[0] < grades[1] and grades[0] < grades[2]:\n            return [\"\
    B-\"]\n        elif grades[0] < grades[1] and grades[0] == grades[2]:\n      \
    \      return [\"C+\"]\n        elif grades[0] == grades[1] and grades[0] > grades[2]:\n\
    \            return [\"C-\"]\n        elif grades[0] == grades[1] and grades[0]\
    \ < grades[2]:\n            return [\"D+\"]\n        elif grades[0] == grades[1]\
    \ and grades[0] == grades[2]:\n            return [\"D\"]\n        elif grades[0]\
    \ > grades[1] and grades[0] == grades[2]:\n            return [\"D-\"]\n     \
    \   elif grades[0] > grades[1] and grades[0] < grades[2]:\n            return\
    \ [\"E\"]\n    \n    if grades_length == 4:\n        if grades[0] > grades[1]\
    \ and grades[0] > grades[2] and grades[0] > grades[3]:\n            return [\"\
    A+\"]\n        elif grades[0] > grades[1] and grades[0] < grades[2] and grades[0]\
    \ > grades[3]:\n            return [\"A-\"]\n        elif grades[0] < grades[1]\
    \ and grades[0] > grades[2] and grades[0] > grades[3]:\n            return [\"\
    B+\"]\n        elif grades[0] < grades[1] and grades[0] < grades[2] and grades[0]\
    \ > grades[3]:\n            return [\"B-\"]\n        elif grades[0] < grades[1]\
    \ and grades[0] < grades[2] and grades[0] < grades[3]:\n            return [\"\
    C+\"]\n        elif grades[0] == grades[1] and grades[0] > grades[2] and grades[0]\
    \ > grades[3]:\n            return [\"C-\"]\n        elif grades[0] == grades[1]\
    \ and grades[0] < grades[2] and grades[0] > grades[3]:\n            return [\"\
    D+\"]\n        elif grades[0] == grades[1] and grades[0] == grades[2] and grades[0]\
    \ > grades[3]:\n            return [\"D\"]\n        elif grades[0] > grades[1]\
    \ and grades[0] == grades[2] and grades[0] > grades[3]:\n", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade < 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ < 3.7:\n            letter_grades.append('A')\n        elif grade < 3.3:\n \
    \           letter_grades.append('A-')\n        elif grade < 3.0:\n          \
    \  letter_grades.append('B+')\n        elif grade < 2.7:\n            letter_grades.append('B')\n\
    \        elif grade < 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade < 2.0:\n            letter_grades.append('C+')\n        elif grade < 1.7:\n\
    \            letter_grades.append('C')\n        elif grade < 1.3:\n          \
    \  letter_grades.append('C-')\n        elif grade < 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade < 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade < 0.0:\n            letter_grades.append('D-')\n        else:\n      \
    \      letter_grades.append('E')\n            \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    grades.sort()\n    \n    letter_grades = []\n    \n    \n\
    \    for grade in grades:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    letter_grades = []\n    \n    for grade in grades:\n        if grade\
    \ < 3.0:\n            letter_grades.append('A+')\n        elif grade < 3.7:\n\
    \            letter_grades.append('A')\n        elif grade < 4.0:\n          \
    \  letter_grades.append('A-')\n        elif grade < 4.7:\n            letter_grades.append('B+')\n\
    \        elif grade < 5.0:\n            letter_grades.append('B')\n        elif\
    \ grade < 5.7:\n            letter_grades.append('B-')\n        elif grade < 6.0:\n\
    \            letter_grades.append('C+')\n        elif grade < 6.7:\n         \
    \   letter_grades.append('C')\n        elif grade < 7.0:\n            letter_grades.append('C-')\n\
    \        elif grade < 7.7:\n            letter_grades.append('D+')\n        elif\
    \ grade < 8.0:\n            letter_grades.append('D')\n        elif grade < 8.7:\n\
    \            letter_grades.append('D-')\n        elif grade < 9.0:\n         \
    \   letter_grades.append('E')\n        else:\n            letter_grades.append('F')\n\
    \            \n    return letter_grades\n", "    \n    grades.sort()\n    \n \
    \   grades_length = len(grades)\n    \n    if grades_length == 0:\n        return\
    \ []\n    \n    if grades_length == 1:\n        return [\"A+\"]\n    \n    if\
    \ grades_length == 2:\n        if grades[0] > grades[1]:\n            return [\"\
    A+\", \"B\"]\n        else:\n            return [\"A\", \"B\"]\n    \n    if grades_length\
    \ == 3:\n        if grades[0] > grades[1] and grades[0] > grades[2]:\n       \
    \     return [\"A+\", \"B\", \"C\"]\n        elif grades[1] > grades[0] and grades[1]\
    \ > grades[2]:\n            return [\"A\", \"B+\", \"C\"]\n        elif grades[2]\
    \ > grades[0] and grades[2] > grades[1]:\n            return [\"A\", \"B\", \"\
    C+\"]\n        elif grades[0] > grades[1] and grades[0] > grades[2]:\n       \
    \     return [\"A\", \"B\", \"C\"]\n        elif grades[1] > grades[0] and grades[1]\
    \ > grades[2]:\n            return [\"A\", \"B+\", \"C\"]\n        elif grades[2]\
    \ > grades[0] and grades[2] > grades[1]:\n            return [\"A\", \"B\", \"\
    C+\"]\n        elif grades[0] > grades[1] and grades[0] > grades[2]:\n       \
    \     return [\"A\", \"B\", \"C\"]\n        elif grades[1] > grades[0] and grades[1]\
    \ > grades[2]:\n            return [\"A\", \"B+\", \"C\"]\n        elif grades[2]\
    \ > grades[0] and grades[2] > grades[1]:\n            return [\"A\", \"B\", \"\
    C+\"]\n        elif grades[0] > grades[1] and grades[0] > grades[2]:\n       \
    \     return [\"A\", \"B\", \"C\"]\n        elif grades[1] > grades[0] and grades[1]\
    \ > grades[2]:\n            return [\"A\", \"B+\", \"C\"]\n        elif grades[2]\
    \ > grades[0] and grades[2] > grades[1]:\n            return [\"A\", \"B\", \"\
    C+\"]\n        elif grades[0] > grades[1] and grades[0] > grades[2]:\n       \
    \     return [\"A\", \"B\", \"C\"]\n        elif grades[1] > grades[0] and grades[1]\
    \ > grades[2]:\n            return [\"A\", \"B+\", \"C\"]\n        elif grades[2]\
    \ > grades[0] and grades[2] > grades[1]:\n            return [\"A\", \"B\", \"\
    C+\"]\n        elif grades[0] > grades[1] and grades[0] > grades[2]:\n       \
    \     return [\"A\", \"B\", \"C\"]\n        elif grades[1] > grades[0] and grades[1]\
    \ > grades[2]:\n            return [\"A\", \"B+\", \"C\"]\n        elif grades[2]\
    \ > grades[0] and grades[2] > grades[1]:\n            return [\"A\", \"B\", \"\
    C+\"]\n        elif grades[0] > grades[1] and grades[0] > ", "    \n    grades.sort()\n\
    \    \n    grades_length = len(grades)\n    \n    if grades_length < 2:\n    \
    \    return ['E']\n    \n    if grades_length == 2:\n        if grades[0] > grades[1]:\n\
    \            return ['A+']\n        else:\n            return ['A']\n    \n  \
    \  if grades_length == 3:\n        if grades[0] > grades[1]:\n            if grades[1]\
    \ > grades[2]:\n                return ['A+', 'B+']\n            else:\n     \
    \           return ['A+', 'B']\n        else:\n            if grades[1] > grades[2]:\n\
    \                return ['A', 'B+']\n            else:\n                return\
    \ ['A', 'B']\n    \n    if grades_length == 4:\n        if grades[0] > grades[1]:\n\
    \            if grades[1] > grades[2]:\n                if grades[2] > grades[3]:\n\
    \                    return ['A+', 'B+', 'C+']\n                else:\n      \
    \              return ['A+', 'B+', 'C']\n            else:\n                if\
    \ grades[2] > grades[3]:\n                    return ['A+', 'B', 'C+']\n     \
    \           else:\n                    return ['A+', 'B', 'C']\n        else:\n\
    \            if grades[1] > grades[2]:\n                if grades[2] > grades[3]:\n\
    \                    return ['A', 'B+', 'C+']\n                else:\n       \
    \             return ['A', 'B+', 'C']\n            else:\n                if grades[2]\
    \ > grades[3]:\n                    return ['A', 'B', 'C+']\n                else:\n\
    \                    return ['A', 'B', 'C']\n    \n    if grades_length == 5:\n\
    \        if grades[0] > grades[1]:\n            if grades[1] > grades[2]:\n  \
    \              if grades[2] > grades[3]:\n                    if grades[3] > grades[4]:\n\
    \                        return ['A+', 'B+', 'C+', 'D+']\n                   \
    \ else:\n                        return ['A+', 'B+', 'C+', 'D']\n            \
    \    else:\n                    if grades[3] > grades[4]:\n                  \
    \      return ['A+', 'B+', 'C', 'D+']\n                    else:\n           \
    \             return ['A+', 'B+', 'C', 'D']\n            else:\n             \
    \   if grades[2] > grades[3]:\n                    if grades[3] > grades[4]:\n\
    \                        return ['A+', 'B', 'C+', 'D+']\n                    else:\n\
    \                        return ['A+', 'B', 'C+', 'D']\n                else:\n\
    \                    if grades[3] > grades[4]:\n                        return\
    \ ['A+', 'B', 'C', 'D+']\n                    else:\n                        return\
    \ ['A+', 'B', 'C', 'D']\n        else:\n            if grades[1] > grades[2]:\n\
    \                if grades[2] > grades[3]:\n                    if grades[3] >\
    \ grades[4]:\n                        return ['A', 'B+', 'C+', 'D+']\n       \
    \             else:\n                        return ['A', 'B+', 'C+', 'D']\n \
    \               else:\n                    if grades[3] > grades[4]:\n       \
    \                 return ['A', 'B+', 'C', 'D+']\n                    else:\n \
    \                       return ['A', 'B+', 'C', 'D']\n            else:\n", " \
    \   \n    letter_grades = []\n    \n    for grade in grades:\n        if grade\
    \ >= 3.0:\n            letter_grades.append('A+')\n        elif grade >= 2.7:\n\
    \            letter_grades.append('B')\n        elif grade >= 2.3:\n         \
    \   letter_grades.append('B-')\n        elif grade >= 1.7:\n            letter_grades.append('C')\n\
    \        elif grade >= 1.3:\n            letter_grades.append('C-')\n        elif\
    \ grade >= 1.0:\n            letter_grades.append('D+')\n        elif grade >=\
    \ 0.7:\n            letter_grades.append('D')\n        elif grade >= 0.0:\n  \
    \          letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    letter_grades = []\n    \n    for\
    \ grade in grades:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n    \n\
    \    ", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    grades.sort()\n\
    \    \n    grades_length = len(grades)\n    \n    if grades_length == 0:\n   \
    \     return []\n    \n    if grades_length == 1:\n        return ['A+']\n   \
    \ \n    if grades_length == 2:\n        return ['A+', 'B']\n    \n    if grades_length\
    \ == 3:\n        return ['A+', 'B-', 'C']\n    \n    if grades_length == 4:\n\
    \        return ['A+', 'B-', 'C-', 'D']\n    \n    if grades_length == 5:\n  \
    \      return ['A+', 'B-', 'C-', 'D-', 'E']\n    \n    if grades_length == 6:\n\
    \        return ['A+', 'B-', 'C-', 'D-', 'E', 'F']\n    \n    if grades_length\
    \ == 7:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-']\n    \n    if grades_length\
    \ == 8:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G']\n    \n    if\
    \ grades_length == 9:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-']\n\
    \    \n    if grades_length == 10:\n        return ['A+', 'B-', 'C-', 'D-', 'E',\
    \ 'F-', 'G-', 'A-']\n    \n    if grades_length == 11:\n        return ['A+',\
    \ 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A-', 'B']\n    \n    if grades_length ==\
    \ 12:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A-', 'B-']\n\
    \    \n    if grades_length == 13:\n        return ['A+', 'B-', 'C-', 'D-', 'E',\
    \ 'F-', 'G-', 'A-', 'B-', 'C']\n    \n    if grades_length == 14:\n        return\
    \ ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A-', 'B-', 'C-']\n    \n    if grades_length\
    \ == 15:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A-', 'B-',\
    \ 'C-', 'D']\n    \n    if grades_length == 16:\n        return ['A+', 'B-', 'C-',\
    \ 'D-', 'E', 'F-', 'G-', 'A-', 'B-', 'C-', 'D-']\n    \n    if grades_length ==\
    \ 17:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A-', 'B-', 'C-',\
    \ 'D-', 'E']\n    \n    if grades_length == 18:\n        return ['A+', 'B-', 'C-',\
    \ 'D-', 'E', 'F-', 'G-', 'A-', 'B-', 'C-', 'D-', 'E-']\n    \n    if grades_length\
    \ == 19:\n        return ['A+', 'B-', 'C-', 'D-', 'E', 'F-', 'G-', 'A-', 'B-',\
    \ 'C-', 'D", "    \n    letter_grades = []\n    \n    for grade in grades:\n \
    \       if grade >= 4.0:\n            letter_grades.append('A+')\n        elif\
    \ grade > 3.7:\n            letter_grades.append('A')\n        elif grade > 3.3:\n\
    \            letter_grades.append('A-')\n        elif grade > 3.0:\n         \
    \   letter_grades.append('B+')\n        elif grade > 2.7:\n            letter_grades.append('B')\n\
    \        elif grade > 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade > 2.0:\n            letter_grades.append('C+')\n        elif grade > 1.7:\n\
    \            letter_grades.append('C')\n        elif grade > 1.3:\n          \
    \  letter_grades.append('C-')\n        elif grade > 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade > 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade > 0.0:\n            letter_grades.append('D-')\n        else:\n      \
    \      letter_grades.append('E')\n    \n    return letter_grades\n", "    \n \
    \   grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n    for\
    \ grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    grades_sorted\
    \ = sorted(grades)\n    \n    letter_grades = []\n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    grades_sorted\
    \ = sorted(grades)\n    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n\
    \        if grade >= 3.0:\n            letter_grades.append('A+')\n        elif\
    \ grade >= 2.0:\n            letter_grades.append('A')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('A-')\n        elif grade >= 1.3:\n \
    \           letter_grades.append('B+')\n        elif grade >= 1.0:\n         \
    \   letter_grades.append('B')\n        elif grade >= 0.7:\n            letter_grades.append('B-')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('C+')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('C')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('C-')\n        elif grade >= 0.0:\n \
    \           letter_grades.append('D+')\n        elif grade >= 0.0:\n         \
    \   letter_grades.append('D')\n        elif grade >= 0.0:\n            letter_grades.append('D-')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('E')\n        else:\n\
    \            letter_grades.append('F')\n    \n    return letter_grades\n", " \
    \   \n    grades.sort()\n    \n    letter_grades = []\n    \n    for grade in\
    \ grades:\n        if grade >= 4.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 3.7:\n            letter_grades.append('A')\n        elif\
    \ grade >= 3.3:\n            letter_grades.append('A-')\n        elif grade >=\
    \ 3.0:\n            letter_grades.append('B+')\n        elif grade >= 2.7:\n \
    \           letter_grades.append('B')\n        elif grade >= 2.3:\n          \
    \  letter_grades.append('B-')\n        elif grade >= 2.0:\n            letter_grades.append('C+')\n\
    \        elif grade >= 1.7:\n            letter_grades.append('C')\n        elif\
    \ grade >= 1.3:\n            letter_grades.append('C-')\n        elif grade >=\
    \ 1.0:\n            letter_grades.append('D+')\n        elif grade >= 0.7:\n \
    \           letter_grades.append('D')\n        elif grade >= 0.0:\n          \
    \  letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades.sort()\n    \n    grades_length\
    \ = len(grades)\n    \n    letter_grades = []\n    \n    if grades_length == 0:\n\
    \        letter_grades.append('E')\n        return letter_grades\n    \n    if\
    \ grades_length == 1:\n        letter_grades.append('D-')\n        return letter_grades\n\
    \    \n    if grades_length == 2:\n        letter_grades.append('C-')\n      \
    \  return letter_grades\n    \n    if grades_length == 3:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 4:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 5:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 6:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 7:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 8:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 9:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 10:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 11:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 12:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 13:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 14:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 15:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 16:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 17:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 18:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 19:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 20:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 21:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 22:\n        letter_grades.append('B-')\n\
    \        return letter_grades\n    \n    if grades_length == 23:\n        ", " \
    \   \n    grades.sort()\n    \n    letter_grades = []\n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    grades_sorted_length = len(grades_sorted)\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.7:\n            letter_grades.append('B')\n        elif grade >= 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade >= 1.7:\n        \
    \    letter_grades.append('C')\n        elif grade >= 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade >= 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade >= 0.7:\n            letter_grades.append('D')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n</cell>\n<cell>", "    \n    grades.sort()\n\
    \    \n    letter_grades = []\n    \n    previous_gpa = grades[0]\n    \n    for\
    \ grade in grades:\n        if grade > previous_gpa:\n            letter_grades.append('A+')\n\
    \        elif grade > previous_gpa + 0.1:\n            letter_grades.append('A')\n\
    \        elif grade > previous_gpa + 0.2:\n            letter_grades.append('A-')\n\
    \        elif grade > previous_gpa + 0.3:\n            letter_grades.append('B+')\n\
    \        elif grade > previous_gpa + 0.4:\n            letter_grades.append('B')\n\
    \        elif grade > previous_gpa + 0.5:\n            letter_grades.append('B-')\n\
    \        elif grade > previous_gpa + 0.6:\n            letter_grades.append('C+')\n\
    \        elif grade > previous_gpa + 0.7:\n            letter_grades.append('C')\n\
    \        elif grade > previous_gpa + 0.8:\n            letter_grades.append('C-')\n\
    \        elif grade > previous_gpa + 0.9:\n            letter_grades.append('D+')\n\
    \        elif grade > previous_gpa + 1:\n            letter_grades.append('D')\n\
    \        elif grade > previous_gpa + 1.1:\n            letter_grades.append('D-')\n\
    \        elif grade > previous_gpa + 1.2:\n            letter_grades.append('E')\n\
    \        else:\n            letter_grades.append('E')\n        previous_gpa =\
    \ grade\n    \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    letter_grades = []\n    \n    \n    for grade in grades_sorted:\n \
    \       if grade >= 3.0:\n            letter_grades.append('A+')\n        elif\
    \ grade >= 2.7:\n            letter_grades.append('B')\n        elif grade >=\
    \ 2.3:\n            letter_grades.append('B-')\n        elif grade >= 1.7:\n \
    \           letter_grades.append('C')\n        elif grade >= 1.3:\n          \
    \  letter_grades.append('C-')\n        elif grade >= 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n     \
    \       letter_grades.append('E')\n    \n    return letter_grades\n", "    \n\
    \    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n    \n    letter_grades\
    \ = []\n    \n    for grade in grades_sorted:\n        if grade > 3.0:\n     \
    \       letter_grades.append('A+')\n        elif grade > 2.7:\n            letter_grades.append('B')\n\
    \        elif grade > 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade > 1.7:\n            letter_grades.append('C')\n        elif grade > 1.3:\n\
    \            letter_grades.append('C-')\n        elif grade > 1.0:\n         \
    \   letter_grades.append('D+')\n        elif grade > 0.7:\n            letter_grades.append('D')\n\
    \        elif grade > 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n  \
    \  \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n\
    \    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n  \
    \  grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n\
    \    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n  \
    \  \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n\
    \    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n  \
    \  grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n\
    \    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n  \
    \  \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n\
    \    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n  \
    \  grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n\
    \    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n  \
    \  \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n\
    \    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n  \
    \  grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n\
    \    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n  \
    \  \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n\
    \    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n  \
    \  grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n\
    \    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n  \
    \  \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    ",
  "    \n    letter_grades = []\n    \n    for grade in grades:\n        if grade\
    \ < 3.0:\n            letter_grades.append('A+')\n        elif grade < 3.7:\n\
    \            letter_grades.append('A')\n        elif grade < 4.0:\n          \
    \  letter_grades.append('A-')\n        elif grade < 4.7:\n            letter_grades.append('B+')\n\
    \        elif grade < 5.0:\n            letter_grades.append('B')\n        elif\
    \ grade < 5.7:\n            letter_grades.append('B-')\n        elif grade < 6.0:\n\
    \            letter_grades.append('C+')\n        elif grade < 6.7:\n         \
    \   letter_grades.append('C')\n        elif grade < 7.0:\n            letter_grades.append('C-')\n\
    \        elif grade < 7.7:\n            letter_grades.append('D+')\n        elif\
    \ grade < 8.0:\n            letter_grades.append('D')\n        elif grade < 8.7:\n\
    \            letter_grades.append('D-')\n        elif grade < 9.0:\n         \
    \   letter_grades.append('E')\n        else:\n            letter_grades.append('F')\n\
    \    \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    \n    grades_sorted.reverse()\n    \n    grades_sorted = grades_sorted[:5]\n\
    \    \n    grades_sorted = [str(grade) for grade in grades_sorted]\n    \n   \
    \ grades_sorted = grades_sorted[:5]\n    \n    grades_sorted = [grades_sorted[i]\
    \ + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n    \n    grades_sorted\
    \ = grades_sorted[:5]\n    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1]\
    \ for i in range(len(grades_sorted)-1)]\n    \n    grades_sorted = grades_sorted[:5]\n\
    \    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n\
    \    \n    grades_sorted = grades_sorted[:5]\n    \n    grades_sorted = [grades_sorted[i]\
    \ + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n    \n    grades_sorted\
    \ = grades_sorted[:5]\n    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1]\
    \ for i in range(len(grades_sorted)-1)]\n    \n    grades_sorted = grades_sorted[:5]\n\
    \    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n\
    \    \n    grades_sorted = grades_sorted[:5]\n    \n    grades_sorted = [grades_sorted[i]\
    \ + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n    \n    grades_sorted\
    \ = grades_sorted[:5]\n    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1]\
    \ for i in range(len(grades_sorted)-1)]\n    \n    grades_sorted = grades_sorted[:5]\n\
    \    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n\
    \    \n    grades_sorted = grades_sorted[:5]\n    \n    grades_sorted = [grades_sorted[i]\
    \ + grades_sorted[i+1] for i in range(len(grades_sorted)-1)]\n    \n    grades_sorted\
    \ = grades_sorted[:5]\n    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1]\
    \ for i in range(len(grades_sorted)-1)]\n    \n    grades_sorted = grades_sorted[:5]\n\
    \    \n    grades_sorted = [grades_sorted[i] + grades_sorted[i+1]", "    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    grades_sorted =\
    \ sorted(grades)\n    \n    grades_sorted_length = len(grades_sorted)\n    \n\
    \    grades_sorted_index = 0\n    \n    grades_sorted_index_length = len(grades_sorted_index)\n\
    \    \n    grades_sorted_index_value = 0\n    \n    grades_sorted_index_value_length\
    \ = len(grades_sorted_index_value)\n    \n    grades_sorted_index_value_value\
    \ = 0\n    \n    grades_sorted_index_value_value_length = len(grades_sorted_index_value_value)\n\
    \    \n    grades_sorted_index_value_value_value = 0\n    \n    grades_sorted_index_value_value_value_length\
    \ = len(grades_sorted_index_value_value_value)\n    \n    grades_sorted_index_value_value_value_value\
    \ = 0\n    \n    grades_sorted_index_value_value_value_value_length = len(grades_sorted_index_value_value_value)\n\
    \    \n    grades_sorted_index_value_value_value_value = 0\n    \n    grades_sorted_index_value_value_value_value_length\
    \ = len(grades_sorted_index_value_value_value)\n    \n    grades_sorted_index_value_value_value_value\
    \ = 0\n    \n    grades_sorted_index_value_value_value_value_length = len(grades_sorted_index_value_value_value)\n\
    \    \n    grades_sorted_index_value_value_value_value = 0\n    \n    grades_sorted_index_value_value_value_value_length\
    \ = len(grades_sorted_index_value_value_value)\n    \n    grades_sorted_index_value_value_value_value\
    \ = 0\n    \n    grades_sorted_index_value_value_value_value_length = len(grades_sorted_index_value_value_value)\n\
    \    \n    grades_sorted_index_value_value_value_value = 0\n    \n    grades_sorted_index_value_value_value_value_length\
    \ = len(grades_sorted_index_value_value_value)\n    \n    grades_sorted_index_value_value_value_value\
    \ = 0\n    \n    grades_sorted_index_value_value_value_value_length = len(grades_sorted_index_value_value_value)\n\
    \    \n    grades_sorted_index_value_value_value_value = 0\n    \n    grades_sorted_index_value_value_value_value_length\
    \ = len(grades_sorted_index_value_value_value)\n    \n    grades_sorted_index_value_value_value_value\
    \ = 0\n    \n    grades_sorted_index_value_value_value_value_length = len(grades_sorted_index_value_value_value)\n\
    \    \n    grades_sorted_index_value_value_value_value = 0\n    \n    grades_sorted_index_value_value_value_value_length\
    \ = len(grades_sorted_index_value_value_value)\n    \n    grades_sorted_index_value_value_value_value\
    \ = 0\n    \n    grades_sorted_index_value_value_value_value_length = len(grades_sorted_index_value_value_value)\n\
    \    \n    grades_sorted_index_value_value_value_value = 0\n    \n    grades_sorted_index_",
  "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    grades_sorted_length = len(grades_sorted)\n\
    \    \n    grades_sorted_index = 0\n    \n    letter_grades = []\n    \n    while\
    \ grades_sorted_index < grades_sorted_length:\n        \n        grade = grades_sorted[grades_sorted_index]\n\
    \        \n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \            grades_sorted_index += 1\n            \n        elif grade >= 2.7:\n\
    \            letter_grades.append('B+')\n            grades_sorted_index += 1\n\
    \            \n        elif grade >= 2.3:\n            letter_grades.append('B-')\n\
    \            grades_sorted_index += 1\n            \n        elif grade >= 1.7:\n\
    \            letter_grades.append('C+')\n            grades_sorted_index += 1\n\
    \            \n        elif grade >= 1.3:\n            letter_grades.append('C-')\n\
    \            grades_sorted_index += 1\n            \n        elif grade >= 1.0:\n\
    \            letter_grades.append('D+')\n            grades_sorted_index += 1\n\
    \            \n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \            grades_sorted_index += 1\n            \n        elif grade >= 0.0:\n\
    \            letter_grades.append('D-')\n            grades_sorted_index += 1\n\
    \            \n        else:\n            letter_grades.append('E')\n        \
    \    grades_sorted_index += 1\n            \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    grades_sorted = sorted(grades)\n    \n    grades_sorted_len\
    \ = len(grades_sorted)\n    \n    grades_sorted_index = 0\n    \n    letter_grades\
    \ = []\n    \n    while grades_sorted_index < grades_sorted_len:\n        \n \
    \       grade = grades_sorted[grades_sorted_index]\n        \n        if grade\
    \ >= 4.0:\n            letter_grades.append('A+')\n            grades_sorted_index\
    \ += 1\n            \n        elif grade >= 3.7:\n            letter_grades.append('A')\n\
    \            grades_sorted_index += 1\n            \n        elif grade >= 3.3:\n\
    \            letter_grades.append('A-')\n            grades_sorted_index += 1\n\
    \            \n        elif grade >= 3.0:\n            letter_grades.append('B+')\n\
    \            grades_sorted_index += 1\n            \n        elif grade >= 2.7:\n\
    \            letter_grades.append('B')\n            grades_sorted_index += 1\n\
    \            \n        elif grade >= 2.3:\n            letter_grades.append('B-')\n\
    \            grades_sorted_index += 1\n            \n        elif grade >= 2.0:\n\
    \            letter_grades.append('C+')\n            grades_sorted_index += 1\n\
    \            \n        elif grade >= 1.7:\n            letter_grades.append('C')\n\
    \            grades_sorted_index += 1\n            \n        elif grade >= 1.3:\n\
    \            letter_grades.append('C-')\n            grades_sorted_index += 1\n\
    \            \n        elif grade >= 1.0:\n            letter_grades.append('D+')\n\
    \            grades_sorted_index += 1\n            \n        elif grade >= 0.7:\n\
    \            letter_grades.append('D')\n            grades_sorted_index += 1\n\
    \            \n        elif grade >= 0.0:\n            letter_grades.append('D-')\n\
    \            grades_sorted_index += 1\n            \n        else:\n         \
    \   letter_grades.append('E')\n            grades_sorted_index += 1\n        \
    \    \n    return letter_grades\n", "    \n    grades.sort()\n    \n    grades_length\
    \ = len(grades)\n    \n    if grades_length < 4:\n        return ['E']\n    \n\
    \    if grades_length < 5:\n        return ['D-']\n    \n    if grades_length\
    \ < 6:\n        return ['D', 'A-']\n    \n    if grades_length < 7:\n        return\
    \ ['D', 'B-']\n    \n    if grades_length < 8:\n        return ['D', 'B', 'C-']\n\
    \    \n    if grades_length < 9:\n        return ['D', 'B', 'C', 'A+']\n    \n\
    \    if grades_length < 10:\n        return ['D', 'B', 'C', 'A']\n    \n    if\
    \ grades_length < 11:\n        return ['D', 'B', 'C', 'A- ']\n    \n    if grades_length\
    \ < 12:\n        return ['D', 'B', 'C', 'B+']\n    \n    if grades_length < 13:\n\
    \        return ['D', 'B', 'C', 'B']\n    \n    if grades_length < 14:\n     \
    \   return ['D', 'B', 'C', 'B- ']\n    \n    if grades_length < 15:\n        return\
    \ ['D', 'B', 'C', 'C+']\n    \n    if grades_length < 16:\n        return ['D',\
    \ 'B', 'C', 'C']\n    \n    if grades_length < 17:\n        return ['D', 'B',\
    \ 'C', 'C- ']\n    \n    if grades_length < 18:\n        return ['D', 'B', 'C',\
    \ 'D+']\n    \n    if grades_length < 19:\n        return ['D', 'B', 'C', 'D']\n\
    \    \n    if grades_length < 20:\n        return ['D', 'B', 'C', 'D- ']\n   \
    \ \n    if grades_length < 21:\n        return ['D', 'B', 'C', 'E']\n    \n  \
    \  if grades_length < 22:\n        return ['D', 'B', 'C', 'E- ']\n    \n    if\
    \ grades_length < 23:\n        return ['D', 'B', 'C', 'F']\n    \n    if grades_length\
    \ < 24:\n        return ['D', 'B', 'C', 'F- ']\n    \n    if grades_length < 25:\n\
    \        return ['D', 'B', 'C', 'G']\n    \n    if grades_length < 26:\n     \
    \   return ['D', 'B', 'C', 'G- ']\n    \n    if grades_length < 27:\n        return\
    \ ['D', 'B', 'C+']\n    \n    if grades_length < 28:\n        return ['D', 'B',\
    \ 'C+']\n    \n    if grades_length < 29:\n        return ['D', 'B', 'C+']\n \
    \   \n    if grades_length < 30:\n        return ['D', 'B', 'C+']\n    \n    if\
    \ grades_length < 31:\n        return ['D', 'B', 'C+']\n    \n    if grades_length\
    \ < 32:\n        return ", "    \n    grades_sorted = sorted(grades)\n    grades_sorted.reverse()\n\
    \    \n    letter_grades = []\n    \n    for grade in grades_sorted:\n       \
    \ if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.7:\n            letter_grades.append('B')\n        elif grade >= 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade >= 1.7:\n        \
    \    letter_grades.append('C')\n        elif grade >= 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade >= 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade >= 0.7:\n            letter_grades.append('D')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades_sorted = sorted(grades)\n\
    \    grades_sorted.reverse()\n    \n    letter_grades = []\n    \n    for grade\
    \ in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        elif\
    \ grade < 0.0:\n            letter_grades.append('E')\n        \n    return letter_grades\n",
  "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n", " \
    \   \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n    \n\
    \    for grade in grades_sorted:\n        if grade >= 3.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    letter_grades = []\n    \n    for grade in grades:\n     \
    \   if grade >= 3.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 2.7:\n            letter_grades.append('B+')\n        elif grade >= 2.3:\n\
    \            letter_grades.append('B-')\n        elif grade >= 1.7:\n        \
    \    letter_grades.append('C+')\n        elif grade >= 1.3:\n            letter_grades.append('C-')\n\
    \        elif grade >= 1.0:\n            letter_grades.append('D+')\n        elif\
    \ grade >= 0.7:\n            letter_grades.append('D')\n        elif grade >=\
    \ 0.0:\n            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    \n    return letter_grades\n", "    \n    grades.sort()\n    \n    grades_length\
    \ = len(grades)\n    \n    if grades_length == 0:\n        return []\n    \n \
    \   if grades_length == 1:\n        return [\"A+\"]\n    \n    if grades_length\
    \ == 2:\n        if grades[0] > grades[1]:\n            return [\"A+\"]\n    \
    \    else:\n            return [\"A-\"]\n    \n    if grades_length == 3:\n  \
    \      if grades[0] > grades[1] and grades[0] > grades[2]:\n            return\
    \ [\"A+\"]\n        elif grades[1] > grades[2]:\n            return [\"A-\"]\n\
    \        else:\n            return [\"B+\"]\n    \n    if grades_length == 4:\n\
    \        if grades[0] > grades[1] and grades[0] > grades[2] and grades[0] > grades[3]:\n\
    \            return [\"A+\"]\n        elif grades[1] > grades[2] and grades[1]\
    \ > grades[3]:\n            return [\"A-\"]\n        elif grades[2] > grades[3]:\n\
    \            return [\"B+\"]\n        else:\n            return [\"B-\"]\n   \
    \ \n    if grades_length == 5:\n        if grades[0] > grades[1] and grades[0]\
    \ > grades[2] and grades[0] > grades[3] and grades[0] > grades[4]:\n         \
    \   return [\"A+\"]\n        elif grades[1] > grades[2] and grades[1] > grades[3]\
    \ and grades[1] > grades[4]:\n            return [\"A-\"]\n        elif grades[2]\
    \ > grades[3] and grades[2] > grades[4]:\n            return [\"B+\"]\n      \
    \  elif grades[3] > grades[4]:\n            return [\"B-\"]\n        else:\n \
    \           return [\"C+\"]\n    \n    if grades_length == 6:\n        if grades[0]\
    \ > grades[1] and grades[0] > grades[2] and grades[0] > grades[3] and grades[0]\
    \ > grades[4] and grades[0] > grades[5]:\n            return [\"A+\"]\n      \
    \  elif grades[1] > grades[2] and grades[1] > grades[3] and grades[1] > grades[4]\
    \ and grades[1] > grades[5]:\n            return [\"A-\"]\n        elif grades[2]\
    \ > grades[3] and grades[2] > grades[4] and grades[2] > grades[5]:\n         \
    \   return [\"B+\"]\n        elif grades[3] > grades[4] and grades[3] > grades[5]:\n\
    \            return [\"B-\"]\n        elif grades[4] > grades[5]:\n          \
    \  return [\"C+\"]\n        else:\n            return [\"C-\"]\n    \n    if grades_length\
    \ == 7:\n        if grades[0] > grades[1] and grades[0] > grades[2] and grades[0]\
    \ > grades[3] and grades[0] > grades[4] and grades[0] > grades[5", "    \n   \
    \ grades_sorted = sorted(grades)\n    \n    grades_sorted_reverse = sorted(grades_sorted,\
    \ reverse=True)\n    \n    grades_sorted_reverse.reverse()\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    grades_sorted_reverse.append(0)\n    \n    grades_sorted_reverse.insert(0,\
    \ 0)\n    \n    ", "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades\
    \ = []\n    \n    for grade in grades_sorted:\n        if grade >= 3.0:\n    \
    \        letter_grades.append('A+')\n        elif grade >= 2.7:\n            letter_grades.append('B')\n\
    \        elif grade >= 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade >= 1.7:\n            letter_grades.append('C')\n        elif grade >=\
    \ 1.3:\n            letter_grades.append('C-')\n        elif grade >= 1.0:\n \
    \           letter_grades.append('D+')\n        elif grade >= 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade >= 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    \n    return letter_grades\n\
    </cell>\n<cell>", "    \n    grades.sort()\n    \n    letter_grades = []\n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    ", "    \n    grades_sorted = sorted(grades)\n    \n    grades_sorted.reverse()\n\
    \    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n  \
    \  \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n\
    \    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n  \
    \  grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n\
    \    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n  \
    \  \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n\
    \    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n  \
    \  grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n\
    \    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n  \
    \  \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n\
    \    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n  \
    \  grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n\
    \    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n  \
    \  \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n\
    \    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n  \
    \  grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n\
    \    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n  \
    \  \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n\
    \    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n  \
    \  grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n\
    \    \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n  \
    \  \n    grades_sorted.append(0.0)\n    \n    grades_sorted.append(0.0)\n    ",
  "    \n    grades.sort()\n    \n    letter_grades = []\n    \n    for grade in grades:\n\
    \        if grade > 3.7:\n            letter_grades.append('A+')\n        elif\
    \ grade > 3.3:\n            letter_grades.append('A-')\n        elif grade > 3.0:\n\
    \            letter_grades.append('B+')\n        elif grade > 2.7:\n         \
    \   letter_grades.append('B')\n        elif grade > 2.3:\n            letter_grades.append('B-')\n\
    \        elif grade > 2.0:\n            letter_grades.append('C+')\n        elif\
    \ grade > 1.7:\n            letter_grades.append('C')\n        elif grade > 1.3:\n\
    \            letter_grades.append('C-')\n        elif grade > 1.0:\n         \
    \   letter_grades.append('D+')\n        elif grade > 0.7:\n            letter_grades.append('D')\n\
    \        elif grade > 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    \n    return letter_grades\n</cell>\n\
    <cell>", "    \n    grades.sort()\n    \n    letter_grades = []\n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    ", "    \n    grades_sorted = sorted(grades)\n    \n    letter_grades = []\n\
    \    \n    \n    if grades_sorted[0] >= 3.0:\n        letter_grades.append('A+')\n\
    \    elif grades_sorted[0] > 2.7:\n        letter_grades.append('B')\n    elif\
    \ grades_sorted[0] > 2.3:\n        letter_grades.append('B-')\n    elif grades_sorted[0]\
    \ > 1.7:\n        letter_grades.append('C')\n    elif grades_sorted[0] > 1.3:\n\
    \        letter_grades.append('C-')\n    elif grades_sorted[0] > 1.0:\n      \
    \  letter_grades.append('D+')\n    elif grades_sorted[0] > 0.7:\n        letter_grades.append('D')\n\
    \    elif grades_sorted[0] > 0.0:\n        letter_grades.append('D-')\n    else:\n\
    \        letter_grades.append('E')\n        \n    return letter_grades\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

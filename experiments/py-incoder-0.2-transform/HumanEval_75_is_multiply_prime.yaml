name: HumanEval_75_is_multiply_prime
language: py
prompt: "def is_multiply_prime(a: int) -> bool:\n    \"\"\"Write a function that returns\
  \ true if the given number is the multiplication of 3 prime numbers\n    and false\
  \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30)\n\
  \    True\n    30 = 2 * 3 * 5\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(5) == False\n    assert candidate(30)\
  \ == True\n    assert candidate(8) == True\n    assert candidate(10) == False\n\
  \    assert candidate(125) == True\n    assert candidate(105) == True\n    assert\
  \ candidate(126) == False\n    assert candidate(729) == False\n    assert candidate(891)\
  \ == False\n    assert candidate(1001) == True\n\ndef test_check():\n    check(is_multiply_prime)\n\
  \ntest_check()\n"
completions: ["    if a < 100:\n        return False\n    \n    prime_numbers = [2,\
    \ 3, 5]\n    \n    for prime in prime_numbers:\n        if a % prime == 0:\n \
    \           return False\n    return True\n\n", "    if a < 100:\n        return\
    \ False\n    \n    primes = [2, 3, 5]\n    \n    for p in primes:\n        if\
    \ a % p == 0:\n            return False\n    return True\n\n", "    \n    if a\
    \ < 100:\n        return False\n    \n    primes = [2, 3, 5]\n    \n    for p\
    \ in primes:\n        if a % p == 0:\n            return False\n    \n    return\
    \ True\n</cell>\n<cell>\nis_multiply_prime(30)\n</cell>\n<cell>", "    if a <\
    \ 100:\n        return False\n    \n    primes = [2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    \n\
    \    for p in primes:\n        if a % p == 0:\n            return False\n    return\
    \ True\n\n", "    if a < 100:\n        return False\n    \n    prime_numbers =\
    \ [2, 3, 5]\n    \n    for num in prime_numbers:\n        if a % num == 0:\n \
    \           return False\n    \n    return True\n\n", "    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    count = 0\n    prime_numbers = [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n    while count < len(prime_numbers):\n        if a % prime_numbers[count]\
    \ == 0 and prime_numbers[count] <= 100:\n            return True\n        count\
    \ += 1\n    return False\n\n", "    if a < 100:\n        return False\n    \n\
    \    primes = [2, 3, 5]\n    \n    for p in primes:\n        if a % p == 0:\n\
    \            return False\n    return True\n\n", "    \n    # Your code here\n\
    \    \n    return False\n\n", "    if a < 100:\n        return False\n    \n \
    \   primes = [2, 3, 5]\n    \n    for p in primes:\n        if a % p == 0:\n \
    \           return False\n    \n    return True\n\n", "    \n    if a < 100:\n\
    \        return False\n    \n    prime_numbers = [2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    \n\
    \    for p in prime_numbers:\n        if a % p == 0:\n            return False\n\
    \    \n    return True\n\n", "    if a < 100:\n        return False\n    \n  \
    \  primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97]\n    \n    for prime in primes:\n        if a %\
    \ prime == 0:\n            return False\n    return True\n\n", "    count = 0\n\
    \    for n in range(2, a):\n        if a % n == 0:\n            count += 1\n \
    \   if count >= 2:\n        return True\n    else:\n        return False\n\n",
  "    \n    if a < 100:\n        return False\n    \n    prime_numbers = [2, 3, 5,\
    \ 7]\n    \n    for n in prime_numbers:\n        if a % n == 0:\n            return\
    \ False\n    \n    return True\n\n", "    if a < 100:\n        return False\n\
    \    \n    primes = [2, 3, 5]\n    \n    for p in primes:\n        if a % p ==\
    \ 0:\n            return False\n    \n    return True\n\n", "    \n    # Write\
    \ your code here\n    \n    if a < 100:\n        return False\n    \n    primes\
    \ = [2, 3, 5]\n    \n    for p in primes:\n        if a % p == 0:\n          \
    \  return False\n        \n    return True\n\n", "    if a < 100:\n        return\
    \ False\n    else:\n        for i in range(2, a):\n            if a % i == 0:\n\
    \                return False\n        return True\n\n", "    if a < 100:\n  \
    \      return False\n    \n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    \n    for p in\
    \ primes:\n        if a % p == 0:\n            return False\n    return True\n\
    \n", "    if a < 100:\n        return False\n    \n    primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97]\n    \n    for p in primes:\n        if a % p == 0:\n            return\
    \ False\n    return True\n\n", "    if a < 100:\n        return False\n    \n\
    \    primes = [2, 3, 5]\n    \n    for p in primes:\n        if a % p == 0:\n\
    \            return False\n    \n    return True\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

language: py
name: HumanEval_34_unique
results:
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_gbze96.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmpk_gbze96.py\", line 16,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpk_gbze96.py\", line 13, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_gbze96.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmpk_gbze96.py\", line 16,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpk_gbze96.py\", line 13, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_gbze96.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmpk_gbze96.py\", line 16,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpk_gbze96.py\", line 13, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_gbze96.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmpk_gbze96.py\", line 16,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpk_gbze96.py\", line 13, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_gbze96.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmpk_gbze96.py\", line 16,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpk_gbze96.py\", line 13, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_gbze96.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmpk_gbze96.py\", line 16,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpk_gbze96.py\", line 13, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_gbze96.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmpk_gbze96.py\", line 16,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpk_gbze96.py\", line 13, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_gbze96.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmpk_gbze96.py\", line 16,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpk_gbze96.py\", line 13, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_gbze96.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmpk_gbze96.py\", line 16,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpk_gbze96.py\", line 13, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_gbze96.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmpk_gbze96.py\", line 16,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpk_gbze96.py\", line 13, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if not (x in seen or seen_add(x))]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpue2cfk7h.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmpue2cfk7h.py\", line 16,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpue2cfk7h.py\", line 13, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_gbze96.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmpk_gbze96.py\", line 16,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpk_gbze96.py\", line 13, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_gbze96.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmpk_gbze96.py\", line 16,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpk_gbze96.py\", line 13, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_gbze96.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmpk_gbze96.py\", line 16,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpk_gbze96.py\", line 13, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_gbze96.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmpk_gbze96.py\", line 16,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpk_gbze96.py\", line 13, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_gbze96.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmpk_gbze96.py\", line 16,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpk_gbze96.py\", line 13, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''

{
  "name": "HumanEval_11_string_xor",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Input are two strings a and b consisting only of 1s and 0s.\n// Perform binary XOR on these inputs and return result also as a string.\n// >>> string_xor('010', '110')\n// '100'\nstd::string string_xor(std::string a, std::string b) {\n",
  "tests": "}\nint main() {\n    auto candidate = string_xor;\n    assert(candidate((\"111000\"), (\"101010\")) == (\"010010\"));\n    assert(candidate((\"1\"), (\"1\")) == (\"0\"));\n    assert(candidate((\"0101\"), (\"0000\")) == (\"0101\"));\n}\n",
  "completions": [
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int val = (a[i] - '0') ^ (b[i] - '0') ^ carry;\n        carry = val / 2;\n        val %= 2;\n        result.push_back(val + '0');\n    }\n    if (carry) {\n        result.push_back(carry + '0');\n    }\n    return result;",
    "    std::string res;\n    for (int i = 0; i < a.size(); i++) {\n        res.push_back(a[i] ^ b[i]);\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.length(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            res += '0';\n        } else {\n            res += '0';\n        }\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.length(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res += '1';\n        } else if (a[i] == '1' && b[i] == '0') {\n            res += '0';\n        } else if (a[i] == '0' && b[i] == '1') {\n            res += '1';\n        } else {\n            res += '0';\n        }\n    }\n    return res;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c.push_back(a[i] ^ b[i]);\n    }\n    return c;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res;\n    for (int i = 0; i < a.size(); i++) {\n        res.push_back((a[i] == '1' && b[i] == '1') ? '0' : '1');\n    }\n    return res;",
    "    std::string res;\n    for (int i = 0; i < a.size(); ++i) {\n        res.push_back((a[i] == '1' && b[i] == '1') ? '1' : '0');\n    }\n    return res;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        res += (a[i] == '1' && b[i] == '1') ? '1' : '0';\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); ++i) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            res += '0';\n        } else {\n            res += '0';\n        }\n    }\n    return res;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        res += (a[i] == '1' && b[i] == '1') ? '1' : '0';\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int val = (a[i] - '0') ^ (b[i] - '0') ^ carry;\n        carry = val / 2;\n        val %= 2;\n        result += val + '0';\n    }\n    if (carry) {\n        result += carry + '0';\n    }\n    return result;",
    "    std::string res;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            res.push_back('0');\n        } else {\n            res.push_back('0');\n        }\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    int i, j;\n    for (i = 0; i < a.size(); i++) {\n        if (a[i] == '1') {\n            for (j = 0; j < b.size(); j++) {\n                if (b[j] == '1') {\n                    result.push_back('1');\n                } else {\n                    result.push_back('0');\n                }\n            }\n        } else {\n            for (j = 0; j < b.size(); j++) {\n                if (b[j] == '1') {\n                    result.push_back('0');\n                } else {\n                    result.push_back('1');\n                }\n            }\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        result.push_back((a[i] == '1' && b[i] == '1') ? '0' : '1');\n    }\n    return result;",
    "    std::string res;\n    for (int i = 0; i < a.size(); ++i) {\n        res.push_back(a[i] ^ b[i]);\n    }\n    return res;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c += (a[i] ^ b[i]);\n    }\n    return c;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res += '1';\n        } else if (a[i] == '1' && b[i] == '0') {\n            res += '0';\n        } else if (a[i] == '0' && b[i] == '1') {\n            res += '1';\n        } else {\n            res += '0';\n        }\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            res.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            res.push_back('0');\n        } else {\n            res.push_back('0');\n        }\n    }\n    return res;",
    "    std::string c;\n    for (int i = 0; i < a.size(); ++i) {\n        c.push_back(a[i] ^ b[i]);\n    }\n    return c;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            res += '0';\n        } else {\n            res += '0';\n        }\n    }\n    return res;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '1' && b[i] == '0') {\n            result += '0';\n        } else if (a[i] == '0' && b[i] == '1') {\n            result += '1';\n        } else {\n            result += '0';\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); ++i) {\n        res += (a[i] ^ b[i]);\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        result += ((a[i] == '1' && b[i] == '1') || (a[i] == '0' && b[i] == '0'));\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.length(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            result += '0';\n        } else {\n            result += '0';\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        res += (a[i] == '1' && b[i] == '1') ? '1' : '0';\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); ++i) {\n        result.push_back(a[i] ^ b[i]);\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.length(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            result += '0';\n        } else {\n            result += '0';\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            result += '0';\n        } else {\n            result += '0';\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    int i = 0, j = 0;\n    while (i < a.size() && j < b.size()) {\n        if (a[i] == '1' && b[j] == '1') {\n            res += '1';\n            i++;\n            j++;\n        } else if (a[i] == '1' && b[j] == '0') {\n            res += '0';\n            i++;\n        } else if (a[i] == '0' && b[j] == '1') {\n            res += '1';\n        } else {\n            res += '0';\n        }\n    }\n    while (i < a.size()) {\n        if (a[i] == '1') {\n            res += '1';\n        } else {\n            res += '0';\n        }\n        i++;\n    }\n    while (j < b.size()) {\n        if (b[j] == '1') {\n            res += '1';\n        } else {\n            res += '0';\n        }\n        j++;\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.length(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            res += '0';\n        } else {\n            res += '0';\n        }\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.length(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            result += '0';\n        } else {\n            result += '0';\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            res.push_back('0');\n        } else {\n            res.push_back('0');\n        }\n    }\n    return res;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c += (a[i] ^ b[i]);\n    }\n    return c;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c.push_back(a[i] ^ b[i]);\n    }\n    return c;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('1');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res;\n    for (int i = 0; i < a.size(); ++i) {\n        res.push_back(a[i] ^ b[i]);\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.length(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            result += '0';\n        } else {\n            result += '0';\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        res += (a[i] ^ b[i]);\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); ++i) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        result.push_back((a[i] == '1' && b[i] == '1') || (a[i] == '0' && b[i] == '0'));\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            res += '0';\n        } else {\n            res += '0';\n        }\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); ++i) {\n        result.push_back((a[i] == '1' && b[i] == '1') ? '1' : '0');\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        res += (a[i] == '1' && b[i] == '1') ? '1' : '0';\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); ++i) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '1' && b[i] == '0') {\n            result += '0';\n        } else if (a[i] == '0' && b[i] == '1') {\n            result += '1';\n        } else {\n            result += '0';\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); ++i) {\n        result.push_back((a[i] == '1' && b[i] == '1') ? '1' : '0');\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            result += '0';\n        } else {\n            result += '0';\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            result += '0';\n        } else {\n            result += '0';\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else {\n            result += '0';\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            result += '0';\n        } else {\n            assert(false);\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    int i = 0;\n    int j = 0;\n    while (i < a.length() && j < b.length()) {\n        if (a[i] == '1' && b[j] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[j] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n        i++;\n        j++;\n    }\n    while (i < a.length()) {\n        result.push_back('0');\n        i++;\n    }\n    while (j < b.length()) {\n        result.push_back('0');\n        j++;\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '1' && b[i] == '0') {\n            result += '0';\n        } else if (a[i] == '0' && b[i] == '1') {\n            result += '1';\n        } else {\n            result += '0';\n        }\n    }\n    return result;",
    "    std::string res;\n    for (int i = 0; i < a.size(); ++i) {\n        res.push_back((a[i] == '1' && b[i] == '1') || (a[i] == '0' && b[i] == '0'));\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        result.push_back(a[i] ^ b[i]);\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            result += '0';\n        } else {\n            result += '0';\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c += (a[i] == '1' && b[i] == '1') ? '1' : '0';\n    }\n    return c;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            res.push_back('0');\n        } else {\n            res.push_back('0');\n        }\n    }\n    return res;",
    "    std::string result;\n    int i = 0, j = 0;\n    while (i < a.size() && j < b.size()) {\n        if (a[i] == '1' && b[j] == '1') {\n            result.push_back('1');\n        } else {\n            result.push_back('0');\n        }\n        i++;\n        j++;\n    }\n    while (i < a.size()) {\n        result.push_back('0');\n        i++;\n    }\n    while (j < b.size()) {\n        result.push_back('0');\n        j++;\n    }\n    return result;",
    "    std::string result;\n    int i, j;\n    for (i = 0, j = 0; i < a.size(); i++) {\n        if (a[i] == '1') {\n            result.push_back('0');\n            j++;\n        } else {\n            result.push_back('1');\n        }\n    }\n    for (i = 0, j = 0; i < b.size(); i++) {\n        if (b[i] == '1') {\n            result.push_back('0');\n            j++;\n        } else {\n            result.push_back('1');\n        }\n    }\n    while (j < a.size()) {\n        result.push_back('0');\n        j++;\n    }\n    while (j < b.size()) {\n        result.push_back('0');\n        j++;\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        result += (a[i] ^ b[i]);\n    }\n    return result;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c += (a[i] == '1' && b[i] == '1') ? '1' : '0';\n    }\n    return c;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res;\n    for (int i = 0; i < a.size(); ++i) {\n        res.push_back(a[i] ^ b[i]);\n    }\n    return res;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res += '1';\n        } else if (a[i] == '1' && b[i] == '0') {\n            res += '0';\n        } else if (a[i] == '0' && b[i] == '1') {\n            res += '1';\n        } else {\n            res += '0';\n        }\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        result.push_back((a[i] == '1' && b[i] == '1') ? '0' : '1');\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.length(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res;\n    for (int i = 0; i < a.size(); ++i) {\n        res.push_back((a[i] == '1' && b[i] == '1') ? '0' : '1');\n    }\n    return res;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c += (a[i] == '1' && b[i] == '1') ? '1' : '0';\n    }\n    return c;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c += (a[i] ^ b[i]);\n    }\n    return c;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            result += '0';\n        } else {\n            result += '0';\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    int carry = 0;\n    for (int i = 0; i < a.size(); i++) {\n        int digit = (a[i] - '0') ^ (b[i] - '0') ^ carry;\n        carry = (digit & 1) << 1;\n        result += digit;\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            res += '0';\n        } else {\n            res += '0';\n        }\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); ++i) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); ++i) {\n        res += (a[i] == '1' && b[i] == '1') ? '1' : '0';\n    }\n    return res;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c += (a[i] == '1' && b[i] == '1') ? '1' : '0';\n    }\n    return c;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            res.push_back('0');\n        } else {\n            res.push_back('0');\n        }\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); ++i) {\n        result.push_back(a[i] ^ b[i]);\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        res += (a[i] == '1' && b[i] == '1') ? '1' : '0';\n    }\n    return res;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '1' && b[i] == '0') {\n            result += '0';\n        } else if (a[i] == '0' && b[i] == '1') {\n            result += '1';\n        } else {\n            result += '0';\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            res += '0';\n        } else {\n            res += '0';\n        }\n    }\n    return res;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            res += '0';\n        } else {\n            res += '0';\n        }\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); ++i) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        res += ((a[i] == '1' && b[i] == '1') || (a[i] == '0' && b[i] == '0')) ? '0' : '1';\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); ++i) {\n        res += (a[i] == '1' && b[i] == '1') ? '1' : '0';\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); ++i) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c += (a[i] == '1' && b[i] == '1') ? '1' : '0';\n    }\n    return c;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.length(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '1' && b[i] == '0') {\n            result += '0';\n        } else if (a[i] == '0' && b[i] == '1') {\n            result += '1';\n        } else {\n            result += '0';\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c += (a[i] ^ b[i]);\n    }\n    return c;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            result += '0';\n        } else {\n            result += '0';\n        }\n    }\n    return result;",
    "    std::string result;\n    int i = 0, j = 0;\n    while (i < a.size() && j < b.size()) {\n        if (a[i] == '1' && b[j] == '1') {\n            result.push_back('1');\n        } else {\n            result.push_back('0');\n        }\n        i++;\n        j++;\n    }\n    while (i < a.size()) {\n        result.push_back('0');\n        i++;\n    }\n    while (j < b.size()) {\n        result.push_back('0');\n        j++;\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            res.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            res.push_back('0');\n        } else {\n            res.push_back('0');\n        }\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); ++i) {\n        result += (a[i] == '1' && b[i] == '1') ? '1' : '0';\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            res.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            res.push_back('0');\n        } else {\n            res.push_back('0');\n        }\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c.push_back(a[i] ^ b[i]);\n    }\n    return c;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        res += (a[i] == '1' && b[i] == '1') ? '1' : '0';\n    }\n    return res;",
    "    std::string res;\n    for (int i = 0; i < a.size(); i++) {\n        res.push_back(a[i] ^ b[i]);\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c += (a[i] ^ b[i]);\n    }\n    return c;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            res.push_back('0');\n        } else {\n            res.push_back('0');\n        }\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        result.push_back(a[i] ^ b[i]);\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c += (a[i] ^ b[i]);\n    }\n    return c;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            res.push_back('0');\n        } else {\n            res.push_back('0');\n        }\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            result += '0';\n        } else {\n            assert(false);\n        }\n    }\n    return result;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c.push_back(a[i] ^ b[i]);\n    }\n    return c;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c += (a[i] ^ b[i]);\n    }\n    return c;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c += (a[i] ^ b[i]);\n    }\n    return c;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); ++i) {\n        result.push_back((a[i] == '1' && b[i] == '1') ? '1' : '0');\n    }\n    return result;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c += (a[i] == '1' && b[i] == '1') ? '1' : '0';\n    }\n    return c;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.length(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '1' && b[i] == '0') {\n            result += '0';\n        } else if (a[i] == '0' && b[i] == '1') {\n            result += '1';\n        } else {\n            result += '0';\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            res += '0';\n        } else {\n            res += '0';\n        }\n    }\n    return res;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            result += '0';\n        } else {\n            result += '0';\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result += '1';\n        } else if (a[i] == '0' && b[i] == '0') {\n            result += '0';\n        } else {\n            result += '0';\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    int i = 0, j = 0;\n    while (i < a.size() && j < b.size()) {\n        if (a[i] == '1' && b[j] == '1') {\n            res += '1';\n            i++;\n            j++;\n        } else if (a[i] == '1' && b[j] == '0') {\n            res += '0';\n            i++;\n        } else if (a[i] == '0' && b[j] == '1') {\n            res += '0';\n            j++;\n        } else if (a[i] == '0' && b[j] == '0') {\n            res += '0';\n            i++;\n            j++;\n        }\n    }\n    while (i < a.size()) {\n        if (a[i] == '1') {\n            res += '0';\n        } else {\n            res += '1';\n        }\n        i++;\n    }\n    while (j < b.size()) {\n        if (b[j] == '1') {\n            res += '0';\n        } else {\n            res += '1';\n        }\n        j++;\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c += (a[i] == '1' && b[i] == '1') ? '1' : '0';\n    }\n    return c;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            res.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            res.push_back('0');\n        } else if (a[i] == '0' && b[i] == '0') {\n            res.push_back('0');\n        }\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        result.push_back(a[i] ^ b[i]);\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        result.push_back(a[i] ^ b[i]);\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else if (a[i] == '1' && b[i] == '0') {\n            result.push_back('0');\n        } else if (a[i] == '0' && b[i] == '1') {\n            result.push_back('0');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    int i = 0, j = 0;\n    while (i < a.size() && j < b.size()) {\n        if (a[i] == '1' && b[j] == '1') {\n            res.push_back('1');\n        } else {\n            res.push_back('0');\n        }\n        i++;\n        j++;\n    }\n    while (i < a.size()) {\n        res.push_back('0');\n        i++;\n    }\n    while (j < b.size()) {\n        res.push_back('0');\n        j++;\n    }\n    return res;",
    "    std::string result;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string c;\n    for (int i = 0; i < a.size(); i++) {\n        c += ((a[i] == '1') ^ (b[i] == '1')) + '0';\n    }\n    return c;",
    "    std::string result = \"\";\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            result.push_back('1');\n        } else {\n            result.push_back('0');\n        }\n    }\n    return result;",
    "    std::string res;\n    for (int i = 0; i < a.size(); i++) {\n        if (a[i] == '1' && b[i] == '1') {\n            res.push_back('1');\n        } else if (a[i] == '0' && b[i] == '0') {\n            res.push_back('0');\n        } else {\n            res.push_back('0');\n        }\n    }\n    return res;"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
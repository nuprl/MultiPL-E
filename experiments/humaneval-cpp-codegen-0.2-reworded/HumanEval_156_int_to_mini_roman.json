{
  "name": "HumanEval_156_int_to_mini_roman",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer, obtain its roman numeral equivalent as a string,\n// and return it in lowercase.\n// Restrictions: 1 <= num <= 1000\n// Examples:\n// >>> int_to_mini_roman(19)\n// 'xix'\n// >>> int_to_mini_roman(152)\n// 'clii'\n// >>> int_to_mini_roman(426)\n// 'cdxxvi'\nstd::string int_to_mini_roman(long number) {\n",
  "tests": "}\nint main() {\n    auto candidate = int_to_mini_roman;\n    assert(candidate((19)) == (\"xix\"));\n    assert(candidate((152)) == (\"clii\"));\n    assert(candidate((251)) == (\"ccli\"));\n    assert(candidate((426)) == (\"cdxxvi\"));\n    assert(candidate((500)) == (\"d\"));\n    assert(candidate((1)) == (\"i\"));\n    assert(candidate((4)) == (\"iv\"));\n    assert(candidate((43)) == (\"xliii\"));\n    assert(candidate((90)) == (\"xc\"));\n    assert(candidate((94)) == (\"xciv\"));\n    assert(candidate((532)) == (\"dxxxii\"));\n    assert(candidate((900)) == (\"cm\"));\n    assert(candidate((994)) == (\"cmxciv\"));\n    assert(candidate((1000)) == (\"m\"));\n}\n",
  "completions": [
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral.append(\"i\");\n                break;\n            case 2:\n                roman_numeral.append(\"ii\");\n                break;\n            case 3:\n                roman_numeral.append(\"iii\");\n                break;\n            case 4:\n                roman_numeral.append(\"iv\");\n                break;\n            case 5:\n                roman_numeral.append(\"v\");\n                break;\n            case 6:\n                roman_numeral.append(\"vi\");\n                break;\n            case 7:\n                roman_numeral.append(\"vii\");\n                break;\n            case 8:\n                roman_numeral.append(\"viii\");\n                break;\n            case 9:\n                roman_numeral.append(\"ix\");\n                break;\n            case 10:\n                roman_numeral.append(\"x\");\n                break;\n            default:\n                break;\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string result;\n    if (number < 1 || number > 1000) {\n        return result;\n    }\n    std::string roman_digits[] = {\"\", \"i\", \"ii\", \"iii\", \"iv\", \"v\", \"vi\", \"vii\", \"viii\", \"ix\"};\n    int roman_digits_size = sizeof(roman_digits) / sizeof(roman_digits[0]);\n    for (int i = roman_digits_size - 1; i >= 0; i--) {\n        while (number >= roman_digits[i]) {\n            result.push_back(roman_digits[i]);\n            number -= roman_digits[i];\n        }\n    }\n    return result;",
    "    std::string roman_numeral;\n    if (number == 0) {\n        roman_numeral = \"\";\n    } else if (number == 1) {\n        roman_numeral = \"i\";\n    } else if (number == 2) {\n        roman_numeral = \"ii\";\n    } else if (number == 3) {\n        roman_numeral = \"iii\";\n    } else if (number == 4) {\n        roman_numeral = \"iv\";\n    } else if (number == 5) {\n        roman_numeral = \"v\";\n    } else if (number == 6) {\n        roman_numeral = \"vi\";\n    } else if (number == 7) {\n        roman_numeral = \"vii\";\n    } else if (number == 8) {\n        roman_numeral = \"viii\";\n    } else if (number == 9) {\n        roman_numeral = \"ix\";\n    } else if (number == 10) {\n        roman_numeral = \"x\";\n    } else if (number == 11) {\n        roman_numeral = \"xi\";\n    } else if (number == 12) {\n        roman_numeral = \"xii\";\n    } else if (number == 13) {\n        roman_numeral = \"xiii\";\n    } else if (number == 14) {\n        roman_numeral = \"xiv\";\n    } else if (number == 15) {\n        roman_numeral = \"xv\";\n    } else if (number == 16) {\n        roman_numeral = \"xvi\";\n    } else if (number == 17) {\n        roman_numeral = \"xvii\";\n    } else if (number == 18) {\n        roman_numeral = \"xviii\";\n    } else if (number == 19) {\n        roman_numeral = \"xix\";\n    } else if (number == 20) {\n        roman_numeral = \"xx\";\n    } else if (number == 30) {\n        roman_numeral = \"xxx\";\n    } else if (number == 40) {\n        roman_numeral = \"xl\";\n    } else if (number == 50",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int num_left = num % 10;\n        if (num_left == 4 || num_left == 9) {\n            roman_numeral.push_back('x');\n        } else if (num_left == 5) {\n            roman_numeral.push_back('l');\n        } else if (num_left == 6) {\n            roman_numeral.push_back('c');\n        } else if (num_left == 7) {\n            roman_numeral.push_back('d');\n        } else if (num_left == 8) {\n            roman_numeral.push_back('m');\n        } else if (num_left == 1) {\n            roman_numeral.push_back('i');\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string result;\n    if (number == 0) {\n        return \"\";\n    }\n    if (number < 0) {\n        return \"\";\n    }\n    if (number > 1000) {\n        return \"\";\n    }\n    if (number == 1) {\n        return \"i\";\n    }\n    if (number == 2) {\n        return \"ii\";\n    }\n    if (number == 3) {\n        return \"iii\";\n    }\n    if (number == 4) {\n        return \"iv\";\n    }\n    if (number == 5) {\n        return \"v\";\n    }\n    if (number == 6) {\n        return \"vi\";\n    }\n    if (number == 7) {\n        return \"vii\";\n    }\n    if (number == 8) {\n        return \"viii\";\n    }\n    if (number == 9) {\n        return \"ix\";\n    }\n    if (number == 10) {\n        return \"x\";\n    }\n    if (number == 11) {\n        return \"xi\";\n    }\n    if (number == 12) {\n        return \"xii\";\n    }\n    if (number == 13) {\n        return \"xiii\";\n    }\n    if (number == 14) {\n        return \"xiv\";\n    }\n    if (number == 15) {\n        return \"xv\";\n    }\n    if (number == 16) {\n        return \"xvi\";\n    }\n    if (number == 17) {\n        return \"xvii\";\n    }\n    if (number == 18) {\n        return \"xviii\";\n    }\n    if (number == 19) {\n        return \"xix\";\n    }\n    if (number == 20) {\n        return \"xx\";\n    }\n    if (number == 30) {\n        return \"xxx\";\n    }\n    if (number == 40) {\n        return \"xl\";\n    }\n    if (number == 50) {\n        return \"l\";\n    }\n    if (number == 60) {\n        return \"lx\";\n    }\n    if (number == 70) {",
    "    std::string roman;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 4 || num == 9) {\n            roman.insert(roman.begin() + i, 'v');\n        } else if (num == 5) {\n            roman.insert(roman.begin() + i, 'l');\n        } else if (num == 2 || num == 3) {\n            roman.insert(roman.begin() + i, 'x');\n        } else {\n            roman.insert(roman.begin() + i, 'c');\n        }\n        number /= 10;\n        i++;\n    }\n    return roman;",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 4) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'c');\n            i++;\n        } else if (num == 9) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'x');\n            i++;\n        } else if (num == 5) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'd');\n            i++;\n        } else if (num == 8) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'l');\n            i++;\n        } else if (num == 2) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'v');\n            i++;\n        } else if (num == 1) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'i');\n            i++;\n        }\n        number /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        if (number >= 1000) {\n            roman_numeral += \"m\";\n            number -= 1000;\n        } else if (number >= 900) {\n            roman_numeral += \"cm\";\n            number -= 900;\n        } else if (number >= 500) {\n            roman_numeral += \"d\";\n            number -= 500;\n        } else if (number >= 400) {\n            roman_numeral += \"cd\";\n            number -= 400;\n        } else if (number >= 100) {\n            roman_numeral += \"c\";\n            number -= 100;\n        } else if (number >= 90) {\n            roman_numeral += \"xc\";\n            number -= 90;\n        } else if (number >= 50) {\n            roman_numeral += \"l\";\n            number -= 50;\n        } else if (number >= 40) {\n            roman_numeral += \"xl\";\n            number -= 40;\n        } else if (number >= 10) {\n            roman_numeral += \"x\";\n            number -= 10;\n        } else if (number >= 9) {\n            roman_numeral += \"ix\";\n            number -= 9;\n        } else if (number >= 5) {\n            roman_numeral += \"v\";\n            number -= 5;\n        } else if (number >= 4) {\n            roman_numeral += \"iv\";\n            number -= 4;\n        } else if (number >= 1) {\n            roman_numeral += \"i\";\n            number -= 1;\n        }\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        if (digit == 9 || digit == 4 || digit == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'x');\n        } else if (digit == 9 || digit == 4 || digit == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'l');\n        } else if (digit == 9 || digit == 4 || digit == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'c');\n        } else if (digit == 9 || digit == 4 || digit == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'd');\n        } else if (digit == 9 || digit == 4 || digit == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'm');\n        } else if (digit == 9 || digit == 4 || digit == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'v');\n        } else if (digit == 9 || digit == 4 || digit == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'i');\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    long num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            default:\n                break;\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 9) {\n            roman_numeral += \"ix\";\n        } else if (num == 4) {\n            roman_numeral += \"iv\";\n        } else if (num == 5) {\n            roman_numeral += \"v\";\n        } else if (num == 6) {\n            roman_numeral += \"vi\";\n        } else if (num == 7) {\n            roman_numeral += \"vii\";\n        } else if (num == 8) {\n            roman_numeral += \"viii\";\n        } else if (num == 1) {\n            roman_numeral += \"i\";\n        } else {\n            roman_numeral += std::to_string(num);\n        }\n        number /= 10;\n        i++;\n    }\n    return roman_numeral;",
    "    std::string roman;\n    int num = number;\n    while (num > 0) {\n        int num_left = num % 10;\n        int num_right = num / 10;\n        if (num_left == 4 || num_left == 9) {\n            roman.insert(roman.begin(), 'v');\n        } else if (num_left == 5 || num_left == 8) {\n            roman.insert(roman.begin(), 'l');\n        } else if (num_left == 1 || num_left == 2 || num_left == 3) {\n            roman.insert(roman.begin(), 'i');\n        } else if (num_left == 6 || num_left == 7) {\n            roman.insert(roman.begin(), 'x');\n        }\n        num = num_right;\n    }\n    return roman;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int num_div = num / 10;\n        int num_rem = num % 10;\n        if (num_rem == 4 || num_rem == 9) {\n            roman_numeral += \"cd\";\n        } else if (num_rem == 5) {\n            roman_numeral += \"xv\";\n        } else if (num_rem == 1) {\n            roman_numeral += \"i\";\n        } else if (num_rem == 2) {\n            roman_numeral += \"ii\";\n        } else if (num_rem == 3) {\n            roman_numeral += \"iii\";\n        } else if (num_rem == 6) {\n            roman_numeral += \"vi\";\n        } else if (num_rem == 7) {\n            roman_numeral += \"vii\";\n        } else if (num_rem == 8) {\n            roman_numeral += \"viii\";\n        } else if (num_rem == 0) {\n            roman_numeral += \"x\";\n        }\n        num = num_div;\n    }\n    return roman_numeral;",
    "    std::string roman;\n    int n = number;\n    while (n > 0) {\n        int r = n % 10;\n        switch (r) {\n            case 1:\n                roman.push_back('i');\n                break;\n            case 2:\n                roman.push_back('ii');\n                break;\n            case 3:\n                roman.push_back('iii');\n                break;\n            case 4:\n                roman.push_back('iv');\n                break;\n            case 5:\n                roman.push_back('v');\n                break;\n            case 6:\n                roman.push_back('vi');\n                break;\n            case 7:\n                roman.push_back('vii');\n                break;\n            case 8:\n                roman.push_back('viii');\n                break;\n            case 9:\n                roman.push_back('ix');\n                break;\n            case 10:\n                roman.push_back('x');\n                break;\n        }\n        n /= 10;\n    }\n    return roman;",
    "    std::string roman;\n    if (number == 0) {\n        roman = \"\";\n    } else if (number == 1) {\n        roman = \"i\";\n    } else if (number == 2) {\n        roman = \"ii\";\n    } else if (number == 3) {\n        roman = \"iii\";\n    } else if (number == 4) {\n        roman = \"iv\";\n    } else if (number == 5) {\n        roman = \"v\";\n    } else if (number == 6) {\n        roman = \"vi\";\n    } else if (number == 7) {\n        roman = \"vii\";\n    } else if (number == 8) {\n        roman = \"viii\";\n    } else if (number == 9) {\n        roman = \"ix\";\n    } else if (number == 10) {\n        roman = \"x\";\n    } else if (number == 11) {\n        roman = \"xi\";\n    } else if (number == 12) {\n        roman = \"xii\";\n    } else if (number == 13) {\n        roman = \"xiii\";\n    } else if (number == 14) {\n        roman = \"xiv\";\n    } else if (number == 15) {\n        roman = \"xv\";\n    } else if (number == 16) {\n        roman = \"xvi\";\n    } else if (number == 17) {\n        roman = \"xvii\";\n    } else if (number == 18) {\n        roman = \"xviii\";\n    } else if (number == 19) {\n        roman = \"xix\";\n    } else if (number == 20) {\n        roman = \"xx\";\n    } else if (number == 30) {\n        roman = \"xxx\";\n    } else if (number == 40) {\n        roman = \"xl\";\n    } else if (number == 50) {\n        roman = \"l\";\n    } else if (number == 60) {\n        roman = \"lx\";\n    } else if (number == 70) {\n        roman = \"lxx\";\n    } else if (number == 80) {\n        roman = \"lxxx\";\n    } else if (",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            default:\n                break;\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 9 || num == 4) {\n            roman.insert(roman.begin(), 'x');\n        } else if (num == 5) {\n            roman.insert(roman.begin(), 'v');\n        } else if (num == 6) {\n            roman.insert(roman.begin(), 'l');\n        } else if (num == 7) {\n            roman.insert(roman.begin(), 'c');\n        } else if (num == 8) {\n            roman.insert(roman.begin(), 'd');\n        } else if (num == 9) {\n            roman.insert(roman.begin(), 'm');\n        }\n        number /= 10;\n    }\n    return roman;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 9:\n                roman_numeral += \"ix\";\n                num -= 9;\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                num -= 4;\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                num -= 5;\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                num -= 6;\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                num -= 7;\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                num -= 8;\n                break;\n            case 3:\n                roman_numeral += \"ii\";\n                num -= 3;\n                break;\n            case 2:\n                roman_numeral += \"i\";\n                num -= 2;\n                break;\n            case 1:\n                roman_numeral += \"i\";\n                num -= 1;\n                break;\n            default:\n                break;\n        }\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        if (digit == 9) {\n            roman_numeral.insert(roman_numeral.begin(), 'x');\n        } else if (digit == 4) {\n            roman_numeral.insert(roman_numeral.begin(), 'c');\n        } else if (digit == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'd');\n        } else if (digit == 6) {\n            roman_numeral.insert(roman_numeral.begin(), 'm');\n        } else if (digit == 7) {\n            roman_numeral.insert(roman_numeral.begin(), 'l');\n        } else if (digit == 8) {\n            roman_numeral.insert(roman_numeral.begin(), 'x');\n        } else if (digit == 1) {\n            roman_numeral.insert(roman_numeral.begin(), 'i');\n        } else {\n            roman_numeral.insert(roman_numeral.begin(), 'v');\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            case 11:\n                roman_numeral += \"xi\";\n                break;\n            case 12:\n                roman_numeral += \"xii\";\n                break;\n            case 13:\n                roman_numeral += \"xiii\";\n                break;\n            case 14:\n                roman_numeral += \"xiv\";\n                break;\n            case 15:\n                roman_numeral += \"xv\";\n                break;\n            case 16:\n                roman_numeral += \"xvi\";\n                break;\n            case 17:\n                roman_numeral += \"xvii\";\n                break;\n            case 18:\n                roman_numeral += \"xviii\";\n                break;\n            case 19:\n                roman_numeral += \"xix\";\n                break;\n            case 20:\n                roman_numeral += \"xx\";\n                break;\n            case 30:\n                roman_numeral += \"xxi\";\n                break;\n            case 40:\n                roman_numeral += \"xxii\";\n                break;\n            case 50:\n                roman_numeral += \"xxiii\";\n                break;\n            case 60:\n                roman_numeral += \"xxiv\";\n                ",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        if (digit == 9 || digit == 4 || digit == 5) {\n            roman_numeral.push_back('x');\n        } else if (digit == 9 || digit == 4) {\n            roman_numeral.push_back('l');\n        } else if (digit == 5) {\n            roman_numeral.push_back('c');\n        } else {\n            roman_numeral.push_back('m');\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    if (number == 1) {\n        roman_numeral = \"I\";\n    } else if (number == 2) {\n        roman_numeral = \"II\";\n    } else if (number == 3) {\n        roman_numeral = \"III\";\n    } else if (number == 4) {\n        roman_numeral = \"IV\";\n    } else if (number == 5) {\n        roman_numeral = \"V\";\n    } else if (number == 6) {\n        roman_numeral = \"VI\";\n    } else if (number == 7) {\n        roman_numeral = \"VII\";\n    } else if (number == 8) {\n        roman_numeral = \"VIII\";\n    } else if (number == 9) {\n        roman_numeral = \"IX\";\n    } else if (number == 10) {\n        roman_numeral = \"X\";\n    } else if (number == 11) {\n        roman_numeral = \"XI\";\n    } else if (number == 12) {\n        roman_numeral = \"XII\";\n    } else if (number == 13) {\n        roman_numeral = \"XIII\";\n    } else if (number == 14) {\n        roman_numeral = \"XIV\";\n    } else if (number == 15) {\n        roman_numeral = \"XV\";\n    } else if (number == 16) {\n        roman_numeral = \"XVI\";\n    } else if (number == 17) {\n        roman_numeral = \"XVII\";\n    } else if (number == 18) {\n        roman_numeral = \"XVIII\";\n    } else if (number == 19) {\n        roman_numeral = \"XIX\";\n    } else if (number == 20) {\n        roman_numeral = \"XX\";\n    } else if (number == 30) {\n        roman_numeral = \"XXX\";\n    } else if (number == 40) {\n        roman_numeral = \"XL\";\n    } else if (number == 50)",
    "    std::string roman_numeral;\n    int num = number;\n    int num_remainder = 0;\n    while (num > 0) {\n        int num_divisor = num % 10;\n        if (num_divisor == 4 || num_divisor == 9) {\n            num_remainder += 2;\n        } else {\n            num_remainder += 1;\n        }\n        num /= 10;\n    }\n    if (num_remainder == 2) {\n        roman_numeral += \"ii\";\n    } else if (num_remainder == 1) {\n        roman_numeral += \"i\";\n    }\n    while (num_remainder > 0) {\n        int num_divisor = num % 10;\n        if (num_divisor == 4 || num_divisor == 9) {\n            num_remainder -= 2;\n        } else {\n            num_remainder -= 1;\n        }\n        num /= 10;\n    }\n    if (num_remainder == 2) {\n        roman_numeral += \"ii\";\n    } else if (num_remainder == 1) {\n        roman_numeral += \"i\";\n    }\n    while (num_remainder > 0) {\n        int num_divisor = num % 10;\n        if (num_divisor == 4 || num_divisor == 9) {\n            num_remainder -= 2;\n        } else {\n            num_remainder -= 1;\n        }\n        num /= 10;\n    }\n    if (num_remainder == 2) {\n        roman_numeral += \"ii\";\n    } else if (num_remainder == 1) {\n        roman_numeral += \"i\";\n    }\n    return roman_numeral;",
    "    std::string result;\n    if (number == 0) {\n        return \"\";\n    }\n    if (number < 0) {\n        return \"\";\n    }\n    if (number >= 1000) {\n        return \"\";\n    }\n    if (number >= 100) {\n        result += \"c\";\n        number -= 100;\n    }\n    if (number >= 10) {\n        result += \"x\";\n        number -= 10;\n    }\n    if (number >= 1) {\n        result += \"i\";\n        number -= 1;\n    }\n    while (number > 0) {\n        result += \"v\";\n        number -= 5;\n    }\n    return result;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int num_left = num % 10;\n        if (num_left == 4 || num_left == 9) {\n            roman_numeral += \"cd\";\n            num -= 4;\n        } else if (num_left == 5) {\n            roman_numeral += \"xc\";\n            num -= 5;\n        } else if (num_left == 1 || num_left == 8) {\n            roman_numeral += \"x\";\n            num -= 1;\n        } else {\n            roman_numeral += \"ix\";\n            num -= 9;\n        }\n    }\n    return roman_numeral;",
    "    std::string result;\n    int n = number;\n    while (n > 0) {\n        int r = n % 10;\n        if (r == 4 || r == 9) {\n            result.insert(result.begin(), 'l');\n        } else if (r == 5) {\n            result.insert(result.begin(), 'v');\n        } else if (r == 1 || r == 6 || r == 7) {\n            result.insert(result.begin(), 'i');\n        } else if (r == 8) {\n            result.insert(result.begin(), 'x');\n        }\n        n /= 10;\n    }\n    return result;",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        int digit = number % 10;\n        if (digit == 4 || digit == 9) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'v');\n        } else if (digit == 5) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'l');\n        } else if (digit == 1) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'i');\n        } else if (digit == 2) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'x');\n        } else if (digit == 3) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'c');\n        }\n        number /= 10;\n        i++;\n    }\n    return roman_numeral;",
    "    std::string roman;\n    int i = 0;\n    while (number > 0) {\n        int digit = number % 10;\n        number /= 10;\n        if (digit == 9 || digit == 4 || digit == 5) {\n            roman.insert(roman.begin() + i, 'v');\n            i++;\n        } else if (digit == 9 || digit == 3 || digit == 1) {\n            roman.insert(roman.begin() + i, 'x');\n            i++;\n        } else if (digit == 8 || digit == 2) {\n            roman.insert(roman.begin() + i, 'l');\n            i++;\n        } else if (digit == 7 || digit == 2) {\n            roman.insert(roman.begin() + i, 'c');\n            i++;\n        } else if (digit == 6 || digit == 2) {\n            roman.insert(roman.begin() + i, 'd');\n            i++;\n        } else if (digit == 5 || digit == 1) {\n            roman.insert(roman.begin() + i, 'm');\n            i++;\n        }\n    }\n    return roman;",
    "    std::string roman_numeral;\n    if (number == 0) {\n        roman_numeral = \"\";\n    } else if (number == 1) {\n        roman_numeral = \"i\";\n    } else if (number == 2) {\n        roman_numeral = \"ii\";\n    } else if (number == 3) {\n        roman_numeral = \"iii\";\n    } else if (number == 4) {\n        roman_numeral = \"iv\";\n    } else if (number == 5) {\n        roman_numeral = \"v\";\n    } else if (number == 6) {\n        roman_numeral = \"vi\";\n    } else if (number == 7) {\n        roman_numeral = \"vii\";\n    } else if (number == 8) {\n        roman_numeral = \"viii\";\n    } else if (number == 9) {\n        roman_numeral = \"ix\";\n    } else if (number == 10) {\n        roman_numeral = \"x\";\n    } else if (number == 11) {\n        roman_numeral = \"xi\";\n    } else if (number == 12) {\n        roman_numeral = \"xii\";\n    } else if (number == 13) {\n        roman_numeral = \"xiii\";\n    } else if (number == 14) {\n        roman_numeral = \"xiv\";\n    } else if (number == 15) {\n        roman_numeral = \"xv\";\n    } else if (number == 16) {\n        roman_numeral = \"xvi\";\n    } else if (number == 17) {\n        roman_numeral = \"xvii\";\n    } else if (number == 18) {\n        roman_numeral = \"xviii\";\n    } else if (number == 19) {\n        roman_numeral = \"xix\";\n    } else if (number == 20) {\n        roman_numeral = \"xx\";\n    } else if (number == 30) {\n        roman_numeral = \"xxx\";\n    } else if (number == 40) {\n        roman_numeral = \"xl\";\n    } else if (number == 50",
    "    std::string roman_numeral;\n    while (number > 0) {\n        int digit = number % 10;\n        if (digit == 9) {\n            roman_numeral.push_back('x');\n            number -= 9;\n        } else if (digit == 4) {\n            roman_numeral.push_back('c');\n            number -= 4;\n        } else if (digit == 5) {\n            roman_numeral.push_back('d');\n            number -= 5;\n        } else if (digit == 6) {\n            roman_numeral.push_back('m');\n            number -= 6;\n        } else if (digit == 7) {\n            roman_numeral.push_back('m');\n            number -= 7;\n        } else if (digit == 8) {\n            roman_numeral.push_back('m');\n            number -= 8;\n        } else if (digit == 1) {\n            roman_numeral.push_back('i');\n            number -= 1;\n        } else if (digit == 2) {\n            roman_numeral.push_back('i');\n            number -= 2;\n        } else if (digit == 3) {\n            roman_numeral.push_back('i');\n            number -= 3;\n        } else if (digit == 0) {\n            roman_numeral.push_back('i');\n            number -= 0;\n        }\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    int i = 0;\n    while (num > 0) {\n        int num_left = num % 10;\n        if (num_left == 4 || num_left == 9) {\n            roman_numeral += \"cd\";\n        } else if (num_left == 5) {\n            roman_numeral += \"xv\";\n        } else if (num_left == 6) {\n            roman_numeral += \"lx\";\n        } else if (num_left == 7) {\n            roman_numeral += \"cx\";\n        } else if (num_left == 8) {\n            roman_numeral += \"ix\";\n        } else if (num_left == 1) {\n            roman_numeral += \"i\";\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            case 11:\n                roman_numeral += \"xi\";\n                break;\n            case 12:\n                roman_numeral += \"xii\";\n                break;\n            case 13:\n                roman_numeral += \"xiii\";\n                break;\n            case 14:\n                roman_numeral += \"xiv\";\n                break;\n            case 15:\n                roman_numeral += \"xv\";\n                break;\n            case 16:\n                roman_numeral += \"xvi\";\n                break;\n            case 17:\n                roman_numeral += \"xvii\";\n                break;\n            case 18:\n                roman_numeral += \"xviii\";\n                break;\n            case 19:\n                roman_numeral += \"xix\";\n                break;\n            case 20:\n                roman_numeral += \"xx\";\n                break;\n            case 30:\n                roman_numeral += \"xxi\";\n                break;\n            case 40:\n                roman_numeral += \"xxii\";\n                break;\n            case 50:\n                roman_numeral += \"xxiii\";\n                break;\n            case 60:\n                roman_numeral += \"xxiv\";\n                ",
    "    std::string roman_numeral;\n    if (number == 0) {\n        roman_numeral = \"\";\n    } else if (number == 1) {\n        roman_numeral = \"I\";\n    } else if (number == 2) {\n        roman_numeral = \"II\";\n    } else if (number == 3) {\n        roman_numeral = \"III\";\n    } else if (number == 4) {\n        roman_numeral = \"IV\";\n    } else if (number == 5) {\n        roman_numeral = \"V\";\n    } else if (number == 6) {\n        roman_numeral = \"VI\";\n    } else if (number == 7) {\n        roman_numeral = \"VII\";\n    } else if (number == 8) {\n        roman_numeral = \"VIII\";\n    } else if (number == 9) {\n        roman_numeral = \"IX\";\n    } else if (number == 10) {\n        roman_numeral = \"X\";\n    } else if (number == 11) {\n        roman_numeral = \"XI\";\n    } else if (number == 12) {\n        roman_numeral = \"XII\";\n    } else if (number == 13) {\n        roman_numeral = \"XIII\";\n    } else if (number == 14) {\n        roman_numeral = \"XIV\";\n    } else if (number == 15) {\n        roman_numeral = \"XV\";\n    } else if (number == 16) {\n        roman_numeral = \"XVI\";\n    } else if (number == 17) {\n        roman_numeral = \"XVII\";\n    } else if (number == 18) {\n        roman_numeral = \"XVIII\";\n    } else if (number == 19) {\n        roman_numeral = \"XIX\";\n    } else if (number == 20) {\n        roman_numeral = \"XX\";\n    } else if (number == 30) {\n        roman_numeral = \"XXX\";\n    } else if (number == 40) {\n        roman_numeral = \"XL\";\n    } else if (number == 50) {",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        int digit = number % 10;\n        if (digit == 9 || digit == 4) {\n            roman_numeral.push_back('x');\n        } else if (digit == 5) {\n            roman_numeral.push_back('l');\n        } else if (digit == 6) {\n            roman_numeral.push_back('c');\n        } else if (digit == 7) {\n            roman_numeral.push_back('d');\n        } else if (digit == 8) {\n            roman_numeral.push_back('m');\n        } else if (digit == 9) {\n            roman_numeral.push_back('v');\n        } else if (digit == 2) {\n            roman_numeral.push_back('i');\n        } else if (digit == 3) {\n            roman_numeral.push_back('x');\n        } else if (digit == 1) {\n            roman_numeral.push_back('l');\n        } else {\n            roman_numeral.push_back('c');\n        }\n        number /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 9) {\n            roman.insert(roman.begin() + i, 'x');\n            number -= 9;\n        } else if (num == 4) {\n            roman.insert(roman.begin() + i, 'c');\n            number -= 4;\n        } else if (num == 5) {\n            roman.insert(roman.begin() + i, 'd');\n            number -= 5;\n        } else if (num == 1) {\n            roman.insert(roman.begin() + i, 'i');\n            number -= 1;\n        } else if (num == 2) {\n            roman.insert(roman.begin() + i, 'v');\n            number -= 2;\n        } else if (num == 3) {\n            roman.insert(roman.begin() + i, 'x');\n            number -= 3;\n        }\n        i++;\n    }\n    return roman;",
    "    std::string roman_numeral;\n    if (number == 0) {\n        roman_numeral = \"\";\n    } else if (number == 1) {\n        roman_numeral = \"i\";\n    } else if (number == 2) {\n        roman_numeral = \"ii\";\n    } else if (number == 3) {\n        roman_numeral = \"iii\";\n    } else if (number == 4) {\n        roman_numeral = \"iv\";\n    } else if (number == 5) {\n        roman_numeral = \"v\";\n    } else if (number == 6) {\n        roman_numeral = \"vi\";\n    } else if (number == 7) {\n        roman_numeral = \"vii\";\n    } else if (number == 8) {\n        roman_numeral = \"viii\";\n    } else if (number == 9) {\n        roman_numeral = \"ix\";\n    } else if (number == 10) {\n        roman_numeral = \"x\";\n    } else if (number == 11) {\n        roman_numeral = \"xi\";\n    } else if (number == 12) {\n        roman_numeral = \"xii\";\n    } else if (number == 13) {\n        roman_numeral = \"xiii\";\n    } else if (number == 14) {\n        roman_numeral = \"xiv\";\n    } else if (number == 15) {\n        roman_numeral = \"xv\";\n    } else if (number == 16) {\n        roman_numeral = \"xvi\";\n    } else if (number == 17) {\n        roman_numeral = \"xvii\";\n    } else if (number == 18) {\n        roman_numeral = \"xviii\";\n    } else if (number == 19) {\n        roman_numeral = \"xix\";\n    } else if (number == 20) {\n        roman_numeral = \"xx\";\n    } else if (number == 30) {\n        roman_numeral = \"xxx\";\n    } else if (number == 40) {\n        roman_numeral = \"xl\";\n    } else if (number == 50",
    "    std::string result;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        if (digit == 1) {\n            result.push_back('i');\n        } else if (digit == 2) {\n            result.push_back('ii');\n        } else if (digit == 3) {\n            result.push_back('iii');\n        } else if (digit == 4) {\n            result.push_back('iv');\n        } else if (digit == 5) {\n            result.push_back('v');\n        } else if (digit == 6) {\n            result.push_back('vi');\n        } else if (digit == 7) {\n            result.push_back('vii');\n        } else if (digit == 8) {\n            result.push_back('viii');\n        } else if (digit == 9) {\n            result.push_back('ix');\n        } else if (digit == 0) {\n            result.push_back('x');\n        }\n        num /= 10;\n    }\n    return result;",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        int digit = number % 10;\n        number /= 10;\n        switch (digit) {\n            case 9:\n                roman_numeral.insert(roman_numeral.begin() + i, 'x');\n                break;\n            case 4:\n                roman_numeral.insert(roman_numeral.begin() + i, 'c');\n                break;\n            case 5:\n                roman_numeral.insert(roman_numeral.begin() + i, 'd');\n                break;\n            case 6:\n                roman_numeral.insert(roman_numeral.begin() + i, 'm');\n                break;\n            case 7:\n                roman_numeral.insert(roman_numeral.begin() + i, 'l');\n                break;\n            case 8:\n                roman_numeral.insert(roman_numeral.begin() + i, 'x');\n                break;\n            case 3:\n                roman_numeral.insert(roman_numeral.begin() + i, 'v');\n                break;\n            case 2:\n                roman_numeral.insert(roman_numeral.begin() + i, 'i');\n                break;\n            case 1:\n                roman_numeral.insert(roman_numeral.begin() + i, 'x');\n                break;\n        }\n        i++;\n    }\n    return roman_numeral;",
    "    std::string result = \"\";\n    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    while (number > 0) {\n        int digit = number % 10;\n        if (digit == 9 || digit == 4 || digit == 5) {\n            result.append(\"x\");\n        }\n        if (digit == 9) {\n            result.append(\"ix\");\n        }\n        if (digit == 4) {\n            result.append(\"iv\");\n        }\n        if (digit == 5) {\n            result.append(\"v\");\n        }\n        number /= 10;\n    }\n    return result;",
    "    std::string result;\n    if (number < 1 || number > 1000) {\n        return result;\n    }\n    int num = number;\n    int i = 0;\n    while (num > 0) {\n        int roman_num = (num % 10);\n        if (roman_num == 1) {\n            result.insert(i, \"i\");\n        } else if (roman_num == 2) {\n            result.insert(i, \"ii\");\n        } else if (roman_num == 3) {\n            result.insert(i, \"iii\");\n        } else if (roman_num == 4) {\n            result.insert(i, \"iv\");\n        } else if (roman_num == 5) {\n            result.insert(i, \"v\");\n        } else if (roman_num == 6) {\n            result.insert(i, \"vi\");\n        } else if (roman_num == 7) {\n            result.insert(i, \"vii\");\n        } else if (roman_num == 8) {\n            result.insert(i, \"viii\");\n        } else if (roman_num == 9) {\n            result.insert(i, \"ix\");\n        } else if (roman_num == 10) {\n            result.insert(i, \"x\");\n        } else if (roman_num == 11) {\n            result.insert(i, \"xi\");\n        } else if (roman_num == 12) {\n            result.insert(i, \"xii\");\n        } else if (roman_num == 13) {\n            result.insert(i, \"xiii\");\n        } else if (roman_num == 14) {\n            result.insert(i, \"xiv\");\n        } else if (roman_num == 15) {\n            result.insert(i, \"xv\");\n        } else if (roman_num == 16) {\n            result.insert(i, \"xvi\");\n        } else if (roman_num == 17) {\n            result.insert(i, \"xvii\");\n        } else if (roman_num == 18) {\n            result.insert(i, \"xviii\");\n        } else if (roman_",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            default:\n                break;\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    if (number == 0) {\n        roman_numeral = \"\";\n    } else if (number == 1) {\n        roman_numeral = \"i\";\n    } else if (number == 2) {\n        roman_numeral = \"ii\";\n    } else if (number == 3) {\n        roman_numeral = \"iii\";\n    } else if (number == 4) {\n        roman_numeral = \"iv\";\n    } else if (number == 5) {\n        roman_numeral = \"v\";\n    } else if (number == 6) {\n        roman_numeral = \"vi\";\n    } else if (number == 7) {\n        roman_numeral = \"vii\";\n    } else if (number == 8) {\n        roman_numeral = \"viii\";\n    } else if (number == 9) {\n        roman_numeral = \"ix\";\n    } else if (number == 10) {\n        roman_numeral = \"x\";\n    } else if (number == 11) {\n        roman_numeral = \"xi\";\n    } else if (number == 12) {\n        roman_numeral = \"xii\";\n    } else if (number == 13) {\n        roman_numeral = \"xiii\";\n    } else if (number == 14) {\n        roman_numeral = \"xiv\";\n    } else if (number == 15) {\n        roman_numeral = \"xv\";\n    } else if (number == 16) {\n        roman_numeral = \"xvi\";\n    } else if (number == 17) {\n        roman_numeral = \"xvii\";\n    } else if (number == 18) {\n        roman_numeral = \"xviii\";\n    } else if (number == 19) {\n        roman_numeral = \"xix\";\n    } else if (number == 20) {\n        roman_numeral = \"xx\";\n    } else if (number == 30) {\n        roman_numeral = \"xxx\";\n    } else if (number == 40) {\n        roman_numeral = \"xl\";\n    } else if (number == 50",
    "    std::string roman_numeral;\n    if (number == 0) {\n        return \"\";\n    }\n    if (number < 0) {\n        number = -number;\n    }\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        number /= 10;\n        if (num == 9) {\n            roman_numeral += \"ix\";\n        } else if (num == 4) {\n            roman_numeral += \"iv\";\n        } else if (num == 5) {\n            roman_numeral += \"v\";\n        } else if (num == 1) {\n            roman_numeral += \"i\";\n        } else if (num == 2) {\n            roman_numeral += \"ii\";\n        } else if (num == 3) {\n            roman_numeral += \"iii\";\n        } else if (num == 6) {\n            roman_numeral += \"vi\";\n        } else if (num == 7) {\n            roman_numeral += \"vii\";\n        } else if (num == 8) {\n            roman_numeral += \"viii\";\n        } else if (num == 9) {\n            roman_numeral += \"ix\";\n        }\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    int i = 0;\n    while (num > 0) {\n        int num_left = num % 10;\n        if (num_left == 4 || num_left == 9) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'v');\n        } else if (num_left == 5) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'l');\n        } else if (num_left == 1 || num_left == 2 || num_left == 3) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'x');\n        } else if (num_left == 6) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'c');\n        } else if (num_left == 7) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'd');\n        } else if (num_left == 8) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'm');\n        }\n        num /= 10;\n        i++;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        if (digit == 4 || digit == 9) {\n            roman_numeral += \"cd\";\n        } else if (digit == 5) {\n            roman_numeral += \"d\";\n        } else if (digit == 6) {\n            roman_numeral += \"m\";\n        } else if (digit == 7) {\n            roman_numeral += \"m\";\n        } else if (digit == 8) {\n            roman_numeral += \"c\";\n        } else if (digit == 9) {\n            roman_numeral += \"x\";\n        } else {\n            roman_numeral += std::to_string(digit);\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    int i = 0;\n    while (num > 0) {\n        int num_left = num % 10;\n        if (num_left == 4 || num_left == 9) {\n            roman_numeral += \"cd\";\n        } else if (num_left == 5) {\n            roman_numeral += \"xc\";\n        } else if (num_left == 6) {\n            roman_numeral += \"xd\";\n        } else if (num_left == 7) {\n            roman_numeral += \"xl\";\n        } else if (num_left == 8) {\n            roman_numeral += \"x\";\n        } else if (num_left == 1) {\n            roman_numeral += \"i\";\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int num_left = num % 10;\n        int num_right = num / 10;\n        if (num_left == 4 || num_left == 9) {\n            roman_numeral.insert(roman_numeral.begin(), 'v');\n        } else if (num_left == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'l');\n        } else if (num_left == 1) {\n            roman_numeral.insert(roman_numeral.begin(), 'i');\n        } else if (num_left == 2) {\n            roman_numeral.insert(roman_numeral.begin(), 'x');\n        } else if (num_left == 3) {\n            roman_numeral.insert(roman_numeral.begin(), 'c');\n        } else if (num_left == 0) {\n            roman_numeral.insert(roman_numeral.begin(), 'm');\n        }\n        num = num_right;\n    }\n    return roman_numeral;",
    "    std::string result;\n    if (number == 0) {\n        result = \"\";\n        return result;\n    }\n    if (number < 0) {\n        result = \"\";\n        return result;\n    }\n    if (number > 1000) {\n        result = \"\";\n        return result;\n    }\n    int num = number;\n    int num_div = num / 1000;\n    int num_mod = num % 1000;\n    if (num_div > 0) {\n        result = int_to_mini_roman(num_div) + \"m\";\n    }\n    if (num_mod > 0) {\n        result = int_to_mini_roman(num_mod) + result;\n    }\n    return result;",
    "    std::string roman_numeral;\n    if (number == 0) {\n        roman_numeral = \"\";\n    } else if (number == 1) {\n        roman_numeral = \"i\";\n    } else if (number == 2) {\n        roman_numeral = \"ii\";\n    } else if (number == 3) {\n        roman_numeral = \"iii\";\n    } else if (number == 4) {\n        roman_numeral = \"iv\";\n    } else if (number == 5) {\n        roman_numeral = \"v\";\n    } else if (number == 6) {\n        roman_numeral = \"vi\";\n    } else if (number == 7) {\n        roman_numeral = \"vii\";\n    } else if (number == 8) {\n        roman_numeral = \"viii\";\n    } else if (number == 9) {\n        roman_numeral = \"ix\";\n    } else if (number == 10) {\n        roman_numeral = \"x\";\n    } else if (number == 11) {\n        roman_numeral = \"xi\";\n    } else if (number == 12) {\n        roman_numeral = \"xii\";\n    } else if (number == 13) {\n        roman_numeral = \"xiii\";\n    } else if (number == 14) {\n        roman_numeral = \"xiv\";\n    } else if (number == 15) {\n        roman_numeral = \"xv\";\n    } else if (number == 16) {\n        roman_numeral = \"xvi\";\n    } else if (number == 17) {\n        roman_numeral = \"xvii\";\n    } else if (number == 18) {\n        roman_numeral = \"xviii\";\n    } else if (number == 19) {\n        roman_numeral = \"xix\";\n    } else if (number == 20) {\n        roman_numeral = \"xx\";\n    } else if (number == 30) {\n        roman_numeral = \"xxx\";\n    } else if (number == 40) {\n        roman_numeral = \"xl\";\n    } else if (number == 50",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int num_left = num % 10;\n        switch (num_left) {\n            case 1:\n                roman_numeral.push_back('i');\n                break;\n            case 2:\n                roman_numeral.push_back('ii');\n                break;\n            case 3:\n                roman_numeral.push_back('iii');\n                break;\n            case 4:\n                roman_numeral.push_back('iv');\n                break;\n            case 5:\n                roman_numeral.push_back('v');\n                break;\n            case 6:\n                roman_numeral.push_back('vi');\n                break;\n            case 7:\n                roman_numeral.push_back('vii');\n                break;\n            case 8:\n                roman_numeral.push_back('viii');\n                break;\n            case 9:\n                roman_numeral.push_back('ix');\n                break;\n            case 10:\n                roman_numeral.push_back('x');\n                break;\n            case 11:\n                roman_numeral.push_back('xi');\n                break;\n            case 12:\n                roman_numeral.push_back('xii');\n                break;\n            case 13:\n                roman_numeral.push_back('xiii');\n                break;\n            case 14:\n                roman_numeral.push_back('xiv');\n                break;\n            case 15:\n                roman_numeral.push_back('xv');\n                break;\n            case 16:\n                roman_numeral.push_back('xvi');\n                break;\n            case 17:\n                roman_numeral.push_back('xvii');\n                break;\n            case 18:\n                roman_numeral.push_back('xviii');\n                break;\n            case 19:\n                roman_numeral.push_back('xix');\n                break;\n            case 20:\n                roman_numeral.push_back('xx');\n                break;\n            case 21:\n                roman_numeral.push_",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 4) {\n            roman_numeral += \"cd\";\n            number -= 4;\n        } else if (num == 9) {\n            roman_numeral += \"cm\";\n            number -= 9;\n        } else if (num == 5) {\n            roman_numeral += \"d\";\n            number -= 5;\n        } else if (num == 8) {\n            roman_numeral += \"c\";\n            number -= 8;\n        } else if (num == 2) {\n            roman_numeral += \"x\";\n            number -= 2;\n        } else if (num == 1) {\n            roman_numeral += \"i\";\n            number -= 1;\n        } else {\n            roman_numeral += std::to_string(num);\n            number -= num;\n        }\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        int digit = number % 10;\n        if (digit == 9 || digit == 4 || digit == 5) {\n            roman_numeral.push_back('x');\n        } else if (digit == 9 || digit == 4) {\n            roman_numeral.push_back('l');\n        } else if (digit == 9 || digit == 5) {\n            roman_numeral.push_back('c');\n        } else if (digit == 4 || digit == 5) {\n            roman_numeral.push_back('d');\n        } else if (digit == 5) {\n            roman_numeral.push_back('m');\n        } else if (digit == 1) {\n            roman_numeral.push_back('i');\n        } else if (digit == 2) {\n            roman_numeral.push_back('v');\n        } else if (digit == 3) {\n            roman_numeral.push_back('x');\n        } else if (digit == 6) {\n            roman_numeral.push_back('l');\n        } else if (digit == 7) {\n            roman_numeral.push_back('c');\n        } else if (digit == 8) {\n            roman_numeral.push_back('d');\n        } else if (digit == 0) {\n            roman_numeral.push_back('m');\n        }\n        number /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    if (number == 1) {\n        roman_numeral = \"i\";\n    } else if (number == 2) {\n        roman_numeral = \"ii\";\n    } else if (number == 3) {\n        roman_numeral = \"iii\";\n    } else if (number == 4) {\n        roman_numeral = \"iv\";\n    } else if (number == 5) {\n        roman_numeral = \"v\";\n    } else if (number == 6) {\n        roman_numeral = \"vi\";\n    } else if (number == 7) {\n        roman_numeral = \"vii\";\n    } else if (number == 8) {\n        roman_numeral = \"viii\";\n    } else if (number == 9) {\n        roman_numeral = \"ix\";\n    } else if (number == 10) {\n        roman_numeral = \"x\";\n    } else if (number == 11) {\n        roman_numeral = \"xi\";\n    } else if (number == 12) {\n        roman_numeral = \"xii\";\n    } else if (number == 13) {\n        roman_numeral = \"xiii\";\n    } else if (number == 14) {\n        roman_numeral = \"xiv\";\n    } else if (number == 15) {\n        roman_numeral = \"xv\";\n    } else if (number == 16) {\n        roman_numeral = \"xvi\";\n    } else if (number == 17) {\n        roman_numeral = \"xvii\";\n    } else if (number == 18) {\n        roman_numeral = \"xviii\";\n    } else if (number == 19) {\n        roman_numeral = \"xix\";\n    } else if (number == 20) {\n        roman_numeral = \"xx\";\n    } else if (number == 30) {\n        roman_numeral = \"xxx\";\n    } else if (number == 40) {\n        roman_numeral = \"xl\";\n    } else if (number ==",
    "    std::string roman_numeral;\n    if (number == 0) {\n        roman_numeral = \"\";\n    } else if (number == 1) {\n        roman_numeral = \"I\";\n    } else if (number == 2) {\n        roman_numeral = \"II\";\n    } else if (number == 3) {\n        roman_numeral = \"III\";\n    } else if (number == 4) {\n        roman_numeral = \"IV\";\n    } else if (number == 5) {\n        roman_numeral = \"V\";\n    } else if (number == 6) {\n        roman_numeral = \"VI\";\n    } else if (number == 7) {\n        roman_numeral = \"VII\";\n    } else if (number == 8) {\n        roman_numeral = \"VIII\";\n    } else if (number == 9) {\n        roman_numeral = \"IX\";\n    } else if (number == 10) {\n        roman_numeral = \"X\";\n    } else if (number == 11) {\n        roman_numeral = \"XI\";\n    } else if (number == 12) {\n        roman_numeral = \"XII\";\n    } else if (number == 13) {\n        roman_numeral = \"XIII\";\n    } else if (number == 14) {\n        roman_numeral = \"XIV\";\n    } else if (number == 15) {\n        roman_numeral = \"XV\";\n    } else if (number == 16) {\n        roman_numeral = \"XVI\";\n    } else if (number == 17) {\n        roman_numeral = \"XVII\";\n    } else if (number == 18) {\n        roman_numeral = \"XVIII\";\n    } else if (number == 19) {\n        roman_numeral = \"XIX\";\n    } else if (number == 20) {\n        roman_numeral = \"XX\";\n    } else if (number == 30) {\n        roman_numeral = \"XXX\";\n    } else if (number == 40) {\n        roman_numeral = \"XL\";\n    } else if (number == 50) {",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int remainder = num % 10;\n        switch (remainder) {\n            case 9:\n                roman_numeral += \"xix\";\n                break;\n            case 4:\n                roman_numeral += \"x\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"l\";\n                break;\n            case 7:\n                roman_numeral += \"xl\";\n                break;\n            case 8:\n                roman_numeral += \"lx\";\n                break;\n            case 3:\n                roman_numeral += \"m\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            default:\n                break;\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            case 11:\n                roman_numeral += \"xi\";\n                break;\n            case 12:\n                roman_numeral += \"xii\";\n                break;\n            case 13:\n                roman_numeral += \"xiii\";\n                break;\n            case 14:\n                roman_numeral += \"xiv\";\n                break;\n            case 15:\n                roman_numeral += \"xv\";\n                break;\n            case 16:\n                roman_numeral += \"xvi\";\n                break;\n            case 17:\n                roman_numeral += \"xvii\";\n                break;\n            case 18:\n                roman_numeral += \"xviii\";\n                break;\n            case 19:\n                roman_numeral += \"xix\";\n                break;\n            case 20:\n                roman_numeral += \"xx\";\n                break;\n            case 30:\n                roman_numeral += \"xxi\";\n                break;\n            case 40:\n                roman_numeral += \"xxii\";\n                break;\n            case 50:\n                roman_numeral += \"xxiii\";\n                break;\n            case 60:\n                roman_numeral += \"xxiv\";\n                ",
    "    std::string result;\n    int i = 0;\n    while (number > 0) {\n        int digit = number % 10;\n        if (digit == 4 || digit == 9) {\n            result.push_back('c');\n        } else if (digit == 5) {\n            result.push_back('d');\n        } else if (digit == 6) {\n            result.push_back('m');\n        } else if (digit == 7) {\n            result.push_back('m');\n            result.push_back('c');\n        } else if (digit == 8) {\n            result.push_back('c');\n            result.push_back('c');\n        } else if (digit == 9) {\n            result.push_back('x');\n        } else {\n            result.push_back('v');\n        }\n        number /= 10;\n        i++;\n    }\n    while (i < result.size()) {\n        if (result[i] == 'c' || result[i] == 'd' || result[i] == 'm') {\n            result[i] = result[i] + result[i - 1];\n        } else {\n            result[i] = result[i] + result[i - 1];\n            result[i - 1] = result[i - 1] + result[i];\n        }\n        i++;\n    }\n    return result;",
    "    std::string result;\n    if (number == 0) {\n        result = \"\";\n        return result;\n    }\n    if (number < 0) {\n        result = \"\";\n        return result;\n    }\n    if (number > 1000) {\n        result = \"\";\n        return result;\n    }\n    int n = number;\n    while (n > 0) {\n        int roman_num = 0;\n        if (n >= 1000) {\n            roman_num = 1000;\n            n -= 1000;\n        }\n        if (n >= 900) {\n            roman_num = 900;\n            n -= 900;\n        }\n        if (n >= 500) {\n            roman_num = 500;\n            n -= 500;\n        }\n        if (n >= 400) {\n            roman_num = 400;\n            n -= 400;\n        }\n        if (n >= 100) {\n            roman_num = 100;\n            n -= 100;\n        }\n        if (n >= 90) {\n            roman_num = 90;\n            n -= 90;\n        }\n        if (n >= 50) {\n            roman_num = 50;\n            n -= 50;\n        }\n        if (n >= 40) {\n            roman_num = 40;\n            n -= 40;\n        }\n        if (n >= 10) {\n            roman_num = 10;\n            n -= 10;\n        }\n        if (n >= 9) {\n            roman_num = 9;\n            n -= 9;\n        }\n        if (n >= 5) {\n            roman_num = 5;\n            n -= 5;\n        }\n        if (n >= 4) {\n            roman_num = 4;\n            n -= 4;\n        }\n        if (n >= 1) {\n            roman_num = 1;\n            n -= 1;\n        }\n        result += roman_num_to_char(roman_num);\n    }\n    return result;",
    "    std::string result;\n    if (number == 0) {\n        result = \"\";\n    } else if (number == 1) {\n        result = \"i\";\n    } else if (number == 2) {\n        result = \"ii\";\n    } else if (number == 3) {\n        result = \"iii\";\n    } else if (number == 4) {\n        result = \"iv\";\n    } else if (number == 5) {\n        result = \"v\";\n    } else if (number == 6) {\n        result = \"vi\";\n    } else if (number == 7) {\n        result = \"vii\";\n    } else if (number == 8) {\n        result = \"viii\";\n    } else if (number == 9) {\n        result = \"ix\";\n    } else if (number == 10) {\n        result = \"x\";\n    } else if (number == 11) {\n        result = \"xi\";\n    } else if (number == 12) {\n        result = \"xii\";\n    } else if (number == 13) {\n        result = \"xiii\";\n    } else if (number == 14) {\n        result = \"xiv\";\n    } else if (number == 15) {\n        result = \"xv\";\n    } else if (number == 16) {\n        result = \"xvi\";\n    } else if (number == 17) {\n        result = \"xvii\";\n    } else if (number == 18) {\n        result = \"xviii\";\n    } else if (number == 19) {\n        result = \"xix\";\n    } else if (number == 20) {\n        result = \"xx\";\n    } else if (number == 30) {\n        result = \"xxx\";\n    } else if (number == 40) {\n        result = \"xl\";\n    } else if (number == 50) {\n        result = \"l\";\n    } else if (number == 60) {\n        result = \"lx\";\n    } else if (number == 70) {\n        result = \"lxx\";\n    } else if (number == 80) {\n        result = \"lxxx\";\n    } else if (number",
    "    std::string roman;\n    while (number > 0) {\n        int digit = number % 10;\n        if (digit == 9 || digit == 4 || digit == 5) {\n            roman.push_back('x');\n        } else if (digit == 9 || digit == 4) {\n            roman.push_back('l');\n        } else if (digit == 5) {\n            roman.push_back('c');\n        } else {\n            roman.push_back('m');\n        }\n        number /= 10;\n    }\n    return roman;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int num_digits = num % 10;\n        switch (num_digits) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            case 11:\n                roman_numeral += \"xi\";\n                break;\n            case 12:\n                roman_numeral += \"xii\";\n                break;\n            case 13:\n                roman_numeral += \"xiii\";\n                break;\n            case 14:\n                roman_numeral += \"xiv\";\n                break;\n            case 15:\n                roman_numeral += \"xv\";\n                break;\n            case 16:\n                roman_numeral += \"xvi\";\n                break;\n            case 17:\n                roman_numeral += \"xvii\";\n                break;\n            case 18:\n                roman_numeral += \"xviii\";\n                break;\n            case 19:\n                roman_numeral += \"xix\";\n                break;\n            case 20:\n                roman_numeral += \"xx\";\n                break;\n            case 30:\n                roman_numeral += \"xxx\";\n                break;\n            case 40:\n                roman_numeral += \"xl\";\n                break;\n            case 50:\n                roman_numeral += \"l\";\n                break;\n            case 60:\n                roman_numeral += \"l",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int num_div = num / 10;\n        int num_mod = num % 10;\n        if (num_div == 4 || num_div == 9) {\n            roman_numeral += \"cd\";\n        } else if (num_div == 5) {\n            roman_numeral += \"xc\";\n        } else if (num_div == 6) {\n            roman_numeral += \"xd\";\n        } else if (num_div == 7) {\n            roman_numeral += \"xl\";\n        } else if (num_div == 8) {\n            roman_numeral += \"x\";\n        } else if (num_div == 1) {\n            roman_numeral += \"i\";\n        } else if (num_div == 2) {\n            roman_numeral += \"ii\";\n        } else if (num_div == 3) {\n            roman_numeral += \"xv\";\n        }\n        num = num_mod;\n    }\n    return roman_numeral;",
    "    std::string result;\n    int n = number;\n    while (n > 0) {\n        int digit = n % 10;\n        switch (digit) {\n            case 1:\n                result.append(\"x\");\n                break;\n            case 2:\n                result.append(\"x\");\n                break;\n            case 3:\n                result.append(\"c\");\n                break;\n            case 4:\n                result.append(\"c\");\n                break;\n            case 5:\n                result.append(\"c\");\n                break;\n            case 6:\n                result.append(\"d\");\n                break;\n            case 7:\n                result.append(\"d\");\n                break;\n            case 8:\n                result.append(\"d\");\n                break;\n            case 9:\n                result.append(\"d\");\n                break;\n            case 10:\n                result.append(\"v\");\n                break;\n            case 11:\n                result.append(\"v\");\n                break;\n            case 12:\n                result.append(\"v\");\n                break;\n            case 13:\n                result.append(\"v\");\n                break;\n            case 14:\n                result.append(\"v\");\n                break;\n            case 15:\n                result.append(\"v\");\n                break;\n            case 16:\n                result.append(\"v\");\n                break;\n            case 17:\n                result.append(\"v\");\n                break;\n            case 18:\n                result.append(\"v\");\n                break;\n            case 19:\n                result.append(\"v\");\n                break;\n            case 20:\n                result.append(\"v\");\n                break;\n            case 21:\n                result.append(\"v\");\n                break;\n            case 22:\n                result.append(\"v\");\n                break;\n            case 23:\n                result.append(\"v\");\n                break;\n            case 24:\n                result.append(\"v\");\n                break;\n            case 25:\n                result.append(\"v\");\n                break;\n            case 26:\n                result.append(\"v\");\n                break;\n            case 27:\n                result.append(\"v\");\n                break;\n            case 28:\n                result.append(\"v\");\n                ",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int num_left = num % 10;\n        if (num_left == 4 || num_left == 9) {\n            roman_numeral.insert(roman_numeral.begin(), 'v');\n        } else if (num_left == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'x');\n        } else if (num_left == 1 || num_left == 2) {\n            roman_numeral.insert(roman_numeral.begin(), 'i');\n        } else if (num_left == 3) {\n            roman_numeral.insert(roman_numeral.begin(), 'c');\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    if (number == 1) {\n        roman_numeral = \"I\";\n    } else if (number == 2) {\n        roman_numeral = \"II\";\n    } else if (number == 3) {\n        roman_numeral = \"III\";\n    } else if (number == 4) {\n        roman_numeral = \"IV\";\n    } else if (number == 5) {\n        roman_numeral = \"V\";\n    } else if (number == 6) {\n        roman_numeral = \"VI\";\n    } else if (number == 7) {\n        roman_numeral = \"VII\";\n    } else if (number == 8) {\n        roman_numeral = \"VIII\";\n    } else if (number == 9) {\n        roman_numeral = \"IX\";\n    } else if (number == 10) {\n        roman_numeral = \"X\";\n    } else if (number == 11) {\n        roman_numeral = \"XI\";\n    } else if (number == 12) {\n        roman_numeral = \"XII\";\n    } else if (number == 13) {\n        roman_numeral = \"XIII\";\n    } else if (number == 14) {\n        roman_numeral = \"XIV\";\n    } else if (number == 15) {\n        roman_numeral = \"XV\";\n    } else if (number == 16) {\n        roman_numeral = \"XVI\";\n    } else if (number == 17) {\n        roman_numeral = \"XVII\";\n    } else if (number == 18) {\n        roman_numeral = \"XVIII\";\n    } else if (number == 19) {\n        roman_numeral = \"XIX\";\n    } else if (number == 20) {\n        roman_numeral = \"XX\";\n    } else if (number == 30) {\n        roman_numeral = \"XXX\";\n    } else if (number == 40) {\n        roman_numeral = \"XL\";\n    } else if (number == 50)",
    "    std::string roman_numeral;\n    if (number == 0) {\n        return \"\";\n    }\n    if (number == 1) {\n        roman_numeral = \"i\";\n    } else if (number == 2) {\n        roman_numeral = \"ii\";\n    } else if (number == 3) {\n        roman_numeral = \"iii\";\n    } else if (number == 4) {\n        roman_numeral = \"iv\";\n    } else if (number == 5) {\n        roman_numeral = \"v\";\n    } else if (number == 6) {\n        roman_numeral = \"vi\";\n    } else if (number == 7) {\n        roman_numeral = \"vii\";\n    } else if (number == 8) {\n        roman_numeral = \"viii\";\n    } else if (number == 9) {\n        roman_numeral = \"ix\";\n    } else if (number == 10) {\n        roman_numeral = \"x\";\n    } else if (number == 11) {\n        roman_numeral = \"xi\";\n    } else if (number == 12) {\n        roman_numeral = \"xii\";\n    } else if (number == 13) {\n        roman_numeral = \"xiii\";\n    } else if (number == 14) {\n        roman_numeral = \"xiv\";\n    } else if (number == 15) {\n        roman_numeral = \"xv\";\n    } else if (number == 16) {\n        roman_numeral = \"xvi\";\n    } else if (number == 17) {\n        roman_numeral = \"xvii\";\n    } else if (number == 18) {\n        roman_numeral = \"xviii\";\n    } else if (number == 19) {\n        roman_numeral = \"xix\";\n    } else if (number == 20) {\n        roman_numeral = \"xx\";\n    } else if (number == 30) {\n        roman_numeral = \"xxx\";\n    } else if (number == 40) {\n        roman_numeral = \"xl\";\n    } else if (number == 50) {\n",
    "    std::string result;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 9:\n                result += \"xix\";\n                break;\n            case 4:\n                result += \"cdx\";\n                break;\n            case 5:\n                result += \"cdv\";\n                break;\n            case 6:\n                result += \"cdix\";\n                break;\n            case 7:\n                result += \"cdxix\";\n                break;\n            case 8:\n                result += \"cdxx\";\n                break;\n            case 1:\n                result += \"cix\";\n                break;\n            case 2:\n                result += \"cv\";\n                break;\n            case 3:\n                result += \"cix\";\n                break;\n            default:\n                result += \"\";\n                break;\n        }\n        num /= 10;\n    }\n    return result;",
    "    std::string roman;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 9 || num == 4) {\n            roman.insert(roman.begin() + i, 'v');\n        } else if (num == 8) {\n            roman.insert(roman.begin() + i, 'l');\n        } else if (num == 5) {\n            roman.insert(roman.begin() + i, 'd');\n        } else if (num == 6) {\n            roman.insert(roman.begin() + i, 'm');\n        } else if (num == 3) {\n            roman.insert(roman.begin() + i, 'c');\n        } else if (num == 2) {\n            roman.insert(roman.begin() + i, 'x');\n        } else if (num == 1) {\n            roman.insert(roman.begin() + i, 'i');\n        }\n        number /= 10;\n        i++;\n    }\n    return roman;",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        int digit = number % 10;\n        number /= 10;\n        switch (digit) {\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 3:\n                roman_numeral += \"ii\";\n                break;\n            case 2:\n                roman_numeral += \"i\";\n                break;\n            case 1:\n                roman_numeral += \"x\";\n                break;\n            default:\n                assert(false);\n        }\n    }\n    return roman_numeral;",
    "    std::string roman;\n    while (number > 0) {\n        int digit = number % 10;\n        switch (digit) {\n            case 1:\n                roman += \"i\";\n                break;\n            case 2:\n                roman += \"ii\";\n                break;\n            case 3:\n                roman += \"iii\";\n                break;\n            case 4:\n                roman += \"iv\";\n                break;\n            case 5:\n                roman += \"v\";\n                break;\n            case 6:\n                roman += \"vi\";\n                break;\n            case 7:\n                roman += \"vii\";\n                break;\n            case 8:\n                roman += \"viii\";\n                break;\n            case 9:\n                roman += \"ix\";\n                break;\n            case 10:\n                roman += \"x\";\n                break;\n            case 11:\n                roman += \"xi\";\n                break;\n            case 12:\n                roman += \"xii\";\n                break;\n            case 13:\n                roman += \"xiii\";\n                break;\n            case 14:\n                roman += \"xiv\";\n                break;\n            case 15:\n                roman += \"xv\";\n                break;\n            case 16:\n                roman += \"xvi\";\n                break;\n            case 17:\n                roman += \"xvii\";\n                break;\n            case 18:\n                roman += \"xviii\";\n                break;\n            case 19:\n                roman += \"xix\";\n                break;\n            case 20:\n                roman += \"xx\";\n                break;\n            case 30:\n                roman += \"xxx\";\n                break;\n            case 40:\n                roman += \"xl\";\n                break;\n            case 50:\n                roman += \"l\";\n                break;\n            case 60:\n                roman += \"lx\";\n                break;\n            case 70:\n                roman += \"lxx\";\n                break;\n            case 80:\n                roman += \"lxxx\";\n                break;\n            case 90:\n                roman += \"lxxxx\";\n                break;\n            case 100:\n                roman += \"xc\";\n                break;\n            case 200:\n                roman += \"xc\";\n                break",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            default:\n                break;\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    int i = 0;\n    while (num > 0) {\n        int num_left = num % 10;\n        if (num_left == 4 || num_left == 9) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'v');\n        } else if (num_left == 5 || num_left == 8) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'l');\n        } else if (num_left == 1 || num_left == 2 || num_left == 3) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'x');\n        } else if (num_left == 6 || num_left == 7) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'c');\n        }\n        num /= 10;\n        i++;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    if (number == 0) {\n        roman_numeral = \"\";\n    } else if (number == 1) {\n        roman_numeral = \"i\";\n    } else if (number == 2) {\n        roman_numeral = \"ii\";\n    } else if (number == 3) {\n        roman_numeral = \"iii\";\n    } else if (number == 4) {\n        roman_numeral = \"iv\";\n    } else if (number == 5) {\n        roman_numeral = \"v\";\n    } else if (number == 6) {\n        roman_numeral = \"vi\";\n    } else if (number == 7) {\n        roman_numeral = \"vii\";\n    } else if (number == 8) {\n        roman_numeral = \"viii\";\n    } else if (number == 9) {\n        roman_numeral = \"ix\";\n    } else if (number == 10) {\n        roman_numeral = \"x\";\n    } else if (number == 11) {\n        roman_numeral = \"xi\";\n    } else if (number == 12) {\n        roman_numeral = \"xii\";\n    } else if (number == 13) {\n        roman_numeral = \"xiii\";\n    } else if (number == 14) {\n        roman_numeral = \"xiv\";\n    } else if (number == 15) {\n        roman_numeral = \"xv\";\n    } else if (number == 16) {\n        roman_numeral = \"xvi\";\n    } else if (number == 17) {\n        roman_numeral = \"xvii\";\n    } else if (number == 18) {\n        roman_numeral = \"xviii\";\n    } else if (number == 19) {\n        roman_numeral = \"xix\";\n    } else if (number == 20) {\n        roman_numeral = \"xx\";\n    } else if (number == 30) {\n        roman_numeral = \"xxx\";\n    } else if (number == 40) {\n        roman_numeral = \"xl\";\n    } else if (number == 50",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number != 0) {\n        int digit = number % 10;\n        number /= 10;\n        if (digit == 9 || digit == 4 || digit == 5) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'v');\n        } else if (digit == 9 || digit == 3 || digit == 1) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'x');\n        } else if (digit == 8) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'l');\n        } else if (digit == 7) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'c');\n        } else if (digit == 6) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'd');\n        } else if (digit == 5) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'm');\n        } else if (digit == 4) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'i');\n        } else if (digit == 3) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'v');\n        } else if (digit == 2) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'x');\n        } else if (digit == 1) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'l');\n        }\n        i++;\n    }\n    return roman_numeral;",
    "    std::string roman;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 9 || num == 4) {\n            roman.insert(roman.begin() + i, 'x');\n        } else if (num == 9 || num == 5) {\n            roman.insert(roman.begin() + i, 'l');\n        } else if (num == 9 || num == 1) {\n            roman.insert(roman.begin() + i, 'c');\n        } else if (num == 4 || num == 5) {\n            roman.insert(roman.begin() + i, 'd');\n        } else if (num == 1) {\n            roman.insert(roman.begin() + i, 'm');\n        }\n        number /= 10;\n        i++;\n    }\n    return roman;",
    "    std::string result;\n    if (number < 1 || number > 1000) {\n        return result;\n    }\n    if (number == 1) {\n        result = \"i\";\n    } else if (number == 2) {\n        result = \"ii\";\n    } else if (number == 3) {\n        result = \"iii\";\n    } else if (number == 4) {\n        result = \"iv\";\n    } else if (number == 5) {\n        result = \"v\";\n    } else if (number == 6) {\n        result = \"vi\";\n    } else if (number == 7) {\n        result = \"vii\";\n    } else if (number == 8) {\n        result = \"viii\";\n    } else if (number == 9) {\n        result = \"ix\";\n    } else if (number == 10) {\n        result = \"x\";\n    } else if (number == 11) {\n        result = \"xi\";\n    } else if (number == 12) {\n        result = \"xii\";\n    } else if (number == 13) {\n        result = \"xiii\";\n    } else if (number == 14) {\n        result = \"xiv\";\n    } else if (number == 15) {\n        result = \"xv\";\n    } else if (number == 16) {\n        result = \"xvi\";\n    } else if (number == 17) {\n        result = \"xvii\";\n    } else if (number == 18) {\n        result = \"xviii\";\n    } else if (number == 19) {\n        result = \"xix\";\n    } else if (number == 20) {\n        result = \"xx\";\n    } else if (number == 30) {\n        result = \"xxx\";\n    } else if (number == 40) {\n        result = \"xl\";\n    } else if (number == 50) {\n        result = \"l\";\n    } else if (number == 60) {\n        result = \"lx\";\n    } else if (number == 70) {\n        result = \"lxx\";\n    } else if (number == 80) {\n        result = \"lxxx\";\n    }",
    "    std::string roman_numeral;\n    int remainder = number;\n    while (remainder > 0) {\n        int digit = remainder % 10;\n        remainder /= 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            case 11:\n                roman_numeral += \"xi\";\n                break;\n            case 12:\n                roman_numeral += \"xii\";\n                break;\n            case 13:\n                roman_numeral += \"xiii\";\n                break;\n            case 14:\n                roman_numeral += \"xiv\";\n                break;\n            case 15:\n                roman_numeral += \"xv\";\n                break;\n            case 16:\n                roman_numeral += \"xvi\";\n                break;\n            case 17:\n                roman_numeral += \"xvii\";\n                break;\n            case 18:\n                roman_numeral += \"xviii\";\n                break;\n            case 19:\n                roman_numeral += \"xix\";\n                break;\n            case 20:\n                roman_numeral += \"xx\";\n                break;\n            case 30:\n                roman_numeral += \"xxx\";\n                break;\n            case 40:\n                roman_numeral += \"xl\";\n                break;\n            case 50:\n                roman_numeral += \"l\";\n                break;\n            case 60:\n                roman_",
    "    std::string roman;\n    int num = number;\n    while (num > 0) {\n        int num_left = num % 10;\n        if (num_left == 4 || num_left == 9) {\n            roman.insert(roman.begin(), 'v');\n        } else if (num_left == 5) {\n            roman.insert(roman.begin(), 'x');\n        } else if (num_left == 1 || num_left == 2 || num_left == 3) {\n            roman.insert(roman.begin(), 'i');\n        } else if (num_left == 6) {\n            roman.insert(roman.begin(), 'c');\n        } else if (num_left == 7) {\n            roman.insert(roman.begin(), 'l');\n        } else if (num_left == 8) {\n            roman.insert(roman.begin(), 'd');\n        }\n        num /= 10;\n    }\n    return roman;",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 4 || num == 9) {\n            roman_numeral.push_back('x');\n        } else if (num == 5) {\n            roman_numeral.push_back('l');\n        } else if (num == 6) {\n            roman_numeral.push_back('c');\n        } else if (num == 7) {\n            roman_numeral.push_back('d');\n        } else if (num == 8) {\n            roman_numeral.push_back('m');\n        } else if (num == 0) {\n            roman_numeral.push_back('i');\n        }\n        number /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 9 || num == 4 || num == 5) {\n            roman.insert(roman.begin(), 'x');\n        } else if (num == 9 || num == 4) {\n            roman.insert(roman.begin(), 'l');\n        } else if (num == 5) {\n            roman.insert(roman.begin(), 'c');\n        } else {\n            roman.insert(roman.begin(), 'v');\n        }\n        number /= 10;\n    }\n    return roman;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int num_div = num / 10;\n        int num_rem = num % 10;\n        if (num_div == 4 || num_div == 9) {\n            roman_numeral += \"cd\";\n            num -= num_div * 10;\n        } else if (num_div == 5) {\n            roman_numeral += \"dv\";\n            num -= num_div * 10;\n        } else if (num_div == 6) {\n            roman_numeral += \"d\";\n            num -= num_div * 10;\n        } else if (num_div == 7) {\n            roman_numeral += \"m\";\n            num -= num_div * 10;\n        } else if (num_div == 8) {\n            roman_numeral += \"x\";\n            num -= num_div * 10;\n        } else if (num_div == 1) {\n            roman_numeral += \"i\";\n            num -= num_div * 10;\n        } else if (num_div == 2) {\n            roman_numeral += \"ii\";\n            num -= num_div * 10;\n        } else if (num_div == 3) {\n            roman_numeral += \"vii\";\n            num -= num_div * 10;\n        } else if (num_div == 0) {\n            roman_numeral += \"v\";\n            num -= num_div * 10;\n        }\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 4 || num == 9) {\n            roman_numeral.push_back('x');\n            i++;\n        } else if (num == 5) {\n            roman_numeral.push_back('l');\n            i++;\n        } else if (num == 6) {\n            roman_numeral.push_back('c');\n            i++;\n        } else if (num == 7) {\n            roman_numeral.push_back('d');\n            i++;\n        } else if (num == 8) {\n            roman_numeral.push_back('m');\n            i++;\n        } else if (num == 0) {\n            roman_numeral.push_back('i');\n            i++;\n        }\n        number /= 10;\n    }\n    while (i < roman_numeral.size()) {\n        roman_numeral.insert(roman_numeral.begin(), 'i');\n        i++;\n    }\n    return roman_numeral;",
    "    std::string result;\n    if (number < 1 || number > 1000) {\n        return result;\n    }\n    std::string roman_numeral_map = \"mcmxcix\";\n    int num_digits = 0;\n    while (number > 0) {\n        int digit = number % 10;\n        number /= 10;\n        if (digit != 0) {\n            result.insert(result.begin(), roman_numeral_map[digit]);\n        }\n        num_digits++;\n    }\n    if (num_digits % 2 == 1) {\n        result.insert(result.begin(), 'i');\n    }\n    return result;",
    "    std::string result = \"\";\n    if (number < 0) {\n        return \"\";\n    }\n    if (number == 0) {\n        return \"\";\n    }\n    if (number == 1) {\n        return \"i\";\n    }\n    if (number == 2) {\n        return \"ii\";\n    }\n    if (number == 3) {\n        return \"iii\";\n    }\n    if (number == 4) {\n        return \"iv\";\n    }\n    if (number == 5) {\n        return \"v\";\n    }\n    if (number == 6) {\n        return \"vi\";\n    }\n    if (number == 7) {\n        return \"vii\";\n    }\n    if (number == 8) {\n        return \"viii\";\n    }\n    if (number == 9) {\n        return \"ix\";\n    }\n    if (number == 10) {\n        return \"x\";\n    }\n    if (number == 11) {\n        return \"xi\";\n    }\n    if (number == 12) {\n        return \"xii\";\n    }\n    if (number == 13) {\n        return \"xiii\";\n    }\n    if (number == 14) {\n        return \"xiv\";\n    }\n    if (number == 15) {\n        return \"xv\";\n    }\n    if (number == 16) {\n        return \"xvi\";\n    }\n    if (number == 17) {\n        return \"xvii\";\n    }\n    if (number == 18) {\n        return \"xviii\";\n    }\n    if (number == 19) {\n        return \"xix\";\n    }\n    if (number == 20) {\n        return \"xx\";\n    }\n    if (number == 30) {\n        return \"xxx\";\n    }\n    if (number == 40) {\n        return \"xl\";\n    }\n    if (number == 50) {\n        return \"l\";\n    }\n    if (number == 60) {\n        return \"lx\";\n    }\n    if (number == 70) {\n        return \"lxx\";\n    }\n    if (number",
    "    std::string roman;\n    int num = number;\n    while (num > 0) {\n        int rem = num % 10;\n        if (rem == 9 || rem == 4 || rem == 5 || rem == 1) {\n            roman += \"x\";\n        } else if (rem == 8) {\n            roman += \"c\";\n        } else if (rem == 6) {\n            roman += \"d\";\n        } else if (rem == 3) {\n            roman += \"m\";\n        } else if (rem == 2) {\n            roman += \"ii\";\n        } else if (rem == 7) {\n            roman += \"v\";\n        } else if (rem == 0) {\n            roman += \"i\";\n        }\n        num /= 10;\n    }\n    return roman;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        if (digit == 4 || digit == 9) {\n            roman_numeral.append(\"cd\");\n        } else if (digit == 5) {\n            roman_numeral.append(\"d\");\n        } else if (digit == 6) {\n            roman_numeral.append(\"m\");\n        } else if (digit == 7) {\n            roman_numeral.append(\"m\");\n            roman_numeral.append(\"d\");\n        } else if (digit == 8) {\n            roman_numeral.append(\"c\");\n        } else if (digit == 9) {\n            roman_numeral.append(\"x\");\n        } else {\n            roman_numeral.append(std::to_string(digit));\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        if (number >= 1000) {\n            roman_numeral += \"m\";\n            number -= 1000;\n        } else if (number >= 900) {\n            roman_numeral += \"cm\";\n            number -= 900;\n        } else if (number >= 500) {\n            roman_numeral += \"d\";\n            number -= 500;\n        } else if (number >= 400) {\n            roman_numeral += \"cd\";\n            number -= 400;\n        } else if (number >= 100) {\n            roman_numeral += \"c\";\n            number -= 100;\n        } else if (number >= 90) {\n            roman_numeral += \"xc\";\n            number -= 90;\n        } else if (number >= 50) {\n            roman_numeral += \"l\";\n            number -= 50;\n        } else if (number >= 40) {\n            roman_numeral += \"xl\";\n            number -= 40;\n        } else if (number >= 10) {\n            roman_numeral += \"x\";\n            number -= 10;\n        } else if (number >= 9) {\n            roman_numeral += \"ix\";\n            number -= 9;\n        } else if (number >= 5) {\n            roman_numeral += \"v\";\n            number -= 5;\n        } else if (number >= 4) {\n            roman_numeral += \"iv\";\n            number -= 4;\n        } else if (number >= 1) {\n            roman_numeral += \"i\";\n            number -= 1;\n        }\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            default:\n                break;\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string result;\n    if (number < 1 || number > 1000) {\n        return result;\n    }\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                result.append(\"x\");\n                break;\n            case 2:\n                result.append(\"x\");\n                break;\n            case 3:\n                result.append(\"c\");\n                break;\n            case 4:\n                result.append(\"c\");\n                break;\n            case 5:\n                result.append(\"v\");\n                break;\n            case 6:\n                result.append(\"v\");\n                break;\n            case 7:\n                result.append(\"x\");\n                break;\n            case 8:\n                result.append(\"x\");\n                break;\n            case 9:\n                result.append(\"ix\");\n                break;\n            case 10:\n                result.append(\"ix\");\n                break;\n            default:\n                break;\n        }\n        num /= 10;\n    }\n    return result;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            case 11:\n                roman_numeral += \"xi\";\n                break;\n            case 12:\n                roman_numeral += \"xii\";\n                break;\n            case 13:\n                roman_numeral += \"xiii\";\n                break;\n            case 14:\n                roman_numeral += \"xiv\";\n                break;\n            case 15:\n                roman_numeral += \"xv\";\n                break;\n            case 16:\n                roman_numeral += \"xvi\";\n                break;\n            case 17:\n                roman_numeral += \"xvii\";\n                break;\n            case 18:\n                roman_numeral += \"xviii\";\n                break;\n            case 19:\n                roman_numeral += \"xix\";\n                break;\n            case 20:\n                roman_numeral += \"xx\";\n                break;\n            case 30:\n                roman_numeral += \"xxi\";\n                break;\n            case 40:\n                roman_numeral += \"xxii\";\n                break;\n            case 50:\n                roman_numeral += \"xxiii\";\n                break;\n            case 60:\n                roman_numeral += \"xxiv\";\n                ",
    "    std::string roman_numeral;\n    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            case 11:\n                roman_numeral += \"xi\";\n                break;\n            case 12:\n                roman_numeral += \"xii\";\n                break;\n            case 13:\n                roman_numeral += \"xiii\";\n                break;\n            case 14:\n                roman_numeral += \"xiv\";\n                break;\n            case 15:\n                roman_numeral += \"xv\";\n                break;\n            case 16:\n                roman_numeral += \"xvi\";\n                break;\n            case 17:\n                roman_numeral += \"xvii\";\n                break;\n            case 18:\n                roman_numeral += \"xviii\";\n                break;\n            case 19:\n                roman_numeral += \"xix\";\n                break;\n            case 20:\n                roman_numeral += \"xx\";\n                break;\n            case 30:\n                roman_numeral += \"xxi\";\n                break;\n            case 40:\n                roman_numeral += \"xxii\";\n                break;\n            case 50:\n                roman_numeral += \"xxiii\";\n",
    "    std::string roman;\n    int num = number;\n    while (num > 0) {\n        int num_left = num % 10;\n        switch (num_left) {\n            case 9:\n                roman.insert(roman.begin(), 'x');\n                break;\n            case 4:\n                roman.insert(roman.begin(), 'c');\n                break;\n            case 5:\n                roman.insert(roman.begin(), 'd');\n                break;\n            case 6:\n                roman.insert(roman.begin(), 'm');\n                break;\n            case 3:\n                roman.insert(roman.begin(), 'l');\n                break;\n            case 2:\n                roman.insert(roman.begin(), 'x');\n                break;\n            case 1:\n                roman.insert(roman.begin(), 'i');\n                break;\n            default:\n                break;\n        }\n        num /= 10;\n    }\n    return roman;",
    "    std::string result;\n    if (number < 1 || number > 1000) {\n        return result;\n    }\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        if (digit == 9) {\n            result.insert(result.begin(), 'x');\n        } else if (digit == 4) {\n            result.insert(result.begin(), 'c');\n        } else if (digit == 5) {\n            result.insert(result.begin(), 'd');\n        } else if (digit == 6) {\n            result.insert(result.begin(), 'm');\n        } else if (digit == 7) {\n            result.insert(result.begin(), 'l');\n        } else if (digit == 8) {\n            result.insert(result.begin(), 'x');\n        } else if (digit == 1) {\n            result.insert(result.begin(), 'i');\n        } else if (digit == 2) {\n            result.insert(result.begin(), 'v');\n        } else if (digit == 3) {\n            result.insert(result.begin(), 'i');\n        }\n        num /= 10;\n    }\n    return result;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        if (digit == 9 || digit == 4 || digit == 5) {\n            roman_numeral += \"x\";\n        } else if (digit == 9 || digit == 3 || digit == 1) {\n            roman_numeral += \"c\";\n        } else if (digit == 6 || digit == 7) {\n            roman_numeral += \"l\";\n        } else if (digit == 8) {\n            roman_numeral += \"d\";\n        } else if (digit == 2) {\n            roman_numeral += \"v\";\n        } else if (digit == 0) {\n            roman_numeral += \"i\";\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    if (number == 0) {\n        roman_numeral = \"\";\n    } else if (number == 1) {\n        roman_numeral = \"I\";\n    } else if (number == 2) {\n        roman_numeral = \"II\";\n    } else if (number == 3) {\n        roman_numeral = \"III\";\n    } else if (number == 4) {\n        roman_numeral = \"IV\";\n    } else if (number == 5) {\n        roman_numeral = \"V\";\n    } else if (number == 6) {\n        roman_numeral = \"VI\";\n    } else if (number == 7) {\n        roman_numeral = \"VII\";\n    } else if (number == 8) {\n        roman_numeral = \"VIII\";\n    } else if (number == 9) {\n        roman_numeral = \"IX\";\n    } else if (number == 10) {\n        roman_numeral = \"X\";\n    } else if (number == 11) {\n        roman_numeral = \"XI\";\n    } else if (number == 12) {\n        roman_numeral = \"XII\";\n    } else if (number == 13) {\n        roman_numeral = \"XIII\";\n    } else if (number == 14) {\n        roman_numeral = \"XIV\";\n    } else if (number == 15) {\n        roman_numeral = \"XV\";\n    } else if (number == 16) {\n        roman_numeral = \"XVI\";\n    } else if (number == 17) {\n        roman_numeral = \"XVII\";\n    } else if (number == 18) {\n        roman_numeral = \"XVIII\";\n    } else if (number == 19) {\n        roman_numeral = \"XIX\";\n    } else if (number == 20) {\n        roman_numeral = \"XX\";\n    } else if (number == 30) {\n        roman_numeral = \"XXX\";\n    } else if (number == 40) {\n        roman_numeral = \"XL\";\n    } else if (number == 50) {",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        int digit = number % 10;\n        number /= 10;\n        switch (digit) {\n            case 9:\n                roman_numeral.push_back('x');\n                break;\n            case 4:\n                roman_numeral.push_back('c');\n                break;\n            case 5:\n                roman_numeral.push_back('d');\n                break;\n            case 6:\n                roman_numeral.push_back('m');\n                break;\n            case 7:\n                roman_numeral.push_back('l');\n                break;\n            case 8:\n                roman_numeral.push_back('x');\n                break;\n            case 3:\n                roman_numeral.push_back('v');\n                break;\n            case 2:\n                roman_numeral.push_back('i');\n                break;\n            case 1:\n                roman_numeral.push_back('x');\n                break;\n        }\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int remainder = num % 10;\n        if (remainder == 4 || remainder == 9) {\n            roman_numeral.insert(roman_numeral.begin(), 'v');\n        } else if (remainder == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'd');\n        } else if (remainder == 6) {\n            roman_numeral.insert(roman_numeral.begin(), 'l');\n        } else if (remainder == 7) {\n            roman_numeral.insert(roman_numeral.begin(), 'x');\n        } else if (remainder == 8) {\n            roman_numeral.insert(roman_numeral.begin(), 'c');\n        } else if (remainder == 1) {\n            roman_numeral.insert(roman_numeral.begin(), 'i');\n        } else if (remainder == 2) {\n            roman_numeral.insert(roman_numeral.begin(), 'ii');\n        } else if (remainder == 3) {\n            roman_numeral.insert(roman_numeral.begin(), 'vii');\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    if (number == 0) {\n        roman_numeral = \"\";\n    } else if (number == 1) {\n        roman_numeral = \"I\";\n    } else if (number == 2) {\n        roman_numeral = \"II\";\n    } else if (number == 3) {\n        roman_numeral = \"III\";\n    } else if (number == 4) {\n        roman_numeral = \"IV\";\n    } else if (number == 5) {\n        roman_numeral = \"V\";\n    } else if (number == 6) {\n        roman_numeral = \"VI\";\n    } else if (number == 7) {\n        roman_numeral = \"VII\";\n    } else if (number == 8) {\n        roman_numeral = \"VIII\";\n    } else if (number == 9) {\n        roman_numeral = \"IX\";\n    } else if (number == 10) {\n        roman_numeral = \"X\";\n    } else if (number == 11) {\n        roman_numeral = \"XI\";\n    } else if (number == 12) {\n        roman_numeral = \"XII\";\n    } else if (number == 13) {\n        roman_numeral = \"XIII\";\n    } else if (number == 14) {\n        roman_numeral = \"XIV\";\n    } else if (number == 15) {\n        roman_numeral = \"XV\";\n    } else if (number == 16) {\n        roman_numeral = \"XVI\";\n    } else if (number == 17) {\n        roman_numeral = \"XVII\";\n    } else if (number == 18) {\n        roman_numeral = \"XVIII\";\n    } else if (number == 19) {\n        roman_numeral = \"XIX\";\n    } else if (number == 20) {\n        roman_numeral = \"XX\";\n    } else if (number == 30) {\n        roman_numeral = \"XXX\";\n    } else if (number == 40) {\n        roman_numeral = \"XL\";\n    } else if (number == 50) {",
    "    std::string roman;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 4) {\n            roman.insert(roman.begin() + i, 'c');\n            i++;\n        } else if (num == 9) {\n            roman.insert(roman.begin() + i, 'x');\n            i++;\n        } else {\n            roman.insert(roman.begin() + i, 'i');\n            i++;\n        }\n        number /= 10;\n    }\n    return roman;",
    "    std::string roman_numeral;\n    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    if (number < 4) {\n        roman_numeral = \"\";\n    }\n    else if (number < 9) {\n        roman_numeral = \"i\";\n    }\n    else if (number < 40) {\n        roman_numeral = \"ii\";\n    }\n    else if (number < 90) {\n        roman_numeral = \"iii\";\n    }\n    else if (number < 400) {\n        roman_numeral = \"iv\";\n    }\n    else if (number < 900) {\n        roman_numeral = \"v\";\n    }\n    else if (number < 4000) {\n        roman_numeral = \"vi\";\n    }\n    else if (number < 9000) {\n        roman_numeral = \"vii\";\n    }\n    else if (number < 40000) {\n        roman_numeral = \"viii\";\n    }\n    else if (number < 90000) {\n        roman_numeral = \"ix\";\n    }\n    else if (number < 400000) {\n        roman_numeral = \"x\";\n    }\n    else if (number < 900000) {\n        roman_numeral = \"xi\";\n    }\n    else if (number < 4000000) {\n        roman_numeral = \"xii\";\n    }\n    else if (number < 9000000) {\n        roman_numeral = \"xiii\";\n    }\n    else if (number < 40000000) {\n        roman_numeral = \"xiv\";\n    }\n    else if (number < 90000000) {\n        roman_numeral = \"xv\";\n    }\n    else if (number < 400000000) {\n        roman_numeral = \"xvi\";\n    }\n    else if (number < 900000000) {\n        roman_numeral = \"xvii\";\n    }\n    else if (number < 4000000000) {\n        roman_numeral = \"xviii\";\n    }\n    else if (number < 9000000000) {\n        roman_numeral = \"xix",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int num_left = num % 10;\n        int num_right = num / 10;\n        if (num_left == 4 || num_left == 9) {\n            roman_numeral.insert(roman_numeral.begin(), 'v');\n        } else if (num_left == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'l');\n        } else if (num_left == 1) {\n            roman_numeral.insert(roman_numeral.begin(), 'i');\n        } else if (num_left == 2) {\n            roman_numeral.insert(roman_numeral.begin(), 'x');\n        } else if (num_left == 3) {\n            roman_numeral.insert(roman_numeral.begin(), 'c');\n        } else if (num_left == 0) {\n            roman_numeral.insert(roman_numeral.begin(), 'm');\n        }\n        num = num_right;\n    }\n    return roman_numeral;",
    "    std::string result;\n    int n = number;\n    while (n > 0) {\n        int r = n % 10;\n        if (r == 9 || r == 4 || r == 5 || r == 6) {\n            result.insert(result.begin(), 'x');\n        } else if (r == 3 || r == 2) {\n            result.insert(result.begin(), 'x');\n            result.insert(result.begin(), 'c');\n        } else if (r == 1) {\n            result.insert(result.begin(), 'c');\n        }\n        n /= 10;\n    }\n    return result;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int num_div = num / 10;\n        int num_rem = num % 10;\n        if (num_div == 4 || num_div == 9) {\n            roman_numeral += \"cd\";\n        } else if (num_div == 5) {\n            roman_numeral += \"xc\";\n        } else if (num_div == 1) {\n            roman_numeral += \"x\";\n        } else {\n            roman_numeral += \"ix\";\n        }\n        num = num_rem;\n    }\n    return roman_numeral;",
    "    std::string roman;\n    if (number == 0) {\n        roman = \"\";\n    } else if (number == 1) {\n        roman = \"I\";\n    } else if (number == 2) {\n        roman = \"II\";\n    } else if (number == 3) {\n        roman = \"III\";\n    } else if (number == 4) {\n        roman = \"IV\";\n    } else if (number == 5) {\n        roman = \"V\";\n    } else if (number == 6) {\n        roman = \"VI\";\n    } else if (number == 7) {\n        roman = \"VII\";\n    } else if (number == 8) {\n        roman = \"VIII\";\n    } else if (number == 9) {\n        roman = \"IX\";\n    } else if (number == 10) {\n        roman = \"X\";\n    } else if (number == 11) {\n        roman = \"XI\";\n    } else if (number == 12) {\n        roman = \"XII\";\n    } else if (number == 13) {\n        roman = \"XIII\";\n    } else if (number == 14) {\n        roman = \"XIV\";\n    } else if (number == 15) {\n        roman = \"XV\";\n    } else if (number == 16) {\n        roman = \"XVI\";\n    } else if (number == 17) {\n        roman = \"XVII\";\n    } else if (number == 18) {\n        roman = \"XVIII\";\n    } else if (number == 19) {\n        roman = \"XIX\";\n    } else if (number == 20) {\n        roman = \"XX\";\n    } else if (number == 30) {\n        roman = \"XXX\";\n    } else if (number == 40) {\n        roman = \"XL\";\n    } else if (number == 50) {\n        roman = \"L\";\n    } else if (number == 60) {\n        roman = \"LX\";\n    } else if (number == 70) {\n        roman = \"LXX\";\n    } else if (number == 80) {\n        roman = \"LXXX\";\n    } else if (number ==",
    "    std::string roman_numeral;\n    long num = number;\n    while (num > 0) {\n        switch (num % 10) {\n            case 1:\n                roman_numeral.insert(roman_numeral.begin(), 'i');\n                break;\n            case 2:\n                roman_numeral.insert(roman_numeral.begin(), 'v');\n                break;\n            case 3:\n                roman_numeral.insert(roman_numeral.begin(), 'x');\n                break;\n            case 4:\n                roman_numeral.insert(roman_numeral.begin(), 'l');\n                break;\n            case 5:\n                roman_numeral.insert(roman_numeral.begin(), 'c');\n                break;\n            case 6:\n                roman_numeral.insert(roman_numeral.begin(), 'd');\n                break;\n            case 7:\n                roman_numeral.insert(roman_numeral.begin(), 'm');\n                break;\n            case 8:\n                roman_numeral.insert(roman_numeral.begin(), 'x');\n                break;\n            case 9:\n                roman_numeral.insert(roman_numeral.begin(), 'v');\n                break;\n            case 0:\n                roman_numeral.insert(roman_numeral.begin(), 'i');\n                break;\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int remainder;\n    while (number != 0) {\n        remainder = number % 10;\n        if (remainder == 9 || remainder == 4) {\n            roman_numeral += \"x\";\n        } else if (remainder == 5) {\n            roman_numeral += \"v\";\n        } else if (remainder == 6) {\n            roman_numeral += \"l\";\n        } else if (remainder == 7) {\n            roman_numeral += \"x\";\n        } else if (remainder == 8) {\n            roman_numeral += \"c\";\n        } else if (remainder == 3) {\n            roman_numeral += \"m\";\n        } else if (remainder == 2) {\n            roman_numeral += \"ii\";\n        } else if (remainder == 1) {\n            roman_numeral += \"i\";\n        }\n        number /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int num_digits = num % 10;\n        switch (num_digits) {\n            case 1:\n                roman_numeral.push_back('i');\n                break;\n            case 2:\n                roman_numeral.push_back('ii');\n                break;\n            case 3:\n                roman_numeral.push_back('iii');\n                break;\n            case 4:\n                roman_numeral.push_back('iv');\n                break;\n            case 5:\n                roman_numeral.push_back('v');\n                break;\n            case 6:\n                roman_numeral.push_back('vi');\n                break;\n            case 7:\n                roman_numeral.push_back('vii');\n                break;\n            case 8:\n                roman_numeral.push_back('viii');\n                break;\n            case 9:\n                roman_numeral.push_back('ix');\n                break;\n            case 10:\n                roman_numeral.push_back('x');\n                break;\n            case 11:\n                roman_numeral.push_back('xi');\n                break;\n            case 12:\n                roman_numeral.push_back('xii');\n                break;\n            case 13:\n                roman_numeral.push_back('xiii');\n                break;\n            case 14:\n                roman_numeral.push_back('xiv');\n                break;\n            case 15:\n                roman_numeral.push_back('xv');\n                break;\n            case 16:\n                roman_numeral.push_back('xvi');\n                break;\n            case 17:\n                roman_numeral.push_back('xvii');\n                break;\n            case 18:\n                roman_numeral.push_back('xviii');\n                break;\n            case 19:\n                roman_numeral.push_back('xix');\n                break;\n            case 20:\n                roman_numeral.push_back('xx');\n                break;\n            case 30:\n                roman_numeral.",
    "    std::string result;\n    if (number == 0) {\n        result = \"\";\n        return result;\n    }\n    if (number < 0) {\n        result = \"\";\n        return result;\n    }\n    if (number < 10) {\n        result = \"\";\n        return result;\n    }\n    if (number < 100) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000) {\n        result = \"\";\n        return result;\n    }",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 4 || num == 9) {\n            roman_numeral += \"cd\";\n            number -= 5;\n        } else if (num == 5) {\n            roman_numeral += \"cd\";\n            number -= 5;\n        } else if (num == 1) {\n            roman_numeral += \"x\";\n            number -= 1;\n        } else if (num == 2) {\n            roman_numeral += \"x\";\n            number -= 1;\n        } else if (num == 3) {\n            roman_numeral += \"x\";\n            number -= 1;\n        } else if (num == 8) {\n            roman_numeral += \"l\";\n            number -= 1;\n        } else if (num == 6) {\n            roman_numeral += \"l\";\n            number -= 1;\n        } else if (num == 7) {\n            roman_numeral += \"l\";\n            number -= 1;\n        } else if (num == 0) {\n            roman_numeral += \"c\";\n            number -= 1;\n        }\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int num_left = num % 10;\n        if (num_left == 4 || num_left == 9) {\n            roman_numeral += \"cd\";\n        } else if (num_left == 5) {\n            roman_numeral += \"xv\";\n        } else if (num_left == 6) {\n            roman_numeral += \"lx\";\n        } else if (num_left == 7) {\n            roman_numeral += \"cx\";\n        } else if (num_left == 8) {\n            roman_numeral += \"ix\";\n        } else if (num_left == 1) {\n            roman_numeral += \"i\";\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int remainder;\n    while (number > 0) {\n        remainder = number % 10;\n        if (remainder == 4 || remainder == 9) {\n            roman_numeral += \"cd\";\n        } else if (remainder == 5) {\n            roman_numeral += \"xv\";\n        } else if (remainder == 6) {\n            roman_numeral += \"ix\";\n        } else if (remainder == 7) {\n            roman_numeral += \"vii\";\n        } else if (remainder == 8) {\n            roman_numeral += \"viii\";\n        } else if (remainder == 1) {\n            roman_numeral += \"i\";\n        } else if (remainder == 2) {\n            roman_numeral += \"ii\";\n        } else if (remainder == 3) {\n            roman_numeral += \"iii\";\n        } else if (remainder == 0) {\n            roman_numeral += \"x\";\n        }\n        number /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    if (number == 0) {\n        roman_numeral = \"\";\n    } else if (number == 1) {\n        roman_numeral = \"i\";\n    } else if (number == 2) {\n        roman_numeral = \"ii\";\n    } else if (number == 3) {\n        roman_numeral = \"iii\";\n    } else if (number == 4) {\n        roman_numeral = \"iv\";\n    } else if (number == 5) {\n        roman_numeral = \"v\";\n    } else if (number == 6) {\n        roman_numeral = \"vi\";\n    } else if (number == 7) {\n        roman_numeral = \"vii\";\n    } else if (number == 8) {\n        roman_numeral = \"viii\";\n    } else if (number == 9) {\n        roman_numeral = \"ix\";\n    } else if (number == 10) {\n        roman_numeral = \"x\";\n    } else if (number == 11) {\n        roman_numeral = \"xi\";\n    } else if (number == 12) {\n        roman_numeral = \"xii\";\n    } else if (number == 13) {\n        roman_numeral = \"xiii\";\n    } else if (number == 14) {\n        roman_numeral = \"xiv\";\n    } else if (number == 15) {\n        roman_numeral = \"xv\";\n    } else if (number == 16) {\n        roman_numeral = \"xvi\";\n    } else if (number == 17) {\n        roman_numeral = \"xvii\";\n    } else if (number == 18) {\n        roman_numeral = \"xviii\";\n    } else if (number == 19) {\n        roman_numeral = \"xix\";\n    } else if (number == 20) {\n        roman_numeral = \"xx\";\n    } else if (number == 30) {\n        roman_numeral = \"xxx\";\n    } else if (number == 40) {\n        roman_numeral = \"xl\";\n    } else if (number == 50",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            default:\n                break;\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string result;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        if (digit == 4 || digit == 9) {\n            result.insert(result.begin(), 'v');\n        } else if (digit == 5) {\n            result.insert(result.begin(), 'x');\n        } else if (digit == 6) {\n            result.insert(result.begin(), 'l');\n        } else if (digit == 7) {\n            result.insert(result.begin(), 'c');\n        } else if (digit == 8) {\n            result.insert(result.begin(), 'd');\n        } else if (digit == 0) {\n            result.insert(result.begin(), 'i');\n        }\n        num /= 10;\n    }\n    return result;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int num_left = num % 10;\n        switch (num_left) {\n            case 1:\n                roman_numeral.push_back('i');\n                break;\n            case 2:\n                roman_numeral.push_back('ii');\n                break;\n            case 3:\n                roman_numeral.push_back('iii');\n                break;\n            case 4:\n                roman_numeral.push_back('iv');\n                break;\n            case 5:\n                roman_numeral.push_back('v');\n                break;\n            case 6:\n                roman_numeral.push_back('vi');\n                break;\n            case 7:\n                roman_numeral.push_back('vii');\n                break;\n            case 8:\n                roman_numeral.push_back('viii');\n                break;\n            case 9:\n                roman_numeral.push_back('ix');\n                break;\n            case 10:\n                roman_numeral.push_back('x');\n                break;\n            default:\n                break;\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral.push_back('i');\n                break;\n            case 2:\n                roman_numeral.push_back('v');\n                break;\n            case 3:\n                roman_numeral.push_back('x');\n                break;\n            case 4:\n                roman_numeral.push_back('l');\n                break;\n            case 5:\n                roman_numeral.push_back('c');\n                break;\n            case 6:\n                roman_numeral.push_back('d');\n                break;\n            case 7:\n                roman_numeral.push_back('m');\n                break;\n            case 8:\n                roman_numeral.push_back('x');\n                break;\n            case 9:\n                roman_numeral.push_back('v');\n                break;\n            case 10:\n                roman_numeral.push_back('i');\n                break;\n            case 11:\n                roman_numeral.push_back('x');\n                break;\n            case 12:\n                roman_numeral.push_back('x');\n                break;\n            case 13:\n                roman_numeral.push_back('x');\n                break;\n            case 14:\n                roman_numeral.push_back('x');\n                break;\n            case 15:\n                roman_numeral.push_back('x');\n                break;\n            case 16:\n                roman_numeral.push_back('x');\n                break;\n            case 17:\n                roman_numeral.push_back('x');\n                break;\n            case 18:\n                roman_numeral.push_back('x');\n                break;\n            case 19:\n                roman_numeral.push_back('x');\n                break;\n            case 20:\n                roman_numeral.push_back('x');\n                break;\n            case 21:\n                roman_numeral.push_back('x');\n                break;\n            case 22:\n                roman",
    "    std::string roman_numeral;\n    int remainder = number % 10;\n    while (number > 0) {\n        if (remainder == 4 || remainder == 9) {\n            roman_numeral += \"cd\";\n            number -= 4;\n        } else if (remainder == 5 || remainder == 8) {\n            roman_numeral += \"xc\";\n            number -= 5;\n        } else if (remainder == 1 || remainder == 6 || remainder == 7) {\n            roman_numeral += \"xl\";\n            number -= 1;\n        } else {\n            roman_numeral += \"x\";\n            number -= 1;\n        }\n        remainder = number % 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            case 11:\n                roman_numeral += \"xi\";\n                break;\n            case 12:\n                roman_numeral += \"xii\";\n                break;\n            case 13:\n                roman_numeral += \"xiii\";\n                break;\n            case 14:\n                roman_numeral += \"xiv\";\n                break;\n            case 15:\n                roman_numeral += \"xv\";\n                break;\n            case 16:\n                roman_numeral += \"xvi\";\n                break;\n            case 17:\n                roman_numeral += \"xvii\";\n                break;\n            case 18:\n                roman_numeral += \"xviii\";\n                break;\n            case 19:\n                roman_numeral += \"xix\";\n                break;\n            case 20:\n                roman_numeral += \"xx\";\n                break;\n            case 30:\n                roman_numeral += \"xxi\";\n                break;\n            case 40:\n                roman_numeral += \"xxii\";\n                break;\n            case 50:\n                roman_numeral += \"xxiii\";\n                break;\n            case 60:\n                roman_numeral += \"xxiv\";\n                ",
    "    std::string roman_numeral;\n    while (number > 0) {\n        int digit = number % 10;\n        if (digit == 4 || digit == 9) {\n            roman_numeral.push_back('x');\n        } else if (digit == 5) {\n            roman_numeral.push_back('l');\n        } else if (digit == 6) {\n            roman_numeral.push_back('c');\n        } else if (digit == 7) {\n            roman_numeral.push_back('d');\n        } else if (digit == 8) {\n            roman_numeral.push_back('m');\n        } else if (digit == 9) {\n            roman_numeral.push_back('v');\n        }\n        number /= 10;\n    }\n    std::reverse(roman_numeral.begin(), roman_numeral.end());\n    return roman_numeral;",
    "    std::string roman;\n    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    int num = number;\n    while (num >= 1000) {\n        roman += \"m\";\n        num -= 1000;\n    }\n    while (num >= 900) {\n        roman += \"cm\";\n        num -= 900;\n    }\n    while (num >= 500) {\n        roman += \"d\";\n        num -= 500;\n    }\n    while (num >= 400) {\n        roman += \"cd\";\n        num -= 400;\n    }\n    while (num >= 100) {\n        roman += \"c\";\n        num -= 100;\n    }\n    while (num >= 90) {\n        roman += \"xc\";\n        num -= 90;\n    }\n    while (num >= 50) {\n        roman += \"l\";\n        num -= 50;\n    }\n    while (num >= 40) {\n        roman += \"xl\";\n        num -= 40;\n    }\n    while (num >= 10) {\n        roman += \"x\";\n        num -= 10;\n    }\n    while (num >= 9) {\n        roman += \"ix\";\n        num -= 9;\n    }\n    while (num >= 5) {\n        roman += \"v\";\n        num -= 5;\n    }\n    while (num >= 4) {\n        roman += \"iv\";\n        num -= 4;\n    }\n    while (num >= 1) {\n        roman += \"i\";\n        num -= 1;\n    }\n    return roman;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            case 11:\n                roman_numeral += \"xi\";\n                break;\n            case 12:\n                roman_numeral += \"xii\";\n                break;\n            case 13:\n                roman_numeral += \"xiii\";\n                break;\n            case 14:\n                roman_numeral += \"xiv\";\n                break;\n            case 15:\n                roman_numeral += \"xv\";\n                break;\n            case 16:\n                roman_numeral += \"xvi\";\n                break;\n            case 17:\n                roman_numeral += \"xvii\";\n                break;\n            case 18:\n                roman_numeral += \"xviii\";\n                break;\n            case 19:\n                roman_numeral += \"xix\";\n                break;\n            case 20:\n                roman_numeral += \"xx\";\n                break;\n            case 30:\n                roman_numeral += \"xxi\";\n                break;\n            case 40:\n                roman_numeral += \"xxii\";\n                break;\n            case 50:\n                roman_numeral += \"xxiii\";\n                break;\n            case 60:\n                roman_numeral += \"xxiv\";\n                ",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            case 11:\n                roman_numeral += \"xi\";\n                break;\n            case 12:\n                roman_numeral += \"xii\";\n                break;\n            case 13:\n                roman_numeral += \"xiii\";\n                break;\n            case 14:\n                roman_numeral += \"xiv\";\n                break;\n            case 15:\n                roman_numeral += \"xv\";\n                break;\n            case 16:\n                roman_numeral += \"xvi\";\n                break;\n            case 17:\n                roman_numeral += \"xvii\";\n                break;\n            case 18:\n                roman_numeral += \"xviii\";\n                break;\n            case 19:\n                roman_numeral += \"xix\";\n                break;\n            case 20:\n                roman_numeral += \"xx\";\n                break;\n            case 30:\n                roman_numeral += \"xxi\";\n                break;\n            case 40:\n                roman_numeral += \"xxii\";\n                break;\n            case 50:\n                roman_numeral += \"xxiii\";\n                break;\n            case 60:\n                roman_numeral += \"xxiv\";\n                ",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            case 11:\n                roman_numeral += \"xi\";\n                break;\n            case 12:\n                roman_numeral += \"xii\";\n                break;\n            case 13:\n                roman_numeral += \"xiii\";\n                break;\n            case 14:\n                roman_numeral += \"xiv\";\n                break;\n            case 15:\n                roman_numeral += \"xv\";\n                break;\n            case 16:\n                roman_numeral += \"xvi\";\n                break;\n            case 17:\n                roman_numeral += \"xvii\";\n                break;\n            case 18:\n                roman_numeral += \"xviii\";\n                break;\n            case 19:\n                roman_numeral += \"xix\";\n                break;\n            case 20:\n                roman_numeral += \"xx\";\n                break;\n            case 30:\n                roman_numeral += \"xxi\";\n                break;\n            case 40:\n                roman_numeral += \"xxii\";\n                break;\n            case 50:\n                roman_numeral += \"xxiii\";\n                break;\n            case 60:\n                roman_numeral += \"xxiv\";\n                ",
    "    std::string roman_numeral;\n    int i = number;\n    while (i > 0) {\n        int j = i % 10;\n        if (j == 9 || j == 4 || j == 5) {\n            roman_numeral.push_back('x');\n        } else if (j == 9 || j == 4) {\n            roman_numeral.push_back('l');\n        } else if (j == 5) {\n            roman_numeral.push_back('c');\n        } else {\n            roman_numeral.push_back('m');\n        }\n        i /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 4) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'l');\n            number -= 4;\n        } else if (num == 9) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'x');\n            number -= 9;\n        } else if (num == 5) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'v');\n            number -= 5;\n        } else if (num == 8) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'l');\n            roman_numeral.insert(roman_numeral.begin() + i, 'x');\n            number -= 8;\n        } else if (num == 1) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'i');\n            number -= 1;\n        } else {\n            roman_numeral.insert(roman_numeral.begin() + i, 'c');\n            number -= num;\n        }\n        i++;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        if (digit == 4 || digit == 9) {\n            roman_numeral.insert(roman_numeral.begin(), 'v');\n        } else if (digit == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'l');\n        } else if (digit == 1) {\n            roman_numeral.insert(roman_numeral.begin(), 'i');\n        } else if (digit == 2) {\n            roman_numeral.insert(roman_numeral.begin(), 'x');\n        } else if (digit == 3) {\n            roman_numeral.insert(roman_numeral.begin(), 'c');\n        } else if (digit == 0) {\n            roman_numeral.insert(roman_numeral.begin(), 'm');\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string result;\n    if (number < 1 || number > 1000) {\n        return result;\n    }\n    int i = 0;\n    while (number > 0) {\n        int roman_num = number % 10;\n        if (roman_num == 1) {\n            result.push_back('i');\n        } else if (roman_num == 2) {\n            result.push_back('ii');\n        } else if (roman_num == 3) {\n            result.push_back('iii');\n        } else if (roman_num == 4) {\n            result.push_back('iv');\n        } else if (roman_num == 5) {\n            result.push_back('v');\n        } else if (roman_num == 6) {\n            result.push_back('vi');\n        } else if (roman_num == 7) {\n            result.push_back('vii');\n        } else if (roman_num == 8) {\n            result.push_back('viii');\n        } else if (roman_num == 9) {\n            result.push_back('ix');\n        } else if (roman_num == 10) {\n            result.push_back('x');\n        } else if (roman_num == 11) {\n            result.push_back('xi');\n        } else if (roman_num == 12) {\n            result.push_back('xii');\n        } else if (roman_num == 13) {\n            result.push_back('xiii');\n        } else if (roman_num == 14) {\n            result.push_back('xiv');\n        } else if (roman_num == 15) {\n            result.push_back('xv');\n        } else if (roman_num == 16) {\n            result.push_back('xvi');\n        } else if (roman_num == 17) {\n            result.push_back('xvii');\n        } else if (roman_num == 18) {\n            result.push_back('xviii');\n        } else if (roman_num == 19) {\n            result.push_back('xix');\n        } else if (roman_num ==",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        if (digit == 9 || digit == 4 || digit == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'x');\n        } else if (digit == 9 || digit == 4) {\n            roman_numeral.insert(roman_numeral.begin(), 'l');\n        } else if (digit == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'c');\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    int num = number;\n    while (num > 0) {\n        int num_left = num % 10;\n        switch (num_left) {\n            case 1:\n                roman_numeral.push_back('i');\n                break;\n            case 2:\n                roman_numeral.push_back('ii');\n                break;\n            case 3:\n                roman_numeral.push_back('iii');\n                break;\n            case 4:\n                roman_numeral.push_back('iv');\n                break;\n            case 5:\n                roman_numeral.push_back('v');\n                break;\n            case 6:\n                roman_numeral.push_back('vi');\n                break;\n            case 7:\n                roman_numeral.push_back('vii');\n                break;\n            case 8:\n                roman_numeral.push_back('viii');\n                break;\n            case 9:\n                roman_numeral.push_back('ix');\n                break;\n            case 10:\n                roman_numeral.push_back('x');\n                break;\n            case 11:\n                roman_numeral.push_back('xi');\n                break;\n            case 12:\n                roman_numeral.push_back('xii');\n                break;\n            case 13:\n                roman_numeral.push_back('xiii');\n                break;\n            case 14:\n                roman_numeral.push_back('xiv');\n                break;\n            case 15:\n                roman_numeral.push_back('xv');\n                break;\n            case 16:\n                roman_numeral.push_back('xvi');\n                break;\n            case 17:\n                roman_numeral.push_back('xvii');\n                break;\n            case 18:\n                roman_numeral.push_back('xviii');\n                break;\n            case 19:\n                roman_numeral.push_back('xix');\n                break;\n            case 20:\n                roman_numeral.push_back",
    "    std::string result;\n    int n = number;\n    while (n > 0) {\n        int digit = n % 10;\n        if (digit == 4 || digit == 9) {\n            result.push_back('c');\n        } else if (digit == 5) {\n            result.push_back('d');\n        } else if (digit == 6) {\n            result.push_back('m');\n        } else if (digit == 7) {\n            result.push_back('m');\n            result.push_back('c');\n        } else if (digit == 8) {\n            result.push_back('c');\n            result.push_back('c');\n        } else if (digit == 9) {\n            result.push_back('x');\n        } else {\n            result.push_back('x');\n        }\n        n /= 10;\n    }\n    return result;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            case 11:\n                roman_numeral += \"xi\";\n                break;\n            case 12:\n                roman_numeral += \"xii\";\n                break;\n            case 13:\n                roman_numeral += \"xiii\";\n                break;\n            case 14:\n                roman_numeral += \"xiv\";\n                break;\n            case 15:\n                roman_numeral += \"xv\";\n                break;\n            case 16:\n                roman_numeral += \"xvi\";\n                break;\n            case 17:\n                roman_numeral += \"xvii\";\n                break;\n            case 18:\n                roman_numeral += \"xviii\";\n                break;\n            case 19:\n                roman_numeral += \"xix\";\n                break;\n            case 20:\n                roman_numeral += \"xx\";\n                break;\n            case 30:\n                roman_numeral += \"xxx\";\n                break;\n            case 40:\n                roman_numeral += \"xl\";\n                break;\n            case 50:\n                roman_numeral += \"l\";\n                break;\n            case 60:\n                roman_numeral += \"lx\";\n                break;",
    "    std::string roman;\n    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    int num = number;\n    while (num > 0) {\n        int rem = num % 10;\n        if (rem == 9 || rem == 4 || rem == 5) {\n            roman.insert(roman.begin(), 'x');\n        }\n        if (rem == 9 || rem == 4) {\n            roman.insert(roman.begin(), 'l');\n        }\n        if (rem == 9 || rem == 5) {\n            roman.insert(roman.begin(), 'c');\n        }\n        if (rem == 4 || rem == 5) {\n            roman.insert(roman.begin(), 'd');\n        }\n        if (rem == 5) {\n            roman.insert(roman.begin(), 'v');\n        }\n        num /= 10;\n    }\n    return roman;",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        number /= 10;\n        switch (num) {\n            case 9:\n                roman_numeral.insert(roman_numeral.begin() + i, 'x');\n                break;\n            case 4:\n                roman_numeral.insert(roman_numeral.begin() + i, 'c');\n                break;\n            case 5:\n                roman_numeral.insert(roman_numeral.begin() + i, 'd');\n                break;\n            case 6:\n                roman_numeral.insert(roman_numeral.begin() + i, 'm');\n                break;\n            case 7:\n                roman_numeral.insert(roman_numeral.begin() + i, 'l');\n                break;\n            case 8:\n                roman_numeral.insert(roman_numeral.begin() + i, 'x');\n                break;\n            case 3:\n                roman_numeral.insert(roman_numeral.begin() + i, 'v');\n                break;\n            case 2:\n                roman_numeral.insert(roman_numeral.begin() + i, 'i');\n                break;\n            case 1:\n                roman_numeral.insert(roman_numeral.begin() + i, 'x');\n                break;\n        }\n        i++;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    int num = number;\n    while (num > 0) {\n        int remainder = num % 10;\n        if (remainder == 4 || remainder == 9) {\n            roman_numeral.insert(roman_numeral.begin(), 'v');\n        } else if (remainder == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'x');\n        } else if (remainder == 6) {\n            roman_numeral.insert(roman_numeral.begin(), 'l');\n        } else if (remainder == 7) {\n            roman_numeral.insert(roman_numeral.begin(), 'c');\n        } else if (remainder == 8) {\n            roman_numeral.insert(roman_numeral.begin(), 'd');\n        } else if (remainder == 0) {\n            roman_numeral.insert(roman_numeral.begin(), 'm');\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    if (number == 0) {\n        roman_numeral = \"\";\n    } else {\n        roman_numeral = \"\";\n        while (number > 0) {\n            int digit = number % 10;\n            switch (digit) {\n                case 1:\n                    roman_numeral += \"i\";\n                    break;\n                case 2:\n                    roman_numeral += \"ii\";\n                    break;\n                case 3:\n                    roman_numeral += \"iii\";\n                    break;\n                case 4:\n                    roman_numeral += \"iv\";\n                    break;\n                case 5:\n                    roman_numeral += \"v\";\n                    break;\n                case 6:\n                    roman_numeral += \"vi\";\n                    break;\n                case 7:\n                    roman_numeral += \"vii\";\n                    break;\n                case 8:\n                    roman_numeral += \"viii\";\n                    break;\n                case 9:\n                    roman_numeral += \"ix\";\n                    break;\n                case 10:\n                    roman_numeral += \"x\";\n                    break;\n                default:\n                    break;\n            }\n            number /= 10;\n        }\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int num_left = num % 10;\n        if (num_left == 4 || num_left == 9) {\n            roman_numeral.push_back('x');\n        } else if (num_left == 5) {\n            roman_numeral.push_back('l');\n        } else if (num_left == 6) {\n            roman_numeral.push_back('c');\n        } else if (num_left == 7) {\n            roman_numeral.push_back('d');\n        } else if (num_left == 8) {\n            roman_numeral.push_back('m');\n        } else if (num_left == 1) {\n            roman_numeral.push_back('i');\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        number /= 10;\n        switch (num) {\n            case 9:\n                roman.insert(roman.begin() + i, 'x');\n                break;\n            case 4:\n                roman.insert(roman.begin() + i, 'c');\n                break;\n            case 5:\n                roman.insert(roman.begin() + i, 'd');\n                break;\n            case 6:\n                roman.insert(roman.begin() + i, 'm');\n                break;\n            case 7:\n                roman.insert(roman.begin() + i, 'l');\n                break;\n            case 8:\n                roman.insert(roman.begin() + i, 'x');\n                break;\n            case 3:\n                roman.insert(roman.begin() + i, 'v');\n                break;\n            case 2:\n                roman.insert(roman.begin() + i, 'i');\n                break;\n            case 1:\n                roman.insert(roman.begin() + i, 'x');\n                break;\n        }\n        i++;\n    }\n    return roman;",
    "    std::string result;\n    if (number == 0) {\n        result = \"\";\n        return result;\n    }\n    if (number < 0) {\n        result = \"\";\n        return result;\n    }\n    if (number < 10) {\n        result = \"\";\n        return result;\n    }\n    if (number < 100) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 10000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 100000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 10000000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 100000000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000000000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 10000000000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 100000000000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000000000000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 10000000000000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 100000000000000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000000000000000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 10000000000000000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 100000000000000000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 1000000000000000000) {\n        result = \"\";\n        return result;\n    }\n    if (number < 10000000000000000000) {\n        result = \"\";\n        return result;\n    ",
    "    std::string roman_numeral;\n    while (number > 0) {\n        int digit = number % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            case 11:\n                roman_numeral += \"xi\";\n                break;\n            case 12:\n                roman_numeral += \"xii\";\n                break;\n            case 13:\n                roman_numeral += \"xiii\";\n                break;\n            case 14:\n                roman_numeral += \"xiv\";\n                break;\n            case 15:\n                roman_numeral += \"xv\";\n                break;\n            case 16:\n                roman_numeral += \"xvi\";\n                break;\n            case 17:\n                roman_numeral += \"xvii\";\n                break;\n            case 18:\n                roman_numeral += \"xviii\";\n                break;\n            case 19:\n                roman_numeral += \"xix\";\n                break;\n            case 20:\n                roman_numeral += \"xx\";\n                break;\n            case 30:\n                roman_numeral += \"xxx\";\n                break;\n            case 40:\n                roman_numeral += \"xl\";\n                break;\n            case 50:\n                roman_numeral += \"l\";\n                break;\n            case 60:\n                roman_numeral += \"lx\";\n                break;\n            case 70:\n                ",
    "    std::string roman;\n    while (number > 0) {\n        int digit = number % 10;\n        switch (digit) {\n            case 1:\n                roman += \"x\";\n                break;\n            case 2:\n                roman += \"x\";\n                break;\n            case 3:\n                roman += \"c\";\n                break;\n            case 4:\n                roman += \"c\";\n                break;\n            case 5:\n                roman += \"c\";\n                break;\n            case 6:\n                roman += \"d\";\n                break;\n            case 7:\n                roman += \"d\";\n                break;\n            case 8:\n                roman += \"d\";\n                break;\n            case 9:\n                roman += \"m\";\n                break;\n            case 10:\n                roman += \"m\";\n                break;\n            case 11:\n                roman += \"m\";\n                break;\n            case 12:\n                roman += \"m\";\n                break;\n            case 13:\n                roman += \"m\";\n                break;\n            case 14:\n                roman += \"m\";\n                break;\n            case 15:\n                roman += \"m\";\n                break;\n            case 16:\n                roman += \"m\";\n                break;\n            case 17:\n                roman += \"m\";\n                break;\n            case 18:\n                roman += \"m\";\n                break;\n            case 19:\n                roman += \"m\";\n                break;\n            case 20:\n                roman += \"m\";\n                break;\n            case 21:\n                roman += \"m\";\n                break;\n            case 22:\n                roman += \"m\";\n                break;\n            case 23:\n                roman += \"m\";\n                break;\n            case 24:\n                roman += \"m\";\n                break;\n            case 25:\n                roman += \"m\";\n                break;\n            case 26:\n                roman += \"m\";\n                break;\n            case 27:\n                roman += \"m\";\n                break;\n            case 28:\n                roman += \"m\";\n                break;\n            case 29:\n                roman += \"m\";\n                break;\n            case 30:\n                roman += \"m\";\n                break;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            default:\n                assert(false);\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman;\n    while (number > 0) {\n        int digit = number % 10;\n        switch (digit) {\n            case 1:\n                roman += \"i\";\n                break;\n            case 2:\n                roman += \"ii\";\n                break;\n            case 3:\n                roman += \"iii\";\n                break;\n            case 4:\n                roman += \"iv\";\n                break;\n            case 5:\n                roman += \"v\";\n                break;\n            case 6:\n                roman += \"vi\";\n                break;\n            case 7:\n                roman += \"vii\";\n                break;\n            case 8:\n                roman += \"viii\";\n                break;\n            case 9:\n                roman += \"ix\";\n                break;\n            case 10:\n                roman += \"x\";\n                break;\n            default:\n                assert(false);\n        }\n        number /= 10;\n    }\n    return roman;",
    "    std::string result;\n    int n = number;\n    while (n > 0) {\n        int r = n % 10;\n        n /= 10;\n        switch (r) {\n            case 9:\n                result.append(\"ix\");\n                break;\n            case 4:\n                result.append(\"iv\");\n                break;\n            case 5:\n                result.append(\"v\");\n                break;\n            case 6:\n                result.append(\"vi\");\n                break;\n            case 7:\n                result.append(\"vii\");\n                break;\n            case 8:\n                result.append(\"viii\");\n                break;\n            case 3:\n                result.append(\"ii\");\n                break;\n            case 2:\n                result.append(\"i\");\n                break;\n            case 1:\n                result.append(\"i\");\n                break;\n            default:\n                break;\n        }\n    }\n    return result;",
    "    std::string roman;\n    int num = number;\n    while (num > 0) {\n        int num_left = num % 10;\n        if (num_left == 4 || num_left == 9) {\n            roman += \"cd\";\n        } else if (num_left == 5) {\n            roman += \"xv\";\n        } else if (num_left == 6) {\n            roman += \"lx\";\n        } else if (num_left == 7) {\n            roman += \"cx\";\n        } else if (num_left == 8) {\n            roman += \"ix\";\n        } else if (num_left == 1) {\n            roman += \"i\";\n        }\n        num /= 10;\n    }\n    return roman;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            default:\n                break;\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            default:\n                break;\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int num_left = num % 10;\n        switch (num_left) {\n            case 1:\n                roman_numeral.push_back('i');\n                break;\n            case 2:\n                roman_numeral.push_back('ii');\n                break;\n            case 3:\n                roman_numeral.push_back('iii');\n                break;\n            case 4:\n                roman_numeral.push_back('iv');\n                break;\n            case 5:\n                roman_numeral.push_back('v');\n                break;\n            case 6:\n                roman_numeral.push_back('vi');\n                break;\n            case 7:\n                roman_numeral.push_back('vii');\n                break;\n            case 8:\n                roman_numeral.push_back('viii');\n                break;\n            case 9:\n                roman_numeral.push_back('ix');\n                break;\n            case 10:\n                roman_numeral.push_back('x');\n                break;\n            case 11:\n                roman_numeral.push_back('xi');\n                break;\n            case 12:\n                roman_numeral.push_back('xii');\n                break;\n            case 13:\n                roman_numeral.push_back('xiii');\n                break;\n            case 14:\n                roman_numeral.push_back('xiv');\n                break;\n            case 15:\n                roman_numeral.push_back('xv');\n                break;\n            case 16:\n                roman_numeral.push_back('xvi');\n                break;\n            case 17:\n                roman_numeral.push_back('xvii');\n                break;\n            case 18:\n                roman_numeral.push_back('xviii');\n                break;\n            case 19:\n                roman_numeral.push_back('xix');\n                break;\n            case 20:\n                roman_numeral.push_back('xx');\n                break;\n            case 30:\n                roman_numeral.push_",
    "    std::string roman_numeral;\n    if (number == 0) {\n        return \"\";\n    }\n    if (number == 1) {\n        roman_numeral = \"i\";\n    } else if (number == 2) {\n        roman_numeral = \"ii\";\n    } else if (number == 3) {\n        roman_numeral = \"iii\";\n    } else if (number == 4) {\n        roman_numeral = \"iv\";\n    } else if (number == 5) {\n        roman_numeral = \"v\";\n    } else if (number == 6) {\n        roman_numeral = \"vi\";\n    } else if (number == 7) {\n        roman_numeral = \"vii\";\n    } else if (number == 8) {\n        roman_numeral = \"viii\";\n    } else if (number == 9) {\n        roman_numeral = \"ix\";\n    } else if (number == 10) {\n        roman_numeral = \"x\";\n    } else if (number == 11) {\n        roman_numeral = \"xi\";\n    } else if (number == 12) {\n        roman_numeral = \"xii\";\n    } else if (number == 13) {\n        roman_numeral = \"xiii\";\n    } else if (number == 14) {\n        roman_numeral = \"xiv\";\n    } else if (number == 15) {\n        roman_numeral = \"xv\";\n    } else if (number == 16) {\n        roman_numeral = \"xvi\";\n    } else if (number == 17) {\n        roman_numeral = \"xvii\";\n    } else if (number == 18) {\n        roman_numeral = \"xviii\";\n    } else if (number == 19) {\n        roman_numeral = \"xix\";\n    } else if (number == 20) {\n        roman_numeral = \"xx\";\n    } else if (number == 30) {\n        roman_numeral = \"xxx\";\n    } else if (number == 40) {\n        roman_numeral = \"xl\";\n    } else if (number == 50) {\n",
    "    std::string roman_numeral;\n    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    int num_digits = 0;\n    while (number > 0) {\n        int digit = number % 10;\n        number /= 10;\n        if (digit == 4 || digit == 9) {\n            roman_numeral.insert(roman_numeral.begin(), 'v');\n        } else if (digit == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'l');\n        } else if (digit == 6) {\n            roman_numeral.insert(roman_numeral.begin(), 'x');\n        } else if (digit == 7) {\n            roman_numeral.insert(roman_numeral.begin(), 'c');\n        } else if (digit == 8) {\n            roman_numeral.insert(roman_numeral.begin(), 'd');\n        } else if (digit == 9) {\n            roman_numeral.insert(roman_numeral.begin(), 'm');\n        }\n        num_digits++;\n    }\n    while (roman_numeral.size() < num_digits) {\n        roman_numeral.insert(roman_numeral.begin(), 'i');\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    int num_digits = 0;\n    while (number > 0) {\n        int digit = number % 10;\n        number /= 10;\n        if (digit == 9) {\n            roman_numeral.insert(roman_numeral.begin(), 'x');\n        } else if (digit == 4) {\n            roman_numeral.insert(roman_numeral.begin(), 'c');\n        } else if (digit == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'd');\n        } else if (digit == 6) {\n            roman_numeral.insert(roman_numeral.begin(), 'm');\n        } else if (digit == 7) {\n            roman_numeral.insert(roman_numeral.begin(), 'l');\n        } else if (digit == 8) {\n            roman_numeral.insert(roman_numeral.begin(), 'x');\n        } else if (digit == 9) {\n            roman_numeral.insert(roman_numeral.begin(), 'v');\n        } else {\n            roman_numeral.insert(roman_numeral.begin(), 'i');\n        }\n        num_digits++;\n    }\n    while (num_digits > 0) {\n        roman_numeral.erase(roman_numeral.begin());\n        num_digits--;\n    }\n    return roman_numeral;",
    "    std::string result;\n    if (number < 1) {\n        return result;\n    }\n    if (number < 4) {\n        result = \"\";\n        switch (number) {\n            case 1:\n                result = \"I\";\n                break;\n            case 2:\n                result = \"II\";\n                break;\n            case 3:\n                result = \"III\";\n                break;\n            case 4:\n                result = \"IV\";\n                break;\n        }\n        return result;\n    }\n    if (number < 9) {\n        result = \"\";\n        switch (number) {\n            case 5:\n                result = \"V\";\n                break;\n            case 6:\n                result = \"VI\";\n                break;\n            case 7:\n                result = \"VII\";\n                break;\n            case 8:\n                result = \"VIII\";\n                break;\n            case 9:\n                result = \"IX\";\n                break;\n        }\n        return result;\n    }\n    if (number < 40) {\n        result = \"\";\n        switch (number) {\n            case 10:\n                result = \"X\";\n                break;\n            case 20:\n                result = \"XX\";\n                break;\n            case 30:\n                result = \"XXX\";\n                break;\n            case 40:\n                result = \"XL\";\n                break;\n            case 50:\n                result = \"L\";\n                break;\n            case 60:\n                result = \"LX\";\n                break;\n            case 70:\n                result = \"LXX\";\n                break;\n            case 80:\n                result = \"LXXX\";\n                break;\n            case 90:\n                result = \"XC\";\n                break;\n        }\n        return result;\n    }\n    if (number < 100) {\n        result = \"\";\n        switch (number) {\n            case 100:\n                result = \"C\";\n                break;\n            case 200:\n                result = \"CC\";\n                break;\n            case 300:\n                result = \"CCC\";\n                break;\n            case 400:\n                result = \"CD\";\n                break;\n            case 500:\n                result = \"D",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        int digit = number % 10;\n        number /= 10;\n        switch (digit) {\n            case 9:\n                roman_numeral += \"xix\";\n                break;\n            case 4:\n                roman_numeral += \"cdx\";\n                break;\n            case 5:\n                roman_numeral += \"cdv\";\n                break;\n            case 6:\n                roman_numeral += \"cdix\";\n                break;\n            case 7:\n                roman_numeral += \"cdxv\";\n                break;\n            case 8:\n                roman_numeral += \"cdix\";\n                break;\n            case 3:\n                roman_numeral += \"cdv\";\n                break;\n            case 2:\n                roman_numeral += \"cd\";\n                break;\n            case 1:\n                roman_numeral += \"c\";\n                break;\n            default:\n                assert(false);\n        }\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    int i = 0;\n    while (num > 0) {\n        int num_left = num % 10;\n        if (num_left == 4 || num_left == 9) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'v');\n        } else if (num_left == 5) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'l');\n        } else if (num_left == 1 || num_left == 8) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'x');\n        } else if (num_left == 2 || num_left == 7) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'c');\n        } else if (num_left == 3 || num_left == 6) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'd');\n        }\n        num /= 10;\n        i++;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int num_left = num % 10;\n        if (num_left == 4 || num_left == 9) {\n            roman_numeral.push_back('x');\n        } else if (num_left == 5) {\n            roman_numeral.push_back('l');\n        } else if (num_left == 6) {\n            roman_numeral.push_back('c');\n        } else if (num_left == 7) {\n            roman_numeral.push_back('d');\n        } else if (num_left == 8) {\n            roman_numeral.push_back('m');\n        } else if (num_left == 1) {\n            roman_numeral.push_back('i');\n        }\n        num /= 10;\n    }\n    std::reverse(roman_numeral.begin(), roman_numeral.end());\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral.append(\"i\");\n                break;\n            case 2:\n                roman_numeral.append(\"ii\");\n                break;\n            case 3:\n                roman_numeral.append(\"iii\");\n                break;\n            case 4:\n                roman_numeral.append(\"iv\");\n                break;\n            case 5:\n                roman_numeral.append(\"v\");\n                break;\n            case 6:\n                roman_numeral.append(\"vi\");\n                break;\n            case 7:\n                roman_numeral.append(\"vii\");\n                break;\n            case 8:\n                roman_numeral.append(\"viii\");\n                break;\n            case 9:\n                roman_numeral.append(\"ix\");\n                break;\n            case 10:\n                roman_numeral.append(\"x\");\n                break;\n            case 11:\n                roman_numeral.append(\"xi\");\n                break;\n            case 12:\n                roman_numeral.append(\"xii\");\n                break;\n            case 13:\n                roman_numeral.append(\"xiii\");\n                break;\n            case 14:\n                roman_numeral.append(\"xiv\");\n                break;\n            case 15:\n                roman_numeral.append(\"xv\");\n                break;\n            case 16:\n                roman_numeral.append(\"xvi\");\n                break;\n            case 17:\n                roman_numeral.append(\"xvii\");\n                break;\n            case 18:\n                roman_numeral.append(\"xviii\");\n                break;\n            case 19:\n                roman_numeral.append(\"xix\");\n                break;\n            case 20:\n                roman_numeral.append(\"xx\");\n                break;\n            case 30:\n                roman_numeral.append(\"xxx\");\n                break;\n            case 40:\n                roman_numeral.append(\"xl\");\n                break;\n            case 50:\n                roman_numeral.append(\"xl\");",
    "    std::string roman_numeral;\n    long num = number;\n    while (num > 0) {\n        long num_left = num % 10;\n        if (num_left == 4 || num_left == 9) {\n            roman_numeral.insert(roman_numeral.begin(), 'v');\n        } else if (num_left == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'l');\n        } else if (num_left == 1 || num_left == 2 || num_left == 3) {\n            roman_numeral.insert(roman_numeral.begin(), 'x');\n        } else if (num_left == 6) {\n            roman_numeral.insert(roman_numeral.begin(), 'c');\n        } else if (num_left == 7) {\n            roman_numeral.insert(roman_numeral.begin(), 'd');\n        } else if (num_left == 8) {\n            roman_numeral.insert(roman_numeral.begin(), 'm');\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman;\n    while (number > 0) {\n        int digit = number % 10;\n        if (digit == 9 || digit == 4 || digit == 5) {\n            roman.push_back('x');\n        } else if (digit == 9 || digit == 3 || digit == 1) {\n            roman.push_back('c');\n        } else if (digit == 6 || digit == 7) {\n            roman.push_back('l');\n        } else if (digit == 8) {\n            roman.push_back('d');\n        } else if (digit == 2) {\n            roman.push_back('m');\n        }\n        number /= 10;\n    }\n    return roman;",
    "    std::string roman_numeral;\n    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 4 || num == 9) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'v');\n        } else if (num == 5) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'x');\n        } else if (num == 1) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'i');\n        } else if (num == 2) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'x');\n        } else if (num == 3) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'c');\n        } else if (num == 6) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'l');\n        } else if (num == 7) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'c');\n        } else if (num == 8) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'x');\n        } else if (num == 0) {\n            roman_numeral.insert(roman_numeral.begin() + i, 'c');\n        }\n        number /= 10;\n        i++;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            default:\n                break;\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            case 11:\n                roman_numeral += \"xi\";\n                break;\n            case 12:\n                roman_numeral += \"xii\";\n                break;\n            case 13:\n                roman_numeral += \"xiii\";\n                break;\n            case 14:\n                roman_numeral += \"xiv\";\n                break;\n            case 15:\n                roman_numeral += \"xv\";\n                break;\n            case 16:\n                roman_numeral += \"xvi\";\n                break;\n            case 17:\n                roman_numeral += \"xvii\";\n                break;\n            case 18:\n                roman_numeral += \"xviii\";\n                break;\n            case 19:\n                roman_numeral += \"xix\";\n                break;\n            case 20:\n                roman_numeral += \"xx\";\n                break;\n            case 30:\n                roman_numeral += \"xxi\";\n                break;\n            case 40:\n                roman_numeral += \"xxii\";\n                break;\n            case 50:\n                roman_numeral += \"xxiii\";\n                break;\n            case 60:\n                roman_numeral += \"xxiv\";\n                ",
    "    std::string roman;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        number /= 10;\n        switch (num) {\n            case 9:\n                roman.insert(roman.begin() + i, 'x');\n                break;\n            case 4:\n                roman.insert(roman.begin() + i, 'c');\n                break;\n            case 5:\n                roman.insert(roman.begin() + i, 'd');\n                break;\n            case 6:\n                roman.insert(roman.begin() + i, 'm');\n                break;\n            case 7:\n                roman.insert(roman.begin() + i, 'l');\n                break;\n            case 8:\n                roman.insert(roman.begin() + i, 'x');\n                break;\n            case 3:\n                roman.insert(roman.begin() + i, 'v');\n                break;\n            case 2:\n                roman.insert(roman.begin() + i, 'i');\n                break;\n            case 1:\n                roman.insert(roman.begin() + i, 'x');\n                break;\n        }\n        i++;\n    }\n    return roman;",
    "    std::string roman;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 9 || num == 4 || num == 5) {\n            roman.insert(roman.begin(), 'x');\n        } else if (num == 9 || num == 4) {\n            roman.insert(roman.begin(), 'l');\n        } else if (num == 5) {\n            roman.insert(roman.begin(), 'c');\n        } else {\n            roman.insert(roman.begin(), 'i');\n        }\n        number /= 10;\n    }\n    return roman;",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        switch (num) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            case 11:\n                roman_numeral += \"xi\";\n                break;\n            case 12:\n                roman_numeral += \"xii\";\n                break;\n            case 13:\n                roman_numeral += \"xiii\";\n                break;\n            case 14:\n                roman_numeral += \"xiv\";\n                break;\n            case 15:\n                roman_numeral += \"xv\";\n                break;\n            case 16:\n                roman_numeral += \"xvi\";\n                break;\n            case 17:\n                roman_numeral += \"xvii\";\n                break;\n            case 18:\n                roman_numeral += \"xviii\";\n                break;\n            case 19:\n                roman_numeral += \"xix\";\n                break;\n            case 20:\n                roman_numeral += \"xx\";\n                break;\n            case 30:\n                roman_numeral += \"xxx\";\n                break;\n            case 40:\n                roman_numeral += \"xl\";\n                break;\n            case 50:\n                roman_numeral += \"l\";\n                break;\n            case 60:\n                roman_numeral += \"lx\";\n                break;",
    "    std::string roman_numeral;\n    int i = number;\n    while (i > 0) {\n        int j = i % 10;\n        switch (j) {\n            case 1:\n                roman_numeral.append(\"i\");\n                break;\n            case 2:\n                roman_numeral.append(\"ii\");\n                break;\n            case 3:\n                roman_numeral.append(\"iii\");\n                break;\n            case 4:\n                roman_numeral.append(\"iv\");\n                break;\n            case 5:\n                roman_numeral.append(\"v\");\n                break;\n            case 6:\n                roman_numeral.append(\"vi\");\n                break;\n            case 7:\n                roman_numeral.append(\"vii\");\n                break;\n            case 8:\n                roman_numeral.append(\"viii\");\n                break;\n            case 9:\n                roman_numeral.append(\"ix\");\n                break;\n            case 0:\n                roman_numeral.append(\"x\");\n                break;\n        }\n        i /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            case 11:\n                roman_numeral += \"xi\";\n                break;\n            case 12:\n                roman_numeral += \"xii\";\n                break;\n            case 13:\n                roman_numeral += \"xiii\";\n                break;\n            case 14:\n                roman_numeral += \"xiv\";\n                break;\n            case 15:\n                roman_numeral += \"xv\";\n                break;\n            case 16:\n                roman_numeral += \"xvi\";\n                break;\n            case 17:\n                roman_numeral += \"xvii\";\n                break;\n            case 18:\n                roman_numeral += \"xviii\";\n                break;\n            case 19:\n                roman_numeral += \"xix\";\n                break;\n            case 20:\n                roman_numeral += \"xx\";\n                break;\n            case 30:\n                roman_numeral += \"xxi\";\n                break;\n            case 40:\n                roman_numeral += \"xxii\";\n                break;\n            case 50:\n                roman_numeral += \"xxiii\";\n                break;\n            case 60:\n                roman_numeral += \"xxiv\";\n                ",
    "    std::string roman;\n    if (number == 0) {\n        return \"\";\n    }\n    if (number == 1) {\n        roman = \"i\";\n    } else if (number == 2) {\n        roman = \"ii\";\n    } else if (number == 3) {\n        roman = \"iii\";\n    } else if (number == 4) {\n        roman = \"iv\";\n    } else if (number == 5) {\n        roman = \"v\";\n    } else if (number == 6) {\n        roman = \"vi\";\n    } else if (number == 7) {\n        roman = \"vii\";\n    } else if (number == 8) {\n        roman = \"viii\";\n    } else if (number == 9) {\n        roman = \"ix\";\n    } else if (number == 10) {\n        roman = \"x\";\n    } else if (number == 11) {\n        roman = \"xi\";\n    } else if (number == 12) {\n        roman = \"xii\";\n    } else if (number == 13) {\n        roman = \"xiii\";\n    } else if (number == 14) {\n        roman = \"xiv\";\n    } else if (number == 15) {\n        roman = \"xv\";\n    } else if (number == 16) {\n        roman = \"xvi\";\n    } else if (number == 17) {\n        roman = \"xvii\";\n    } else if (number == 18) {\n        roman = \"xviii\";\n    } else if (number == 19) {\n        roman = \"xix\";\n    } else if (number == 20) {\n        roman = \"xx\";\n    } else if (number == 30) {\n        roman = \"xxx\";\n    } else if (number == 40) {\n        roman = \"xl\";\n    } else if (number == 50) {\n        roman = \"l\";\n    } else if (number == 60) {\n        roman = \"lx\";\n    } else if (number == 70) {\n        roman = \"lxx\";\n    } else if (number == 80) {\n        roman = \"lxxx\";\n    } else if (",
    "    std::string roman;\n    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 4 || num == 9) {\n            roman.push_back('i');\n        } else if (num == 5) {\n            roman.push_back('v');\n        } else if (num == 6) {\n            roman.push_back('x');\n        } else if (num == 7) {\n            roman.push_back('l');\n        } else if (num == 8) {\n            roman.push_back('c');\n        } else if (num == 9) {\n            roman.push_back('d');\n        }\n        number /= 10;\n    }\n    std::reverse(roman.begin(), roman.end());\n    return roman;",
    "    std::string result;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                result.append(\"x\");\n                break;\n            case 2:\n                result.append(\"x\");\n                break;\n            case 3:\n                result.append(\"c\");\n                break;\n            case 4:\n                result.append(\"c\");\n                break;\n            case 5:\n                result.append(\"c\");\n                break;\n            case 6:\n                result.append(\"v\");\n                break;\n            case 7:\n                result.append(\"v\");\n                break;\n            case 8:\n                result.append(\"v\");\n                break;\n            case 9:\n                result.append(\"ix\");\n                break;\n            case 10:\n                result.append(\"ix\");\n                break;\n            case 11:\n                result.append(\"ix\");\n                break;\n            case 12:\n                result.append(\"x\");\n                break;\n            case 13:\n                result.append(\"x\");\n                break;\n            case 14:\n                result.append(\"x\");\n                break;\n            case 15:\n                result.append(\"l\");\n                break;\n            case 16:\n                result.append(\"l\");\n                break;\n            case 17:\n                result.append(\"l\");\n                break;\n            case 18:\n                result.append(\"l\");\n                break;\n            case 19:\n                result.append(\"x\");\n                break;\n            case 20:\n                result.append(\"x\");\n                break;\n            case 21:\n                result.append(\"x\");\n                break;\n            case 22:\n                result.append(\"c\");\n                break;\n            case 23:\n                result.append(\"c\");\n                break;\n            case 24:\n                result.append(\"c\");\n                break;\n            case 25:\n                result.append(\"v\");\n                break;\n            case 26:\n                result.append(\"v\");\n                break;\n            case 27:\n                result.append(\"v\");\n                break;\n            case 28:\n                result.append(\"v\");\n                ",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int remainder = num % 10;\n        switch (remainder) {\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 3:\n                roman_numeral += \"ii\";\n                break;\n            case 2:\n                roman_numeral += \"i\";\n                break;\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            default:\n                break;\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int num_left = num % 10;\n        switch (num_left) {\n            case 1:\n                roman_numeral.append(\"i\");\n                break;\n            case 2:\n                roman_numeral.append(\"ii\");\n                break;\n            case 3:\n                roman_numeral.append(\"iii\");\n                break;\n            case 4:\n                roman_numeral.append(\"iv\");\n                break;\n            case 5:\n                roman_numeral.append(\"v\");\n                break;\n            case 6:\n                roman_numeral.append(\"vi\");\n                break;\n            case 7:\n                roman_numeral.append(\"vii\");\n                break;\n            case 8:\n                roman_numeral.append(\"viii\");\n                break;\n            case 9:\n                roman_numeral.append(\"ix\");\n                break;\n            case 10:\n                roman_numeral.append(\"x\");\n                break;\n            default:\n                break;\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    int rem;\n    while (num > 0) {\n        rem = num % 10;\n        num /= 10;\n        switch (rem) {\n            case 9:\n                roman_numeral.insert(roman_numeral.end(), 'x');\n                break;\n            case 4:\n                roman_numeral.insert(roman_numeral.end(), 'c');\n                break;\n            case 3:\n                roman_numeral.insert(roman_numeral.end(), 'm');\n                break;\n            case 2:\n                roman_numeral.insert(roman_numeral.end(), 'x');\n                roman_numeral.insert(roman_numeral.end(), 'c');\n                break;\n            case 1:\n                roman_numeral.insert(roman_numeral.end(), 'x');\n                roman_numeral.insert(roman_numeral.end(), 'c');\n                roman_numeral.insert(roman_numeral.end(), 'm');\n                break;\n            default:\n                break;\n        }\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    if (number == 1) {\n        roman_numeral = \"i\";\n    } else if (number == 2) {\n        roman_numeral = \"ii\";\n    } else if (number == 3) {\n        roman_numeral = \"iii\";\n    } else if (number == 4) {\n        roman_numeral = \"iv\";\n    } else if (number == 5) {\n        roman_numeral = \"v\";\n    } else if (number == 6) {\n        roman_numeral = \"vi\";\n    } else if (number == 7) {\n        roman_numeral = \"vii\";\n    } else if (number == 8) {\n        roman_numeral = \"viii\";\n    } else if (number == 9) {\n        roman_numeral = \"ix\";\n    } else if (number == 10) {\n        roman_numeral = \"x\";\n    } else if (number == 11) {\n        roman_numeral = \"xi\";\n    } else if (number == 12) {\n        roman_numeral = \"xii\";\n    } else if (number == 13) {\n        roman_numeral = \"xiii\";\n    } else if (number == 14) {\n        roman_numeral = \"xiv\";\n    } else if (number == 15) {\n        roman_numeral = \"xv\";\n    } else if (number == 16) {\n        roman_numeral = \"xvi\";\n    } else if (number == 17) {\n        roman_numeral = \"xvii\";\n    } else if (number == 18) {\n        roman_numeral = \"xviii\";\n    } else if (number == 19) {\n        roman_numeral = \"xix\";\n    } else if (number == 20) {\n        roman_numeral = \"xx\";\n    } else if (number == 30) {\n        roman_numeral = \"xxx\";\n    } else if (number == 40) {\n        roman_numeral = \"xl\";\n    } else if (number ==",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            case 11:\n                roman_numeral += \"xi\";\n                break;\n            case 12:\n                roman_numeral += \"xii\";\n                break;\n            case 13:\n                roman_numeral += \"xiii\";\n                break;\n            case 14:\n                roman_numeral += \"xiv\";\n                break;\n            case 15:\n                roman_numeral += \"xv\";\n                break;\n            case 16:\n                roman_numeral += \"xvi\";\n                break;\n            case 17:\n                roman_numeral += \"xvii\";\n                break;\n            case 18:\n                roman_numeral += \"xviii\";\n                break;\n            case 19:\n                roman_numeral += \"xix\";\n                break;\n            case 20:\n                roman_numeral += \"xx\";\n                break;\n            case 30:\n                roman_numeral += \"xxi\";\n                break;\n            case 40:\n                roman_numeral += \"xxii\";\n                break;\n            case 50:\n                roman_numeral += \"xxiii\";\n                break;\n            case 60:\n                roman_numeral += \"xxiv\";\n                ",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 4) {\n            roman_numeral += \"cd\";\n            number -= 4;\n        } else if (num == 9) {\n            roman_numeral += \"cm\";\n            number -= 9;\n        } else if (num == 5) {\n            roman_numeral += \"d\";\n            number -= 5;\n        } else if (num == 8) {\n            roman_numeral += \"c\";\n            number -= 8;\n        } else if (num == 2) {\n            roman_numeral += \"x\";\n            number -= 2;\n        } else if (num == 1) {\n            roman_numeral += \"i\";\n            number -= 1;\n        } else {\n            roman_numeral += \"v\";\n            number -= 1;\n        }\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    if (number == 0) {\n        return \"\";\n    }\n    if (number == 1) {\n        roman_numeral = \"i\";\n    } else if (number == 2) {\n        roman_numeral = \"ii\";\n    } else if (number == 3) {\n        roman_numeral = \"iii\";\n    } else if (number == 4) {\n        roman_numeral = \"iv\";\n    } else if (number == 5) {\n        roman_numeral = \"v\";\n    } else if (number == 6) {\n        roman_numeral = \"vi\";\n    } else if (number == 7) {\n        roman_numeral = \"vii\";\n    } else if (number == 8) {\n        roman_numeral = \"viii\";\n    } else if (number == 9) {\n        roman_numeral = \"ix\";\n    } else if (number == 10) {\n        roman_numeral = \"x\";\n    } else if (number == 11) {\n        roman_numeral = \"xi\";\n    } else if (number == 12) {\n        roman_numeral = \"xii\";\n    } else if (number == 13) {\n        roman_numeral = \"xiii\";\n    } else if (number == 14) {\n        roman_numeral = \"xiv\";\n    } else if (number == 15) {\n        roman_numeral = \"xv\";\n    } else if (number == 16) {\n        roman_numeral = \"xvi\";\n    } else if (number == 17) {\n        roman_numeral = \"xvii\";\n    } else if (number == 18) {\n        roman_numeral = \"xviii\";\n    } else if (number == 19) {\n        roman_numeral = \"xix\";\n    } else if (number == 20) {\n        roman_numeral = \"xx\";\n    } else if (number == 30) {\n        roman_numeral = \"xxx\";\n    } else if (number == 40) {\n        roman_numeral = \"xl\";\n    } else if (number == 50) {\n",
    "    std::string roman;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        number /= 10;\n        if (num == 9 || num == 4 || num == 5) {\n            roman.insert(roman.begin() + i, 'x');\n            i++;\n        } else if (num == 9 || num == 4) {\n            roman.insert(roman.begin() + i, 'l');\n            i++;\n        } else if (num == 9 || num == 5) {\n            roman.insert(roman.begin() + i, 'c');\n            i++;\n        } else if (num == 4 || num == 5) {\n            roman.insert(roman.begin() + i, 'd');\n            i++;\n        } else if (num == 1) {\n            roman.insert(roman.begin() + i, 'i');\n            i++;\n        } else if (num == 2) {\n            roman.insert(roman.begin() + i, 'v');\n            i++;\n        } else if (num == 3) {\n            roman.insert(roman.begin() + i, 'x');\n            i++;\n        }\n    }\n    return roman;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral.push_back('i');\n                break;\n            case 2:\n                roman_numeral.push_back('v');\n                break;\n            case 3:\n                roman_numeral.push_back('x');\n                break;\n            case 4:\n                roman_numeral.push_back('l');\n                break;\n            case 5:\n                roman_numeral.push_back('c');\n                break;\n            case 6:\n                roman_numeral.push_back('d');\n                break;\n            case 7:\n                roman_numeral.push_back('m');\n                break;\n            case 8:\n                roman_numeral.push_back('x');\n                break;\n            case 9:\n                roman_numeral.push_back('v');\n                break;\n            case 0:\n                roman_numeral.push_back('i');\n                break;\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string result;\n    if (number == 0) {\n        result = \"\";\n    } else if (number == 1) {\n        result = \"i\";\n    } else if (number == 2) {\n        result = \"ii\";\n    } else if (number == 3) {\n        result = \"iii\";\n    } else if (number == 4) {\n        result = \"iv\";\n    } else if (number == 5) {\n        result = \"v\";\n    } else if (number == 6) {\n        result = \"vi\";\n    } else if (number == 7) {\n        result = \"vii\";\n    } else if (number == 8) {\n        result = \"viii\";\n    } else if (number == 9) {\n        result = \"ix\";\n    } else if (number == 10) {\n        result = \"x\";\n    } else if (number == 11) {\n        result = \"xi\";\n    } else if (number == 12) {\n        result = \"xii\";\n    } else if (number == 13) {\n        result = \"xiii\";\n    } else if (number == 14) {\n        result = \"xiv\";\n    } else if (number == 15) {\n        result = \"xv\";\n    } else if (number == 16) {\n        result = \"xvi\";\n    } else if (number == 17) {\n        result = \"xvii\";\n    } else if (number == 18) {\n        result = \"xviii\";\n    } else if (number == 19) {\n        result = \"xix\";\n    } else if (number == 20) {\n        result = \"xx\";\n    } else if (number == 30) {\n        result = \"xxx\";\n    } else if (number == 40) {\n        result = \"xl\";\n    } else if (number == 50) {\n        result = \"l\";\n    } else if (number == 60) {\n        result = \"lx\";\n    } else if (number == 70) {\n        result = \"lxx\";\n    } else if (number == 80) {\n        result = \"lxxx\";\n    } else if (number",
    "    std::string roman;\n    while (number > 0) {\n        int num = number % 10;\n        switch (num) {\n            case 1:\n                roman += \"i\";\n                break;\n            case 2:\n                roman += \"ii\";\n                break;\n            case 3:\n                roman += \"iii\";\n                break;\n            case 4:\n                roman += \"iv\";\n                break;\n            case 5:\n                roman += \"v\";\n                break;\n            case 6:\n                roman += \"vi\";\n                break;\n            case 7:\n                roman += \"vii\";\n                break;\n            case 8:\n                roman += \"viii\";\n                break;\n            case 9:\n                roman += \"ix\";\n                break;\n            case 10:\n                roman += \"x\";\n                break;\n            default:\n                assert(false);\n        }\n        number /= 10;\n    }\n    return roman;",
    "    std::string roman_numeral;\n    if (number < 1 || number > 1000) {\n        return \"\";\n    }\n    int num_digits = 0;\n    while (number > 0) {\n        int digit = number % 10;\n        number /= 10;\n        if (digit == 4 || digit == 9) {\n            roman_numeral.insert(roman_numeral.begin(), 'v');\n        } else if (digit == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'x');\n        } else if (digit == 6) {\n            roman_numeral.insert(roman_numeral.begin(), 'l');\n        } else if (digit == 7) {\n            roman_numeral.insert(roman_numeral.begin(), 'c');\n        } else if (digit == 8) {\n            roman_numeral.insert(roman_numeral.begin(), 'd');\n        } else if (digit == 9) {\n            roman_numeral.insert(roman_numeral.begin(), 'm');\n        }\n        num_digits++;\n    }\n    if (num_digits > 0) {\n        roman_numeral.erase(roman_numeral.begin());\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        if (digit == 9) {\n            roman_numeral += \"ix\";\n        } else if (digit == 4) {\n            roman_numeral += \"iv\";\n        } else if (digit == 5) {\n            roman_numeral += \"v\";\n        } else if (digit == 6) {\n            roman_numeral += \"vi\";\n        } else if (digit == 7) {\n            roman_numeral += \"vii\";\n        } else if (digit == 8) {\n            roman_numeral += \"viii\";\n        } else if (digit == 1) {\n            roman_numeral += \"i\";\n        } else if (digit == 2) {\n            roman_numeral += \"ii\";\n        } else if (digit == 3) {\n            roman_numeral += \"iii\";\n        } else if (digit == 0) {\n            roman_numeral += \"x\";\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman;\n    if (number == 0) {\n        roman = \"\";\n    } else if (number == 1) {\n        roman = \"i\";\n    } else if (number == 2) {\n        roman = \"ii\";\n    } else if (number == 3) {\n        roman = \"iii\";\n    } else if (number == 4) {\n        roman = \"iv\";\n    } else if (number == 5) {\n        roman = \"v\";\n    } else if (number == 6) {\n        roman = \"vi\";\n    } else if (number == 7) {\n        roman = \"vii\";\n    } else if (number == 8) {\n        roman = \"viii\";\n    } else if (number == 9) {\n        roman = \"ix\";\n    } else if (number == 10) {\n        roman = \"x\";\n    } else if (number == 11) {\n        roman = \"xi\";\n    } else if (number == 12) {\n        roman = \"xii\";\n    } else if (number == 13) {\n        roman = \"xiii\";\n    } else if (number == 14) {\n        roman = \"xiv\";\n    } else if (number == 15) {\n        roman = \"xv\";\n    } else if (number == 16) {\n        roman = \"xvi\";\n    } else if (number == 17) {\n        roman = \"xvii\";\n    } else if (number == 18) {\n        roman = \"xviii\";\n    } else if (number == 19) {\n        roman = \"xix\";\n    } else if (number == 20) {\n        roman = \"xx\";\n    } else if (number == 30) {\n        roman = \"xxx\";\n    } else if (number == 40) {\n        roman = \"xl\";\n    } else if (number == 50) {\n        roman = \"l\";\n    } else if (number == 60) {\n        roman = \"lx\";\n    } else if (number == 70) {\n        roman = \"lxx\";\n    } else if (number == 80) {\n        roman = \"lxxx\";\n    } else if (",
    "    std::string roman_numeral;\n    if (number == 0) {\n        return \"\";\n    }\n    if (number < 0) {\n        number = -number;\n    }\n    int num_digits = 0;\n    while (number > 0) {\n        int digit = number % 10;\n        number /= 10;\n        if (digit == 9 || digit == 4 || digit == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'x');\n        }\n        if (digit == 9) {\n            roman_numeral.insert(roman_numeral.begin(), 'c');\n        }\n        if (digit == 4) {\n            roman_numeral.insert(roman_numeral.begin(), 'd');\n        }\n        if (digit == 5) {\n            roman_numeral.insert(roman_numeral.begin(), 'm');\n        }\n        num_digits++;\n    }\n    while (num_digits > 0) {\n        roman_numeral.pop_back();\n        num_digits--;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    if (number == 0) {\n        roman_numeral = \"\";\n    } else {\n        while (number > 0) {\n            if (number % 10 == 1) {\n                roman_numeral += \"i\";\n                number -= 1;\n            } else if (number % 10 == 2) {\n                roman_numeral += \"ii\";\n                number -= 2;\n            } else if (number % 10 == 3) {\n                roman_numeral += \"iii\";\n                number -= 3;\n            } else if (number % 10 == 4) {\n                roman_numeral += \"iv\";\n                number -= 4;\n            } else if (number % 10 == 5) {\n                roman_numeral += \"v\";\n                number -= 5;\n            } else if (number % 10 == 6) {\n                roman_numeral += \"vi\";\n                number -= 6;\n            } else if (number % 10 == 7) {\n                roman_numeral += \"vii\";\n                number -= 7;\n            } else if (number % 10 == 8) {\n                roman_numeral += \"viii\";\n                number -= 8;\n            } else if (number % 10 == 9) {\n                roman_numeral += \"ix\";\n                number -= 9;\n            }\n        }\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int remainder = num % 10;\n        if (remainder == 4 || remainder == 9) {\n            roman_numeral += \"cd\";\n            num -= 2;\n        } else if (remainder == 5) {\n            roman_numeral += \"d\";\n            num -= 1;\n        } else if (remainder == 6) {\n            roman_numeral += \"m\";\n            num -= 1;\n        } else if (remainder == 7) {\n            roman_numeral += \"m\";\n            num -= 1;\n        } else if (remainder == 8) {\n            roman_numeral += \"m\";\n            num -= 1;\n        } else if (remainder == 9) {\n            roman_numeral += \"x\";\n            num -= 1;\n        } else if (remainder == 1) {\n            roman_numeral += \"i\";\n            num -= 1;\n        } else if (remainder == 2) {\n            roman_numeral += \"ii\";\n            num -= 2;\n        } else if (remainder == 3) {\n            roman_numeral += \"iii\";\n            num -= 3;\n        }\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    while (number > 0) {\n        int digit = number % 10;\n        if (digit == 9) {\n            roman_numeral += \"ix\";\n        } else if (digit == 4) {\n            roman_numeral += \"iv\";\n        } else if (digit == 5) {\n            roman_numeral += \"v\";\n        } else if (digit == 6) {\n            roman_numeral += \"vi\";\n        } else if (digit == 7) {\n            roman_numeral += \"vii\";\n        } else if (digit == 8) {\n            roman_numeral += \"viii\";\n        } else if (digit == 3) {\n            roman_numeral += \"ii\";\n        } else if (digit == 2) {\n            roman_numeral += \"i\";\n        } else if (digit == 1) {\n            roman_numeral += \"i\";\n        }\n        number /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 4 || num == 9) {\n            roman_numeral += \"cd\";\n            number -= 5;\n        } else if (num == 5) {\n            roman_numeral += \"cd\";\n            number -= 5;\n        } else if (num == 1) {\n            roman_numeral += \"x\";\n            number -= 1;\n        } else if (num == 2) {\n            roman_numeral += \"x\";\n            number -= 1;\n        } else if (num == 3) {\n            roman_numeral += \"x\";\n            number -= 1;\n        } else if (num == 0) {\n            roman_numeral += \"i\";\n            number -= 1;\n        }\n    }\n    return roman_numeral;",
    "    std::string result;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        if (digit == 9 || digit == 4 || digit == 5) {\n            result.insert(result.begin(), 'x');\n        } else if (digit == 9 || digit == 4) {\n            result.insert(result.begin(), 'c');\n        } else if (digit == 5) {\n            result.insert(result.begin(), 'd');\n        } else {\n            result.insert(result.begin(), 'v');\n        }\n        num /= 10;\n    }\n    return result;",
    "    std::string result;\n    if (number < 1 || number > 1000) {\n        return result;\n    }\n    if (number == 1) {\n        result = \"i\";\n    } else if (number < 5) {\n        result = \"iv\";\n    } else if (number < 10) {\n        result = \"v\";\n    } else if (number < 50) {\n        result = \"lv\";\n    } else if (number < 100) {\n        result = \"l\";\n    } else if (number < 500) {\n        result = \"ll\";\n    } else if (number < 1000) {\n        result = \"x\";\n    } else {\n        result = \"cm\";\n        number -= 1000;\n    }\n    while (number > 0) {\n        result = \"cd\" + result;\n        number -= 100;\n    }\n    return result;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int num_left = num % 10;\n        switch (num_left) {\n            case 1:\n                roman_numeral += \"i\";\n                break;\n            case 2:\n                roman_numeral += \"ii\";\n                break;\n            case 3:\n                roman_numeral += \"iii\";\n                break;\n            case 4:\n                roman_numeral += \"iv\";\n                break;\n            case 5:\n                roman_numeral += \"v\";\n                break;\n            case 6:\n                roman_numeral += \"vi\";\n                break;\n            case 7:\n                roman_numeral += \"vii\";\n                break;\n            case 8:\n                roman_numeral += \"viii\";\n                break;\n            case 9:\n                roman_numeral += \"ix\";\n                break;\n            case 10:\n                roman_numeral += \"x\";\n                break;\n            default:\n                break;\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman += \"i\";\n                break;\n            case 2:\n                roman += \"ii\";\n                break;\n            case 3:\n                roman += \"iii\";\n                break;\n            case 4:\n                roman += \"iv\";\n                break;\n            case 5:\n                roman += \"v\";\n                break;\n            case 6:\n                roman += \"vi\";\n                break;\n            case 7:\n                roman += \"vii\";\n                break;\n            case 8:\n                roman += \"viii\";\n                break;\n            case 9:\n                roman += \"ix\";\n                break;\n            case 10:\n                roman += \"x\";\n                break;\n            case 11:\n                roman += \"xi\";\n                break;\n            case 12:\n                roman += \"xii\";\n                break;\n            case 13:\n                roman += \"xiii\";\n                break;\n            case 14:\n                roman += \"xiv\";\n                break;\n            case 15:\n                roman += \"xv\";\n                break;\n            case 16:\n                roman += \"xvi\";\n                break;\n            case 17:\n                roman += \"xvii\";\n                break;\n            case 18:\n                roman += \"xviii\";\n                break;\n            case 19:\n                roman += \"xix\";\n                break;\n            case 20:\n                roman += \"xx\";\n                break;\n            case 30:\n                roman += \"xxx\";\n                break;\n            case 40:\n                roman += \"xl\";\n                break;\n            case 50:\n                roman += \"l\";\n                break;\n            case 60:\n                roman += \"lx\";\n                break;\n            case 70:\n                roman += \"lxx\";\n                break;\n            case 80:\n                roman += \"lxxx\";\n                break;\n            case 90:\n                roman += \"xlx\";\n                break;\n            case 100:\n                roman += \"xc\";\n                break;\n            case 200:\n                ",
    "    std::string result;\n    if (number == 0) {\n        return \"\";\n    }\n    if (number < 0) {\n        return \"\";\n    }\n    if (number == 1) {\n        return \"i\";\n    }\n    if (number == 2) {\n        return \"ii\";\n    }\n    if (number == 3) {\n        return \"iii\";\n    }\n    if (number == 4) {\n        return \"iv\";\n    }\n    if (number == 5) {\n        return \"v\";\n    }\n    if (number == 6) {\n        return \"vi\";\n    }\n    if (number == 7) {\n        return \"vii\";\n    }\n    if (number == 8) {\n        return \"viii\";\n    }\n    if (number == 9) {\n        return \"ix\";\n    }\n    if (number == 10) {\n        return \"x\";\n    }\n    if (number == 11) {\n        return \"xi\";\n    }\n    if (number == 12) {\n        return \"xii\";\n    }\n    if (number == 13) {\n        return \"xiii\";\n    }\n    if (number == 14) {\n        return \"xiv\";\n    }\n    if (number == 15) {\n        return \"xv\";\n    }\n    if (number == 16) {\n        return \"xvi\";\n    }\n    if (number == 17) {\n        return \"xvii\";\n    }\n    if (number == 18) {\n        return \"xviii\";\n    }\n    if (number == 19) {\n        return \"xix\";\n    }\n    if (number == 20) {\n        return \"xx\";\n    }\n    if (number == 30) {\n        return \"xxx\";\n    }\n    if (number == 40) {\n        return \"xl\";\n    }\n    if (number == 50) {\n        return \"l\";\n    }\n    if (number == 60) {\n        return \"lx\";\n    }\n    if (number == 70) {\n        return \"lxx\";\n    }\n    if (number == 80",
    "    std::string result;\n    int i = 0;\n    while (number > 0) {\n        int digit = number % 10;\n        if (digit == 4 || digit == 9) {\n            result.insert(i, \"cd\");\n            i += 2;\n        } else if (digit == 5) {\n            result.insert(i, \"d\");\n            i += 1;\n        } else if (digit == 6) {\n            result.insert(i, \"m\");\n            i += 1;\n        } else if (digit == 7) {\n            result.insert(i, \"x\");\n            i += 1;\n        } else if (digit == 8) {\n            result.insert(i, \"l\");\n            i += 1;\n        } else if (digit == 9) {\n            result.insert(i, \"c\");\n            i += 1;\n        }\n        number /= 10;\n    }\n    return result;",
    "    std::string roman_numeral;\n    int i = 0;\n    while (number > 0) {\n        int digit = number % 10;\n        number /= 10;\n        switch (digit) {\n            case 9:\n                roman_numeral += \"xix\";\n                break;\n            case 4:\n                roman_numeral += \"cdx\";\n                break;\n            case 5:\n                roman_numeral += \"cdv\";\n                break;\n            case 6:\n                roman_numeral += \"cdix\";\n                break;\n            case 7:\n                roman_numeral += \"cdxv\";\n                break;\n            case 8:\n                roman_numeral += \"cdix\";\n                break;\n            case 3:\n                roman_numeral += \"cdv\";\n                break;\n            case 2:\n                roman_numeral += \"cd\";\n                break;\n            case 1:\n                roman_numeral += \"c\";\n                break;\n        }\n    }\n    return roman_numeral;",
    "    std::string roman;\n    if (number == 0) {\n        roman = \"\";\n    } else if (number == 1) {\n        roman = \"i\";\n    } else if (number == 2) {\n        roman = \"ii\";\n    } else if (number == 3) {\n        roman = \"iii\";\n    } else if (number == 4) {\n        roman = \"iv\";\n    } else if (number == 5) {\n        roman = \"v\";\n    } else if (number == 6) {\n        roman = \"vi\";\n    } else if (number == 7) {\n        roman = \"vii\";\n    } else if (number == 8) {\n        roman = \"viii\";\n    } else if (number == 9) {\n        roman = \"ix\";\n    } else if (number == 10) {\n        roman = \"x\";\n    } else if (number == 11) {\n        roman = \"xi\";\n    } else if (number == 12) {\n        roman = \"xii\";\n    } else if (number == 13) {\n        roman = \"xiii\";\n    } else if (number == 14) {\n        roman = \"xiv\";\n    } else if (number == 15) {\n        roman = \"xv\";\n    } else if (number == 16) {\n        roman = \"xvi\";\n    } else if (number == 17) {\n        roman = \"xvii\";\n    } else if (number == 18) {\n        roman = \"xviii\";\n    } else if (number == 19) {\n        roman = \"xix\";\n    } else if (number == 20) {\n        roman = \"xx\";\n    } else if (number == 30) {\n        roman = \"xxx\";\n    } else if (number == 40) {\n        roman = \"xl\";\n    } else if (number == 50) {\n        roman = \"l\";\n    } else if (number == 60) {\n        roman = \"lx\";\n    } else if (number == 70) {\n        roman = \"lxx\";\n    } else if (number == 80) {\n        roman = \"lxxx\";\n    } else if (",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral.append(\"i\");\n                break;\n            case 2:\n                roman_numeral.append(\"ii\");\n                break;\n            case 3:\n                roman_numeral.append(\"iii\");\n                break;\n            case 4:\n                roman_numeral.append(\"iv\");\n                break;\n            case 5:\n                roman_numeral.append(\"v\");\n                break;\n            case 6:\n                roman_numeral.append(\"vi\");\n                break;\n            case 7:\n                roman_numeral.append(\"vii\");\n                break;\n            case 8:\n                roman_numeral.append(\"viii\");\n                break;\n            case 9:\n                roman_numeral.append(\"ix\");\n                break;\n            case 10:\n                roman_numeral.append(\"x\");\n                break;\n            default:\n                break;\n        }\n        num /= 10;\n    }\n    return roman_numeral;",
    "    std::string roman;\n    while (number > 0) {\n        int num = number % 10;\n        if (num == 4 || num == 9) {\n            roman.push_back('x');\n        } else if (num == 5) {\n            roman.push_back('l');\n        } else if (num == 6) {\n            roman.push_back('c');\n        } else if (num == 7) {\n            roman.push_back('d');\n        } else if (num == 8) {\n            roman.push_back('m');\n        } else if (num == 0) {\n            roman.push_back('i');\n        } else {\n            roman.push_back('v');\n        }\n        number /= 10;\n    }\n    return roman;",
    "    std::string roman_numeral;\n    int num = number;\n    while (num > 0) {\n        int digit = num % 10;\n        switch (digit) {\n            case 1:\n                roman_numeral.push_back('i');\n                break;\n            case 2:\n                roman_numeral.push_back('ii');\n                break;\n            case 3:\n                roman_numeral.push_back('iii');\n                break;\n            case 4:\n                roman_numeral.push_back('iv');\n                break;\n            case 5:\n                roman_numeral.push_back('v');\n                break;\n            case 6:\n                roman_numeral.push_back('vi');\n                break;\n            case 7:\n                roman_numeral.push_back('vii');\n                break;\n            case 8:\n                roman_numeral.push_back('viii');\n                break;\n            case 9:\n                roman_numeral.push_back('ix');\n                break;\n            case 10:\n                roman_numeral.push_back('x');\n                break;\n            case 11:\n                roman_numeral.push_back('xi');\n                break;\n            case 12:\n                roman_numeral.push_back('xii');\n                break;\n            case 13:\n                roman_numeral.push_back('xiii');\n                break;\n            case 14:\n                roman_numeral.push_back('xiv');\n                break;\n            case 15:\n                roman_numeral.push_back('xv');\n                break;\n            case 16:\n                roman_numeral.push_back('xvi');\n                break;\n            case 17:\n                roman_numeral.push_back('xvii');\n                break;\n            case 18:\n                roman_numeral.push_back('xviii');\n                break;\n            case 19:\n                roman_numeral.push_back('xix');\n                break;\n            case 20:\n                roman_numeral.push_back('xx');\n                break;\n            case 30:\n                roman_numeral.push_back('xxx');",
    "    std::string roman;\n    int i = 0;\n    while (number > 0) {\n        int digit = number % 10;\n        number /= 10;\n        switch (digit) {\n            case 9:\n                roman.insert(roman.begin() + i, 'x');\n                break;\n            case 4:\n                roman.insert(roman.begin() + i, 'c');\n                break;\n            case 5:\n                roman.insert(roman.begin() + i, 'd');\n                break;\n            case 6:\n                roman.insert(roman.begin() + i, 'm');\n                break;\n            case 7:\n                roman.insert(roman.begin() + i, 'l');\n                break;\n            case 8:\n                roman.insert(roman.begin() + i, 'x');\n                break;\n            case 3:\n                roman.insert(roman.begin() + i, 'v');\n                break;\n            case 2:\n                roman.insert(roman.begin() + i, 'i');\n                break;\n            case 1:\n                roman.insert(roman.begin() + i, 'x');\n                break;\n            default:\n                break;\n        }\n        i++;\n    }\n    return roman;",
    "    std::string result;\n    if (number == 0) {\n        result = \"\";\n        return result;\n    }\n    if (number < 0) {\n        result = \"\";\n        return result;\n    }\n    if (number > 1000) {\n        result = \"\";\n        return result;\n    }\n    std::string roman_numeral_map[1000] = {\n        \"\", \"i\", \"ii\", \"iii\", \"iv\", \"v\", \"vi\", \"vii\", \"viii\", \"ix\", \"x\", \"xi\", \"xii\", \"xiii\", \"xiv\", \"xv\", \"xvi\", \"xvii\", \"xviii\", \"xix\", \"xx\", \"xxi\", \"xxii\", \"xxiii\", \"xxiv\", \"xxv\", \"xxvi\", \"xxvii\", \"xxviii\", \"xxix\", \"xxx\", \"xxxi\", \"xxxii\", \"xxxiii\", \"xxxiv\", \"xxxv\", \"xxxvi\", \"xxxvii\", \"xxxviii\", \"xxxix\", \"xxxx\", \"xxxxi\", \"xxxxii\", \"xxxxiii\", \"xxxxiv\", \"xxxxv\", \"xxxxvi\", \"xxxxvii\", \"xxxxviii\", \"xxxxix\", \"xxxxx\", \"xxxxxi\", \"xxxxxii\", \"xxxxxiii\", \"xxxxxiv\", \"xxxxxv\", \"xxxxxvi\", \"xxxxxvii\", \"xxxxxviii\", \"xxxxxix\", \"xxxxxx\", \"xxxxxxi\", \"xxxxxxii\", \"xxxxxxiii\", \"xxxxxxiv\", \"xxxxxxv\", \"xxxxxxvi\", \"xxxxxxvii\", \"xxxxxxviii\", \"xxxxxxix\", \"xxxxxxx\"\n    };\n    for (int i = 0; i < number; ++i) {\n        result += roman_numeral_map[number - i];\n    }\n    return result;"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
{
  "name": "HumanEval_39_prime_fib",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nlong prime_fib(long n) {\n",
  "tests": "}\nint main() {\n    auto candidate = prime_fib;\n    assert(candidate((1)) == (2));\n    assert(candidate((2)) == (3));\n    assert(candidate((3)) == (5));\n    assert(candidate((4)) == (13));\n    assert(candidate((5)) == (89));\n    assert(candidate((6)) == (233));\n    assert(candidate((7)) == (1597));\n    assert(candidate((8)) == (28657));\n    assert(candidate((9)) == (514229));\n    assert(candidate((10)) == (433494437));\n}\n",
  "completions": [
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (c < n) {\n        long tmp = c;\n        c = d + e;\n        d = e;\n        e = tmp;\n    }\n    return c;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 2, e = 3;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d + e;\n        d = e;\n        e = t;\n    }\n    return b;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = 1, b = 2, c = 3, d = 5, e = 13, f = 89;\n    while (true) {\n        if (n == 1) return a;\n        if (n == 2) return b;\n        if (n == 3) return c;\n        if (n == 4) return d;\n        if (n == 5) return e;\n        if (n == 6) return f;\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n        e = f;\n        f = t;\n        n -= 1;\n    }",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n - 1);\n    long b = prime_fib(n - 2);\n    long c = prime_fib(n - 3);\n    long p = a + b;\n    long q = a + c;\n    long r = b + c;\n    return (p < q) ? (q < r ? r : p) : (q < r ? r : q);",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long t = c;\n        c = a + b;\n        a = b;\n        b = t;\n        t = d;\n        d = c;\n        c = t;\n    }\n    return c;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n    }\n    return d;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long t = c;\n        c = d + b;\n        d = b;\n        b = t;\n    }\n    return c;",
    "    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = t;\n        c = a + b;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (c < n) {\n        long tmp = d + e;\n        d = e;\n        e = tmp;\n        if (tmp >= n) break;\n        if (is_prime(tmp)) {\n            c++;\n            a = b;\n            b = c;\n            d = e;\n            e = tmp;\n        }\n    }\n    return e;",
    "    assert(n > 0);\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = tmp;\n        c = a + b;\n    }\n    return c;",
    "    if (n < 2) return n;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long t = c;\n        c = d + a;\n        d = b + c;\n        b = t;\n    }\n    return d;",
    "    if (n <= 2) return n;\n    long p = prime_fib(n-1);\n    long q = prime_fib(n-2);\n    return (p+q)*(p+q+1)/2 + q;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n    }\n    return d;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = 1, b = 1, c = 2, d = 3, e = 5, f = 13, g = 89;\n    while (true) {\n        if (n == 1) return a;\n        if (n == 2) return b;\n        if (n == 3) return c;\n        if (n == 4) return d;\n        if (n == 5) return e;\n        if (n == 6) return f;\n        if (n == 7) return g;\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n        e = f;\n        f = g;\n        g = t;\n        n = n + 1;\n    }",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (c < n) {\n        long tmp = c;\n        c = d + e;\n        d = e;\n        e = tmp;\n        if (c >= n) break;\n        a = b;\n        b = c;\n        c = d + e;\n        d = e;\n        e = tmp;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n - 1);\n    long b = prime_fib(n - 2);\n    long c = prime_fib(n - 3);\n    long p = a + b;\n    long q = a + c;\n    long r = b + c;\n    if (p < q) {\n        p = q;\n        q = r;\n        r = p;\n    }\n    if (q < r) {\n        q = r;\n        r = p;\n        p = q;\n    }\n    return p;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (true) {\n        long next = a + b;\n        if (next > c) {\n            c = next;\n            d = a;\n            a = b;\n            b = c;\n        }\n        if (next > d) {\n            d = next;\n        }\n        if (next > n) {\n            return n;\n        }\n        if (next > b) {\n            b = next;\n        }\n        if (next > a) {\n            a = next;\n        }\n    }",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = tmp;\n    }\n    return d;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2, d = 0, e = 0;\n    while (c < n) {\n        d = a + b;\n        e = c + d;\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n    }\n    return e;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2, d = 0;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = t;\n        d = 0;\n        while (t < n) {\n            t = a + b;\n            a = b;\n            b = t;\n            if (is_prime(t)) d++;\n        }\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (c < n) {\n        long tmp = c;\n        c = d + e;\n        d = e;\n        e = tmp;\n        if (c >= n) break;\n        a = b;\n        b = c;\n        c = d + e;\n        d = e;\n        e = tmp;\n    }\n    return b;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2, d = 2, e = 3;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d + e;\n        d = e;\n        e = t;\n    }\n    return e;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2, d = 0;\n    while (c < n) {\n        d = a + b;\n        a = b;\n        b = c;\n        c = d;\n    }\n    return d;",
    "    long a = 1, b = 1, c = 2, d = 0;\n    while (c < n) {\n        d = a + b;\n        a = b;\n        b = c;\n        c = d;\n    }\n    return d;",
    "    if (n <= 1) return n;\n    long a = 1, b = 1, c = 2, d = 0;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = c;\n        c = tmp;\n        if (is_prime(c)) d = c;\n    }\n    return d;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n-1);\n    long b = prime_fib(n-2);\n    long c = prime_fib(n-3);\n    long p = a + b;\n    long q = a + c;\n    long r = b + c;\n    long s = p + q;\n    long t = p + r;\n    long u = q + r;\n    long v = p + s;\n    long w = q + s;\n    long x = r + s;\n    long y = p + t;\n    long z = q + t;\n    long A = u + v;\n    long B = u + w;\n    long C = v + w;\n    long D = u + x;\n    long E = v + x;\n    long F = w + x;\n    long G = u + y;\n    long H = v + y;\n    long I = w + y;\n    long J = u + z;\n    long K = v + z;\n    long L = w + z;\n    long M = u + A;\n    long N = v + A;\n    long O = w + A;\n    long P = u + B;\n    long Q = v + B;\n    long R = w + B;\n    long S = u + C;\n    long T = v + C;\n    long U = w + C;\n    long V = u + D;\n    long W = v + D;\n    long X = w + D;\n    long Y = u + E;\n    long Z = v + E;\n    long AA = w + E;\n    long AB = u + F;\n    long AC = v + F;\n    long AD = w + F;\n    long AE = u + G;\n    long AF = v + G;\n    long AG = w + G;\n    long AH = u + H;\n    long AI = v + H;\n    ",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = tmp;\n    }\n    return d;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2, d = 0;\n    while (c < n) {\n        d = a + b;\n        a = b;\n        b = c;\n        c = d;\n    }\n    return d;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long p = prime_fib(n - 1) + prime_fib(n - 2);\n    while (p % 2 == 0) p /= 2;\n    while (p % 3 == 0) p /= 3;\n    while (p % 5 == 0) p /= 5;\n    return p;",
    "    assert(n >= 0);\n    if (n == 0) return 0;\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 2, c = 3;\n    while (n > 3) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = t;\n        n -= 1;\n    }\n    return c;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n    }\n    return d;",
    "    long a = 1, b = 1, c = 0;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = t;\n        c++;\n    }\n    return b;",
    "    assert(n > 0);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (true) {\n        if (n == c) return c;\n        if (n == d) return d;\n        if (n == e) return e;\n        long tmp = a + b;\n        a = b;\n        b = tmp;\n        tmp = c + d;\n        c = d;\n        d = tmp;\n        tmp = e + a;\n        e = a;\n        a = tmp;\n        ++n;\n    }",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (n > 3) {\n        if (n % 2 == 0) {\n            n /= 2;\n            c = a + b;\n            a = b;\n            b = c;\n        } else {\n            n--;\n            d = a + b;\n            a = b;\n            b = d;\n        }\n    }\n    return c;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2, d = 0;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = tmp;\n        if (tmp % 2 == 0) {\n            d = tmp;\n            break;\n        }\n        c++;\n    }\n    return d;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = 1, b = 2, c = 3, d = 5, e = 13, f = 89, g = 0;\n    while (true) {\n        if (n == 1) return a;\n        if (n == 2) return b;\n        if (n == 3) return c;\n        if (n == 4) return d;\n        if (n == 5) return e;\n        if (n == 6) return f;\n        if (n == 7) return g;\n        if (n == 8) return a + b;\n        if (n == 9) return a + c;\n        if (n == 10) return a + d;\n        if (n == 11) return a + e;\n        if (n == 12) return a + f;\n        if (n == 13) return a + g;\n        if (n == 14) return b + c;\n        if (n == 15) return b + d;\n        if (n == 16) return b + e;\n        if (n == 17) return b + f;\n        if (n == 18) return b + g;\n        if (n == 19) return c + d;\n        if (n == 20) return c + e;\n        if (n == 21) return c + f;\n        if (n == 22) return c + g;\n        if (n == 23) return d + e;\n        if (n == 24) return d + f;\n        if (n == 25) return d + g;\n        if (n == 26) return e + f;\n        if (n == 27) return e + g;\n        if (n == 28) return f + g;\n        if (n == 29) return a + b + c;\n        if (n == 30) return a + b + d;\n        if (n == 31) return a + b + e;\n        if (n == 32) return a + b + f;\n        if (n == 33) return a",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = 1, b = 1, c = 2, d = 3, e = 5, f = 13, g = 89;\n    while (true) {\n        long next = a + b;\n        if (next > c) {\n            a = b;\n            b = c;\n            c = next;\n        }\n        else {\n            a = b;\n            b = next;\n        }\n        next = a + b;\n        if (next > d) {\n            a = b;\n            b = d;\n            d = next;\n        }\n        else {\n            a = b;\n            b = next;\n        }\n        next = a + b;\n        if (next > e) {\n            a = b;\n            b = e;\n            e = next;\n        }\n        else {\n            a = b;\n            b = next;\n        }\n        next = a + b;\n        if (next > f) {\n            a = b;\n            b = f;\n            f = next;\n        }\n        else {\n            a = b;\n            b = next;\n        }\n        next = a + b;\n        if (next > g) {\n            a = b;\n            b = g;\n            g = next;\n        }\n        else {\n            a = b;\n            b = next;\n        }\n        if (next == n) return next;\n    }",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n    }\n    return d;",
    "    if (n < 2) return n;\n    long a = 1, b = 2, c = 1, d = 1, e = 1, f = 1, g = 1, h = 1, i = 1, j = 1, k = 1, l = 1, m = 1, n1 = 1, n2 = 1, p = 1, q = 1, r = 1, s = 1, t = 1, u = 1, v = 1, w = 1, x = 1, y = 1, z = 1;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            n /= 2;\n            a = a + b;\n            b = a - b;\n            a = a - b;\n        } else if (n % 3 == 0) {\n            n /= 3;\n            c = c + d;\n            d = c - d;\n            c = c - d;\n        } else if (n % 5 == 0) {\n            n /= 5;\n            e = e + f;\n            f = e - f;\n            e = e - f;\n        } else if (n % 7 == 0) {\n            n /= 7;\n            g = g + h;\n            h = g - h;\n            g = g - h;\n        } else if (n % 11 == 0) {\n            n /= 11;\n            i = i + j;\n            j = i - j;\n            i = i - j;\n        } else if (n % 13 == 0) {\n            n /= 13;\n            k = k + l;\n            l = k - l;\n            k = k - l;\n        } else if (n % 17 == 0) {\n            n /= 17;\n            m = m + n1;\n            n1 = m - n1;\n            m = m - n1;\n        } else if (n % 19 == 0) {\n            n /= 19;\n            n2 = n2 + p;\n            p = n2 - p;\n            n2 = n2 - p;\n        } else if (n % 23 == 0) {\n            n /= 23;\n            q = q",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long t = c;\n        c = a + b;\n        a = b;\n        b = t;\n        t = d;\n        d = c - d;\n        c = d + t;\n        d = t;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (c < n) {\n        long tmp = c;\n        c = d + e;\n        d = e;\n        e = tmp;\n        if (c < n) {\n            tmp = c;\n            c = d + e;\n            d = e;\n            e = tmp;\n        }\n    }\n    return c;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = tmp;\n    }\n    return d;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = prime_fib(n - 1);\n    long b = prime_fib(n - 2);\n    long c = prime_fib(n - 3);\n    long p = a + b;\n    long q = a + c;\n    long r = b + c;\n    return (p < q) ? (q < r ? r : p) : (q < r ? r : q);",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n - 1);\n    long b = prime_fib(n - 2);\n    long c = prime_fib(n - 3);\n    long d = prime_fib(n - 4);\n    long e = prime_fib(n - 5);\n    long f = prime_fib(n - 6);\n    long g = prime_fib(n - 7);\n    long h = prime_fib(n - 8);\n    long i = prime_fib(n - 9);\n    long j = prime_fib(n - 10);\n    long k = prime_fib(n - 11);\n    long l = prime_fib(n - 12);\n    long m = prime_fib(n - 13);\n    long n = prime_fib(n - 14);\n    long o = prime_fib(n - 15);\n    long p = prime_fib(n - 16);\n    long q = prime_fib(n - 17);\n    long r = prime_fib(n - 18);\n    long s = prime_fib(n - 19);\n    long t = prime_fib(n - 20);\n    long u = prime_fib(n - 21);\n    long v = prime_fib(n - 22);\n    long w = prime_fib(n - 23);\n    long x = prime_fib(n - 24);\n    long y = prime_fib(n - 25);\n    long z = prime_fib(n - 26);\n    long A = prime_fib(n - 27);\n    long B = prime_fib(n - 28);\n    long C = prime_fib(n - 29);\n    long D = prime_fib(n - 30);\n    long E = prime_fib(n - 31);\n    long F = prime_fib(n - 32);\n    long G = prime_fib(",
    "    long a = 1, b = 1, c = 0, d = 0;\n    while (c < n) {\n        long temp = a + b;\n        a = b;\n        b = temp;\n        if (temp % 2 == 0) {\n            d = temp;\n            break;\n        }\n        c++;\n    }\n    return d;",
    "    assert(n > 0);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n - 1);\n    long b = prime_fib(n - 2);\n    long c = prime_fib(n - 3);\n    long p = a + b;\n    while (p < c) {\n        a = b;\n        b = c;\n        c = p;\n        p = a + b;\n    }\n    return p;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2, d = 0;\n    while (c < n) {\n        d = a + b;\n        a = b;\n        b = c;\n        c = d;\n    }\n    return d;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n - 1);\n    long b = prime_fib(n - 2);\n    long c = prime_fib(n - 3);\n    long p = a + b;\n    long q = a + c;\n    long r = b + c;\n    return (p < q) ? (q < r ? r : p) : (q < r ? r : q);",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5, f = 7, g = 11, h = 13, i = 17, j = 19, k = 23, l = 29, m = 31, n1 = 37, n2 = 41, n3 = 43, n4 = 47, n5 = 53, n6 = 59, n7 = 61, n8 = 67, n9 = 71, n10 = 73, n11 = 79, n12 = 83, n13 = 89;\n    while (true) {\n        if (n % 2 == 0) {\n            n /= 2;\n            a = (a + b) % m;\n            b = (b + c) % m;\n            c = (c + d) % m;\n            d = (d + e) % m;\n            e = (e + f) % m;\n            f = (f + g) % m;\n            g = (g + h) % m;\n            h = (h + i) % m;\n            i = (i + j) % m;\n            j = (j + k) % m;\n            k = (k + l) % m;\n            l = (l + m) % m;\n            m = (m + n1) % m;\n            n1 = (n1 + n2) % m;\n            n2 = (n2 + n3) % m;\n            n3 = (n3 + n4) % m;\n            n4 = (n4 + n5) % m;\n            n5 = (n5 + n6) % m;\n            n6 = (n6 + n7) % m;\n            n7 = (n7 + n8) % m;\n            n8 = (n8 + n9) % m;\n            n9 = (n9 + n10) % m;\n            n10 = (n10 + n11) % m;\n            n11 = (n11 + n12) % m;\n            n12 =",
    "    long a = 1, b = 1, c = 0, d = 0;\n    while (c < n) {\n        long temp = a + b;\n        a = b;\n        b = temp;\n        if (is_prime(temp)) {\n            c++;\n        }\n    }\n    return b;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (c < n) {\n        long tmp = c;\n        c = d + e;\n        d = e;\n        e = tmp;\n        if (c < n) {\n            tmp = c;\n            c = d + e;\n            d = e;\n            e = tmp;\n        }\n    }\n    return c;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (n--) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n    }\n    return d;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = tmp;\n        c = a + b;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (true) {\n        if (n == 1) return c;\n        if (n == 2) return d;\n        if (n == 3) return e;\n        long tmp = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n        e = tmp;\n        n--;\n    }",
    "    if (n < 2) return n;\n    long a = 1, b = 2, c = 1, d = 1, e = 1, f = 1, g = 1, h = 1, i = 1, j = 1, k = 1, l = 1, m = 1, n1 = 1, n2 = 1, p = 1, q = 1, r = 1, s = 1, t = 1, u = 1, v = 1, w = 1, x = 1, y = 1, z = 1, A = 1, B = 1, C = 1, D = 1, E = 1, F = 1, G = 1, H = 1, I = 1, J = 1, K = 1, L = 1, M = 1, N = 1, O = 1, P = 1, Q = 1, R = 1, S = 1, T = 1, U = 1, V = 1, W = 1, X = 1, Y = 1, Z = 1, AA = 1, AB = 1, AC = 1, AD = 1, AE = 1, AF = 1, AG = 1, AH = 1, AI = 1, AJ = 1, AK = 1, AL = 1, AM = 1, AN = 1, AO = 1, AP = 1, AQ = 1, AR = 1, AS = 1, AT = 1, AU = 1, AV = 1, AW = 1, AX = 1, AY = 1, AZ = 1, BA = 1, BB = 1, BC = 1, BD = 1, BE = 1, BF = 1, BG = 1, BH = 1, BI = 1, BJ = 1, BK = 1, BL = 1, BM = 1, BN = 1, BO = 1, BP = 1, BQ = 1, BR = 1, BS = 1, BT = 1, BU = 1, BV = 1, BW = 1, BX = 1, BY = 1, BZ = 1, CA = 1, CB = 1, CC = 1, CD = 1, CE = 1, CF = 1, CG = 1, CH = 1, CI = 1, CJ = 1, CK = 1, CL = 1, CM = 1, CN = 1, CO = 1, CP = 1, CQ = 1, CR = 1",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 2, e = 3, f = 3, g = 5, h = 5, i = 13, j = 13, k = 89, l = 89;\n    while (true) {\n        if (n == 1) return a;\n        if (n == 2) return b;\n        if (n == 3) return c;\n        if (n == 4) return d;\n        if (n == 5) return e;\n        if (n == 6) return f;\n        if (n == 7) return g;\n        if (n == 8) return h;\n        if (n == 9) return i;\n        if (n == 10) return j;\n        if (n == 11) return k;\n        if (n == 12) return l;\n        if (n % 2 == 0) {\n            a = b;\n            b = c;\n            c = d;\n            d = e;\n            e = f;\n            f = g;\n            g = h;\n            h = i;\n            i = j;\n            j = k;\n            k = l;\n            l = a;\n            n -= 2;\n        } else {\n            a = b;\n            b = c;\n            c = d;\n            d = e;\n            e = f;\n            f = g;\n            g = h;\n            h = i;\n            i = j;\n            j = k;\n            k = l;\n            l = a;\n            n -= 1;\n        }\n    }",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n - 1);\n    long b = prime_fib(n - 2);\n    long c = prime_fib(n - 3);\n    long p = a + b;\n    long q = a + c;\n    long r = b + c;\n    long s = p + q;\n    long t = p + r;\n    long u = q + r;\n    long v = p + s;\n    long w = q + s;\n    long x = r + s;\n    long y = p + t;\n    long z = q + t;\n    long A = u + v;\n    long B = u + w;\n    long C = v + w;\n    long D = u + x;\n    long E = v + x;\n    long F = w + x;\n    long G = u + y;\n    long H = v + y;\n    long I = w + y;\n    long J = u + z;\n    long K = v + z;\n    long L = w + z;\n    long M = u + A;\n    long N = v + A;\n    long O = w + A;\n    long P = u + B;\n    long Q = v + B;\n    long R = w + B;\n    long S = u + C;\n    long T = v + C;\n    long U = w + C;\n    long V = u + D;\n    long W = v + D;\n    long X = w + D;\n    long Y = u + E;\n    long Z = v + E;\n    long AA = w + E;\n    long AB = u + F;\n    long AC = v + F;\n    long AD = w + F;\n    long AE = u + G;\n    long AF = v + G;\n    long AG = w + G;\n    long AH = u + H;\n    long AI = v + H;\n    ",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n - 1);\n    long b = prime_fib(n - 2);\n    long c = prime_fib(n - 3);\n    long p = a + b;\n    long q = a + c;\n    long r = b + c;\n    long s = p + q;\n    long t = p + r;\n    long u = q + r;\n    long v = s + t;\n    long w = s + u;\n    long x = t + u;\n    long y = v + x;\n    long z = v + w;\n    long result = z + y;\n    return result;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = 1, b = 1, c = 2, d = 3, e = 5, f = 13, g = 89;\n    while (true) {\n        if (n == 1) return a;\n        if (n == 2) return b;\n        if (n == 3) return c;\n        if (n == 4) return d;\n        if (n == 5) return e;\n        if (n == 6) return f;\n        if (n == 7) return g;\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n        e = f;\n        f = g;\n        g = (a + b) % 1000000007;\n        n = n + 1;\n    }",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n - 1);\n    long b = prime_fib(n - 2);\n    long c = prime_fib(n - 3);\n    long p = a + b;\n    long q = a + c;\n    long r = b + c;\n    long s = p + q;\n    long t = p + r;\n    long u = q + r;\n    long v = s + t;\n    long w = s + u;\n    long x = t + u;\n    long y = v + x;\n    long z = v + w;\n    long result = z + y;\n    return result;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2, d = 0, e = 0;\n    while (c < n) {\n        d = a + b;\n        a = b;\n        b = c;\n        c = d;\n        if (is_prime(c)) e = c;\n    }\n    return e;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n - 1);\n    long b = prime_fib(n - 2);\n    long c = prime_fib(n - 3);\n    long d = prime_fib(n - 4);\n    long e = prime_fib(n - 5);\n    long f = prime_fib(n - 6);\n    long g = prime_fib(n - 7);\n    long h = prime_fib(n - 8);\n    long i = prime_fib(n - 9);\n    long j = prime_fib(n - 10);\n    long k = prime_fib(n - 11);\n    long l = prime_fib(n - 12);\n    long m = prime_fib(n - 13);\n    long n = prime_fib(n - 14);\n    long o = prime_fib(n - 15);\n    long p = prime_fib(n - 16);\n    long q = prime_fib(n - 17);\n    long r = prime_fib(n - 18);\n    long s = prime_fib(n - 19);\n    long t = prime_fib(n - 20);\n    long u = prime_fib(n - 21);\n    long v = prime_fib(n - 22);\n    long w = prime_fib(n - 23);\n    long x = prime_fib(n - 24);\n    long y = prime_fib(n - 25);\n    long z = prime_fib(n - 26);\n    long w = prime_fib(n - 27);\n    long x = prime_fib(n - 28);\n    long y = prime_fib(n - 29);\n    long z = prime_fib(n - 30);\n    long w = prime_fib(n - 31);\n    long x = prime_fib(n - 32);\n    long y = prime_fib(",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (n > 4) {\n        long tmp = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n        e = tmp;\n        --n;\n    }\n    return e;",
    "    if (n <= 1) return n;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = t;\n        c = a + b;\n    }\n    return c;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = tmp;\n        c = a + b;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n-1);\n    long b = prime_fib(n-2);\n    long c = prime_fib(n-3);\n    long p = a + b;\n    long q = a + c;\n    long r = b + c;\n    long s = p + q;\n    long t = p + r;\n    long u = q + r;\n    long v = s + t;\n    long w = s + u;\n    long x = t + u;\n    long y = v + x;\n    long z = v + w;\n    long result = z + y;\n    return result;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (true) {\n        if (n == 1) return a;\n        if (n == 2) return b;\n        if (n == 3) return c;\n        if (n == 4) return d;\n        if (n == 5) return e;\n        long f = a + b, g = c + d, h = e + f;\n        a = b; b = c; c = d; d = e; e = h;\n        n -= 1;\n    }",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = t;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = tmp;\n    }\n    return d;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n    }\n    return d;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long t = c;\n        c = a + b;\n        a = b;\n        b = t;\n        t = d;\n        d = c - d;\n        c = d + t;\n        d = t;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 2, e = 3, f = 3, g = 5, h = 5, i = 7, j = 7, k = 11, l = 11, m = 13, n1 = 13, n2 = 89;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            n /= 2;\n            a = b;\n            b = c;\n            c = d;\n            d = e;\n            e = f;\n            f = g;\n            g = h;\n            h = i;\n            i = j;\n            j = k;\n            k = l;\n            l = m;\n            m = n1;\n            n1 = n2;\n            n2 = n;\n        } else {\n            n1 = n2;\n            n2 = n;\n            n = n1;\n        }\n    }\n    return a;",
    "    long a = 1, b = 1, c = 2, d = 0;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = tmp;\n        if (tmp % 2 == 0) {\n            d = d + 1;\n        }\n        if (tmp % 3 == 0) {\n            d = d + 1;\n        }\n        c = c + 1;\n    }\n    return b;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2, d = 0;\n    while (c < n) {\n        long tmp = c;\n        c += b;\n        b += d;\n        d = tmp;\n    }\n    return c;",
    "    long a = 1, b = 1, c = 0;\n    while (c < n) {\n        long temp = a + b;\n        a = b;\n        b = temp;\n        c++;\n    }\n    return b;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = 1, b = 2, c = 3, d = 5, e = 13, f = 89, p = 0, q = 0;\n    while (true) {\n        p = a + b;\n        q = c + d;\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n        e = f;\n        f = p + q;\n        if (f >= n) break;\n        if (f % 2 == 0) continue;\n        if (f % 3 == 0) continue;\n        if (f % 5 == 0) continue;\n        if (f % 7 == 0) continue;\n        if (f % 11 == 0) continue;\n        if (f % 13 == 0) continue;\n        if (f % 17 == 0) continue;\n        if (f % 19 == 0) continue;\n        if (f % 23 == 0) continue;\n        if (f % 29 == 0) continue;\n        if (f % 31 == 0) continue;\n        if (f % 37 == 0) continue;\n        if (f % 41 == 0) continue;\n        if (f % 43 == 0) continue;\n        if (f % 47 == 0) continue;\n        if (f % 53 == 0) continue;\n        if (f % 59 == 0) continue;\n        if (f % 61 == 0) continue;\n        if (f % 67 == 0) continue;\n        if (f % 71 == 0) continue;\n        if (f % 73 == 0) continue;\n        if (f % 79 == 0) continue;\n        if (f % 83 == 0) continue;\n        if (f % 89 == 0) continue;\n        if (f % 97 == 0) continue;\n        if (f % 101 == 0) continue;\n        if (f % 103 == 0) continue;\n        if (f % 107 == 0) continue;\n        if (f % 109 == 0) continue;\n        if (",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = t;\n    }\n    return c;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 2, c = 3, d = 5;\n    while (n > 4) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n        n -= 4;\n    }\n    while (n > 1) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n        n -= 2;\n    }\n    return d;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (true) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n        if (t >= n) return d;\n        if (is_prime(t)) {\n            d = t;\n            continue;\n        }\n        long t2 = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t2;\n        if (is_prime(t2)) {\n            d = t2;\n            continue;\n        }\n        long t3 = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t3;\n        if (is_prime(t3)) {\n            d = t3;\n            continue;\n        }\n        long t4 = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t4;\n        if (is_prime(t4)) {\n            d = t4;\n            continue;\n        }\n        long t5 = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t5;\n        if (is_prime(t5)) {\n            d = t5;\n            continue;\n        }\n        long t6 = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t6;\n        if (is_prime(t6)) {\n            d = t6;\n            continue;\n        }\n        long t7 = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t7;\n        if (is_prime(t7)) {\n            d = t7;\n            continue;\n        }\n        long t8 = a + b;\n        a = b;\n        b = c;\n",
    "    assert(n > 0);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long t = c;\n        c = d + b;\n        d = b;\n        b = t;\n    }\n    return c;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n    }\n    return d;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = tmp;\n        tmp = c + d;\n        c = d;\n        d = tmp;\n    }\n    return d;",
    "    long a = 1, b = 1, c = 0;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = t;\n        c++;\n    }\n    return b;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = prime_fib(n-1);\n    long b = prime_fib(n-2);\n    long c = prime_fib(n-3);\n    long p = a + b;\n    long q = a + c;\n    long r = b + c;\n    long s = p + q;\n    long t = p + r;\n    long u = q + r;\n    long v = p + s;\n    long w = q + s;\n    long x = r + s;\n    long y = p + t;\n    long z = q + t;\n    long A = u + v;\n    long B = u + w;\n    long C = v + w;\n    long D = u + x;\n    long E = v + x;\n    long F = w + x;\n    long G = u + y;\n    long H = v + y;\n    long I = w + y;\n    long J = u + z;\n    long K = v + z;\n    long L = w + z;\n    long M = u + A;\n    long N = v + A;\n    long O = w + A;\n    long P = u + B;\n    long Q = v + B;\n    long R = w + B;\n    long S = u + C;\n    long T = v + C;\n    long U = w + C;\n    long V = u + D;\n    long W = v + D;\n    long X = w + D;\n    long Y = u + E;\n    long Z = v + E;\n    long AA = w + E;\n    long AB = u + F;\n    long AC = v + F;\n    long AD = w + F;\n    long AE = u + G;\n    long AF = v + G;\n    long AG = w + G;\n    long AH = u + H;\n    long AI = v + H;\n    long AJ = w + H;\n    long AK = u + I;\n    long AL = v",
    "    assert(n >= 0);\n    if (n == 0) return 0;\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n - 1);\n    long b = prime_fib(n - 2);\n    long c = prime_fib(n - 3);\n    long p = a + b;\n    long q = a + c;\n    long r = b + c;\n    long s = p + q;\n    long t = p + r;\n    long u = q + r;\n    long v = s + t;\n    long w = s + u;\n    long x = t + u;\n    long y = v + x;\n    long z = v + w;\n    long result = z + y;\n    return result;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (true) {\n        long next = a + b;\n        if (next > n) break;\n        a = b; b = c; c = d; d = e; e = next;\n    }\n    return n;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = 1, b = 2, c = 3, d = 5, e = 13, f = 89;\n    while (n > 6) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n        e = f;\n        f = t;\n        --n;\n    }\n    return f;",
    "    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = tmp;\n        c = a + b;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n - 1);\n    long b = prime_fib(n - 2);\n    long c = prime_fib(n - 3);\n    long d = prime_fib(n - 4);\n    long e = prime_fib(n - 5);\n    long f = prime_fib(n - 6);\n    long g = prime_fib(n - 7);\n    long h = prime_fib(n - 8);\n    long i = prime_fib(n - 9);\n    long j = prime_fib(n - 10);\n    long k = prime_fib(n - 11);\n    long l = prime_fib(n - 12);\n    long m = prime_fib(n - 13);\n    long n = prime_fib(n - 14);\n    long o = prime_fib(n - 15);\n    long p = prime_fib(n - 16);\n    long q = prime_fib(n - 17);\n    long r = prime_fib(n - 18);\n    long s = prime_fib(n - 19);\n    long t = prime_fib(n - 20);\n    long u = prime_fib(n - 21);\n    long v = prime_fib(n - 22);\n    long w = prime_fib(n - 23);\n    long x = prime_fib(n - 24);\n    long y = prime_fib(n - 25);\n    long z = prime_fib(n - 26);\n    long A = prime_fib(n - 27);\n    long B = prime_fib(n - 28);\n    long C = prime_fib(n - 29);\n    long D = prime_fib(n - 30);\n    long E = prime_fib(n - 31);\n    long F = prime_fib(n - 32);\n    long G = prime_fib(",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = tmp;\n        c = a + b;\n    }\n    return c;",
    "    assert(n > 0);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (true) {\n        long next = a + b;\n        if (next > c) {\n            c = next;\n            d = e;\n            e = next;\n        }\n        if (next > d) {\n            d = next;\n            e = next;\n        }\n        if (next > e) {\n            e = next;\n        }\n        if (next > n) {\n            return n;\n        }\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n    }",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 2, e = 3;\n    while (c < n) {\n        long tmp = e;\n        e = d + c;\n        d = c;\n        c = tmp;\n        tmp = b;\n        b = a;\n        a = d + b;\n    }\n    return a;",
    "    long a = 1, b = 1, c = 2, d = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            n /= 2;\n            d = c;\n            c = b;\n            b = a + b;\n        } else {\n            n--;\n            d = c;\n            c = b;\n            b = a + b;\n        }\n        a = d;\n    }\n    return b;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5, f = 8, g = 13, h = 21, i = 34, j = 55, k = 89;\n    while (true) {\n        if (n == 1) return c;\n        if (n == 2) return d;\n        if (n == 3) return e;\n        if (n == 4) return f;\n        if (n == 5) return g;\n        if (n == 6) return h;\n        if (n == 7) return i;\n        if (n == 8) return j;\n        if (n == 9) return k;\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n        e = f;\n        f = g;\n        g = h;\n        h = i;\n        i = j;\n        j = k;\n        k = t;\n        n -= 1;\n    }",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = t;\n        c = a + b;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (true) {\n        if (n == 1) return a;\n        if (n == 2) return b;\n        if (n == 3) return c;\n        if (n == 4) return d;\n        if (n == 5) return e;\n        long f = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n        e = f;\n        n--;\n    }",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = t;\n        c = a + b;\n    }\n    return c;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 2, e = 3;\n    while (true) {\n        long next = a + b;\n        if (next > c) {\n            c = next;\n            d = e;\n            e = next;\n        }\n        next = a + c;\n        if (next > b) {\n            b = next;\n            a = d;\n            d = e;\n            e = next;\n        }\n        next = b + c;\n        if (next > a) {\n            a = next;\n            b = d;\n            d = e;\n            e = next;\n        }\n        next = a + d;\n        if (next > b) {\n            b = next;\n            a = c;\n            c = e;\n            e = next;\n        }\n        next = b + d;\n        if (next > a) {\n            a = next;\n            b = c;\n            c = e;\n            e = next;\n        }\n        next = a + e;\n        if (next > b) {\n            b = next;\n            a = d;\n            d = c;\n            c = e;\n        }\n        next = b + e;\n        if (next > a) {\n            a = next;\n            b = d;\n            d = c;\n            c = e;\n        }\n        next = a + c;\n        if (next > b) {\n            b = next;\n            a = e;\n            e = d;\n            d = c;\n        }\n        next = b + c;\n        if (next > a) {\n            a = next;\n            b = e;\n            e = d;\n            d = c;\n        }\n        next = a + d;\n        if (next > b) {\n            b = next;\n            a = c;\n            c = e;\n            e = d;\n        }\n        next = b + d;\n        if (next > a) {\n",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    long p = prime_fib(n-1);\n    long q = prime_fib(n-2);\n    return (p + q) * (p + q + 1) / 2;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (n > 3) {\n        if (n % 2 == 0) {\n            n /= 2;\n            a = b;\n            b = c;\n            c = d;\n            d = a + b;\n        } else {\n            n--;\n            a = b;\n            b = c;\n            c = d;\n            d = a + b;\n        }\n    }\n    return d;",
    "    assert(n >= 0);\n    if (n == 0) return 0;\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n    }\n    return d;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = tmp;\n        c = a + b;\n    }\n    return c;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2, d = 2;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = tmp;\n    }\n    return d;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (n > 4) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n        --n;\n    }\n    return d;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n - 1);\n    long b = prime_fib(n - 2);\n    long c = prime_fib(n - 3);\n    long p = a + b;\n    long q = a + c;\n    long r = b + c;\n    long s = p + q;\n    long t = p + r;\n    long u = q + r;\n    long v = p + s;\n    long w = q + s;\n    long x = r + s;\n    long y = p + t;\n    long z = q + t;\n    long A = p * p;\n    long B = q * q;\n    long C = r * r;\n    long D = s * s;\n    long E = t * t;\n    long F = u * u;\n    long G = v * v;\n    long H = w * w;\n    long I = x * x;\n    long J = y * y;\n    long K = z * z;\n    long L = A * A;\n    long M = B * B;\n    long N = C * C;\n    long O = D * D;\n    long P = E * E;\n    long Q = F * F;\n    long R = G * G;\n    long S = H * H;\n    long T = I * I;\n    long U = J * J;\n    long V = K * K;\n    long W = L * L;\n    long X = M * M;\n    long Y = N * N;\n    long Z = O * O;\n    long aa = A * A;\n    long ab = A * B;\n    long ac = A * C;\n    long ad = A * D;\n    long ae = A * E;\n    long af = A * F;\n    long ag = A * G;\n    long ah = A * H;\n",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (true) {\n        if (n == 1) return a;\n        if (n == 2) return b;\n        if (n == 3) return c;\n        if (n == 4) return d;\n        if (n == 5) return e;\n        a = b; b = c; c = d; d = e; e = a + b;\n        n--;\n    }",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long tmp = c;\n        c = d + b;\n        d = b;\n        b = tmp;\n    }\n    return c;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (true) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n        if (d >= n) return d;\n        if (is_prime(d)) {\n            ++d;\n            continue;\n        }\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n        if (is_prime(d)) {\n            ++d;\n            continue;\n        }\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n        if (is_prime(d)) {\n            ++d;\n            continue;\n        }\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n        if (is_prime(d)) {\n            ++d;\n            continue;\n        }\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n        if (is_prime(d)) {\n            ++d;\n            continue;\n        }\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n        if (is_prime(d)) {\n            ++d;\n            continue;\n        }\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n        if (is_prime(d)) {\n            ++d;\n            continue;\n        }\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n        if (is_prime(d)) {\n            ++d;\n            continue;\n",
    "    long a = 1, b = 1, c = 2, d = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            n /= 2;\n            d = a + b;\n            a = b;\n            b = d;\n        } else {\n            n--;\n            c = a + b;\n            a = b;\n            b = c;\n        }\n    }\n    return b;",
    "    long a = 1, b = 1, c = 2, d = 0;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = t;\n        d = d + 1;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 2, e = 3, f = 3, g = 5, h = 5, i = 7, j = 7, k = 13, l = 13, m = 89, n1 = 89, n2 = 89, p = 89;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            n /= 2;\n            a = b;\n            b = c;\n            c = d;\n            d = e;\n            e = f;\n            f = g;\n            g = h;\n            h = i;\n            i = j;\n            j = k;\n            k = l;\n            l = m;\n            m = n1;\n            n1 = n2;\n            n2 = p;\n            p = a + b;\n        } else {\n            n1 = n2;\n            n2 = p;\n            p = a + b;\n            a = b;\n            b = c;\n            c = d;\n            d = e;\n            e = f;\n            f = g;\n            g = h;\n            h = i;\n            i = j;\n            j = k;\n            k = l;\n            l = m;\n            m = n1;\n        }\n    }\n    return p;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = t;\n    }\n    return c;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (n > 3) {\n        c = a + b;\n        a = b;\n        b = c;\n        d = a + b;\n        a = b;\n        b = d;\n        n -= 4;\n    }\n    return d;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (true) {\n        if (n == 1) return a;\n        if (n == 2) return b;\n        if (n == 3) return c;\n        if (n == 4) return d;\n        if (n == 5) return e;\n        long tmp = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n        e = tmp;\n        n -= 1;\n    }",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5, f = 1, g = 2, h = 3, i = 5, j = 1, k = 2, l = 3, m = 5, n1 = 1, n2 = 2, n3 = 3, n4 = 5, n5 = 1, n6 = 2, n7 = 3, n8 = 5, n9 = 1, n10 = 2, n11 = 3, n12 = 5, n13 = 1, n14 = 2, n15 = 3, n16 = 5, n17 = 1, n18 = 2, n19 = 3, n20 = 5, n21 = 1, n22 = 2, n23 = 3, n24 = 5, n25 = 1, n26 = 2, n27 = 3, n28 = 5, n29 = 1, n30 = 2, n31 = 3, n32 = 5, n33 = 1, n34 = 2, n35 = 3, n36 = 5, n37 = 1, n38 = 2, n39 = 3, n40 = 5, n41 = 1, n42 = 2, n43 = 3, n44 = 5, n45 = 1, n46 = 2, n47 = 3, n48 = 5, n49 = 1, n50 = 2, n51 = 3, n52 = 5, n53 = 1, n54 = 2, n55 = 3, n56 = 5, n57 = 1, n58 = 2, n59 = 3, n60 = 5, n61 = 1, n62 = 2, n63 = 3, n64 = 5, n65 = 1, n66 = 2, n67 = 3, n68 = 5, n69 = 1, n70 = 2, n71 = 3, n72 = 5, n73 = 1, n74 = 2, n75 = 3, n76 = 5, n77 = 1, n78 = 2, n79 = 3, n80 = 5, n81 = 1, n82 = 2, n83 = 3, n84 = 5, n85 = 1,",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2, d = 2, e = 3;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d + e;\n        d = e;\n        e = t;\n    }\n    return e;",
    "    long a = 1, b = 1, c = 2, d = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            n /= 2;\n            d = c;\n            c = b;\n            b = a + b;\n        } else {\n            n--;\n            d = c;\n            c = b;\n            b = a + b;\n        }\n        a = d;\n    }\n    return b;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = t;\n        c = a + b;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n-1);\n    long b = prime_fib(n-2);\n    long c = prime_fib(n-3);\n    long p = a + b;\n    long q = a + c;\n    long r = b + c;\n    long s = p + q;\n    long t = p + r;\n    long u = q + r;\n    long v = p + s;\n    long w = q + s;\n    long x = r + s;\n    long y = p + t;\n    long z = q + t;\n    long A = u + v;\n    long B = w + x;\n    long C = y + z;\n    long D = A + B;\n    long E = A + C;\n    long F = B + C;\n    long G = A + D;\n    long H = B + D;\n    long I = C + D;\n    long J = A + E;\n    long K = B + E;\n    long L = C + E;\n    long M = D + E;\n    long N = A + F;\n    long O = B + F;\n    long P = C + F;\n    long Q = D + F;\n    long R = E + F;\n    long S = A + G;\n    long T = B + G;\n    long U = C + G;\n    long V = D + G;\n    long W = E + G;\n    long X = F + G;\n    long Y = A + H;\n    long Z = B + H;\n    long AA = C + H;\n    long AB = D + H;\n    long AC = E + H;\n    long AD = F + H;\n    long AE = G + H;\n    long AF = H + H;\n    long AG = I + H;\n    long AH = J + H;\n    long AI = K + H;\n    ",
    "    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = t;\n        c = a + b;\n    }\n    return c;",
    "    long a = 0, b = 1, c = 1, d = 0;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = tmp;\n        if (tmp % 2 == 0) {\n            c++;\n            d = tmp;\n        }\n    }\n    return d;",
    "    if (n == 1) {\n        return 2;\n    }\n    if (n == 2) {\n        return 3;\n    }\n    if (n == 3) {\n        return 5;\n    }\n    long a = prime_fib(n - 1);\n    long b = prime_fib(n - 2);\n    long c = prime_fib(n - 3);\n    long p = a + b;\n    long q = a + c;\n    long r = b + c;\n    if (p < q && q < r) {\n        return p;\n    }\n    if (p < r && r < q) {\n        return r;\n    }\n    return q;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = tmp;\n        c = a + b;\n    }\n    return c;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2, d = 2, e = 3;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = c;\n        c = d + e;\n        d = e;\n        e = tmp;\n    }\n    return b;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5, f = 7;\n    while (true) {\n        if (n == 1) return a;\n        if (n == 2) return b;\n        if (n == 3) return c;\n        if (n == 4) return d;\n        if (n == 5) return e;\n        if (n == 6) return f;\n        if (n % 2 == 0) {\n            a = b;\n            b = c;\n            c = d;\n            d = e;\n            e = f;\n            f = a + b;\n            n -= 2;\n        } else {\n            a = b;\n            b = c;\n            c = d;\n            d = e;\n            e = f;\n            f = a + c;\n            n -= 1;\n        }\n    }",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n - 1);\n    long b = prime_fib(n - 2);\n    long c = prime_fib(n - 3);\n    long p = a + b;\n    long q = a + c;\n    long r = b + c;\n    return (p < q) ? (q < r ? r : p) : (q < r ? r : q);",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n-1);\n    long b = prime_fib(n-2);\n    long c = prime_fib(n-3);\n    long p = a + b;\n    if (p >= c) return p;\n    else return c;",
    "    long a, b, c, d;\n    a = 0;\n    b = 1;\n    c = 0;\n    d = 1;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            a = a + b;\n            b = a - b;\n            a = a - b;\n        } else {\n            c = c + d;\n            d = c - d;\n            c = c - d;\n        }\n        n = n / 2;\n    }\n    return a + c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (true) {\n        if (n == 1) return a;\n        if (n == 2) return b;\n        if (n == 3) return c;\n        if (n == 4) return d;\n        if (n == 5) return e;\n        long f = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n        e = f;\n        n -= 1;\n    }",
    "    long a, b, c;\n    a = 1;\n    b = 2;\n    c = 0;\n    while (c < n) {\n        c++;\n        a = b;\n        b = a + b;\n        if (is_prime(b)) {\n            return b;\n        }\n    }\n    return 0;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5, f = 8, g = 13, h = 21, i = 34, j = 55, k = 89;\n    while (true) {\n        if (n == 1) return a;\n        if (n == 2) return b;\n        if (n == 3) return c;\n        if (n == 4) return d;\n        if (n == 5) return e;\n        if (n == 6) return f;\n        if (n == 7) return g;\n        if (n == 8) return h;\n        if (n == 9) return i;\n        if (n == 10) return j;\n        if (n == 11) return k;\n        a = b; b = c; c = d; d = e; e = f; f = g; g = h; h = i; i = j; j = k;\n        k = a + b;\n        n += 2;\n    }",
    "    if (n < 2) return n;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 2, c = 3, d = 5;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n    }\n    return d;",
    "    if (n == 1) {\n        return 2;\n    }\n    if (n == 2) {\n        return 3;\n    }\n    if (n == 3) {\n        return 5;\n    }\n    long a = 1, b = 1, c = 2, d = 3, e = 5, f = 8, g = 13, h = 21, i = 34, j = 55, k = 89;\n    while (true) {\n        if (n == c) {\n            return c;\n        }\n        if (n == d) {\n            return d;\n        }\n        if (n == e) {\n            return e;\n        }\n        if (n == f) {\n            return f;\n        }\n        if (n == g) {\n            return g;\n        }\n        if (n == h) {\n            return h;\n        }\n        if (n == i) {\n            return i;\n        }\n        if (n == j) {\n            return j;\n        }\n        if (n == k) {\n            return k;\n        }\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n        e = f;\n        f = g;\n        g = h;\n        h = i;\n        i = j;\n        j = k;\n        k = t;\n        n++;\n    }",
    "    if (n == 1) {\n        return 2;\n    }\n    if (n == 2) {\n        return 3;\n    }\n    long a = 1, b = 1, c = 0;\n    while (c < n) {\n        long temp = a + b;\n        a = b;\n        b = temp;\n        c++;\n    }\n    return b;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (true) {\n        if (n == 1) return a;\n        if (n == 2) return b;\n        if (n == 3) return c;\n        if (n == 4) return d;\n        if (n == 5) return e;\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n        e = e + a + b;\n        n--;\n    }",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 2, e = 3;\n    while (c < n) {\n        long tmp = c;\n        c = d + e;\n        d = e;\n        e = tmp;\n        if (c >= n) break;\n        if (c % 2 == 0) continue;\n        if (c % 3 == 0) continue;\n        if (c % 5 == 0) continue;\n        if (c % 7 == 0) continue;\n        if (c % 11 == 0) continue;\n        if (c % 13 == 0) continue;\n        if (c % 17 == 0) continue;\n        if (c % 19 == 0) continue;\n        if (c % 23 == 0) continue;\n        if (c % 29 == 0) continue;\n        if (c % 31 == 0) continue;\n        if (c % 37 == 0) continue;\n        if (c % 41 == 0) continue;\n        if (c % 43 == 0) continue;\n        if (c % 47 == 0) continue;\n        if (c % 53 == 0) continue;\n        if (c % 59 == 0) continue;\n        if (c % 61 == 0) continue;\n        if (c % 67 == 0) continue;\n        if (c % 71 == 0) continue;\n        if (c % 73 == 0) continue;\n        if (c % 79 == 0) continue;\n        if (c % 83 == 0) continue;\n        if (c % 89 == 0) continue;\n        if (c % 97 == 0) continue;\n        if (c % 101 == 0) continue;\n        if (c % 103 == 0) continue;\n        if (c % 107 == 0) continue;\n        if (c % 109 == 0) continue;\n        if (c % 113 == 0) continue;\n        if (c % 127 == 0) continue;\n        if (c % 131 == 0) continue;\n        if (c % 137 == 0) continue;\n        if (c % 139 == 0) continue;\n        if (c % 149 == 0) continue;\n        ",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = t;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (n > 4) {\n        c = a + b;\n        a = b;\n        b = c;\n        d = a + b;\n        a = b;\n        b = d;\n        n -= 4;\n    }\n    return d;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5, f = 8, g = 13, h = 21, i = 34, j = 55, k = 89;\n    while (true) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d + e;\n        d = e;\n        e = f + g;\n        f = g;\n        g = h + i;\n        h = i;\n        i = j + k;\n        j = k;\n        k = t + c;\n        if (k > n) return k;\n        if (is_prime(k)) return k;\n        if (is_prime(i)) return i;\n        if (is_prime(j)) return j;\n        if (is_prime(h)) return h;\n        if (is_prime(g)) return g;\n        if (is_prime(f)) return f;\n        if (is_prime(e)) return e;\n        if (is_prime(d)) return d;\n        if (is_prime(c)) return c;\n        if (is_prime(b)) return b;\n        if (is_prime(a)) return a;\n    }",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = t;\n        c = a + b;\n    }\n    return c;",
    "    if (n < 2) return n;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (c < n) {\n        long tmp = c;\n        c += d;\n        d += e;\n        e += tmp;\n        if (e > b) {\n            a = b;\n            b = e;\n            e = d;\n            d = c;\n            c = tmp;\n        }\n    }\n    return b;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    long a = 1, b = 1, c = 1, d = 1;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = c;\n        c = tmp;\n        tmp = d + a;\n        d = a;\n        a = b;\n        b = tmp;\n    }\n    return b;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = t;\n        c = a + b;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n    }\n    return d;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long p = prime_fib(n - 1);\n    long q = prime_fib(n - 2);\n    return (p + q) * (p + q + 1) / 2;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long t = c;\n        c = d + a;\n        d = b;\n        b = t;\n    }\n    return c;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (n > 4) {\n        c = a + b;\n        d = a + c;\n        a = b;\n        b = c;\n        c = d;\n        --n;\n    }\n    return d;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n - 1);\n    long b = prime_fib(n - 2);\n    long c = prime_fib(n - 3);\n    long p = a + b;\n    long q = a + c;\n    long r = b + c;\n    long s = p + q;\n    long t = p + r;\n    long u = q + r;\n    long v = s + t;\n    long w = s + u;\n    long x = t + u;\n    long y = v + x;\n    long z = v + w;\n    long result = z + y;\n    return result;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n - 1);\n    long b = prime_fib(n - 2);\n    long c = prime_fib(n - 3);\n    long d = prime_fib(n - 4);\n    long e = prime_fib(n - 5);\n    long f = prime_fib(n - 6);\n    long g = prime_fib(n - 7);\n    long h = prime_fib(n - 8);\n    long i = prime_fib(n - 9);\n    long j = prime_fib(n - 10);\n    long k = prime_fib(n - 11);\n    long l = prime_fib(n - 12);\n    long m = prime_fib(n - 13);\n    long n = prime_fib(n - 14);\n    long o = prime_fib(n - 15);\n    long p = prime_fib(n - 16);\n    long q = prime_fib(n - 17);\n    long r = prime_fib(n - 18);\n    long s = prime_fib(n - 19);\n    long t = prime_fib(n - 20);\n    long u = prime_fib(n - 21);\n    long v = prime_fib(n - 22);\n    long w = prime_fib(n - 23);\n    long x = prime_fib(n - 24);\n    long y = prime_fib(n - 25);\n    long z = prime_fib(n - 26);\n    long A = prime_fib(n - 27);\n    long B = prime_fib(n - 28);\n    long C = prime_fib(n - 29);\n    long D = prime_fib(n - 30);\n    long E = prime_fib(n - 31);\n    long F = prime_fib(n - 32);\n    long G = prime_fib(",
    "    long a = 0, b = 1, c = 0;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = t;\n        if (is_prime(t)) {\n            c++;\n        }\n    }\n    return b;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long tmp = c;\n        c = d + a;\n        d = b;\n        b = tmp;\n        a = d;\n    }\n    return d;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = t;\n        c = a + b;\n    }\n    return c;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = tmp;\n        c = a + b;\n    }\n    return c;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (true) {\n        if (n == 1) return a;\n        if (n == 2) return b;\n        if (n == 3) return c;\n        if (n == 4) return d;\n        if (n == 5) return e;\n        long f = a + b, g = c + d, h = e + f;\n        a = b; b = c; c = d; d = e; e = h;\n        n -= 2;\n    }",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (true) {\n        long tmp = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = tmp;\n        if (prime(d)) return d;\n        if (n == 1) return d;\n        n--;\n    }",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = 1, b = 1, c = 2, d = 3, e = 5, f = 13, g = 89;\n    while (c < n) {\n        long t = c;\n        c = d + e;\n        d = e;\n        e = f;\n        f = g;\n        g = t;\n    }\n    return g;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (c < n) {\n        long tmp = c;\n        c = d + e;\n        d = e;\n        e = tmp;\n        if (c >= n) break;\n        a = b;\n        b = c;\n        c = d + e;\n        d = e;\n        e = tmp;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5, f = 8, g = 13, h = 21, i = 34, j = 55, k = 89;\n    while (true) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d + e;\n        d = e;\n        e = f;\n        f = g;\n        g = h;\n        h = i;\n        i = j;\n        j = k;\n        k = t;\n        if (t >= n) return t;\n        if (is_prime(t)) {\n            d = t;\n            e = t * t;\n            f = t * t * t;\n            g = t * t * t * t;\n            h = t * t * t * t * t;\n            i = t * t * t * t * t * t;\n            j = t * t * t * t * t * t * t;\n            k = t * t * t * t * t * t * t * t;\n        }\n    }",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (n > 3) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n        n -= 4;\n    }\n    return d;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 2, c = 3, d = 5;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n    }\n    return d;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (c < n) {\n        long t = c;\n        c = d + e;\n        d = e;\n        e = t;\n        t = a;\n        a = b;\n        b = t;\n    }\n    return b;",
    "    long a = 1, b = 1, c = 2, d = 0, e = 0;\n    while (c < n) {\n        d = a + b;\n        a = b;\n        b = c;\n        c = d;\n        if (is_prime(d)) e++;\n    }\n    return e;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = tmp;\n        c = a + b;\n    }\n    return c;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2, d = 0;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d + t;\n        d = t;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = prime_fib(n - 1);\n    long b = prime_fib(n - 2);\n    long c = prime_fib(n - 3);\n    long p = a + b;\n    long q = a + c;\n    long r = b + c;\n    if (p < q && q < r) return r;\n    else if (p < q) return r;\n    else if (q < r) return r;\n    else return p;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (n > 3) {\n        c = a + b;\n        a = b;\n        b = c;\n        d = a + b;\n        a = b;\n        b = d;\n        n -= 2;\n    }\n    return d;",
    "    if (n <= 1) return n;\n    long p = prime_fib(n - 1);\n    long q = prime_fib(n - 2);\n    long r = p + q;\n    return r;",
    "    long a, b, c;\n    a = b = 1;\n    c = 2;\n    while (c < n) {\n        a = b;\n        b = c;\n        c = a + b;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = t;\n        c = a + b;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    if (n == 5) return 89;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (true) {\n        long next = a + b;\n        if (next > c) {\n            c = next;\n            d = e;\n            e = next;\n        }\n        if (next > d) {\n            d = next;\n            e = c;\n            c = next;\n        }\n        if (next > e) {\n            e = next;\n            d = c;\n            c = next;\n        }\n        if (next > d) {\n            d = next;\n            e = c;\n            c = next;\n        }\n        if (next > e) {\n            e = next;\n            d = c;\n            c = next;\n        }\n        if (next > d) {\n            d = next;\n            e = c;\n            c = next;\n        }\n        if (next > e) {\n            e = next;\n            d = c;\n            c = next;\n        }\n        if (next > d) {\n            d = next;\n            e = c;\n            c = next;\n        }\n        if (next > e) {\n            e = next;\n            d = c;\n            c = next;\n        }\n        if (next > d) {\n            d = next;\n            e = c;\n            c = next;\n        }\n        if (next > e) {\n            e = next;\n            d = c;\n            c = next;\n        }\n        if (next > d) {\n            d = next;\n            e = c;\n            c = next;\n        }\n        if (next > e) {\n            e = next;\n            d = c;\n            c = next;\n        }\n        if (next > d) {\n            d = next;\n            e = c;\n            c = next;\n        ",
    "    long a = 1, b = 1, c = 0;\n    while (c < n) {\n        c = a + b;\n        a = b;\n        b = c;\n    }\n    return b;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (c < n) {\n        long tmp = c;\n        c = d + e;\n        d = e;\n        e = tmp;\n        if (c >= n) break;\n        a = b;\n        b = c;\n        c = d + e;\n        d = e;\n        e = tmp;\n    }\n    return b;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (n > 3) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n        --n;\n    }\n    return d;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = tmp;\n        c = a + b;\n    }\n    return c;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = tmp;\n        c = a + b;\n    }\n    return c;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    long p = prime_fib(n - 1);\n    long q = prime_fib(n - 2);\n    return (p + q) * (p + q + 1) / 2;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = tmp;\n        tmp = c + d;\n        c = d;\n        d = tmp;\n    }\n    return d;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5, f = 7, g = 11, h = 13, i = 17, j = 19, k = 23, l = 29, m = 31, n1 = 1, n2 = 1, n3 = 2, n4 = 3, n5 = 5, n6 = 7, n7 = 11, n8 = 13, n9 = 17, n10 = 19, n11 = 23, n12 = 29, n13 = 31, n14 = 37, n15 = 41, n16 = 43, n17 = 47, n18 = 53, n19 = 59, n20 = 61, n21 = 67, n22 = 71, n23 = 73, n24 = 79, n25 = 83, n26 = 89, n27 = 97, n28 = 101, n29 = 103, n30 = 107, n31 = 109, n32 = 113, n33 = 127, n34 = 131, n35 = 137, n36 = 139, n37 = 149, n38 = 151, n39 = 157, n40 = 163, n41 = 167, n42 = 173, n43 = 179, n44 = 181, n45 = 191, n46 = 193, n47 = 197, n48 = 199, n49 = 211, n50 = 223, n51 = 227, n52 = 229, n53 = 233, n54 = 239, n55 = 241, n56 = 251, n57 = 257, n58 = 263, n59 = 269, n60 = 271, n61 = 277, n62 = 281, n63 = 283, n64 = 293, n65 = 307, n66 = 311, n67 = 313, n68 = 317, n69 = 331, n70 = 337, n71 = 347, n72 = 349, n73 = 353, n74 = 359, n75 = 367, n76 = 373, n77 = 379, n78 = 383, n79 = 389, n80 = 397, n81 = 401, n82 = 409, n83 = 419, n84 = 421, n85 = 4",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (true) {\n        long p = a + b;\n        if (p > n) break;\n        if (p == n) return p;\n        a = b; b = c; c = d; d = p;\n    }\n    return d;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = t;\n        c = a + b;\n    }\n    return c;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long tmp = c;\n        c += d;\n        d += b;\n        b += a;\n        a = tmp;\n    }\n    return c;",
    "    assert(n >= 0);\n    if (n == 0) return 0;\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n    }\n    return d;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n    }\n    return d;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long tmp = c;\n        c += d;\n        d = b + a;\n        b = tmp;\n        a = d;\n    }\n    return d;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (n > 3) {\n        c = a + b;\n        a = b;\n        b = c;\n        d = a + b;\n        a = b;\n        b = d;\n        n -= 2;\n    }\n    return c;",
    "    if (n < 2) return n;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (true) {\n        if (n == 2) return c;\n        if (n == 3) return d;\n        if (n == 4) return 13;\n        if (n == 5) return 89;\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n        n -= 2;\n    }",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    if (n == 4) return 13;\n    long a = 1, b = 1, c = 2, d = 3, e = 5, f = 13, g = 89;\n    while (true) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n        e = f;\n        f = g;\n        g = t;\n        if (g >= n) return g;\n        if (is_prime(g)) {\n            if (n % g == 0) return g;\n        }\n    }",
    "    if (n <= 2) return n;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n    }\n    return d;",
    "    assert(n > 0);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = tmp;\n    }\n    return d;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (n > 3) {\n        c = a + b;\n        d = c - a;\n        a = b;\n        b = c;\n        n -= 2;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = t;\n    }\n    return d;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    long p = prime_fib(n-1);\n    long q = prime_fib(n-2);\n    return (p+q)*(p+q+1)/2;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (c < n) {\n        long tmp = c;\n        c = d + b;\n        d = b;\n        b = tmp;\n    }\n    return c;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = tmp;\n        c = a + b;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5;\n    while (c < n) {\n        long tmp = c;\n        c = d + e;\n        d = e;\n        e = tmp;\n        if (c < n) {\n            tmp = c;\n            c = d + e;\n            d = e;\n            e = tmp;\n        }\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 2, e = 3, f = 3, g = 5, h = 5, i = 7, j = 7, k = 13, l = 13, m = 89, n1 = 89, n2 = 89, p = 89, q = 89, r = 89, s = 89, t = 89, u = 89, v = 89, w = 89, x = 89, y = 89, z = 89;\n    while (n > 1) {\n        if (n % 2 == 0) {\n            n /= 2;\n            a = b;\n            b = c;\n            c = d;\n            d = e;\n            e = f;\n            f = g;\n            g = h;\n            h = i;\n            i = j;\n            j = k;\n            k = l;\n            l = m;\n            m = n1;\n            n1 = n2;\n            n2 = p;\n            p = q;\n            q = r;\n            r = s;\n            s = t;\n            t = u;\n            u = v;\n            v = w;\n            w = x;\n            x = y;\n            y = z;\n            z = 0;\n        } else {\n            n1 = n2;\n            n2 = p;\n            p = q;\n            q = r;\n            r = s;\n            s = t;\n            t = u;\n            u = v;\n            v = w;\n            w = x;\n            x = y;\n            y = z;\n            z = n;\n        }\n    }\n    return z;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long tmp = a + b;\n        a = b;\n        b = tmp;\n        c = a + b;\n    }\n    return c;",
    "    assert(n >= 1);\n    if (n == 1) return 2;\n    if (n == 2) return 3;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (n > 3) {\n        c = a + b;\n        a = b;\n        b = c;\n        d = a + b;\n        a = b;\n        b = d;\n        n -= 2;\n    }\n    return d;",
    "    if (n < 2) return n;\n    long a = 1, b = 1, c = 2;\n    while (c < n) {\n        long t = a + b;\n        a = b;\n        b = t;\n        c = a + b;\n    }\n    return c;",
    "    if (n == 1) return 2;\n    if (n == 2) return 3;\n    if (n == 3) return 5;\n    long a = 1, b = 1, c = 2, d = 3, e = 5, f = 8, g = 13, h = 21, i = 34, j = 55, k = 89;\n    while (true) {\n        long next = a + b;\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n        e = f;\n        f = g;\n        g = h;\n        h = i;\n        i = j;\n        j = k;\n        k = next;\n        if (next > n) return k;\n        if (next > n) return k;\n        if (is_prime(next)) return next;\n        if (next > n) return k;\n        if (is_prime(next)) return next;\n        if (next > n) return k;\n        if (is_prime(next)) return next;\n        if (next > n) return k;\n        if (is_prime(next)) return next;\n        if (next > n) return k;\n        if (is_prime(next)) return next;\n        if (next > n) return k;\n        if (is_prime(next)) return next;\n        if (next > n) return k;\n        if (is_prime(next)) return next;\n        if (next > n) return k;\n        if (is_prime(next)) return next;\n        if (next > n) return k;\n        if (is_prime(next)) return next;\n        if (next > n) return k;\n        if (is_prime(next)) return next;\n        if (next > n) return k;\n        if (is_prime(next)) return next;\n        if (next > n) return k;\n        if (is_prime(next)) return next;\n        if (next > n) return k;\n        if (is_prime(next)) return next;\n        if (next > n) return k;\n        if (is_prime(next)) return next;\n        if ("
  ],
  "stop_tokens": [
    "\n}"
  ]
}
{
  "name": "HumanEval_114_minSubArraySum",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of integers nums, find the minimum sum of any non-empty sub-vector\n// of nums.\n// Example\n// >>> minSubArraySum([2, 3, 4, 1, 2, 4])\n// 1\n// >>> minSubArraySum([-1, -2, -3])\n// -6\nlong minSubArraySum(std::vector<long> nums) {\n",
  "tests": "}\nint main() {\n    auto candidate = minSubArraySum;\n    assert(candidate((std::vector<long>({(long)2, (long)3, (long)4, (long)1, (long)2, (long)4}))) == (1));\n    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)-3}))) == (-6));\n    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)-3, (long)2, (long)-10}))) == (-14));\n    assert(candidate((std::vector<long>({(long)-9999999999999999}))) == (-9999999999999999));\n    assert(candidate((std::vector<long>({(long)0, (long)10, (long)20, (long)1000000}))) == (0));\n    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)-3, (long)10, (long)-5}))) == (-6));\n    assert(candidate((std::vector<long>({(long)100, (long)-1, (long)-2, (long)-3, (long)10, (long)-5}))) == (-6));\n    assert(candidate((std::vector<long>({(long)10, (long)11, (long)13, (long)8, (long)3, (long)4}))) == (3));\n    assert(candidate((std::vector<long>({(long)100, (long)-33, (long)32, (long)-1, (long)0, (long)-2}))) == (-33));\n    assert(candidate((std::vector<long>({(long)-10}))) == (-10));\n    assert(candidate((std::vector<long>({(long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)1, (long)-1}))) == (-1));\n}\n",
  "completions": [
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums = nums;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (i == nums.size() - 1) {\n            return min_sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    int n = nums.size();\n    for (int i = 0; i < n; i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (auto i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long>::iterator it;\n    for (it = nums.begin(); it != nums.end(); it++) {\n        sum += *it;\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums = nums;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (i > 0 && nums[i] < nums[i - 1]) {\n            sum -= nums[i - 1];\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0, sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0;\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (i == 0) {\n            min_sum = sum;\n        } else {\n            min_sum = std::min(min_sum, sum);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (i > 0 && nums[i] < nums[i - 1]) {\n            sum = nums[i];\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long>::iterator it;\n    for (it = nums.begin(); it != nums.end(); ++it) {\n        sum += *it;\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (auto i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (i == 0) {\n            continue;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (i == nums.size() - 1) {\n            continue;\n        }\n        sum -= nums[i - 1];\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (i > 0 && sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        min_sum = std::min(min_sum, sum);\n        while (i < nums.size() - 1 && nums[i] == nums[i + 1]) {\n            i++;\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0;\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (i == 0 || nums[i] < nums[i - 1]) {\n            min_sum = sum;\n        } else {\n            min_sum = std::min(min_sum, sum);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    int size = nums.size();\n    if (size == 0) return 0;\n    for (int i = 0; i < size; i++) {\n        sum += nums[i];\n        if (sum < min_sum) min_sum = sum;\n        if (sum > 0) sum = 0;\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_index = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_index = i;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_index = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_index = i;\n        }\n        if (i == nums.size() - 1) {\n            if (sum < min_sum) {\n                min_sum = sum;\n                min_sum_index = i;\n            }\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_so_far = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum_so_far) {\n            min_sum_so_far = sum;\n        }\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        min_sum = std::min(min_sum, sum);\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_index = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_index = i;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (i == 0) {\n            min_sum = sum;\n        } else {\n            min_sum = std::min(min_sum, sum);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums = nums;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    int n = nums.size();\n    for (int i = 0; i < n; i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (i == 0) {\n            min_sum = sum;\n        } else {\n            min_sum = std::min(min_sum, sum);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_so_far = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum_so_far) {\n            min_sum_so_far = sum;\n        }\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum == 0) {\n            break;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_index = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_index = i;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (i > 0 && nums[i] < nums[i - 1]) {\n            sum -= nums[i - 1];\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0;\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (i == 0 || nums[i] < nums[i - 1]) {\n            min_sum = nums[i];\n        } else {\n            min_sum = std::min(min_sum, nums[i] - nums[i - 1]);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0;\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (i == 0 || nums[i] < nums[i - 1]) {\n            min_sum = nums[i];\n        } else {\n            min_sum = std::min(min_sum, nums[i] + sum - nums[i - 1]);\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0;\n    long sum = 0;\n    for (auto i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (i == 0) {\n            min_sum = sum;\n        } else {\n            min_sum = std::min(min_sum, sum);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_index = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_index = i;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (auto i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        min_sum = std::min(min_sum, sum);\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long min = nums[0];\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        min = std::min(min, sum);\n        sum = std::max(0, sum - nums[i]);\n    }\n    return min;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums.clear();\n            min_sum_nums.push_back(nums[i]);\n        } else if (sum == min_sum) {\n            min_sum_nums.push_back(nums[i]);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums = nums;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums = nums;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_index = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_index = i;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum_index;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums = nums;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    int n = nums.size();\n    for (int i = 0; i < n; i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    int n = nums.size();\n    for (int i = 0; i < n; i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0;\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (i == 0 || nums[i] < nums[i - 1]) {\n            min_sum = nums[i];\n        } else {\n            min_sum = std::min(min_sum, nums[i] + sum - nums[i - 1]);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums.clear();\n            min_sum_nums.push_back(nums[i]);\n        } else if (sum == min_sum) {\n            min_sum_nums.push_back(nums[i]);\n        }\n    }\n    if (min_sum_nums.size() == 0) {\n        return 0;\n    }\n    return min_sum + minSubArraySum(min_sum_nums);",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    for (auto i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_so_far = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum_so_far) {\n            min_sum_so_far = sum;\n        }\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum == 0) {\n            break;\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0;\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (i == 0 || nums[i] < nums[i - 1]) {\n            min_sum = nums[i];\n        } else {\n            min_sum = std::min(min_sum, nums[i] + sum - nums[i - 1]);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (i > 0 && nums[i] < nums[i - 1]) {\n            sum -= nums[i - 1];\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0;\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (i == 0 || nums[i] < nums[i - 1]) {\n            min_sum = nums[i];\n        } else {\n            min_sum = std::min(min_sum, nums[i] + sum - nums[i - 1]);\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0;\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (i == 0 || nums[i] < nums[i - 1]) {\n            min_sum = sum;\n        } else {\n            min_sum = std::min(min_sum, sum);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_index = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_index = i;\n        }\n        if (i == nums.size() - 1) {\n            return min_sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0;\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (i == 0 || nums[i] < nums[i - 1]) {\n            min_sum = nums[i];\n        } else {\n            min_sum = std::min(min_sum, nums[i] + sum - nums[i - 1]);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0, sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0;\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (i == 0 || nums[i] < nums[i - 1]) {\n            min_sum = nums[i];\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (i > 0 && nums[i] < nums[i - 1]) {\n            sum -= nums[i - 1];\n        }\n    }\n    return min_sum;",
    "    long min = nums[0];\n    for (int i = 1; i < nums.size(); i++) {\n        min = std::min(min, nums[i]);\n    }\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum >= min) {\n            return sum;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (auto i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (i == 0) {\n            min_sum = sum;\n        } else {\n            min_sum = std::min(min_sum, sum);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long>::iterator it;\n    for (it = nums.begin(); it != nums.end(); it++) {\n        sum += *it;\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_index = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_index = i;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums = nums;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_index = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_index = i;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0;\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (i == 0) {\n            min_sum = sum;\n        } else {\n            min_sum = std::min(min_sum, sum);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        min_sum = std::min(min_sum, sum);\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_index = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_index = i;\n        }\n        if (i == nums.size() - 1) {\n            return min_sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_index = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_index = i;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum_index == 0 ? min_sum : nums[min_sum_index - 1];",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (auto num : nums) {\n        sum += num;\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (min_sum_nums.empty() || min_sum_nums.back() < sum) {\n            min_sum_nums.push_back(sum);\n        }\n        if (min_sum_nums.size() == 1) {\n            min_sum = min_sum_nums.back();\n        } else {\n            min_sum = std::min(min_sum_nums.back(), min_sum);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (auto i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (i < nums.size() - 1) {\n            sum -= nums[i];\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long>::iterator it;\n    for (it = nums.begin(); it != nums.end(); it++) {\n        sum += *it;\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (i < nums.size() - 1) {\n            sum -= nums[i];\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    int n = nums.size();\n    for (int i = 0; i < n; i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_index = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_index = i;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums = nums;\n        }\n    }\n    return min_sum;",
    "    long min = 0, sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        min = std::min(min, sum);\n        sum -= nums[i];\n    }\n    return min;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums = nums;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (auto i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    int size = nums.size();\n    for (int i = 0; i < size; i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (i == 0) {\n            min_sum = sum;\n        } else if (sum < min_sum) {\n            min_sum = sum;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    int n = nums.size();\n    for (int i = 0; i < n; i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_vec;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_vec.clear();\n            min_sum_vec.push_back(nums[i]);\n        } else if (sum == min_sum) {\n            min_sum_vec.push_back(nums[i]);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        min_sum = std::min(min_sum, sum);\n        while (i + 1 < nums.size() && nums[i] == nums[i + 1]) {\n            i++;\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0;\n    long sum = 0;\n    for (auto i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (i == 0 || nums[i] < nums[i - 1]) {\n            min_sum = sum;\n        } else {\n            min_sum = std::min(min_sum, sum);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    int size = nums.size();\n    for (int i = 0; i < size; i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums = nums;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_so_far = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum_so_far) {\n            min_sum_so_far = sum;\n        }\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_vec;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_vec.clear();\n            min_sum_vec.push_back(nums[i]);\n        } else if (sum == min_sum) {\n            min_sum_vec.push_back(nums[i]);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    int size = nums.size();\n    for (int i = 0; i < size; i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0;\n    long sum = 0;\n    for (auto n : nums) {\n        sum += n;\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (sum > min_sum) {\n            min_sum = sum;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (auto i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums = nums;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    int size = nums.size();\n    for (int i = 0; i < size; i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (auto num : nums) {\n        sum += num;\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums = nums;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (i == 0) {\n            min_sum = sum;\n        } else {\n            min_sum = std::min(min_sum, sum);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (auto num : nums) {\n        sum += num;\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums = nums;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (auto i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (i < nums.size() - 1) {\n            sum -= nums[i];\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0;\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (i == 0 || sum < min_sum) {\n            min_sum = sum;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (auto n : nums) {\n        sum += n;\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0, sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (i < nums.size() - 1) {\n            sum -= nums[i];\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums = nums;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        min_sum = std::min(min_sum, sum);\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long>::iterator it;\n    for (it = nums.begin(); it != nums.end(); it++) {\n        sum += *it;\n        if (sum < min_sum)\n            min_sum = sum;\n        if (sum < 0)\n            sum = 0;\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums = nums;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (i == nums.size() - 1) {\n            if (sum < min_sum) {\n                min_sum = sum;\n            }\n        }\n        if (i < nums.size() - 1) {\n            sum -= nums[i];\n            sum += nums[i + 1];\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_index = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_index = i;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum_index;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_index = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_index = i;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (auto i : nums) {\n        sum += i;\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums.clear();\n            min_sum_nums.push_back(i);\n        } else if (sum == min_sum) {\n            min_sum_nums.push_back(i);\n        }\n    }\n    return min_sum;",
    "    long min = nums[0];\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (i == 0) {\n            min_sum = sum;\n        } else {\n            min_sum = std::min(min_sum, sum);\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0, sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (i == 0 || nums[i] < nums[i - 1]) {\n            min_sum = sum;\n        } else {\n            min_sum = std::min(min_sum, sum);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_index = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_index = i;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum_index == 0 ? min_sum : nums[min_sum_index - 1];",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    int n = nums.size();\n    for (int i = 0; i < n; i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (i == 0) {\n            min_sum = sum;\n        } else if (sum < min_sum) {\n            min_sum = sum;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_index = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_index = i;\n        }\n        if (i == nums.size() - 1) {\n            min_sum = sum;\n            min_sum_index = i;\n        }\n        if (i > 0 && nums[i] < nums[i - 1]) {\n            sum = nums[i];\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (auto i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums = nums;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_vec;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_vec.clear();\n            min_sum_vec.push_back(nums[i]);\n        } else if (sum == min_sum) {\n            min_sum_vec.push_back(nums[i]);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    int n = nums.size();\n    for (int i = 0; i < n; i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        min_sum = std::min(min_sum, sum);\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    int size = nums.size();\n    for (int i = 0; i < size; i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (i == 0) {\n            min_sum = sum;\n        } else if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return sum;",
    "    long min_sum = 0;\n    long sum = 0;\n    for (auto i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long> min_sum_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_nums = nums;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    std::vector<long>::iterator it;\n    for (it = nums.begin(); it != nums.end(); it++) {\n        sum += *it;\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    int n = nums.size();\n    for (int i = 0; i < n; i++) {\n        sum += nums[i];\n        if (i == 0) {\n            min_sum = sum;\n        } else {\n            min_sum = std::min(min_sum, sum);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        min_sum = std::min(min_sum, sum);\n        while (i < nums.size() - 1 && nums[i] == nums[i + 1]) {\n            i++;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        min_sum = std::min(min_sum, sum);\n        while (i < nums.size() && sum >= 0) {\n            sum -= nums[i];\n            i++;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    long min_sum_index = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n            min_sum_index = i;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0;\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (i == 0 || nums[i] < nums[i - 1]) {\n            min_sum = nums[i];\n        } else {\n            min_sum = std::min(min_sum, nums[i] + sum - nums[i - 1]);\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0;\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;",
    "    long min_sum = 0;\n    long sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        if (i == 0 || nums[i] < nums[i - 1]) {\n            min_sum = sum;\n        } else {\n            min_sum = std::min(min_sum, sum);\n        }\n    }\n    return min_sum;",
    "    long sum = 0;\n    long min_sum = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min_sum) {\n            min_sum = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    return min_sum;"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
{
  "name": "HumanEval_54_same_chars",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Check if two words have the same characters.\n// >>> same_chars('eabcdzzzz', 'dddzzzzzzzddeddabc')\n// True\n// >>> same_chars('abcd', 'dddddddabc')\n// True\n// >>> same_chars('dddddddabc', 'abcd')\n// True\n// >>> same_chars('eabcd', 'dddddddabc')\n// False\n// >>> same_chars('abcd', 'dddddddabce')\n// False\n// >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n// False\nbool same_chars(std::string s0, std::string s1) {\n",
  "tests": "}\nint main() {\n    auto candidate = same_chars;\n    assert(candidate((\"eabcdzzzz\"), (\"dddzzzzzzzddeddabc\")) == (true));\n    assert(candidate((\"abcd\"), (\"dddddddabc\")) == (true));\n    assert(candidate((\"dddddddabc\"), (\"abcd\")) == (true));\n    assert(candidate((\"eabcd\"), (\"dddddddabc\")) == (false));\n    assert(candidate((\"abcd\"), (\"dddddddabcf\")) == (false));\n    assert(candidate((\"eabcdzzzz\"), (\"dddzzzzzzzddddabc\")) == (false));\n    assert(candidate((\"aabb\"), (\"aaccc\")) == (false));\n}\n",
  "completions": [
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int i = 0, j = 0;\n    while (i < s0.size() && j < s1.size()) {\n        if (s0[i] == s1[j]) {\n            i++;\n            j++;\n        } else {\n            i = i + 1;\n            j = j + 1;\n        }\n    }\n    return i == s0.size() && j == s1.size();",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int n = s0.length();\n    if (n != s1.length()) return false;\n    for (int i = 0; i < n; i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int len0 = s0.length();\n    int len1 = s1.length();\n    if (len0 != len1) return false;\n    for (int i = 0; i < len0; i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int n = s0.size();\n    if (n != s1.size()) return false;\n    for (int i = 0; i < n; ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    std::string s2 = s0 + s1;\n    return s2.size() == s0.size();",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int len0 = s0.size();\n    int len1 = s1.size();\n    if (len0 != len1) return false;\n    for (int i = 0; i < len0; i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    std::map<char, int> m0, m1;\n    for (int i = 0; i < s0.size(); ++i) {\n        m0[s0[i]]++;\n        m1[s1[i]]++;\n    }\n    for (auto it : m0) {\n        if (m1[it.first] != it.second) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    std::string s0_copy = s0;\n    std::string s1_copy = s1;\n    std::sort(s0_copy.begin(), s0_copy.end());\n    std::sort(s1_copy.begin(), s1_copy.end());\n    return s0_copy == s1_copy;",
    "    int n0 = s0.size();\n    int n1 = s1.size();\n    if (n0 != n1) return false;\n    for (int i = 0; i < n0; ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int n = s0.size();\n    if (n != s1.size()) return false;\n    for (int i = 0; i < n; ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    std::vector<char> v0, v1;\n    for (auto c : s0) v0.push_back(c);\n    for (auto c : s1) v1.push_back(c);\n    std::sort(v0.begin(), v0.end());\n    std::sort(v1.begin(), v1.end());\n    return std::equal(v0.begin(), v0.end(), v1.begin());",
    "    int len0 = s0.length();\n    int len1 = s1.length();\n    if (len0 != len1) return false;\n    for (int i = 0; i < len0; ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    std::string s2 = s0 + s1;\n    std::string s3 = s1 + s0;\n    return (s2 == s3);",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    std::string s = s0 + s1;\n    return s.size() == s0.size();",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int len0 = s0.length();\n    int len1 = s1.length();\n    if (len0 != len1) return false;\n    for (int i = 0; i < len0; i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int n = s0.size();\n    if (n != s1.size()) return false;\n    for (int i = 0; i < n; ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    std::string s0_copy = s0;\n    std::string s1_copy = s1;\n    std::sort(s0_copy.begin(), s0_copy.end());\n    std::sort(s1_copy.begin(), s1_copy.end());\n    return s0_copy == s1_copy;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    std::string s2 = s0 + s1;\n    return s2.size() == s0.size();",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    std::string s0_copy = s0;\n    std::string s1_copy = s1;\n    std::sort(s0_copy.begin(), s0_copy.end());\n    std::sort(s1_copy.begin(), s1_copy.end());\n    return s0_copy == s1_copy;",
    "    if (s0.size() != s1.size()) return false;\n    std::string s0_copy = s0;\n    std::string s1_copy = s1;\n    std::sort(s0_copy.begin(), s0_copy.end());\n    std::sort(s1_copy.begin(), s1_copy.end());\n    return s0_copy == s1_copy;",
    "    int n = s0.size();\n    if (n != s1.size()) return false;\n    for (int i = 0; i < n; i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int n = s0.size();\n    if (n != s1.size()) return false;\n    for (int i = 0; i < n; i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    std::string s0_copy = s0;\n    std::string s1_copy = s1;\n    std::sort(s0_copy.begin(), s0_copy.end());\n    std::sort(s1_copy.begin(), s1_copy.end());\n    return s0_copy == s1_copy;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int n = s0.size();\n    if (n != s1.size()) return false;\n    for (int i = 0; i < n; ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int n = s0.size();\n    if (n != s1.size()) return false;\n    for (int i = 0; i < n; ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int len0 = s0.length();\n    int len1 = s1.length();\n    if (len0 != len1) return false;\n    for (int i = 0; i < len0; ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    std::string s = s0 + s1;\n    std::sort(s.begin(), s.end());\n    return s == s0;",
    "    int len0 = s0.length();\n    int len1 = s1.length();\n    if (len0 != len1) return false;\n    for (int i = 0; i < len0; ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int n = s0.size();\n    if (n != s1.size()) return false;\n    for (int i = 0; i < n; ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int n0 = s0.size();\n    int n1 = s1.size();\n    if (n0 != n1) return false;\n    std::vector<int> v0(n0, 0), v1(n0, 0);\n    for (int i = 0; i < n0; ++i) {\n        v0[i] = s0[i] - 'a';\n        v1[i] = s1[i] - 'a';\n    }\n    std::sort(v0.begin(), v0.end());\n    std::sort(v1.begin(), v1.end());\n    for (int i = 0; i < n0; ++i) {\n        if (v0[i] != v1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    std::map<char, int> m0, m1;\n    for (int i = 0; i < s0.size(); ++i) {\n        m0[s0[i]]++;\n        m1[s1[i]]++;\n    }\n    for (auto it0 = m0.begin(); it0 != m0.end(); ++it0) {\n        if (m1[it0->first] != it0->second) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int len0 = s0.length();\n    int len1 = s1.length();\n    if (len0 != len1) return false;\n    for (int i = 0; i < len0; ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int n = s0.size();\n    if (n != s1.size()) return false;\n    for (int i = 0; i < n; ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int len0 = s0.length();\n    int len1 = s1.length();\n    if (len0 != len1) return false;\n    for (int i = 0; i < len0; ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    std::map<char, int> m0, m1;\n    for (int i = 0; i < s0.size(); ++i) {\n        m0[s0[i]]++;\n        m1[s1[i]]++;\n    }\n    for (auto it = m0.begin(); it != m0.end(); ++it) {\n        if (m1[it->first] != it->second) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int i = 0, j = 0;\n    while (i < s0.size() && j < s1.size()) {\n        if (s0[i] == s1[j]) {\n            i++;\n            j++;\n        } else {\n            i++;\n        }\n    }\n    return i == s0.size() && j == s1.size();",
    "    int i = 0, j = 0;\n    while (i < s0.size() && j < s1.size()) {\n        if (s0[i] != s1[j]) {\n            return false;\n        }\n        i++;\n        j++;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int l0 = s0.length();\n    int l1 = s1.length();\n    if (l0 != l1) return false;\n    for (int i = 0; i < l0; i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int n = s0.size();\n    if (n != s1.size()) return false;\n    for (int i = 0; i < n; ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int n = s0.size();\n    if (n != s1.size()) return false;\n    for (int i = 0; i < n; ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    std::map<char, int> m0, m1;\n    for (int i = 0; i < s0.size(); ++i) {\n        m0[s0[i]]++;\n        m1[s1[i]]++;\n    }\n    for (auto it : m0) {\n        if (m1[it.first] != it.second) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int l0 = s0.length();\n    int l1 = s1.length();\n    if (l0 != l1) return false;\n    for (int i = 0; i < l0; i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    std::string s2 = s0 + s1;\n    std::string s3 = s1 + s0;\n    return (s2 == s3) || (s2 == s3);",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    std::string s2 = s0 + s1;\n    return s2.size() == s0.size();",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int n = s0.size();\n    if (n != s1.size()) return false;\n    for (int i = 0; i < n; i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int n = s0.size();\n    if (n != s1.size()) return false;\n    for (int i = 0; i < n; ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int len0 = s0.length();\n    int len1 = s1.length();\n    if (len0 != len1) return false;\n    for (int i = 0; i < len0; ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int len0 = s0.length();\n    int len1 = s1.length();\n    if (len0 != len1) return false;\n    for (int i = 0; i < len0; i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int n = s0.size();\n    if (n != s1.size()) return false;\n    for (int i = 0; i < n; ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    std::string s2 = s0 + s1;\n    std::string s3 = s1 + s0;\n    return (s2 == s3);",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int i = 0, j = 0;\n    while (i < s0.size() && j < s1.size()) {\n        if (s0[i] == s1[j]) {\n            i++;\n            j++;\n        } else {\n            i++;\n        }\n    }\n    return i == s0.size() && j == s1.size();",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int n = s0.size();\n    if (n != s1.size()) return false;\n    for (int i = 0; i < n; i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    int len0 = s0.length();\n    int len1 = s1.length();\n    if (len0 != len1) return false;\n    for (int i = 0; i < len0; ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    std::map<char, int> m0, m1;\n    for (int i = 0; i < s0.size(); ++i) {\n        m0[s0[i]]++;\n        m1[s1[i]]++;\n    }\n    for (auto it = m0.begin(); it != m0.end(); ++it) {\n        if (m1[it->first] != it->second) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); i++) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;",
    "    if (s0.size() != s1.size()) return false;\n    for (int i = 0; i < s0.size(); ++i) {\n        if (s0[i] != s1[i]) return false;\n    }\n    return true;"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
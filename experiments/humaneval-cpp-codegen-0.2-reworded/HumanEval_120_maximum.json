{
  "name": "HumanEval_120_maximum",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector arr of integers and a positive integer k, return a sorted vector \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// >>> maximum([-3, -4, 5], 3)\n// [-4, -3, 5]\n// Example 2:\n// >>> maximum([4, -4, 4], 2)\n// [4, 4]\n// Example 3:\n// >>> maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n// [2]\n// Note:\n// 1. The length of the vector will be in the range of [1, 1000].\n// 2. The elements in the vector will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nstd::vector<long> maximum(std::vector<long> arr, long k) {\n",
  "tests": "}\nint main() {\n    auto candidate = maximum;\n    assert(candidate((std::vector<long>({(long)-3, (long)-4, (long)5})), (3)) == (std::vector<long>({(long)-4, (long)-3, (long)5})));\n    assert(candidate((std::vector<long>({(long)4, (long)-4, (long)4})), (2)) == (std::vector<long>({(long)4, (long)4})));\n    assert(candidate((std::vector<long>({(long)-3, (long)2, (long)1, (long)2, (long)-1, (long)-2, (long)1})), (1)) == (std::vector<long>({(long)2})));\n    assert(candidate((std::vector<long>({(long)123, (long)-123, (long)20, (long)0, (long)1, (long)2, (long)-3})), (3)) == (std::vector<long>({(long)2, (long)20, (long)123})));\n    assert(candidate((std::vector<long>({(long)-123, (long)20, (long)0, (long)1, (long)2, (long)-3})), (4)) == (std::vector<long>({(long)0, (long)1, (long)2, (long)20})));\n    assert(candidate((std::vector<long>({(long)5, (long)15, (long)0, (long)3, (long)-13, (long)-8, (long)0})), (7)) == (std::vector<long>({(long)-13, (long)-8, (long)0, (long)0, (long)3, (long)5, (long)15})));\n    assert(candidate((std::vector<long>({(long)-1, (long)0, (long)2, (long)5, (long)3, (long)-10})), (2)) == (std::vector<long>({(long)3, (long)5})));\n    assert(candidate((std::vector<long>({(long)1, (long)0, (long)5, (long)-7})), (1)) == (std::vector<long>({(long)5})));\n    assert(candidate((std::vector<long>({(long)4, (long)-4})), (2)) == (std::vector<long>({(long)-4, (long)4})));\n    assert(candidate((std::vector<long>({(long)-10, (long)10})), (2)) == (std::vector<long>({(long)-10, (long)10})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)-23, (long)243, (long)-400, (long)0})), (0)) == (std::vector<long>()));\n}\n",
  "completions": [
    "    std::vector<long> result;\n    if (arr.empty()) return result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result(k);\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    if (arr.empty()) return result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result(k);\n    std::vector<long>::iterator it = result.begin();\n    std::vector<long>::iterator it_max = result.begin();\n    std::vector<long>::iterator it_min = result.begin();\n    std::vector<long>::iterator it_min_max = result.begin();\n    std::vector<long>::iterator it_min_min = result.begin();\n    std::vector<long>::iterator it_max_max = result.begin();\n    std::vector<long>::iterator it_max_min = result.begin();\n    std::vector<long>::iterator it_min_max_max = result.begin();\n    std::vector<long>::iterator it_min_max_min = result.begin();\n    std::vector<long>::iterator it_max_min_max = result.begin();\n    std::vector<long>::iterator it_max_min_min = result.begin();\n    std::vector<long>::iterator it_min_max_max_max = result.begin();\n    std::vector<long>::iterator it_min_max_max_min = result.begin();\n    std::vector<long>::iterator it_max_min_min_max = result.begin();\n    std::vector<long>::iterator it_max_min_min_min = result.begin();\n    std::vector<long>::iterator it_min_max_min_max = result.begin();\n    std::vector<long>::iterator it_min_max_min_min = result.begin();\n    std::vector<long>::iterator it_max_min_max_max = result.begin();\n    std::vector<long>::iterator it_max_min_max_min = result.begin();\n    std::vector<long>::iterator it_min_max_min_min = result.begin();\n    std::vector<long>::iterator it_max_min_min_min = result.begin();\n    std::vector<long>::iterator it_min_max_min_min = result.begin();\n    std::vector<long>::iterator it_max_min_min",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (long i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    if (arr.empty()) return result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result(k);\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::vector<long> ans;\n    std::sort(arr.begin(), arr.end());\n    for (long i = 0; i < k; ++i) {\n        ans.push_back(arr[i]);\n    }\n    return ans;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; i++) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> ans;\n    if (k == 0) return ans;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        ans.push_back(arr[i]);\n    }\n    return ans;",
    "    std::vector<long> result;\n    if (arr.empty()) return result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    if (arr.empty()) return result;\n    std::sort(arr.begin(), arr.end());\n    long max_count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (max_count < k) {\n            result.push_back(arr[i]);\n            max_count++;\n        } else {\n            break;\n        }\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; i++) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::vector<long> result;\n    if (arr.empty()) {\n        return result;\n    }\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (long i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    if (arr.empty()) {\n        return result;\n    }\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> res;\n    if (k == 0) return res;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; i++) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> res;\n    if (arr.empty()) return res;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; i++) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (long i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> result(k);\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    if (arr.empty()) {\n        return result;\n    }\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> ans;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; i++) {\n        ans.push_back(arr[i]);\n    }\n    return ans;",
    "    std::vector<long> result(k);\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> result(k);\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    if (k == 0) return result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    if (k == 0) return result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> result(k);\n    std::vector<long>::iterator it = result.begin();\n    std::vector<long>::iterator it_max = result.begin();\n    std::vector<long>::iterator it_min = result.begin();\n    std::vector<long>::iterator it_min_max = result.begin();\n    std::vector<long>::iterator it_max_min = result.begin();\n    std::vector<long>::iterator it_max_min_max = result.begin();\n    std::vector<long>::iterator it_min_min_max = result.begin();\n    std::vector<long>::iterator it_min_max_min = result.begin();\n    std::vector<long>::iterator it_max_min_min = result.begin();\n    std::vector<long>::iterator it_min_min_min = result.begin();\n    std::vector<long>::iterator it_min_min_min_max = result.begin();\n    std::vector<long>::iterator it_min_min_min_min = result.begin();\n    std::vector<long>::iterator it_min_min_min_min_max = result.begin();\n    std::vector<long>::iterator it_min_min_min_min_min = result.begin();\n    std::vector<long>::iterator it_min_min_min_min_min_max = result.begin();\n    std::vector<long>::iterator it_min_min_min_min_min_min = result.begin();\n    std::vector<long>::iterator it_min_min_min_min_min_min_max = result.begin();\n    std::vector<long>::iterator it_min_min_min_min_min_min_min = result.begin();\n    std::vector<long>::iterator it_min_min_min_min_min_min_min_max = result.begin();\n    std::vector<long>::iterator it_min_min_min_min_min_min_min_min = result.begin();\n    std::vector<long>::iterator it_min_min_min_min",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    if (k == 0) return result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result(k);\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> result;\n    if (arr.empty()) return result;\n    std::sort(arr.begin(), arr.end());\n    for (long i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    if (arr.empty()) return result;\n    std::sort(arr.begin(), arr.end());\n    result.push_back(arr[0]);\n    for (int i = 1; i < k; i++) {\n        if (arr[i] > result.back()) result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (long i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; i++) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    if (arr.size() < k) {\n        return result;\n    }\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> res;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res(k);\n    for (int i = 0; i < k; ++i) {\n        res[i] = arr[i];\n    }\n    return res;",
    "    std::vector<long> ans;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; i++) {\n        ans.push_back(arr[i]);\n    }\n    return ans;",
    "    std::vector<long> res;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (long i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (long i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result(k);\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result(k);\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; i++) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::vector<long> res;\n    if (arr.empty()) return res;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; i++) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (long i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    if (k > arr.size()) {\n        return result;\n    }\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; i++) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (long i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> res;\n    if (k == 0) return res;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> ans;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        ans.push_back(arr[i]);\n    }\n    return ans;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; i++) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; i++) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    if (arr.empty()) return result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    if (k == 0) return result;\n    std::sort(arr.begin(), arr.end());\n    result.push_back(arr[0]);\n    for (int i = 1; i < k; i++) {\n        if (arr[i] > arr[i - 1]) {\n            result.push_back(arr[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> res;\n    if (arr.empty()) return res;\n    std::sort(arr.begin(), arr.end());\n    for (long i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (long i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> ans(k);\n    for (int i = 0; i < k; ++i) {\n        ans[i] = arr[i];\n    }\n    return ans;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (long i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result(k);\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> res;\n    if (arr.empty()) return res;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> result;\n    if (k == 0) return result;\n    std::sort(arr.begin(), arr.end());\n    result.push_back(arr[0]);\n    for (int i = 1; i < k; i++) {\n        if (arr[i] > arr[i - 1]) {\n            result.push_back(arr[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    if (arr.empty()) return result;\n    std::sort(arr.begin(), arr.end());\n    for (long i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    if (arr.empty()) return result;\n    std::sort(arr.begin(), arr.end());\n    for (long i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res(k);\n    for (int i = 0; i < k; ++i) {\n        res[i] = arr[i];\n    }\n    return res;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; i++) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> ans;\n    for (int i = 0; i < k; ++i) {\n        ans.push_back(arr[i]);\n    }\n    return ans;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> result;\n    if (arr.empty()) {\n        return result;\n    }\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    if (arr.empty()) return result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; i++) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (long i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result(k);\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    if (arr.empty()) return result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    if (arr.empty()) return result;\n    std::sort(arr.begin(), arr.end());\n    result.push_back(arr[0]);\n    for (int i = 1; i < k; i++) {\n        if (arr[i] > result[i - 1]) {\n            result[i] = arr[i];\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    if (arr.empty()) return result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; i++) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (long i = 0; i < k; i++) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (long i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; i++) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::vector<long> result;\n    if (arr.empty()) return result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> result;\n    if (arr.empty()) return result;\n    std::sort(arr.begin(), arr.end());\n    result.push_back(arr[0]);\n    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] > arr[i-1]) {\n            result.push_back(arr[i]);\n        }\n        if (result.size() == k) break;\n    }\n    return result;",
    "    std::vector<long> result(k);\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res(k);\n    for (int i = 0; i < k; ++i) {\n        res[i] = arr[i];\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; ++i) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res(k);\n    for (int i = 0; i < k; i++) {\n        res[i] = arr[i];\n    }\n    return res;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (long i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; i++) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> result;\n    if (k == 0) {\n        return result;\n    }\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res(k);\n    for (int i = 0; i < k; ++i) {\n        res[i] = arr[i];\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res(k);\n    for (int i = 0; i < k; i++) {\n        res[i] = arr[i];\n    }\n    return res;",
    "    std::vector<long> result;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (long i = 0; i < k; i++) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::vector<long> res;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res(k);\n    for (int i = 0; i < k; i++) {\n        res[i] = arr[i];\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result(k);\n    for (int i = 0; i < k; i++) {\n        result[i] = arr[i];\n    }\n    return result;",
    "    std::vector<long> result(k);\n    std::vector<long> max_arr(arr);\n    std::sort(max_arr.begin(), max_arr.end());\n    for (int i = 0; i < k; ++i) {\n        result[i] = max_arr[i];\n    }\n    return result;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> result;\n    for (int i = 0; i < k; ++i) {\n        result.push_back(arr[i]);\n    }\n    return result;",
    "    std::vector<long> res;\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < k; i++) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> res;\n    for (int i = 0; i < k; ++i) {\n        res.push_back(arr[i]);\n    }\n    return res;",
    "    std::sort(arr.begin(), arr.end());\n    std::vector<long> ans;\n    for (int i = 0; i < k; ++i) {\n        ans.push_back(arr[i]);\n    }\n    return ans;"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
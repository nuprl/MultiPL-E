{
  "name": "HumanEval_152_compare",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two vectors of scores and guesses of equal length, where each index shows a match. \n// Return a vector of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n// [0,0,0,0,3,3]\n// >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n// [4,4,1,0,0,6]\nstd::vector<long> compare(std::vector<long> game, std::vector<long> guess) {\n",
  "tests": "}\nint main() {\n    auto candidate = compare;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)1})), (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)2, (long)-2}))) == (std::vector<long>({(long)0, (long)0, (long)0, (long)0, (long)3, (long)3})));\n    assert(candidate((std::vector<long>({(long)0, (long)0, (long)0, (long)0, (long)0, (long)0})), (std::vector<long>({(long)0, (long)0, (long)0, (long)0, (long)0, (long)0}))) == (std::vector<long>({(long)0, (long)0, (long)0, (long)0, (long)0, (long)0})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})), (std::vector<long>({(long)-1, (long)-2, (long)-3}))) == (std::vector<long>({(long)2, (long)4, (long)6})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)5})), (std::vector<long>({(long)-1, (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)2, (long)0, (long)0, (long)1})));\n}\n",
  "completions": [
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for(int i = 0; i < game.size(); ++i) {\n        if(game[i] == guess[i]) {\n            result[i] = 0;\n        } else {\n            result[i] = abs(game[i] - guess[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); ++i) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        if (game[i] == guess[i]) {\n            result[i] = 0;\n        } else {\n            result[i] = abs(game[i] - guess[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); ++i) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); ++i) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); ++i) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for(int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for(int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(guess[i] - game[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); ++i) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for(int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); ++i) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(guess[i] - game[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        if (game[i] == guess[i]) {\n            result[i] = 0;\n        } else {\n            result[i] = abs(game[i] - guess[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); ++i) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(guess[i] - game[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        if (game[i] == guess[i]) {\n            result[i] = 0;\n        } else {\n            result[i] = abs(game[i] - guess[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        if (game[i] == guess[i]) {\n            result[i] = 0;\n        } else {\n            result[i] = abs(game[i] - guess[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        if (game[i] == guess[i]) {\n            result[i] = 0;\n        } else {\n            result[i] = abs(game[i] - guess[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(guess[i] - game[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for(int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        if (game[i] == guess[i]) {\n            result[i] = 0;\n        } else {\n            result[i] = abs(game[i] - guess[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); ++i) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); ++i) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); ++i) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(guess[i] - game[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); ++i) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); ++i) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); ++i) {\n        if (guess[i] == game[i]) {\n            result[i] = 0;\n        } else {\n            result[i] = abs(guess[i] - game[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        if (game[i] == guess[i]) {\n            result[i] = 0;\n        } else {\n            result[i] = abs(game[i] - guess[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); ++i) {\n        if (guess[i] == game[i]) {\n            result[i] = 0;\n        } else {\n            result[i] = abs(guess[i] - game[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for(int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        if (game[i] == guess[i]) {\n            result[i] = 0;\n        } else {\n            result[i] = abs(game[i] - guess[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); ++i) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); ++i) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for(int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        if (game[i] == guess[i]) {\n            result[i] = 0;\n        } else {\n            result[i] = abs(game[i] - guess[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for(int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        if (game[i] == guess[i]) {\n            result[i] = 0;\n        } else {\n            result[i] = abs(game[i] - guess[i]);\n        }\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for(int i = 0; i < guess.size(); i++) {\n        result[i] = abs(guess[i] - game[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    assert(game.size() == guess.size());\n    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); ++i) {\n        result[i] = abs(guess[i] - game[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for(int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        if (game[i] == guess[i]) {\n            result[i] = 0;\n        } else {\n            result[i] = abs(game[i] - guess[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        if (game[i] == guess[i]) {\n            result[i] = 0;\n        } else {\n            result[i] = abs(game[i] - guess[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(guess.size());\n    for (int i = 0; i < guess.size(); i++) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result(game.size());\n    for (int i = 0; i < game.size(); ++i) {\n        result[i] = abs(game[i] - guess[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < game.size(); i++) {\n        result.push_back(abs(game[i] - guess[i]));\n    }\n    return result;"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
language: cpp
name: HumanEval_66_digitSum
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (auto i : s) {\n        if (i == 'A' || i == 'a') {\n            sum +=\
    \ 32;\n        } else {\n            sum += i;\n        }\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpkjzj_u9b: /tmp/tmpkjzj_u9b.cpp:33: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105508
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ // Your code here\n    auto it = s.begin();\n    while (it != s.end()) {\n \
    \       sum += *it++;\n        if (sum > '9')\n            sum += '0';\n     \
    \   if (it == s.end())\n            break;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp3rd93em2: /tmp/tmp3rd93em2.cpp:35: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105508
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // Your code here\n\
    \    int sum = 0;\n    for (int i = 0; i < s.size();i++) {\n        if (s[i]>='A'\
    \ && s[i] <= 'Z')\n            sum+=s[i]-'A'+1;\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"\
    )) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpwc0r1fj0: /tmp/tmpwc0r1fj0.cpp:31: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  if (s.empty())\n    return\
    \ 0;\n  long sum = 0;\n  for (int i = 0; i < s.length(); i++) {\n    sum += s[i]\
    \ - 'A' + 1;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpnf_qq5sm: /tmp/tmpnf_qq5sm.cpp:31: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    std::cout << \"digitSum(\\\
    \"'\" << s << \"'\\\")\" << std::endl;\n    long sum = 0;\n    for (char ch :\
    \ s) {\n        sum += ch >= 'a' && ch <= 'z' ? ch - 'a' + 10 : ch;\n    }\n \
    \   return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpiusp450b: /tmp/tmpiusp450b.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: 'digitSum("''''")

    digitSum("''abAB''")

    '
  timestamp: 1660105508
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  std::map<char, int> m;\n\
    \  for (char c : s) {\n    m[c]++;\n  }\n  long sum = 0;\n  for (const auto kvp\
    \ : m) {\n    if (kvp.second > 1) {\n      sum += kvp.first;\n    }\n  }\n  return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmps4flcy36: /tmp/tmps4flcy36.cpp:35: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105508
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  long ans = 0;\n  for\
    \ (int i = 0; i < s.length(); i++)\n    ans += (s.at(i) > '9' && s.at(i) < 'A')\
    \ ? s.at(i) - '9' : s.at(i) - 'A' + 10;\n  return ans;\n}\nint main() {\n    auto\
    \ candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpbe7f2di1: /tmp/tmpbe7f2di1.cpp:28: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105508
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for(int i = 0; i < s.size(); i++) {\n        if(i == s.size() - 1) {\n     \
    \       sum += s[i] - 'A';\n        } else {\n            sum += s[i] - 'A' +\
    \ s[i + 1] - 'A';\n        }\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpz4d6izwk: /tmp/tmpz4d6izwk.cpp:33: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  // code here\n  assert(s.size()\
    \ != 0);\n  int sum = 0;\n  for (int i = 0; i < s.size(); ++i) {\n    sum += s[i];\n\
    \  }\n  return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpjso82f_y: /tmp/tmpjso82f_y.cpp:21: long int digitSum(std::string): Assertion
    `s.size() != 0'' failed.

    '
  stdout: ''
  timestamp: 1660105508
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // code here\n    int\
    \ sum=0;\n    for(int i=0;i<s.size();i++){\n        sum+=s.at(i);\n    }\n   \
    \ return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpyt0f7wcy: /tmp/tmpyt0f7wcy.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105508
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  if (s.size() == 0) return\
    \ 0;\n  int res = 0;\n  for (int i = 0; i < s.size(); ++i) {\n    res = res *\
    \ 10 + static_cast<int>(s[i] - 'A');\n  }\n  return res;\n}\nint main() {\n  \
    \  auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpkwzn8tjg: /tmp/tmpkwzn8tjg.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    std::stack<long long\
    \ int> s;\n    for (auto &c: s) {\n        c.push_back(std::accumulate(s.begin(),\
    \ s.end(), 0, [&](long long int a, long long int b) -> long long int {\n     \
    \       int n = a - 'A' + b;\n            if (n < 0 || n > 26) return 0;\n   \
    \         return n + 'A';\n        }));\n    }\n    return s.top();\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe62yjn9o.cpp: In function \u2018long int digitSum(std::string)\u2019\
    :\n/tmp/tmpe62yjn9o.cpp:20:31: error: declaration of \u2018std::stack<long long\
    \ int> s\u2019 shadows a parameter\n   20 |     std::stack<long long int> s;\n\
    \      |                               ^\n/tmp/tmpe62yjn9o.cpp:21:19: error: no\
    \ matching function for call to \u2018begin(std::stack<long long int>&)\u2019\n\
    \   21 |     for (auto &c: s) {\n      |                   ^\nIn file included\
    \ from /usr/include/c++/9/bits/range_access.h:36,\n                 from /usr/include/c++/9/string:54,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpe62yjn9o.cpp:2:\n/usr/include/c++/9/initializer_list:89:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\
    \n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n\
    /usr/include/c++/9/initializer_list:89:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpe62yjn9o.cpp:21:19: note:   \u2018std::stack<long long int>\u2019\
    \ is not derived from \u2018std::initializer_list<_Tp>\u2019\n   21 |     for\
    \ (auto &c: s) {\n      |                   ^\nIn file included from /usr/include/c++/9/string:54,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++"
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n   long sum=0;\n   for(char\
    \ c: s)\n   {\n      if(c>='A'&&c<='Z')\n      {\n         sum+=(c-'A')*10;\n\
    \      }\n   }\n   return sum;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmp1mmepbw2: /tmp/tmp1mmepbw2.cpp:33: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105508
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  long ret = 0;\n  for\
    \ (int i = 0; i < s.size(); i++) {\n    if (s[i] >= 'A' && s[i] <= 'Z') {\n  \
    \    ret += s[i] - 'A' + 10;\n    } else {\n      ret += s[i];\n    }\n  }\n \
    \ return ret;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpj4o65rwv: /tmp/tmpj4o65rwv.cpp:33: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105508
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    assert(s.size() > 0);\n\
    \    long sum = 0;\n    for (auto &it : s) {\n        assert(it >= 'A' && it <=\
    \ 'Z');\n        sum += (it - 'A');\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmp2o5sxmg_: /tmp/tmp2o5sxmg_.cpp:20: long int digitSum(std::string): Assertion
    `s.size() > 0'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // Write your code\
    \ here\n    long sum = 0, i = 1;\n    while(i < s.size()){\n        if (s[i] >=\
    \ 'a' && s[i] <= 'z'){\n            sum += s[i] - 'a' + 1;\n        }\n      \
    \  i++;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpmo6_ie0g: /tmp/tmpmo6_ie0g.cpp:33: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105508
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  int sum = -1;\n  int\
    \ len = s.size();\n  assert(len >= 1);\n\n  // iterate over the string, adding\
    \ ASCII codes from 0 to 'a' to sum\n  for (int i = 0; i < len; i++) {\n    sum\
    \ += (s[i] + 'a');\n  }\n\n  return sum;\n}\nint main() {\n    auto candidate\
    \ = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpp36pl4sm: /tmp/tmpp36pl4sm.cpp:22: long int digitSum(std::string): Assertion
    `len >= 1'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'A' || s[i] == 'a')\
    \ {\n            sum += 32;\n        } else {\n            sum += s[i];\n    \
    \    }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmppex9pm_i: /tmp/tmppex9pm_i.cpp:33: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (char c : s)\n        sum += toupper(c);\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp33fzypud: /tmp/tmp33fzypud.cpp:28: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105508
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // Write your code\
    \ here\n    long sum = 0;\n    for (unsigned int i = 0; i < s.length(); i++) {\n\
    \        long val = s.at(i) - '0';\n        sum += val;\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpeaj2rzyx: /tmp/tmpeaj2rzyx.cpp:31: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  assert(s.size() > 0);\n\
    \  int res = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (s.at(i) > 'A'\
    \ || s.at(i) < 'a')\n      continue;\n    res += s.at(i);\n  }\n  return res;\n\
    }\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpa4s2xlq7: /tmp/tmpa4s2xlq7.cpp:20: long int digitSum(std::string): Assertion
    `s.size() > 0'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long ans = 0;\n   \
    \ int i;\n    for (i = 0; i <s.size() ; i++) {\n        if (s.at(i) >= 'A' &&\
    \ s.at(i) <= 'Z') {\n            ans += s.at(i) - 'A';\n        }\n    }\n   \
    \ return ans;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpo1ovffix: /tmp/tmpo1ovffix.cpp:32: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (auto val : s) {\n        sum += val - 'A' + 1;\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp_f6k4di7: /tmp/tmp_f6k4di7.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105508
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (char &c: s)\n        sum += (unsigned)(c-32); // or c+48 if you prefer\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpwjlhfp9j: /tmp/tmpwjlhfp9j.cpp:28: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  assert(s.size() > 0);\n\
    \  int sum = 0;\n  std::string subStr = s;\n  for (int i = 0; i < s.size(); i++)\
    \ {\n    sum += subStr[i]-'A'+1;\n  }\n  return sum;\n}\nint main() {\n    auto\
    \ candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpjylwnjiu: /tmp/tmpjylwnjiu.cpp:20: long int digitSum(std::string): Assertion
    `s.size() > 0'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // code goes here\n\
    \    return 0; // your code goes here\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpqyw4_uvs: /tmp/tmpqyw4_uvs.cpp:26: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  // Initialize sum and\
    \ counter\n  int sum = 0;\n  int count = 1;\n  // Iterate over each character\n\
    \  for (auto const &i : s) {\n    // If it's an upper case letter, add the counter\
    \ to sum and increment it\n    if (i >= 'a' && i <= 'z')\n      sum += count;\n\
    \    // Increment the counter\n    count++;\n  }\n  // Return the sum\n  return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpcwdf1hyi: /tmp/tmpcwdf1hyi.cpp:37: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    std::stack<long> st;\n\
    \    long sum = 0;\n    for (auto it = s.begin(); it != s.end(); ++it) {\n   \
    \     sum += std::isupper(*it) ? std::toupper(*it) - 'A' + 10 : std::tolower(*it)\
    \ - 'A';\n        st.push(*it);\n    }\n    while (!st.empty()) {\n        sum\
    \ += st.top();\n        st.pop();\n    }\n    return sum;\n}\nint main() {\n \
    \   auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmprzv5bjqy: /tmp/tmprzv5bjqy.cpp:35: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105508
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (auto c: s) {\n        sum += c - 'A' + 1;\n    }\n    return sum;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpdtit7pge: /tmp/tmpdtit7pge.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  // code here\n  long\
    \ sum = 0;\n  for (int i = 0; i < s.length(); ++i) {\n    if (s[i] == 'A' && i\
    \ <= 'Z') {\n      sum += (i - 'A' + 1);\n    }\n  }\n  return sum;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp53u42cm9: /tmp/tmp53u42cm9.cpp:32: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long ans = 0;\n   \
    \ for (auto i : s) ans += (i >= 'A') ? 10 + i - 'A' : i;\n    return ans;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpxq6swfna: /tmp/tmpxq6swfna.cpp:27: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (int i = 0; i < s.size(); ++i) {\n        if (s[i] >= 'A' && s[i] <= 'Z')\
    \ {\n            sum += s[i] - 'A' + 1;\n        } else if (s[i] >= 'a' && s[i]\
    \ <= 'z') {\n            sum += s[i] - 'a' + 1;\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpw3j2l_t4: /tmp/tmpw3j2l_t4.cpp:33: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  int sum = 0;\n  for (int\
    \ i = 0; i < s.length(); i++) {\n    sum += toupper(s[i]);\n  }\n  return sum;\n\
    }\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpmc6exss8: /tmp/tmpmc6exss8.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long ans = 0;\n   \
    \ for(char c: s) {\n        ans += c;\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpsw93z02t: /tmp/tmpsw93z02t.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // code here\n    long\
    \ sum = 0;\n    for (long i = 0; i<s.size();i++){\n        if(s[i]>='a' && s[i]<='z'){\n\
    \            sum += s[i]-'a'; //\n        }\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpwbwpbvog: /tmp/tmpwbwpbvog.cpp:32: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (auto & c : s) {\n        if ('A' <= c && c <= 'Z') {\n            sum +=\
    \ c - 'A' + 10;\n        }\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpxgx6ru0l: /tmp/tmpxgx6ru0l.cpp:31: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    std::cout << s << std::endl;\n\
    \    long sum = 0;\n    int len = s.length();\n    for (int i = 0; i < len; i++)\
    \ {\n        sum += (s[i]>=65 && s[i]<=90) ? s[i]-64 : s[i]-87;\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmppr0h27_p: /tmp/tmppr0h27_p.cpp:31: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: '

    abAB

    '
  timestamp: 1660105508
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum=0;\n    long\
    \ j=0,i=0;\n    for(i=0; i<s.length(); i++) {\n        j=s[i];\n        if(j>='a'\
    \ && j<='z') {\n            j=j-'a'+10;\n        }\n        sum=sum+j;\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpe3o2e97q: /tmp/tmpe3o2e97q.cpp:34: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // Write code here\n\
    \    long sum = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'A' && s[i] <= 'Z')\n            sum += s[i] - 'A' + 1;\n        else\n \
    \           sum += s[i] - 'a' + 1;\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmppns24wkr: /tmp/tmppns24wkr.cpp:33: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105508
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long result = 0;\n\
    \    for (int i = 0; i < s.size(); ++i) {\n        result += (toupper(s[i]) -\
    \ 'A');\n    }\n    return result;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmp5110cpg3: /tmp/tmp5110cpg3.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105508
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        sum += (s[i] == 'A' || s[i] == 'B'\
    \ || s[i] == 'C' || s[i] == 'D' || s[i] == 'E' || s[i] == 'F' || s[i] == 'G' ||\
    \ s[i] == 'H' || s[i] == 'I' || s[i] == 'J' || s[i] == 'K' || s[i] == 'L' || s[i]\
    \ == 'M' || s[i] == 'N' || s[i] == 'O' || s[i] == 'P' || s[i] == 'Q' || s[i] ==\
    \ 'R' || s[i] == 'S' || s[i] == 'T' || s[i] == 'U' || s[i] == 'V' || s[i] == 'W'\
    \ || s[i] == 'X' || s[i] == 'Y' || s[i] == 'Z')? s[i]-'A' : -1;\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp0_ytb8j6: /tmp/tmp0_ytb8j6.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0;\n    for\
    \ (int i = 0; i < s.length(); i++)\n        if (s[i] >= 'A' && s[i] <= 'Z')\n\
    \            sum += s[i] - 'A' + 1;\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpsr6z07xh: /tmp/tmpsr6z07xh.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ int len = s.size();\n    for (int i = 0; i < len; i++) {\n        if (s[i] <\
    \ 'A' || s[i] >= 'Z') {\n            sum += s[i] - 'A' + 10;\n        } else {\n\
    \            sum += s[i] - 'a' + 10;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"\
    )) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpxox04it1: /tmp/tmpxox04it1.cpp:34: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  long sum = 0;\n  for\
    \ (auto c : s) {\n    if (c == 'A') {\n      sum += 97;\n    } else if (c == 'a')\
    \ {\n      sum += 65;\n    } else {\n      sum += c;\n    }\n  }\n  return sum;\n\
    }\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpd58jf9ri: /tmp/tmpd58jf9ri.cpp:35: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    std::stack<char> stack;\n\
    \    for (char &c: s) {\n        if (std::isupper(c)) stack.push(c);\n       \
    \ if (stack.empty()) return 0;\n        c = stack.top();\n        stack.pop();\n\
    \    }\n    return stack.size();\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpp79b2u1w: /tmp/tmpp79b2u1w.cpp:32: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long ret = 0;\n   \
    \ for(char c : s) {\n        if(c>='A' && c<='Z')\n            ret = ret+c-'A';\n\
    \    }\n    return ret;\n}\nint main() {\n    auto candidate = digitSum;\n   \
    \ assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmppltm279e: /tmp/tmppltm279e.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105508
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (int i = 0; i < s.length(); i++)\n        if (s.at(i) >= 'A' && s.at(i)\
    \ <= 'Z')\n            sum += s.at(i) - 'A' + 1;\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpor6olngl: /tmp/tmpor6olngl.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105509
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  long sum = 0;\n  for\
    \ (int i = 0; i < s.length(); i++) {\n    sum += std::stoi(s, i + 1, std::strlen(s));\n\
    \  }\n  return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi5o5c5ym.cpp: In function \u2018long int digitSum(std::string)\u2019\
    :\n/tmp/tmpi5o5c5ym.cpp:22:44: error: cannot convert \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const char*\u2019\n \
    \  22 |     sum += std::stoi(s, i + 1, std::strlen(s));\n      |             \
    \                               ^\n      |                                   \
    \         |\n      |                                            std::string {aka\
    \ std::__cxx11::basic_string<char>}\nIn file included from /usr/include/c++/9/cstring:42,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:48,\n\
    \                 from /tmp/tmpi5o5c5ym.cpp:2:\n/usr/include/string.h:385:35:\
    \ note:   initializing argument 1 of \u2018size_t strlen(const char*)\u2019\n\
    \  385 | extern size_t strlen (const char *__s)\n      |                     \
    \  ~~~~~~~~~~~~^~~\n"
  stdout: ''
  timestamp: 1660105509
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long ans = 0;\n   \
    \ for (int i = 0; i < s.size(); i++) {\n        ans += std::toupper(s[i]) - 'A'\
    \ + 1;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmprx2s3d1z: /tmp/tmprx2s3d1z.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    if (s.size() == 0)\n\
    \        return 0;\n    int sum = 0;\n    for (int i = 0; i < s.size(); i++)\n\
    \    {\n        sum += s.at(i) - 'A' + 1;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp2y_sit5n: /tmp/tmp2y_sit5n.cpp:32: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (auto i : s) {\n        sum += i;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmprgdg8l6r: /tmp/tmprgdg8l6r.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n\tassert(s.length() > 0);\n\
    \tlong sum = 0;\n\tfor (char c : s) {\n\t\tsum += c - 'a' + 1;\n\t}\n\treturn\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpnlq5u9bn: /tmp/tmpnlq5u9bn.cpp:20: long int digitSum(std::string): Assertion
    `s.length() > 0'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // Write your code\
    \ here\n    long ret=0;\n    for(int i=0;i<s.length();i++)\n    {\n        if(isupper(s[i]))\n\
    \            ret+=(int)s[i];\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660105510
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0, sum =\
    \ 0;\n    for (char c : s) {\n        sum += (int)c;\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfdpwrbnp.cpp: In function \u2018long int digitSum(std::string)\u2019\
    :\n/tmp/tmpfdpwrbnp.cpp:20:18: error: redeclaration of \u2018int sum\u2019\n \
    \  20 |     int sum = 0, sum = 0;\n      |                  ^~~\n/tmp/tmpfdpwrbnp.cpp:20:9:\
    \ note: \u2018int sum\u2019 previously declared here\n   20 |     int sum = 0,\
    \ sum = 0;\n      |         ^~~\n"
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  int n = s.size();\n \
    \ long ans = 0;\n  for (int i = 0; i < n; i++) {\n    ans += s[i];\n  }\n  return\
    \ ans;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp92q3zn_g: /tmp/tmp92q3zn_g.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  long long ans = 0;\n\
    \  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == 'A' || s[i] == 'a'\
    \ || s[i] == 'X' || s[i] == 'x') {\n      ans += s[i] - 'A' + 10;\n    }\n  }\n\
    \  return ans;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpnfcv_8zd: /tmp/tmpnfcv_8zd.cpp:31: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n\t// Write your code here\n\
    \tlong sum = 0;\n\tfor (auto i : s) {\n\t\tif (i > 'Z') {\n\t\t\tsum += i - 'A'\
    \ + 1;\n\t\t} else {\n\t\t\tsum += (i - 'A') - 10;\n\t\t}\n\t}\n\treturn sum;\n\
    }\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpo0ki2ag6: /tmp/tmpo0ki2ag6.cpp:34: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // code here\n    return\
    \ 0 ;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpmql6lwrn: /tmp/tmpmql6lwrn.cpp:26: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  assert(s.size() > 0);\n\
    \  // Initialize sum as 0.\n  long sum = 0;\n  // Convert the string into an array\
    \ of characters.\n  std::string digits(s);\n  // Convert each character of the\
    \ string into an integer value between '0' and '9'.\n  for (int i = 0; i < s.size();\
    \ i++) {\n    assert(digits[i] >= '0' && digits[i] <= '9');\n    sum = sum * 10\
    \ + (digits[i] - '0');\n  }\n  return sum;\n}\nint main() {\n    auto candidate\
    \ = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpbvtgfsdp: /tmp/tmpbvtgfsdp.cpp:20: long int digitSum(std::string): Assertion
    `s.size() > 0'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (char c: s) {\n        sum += (c - 'A' + 1);\n    }\n    return sum;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp1on4438s: /tmp/tmp1on4438s.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105511
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (auto c : s) {\n        sum += toupper(c);\n    }\n    return sum;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp7ado5rmf: /tmp/tmp7ado5rmf.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105511
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  long sum = 0;\n  for\
    \ (int i = 0; i < s.size(); i++) {\n    sum += (s[i] - 'A');\n  }\n  return sum;\n\
    }\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpa5qjsd7p: /tmp/tmpa5qjsd7p.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (auto i : s) {\n        if (i > 'A' && i < 'Z')\n            sum += (i -\
    \ 'A');\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmp09du9y3d: /tmp/tmp09du9y3d.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  long sum = 0;\n  for\
    \ (auto &ch : s)\n    if (ch >= 'A' && ch <= 'Z')\n      sum += ch - 'A' + 10;\n\
    \  return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpwn17o7ys: /tmp/tmpwn17o7ys.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105511
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0;\n    int\
    \ cur;\n    for (int i = 0; i < s.size(); i++) {\n        sum = sum + s[i];\n\
    \    }\n    for (cur = sum; cur > 0; cur--) {\n        sum++;\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpsqfsbgit: /tmp/tmpsqfsbgit.cpp:33: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  // Write code here\n\
    \  long sum = 0;\n  for(auto c : s)\n  {\n    sum += (unsigned char)c;\n  }\n\
    \  return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpms34mr1z: /tmp/tmpms34mr1z.cpp:31: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // code here\n    long\
    \ long ans = 0;\n    for (long i = 0; i < s.length(); i++)\n    {\n        if\
    \ (s.at(i) >= 'A' && s.at(i) <= 'Z')\n        {\n            ans += (s.at(i) -\
    \ 'A' + 10);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpstehc69j: /tmp/tmpstehc69j.cpp:34: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (s[i] >= 'A' && s[i] <= 'Z')\
    \ {\n            sum += (s[i] - 'A' + 1);\n        } else if (s[i] >= 'a' && s[i]\
    \ <= 'z') {\n            sum += (s[i] - 'a' + 1);\n        } else if (s[i] >=\
    \ '0' && s[i] <= '9') {\n            sum += (s[i] - '0');\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp8u20mrru: /tmp/tmp8u20mrru.cpp:35: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  std::sort(s.begin(),\
    \ s.end());\n  long sum = 0;\n  for (auto c: s) {\n    sum += std::strlen(std::to_string(c));\n\
    \  }\n  return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3o8w44hk.cpp: In function \u2018long int digitSum(std::string)\u2019\
    :\n/tmp/tmp3o8w44hk.cpp:23:38: error: cannot convert \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018const char*\u2019\n \
    \  23 |     sum += std::strlen(std::to_string(c));\n      |                  \
    \      ~~~~~~~~~~~~~~^~~\n      |                                      |\n   \
    \   |                                      std::string {aka std::__cxx11::basic_string<char>}\n\
    In file included from /usr/include/c++/9/cstring:42,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:48,\n\
    \                 from /tmp/tmp3o8w44hk.cpp:2:\n/usr/include/string.h:385:35:\
    \ note:   initializing argument 1 of \u2018size_t strlen(const char*)\u2019\n\
    \  385 | extern size_t strlen (const char *__s)\n      |                     \
    \  ~~~~~~~~~~~~^~~\n"
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long ans = 0;\n   \
    \ for(int i=0;i<s.length();++i){\n        ans += s.at(i) - 'A' + 1;\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpdj0539a4: /tmp/tmpdj0539a4.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105511
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // Write code here\n\
    \    long result = 0;\n    for (const auto& char : s) {\n        if (char == 'A')\
    \ {\n            result += 48;\n        } else if (char == 'B') {\n          \
    \  result += 49;\n        } else if (char == 'C') {\n            result += 50;\n\
    \        } else if (char == 'D') {\n            result += 51;\n        } else\
    \ if (char == 'E') {\n            result += 52;\n        } else if (char == 'F')\
    \ {\n            result += 53;\n        } else if (char == 'G') {\n          \
    \  result += 54;\n        } else if (char == 'H') {\n            result += 55;\n\
    \        } else if (char == 'I') {\n            result += 56;\n        } else\
    \ if (char == 'J') {\n            result += 57;\n        } else if (char == 'K')\
    \ {\n            result += 58;\n        } else if (char == 'L') {\n          \
    \  result += 59;\n        } else if (char == 'M') {\n            result += 60;\n\
    \        } else if (char == 'N') {\n            result += 61;\n        } else\
    \ if (char == 'O') {\n            result += 62;\n        } else if (char == 'P')\
    \ {\n            result += 63;\n        } else if (char == 'Q') {\n          \
    \  result += 64;\n        } else if (char == 'R') {\n            result += 65;\n\
    \        } else if (char == 'S') {\n            result += 66;\n        } else\
    \ if (char == 'T') {\n            result += 67;\n        } else if (char == 'U')\
    \ {\n            result += 68;\n        } else if (char == 'V') {\n          \
    \  result += 69;\n        } else if (char == 'W') {\n            result += 70;\n\
    \        } else if (char == 'X') {\n            result += 71;\n        } else\
    \ if (char == 'Y') {\n            result += 72;\n        } else if (char == 'Z')\
    \ {\n            result += 73;\n        } else if (char == 'a') {\n          \
    \  result += 97;\n        } else if (char == 'b') {\n            result += 98;\n\
    \        } else if (char == 'c') {\n            result += 99;\n        } else\
    \ if (char == 'd') {\n            result += 100;\n        } else if (char == 'e')\
    \ {\n            result += 101;\n        } else if (char == 'f') {\n         \
    \   result += 102;\n        } else if (char == 'g') {\n            result += 103;\n\
    \        } else if (char == 'h') {\n            result += 104;\n        } else\
    \ if (char == 'i') {\n            result += 105;\n        } else if (char == 'j')\
    \ {\n            result += 106;\n        } else if (char == 'k') {\n         \
    \   result += 107;\n        } else if (char == 'l') {\n            result += 108;\n\
    \        } else if (char == 'm') {\n            result += 109;\n        } else\
    \ if (char == 'n') {\n            result += 110;\n        } else if (char == 'o')\
    \ {\n            result += 111;\n        } else if (char == 'p') {\n         \
    \   result += 112;\n        } else if (char == 'q') {\n            result += 113;\n\
    \        } else if (char == 'r') {\n            result += 114;\n        } else\
    \ if (char == 's') {\n            result += 115;\n        } else if (\n}\nint\
    \ main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"\
    )) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1wxqd033.cpp: In function \u2018long int digitSum(std::string)\u2019\
    :\n/tmp/tmp1wxqd033.cpp:22:22: error: expected unqualified-id before \u2018char\u2019\
    \n   22 |     for (const auto& char : s) {\n      |                      ^~~~\n\
    /tmp/tmp1wxqd033.cpp:22:21: error: expected \u2018;\u2019 before \u2018char\u2019\
    \n   22 |     for (const auto& char : s) {\n      |                     ^~~~~\n\
    \      |                     ;\n/tmp/tmp1wxqd033.cpp:22:27: error: expected unqualified-id\
    \ before \u2018:\u2019 token\n   22 |     for (const auto& char : s) {\n     \
    \ |                           ^\n/tmp/tmp1wxqd033.cpp:22:30: error: expected \u2018\
    ;\u2019 before \u2018)\u2019 token\n   22 |     for (const auto& char : s) {\n\
    \      |                              ^\n      |                             \
    \ ;\n/tmp/tmp1wxqd033.cpp:23:18: error: expected unqualified-id before \u2018\
    ==\u2019 token\n   23 |         if (char == 'A') {\n      |                  ^~\n\
    /tmp/tmp1wxqd033.cpp:25:25: error: expected unqualified-id before \u2018==\u2019\
    \ token\n   25 |         } else if (char == 'B') {\n      |                  \
    \       ^~\n/tmp/tmp1wxqd033.cpp:27:25: error: expected unqualified-id before\
    \ \u2018==\u2019 token\n   27 |         } else if (char == 'C') {\n      |   \
    \                      ^~\n/tmp/tmp1wxqd033.cpp:29:25: error: expected unqualified-id\
    \ before \u2018==\u2019 token\n   29 |         } else if (char == 'D') {\n   \
    \   |                         ^~\n/tmp/tmp1wxqd033.cpp:31:25: error: expected\
    \ unqualified-id before \u2018==\u2019 token\n   31 |         } else if (char\
    \ == 'E') {\n      |                         ^~\n/tmp/tmp1wxqd033.cpp:33:25: error:\
    \ expected unqualified-id before \u2018==\u2019 token\n   33 |         } else\
    \ if (char == 'F') {\n      |                         ^~\n/tmp/tmp1wxqd033.cpp:35:25:\
    \ error: expected unqualified-id before \u2018==\u2019 token\n   35 |        \
    \ } else if (char == 'G') {\n      |                         ^~\n/tmp/tmp1wxqd033.cpp:37:25:\
    \ error: expected unqualified-id before \u2018==\u2019 token\n   37 |        \
    \ } else if (char == 'H') {\n      |                         ^~\n/tmp/tmp1wxqd033.cpp:39:25:\
    \ error: expected unqual"
  stdout: ''
  timestamp: 1660105509
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0, counter\
    \ = 0;\n    for (auto val : s) {\n        sum += val;\n        counter++;\n  \
    \  }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpq493s2p8: /tmp/tmpq493s2p8.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105511
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  if (s.size() == 0) {\n\
    \    return 0;\n  }\n  int res = 0;\n  for (int i = 0; i < s.size(); i++) {\n\
    \    res += s[i];\n  }\n  return res;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpevp_hlpo: /tmp/tmpevp_hlpo.cpp:32: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    assert(s.size() >=\
    \ 2);\n    long sum = 0;\n    for (auto c : s) {\n        sum += std::stoll(c);\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n   \
    \ assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr0qdmy41.cpp: In function \u2018long int digitSum(std::string)\u2019\
    :\n/tmp/tmpr0qdmy41.cpp:23:28: error: no matching function for call to \u2018\
    stoll(char&)\u2019\n   23 |         sum += std::stoll(c);\n      |           \
    \                 ^\nIn file included from /usr/include/c++/9/string:55,\n   \
    \              from /usr/include/c++/9/bits/locale_classes.h:40,\n           \
    \      from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpr0qdmy41.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6521:3:\
    \ note: candidate: \u2018long long int std::__cxx11::stoll(const string&, std::size_t*,\
    \ int)\u2019\n 6521 |   stoll(const string& __str, size_t* __idx = 0, int __base\
    \ = 10)\n      |   ^~~~~\n/usr/include/c++/9/bits/basic_string.h:6521:23: note:\
    \   no known conversion for argument 1 from \u2018char\u2019 to \u2018const string&\u2019\
    \ {aka \u2018const std::__cxx11::basic_string<char>&\u2019}\n 6521 |   stoll(const\
    \ string& __str, size_t* __idx = 0, int __base = 10)\n      |         ~~~~~~~~~~~~~~^~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6627:3: note: candidate: \u2018long long\
    \ int std::__cxx11::stoll(const wstring&, std::size_t*, int)\u2019\n 6627 |  \
    \ stoll(const wstring& __str, size_t* __idx = 0, int __base = 10)\n      |   ^~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:6627:24: note:   no known conversion for\
    \ argument 1 from \u2018char\u2019 to \u2018const wstring&\u2019 {aka \u2018const\
    \ std::__cxx11::basic_string<wchar_t>&\u2019}\n 6627 |   stoll(const wstring&\
    \ __str, size_t* __idx = 0, int __base = 10)\n      |         ~~~~~~~~~~~~~~~^~~~~\n"
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n        long sum = 0;\n\
    \        // Loop through the string\n        for (auto &i : s) {\n           \
    \     // Loop through the ASCII codes\n                for (int j = 0; j < 64;\
    \ j++) {\n                        // If the digit is less than the ASCII code\
    \ then add it to the sum\n                        if (i >= 'A' && i <= 'Z') {\n\
    \                                sum += j;\n                        }\n      \
    \          }\n        }\n        return sum;\n}\nint main() {\n    auto candidate\
    \ = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmp251qxqep: /tmp/tmp251qxqep.cpp:36: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0;\n    for\
    \ (int i = 0; i < s.size(); i++) {\n        sum = sum + s[i];\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpf7tihit4: /tmp/tmpf7tihit4.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // code here\n    long\
    \ sum = 0;\n    for (int i = 0; i < s.length(); i++) {\n        sum += (s[i] -\
    \ 'A') - 64;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmp1wlgovkj: /tmp/tmp1wlgovkj.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (auto &character : s) {\n        sum += (character > 64) ? (character -\
    \ 55) : 0;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpgu54yso4: /tmp/tmpgu54yso4.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long total = 0;\n \
    \   for (int i = 0; i < s.length(); i++) {\n        total += toupper(s[i]);\n\
    \    }\n    return total;\n}\nint main() {\n    auto candidate = digitSum;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpwr05m86e: /tmp/tmpwr05m86e.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105511
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (size_t i = 0; i < s.size(); i++) {\n        if ('a' <= s[i] && s[i] <=\
    \ 'z') {\n            sum += s[i] - 'a';\n        } else {\n            break;\n\
    \        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpi2nobqtb: /tmp/tmpi2nobqtb.cpp:33: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long ret = 0;\n   \
    \ for(auto c: s) {\n        if(c >= 'a' && c <= 'z') {\n            c -= ('a'\
    \ - 'A');\n            ret += c;\n        } else {\n            return -1;\n \
    \       }\n    }\n    return ret;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmph2iavund: /tmp/tmph2iavund.cpp:34: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0;\n    for\
    \ (auto i : s) {\n        if (i >= 'A' && i <= 'Z') {\n            sum += i -\
    \ 'A';\n        } else {\n            sum += i-'0';\n        }\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp7ffd1ytt: /tmp/tmp7ffd1ytt.cpp:33: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105511
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  // Your code here\n \
    \ long sum = 0;\n  long len = s.length();\n  for(int i=0;i<len;i++){\n    if(s[i]>='A'&&s[i]<='Z'){\n\
    \      sum = sum+s[i] - 'A';\n    }\n  }\n  return sum;\n}\nint main() {\n   \
    \ auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpd604973x: /tmp/tmpd604973x.cpp:33: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  if (s.length() == 0)\
    \ {\n    return 0;\n  }\n  int sum = 0;\n  int len = s.length();\n  int pos =\
    \ 0;\n  while (pos < len) {\n    char c = s[pos];\n    sum += c;\n    if (c >=\
    \ 'A' && c <= 'Z') {\n      pos++;\n    } else {\n      pos += 2;\n    }\n  }\n\
    \  return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpzm8sugpt: /tmp/tmpzm8sugpt.cpp:40: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (int i = 0; s[i] != '\\0'; i++) {\n        if (s[i]>='A' && s[i]<='Z') {\n\
    \            sum += (s[i]-'A');\n        }\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmppxz_9jkm: /tmp/tmppxz_9jkm.cpp:31: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105511
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // Your code here\n\
    \    assert(s.size() <= 100);\n    long total = 0;\n    int len = s.size();\n\
    \    for (int i = 0; i < len; i++)\n    {\n        if (s[i] >= 'a' && s[i] <=\
    \ 'z')\n        {\n            total += s[i] - 'a' + 10;\n        }\n    }\n \
    \   return total;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp3xcv7avt: /tmp/tmp3xcv7avt.cpp:36: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105511
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // Write your code\
    \ here\n    return s.length();\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmplf6vzc_3: /tmp/tmplf6vzc_3.cpp:26: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105511
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  long sum = 0;\n  for\
    \ (int i = 0; i < s.length(); i++) {\n    sum += std::pow(26, s.size() - i - 1)\
    \ * std::stoi(s.substr(i, 1)) - 64;\n  }\n  return sum;\n}\nint main() {\n   \
    \ auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::invalid_argument'\n\
    \  what():  stoi\n"
  stdout: ''
  timestamp: 1660105510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // Your code here\n\
    \    long sum = 0;\n    for (auto it = s.begin(); it != s.end(); ++it) {\n   \
    \     sum += *it;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpf2ekfnht: /tmp/tmpf2ekfnht.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105511
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (char &c: s) {\n        if (c >= 'A' && c <= 'Z')\n            sum += (c\
    \ - 'A' + 1);\n        else if (c >= 'a' && c <= 'z')\n            sum += (c -\
    \ 'a' + 1);\n        else\n            sum += 0;\n    }\n    return sum;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpsxynnvzo: /tmp/tmpsxynnvzo.cpp:34: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105511
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (char c : s) {\n        sum += c;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpq_znhhzo: /tmp/tmpq_znhhzo.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105511
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  int sum = 0;\n  for (int\
    \ i = 0; i < s.length(); i++) {\n    if (s.at(i) > 64)\n      sum += s.at(i) -\
    \ 65;\n    else\n      sum += s.at(i) - 97;\n  }\n  return sum;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp4oo3sv3j: /tmp/tmp4oo3sv3j.cpp:32: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105511
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  // Write your code here\n\
    \  long sum = 0;\n  for (int i = 0; i <= s.size(); i++) {\n    if (s[i] == 'A'\
    \ && s[i - 1] == 'a') {\n      sum += 32;\n    }\n    if (s[i] == 'a') {\n   \
    \   sum += 'a' - 'A';\n    }\n  }\n  return sum;\n}\nint main() {\n    auto candidate\
    \ = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpzzsb46_o: /tmp/tmpzzsb46_o.cpp:35: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105512
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long result = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i].isupper()) {\n \
    \           result += s[i].code();\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptr5ipmco.cpp: In function \u2018long int digitSum(std::string)\u2019\
    :\n/tmp/tmptr5ipmco.cpp:22:18: error: request for member \u2018isupper\u2019 in\
    \ \u2018s.std::__cxx11::basic_string<char>::operator[](((std::__cxx11::basic_string<char>::size_type)i))\u2019\
    , which is of non-class type \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   22 |         if (s[i].isupper())\
    \ {\n      |                  ^~~~~~~\n/tmp/tmptr5ipmco.cpp:23:28: error: request\
    \ for member \u2018code\u2019 in \u2018s.std::__cxx11::basic_string<char>::operator[](((std::__cxx11::basic_string<char>::size_type)i))\u2019\
    , which is of non-class type \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019}\n   23 |             result +=\
    \ s[i].code();\n      |                            ^~~~\n"
  stdout: ''
  timestamp: 1660105512
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0;\n    for\
    \ (auto c : s) {\n        sum += c - 'A' + 1;\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"\
    )) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp5dhe659s: /tmp/tmp5dhe659s.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105512
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  int n = s.length();\n\
    \  long s = 0;\n  for (int i = 0; i < n; i++) {\n    s += s[i] - 'A' + 1;\n  }\n\
    \  return s;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm4lrc41o.cpp: In function \u2018long int digitSum(std::string)\u2019\
    :\n/tmp/tmpm4lrc41o.cpp:21:8: error: declaration of \u2018long int s\u2019 shadows\
    \ a parameter\n   21 |   long s = 0;\n      |        ^\n/tmp/tmpm4lrc41o.cpp:23:13:\
    \ error: invalid types \u2018long int[int]\u2019 for array subscript\n   23 |\
    \     s += s[i] - 'A' + 1;\n      |             ^\n"
  stdout: ''
  timestamp: 1660105512
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  assert(s.size() == 1);\n\
    \  long sum = 0;\n  for (int i = 0; i < s.size(); i++) {\n    sum += s.at(i) -\
    \ 'A' + 1;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpludqbfr8: /tmp/tmpludqbfr8.cpp:20: long int digitSum(std::string): Assertion
    `s.size() == 1'' failed.

    '
  stdout: ''
  timestamp: 1660105512
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (char c: s) {\n        sum += c > 'z' ? c - 'a' + 26 : c - 'A' + 10;\n \
    \   }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp8p3diq36: /tmp/tmp8p3diq36.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (long i = 0; i < s.length(); i++) {\n        if (std::isupper(s[i])) {\n\
    \            sum += s[i];\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660105512
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  // Your code goes here\n\
    \  long sum=0;\n  for(int i=0;i<s.length();i++){\n    sum+=s[i];\n  }\n  return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp829yq7os: /tmp/tmp829yq7os.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0;\n    int\
    \ length = s.size();\n    for (int i = 0; i < length; i++) {\n        sum += (s[i]\
    \ - 'A' + 1);\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmp21xlq2gr: /tmp/tmp21xlq2gr.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // code here\n}\nint\
    \ main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"\
    )) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp91k3oqfv: /tmp/tmp91k3oqfv.cpp:24: int main(): Assertion `candidate((""))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0;\n    for\
    \ (char c : s) {\n        if (isupper(c)) sum += (c - 'A');\n    }\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp9958wpek: /tmp/tmp9958wpek.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n\tlong sum = 0;\n\tint\
    \ len = s.length();\n\tfor (int i = 0; i < len; i++) {\n\t\tsum += (int) s[i];\n\
    \t}\n\treturn sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp25zypxev: /tmp/tmp25zypxev.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long result = 0;\n\
    \    for(long i = 0; i < s.length(); i++) {\n        result += (int) s[i];\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = digitSum;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpq143ummf: /tmp/tmpq143ummf.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long res = 0;\n   \
    \ for (auto c : s) {\n        res = res + c;\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpt9rqfcwa: /tmp/tmpt9rqfcwa.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // code here\n    long\
    \ sum = 0;\n    for (char c : s) {\n        sum += c;\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpvx66385w: /tmp/tmpvx66385w.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  assert(s.size() == 1);\n\
    \  long sum = 0;\n  for (char c : s)\n    sum += (unsigned)c;\n  return sum;\n\
    }\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpw8u4czc7: /tmp/tmpw8u4czc7.cpp:20: long int digitSum(std::string): Assertion
    `s.size() == 1'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  assert(s.size() != 0);\n\
    \  // Complete the code here\n  long sum = 0;\n  for (int i = 0; i < s.size();\
    \ i++) {\n    if (s[i] == 'A' || s[i] == 'a') {\n      sum += 32;\n    }\n  }\n\
    \  return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp1u13ww4p: /tmp/tmp1u13ww4p.cpp:20: long int digitSum(std::string): Assertion
    `s.size() != 0'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long result = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (i >= s.length() || s[i]\
    \ < 'A' || s[i] > 'Z') {\n            continue;\n        }\n        result +=\
    \ s[i] - 'A' + 10;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpj0edyacg: /tmp/tmpj0edyacg.cpp:32: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  int sum = 0;\n  for (char\
    \ c : s) {\n    if (c >= 'A' && c <= 'Z')\n      sum += (c - 'A' + 10);\n  }\n\
    \  return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpuyh_ppwq: /tmp/tmpuyh_ppwq.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (char ch : s) {\n        sum += ch - 'a' + 10;\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpk8_v1q37: /tmp/tmpk8_v1q37.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  long sum = 0;\n  assert(s.size()\
    \ > 0);\n  std::string ss = s;\n  for (int i = 0; i < ss.size(); i++) {\n    sum\
    \ = sum + ss.at(i) - 'A' + 1;\n  }\n  return sum;\n}\nint main() {\n    auto candidate\
    \ = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpz1a0_ebd: /tmp/tmpz1a0_ebd.cpp:21: long int digitSum(std::string): Assertion
    `s.size() > 0'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  int sum = 0;\n  for (int\
    \ i = 0; i < s.length(); i++) {\n    if (s[i] == 'A' || s[i] == 'a') sum += 'A'\
    \ - 'a';\n    else if (s[i] == 'B' || s[i] == 'b') sum += 'B' - 'a';\n    else\
    \ if (s[i] == 'C' || s[i] == 'c') sum += 'C' - 'a';\n    else if (s[i] == 'D'\
    \ || s[i] == 'd') sum += 'D' - 'a';\n    else if (s[i] == 'E' || s[i] == 'e')\
    \ sum += 'E' - 'a';\n    else if (s[i] == 'F' || s[i] == 'f') sum += 'F' - 'a';\n\
    \    else if (s[i] == 'G' || s[i] == 'g') sum += 'G' - 'a';\n    else if (s[i]\
    \ == 'H' || s[i] == 'h') sum += 'H' - 'a';\n    else if (s[i] == 'I' || s[i] ==\
    \ 'i') sum += 'I' - 'a';\n    else if (s[i] == 'J' || s[i] == 'j') sum += 'J'\
    \ - 'a';\n    else if (s[i] == 'K' || s[i] == 'k') sum += 'K' - 'a';\n    else\
    \ if (s[i] == 'L' || s[i] == 'l') sum += 'L' - 'a';\n    else if (s[i] == 'M'\
    \ || s[i] == 'm') sum += 'M' - 'a';\n    else if (s[i] == 'N' || s[i] == 'n')\
    \ sum += 'N' - 'a';\n    else if (s[i] == 'O' || s[i] == 'o') sum += 'O' - 'a';\n\
    \    else if (s[i] == 'P' || s[i] == 'p') sum += 'P' - 'a';\n    else if (s[i]\
    \ == 'Q' || s[i] == 'q') sum += 'Q' - 'a';\n    else if (s[i] == 'R' || s[i] ==\
    \ 'r') sum += 'R' - 'a';\n    else if (s[i] == 'S' || s[i] == 's') sum += 'S'\
    \ - 'a';\n    else if (s[i] == 'T' || s[i] == 't') sum += 'T' - 'a';\n    else\
    \ if (s[i] == 'U' || s[i] == 'u') sum += 'U' - 'a';\n    else if (s[i] == 'V'\
    \ || s[i] == 'v') sum += 'V' - 'a';\n    else if (s[i] == 'W' || s[i] == 'w')\
    \ sum += 'W' - 'a';\n    else if (s[i] == 'X' || s[i] == 'x') sum += 'X' - 'a';\n\
    \    else if (s[i] == 'Y' || s[i] == 'y') sum += 'Y' - 'a';\n    else if (s[i]\
    \ == 'Z' || s[i] == 'z') sum += 'Z' - 'a';\n  }\n  return sum;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpg8drwyhf: /tmp/tmpg8drwyhf.cpp:54: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (char c : s) {\n        sum += (c >= 'A' && c <= 'Z') ? (c - 'A' + 10) :\
    \ (c - 'a' + 10);\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmp8x2_pl_c: /tmp/tmp8x2_pl_c.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105466
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long result = 0;\n\
    \    for (char c: s) {\n        if (c >= '0' && c <= '9') {\n            result\
    \ += c - '0';\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpx0bgyrcy: /tmp/tmpx0bgyrcy.cpp:31: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ int len = s.length();\n    for (int i = 0; i < len; i++) {\n        if (s[i]\
    \ == ' ') {\n            sum++;\n            continue;\n        }\n        int\
    \ j = i; j = j + 1; // j is index from beginning of string, NOT end of string\n\
    \        while (j < len) {\n            int temp = s[j] - 'A';\n            sum\
    \ += temp;\n            j = j + 1;\n        }\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"\
    )) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmph54vd6mc: /tmp/tmph54vd6mc.cpp:39: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // Your code here\n\
    \    long sum=0;\n    for(int i=0;i<s.size();i++)\n    {\n        if(s[i]>='a'\
    \ && s[i]<='z')\n        {\n            sum+=s[i] - 'a' + '0';\n        }\n  \
    \  }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpxjb1cr3f: /tmp/tmpxjb1cr3f.cpp:34: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (std::size_t i = 0; i < s.size(); i++) {\n        if (s[i] >= 'a' && s[i]\
    \ <= 'z') sum += (s[i] - 'a' + 1);\n        else sum += (s[i] - 'A' + 1);\n  \
    \  }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp7a32ikaw: /tmp/tmp7a32ikaw.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (char &i : s) {\n        if (i > 'z' && i < 'A') {\n            sum += i\
    \ - 'A' + 1;\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmp83suo9a7: /tmp/tmp83suo9a7.cpp:31: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0;\n    for\
    \ (int i = 0; i < (int) s.size(); i++) {\n        sum += toupper(s[i]);\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp6m47otmr: /tmp/tmp6m47otmr.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  long sum = 0;\n  assert(s.size()\
    \ > 1);\n  for(int i = 0; i < s.size() - 1; i++) {\n    sum += getCharUpper(s[i]);\n\
    \  }\n  sum += getCharUpper(s[s.size() - 1]);\n  return sum;\n}\nint main() {\n\
    \    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv9pkp3ck.cpp: In function \u2018long int digitSum(std::string)\u2019\
    :\n/tmp/tmpv9pkp3ck.cpp:23:12: error: \u2018getCharUpper\u2019 was not declared\
    \ in this scope\n   23 |     sum += getCharUpper(s[i]);\n      |            ^~~~~~~~~~~~\n\
    /tmp/tmpv9pkp3ck.cpp:25:10: error: \u2018getCharUpper\u2019 was not declared in\
    \ this scope\n   25 |   sum += getCharUpper(s[s.size() - 1]);\n      |       \
    \   ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // write your code\
    \ in C++14 (g++ 5.4 or later)\n    long sum = 0;\n    std::string temp;\n    for(auto\
    \ c: s)\n        if(std::isupper(c))\n            sum += (c - 'A');\n        else\
    \ sum += c;\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpevkkwehb: /tmp/tmpevkkwehb.cpp:32: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105514
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    return s.find_first_not_of(\"\
    1234567890\") -s.find_first_not_of(\"12345678901234567890\");\n}\nint main() {\n\
    \    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpki42c4ud: /tmp/tmpki42c4ud.cpp:25: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105514
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n\tint n = s.size();\n\t\
    int sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tint c = s[i];\n\t\tif (c >=\
    \ 'A' && c <= 'Z') {\n\t\t\tsum += c - 'A' + 1;\n\t\t} else {\n\t\t\tsum += c\
    \ - 'a' + 10;\n\t\t}\n\t}\n\treturn sum;\n}\nint main() {\n    auto candidate\
    \ = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpcqr5x2ih: /tmp/tmpcqr5x2ih.cpp:35: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105514
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0;\n    long\
    \ n = 0;\n    long sum1 = 0, sum2 = 0;\n    bool flag = false;\n    for (char\
    \ &c : s) {\n        if (c >= '0' && c <= '9') {\n            if (flag) {\n  \
    \              sum1 = sum1 + c - '0';\n                flag = false;\n       \
    \     } else {\n                sum2 = sum2 + c - '0';\n            }\n      \
    \  } else if (c >= 'a' && c <= 'z') {\n            if (flag) {\n             \
    \   sum1 = sum1 + c - 'a' + 10;\n                flag = false;\n            }\
    \ else {\n                sum2 = sum2 + c - 'a' + 10;\n            }\n       \
    \ } else {\n            if (flag) {\n                sum1 = sum1 + c - 'A' + 10;\n\
    \                flag = false;\n            } else {\n                sum2 = sum2\
    \ + c - 'A' + 10;\n            }\n        }\n    }\n    if (sum1 == sum2) {\n\
    \        if (sum1 > 0)\n            n = sum1;\n        else\n            n = sum2;\n\
    \    } else {\n        if (sum1 > 0)\n            n = sum1 + sum2;\n        else\n\
    \            n = sum1 + sum2;\n    }\n    return n;\n}\nint main() {\n    auto\
    \ candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpcissailb: /tmp/tmpcissailb.cpp:64: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105514
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // code here\n    long\
    \ sum = 0;\n    int n = s.size();\n    for (int i = 0; i < n; i++) {\n       \
    \ if (s[i] - 'A' < 64)\n            sum += (s[i] - 'A');\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpn_qydlvx: /tmp/tmpn_qydlvx.cpp:32: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105514
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    assert(s.size() >=\
    \ 1);\n    int res = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (s[i] >= 'A' && s[i] <= 'Z') {\n            assert(i + 1 < s.size());\n    \
    \        res += (s[i] - 'A') + s[i + 1] - 'A';\n        }\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmplmmjk_vv: /tmp/tmplmmjk_vv.cpp:20: long int digitSum(std::string): Assertion
    `s.size() >= 1'' failed.

    '
  stdout: ''
  timestamp: 1660105514
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  std::stack<int> st;\n\
    \  for (char c : s) {\n    if (c > 'z') {\n      st.push(c);\n    } else {\n \
    \     while (!st.empty()) {\n        long d = st.top();\n        st.pop();\n \
    \       if (d <= 'z') {\n          long u = c - 'A' + 10;\n          st.push(u);\n\
    \        }\n      }\n    }\n  }\n  long ans = st.top();\n  st.pop();\n  while\
    \ (!st.empty()) {\n    ans += st.top();\n    st.pop();\n  }\n  return ans;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  // Write your code here\n\
    \  // string s;\n  // long digitSum(0);\n  // for (long i = 0; i < s.length();\
    \ i++) {\n  //    if (s[i] == 'A') digitSum += 1;\n  // }\n  // return digitSum;\n\
    }\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpk1mqy7kz: /tmp/tmpk1mqy7kz.cpp:30: int main(): Assertion `candidate((""))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660105514
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (char ch: s) {\n        assert(ch >= '0' and ch <= '9');\n        sum +=\
    \ ch-'0';\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmphcb_r6vg: /tmp/tmphcb_r6vg.cpp:22: long int digitSum(std::string): Assertion
    `ch >= ''0'' and ch <= ''9'''' failed.

    '
  stdout: ''
  timestamp: 1660105514
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long ret = 0;\n   \
    \ for (auto &ch: s) {\n        long sum = 0;\n        for (int i = 0; i < ch.size();\
    \ ++i) {\n            sum += (ch - 'A' + i);\n        }\n        ret += sum;\n\
    \    }\n    return ret;\n}\nint main() {\n    auto candidate = digitSum;\n   \
    \ assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjcuuc1yf.cpp: In function \u2018long int digitSum(std::string)\u2019\
    :\n/tmp/tmpjcuuc1yf.cpp:23:32: error: request for member \u2018size\u2019 in \u2018\
    ch\u2019, which is of non-class type \u2018char\u2019\n   23 |         for (int\
    \ i = 0; i < ch.size(); ++i) {\n      |                                ^~~~\n"
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // code here\n    long\
    \ sum = 0;\n    for (int i = 0; i < s.size(); i++) {\n        sum += (s[i] - '0');\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n   \
    \ assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpds1cbrnw: /tmp/tmpds1cbrnw.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105514
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long res = 0;\n   \
    \ for(char c : s) {\n        if((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))\
    \ {\n            res += (c - 'a' + 1);\n        }\n    }\n    return res;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpe7xxirnu: /tmp/tmpe7xxirnu.cpp:31: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105514
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (int i = 0; i < s.size(); i++) {\n        sum += getUpperChar(s[i]);\n \
    \   }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfqvue1qs.cpp: In function \u2018long int digitSum(std::string)\u2019\
    :\n/tmp/tmpfqvue1qs.cpp:22:16: error: \u2018getUpperChar\u2019 was not declared\
    \ in this scope\n   22 |         sum += getUpperChar(s[i]);\n      |         \
    \       ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n        long long sum =\
    \ 0;\n        for (auto &ch: s) {\n                sum += (ch >= 'A') ? (ch -\
    \ 'A' + 10) : (ch - 'a' + 10);\n        }\n        return sum;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpz7twi_bh: /tmp/tmpz7twi_bh.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105514
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  long sum = 0;\n  for\
    \ (int i = 0; i < s.size(); i++) {\n    sum += ((s.at(i) - '0') % 10);\n  }\n\
    \  return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp5sjztynn: /tmp/tmp5sjztynn.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105514
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (auto c : s) {\n        sum += toupper(c);\n    }\n    return sum;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp7ado5rmf: /tmp/tmp7ado5rmf.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105511
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (char c : s) {\n        if ('a' <= c && c <= 'z') {\n            sum +=\
    \ c - 'a' + 1;\n        } else if (('A' <= c && c <= 'Z')) {\n            sum\
    \ += c - 'A' + 1;\n        } else {\n            sum += c;\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpd7755waw: /tmp/tmpd7755waw.cpp:35: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105514
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0;\n    //\
    \ loop through all the characters\n    for (char c : s) {\n        sum += toupper(c);\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n   \
    \ assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpgl1ebb4j: /tmp/tmpgl1ebb4j.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105514
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  int sum = 0;\n  for (int\
    \ i = 0; i < s.size(); i++) {\n    if (s[i] >= 'A' && s[i] <= 'Z') {\n      sum\
    \ += s[i] - 'A' + 10;\n    }\n  }\n  return sum;\n}\nint main() {\n    auto candidate\
    \ = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpszs8v3mf: /tmp/tmpszs8v3mf.cpp:31: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  int sum = 0;\n  for (int\
    \ i = 0; i < s.length(); i++) {\n    sum += std::pow(10, i) * s[i] - '0';\n  }\n\
    \  return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpwfrk7ado: /tmp/tmpwfrk7ado.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  int sum = 0;\n  for (int\
    \ i = 0; i < s.size(); i++)\n    sum += (s[i]) - 'A' + 1;\n  return sum;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmplruc1k75: /tmp/tmplruc1k75.cpp:28: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  assert(s.size() > 0);\n\
    \  long sum = 0;\n  for (size_t i = 0; i < s.size(); i++) {\n    assert(s[i] >=\
    \ '0' && s[i] <= '9');\n    sum += s[i]-'0';\n  }\n  return sum;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpni9lvxkp: /tmp/tmpni9lvxkp.cpp:20: long int digitSum(std::string): Assertion
    `s.size() > 0'' failed.

    '
  stdout: ''
  timestamp: 1660105515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (auto i : s) {\n        sum += i;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmprgdg8l6r: /tmp/tmprgdg8l6r.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105510
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (std::isupper(s[i])) {\n    \
    \        sum += s[i];\n        }\n    }\n    return sum;\n}\nint main() {\n  \
    \  auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660105515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // Write your implementation\
    \ here\n    long sum=0;\n    for(int i=0;i<s.size();i++)\n    {\n        if(s[i]>='A'\
    \ && s[i]<='Z')\n        {\n            sum+=(int)s[i]-64;\n        }\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp0isfsudi: /tmp/tmp0isfsudi.cpp:34: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (int i = 0; i < s.size(); i++) {\n        if (s[i] >= 'A' && s[i] <= 'Z')\
    \ {\n            sum += (s[i] - 'A' + 10);\n        } else if (s[i] >= 'a' &&\
    \ s[i] <= 'z') {\n            sum += (s[i] - 'a' + 10);\n        }\n    }\n  \
    \  return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpbxgb5cmw: /tmp/tmpbxgb5cmw.cpp:33: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long ans = 0;\n   \
    \ int sum = 0;\n    for (char c : s)\n        sum += static_cast<int>(c);\n  \
    \  // we only want to sum up those upper chars\n    ans = sum - 'A' + 1;\n   \
    \ return ans;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp32qgsg6_: /tmp/tmp32qgsg6_.cpp:30: int main(): Assertion `candidate((""))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int res = 0;\n    int\
    \ pos = 0;\n    while(pos < s.length()) {\n        int val = (int)s[pos];\n  \
    \      res = res + val;\n        pos++;\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpyz3aii50: /tmp/tmpyz3aii50.cpp:32: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ size_t len = s.length();\n    for(int i = 0; i < len; i++) {\n        sum +=\
    \ s[i]-'A';\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmplbqc_dvh: /tmp/tmplbqc_dvh.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n   long ans = 0;\n   char\
    \ ch;\n   for (int i = 0; i < s.length(); i++) {\n      ch = s[i];\n      ans\
    \ += ch;\n   }\n   return ans;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpt9ujo3ap: /tmp/tmpt9ujo3ap.cpp:31: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (int i = 0; i < s.length(); i++) {\n        sum += s[i] - 'A';\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp7_osca7v: /tmp/tmp7_osca7v.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n   assert(s.size() > 0);\n\
    \   long sum = 0;\n   for (auto c : s) {\n       if (c >= 'a' && c <= 'z') sum\
    \ += (c - 'a' + 10);\n       else sum += c;\n   }\n   return sum;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp2epnq3vy: /tmp/tmp2epnq3vy.cpp:20: long int digitSum(std::string): Assertion
    `s.size() > 0'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // Complete this function\n\
    \    long sum = 0;\n    for (char c: s) {\n        sum += toupper(c);\n    }\n\
    \    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpu47ax8q0: /tmp/tmpu47ax8q0.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long result = 0;\n\
    \    for (int i = 0; i < s.size(); i++) {\n        int upper = s.at(i);\n    \
    \    result += (upper >= 65 && upper <= 90) ? upper : -1;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp5m0drmsu: /tmp/tmp5m0drmsu.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n   assert(s.size() > 0\
    \ && \"No string entered\");\n   int sum = 0;\n   for (int i = 0; i < s.size();\
    \ i++) {\n      sum += (s[i] == 'A' || s[i] == 'a') ? 10 : s[i] - '0';\n   }\n\
    \   return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpt55vkk65: /tmp/tmpt55vkk65.cpp:20: long int digitSum(std::string): Assertion
    `s.size() > 0 && "No string entered"'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    assert(s.size() > 0);\n\
    \    long sum = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i]\
    \ == 'A' || s[i] == 'a') {\n            sum += 26;\n        } else if (s[i] ==\
    \ 'B' || s[i] == 'b') {\n            sum += 26;\n        } else if (s[i] == 'C'\
    \ || s[i] == 'c') {\n            sum += 26;\n        } else if (s[i] == 'D' ||\
    \ s[i] == 'd') {\n            sum += 26;\n        } else if (s[i] == 'E' || s[i]\
    \ == 'e') {\n            sum += 26;\n        } else if (s[i] == 'F' || s[i] ==\
    \ 'f') {\n            sum += 26;\n        } else if (s[i] == 'G' || s[i] == 'g')\
    \ {\n            sum += 26;\n        } else if (s[i] == 'H' || s[i] == 'h') {\n\
    \            sum += 26;\n        } else if (s[i] == 'I' || s[i] == 'I') {\n  \
    \          sum += 26;\n        } else if (s[i] == 'J' || s[i] == 'j') {\n    \
    \        sum += 26;\n        } else if (s[i] == 'K' || s[i] == 'k') {\n      \
    \      sum += 26;\n        } else if (s[i] == 'L' || s[i] == 'l') {\n        \
    \    sum += 26;\n        } else if (s[i] == 'M' || s[i] == 'm') {\n          \
    \  sum += 26;\n        } else if (s[i] == 'N' || s[i] == 'n') {\n            sum\
    \ += 26;\n        } else if (s[i] == 'O' || s[i] == 'o') {\n            sum +=\
    \ 26;\n        } else if (s[i] == 'P' || s[i] == 'p') {\n            sum += 26;\n\
    \        } else if (s[i] == 'Q' || s[i] == 'q') {\n            sum += 26;\n  \
    \      } else if (s[i] == 'R' || s[i] == 'r') {\n            sum += 26;\n    \
    \    } else if (s[i] == 'S' || s[i] == 's') {\n            sum += 26;\n      \
    \  } else if (s[i] == 'T' || s[i] == 't') {\n            sum += 26;\n        }\
    \ else if (s[i] == 'U' || s[i] == 'u') {\n            sum += 26;\n        } else\
    \ if (s[i] == 'V' || s[i] == 'v') {\n            sum += 26;\n        } else if\
    \ (s[i] == 'W' || s[i] == 'w') {\n            sum += 26;\n        } else if (s[i]\
    \ == 'X' || s[i] == 'x') {\n            sum += 26;\n        } else if (s[i] ==\
    \ 'Y' || s[i] == 'y') {\n            sum += 26;\n        } else if (s[i] == 'Z'\
    \ || s[i] == 'z') {\n            sum += 26;\n        } else if (s[i] == '0') {\n\
    \            sum += 0;\n        } else if (s[i] == '1') {\n            sum +=\
    \ 1;\n        } else if (s[i] == '2') {\n            sum += 2;\n        } else\
    \ if (s[i] == '3') {\n            sum += 3;\n        } else if (s[i] == '4') {\n\
    \            sum += 4;\n        } else if (s[i] == '5') {\n            sum +=\
    \ 5;\n        } else if (s[i] == '6') {\n            sum += 6;\n        } else\
    \ if (s[i] == '7') {\n            sum += 7;\n        } else if (s[i] == '8') {\n\
    \            sum += 8;\n        } else if (s[i] == '9') {\n            sum +=\
    \ 9;\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate =\
    \ digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\"\
    )) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpqnoe6qzy: /tmp/tmpqnoe6qzy.cpp:20: long int digitSum(std::string): Assertion
    `s.size() > 0'' failed.

    '
  stdout: ''
  timestamp: 1660105515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  int sum = 0;\n  for (int\
    \ i = 0; i < s.size() && i < 26; i++) {\n    sum += toupper(s[i]);\n  }\n  return\
    \ sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpn5dbqygr: /tmp/tmpn5dbqygr.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum=0;\n    for\
    \ (int i=0;i<s.size();i++){\n        if(s[i]>='A' && s[i]<='Z')\n            sum+=s[i]-'A';\
    \ \n    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmph20uuas9: /tmp/tmph20uuas9.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  int sum = 0;\n  int n\
    \ = s.length();\n  for (int i = 0; i < n; i++) {\n    sum += s[i]-'A'+1;\n  }\n\
    \  return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp7js0apab: /tmp/tmp7js0apab.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  // your code here\n \
    \ long sum=0;\n  int i=0;\n  while(s[i]!=NULL){\n    sum+=s[i+1]-'a';\n    i++;\n\
    \  }\n  return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpq9xkfqe0: /tmp/tmpq9xkfqe0.cpp:32: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long result = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        result += (s[i] >= 'A' &&\
    \ s[i] <= 'Z') ? (s[i] - 'A' + 10) : (s[i] - 'a' + 10);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpztg581xz: /tmp/tmpztg581xz.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ // Your code here\n    std::cout<<sum;\n    return 0;\n}\nint main() {\n   \
    \ auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpjxqrcfqh: /tmp/tmpjxqrcfqh.cpp:28: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (auto &i : s)\n        sum += (i % 26) + 1;\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmprl77jr90: /tmp/tmprl77jr90.cpp:28: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  int n = s.size();\n \
    \ int sum = 0;\n  for (int i = 0; i < n; i++) {\n    sum += (s[0] + 32 - s[i])\
    \ * pow(10, i);\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpl5mollsz: /tmp/tmpl5mollsz.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (int i = 0; i < s.length(); i++)\n    {\n        if (s[i] >= 'a' && s[i]\
    \ <= 'z')\n            sum += s[i] - 'a' + 1;\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"\
    )) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpst77dxev: /tmp/tmpst77dxev.cpp:31: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ long size = s.size();\n    for (long i = 0; i < size; i++) {\n        sum +=\
    \ (int) s.at(i);\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpdgfxyaf5: /tmp/tmpdgfxyaf5.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for(int i=0;i<s.length();i++) {\n        sum += std::tolower(s[i]) - 'a';\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n   \
    \ assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmp33p3caqu: /tmp/tmp33p3caqu.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  long result = 0;\n  for\
    \ (char c : s)\n    result += c;\n  return result;\n}\nint main() {\n    auto\
    \ candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpqvezhp9b: /tmp/tmpqvezhp9b.cpp:28: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum=0;\n    for(int\
    \ i=0; i<s.length(); i++)\n        sum+=s[i]-'0';\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp81mavx21: /tmp/tmp81mavx21.cpp:28: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum=0;\n    for\
    \ (int i=0;i<s.size();i++){\n        if(s[i]>='A' && s[i]<='Z')\n            sum+=(i-(i%26)+'a'\
    \ - 'A'+1);\n        else\n            sum+=s[i];\n    }\n    return sum;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpskr9qcfz: /tmp/tmpskr9qcfz.cpp:32: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0;\n    int\
    \ len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(s[i]\
    \ == 'A' || s[i] == 'B' || s[i] == 'C' || s[i] == 'D' || s[i] == 'E' || s[i] ==\
    \ 'F' || s[i] == 'G' || s[i] == 'H' || s[i] == 'I' || s[i] == 'J' || s[i] == 'K'\
    \ || s[i] == 'L' || s[i] == 'M' || s[i] == 'N' || s[i] == 'O' || s[i] == 'P' ||\
    \ s[i] == 'Q' || s[i] == 'R' || s[i] == 'S' || s[i] == 'T' || s[i] == 'U' || s[i]\
    \ == 'V' || s[i] == 'W' || s[i] == 'X' || s[i] == 'Y' || s[i] == 'Z')\n      \
    \  {\n            sum += s[i] - 'A' + 1;\n        }\n    }\n    return sum;\n\
    }\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpk2e4zmkv: /tmp/tmpk2e4zmkv.cpp:34: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  // Your code here\n \
    \ int sum = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == 'A' ||\
    \ s[i] == 'a') {\n      sum += 32;\n    } else {\n      sum += (s[i] - '0');\n\
    \    }\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpmkqi13h5: /tmp/tmpmkqi13h5.cpp:34: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  int sum = 0;\n  assert(s.length()\
    \ > 0);\n  for (int i = 0; i < s.length(); i++)\n    sum += (s.at(i) - 'A') *\
    \ pow(26, s.length() - 1 - i);\n  return sum;\n}\nint main() {\n    auto candidate\
    \ = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmp0hayk1vs: /tmp/tmp0hayk1vs.cpp:21: long int digitSum(std::string): Assertion
    `s.length() > 0'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (auto c : s) {\n        sum += (int)c;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpeksj9gur: /tmp/tmpeksj9gur.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0;\n    int\
    \ len = s.length();\n    for (int i = 0; i < len; i++) {\n        sum += std::to_string(int(s[i]));\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n   \
    \ assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjck4x4yk.cpp: In function \u2018long int digitSum(std::string)\u2019\
    :\n/tmp/tmpjck4x4yk.cpp:23:13: error: no match for \u2018operator+=\u2019 (operand\
    \ types are \u2018int\u2019 and \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    })\n   23 |         sum += std::to_string(int(s[i]));\n      |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  int sum = 0;\n  for (int\
    \ i = 0; i < s.length(); i++) {\n    int digit = static_cast<int>((s[i] - 'A')\
    \ % 26 + 65);\n    sum += digit;\n  }\n  return sum;\n}\nint main() {\n    auto\
    \ candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpkixy2hda: /tmp/tmpkixy2hda.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long long sum = 0;\n\
    \    for (auto c : s) {\n        sum += std::stoul(c.c_str(), nullptr, 10);\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n   \
    \ assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2olq6tyh.cpp: In function \u2018long int digitSum(std::string)\u2019\
    :\n/tmp/tmp2olq6tyh.cpp:22:29: error: request for member \u2018c_str\u2019 in\
    \ \u2018c\u2019, which is of non-class type \u2018char\u2019\n   22 |        \
    \ sum += std::stoul(c.c_str(), nullptr, 10);\n      |                        \
    \     ^~~~~\n"
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0;\n    for\
    \ (auto i : s) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpdzthhrrd: /tmp/tmpdzthhrrd.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105517
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  long ans = 0;\n  for\
    \ (int i = 0; i < s.size(); i++) {\n    if (s[i] >= 'a' && s[i] <= 'z') {\n  \
    \    ans += s[i] - 'a' + 10;\n    }\n  }\n  return ans;\n}\nint main() {\n   \
    \ auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpv6a3cltp: /tmp/tmpv6a3cltp.cpp:31: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105516
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  long sum = 0;\n  for\
    \ (long i = 0; i < s.length(); i++) {\n    if (isupper(s[i])) {\n      sum +=\
    \ s[i];\n    }\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (char c : s) {\n        sum += c - 'A' + 1;\n    }\n    return sum;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpe_wbn8al: /tmp/tmpe_wbn8al.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105465
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  // Code here\n  // Use\
    \ str.length and std::accumulate to find the sum\n  return sum;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0lyxpl_u.cpp: In function \u2018long int digitSum(std::string)\u2019\
    :\n/tmp/tmp0lyxpl_u.cpp:22:10: error: \u2018sum\u2019 was not declared in this\
    \ scope\n   22 |   return sum;\n      |          ^~~\n"
  stdout: ''
  timestamp: 1660105516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    int sum = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        sum += ((int)s[i]);\n    }\n   \
    \ return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpyr8b86gz: /tmp/tmpyr8b86gz.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105517
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  // code here\n  long\
    \ sum = 0;\n  for (int i = 0; i < s.size(); i++)\n    sum += (s[i] >= 'a' && s[i]\
    \ <= 'z') || (s[i] >= 'A' && s[i] <= 'Z');\n  return sum;\n}\nint main() {\n \
    \   auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpuuh_rz67: /tmp/tmpuuh_rz67.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105517
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // code here\n}\nint\
    \ main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"\
    )) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp91k3oqfv: /tmp/tmp91k3oqfv.cpp:24: int main(): Assertion `candidate((""))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660105513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // code here\n    long\
    \ sum = 0;\n    for (auto &c : s) {\n        if (c >= 'A' && c <= 'Z') {\n   \
    \         sum += c - 'A';\n        }\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmp6jdfi3wq: /tmp/tmp6jdfi3wq.cpp:32: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105517
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    // code goes here\n\
    \    long sum = 0;\n    int n = s.size();\n    int i;\n    for (i = 0; i<n; i++)\n\
    \    {\n        char c = s[i];\n        sum += c;\n    }\n    return sum;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpstp5bgg5: /tmp/tmpstp5bgg5.cpp:34: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105517
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  // code goes here\n \
    \ int sum = 0;\n  for (int i = 0; i < s.length(); i++) {\n    sum += (s.at(i)\
    \ - 'A' + 1);\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpack12__f: /tmp/tmpack12__f.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105517
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  long sum = 0;\n  for\
    \ (char c : s) {\n    if (std::isupper(c)) sum += c - 32;\n  }\n  return sum;\n\
    }\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpw265cs3s: /tmp/tmpw265cs3s.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105517
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long result = 0;\n\
    \    for (char &i : s)\n        result += i;\n    return result;\n}\nint main()\
    \ {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n \
    \   assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"abcCd\"))\
    \ == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp0u92t8v4: /tmp/tmp0u92t8v4.cpp:28: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105517
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (char c : s)\n    {\n        if(isupper(c))\n        sum += tolower(c);\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n   \
    \ assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmps7k57ys7: /tmp/tmps7k57ys7.cpp:31: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105517
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (char c : s) {\n        if (isupper(c)) {\n            sum += c - 'A' +\
    \ 10;\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpia0e90ei: /tmp/tmpia0e90ei.cpp:31: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105517
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  int sum = 0;\n  for (int\
    \ i = 0; i < s.size(); i++) {\n    if (s[i] >= 'A' && s[i] <= 'Z') {\n      sum\
    \ += (s[i] - 'A') * pow(26, s.size() - i - 1);\n    }\n  }\n  return sum;\n}\n\
    int main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmpfln155nn: /tmp/tmpfln155nn.cpp:31: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105517
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  int sum = 0;\n  for (int\
    \ i = 0; i < s.size(); i++) {\n    if (s[i] >= 'A' && s[i] <= 'Z') {\n      sum\
    \ += (s[i] - 'A' + 1);\n    }\n  }\n  return sum;\n}\nint main() {\n    auto candidate\
    \ = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmp9f6uq4oj: /tmp/tmp9f6uq4oj.cpp:31: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105517
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n  int ans = 0;\n  for (int\
    \ i = 0; i < s.length(); i++) {\n    ans += (s[i] >= 'a' && s[i] <= 'z') ? s[i]-'a'\
    \ : s[i];\n  }\n  return ans;\n}\nint main() {\n    auto candidate = digitSum;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n\
    \    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"helloE\"\
    )) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmp_bgmhipv: /tmp/tmp_bgmhipv.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105517
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (int i = 0; i < s.length(); i++) {\n        if (s[i] >= 'A' && s[i] <= 'Z')\
    \ {\n            sum += s[i] - 'A' + 1;\n        } else {\n            sum +=\
    \ s[i];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmpu2l9s_t4: /tmp/tmpu2l9s_t4.cpp:33: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105517
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ // TODO: Write your code here.\n    for (int i = 0; i < s.length(); i++) {\n\
    \        sum += (s[i] - '0');\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = digitSum;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abAB\")) == (131));\n    assert(candidate((\"abcCd\")) == (67));\n    assert(candidate((\"\
    helloE\")) == (69));\n    assert(candidate((\"woArBld\")) == (131));\n    assert(candidate((\"\
    aAaaaXa\")) == (153));\n    assert(candidate((\" How are yOu?\")) == (151));\n\
    \    assert(candidate((\"You arE Very Smart\")) == (327));\n}\n"
  status: Exception
  stderr: 'tmp50zm3saz: /tmp/tmp50zm3saz.cpp:30: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105517
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Task\n// Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    // ASCII codes.\n// Examples:\n// >>> digitSum((\"\"))\n// (0)\n// >>> digitSum((\"\
    abAB\"))\n// (131)\n// >>> digitSum((\"abcCd\"))\n// (67)\n// >>> digitSum((\"\
    helloE\"))\n// (69)\n// >>> digitSum((\"woArBld\"))\n// (131)\n// >>> digitSum((\"\
    aAaaaXa\"))\n// (153)\nlong digitSum(std::string s) {\n    long sum = 0;\n   \
    \ for (int i = 0; i < s.length(); i++) {\n        sum += (s.at(i) - '0');\n  \
    \  }\n    return sum;\n}\nint main() {\n    auto candidate = digitSum;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abAB\")) == (131));\n    assert(candidate((\"\
    abcCd\")) == (67));\n    assert(candidate((\"helloE\")) == (69));\n    assert(candidate((\"\
    woArBld\")) == (131));\n    assert(candidate((\"aAaaaXa\")) == (153));\n    assert(candidate((\"\
    \ How are yOu?\")) == (151));\n    assert(candidate((\"You arE Very Smart\"))\
    \ == (327));\n}\n"
  status: Exception
  stderr: 'tmp3iiss2ay: /tmp/tmp3iiss2ay.cpp:29: int main(): Assertion `candidate(("abAB"))
    == (131)'' failed.

    '
  stdout: ''
  timestamp: 1660105517

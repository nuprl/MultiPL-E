name: HumanEval_97_multiply
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Complete the function that\
  \ takes two integers and returns \n// the product of their unit digits.\n// Assume\
  \ the input is always valid.\n// Examples:\n// >>> multiply((148), (412))\n// (16)\n\
  // >>> multiply((19), (28))\n// (72)\n// >>> multiply((2020), (1851))\n// (0)\n\
  // >>> multiply((14), (-15))\n// (20)\nlong multiply(long a, long b) {\n"
tests: "}\nint main() {\n    auto candidate = multiply;\n    assert(candidate((148),\
  \ (412)) == (16));\n    assert(candidate((19), (28)) == (72));\n    assert(candidate((2020),\
  \ (1851)) == (0));\n    assert(candidate((14), (-15)) == (20));\n    assert(candidate((76),\
  \ (67)) == (42));\n    assert(candidate((17), (27)) == (49));\n    assert(candidate((0),\
  \ (1)) == (0));\n    assert(candidate((0), (0)) == (0));\n}\n"
completions: ["    long result = 0;\n    while (b != 0) {\n        long tmp = a%10;\n\
    \        a = (a / 10) % 10;\n        if (b != 0) {\n            long tmp2 = b%10;\n\
    \            b = (b / 10) % 10;\n            result = (result * 10 + tmp * tmp2)\
    \ % 10;\n        } else {\n            result = (result * 10 + tmp) % 10;\n  \
    \      }\n    }\n    return result;", "    long unitNum = a%10;\n    long product\
    \ = a/10*(b/10+unitNum);\n    return (unitNum*product+product);", "    // Write\
    \ your code here\n    if(a>b) \n    { \n        long tmp=a;\n        a=b;\n  \
    \      b=tmp;\n    }\n    long result=0;\n    while(b>0)\n    {\n        if(b/10>a)\n\
    \        {\n            result *= a/b;\n            break;\n        }\n      \
    \  result *= b/10;\n        a/=10;\n        b%=10;\n    }\n    return result;",
  "    // Write your code here\n    if(a >= b) {\n        long product = a*b;\n  \
    \      if(product != 0)\n            return product;\n        else\n         \
    \   return 0;\n    }\n    else \n        return 0;", '    return a%b%b%b%b%b%b%b%b%b%b%b%b%b;',
  "    long c=0;\n    while (a >= 10) {\n        c = c + a%10;\n        a = a/10;\n\
    \    }\n    while (b >= 10) {\n        c = c + b%10;\n        b = b/10;\n    }\n\
    \    while (c >= 10) {\n        c = c + c%10;\n        c = c/10;\n    }\n    return\
    \ c;", "    long ans = 0, i = 1, j = 1;\n    while (i <= (b - a)) {\n        ans\
    \ = ans + j * (b - a);\n        j = j * (10 - i);\n        i++;\n    }\n    return\
    \ ans;", "    long c=0;\n    while(a!=0)\n    {\n        int m=a/10;\n       \
    \ long r=a*10-l;\n        long l=b*10-m*m;\n        c=c+r*m;\n        a=a-m;\n\
    \        b=b-l;\n    }\n    return c;", "\t// Write your code here\n\tlong product=0,\
    \ mod=0;\n\twhile(a>0) {\n\t\tmod = (a%10);\n\t\tproduct = product + mod*(b%10);\n\
    \t\tb = b / 10;\n\t\ta = a / 10;\n\t}\n\t\n\tif(product == 0) \n\t\tproduct =\
    \ a;\n\t\n\treturn product;", "    // Complete the code here.\n    // a%b\n  \
    \  return 0;", "  int result = 0;\n  while(a > 0 && b > 0) {\n    // Check if\
    \ a is greater than 0\n    // If it is then multiply and increase 'a' by 1\n \
    \   if (a > 0) a--, result = result * 10 + a % 10, a /= 10;\n    // Check if b\
    \ is greater than 0\n    // If it is then multiply and increase 'b' by 1\n   \
    \ if (b > 0) b--, b = result * 10 + b % 10, b /= 10;\n  }\n  // Check if either\
    \ of the two numbers is 0\n  // If it is then return 0;\n  if (a==0 && b==0) return\
    \ 0;\n  return result;", "    long res = 0;\n    while (b) {\n        if (b &\
    \ 1) res+=a;\n        a <<= 1;\n        b >>= 1;\n    }\n    return res;", " \
    \ int res = 0; //sum of digits\n  int sum = 0; //digit sum\n  int carry = 0; //carry\
    \ digit \n  int digit = 0; //digit counter\n  while (a > 0) {\n    digit = a %\
    \ 10;\n    res += digit*sum;\n    sum += carry;\n    carry = digit/10;\n    a\
    \ = a / 10;\n  }\n  \n  if (b > 0) {\n    int digit = 0;\n    while (a > 0) {\n\
    \      digit = a % 10;\n      res += digit*b;\n      b = b / 10;\n      a = a\
    \ / 10;\n    }\n  }\n  \n  res += carry;\n  \n  return res;", "    // Write your\
    \ code here\n    long r = a % b;\n    return (r * r) % b;", "    // Write your\
    \ code here\n    return (a * b) / 10;", "    // Write your code here\n    long\
    \ sum = 0;\n    int carry = 0;\n    int temp;\n    while(b != 0){\n        temp\
    \ = (int)(b % 10);\n        sum += temp*temp;\n        carry = (int)((b / 10)*10);\n\
    \        b /= 10;\n    }\n    \n    if(carry == 0){\n        return sum;\n   \
    \ }\n    else{\n        sum *= 10;\n        return sum + carry;\n    }", "   \
    \ // Write your code here\n    long res = 0;\n    while (b != 0) {\n        if\
    \ (b%10 > 0) {\n            res += a%10;\n            a /= 10;\n        } else\
    \ {\n            res += a/10;\n            a *= 10;\n        }\n        b /= 10;\n\
    \    }\n    return res;", "\tlong ans = 0;\n\twhile(b != 0)\n\t{\n\t\tans += a\
    \ % 10;\n\t\ta = (a / 10);\n\t\tb--;\n\t}\n\treturn ans;", "    if (a == 0 ||\
    \ b == 0) {\n        return 0;\n    }\n    long sum = 0;\n    long carry = 1;\n\
    \    long product = a % 10;\n    for (int i = 1; i <= 9; i++) {\n        long\
    \ n = carry + (product * b) % 10;\n        carry = product / 10;\n        product\
    \ = n % 10;\n        sum += n;\n    }\n    return sum + carry;", "    // Complete\
    \ this function\n    return a*b;", "\t// Code here\n\tlong sum = 0;\n\twhile(a\
    \ >= 10) {\n\t\tsum+=a%10;\n\t\ta/=10;\n\t}\n\twhile(b >= 10) {\n\t\tsum+=b%10;\n\
    \t\tb/=10;\n\t}\n\tif(a==0 || b==0) return 0;\n\tsum+=a%10*b;\n\treturn sum;",
  "    // Write your code here\n    long res = 0;\n    while(a || b)\n    {\n    \
    \    if(a<b)\n        {\n            res = res + (a%10);\n            a = a/10;\n\
    \        }\n        else\n        {\n            res = res + (b%10);\n       \
    \     b = b/10;\n        }\n    }\n    return res;", '    return (a * b) / 100;',
  "    // Write your code here\n    if(a<0){\n        while(b>0){\n            b=b-1;\n\
    \            a=a*10;\n        }\n        return a/b;\n    }\n    if(a==0){\n \
    \       return 0;\n    }\n    if(b==0){\n        return 0;\n    }\n    if(a>0){\n\
    \        while(b>0){\n            b=b-1;\n            a=a*10;\n        }\n   \
    \     return a;\n    }\n    while(b>0){\n        b=b-1;\n        a=a*10;\n   \
    \ }\n    return a;", "  long res = 0;\n  for (int i = 0; i < a; i++)\n    res\
    \ *= 10;\n  for (int i = 0; i < b; i++)\n    res *= 10;\n  long carry = 1;\n \
    \ for (int i = a; i < a + b; i++) {\n    res += carry;\n    carry = res % 10;\n\
    \    res = (res - carry + 10) / 10;\n  }\n  while (carry > 0) {\n    res += carry;\n\
    \    carry = res % 10;\n    res = (res - carry + 10) / 10;\n  }\n  return res;",
  "    // Write your code here\n    int ans = 0;\n    for (int i = 0; i < 9; i++)\n\
    \    {\n        if (a >= 1000) {\n            ans += (a / 1000) * b;\n       \
    \     a %= 1000;\n        }\n        if (a >= 100) {\n            ans += (a /\
    \ 100) * b;\n            a %= 100;\n        }\n        if (a >= 10) {\n      \
    \      ans += (a / 10) * b;\n            a %= 10;\n        }\n        if (a >=\
    \ 1) {\n            ans += a * b; \n        }\n    }\n    return ans;", "    long\
    \ c = 0, i = 1;\n    while (a != 0) {\n        if (a >= 10) {\n            c +=\
    \ a % 10;\n            a /= 10;\n            i++;\n        }\n        else {\n\
    \            c += a;\n            a %= 10;\n        }\n    }\n    while (i !=\
    \ 1) {\n        c += b;\n        b %= 10;\n        i >>= 1;\n    }\n    return\
    \ c;", "    // your code here\n    long ret = 0;\n    while (b > 0) {\n      \
    \  if ((b & 1) == 1) {\n            ret = ret * 10 + a % 10;\n        }\n    \
    \    a = a / 10;\n        b = b / 10;\n    }\n    return ret;", "\tif (b == 0)\
    \ {\n\t\treturn 0;\n\t} else if (b == -1) {\n\t\treturn a * -1;\n\t} else {\n\t\
    \treturn (a * 10) * (b * 10);\n\t}", "    assert(b != 0);\n    long res = 0;\n\
    \    // TODO: Complete the function here.\n    return res;", "  // Write your\
    \ code here.\n  if(b==0)\n    return a;\n  if(a==0 || b==0)\n    return 0;\n \
    \ if(a>b)\n  {\n    long x=multiply(a/10, b/10);\n    return x*10 + x/10;\n  }\n\
    \  return multiply(a/10, b/10);", "    // Initialize product\n    long product\
    \ = 1;\n    // Iterate through digits\n    while (a > 0 || b > 0) {\n        //\
    \ If b is greater, shift right\n        if (b > 0) {\n            long carry =\
    \ 0;\n            // If a is greater, carry 1\n            if (a > b) {\n    \
    \            carry = 1;\n            }\n            // Shift a right 1\n     \
    \       a--;\n            // Add carry\n            product *= carry + 1;\n  \
    \      }\n        // If b is less, shift left\n        else if (a < 0) {\n   \
    \         long carry = 0;\n            // If a is less, carry 1\n            if\
    \ (a < b) {\n                carry = 1;\n            }\n            // Shift a\
    \ left 1\n            a++;\n            // Add carry\n            product *= carry\
    \ + 1;\n        }\n        // If a is equal to 0\n        else {\n           \
    \ // If b is equal to 0\n            if (b == 0) {\n                // If the\
    \ carry is 0\n                if (product == 0) {\n                    // Print\
    \ 0\n                    return 0;\n                }\n                // If the\
    \ carry is 1\n                else {\n                    // Print 1\n       \
    \             return 1;\n                }\n            }\n            // If b\
    \ is not equal to 0\n            else {\n                // Print the product\n\
    \                return product;\n            }\n        }\n    }\n    // Print\
    \ 0\n    return 0;", "  int i;\n  long ans=0;\n  for(i=0;i<=3;i++){\n    ans =\
    \ ans*10 + a/(i+1) + b/(i+1);\n  }\n  return ans;", "    long result = 0;\n  \
    \  while (b != 0) {\n        if ((b & 1) == 1) {\n            result *= a;\n \
    \       }\n        b >>= 1;\n        a *= 10;\n    }\n    return result;", " \
    \   long sum = 0;\n    long product = 1;\n    int x = 0;\n    while (b != 0) {\n\
    \        x = b % 10;\n        sum = x * sum + a;\n        a = a / 10;\n      \
    \  product = product * x;\n        b = b / 10;\n    }\n    return sum;", "   \
    \ long ans = 0;\n    int i = 0;\n    while(a > 0) {\n        ans += a/10;\n  \
    \      a /= 10;\n        ++i;\n    }\n    ans += a/10;\n    return ans;", '    return
    a*b;', "    assert(b != 0);\n    long result = 0;\n    while (b > 0) {\n     \
    \   long tmp = a % 10;\n        result = (result * 10) + tmp;\n        a = a /\
    \ 10;\n        b = b / 10;\n    }\n    return result;", "\tlong prod = a * b;\n\
    \tprod = prod % 10;\n\tprod = prod * 10 + a%10;\n\tprod = prod % 10;\n\treturn\
    \ prod;", "\tlong ans = 0;\n\tint i = 0;\n\twhile(b) {\n\t\tif (a >= 10 && b >=\
    \ 10) {\n\t\t\tans += a % 10;\n\t\t\tans += (b % 10) * pow(10, (a % 10));\n\t\t\
    \ta /= 10;\n\t\t\tb /= 10;\n\t\t} else if (a >= 10 && b < 10) {\n\t\t\tans +=\
    \ a % 10;\n\t\t\tans += (b % 10) * pow(10, (a % 10));\n\t\t\ta /= 10;\n\t\t} else\
    \ if (a < 10 && b >= 10) {\n\t\t\tans += (a % 10) * pow(10, (b % 10));\n\t\t\t\
    a /= 10;\n\t\t\tb /= 10;\n\t\t} else {\n\t\t\tans += (a % 10) * pow(10, (b % 10));\n\
    \t\t\ta /= 10;\n\t\t\tb /= 10;\n\t\t}\n\t}\n\treturn ans;", "\tint i = 1;\n\t\
    long mul = 0, carry = 0;\n\twhile (b > 0) {\n\t\tlong digit = a / 10;\n\t\tlong\
    \ rest = a % 10;\n\t\tmul = (mul * 10) + digit;\n\t\tcarry = (mul > a) ? 1 : 0;\n\
    \t\ta = rest;\n\t\tb = b / 10;\n\t}\n\tif (carry == 1)\n\t\tmul *= 10;\n\t\n\t\
    return mul;", '    return a*b;', "    long unitNum = a % 10;\n    a = a / 10;\n\
    \    long unitNum2 = a % 10;\n    a = a / 10;\n    long unitNum3 = a % 10;\n \
    \   a = a / 10;\n    long unitNum4 = a % 10;\n    a = a / 10;\n    long unitNum5\
    \ = a % 10;\n    a = a / 10;\n    long unitNum6 = a % 10;\n    a = a / 10;\n \
    \   long unitNum7 = a % 10;\n    a = a / 10;\n    long unitNum8 = a % 10;\n  \
    \  a = a / 10;\n    long unitNum9 = a % 10;\n    a = a / 10;\n    long unitNum10\
    \ = a % 10;\n    return unitNum * unitNum2 * unitNum3 * unitNum4 * unitNum5 *\
    \ unitNum6 * unitNum7 * unitNum8 * unitNum9 * unitNum10;", "  int sum = a;\n \
    \ int prod = b;\n  int div = sum / prod;\n\n  while (prod != 0) {\n    sum = (sum\
    \ % prod) * (div * 10);\n    prod = prod / 10;\n    div = div / 10;\n  }\n  long\
    \ result = sum;\n  if (a < 0) {\n    result = -result;\n  }\n  return result;",
  "    long sum = 0;\n    while (a != 0) {\n        if (a%10 == 1) {\n           \
    \ sum += b;\n        }\n        b /= 10;\n        a /= 10;\n    }\n    return\
    \ sum;", "\t// code here\n    \n    \n\t// Solving the problem using Kahan Sum\n\
    \    // Refer: [http://www.geeksforgeeks.org/khan-sum-algorithm/]\n    long result\
    \ = 0;\n    long t = a * b;\n    while (t > 0) {\n        if (t % 10 > 0)\n  \
    \          result += t / 10;\n        t /= 10;\n    }\n    \n    \n    // Returning\
    \ the result\n    return result + a < b ? a - b : result - b;", '    return a*b;',
  "    int c = 0;\n    while (a >= 10)\n    {\n        c += a % 10;\n        a /=\
    \ 10;\n    }\n    while (a > 0)\n    {\n        c += a;\n        a /= 10;\n  \
    \  }\n    long p = 0;\n    while (c > 0)\n    {\n        p = p * 10 + c;\n   \
    \     c /= 10;\n    }\n    return p;", "    long ans = 0;\n    \n    // Use while\
    \ loop to iterate through \n    // the two integers \n    while (a != 0){\n  \
    \      // Check if current digit from \n        // the integer a is greater than\
    \ \n        // the current digit from the \n        // integer b\n        if (a%10\
    \ > b%10){\n            ans = ans*10;\n            // Add the digit from the integer\
    \ a to the \n            // result multiplied by 10\n            ans = ans+a%10;\n\
    \            // Remove the current digit from integer a\n            a=a/10;\n\
    \        }else{\n            // Check if current digit from integer b is greater\
    \ than \n            // the current digit from integer a\n            if (b%10\
    \ > a%10){\n                ans = ans*10;\n                // Add the digit from\
    \ the integer b to the \n                // result multiplied by 10\n        \
    \        ans = ans+b%10;\n                // Remove the current digit from integer\
    \ b\n                b=b/10;\n            }else{\n                // If the current\
    \ digit in the integer a is less than \n                // the current digit in\
    \ the integer b, then just \n                // add the current digit from the\
    \ integer a to the \n                // result multiplied by 10\n            \
    \    ans = ans*10+a%10;\n                // Remove the digit from the integer\
    \ a\n                a=a/10;\n            }\n        }\n    }\n    \n    return\
    \ ans;", "    // Initialize two variables to store the result \n    // and unit\
    \ digits of the product \n    long product = 0, unitDigits = 0, digit = 0;\n \
    \   // Iterate through all units in units digits of input \n    // and multiply\
    \ units digit with product and add to the result\n    for(unitDigits = b / 100;\
    \ b > 0; unitDigits--, digit = a/10) {\n        a = a%10 * digit;\n        product\
    \ += unitDigits;\n    }\n    return product;", "    long total = 0;\n    while\
    \ (b > 0) {\n        total += a%10;\n        a/=10;\n        b /= 10;\n    }\n\
    \    return total;", '    return ((a >= 0 && a < 9) ? ((9 * b) + (a - 48)) : 0);',
  "    // Write your code here.\n    long unitDigit = a % 10;\n    long unitDigitB\
    \ = b % 10;\n    if(unitDigitB == 0)\n        return unitDigit;\n    return unitDigit\
    \ * multiply(unitDigitB, 10);", "  int carry = 0;\n  long result = 0;\n  // Go\
    \ through the digits\n  for (; b > 0; b /= 10) {\n    // Shift to the right\n\
    \    long temp = a % 10;\n    carry = temp * b + carry;\n    // Divide by the\
    \ next digit\n    carry /= 10;\n    // Add the next digit\n    result += temp;\n\
    \  }\n  // If the last digit is 1, we need to carry it forward\n  if (carry ==\
    \ 1) result += 1;\n  // Return the result\n  return result;", "\tint carry = 0,\
    \ result = 0;\n\twhile(a != 0) {\n\t\tresult = result + (a/10*b) + (carry/10*(a%10));\
    \ \n\t\tcarry = carry % 10;\n\t\ta = a/10; \n\t}\n\treturn result + carry/10*(b);",
  "  // Write your code here\n  // long long int temp; \n  \n  long long int digit=1;\n\
    \  long long int num=0;\n  \n  int num=(int)a;\n  a=a/(int)num;\n  num=(long)num;\n\
    \  \n  int num1=(int)b;\n  b=b/(int)num1;\n  num1=(long)num1;\n  \n  int i=num1;\n\
    \  while(i>0)\n  {\n    num=(num*(i/10));\n    digit=digit*i;\n    i=(i%10);\n\
    \  }\n  \n  long long int c=a*b;\n  c=(long long int)c*digit;\n  c=(long long\
    \ int)(c+num);\n  \n  return c;", "    int result = 0;\n    if (a > 0 && b > 0)\
    \ {\n        if (a > b) {\n            result = multiply(b, a);\n        } else\
    \ {\n            int remainder = a % b;\n            long remainder1 = remainder\
    \ + b;\n            if (remainder > 0) {\n                result += (a / b) *\
    \ remainder1;\n            } else if (remainder < 0) {\n                result\
    \ -= (a / b) * remainder1;\n            }\n        }\n    }\n    return result;",
  "    // Write your code here\n    if(a>0 && b>0){\n        long mult = 0;\n    \
    \    long temp = a;\n        while(b > 0){\n            if(b%10 > 0){\n      \
    \          mult *= 10;\n            }\n            mult += b%10;\n           \
    \ b /= 10;\n        }\n        return mult;\n    }\n    else\n        return 0;",
  "    int carry = 1;\n    long product = 0;\n    while(a != 0){\n        int digit\
    \ = a%10;\n        product += digit*b + carry;\n        carry = digit*b + carry;\n\
    \        a = a/10;\n    }\n    return product;", "    int carry = 0;\n    int\
    \ i = 0;\n    long result = 0;\n    while(a != 0) {\n        result = (result\
    \ * 10) + (carry + a % 10);\n        carry = carry % 10;\n        i++;\n     \
    \   a /= 10;\n    }\n    if(carry != 0)\n        result = (result * 10) + carry;\n\
    \    return result;", "  assert(b > 0);\n  long unit = 1;\n  for(int i = 1; i\
    \ < b; ++i) {\n    unit *= a;\n    a /= 10;\n  }\n  return unit;", "    long ans\
    \ = 0;\n    while (a && b) {\n        if ((a%10) * (b%10)) > ans { ans = (a%10)\
    \ * (b%10); }\n        a /= 10;\n        b /= 10;\n    }\n    return ans;", " \
    \   // Complete the code here.\n    // assert(a != 0);\n    // assert(b != 0);\n\
    \    long retVal = 0;\n    while (b != 0) {\n        int remMod = a % 10;\n  \
    \      retVal += remMod * b;\n        a = a / 10;\n        b = b / 10;\n    }\n\
    \    return retVal;", "    // TODO: Write your code here\n    long result=1;\n\
    \    while(b!=0)\n    {\n        if(b%10>9)\n        {\n            result *=10;\n\
    \            result +=b%10;\n        }\n        else\n        {\n            result\
    \ *=10;\n            result +=b;\n        }\n        b/=10;\n    }\n    return\
    \ result;", "    long c = 0;\n    while (b != 0) {\n        if (b & 1) c += a;\n\
    \        b >>= 1;\n        a <<= 1;\n    }\n    return c;", "    if (b == 0) {\n\
    \        return 0;\n    }\n    long res = 0;\n    while (b != 0) {\n        if\
    \ (a > b) {\n            res = res * 10;\n            res += a % 10;\n       \
    \     a /= 10;\n        } else {\n            res = res * 10;\n            res\
    \ += a % 10;\n            a /= 10;\n        }\n    }\n    return res;", "  long\
    \ product = 0;\n  long temp = 0;\n  while(b != 0) {\n    if(b % 10 == 0)\n   \
    \   product = product + 1;\n    b = b /10;\n  }\n  for(int i = 1; i <= product;\
    \ i++) {\n    temp = temp + a % 10;\n    a = a / 10;\n  }\n  return temp;", " \
    \   // Compute the sum of two digits in a and b\n    int sum = a%10, x = a / 10;\n\
    \    int sumb = b%10, y = b / 10;\n    \n    // Add up the two digits in sum\n\
    \    int ans = sum*x + sumb*y;\n    \n    // Compute the unit digit for the product\
    \ by multiplying ans by 10\n    return ans*10 + sum;", "\tlong ans = 0;\n\t\n\t\
    long remain = a%10;\n\tlong rem1 = a%100;\n\tlong rem2 = b%10;\n\tlong rem21 =\
    \ b%100;\n\t\n\tif (rem == 0) \n\t\tans += rem1;\n\t\n\tif (rem2 == 0) \n\t\t\
    ans += rem21;\n\t\n\tans *= remain;\n\t\n\tans *= b;\n\t\n\treturn ans;", "  \
    \  int n = a;\n    long sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n\
    \        n /= 10;\n    }\n    return sum * b;", "    int ans = 0;\n    while(a\
    \ || b){\n        ans = ans * (a % 10 + b % 10 + 10) % 10;\n        a = a / 10;\n\
    \        b = b / 10;\n    }\n    return ans;", "    int carry = 0, res = 0;\n\
    \    for(int i = a; i >= 0; i--) {\n        res = res * 10 + i % 10 + carry;\n\
    \        carry = res / 10;\n        res %= 10;\n    }\n    for(int i = b; i >=\
    \ 0; i--) {\n        res = res * 10 + i % 10 + carry;\n        carry = res / 10;\n\
    \        res %= 10;\n    }\n    return res + carry;", "   if(b == 0) return 0;\n\
    \   return (a / b) * (b % 10);", "\tlong res = 0;\n\twhile(b) {\n\t\tres = res\
    \ * 10 + a % 10;\n\t\ta = a / 10;\n\t\tb = b / 10;\n\t}\n\treturn res * a;", " \
    \   int a1 = a % 10, b1 = b % 10;\n    if (a1 > 9 && b1 > 9) {\n        if (a1\
    \ == 9 && b1 == 9) {\n            return 0;\n        } else if (b1 == 9 && a1\
    \ == 9) {\n            return 0;\n        } else {\n            return 0;\n  \
    \      }\n    } else if (a1 > 9) {\n        return 0;\n    } else if (b1 > 9)\
    \ {\n        return 0;\n    } else {\n        return (a * b) / 10;\n    }", " \
    \   // Write your code here\n\tlong result=0;\n\tfor(int i=0; i<=9; i++)\n\t{\n\
    \t\tif(a >= 10*i)\n\t\t{\n\t\t\tint rem=a%10*i;\n\t\t\ta%=10*i;\n\t\t\tresult+=rem*b;\n\
    \t\t}\n\t}\n\treturn result;", '    return a * b / 10;', "    int a1 = a%10, a2\
    \ = a%100;\n    int b1 = b%10, b2 = b%100;\n    int result = (10*a1 + 100*a2)\
    \ + (10*b1 + 100*b2);\n    if(result<0)\n        result+=10;\n    if(result>9)\n\
    \        result-=10;\n    return result+1;", "    int a_rem = a % 10;\n    int\
    \ b_rem = b % 10;\n    int prod = a_rem * b_rem;\n    prod = prod > 9 ? prod :\
    \ 10 + prod;\n    return prod;", "  assert(b > 0);\n  long sum = 0;\n  while (a\
    \ != 0) {\n    assert(a % 10 == 0);\n    a = a / 10;\n    sum = a * b + sum;\n\
    \  }\n  return sum;", "    long ans = 0, mod = 1000000000;\n    \n    // Check\
    \ for invalid input\n    if(a==0 || b==0){\n        return ans;\n    }\n    if(a<0){\n\
    \        mod=-a;\n        a=a*mod;\n    }\n    if(b<0){\n        mod=-b;\n   \
    \     b=b*mod;\n    }\n    \n    // Find the product of the digits of a\n    long\
    \ temp = a;\n    while(temp > 0){\n        temp = temp % 10;\n        ans = ans\
    \ * 10 + temp;\n    }\n    \n    // Find the product of the digits of b\n    temp\
    \ = b;\n    while(temp > 0){\n        temp = temp % 10;\n        ans = ans * 10\
    \ + temp;\n    }\n    \n    // Return the product of the two numbers\n    return\
    \ ans;", "    // Write your code here\n    long total = 0;\n    long temp;\n \
    \   if(a<0 || b<0)\n    {\n        return 0;\n    }\n    while(b != 0)\n    {\n\
    \        temp = a%10;\n        total = (total*10)+temp;\n        a = a/10;\n \
    \   }\n    return total;", "    if (a > b) {\n        int temp = a;\n        a\
    \ = b;\n        b = temp;\n    }\n\n    long res = 0;\n    int i = 0, j = 0;\n\
    \    while (i < a && j < b) {\n        int curr = a[i] + b[j];\n        long temp\
    \ = curr / 10;\n        res = res * 10 + temp;\n        ++i;\n        ++j;\n \
    \   }\n    while (i < a)\n        res = res * 10 + a[i];\n    while (j < b)\n\
    \        res = res * 10 + b[j];\n\n    return res;", "   long long result = 1;\n\
    \   while(b > 0) {\n      long long temp = a%10;\n      result += temp * b;\n\
    \      a /= 10;\n      b /= 10;\n   }\n   if(b==0)\n      while(a>0) {\n     \
    \    result *= a;\n         a--;\n      }\n   return result;", "    long sum =\
    \ 0;\n    long temp = a % 10;\n    while (temp != 0 && b != 0) {\n        sum\
    \ += temp * b / 10;\n        temp = a % 10;\n        b = b % 10;\n        a /=\
    \ 10;\n    }\n    return sum;", "    // Write your code here.\n    assert(a>0\
    \ && b>0);\n    long res=0;\n    int m=(a%10);\n    int n=(b%10);\n    int i=0;\n\
    \    while(m!=0 && n!=0){\n        if(i==0)\n        {\n            res+=(n*m);\n\
    \            m=(a/10);\n            n=(b/10);\n        }\n        else{\n    \
    \        res+=((n%10)*m);\n            m=(a/10);\n            n=(b/10);\n    \
    \    }\n        i++;\n    }\n    return res;", "\tlong long res = 0;\n\twhile(a>0\
    \ && b>0) {\n\t\tif(a%10 == 0 && b%10 == 0) return a*b; // If both are unit digits\n\
    \t\tif(a%10 > 0 && b%10 > 0) return 0; // If both are digit > 9\n\t\tres = res*10\
    \ + (a%10) * (b%10); // If the first is unit digit and the second is digit > 9\n\
    \t\ta/=10; // Remove the unit digit from a\n\t\tb/=10; // Remove the digit from\
    \ b\n\t}\n\treturn res; // If both are invalid and have same number of digits",
  "    // write your code here\n    long sum = 0;\n    while (b > 0) {\n        int\
    \ m = a % 10;\n        sum += m * (b / 10);\n        a /= 10;\n        b /= 10;\n\
    \    }\n    return sum;", "    // assert(a >= 0 && b >= 0)\n    // assert(a <\
    \ 1000000000 && b < 1000000000)\n    // long temp = a % b; // temp is negative,\
    \ just subtract it\n    // return (temp * b) / a;\n    return (a * b) / a;", " \
    \ if (a == 0) return 0;\n  long units = 0;\n  while (a != 0) {\n    if (a % 10\
    \ == b % 10) {\n      units += 1;\n    }\n    a = a / 10;\n    b = b / 10;\n \
    \ }\n  return units;", "\treturn a * b;", "  long prod = a*b;\n  // long prod\
    \ = a * b / 100;\n  \n  while (prod >= 100) {\n    prod /= 10;\n  }\n  // prod\
    \ /= 10;\n  \n  while (prod < 0) {\n    prod *= 10;\n  }\n  \n  return prod;",
  "     assert(b > 0);\n     long c = 0, d = 0, i = 1;\n     while(b) {\n        \
    \ int tmp = a%10;\n         c = c + tmp*i;\n         a = a/10;\n         d = d\
    \ + tmp*b;\n         b = b / 10;\n         i++;\n     }\n     return c*d;", " \
    \   assert(a != 0 && b != 0);\n    int res = 0;\n    while (b != 0) {\n      \
    \  if (b%10*a > a)\n            return 0;\n        res += b%10*a;\n        a /=\
    \ 10;\n        b /= 10;\n    }\n    return res;", "    if(b==0) return a*0;\n\
    \    long carry=0, rem=0;\n    for(int i=a; i>0; i--){\n        rem=carry/10;\n\
    \        carry=rem-((a-i)*rem);\n        rem=i*rem;\n    }\n    return a+b+carry-rem*(b*b);",
  "    int result=0;\n    long x=0;\n    long y=0;\n    while (a != 0) {\n       \
    \ x = (a%10);\n        y = (a/10);\n        result += (10*x*y)%10;\n    }\n  \
    \  while (!(b == 0) && a!=0) {\n        x = (a%10);\n        y = (a/10);\n   \
    \     result += (10*x*y)%10;\n    }\n    return result%10;", "    // Your code\
    \ here\n    long ans = 0;\n    long sum = (a > b ? a : b);\n    while(sum > 0)\
    \ {\n        ans += (sum % 10);\n        sum /= 10;\n    }\n    return ans;",
  "  // Write your code here.\n  long sum = 0;\n  long c = 0;\n  long d = a;\n  long\
    \ e = b;\n  while (d > 0 && e > 0) {\n    if (d >= e)\n      sum += (d - e) *\
    \ (d - e);\n    else\n      sum += (d - e) * (d + e);\n    d /= 10;\n    e /=\
    \ 10;\n  }\n  c = sum % 10;\n  sum += c / 10;\n  return sum;", "    int carry\
    \ = 0;\n    long r = 0, s = 0;\n    while(a >= 10 && b >= 10) {\n        r = r*10\
    \ + (a % 10 + b) % 10;\n        a = a / 10;\n        b = b / 10;\n        s =\
    \ s*(a + b) / 10;\n        carry = (s + carry) / 10;\n    }\n    while(b >= 10)\
    \ {\n        r = r*10 + (b%10+carry);\n        b = b / 10;\n        s = s*(a +\
    \ b) / 10;\n        carry = (s + carry) / 10;\n    }\n    while(carry) {\n   \
    \     r = r*10 + (carry%10);\n        carry = carry / 10;\n        s = s*(a +\
    \ b) / 10;\n    }\n    return (r);", "  int n = a%10;\n  a%=10;\n  int m = b%10;\n\
    \  b%=10;\n  return (n*m+a)*(b*m+b);", "  // code goes here\n  long ans = 0;\n\
    \  while (a > 0)\n    {\n      ans += (a % 10);\n      a /= 10;\n    }\n  while\
    \ (a > 0)\n    {\n      ans *= b;\n      a /= 10;\n    }\n  return ans;", "  \
    \  long sum = 0;\n    while(a > 0) {\n        sum += a % 10;\n        a /= 10;\n\
    \    }\n    while(b > 0) {\n        sum += b % 10;\n        b /= 10;\n    }\n\
    \    return sum;", "    long res = 0;\n    int n = b;\n    while (n) {\n     \
    \   res += n % 10;\n        n /= 10;\n    }\n    res *= a;\n    return res;",
  "    // assert that arguments are positive\n    assert(a >= 0);\n    assert(b >=\
    \ 0);\n    // assert that the first argument is unit\n    assert(a%10 == 0);\n\
    \    assert(b%10 == 0);\n    // assert that the second argument is unit\n    assert(b%10\
    \ == 0);\n    long ans = 0;\n    long remain = a/10;\n    long b2 = b%10;\n  \
    \  while(remain != 0) {\n        remain = remain % 10;\n        if(remain == b2)\
    \ {\n            ans += 1;\n        }\n    }\n    return ans;", "    long ans\
    \ = 0;\n    while (b != 0) {\n        if ((a & 1) == 0) {\n            ans = (ans\
    \ * 10) + (b % 10);\n        }\n        ans = ans * 10 + (a % 10);\n        a\
    \ = a / 10;\n        b = b / 10;\n    }\n    return ans;", "  long temp = 0;\n\
    \  for(int i=a; i>=0; i--) {\n    temp = (temp*10)+(i%10);\n  }\n  for(int i=b;\
    \ i>=0; i--) {\n    temp = (temp*10)+(i%10);\n  }\n  return temp;", "    long\
    \ x = a;\n    long y = b;\n    long prod = 0;\n    while (b != 0) {\n        if\
    \ (b & 1) prod *= x;\n        x <<= 1;\n        y <<= 1;\n        b >>= 1;\n \
    \   }\n    return prod;", "    assert(b > 0);\n    int res = 0;\n    \n    //\
    \ Store the first digit in res to avoid multiplying\n    // two zeros.\n    int\
    \ first_digit = a;\n    \n    // If b is negative, shift a to left by 1 digit.\n\
    \    if (b < 0) {\n        a = a % 10;\n        a = a + 1;\n        \n       \
    \ // If a's first digit is 0, shift it back.\n        if (a == 0)\n          \
    \  a = 90;\n    }\n    \n    // Reverse b to make it positive\n    b = b * -1;\n\
    \    \n    // While b is positive\n    while (a > 0) {\n        // Store current\
    \ digit of a\n        int current_digit = a;\n        a = a % 10;\n        \n\
    \        // Calculate the product of res and current digit.\n        res += current_digit;\n\
    \        \n        // If the product is greater than 9, add 9\n        if (res\
    \ > 9)\n            res += 9;\n    }\n    \n    // Return res by first digit.\n\
    \    return first_digit * res;", "    // Write your code here\n    long result\
    \ = 0;\n    long carry = 1;\n    for (int i = a; i <= b; i++) {\n        int digit\
    \ = i % 10;\n        result += digit * carry;\n        carry = 1;\n        i /=\
    \ 10;\n    }\n    result *= carry + carry;\n    return result;", "    // Write\
    \ your code here\n    long sum = 0;\n    long product = 1;\n    int len = a;\n\
    \    for(int i=len-1; i>0; --i) {\n        sum *= a;\n        product *= b;\n\
    \        len--;\n    }\n    if(sum != 0) {\n        return 0;\n    }\n    return\
    \ product;", "    if(b == 0)\n        return a;\n    return ((a % 10) * (b % 10))\
    \ % 10;", "    // Your code here\n    \n    int val1 = a % 10;\n    int val2 =\
    \ b % 10;\n    int sum = 0;\n    \n    while (a > 0 && b > 0) {\n        if (val1\
    \ > val2) {\n            sum = sum + val1;\n            a /= 10;\n        } else\
    \ if (val1 < val2) {\n            sum = sum + val2;\n            b /= 10;\n  \
    \      } else {\n            sum = sum + val1;\n            a /= 10;\n       \
    \     b /= 10;\n        }\n    }\n    \n    cout << sum << endl;\n    return sum;",
  "    // Write your code here.\n    long ans = 1;\n    while(a && b) {\n        if(a>b)\
    \ ans *= a%10;\n        else ans *= b%10;\n        a /= 10;\n        b /= 10;\n\
    \    }\n    return ans;", "    // Write your code here\n    // Write your code\
    \ here\n    // Write your code here\n    // Write your code here\n    // Write\
    \ your code here\n    long sum = a;\n    long prod = 1;\n    long i = 1;\n   \
    \ while (b > 0) {\n        prod *= i;\n        sum += (prod * (b / 10));\n   \
    \     b %= 10;\n        ++i;\n    }\n    return sum;", "    int x = 1;\n    while\
    \ (b > 0) {\n        int r = b % 10;\n        b = b / 10;\n        x = x * 10\
    \ + r;\n    }\n    return a*x;", "    assert(b > 0);\n    int sum = 0;\n    while\
    \ (b > 0) {\n        sum = sum + a % 10;\n        a /= 10;\n        b /= 10;\n\
    \    }\n    return sum;", "    long ans = 0, i;\n    assert(b > 0);\n    long\
    \ digit = b / 10;\n    ans += (digit * a);\n    for (i = digit; i >= 1; i--) {\n\
    \        long j = (digit - i) / 10;\n        ans += (j * a);\n        a -= j *\
    \ 10;\n    }\n    return ans;", "\t// Initialize answer to 0\n\tlong ans = 0;\n\
    \t// Use modulus to get remainder\n\tlong mod = a % 10;\n\t// Use remainder to\
    \ determine unit digit of a\n\tlong ans_a = mod * b;\n\ta = a / 10;\n\tmod = a\
    \ % 10;\n\t// Use remainder to determine unit digit of b\n\tlong ans_b = mod *\
    \ b;\n\tb = b / 10;\n\tmod = b % 10;\n\t// Use remainder to determine unit digit\
    \ of a\n\tlong ans_c = mod * b;\n\t// Multiply answer\n\tans = ans_a * ans_b *\
    \ ans_c;\n\treturn ans;", "    // Write your code here\n    long prod=0;\n   \
    \ long temp=0;\n    while(b!=0){\n        temp=a%10;\n        prod=prod*temp;\n\
    \        a=a/10;\n        b--;\n    }\n    prod=prod*a;\n    return prod;", '    return
    a * b / 10;', "    int digit1 = 0, digit2 = 0;\n    long result = 0;\n    \n \
    \   while (b != 0) {\n        int digit = (int) (b % 10);\n        digit2 = digit1\
    \ + digit;\n        result = result * 10 + digit2;\n        digit1 = digit2;\n\
    \        b = b / 10;\n    }\n    return result;", "\tint res = 0; // res = product\n\
    \tlong x = a; // x = units of a\n\tlong y = b; // y = units of b\n\t\n\t// check\
    \ if both have the same number of units\n\tif (x == y) {\n\t\tfor (int i = 0;\
    \ i < x; i++) { // for all i from 0 to x-1\n\t\t\tres = (res * 10) + x[i]; //\
    \ res = res*10 + x[i]\n\t\t}\n\t\treturn res;\n\t} else {\n\t\tassert(x == 0 ||\
    \ y == 0); // assert: both cannot be 0, else return 0\n\t\tassert(x != 0); //\
    \ assert: x cannot be 0\n\t\tassert(y != 0); // assert: y cannot be 0\n\t\treturn\
    \ 0;\n\t}", "  long ret = 0;\n  // Write your code here\n  while (b > 0) {\n \
    \   a = ((a % 10) * 10) + (a / 10);\n    b--;\n  }\n  while (a > 0) {\n    ret\
    \ = (ret * 10) + (a % 10);\n    a--;\n  }\n  return ret;", "\t// TODO Complete\
    \ this function\n\tlong ans=0;\n\tlong p=a/10;\n\tlong q= b%10;\n\tlong r= p*q;\n\
    \tans = a%10;\n\tans = ans + r*10;\n\treturn ans;", "    long sum = 0;\n    while\
    \ (a > 0)\n    {\n        sum += a%10;\n        a /= 10;\n    }\n    if (b > 0)\n\
    \    {\n        while (b > 0)\n        {\n            sum += b%10;\n         \
    \   b /= 10;\n        }\n    }\n    return sum;", "    // Write your code here\n\
    \    long x = a;\n    long y = b;\n    long unit = ((x % 10) + (y % 10));\n  \
    \  long res = x;\n    long i = 10;\n    while(unit >= i){\n        res *= 10;\n\
    \        res -= unit;\n        unit /= i;\n    }\n    return res;", "    long\
    \ ans = 1;\n    int carry = 0;\n\n    while (b) {\n        int n = b;\n      \
    \  b = a % b;\n        a = b;\n        ans = ans * 10 + n;\n        carry = ans\
    \ / 10;\n        ans %= 10;\n    }\n    if (carry)\n        ans = ans + carry;\n\
    \    return ans;", "  assert(a >= 0 && a <= 1000) && (b >= 0 && b <= 1000);\n\
    \  // Write your code here\n  return (long) a * (long) b;", "\tlong res = 0;\n\
    \tlong carry = 0, flag = 0, carry1, carry2;\n\t\n\twhile (b != 0) {\n\t\tif ((b\
    \ & 1) != 0) {\n\t\t\tres = res * 10 + carry;\n\t\t\tcarry = 1;\n\t\t}\n\t\tcarry\
    \ *= 10;\n\t\tcarry += a % 10;\n\t\ta = a/10;\n\t\tb = (b - 1) / 10;\n\t}\n\t\
    if (carry != 0) {\n\t\tres = res * 10 + carry;\n\t}\n\t\n\tif (flag != 0) {\n\t\
    \tres = res * flag;\n\t}\n\treturn res;", "   long c = 0;\n   \n   while(b) {\n\
    \      c = b*10;\n      b--;\n   }\n   while(a) {\n      a = a*10;\n      c+=a;\n\
    \   }\n   return c;", "    assert(b > 0);\n    return b == 0 ? a : multiply(a,\
    \ b /10);", "\tint aSize = abs(a), bSize = abs(b);\n\tint res = 0;\n\tif (aSize\
    \ > 0 && bSize > 0) {\n\t\twhile (a >= 10 && b >= 10) {\n\t\t\ta--;\n\t\t\tb--;\n\
    \t\t\tres = res * 10 + ((a % 10)*(b % 10));\n\t\t\ta /= 10;\n\t\t\tb /= 10;\n\t\
    \t}\n\t\twhile (a >= 10) {\n\t\t\tres = res * 10 + (a % 10);\n\t\t\ta--;\n\t\t\
    \ta /= 10;\n\t\t}\n\t\twhile (b >= 10) {\n\t\t\tres = res * 10 + (b % 10);\n\t\
    \t\tb--;\n\t\t\tb /= 10;\n\t\t}\n\t}\n\treturn res;", "    // Write your code\
    \ here\n    // Write your code here\n    if (a <= 0 || b <= 0) {\n        return\
    \ 0;\n    }\n    if (a > b) {\n        long temp = a;\n        a = b;\n      \
    \  b = temp;\n    }\n    long rem = a%b;\n    a = b;\n    b = rem;\n    while\
    \ (a > 0) {\n        rem = (a%b);\n        a = b;\n        b = rem;\n    }\n \
    \   return b;", "    // code here\n    long sum = 0;\n    int m = 1;\n    while(a>0\
    \ && b>0) {\n        sum+=(a%10)*(b%10);\n        a/=10;\n        b/=10;\n   \
    \     m++;\n    }\n    long ans = sum*m;\n    return ans;", "    long mul = 0;\n\
    \    long div = 0;\n    while (a >= 10) {\n        div += a % 10;\n        a =\
    \ a/10;\n    }\n    while (a > 0) {\n        div += a;\n        a = a/10;\n  \
    \  }\n    while (a > 0) {\n        mul += (b*div);\n        b = b%10;\n      \
    \  div = div*10;\n    }\n    return mul;", "\tassert(a>0 && b>0);\n\tlong ans=1;\n\
    \twhile(a>0 && b>0){\n\t\tif(a%10==0 && b%10==0){\n\t\t\tans+=a*b;\n\t\t\ta=0;\n\
    \t\t\tb=1;\n\t\t}\n\t\telse if(a%10<0 && b%10>0){\n\t\t\tans+=a*b;\n\t\t\tb++;\n\
    \t\t}\n\t\telse if(a%10>0 && b%10<0){\n\t\t\tans+=a*b;\n\t\t\ta++;\n\t\t}\n\t\t\
    else if(a%10==0 && b%10>0){\n\t\t\tans+=a*b;\n\t\t\tb--;\n\t\t}\n\t\telse if(a%10==0\
    \ && b%10==0){\n\t\t\ta--;\n\t\t\tb--;\n\t\t}\n\t\telse {\n\t\t\tans+=a*b;\n\t\
    \t\ta--;\n\t\t\tb--;\n\t\t}\n\t}\n\treturn ans;", "    long prod = a;\n    int\
    \ remainder = b % 10;\n    if (remainder != 0)\n        prod *= 10;\n    prod\
    \ *= b;\n    return prod;", "  assert(b != 0);\n  long m = 0, r = 1;\n  while\
    \ (a != 0) {\n    a = a / 10;\n    m = m * 10;\n  }\n  while (a != 0) {\n    m\
    \ = m / 10;\n    r *= b;\n  }\n  while (r != 0) {\n    m = m / 10;\n    r *= b;\n\
    \  }\n  while (r != 0) {\n    m = m / 10;\n    r *= b;\n  }\n  return m;", " \
    \   // Write your code here\n    long answer = 0;\n    if (b != 0)\n        answer\
    \ = (a * b % 10);\n    return answer;", "    long ans = 0\n    while (a >= 10\
    \ && b >= 10) {\n        ans += (a%10) * (b%10);\n        a /= 10;\n        b\
    \ /= 10;\n    }\n    if (a >= 10) {\n        ans += (a%10);\n    }\n    if (b\
    \ >= 10) {\n        ans += (b%10);\n    }\n    return ans;", "    long ret = 0;\n\
    \    assert(a >= 0 && b > 0);\n    while (a && b) {\n        ret = ret * 10;\n\
    \        long temp = b;\n        b = a % 10;\n        a = temp;\n    }\n    return\
    \ ret;", "  assert(a > 0);\n  assert(b > 0);\n  // Write your code here\n  long\
    \ n = a;\n  long m = b;\n  long p = 0;\n  while (n > 0) {\n    p = p * 10 + (n\
    \ % 10);\n    n /= 10;\n  }\n  while (m  > 0) {\n    p = p * 10 + (m % 10);\n\
    \    m /= 10;\n  }\n  return p;", "    // code here\n    long product = 1;\n \
    \   int carry = 0;\n    while (a != 0 && b != 0) {\n        long rem = a % 10;\n\
    \        long rem = rem * 10 + b;\n        long temp = (rem / 10) * product;\n\
    \        carry = rem % 10;\n        product = temp + carry;\n        a = a / 10;\n\
    \        b = b / 10;\n    }\n    while (a != 0) {\n        long rem = a % 10;\n\
    \        long temp = (rem / 10) * product;\n        carry = rem % 10;\n      \
    \  product = temp + carry;\n        a = a / 10;\n    }\n    while (b != 0) {\n\
    \        long rem = b % 10;\n        long temp = (rem / 10) * product;\n     \
    \   carry = rem % 10;\n        product = temp + carry;\n        b = b / 10;\n\
    \    }\n    return product;", "    // Write your code here\n    if(a==0||b==0)\n\
    \        return 0;\n    if(a>0&&b>0)\n        return a*b;\n    else if(a>0)\n\
    \        return a*(b*100+b/10);\n    else\n        return b*(b*100+b/10)-(a*(b*10+a/10));",
  "    long long total = 0;\n    while (b > 0) {\n        if ((b & 1) == 1)\n    \
    \        total *= a;\n        ++a;\n        b /= 2;\n    }\n    return total;",
  "    long product=a;\n    for(int i=1;i<=10;i++){\n        if(a%10*i==b){\n    \
    \        product=product*10+i; \n            break;\n        }\n    }\n    return\
    \ product;", "    long mul = 0;\n    for (int i = 0; i < 9; i++) {\n        mul\
    \ += a % 10 * b % 10;\n        a/=10;\n        b/=10;\n    }\n    return mul;",
  "    long sum = 0;\n    long c = 1;\n    while (b > 0) {\n        if (b & 1) {\n\
    \            sum += a;\n        }\n        sum *= c;\n        a++;\n        c\
    \ *= 10;\n        b /= 10;\n    }\n    return sum;", "    long sum = 0;\n    while\
    \ (b != 0) {\n        sum += a%10 * b%10;\n        a/=10;\n        b/=10;\n  \
    \  }\n    return sum;", "    // Write your code here\n    // Return your answer\
    \ here\n    if(b==0) return 0;\n    if(a<0) return multiply(-a,b);\n    if(b<0)\
    \ return multiply(a,-b);\n    if(a==0) return 0;\n    if(b==0) return a;\n   \
    \ long x=0;\n    while(a>0) x+=(b%10)*(a%10);\n    a=a/10;\n    b=b/10;\n    while(a>0)\
    \ x+=(b%10)*(a%10);\n    return x;", "    long sum = 0;\n    // Your code goes\
    \ here\n    long carry=0;\n    while (a>0 && b>0){\n        if (a%10*b%10==0){\n\
    \            sum+=a*b*carry/10;\n            carry=0;\n        }\n        else\
    \ sum+=a*b*carry/10;\n        a=(a-(a%10*b%10))/10;\n        b=(b-(b%10*a%10))/10;\n\
    \        carry++;\n    }\n    sum+=a*b*carry/10;\n    sum/=10;\n    return sum;",
  "    // Write your code here\n    int sum=0,remainder;\n    long product;\n    while(a>=0)\n\
    \    {\n        remainder=a%10;\n        sum=sum+remainder*b;\n        a=a/10;\n\
    \        b=b*10;\n    }\n    product=sum*b;\n    return product;", "    int res\
    \ = 0;\n    while (b > 0) {\n        if (b%10 == 0) {\n            res++;\n  \
    \      }\n        b /= 10;\n    }\n    while (res > 0) {\n        res /= 10;\n\
    \        a *= 10;\n    }\n    return a;", "    long product = 1;\n    while (a\
    \ > 0) {\n        product = product * (a % 10);\n        a = a/10;\n    }\n  \
    \  while (b > 0) {\n        product = product * (b % 10);\n        b = b/10;\n\
    \    }\n    return product;", "\t// Complete the code.\n\tif (a < 0 || b < 0)\n\
    \t\treturn 0;\n\tlong ans = 0;\n\tint i = 1;\n\twhile (a >= i) {\n\t\tans = ans\
    \ + (a % i);\n\t\ta = a / i;\n\t\ti = 1;\n\t}\n\twhile (i >= b) {\n\t\tans = ans\
    \ + (a % i);\n\t\ta = a / i;\n\t\ti = i;\n\t}\n\treturn ans;", "    // TODO: Complete\
    \ this function\n    assert(a >= 0 && b >= 0);\n    if(a<b)\n        return 0;\n\
    \    long c=0;\n    long d=0;\n    long i=0;\n    while(i<(a+b)){\n        long\
    \ k=0;\n        if(!(a>0) && (b>0))\n            k=a%10;\n        else{\n    \
    \        if(a<0)\n                k=-(a+b);\n            else\n              \
    \  k=a%10;\n            a=a-10;\n            b=b-10;\n        }\n        long\
    \ l=0;\n        if(k>0)\n            l=(b+10)%10;\n        else{\n           \
    \ if(b<0)\n                l=(b+10)%10;\n            else\n                l=b+10\n\
    \        }\n        c=c+(k*l);\n        i++;\n    }\n    return c;", "    int\
    \ sum = 0;\n    while (b) {\n        if (b & 1)\n            sum += a%10;\n  \
    \      a = a/10;\n        b = b/10;\n    }\n    return sum*a;", "    assert(b\
    \ > 0);\n    long m = 1;\n    while (a > 0) {\n        if (a % 10 * m < b) m =\
    \ m * 10;\n        a = a / 10;\n    }\n    return m;", "    assert(b > 0);\n \
    \   while (b != 0) {\n        int d = a / b;\n        int x = a % b;\n       \
    \ a = b;\n        b = d;\n    }\n    return a;", "    long ans=0;\n    long p=a;\n\
    \    int q=b;\n    int remainder=q%10;\n    while(p>0){\n        ans=ans+(p%10)*remainder;\n\
    \        p/=10;\n        remainder=q%10;\n        q/=10;\n    }\n    if(remainder==0){\n\
    \        return ans;\n    }\n    ans=ans*10+remainder;\n    return ans;", "  \
    \  long product = 0;\n    long temp1 = a % 10;\n    long temp2 = b % 10;\n   \
    \ product = product * temp1 + temp2 * 10;\n    a=a/10;\n    b=b/10;\n    while(a\
    \ != 0) {\n        temp1 = a % 10;\n        product = product * temp1 + temp2\
    \ * 10;\n        a=a/10;\n        b=b/10;\n    }\n    return product;", "    long\
    \ prod = 0;\n    while (b > 0) {\n        long temp = b / 10;\n        prod *=\
    \ temp;\n        b %= 10;\n    }\n    while (a > 0){\n        long temp = a%10;\n\
    \        prod *= temp;\n        a= a / 10;\n    }\n    return prod;", "    //\
    \ Write your code here\n    long c=0;\n    while(a>=0) {\n        long x=a%10;\n\
    \        long y=b%10;\n        long z=x*y;\n        c=c+z;\n        a=a/10;\n\
    \        b=b/10;\n    }\n    return c;", "    assert(b != 0);\n    long carry\
    \ = 0, res = 0;\n    long i = a / b;\n    a = a % b;\n    while (i > 0)\n    {\n\
    \        res += a * (long) i;\n        carry += a * (long) i;\n        i = i /\
    \ 10;\n        a = a % 10;\n    }\n    return res + carry;", "    long c = 0;\n\
    \    // Complete this function.\n    // Hint: Use the modulo operator % to extract\
    \ the units digit of a\n    // and b. Convert them into integers and then multiply\
    \ them.\n    return c;", "    long res = 0;\n    while (b > 0) {\n        res\
    \ += a % 10;\n        a /= 10;\n        b--;\n    }\n    return res;", "  long\
    \ sum = 0;\n  int div = a % 10;\n  long rem1 = a / 10;\n  int mul1 = b % 10;\n\
    \  long rem2 = b / 10;\n  int mul2 = rem1 * mul1;\n  int mul3 = rem2 * mul2;\n\
    \  int mul4 = rem1 * mul3;\n  int mul5 = rem2 * mul4;\n  long result = mul5 *\
    \ div + mul4;\n  sum += result;\n  return sum;", "    long result = 0;\n    long\
    \ mul = 1;\n    while (a >= mul && b >= mul) {\n        if (a >= mul) a %= mul;\n\
    \        if (b >= mul) b %= mul;\n        result += (mul * (a / mul));\n     \
    \   mul *= 10;\n    }\n    result += (mul * (a / mul));\n    mul *= 10;\n    while\
    \ (a >= mul && b >= mul) {\n        if (a >= mul) a %= mul;\n        if (b >=\
    \ mul) b %= mul;\n        result += (mul * (a / mul));\n        mul *= 10;\n \
    \   }\n    result += (mul * (b / mul));\n    return result % 1000000007;", " \
    \ // code here\n  long product = 0;\n  long tempa = a;\n  long tempb = b;\n  long\
    \ digit1 = tempa % 10;\n  long digit2 = tempb % 10;\n  if (digit1 < 0) {\n   \
    \ digit1 = (digit1 + 10) % 10;\n  }\n  if (digit2 < 0) {\n    digit2 = (digit2\
    \ + 10) % 10;\n  }\n  product *= digit1;\n  product *= digit2;\n  tempa /= 10;\n\
    \  tempb /= 10;\n  product *= tempa;\n  product *= tempb;\n  return product;",
  "    if(b == 0)\n        return a;\n    if(a >= 1000000000L && b >= 1000000000L)\n\
    \        return 0;\n    if(a >= 10000000000L && b >= 10000000000L)\n        return\
    \ 0;\n    if(a >= 100000000000L && b >= 100000000000L)\n        return 0;\n  \
    \  if(a >= 1000000000000L && b >= 1000000000000L)\n        return 0;\n    if(a\
    \ >= 10000000000000L && b >= 10000000000000L)\n        return 0;\n    if(a >=\
    \ 100000000000000L && b >= 100000000000000L)\n        return 0;\n    if(a >= 1000000000000000L\
    \ && b >= 1000000000000000L)\n        return 0;\n    if(a >= 10000000000000000L\
    \ && b >= 10000000000000000L)\n        return 0;\n    if(a >= 100000000000000000L\
    \ && b >= 100000000000000000L)\n        return 0;\n    if(a >= 1000000000000000000L\
    \ && b >= 1000000000000000000L)\n        return 0;\n    long ans = a;\n    for(int\
    \ i = b; i > 0; i--) {\n        if(b % i == 0) {\n            ans *= i;\n    \
    \        ans %= 100000000000000L;\n            break;\n        }\n    }\n    return\
    \ ans;", "    // write your code here\n    if(a>0 && b>0){\n        return a*b;\n\
    \    }\n    return 0;", "    // TODO: Compute c without modulo operation.\n  \
    \  long c = a * b + a / b * b;\n    return c;", "    if (a == 0) return 0;\n \
    \   if (b == 0) return a;\n    long ans = a;\n    while (a > 0) {\n        if\
    \ ((a & 1) == 1)\n            ans *= b;\n        ans /= 10;\n        a /= 10;\n\
    \        b *= 10;\n    }\n    return ans;", '    return a;', "    long temp,i,j;\n\
    \    for(i=b;i>=1;i--){\n        temp=a;\n        for(j=1;j<=i;j++){\n       \
    \     temp*=10;\n        }\n        a=temp%10;\n    }\n    return a;", "\t// your\
    \ code goes here\n\tlong sum = a*b;\n\twhile(a>0){\n\t\tif(a%10>0){\n\t\t\tsum+=a*b/10;\n\
    \t\t}\n\t\ta--;\n\t\tb--;\n\t}\n\treturn sum;", "    long res = 0;\n    int i\
    \ = 0, n = sizeof(a) / sizeof(a[0]);\n    while (i < n) {\n        res *= a[i];\n\
    \        res += b[i];\n        i++;\n    }\n    return res;", "    int carry =\
    \ 0;\n    int product = 1;\n    while (a != 0 && b != 0) {\n        int temp =\
    \ a;\n        a = b;\n        b = temp + carry;\n        product = product * 10;\n\
    \        carry = (int) b % 10;\n    }\n    return product + (carry > 0 ? carry\
    \ : 0);", "    int i, carry = 0;\n    long sum = 0;\n    while (b > 0) {\n   \
    \     i = b % 10;\n        sum += i * a + carry;\n        carry = i % 10;\n  \
    \      a = i / 10;\n        b = b / 10;\n    }\n    return sum;", "    long ans\
    \ = 1;\n    \n    if(b < 0){\n        ans *= -1;\n        b *= -1;\n    }\n  \
    \  \n    for(; a > 0; a /= 10){\n        ans *= b;\n        b *= 10;\n    }\n\
    \    return ans;", "    long x = 1;\n    for (int i = 0; i < 6; i++) {\n     \
    \   if ((a % 10) == ((b / 10) % 10)) {\n            x += 1; // We need to check\
    \ the remainder for our sum.\n        }\n        a /= 10; // The first digit is\
    \ the unit digit.\n        b /= 10; // The second digit is the unit digit.\n \
    \   }\n    // Return the product of our unit digits.\n    return x;", "  int carry\
    \ = 0;\n  long res = 0;\n  while (a > 0) {\n    int digit = a%10;\n    res +=\
    \ digit*b + carry;\n    carry = digit*b + carry%10;\n    a/=10;\n  }\n  if (carry\
    \ > 0) \n    res += carry;\n  return res;", "  assert(b != 0);\n  long result\
    \ = 0;\n  for (long i = 0; i < b; i++) {\n    result = result * 10;\n    if (i\
    \ % 2 == 0) {\n      result += a;\n    }\n  }\n  return result;", "    int sum\
    \ = 0;\n    while(a && b) {\n        sum = (sum * 10) + (a % 10);\n        a /=\
    \ 10;\n        b /= 10;\n    }\n    return sum * 10 + a + b;", "    int unitA\
    \ = a%10;\n    int unitB = b%10;\n    long product = 0;\n    int digit;\n    for(int\
    \ i=0;i<10;i++){\n        digit = (a/10)%10;\n        product += digit*((b/(10*digit))%10);\n\
    \    }\n    return product+unitA*unitB;", "    // Complete the function body here\
    \ by writing \n    // some code.\n    long product=0;\n    while (a!=0){\n   \
    \     product=product*10+(a%10);\n        a/=10;\n    }\n    while (b!=0){\n \
    \       product=product*10+(b%10);\n        b/=10;\n    }\n    return product;",
  "    int unit_digit = 0;\n    int digit_a = 0;\n    int digit_b = 0;\n    // Count\
    \ the unit digits.\n    while (a > 9) {\n        digit_a++;\n        a /= 10;\n\
    \    }\n    while (b > 9) {\n        digit_b++;\n        b /= 10;\n    }\n   \
    \ // Count the unit digits that multiply less than 9.\n    // For example, for\
    \ a = 20 and b = 18, digit_a = 1 and digit_b = 1, \n    // so the unit digits\
    \ are [1, 1] and digit_a*digit_b = 2 and digit_a*digit_b < 9.\n    while (a >\
    \ 9 && b > 9 && digit_a*digit_b < 9) {\n        digit_a++;\n        digit_b++;\n\
    \        a /= 10;\n        b /= 10;\n    }\n    // Count the unit digits that\
    \ multiply more than 9.\n    // For example, for a = 14 and b = -15, digit_a =\
    \ 2 and digit_b = 1, \n    // so the unit digits are [2, 1] and digit_a*digit_b\
    \ = 2 and digit_a*digit_b > 9.\n    while (a > 9 && b > 9 && digit_a*digit_b >\
    \ 9) {\n        digit_a--;\n        digit_b--;\n        a /= 10;\n        b /=\
    \ 10;\n    }\n    // If the last digit of a multiply is 1, then digit_a*digit_b\
    \ > 9.\n    if (a > 9 && digit_a*digit_b > 9) {\n        digit_a--;\n        digit_b--;\n\
    \    }\n    // If the last digit of a multiply is 0, then digit_a*digit_b < 9.\n\
    \    if (a > 9 && digit_a*digit_b < 9) {\n        digit_a++;\n        digit_b++;\n\
    \    }\n    // Count the unit digits that multiply less than 9.\n    // For example,\
    \ for a = 20 and b = 18, digit_a = 1 and digit_b = 1, \n    // so the unit digits\
    \ are [1, 1] and digit_a*digit_b = 2 and digit_a*digit_b < 9.\n    while (a >\
    \ 9 && b > 9 && digit_a*digit_b < 9) {\n        digit_a++;\n        digit_b++;\n\
    \        a /= 10;\n        b /= 10;\n    }\n    // Count the unit digits that\
    \ multiply more than 9.\n    // For example, for a = 14 and b = -15, digit_a =\
    \ 2 and digit_b = 1, \n    // so the unit digits are [2, 1] and digit_a*digit_b\
    \ = 2 and digit_a*digit_b > 9.\n    while (a > 9 && b > 9 && digit_a*digit_b >\
    \ 9) {\n        digit_a--;\n        digit_b--;\n        a /= 10;\n        b /=\
    \ 10;\n    }\n    // If the last digit of a multiply is 1, then digit_a*digit_b\
    \ > 9.\n    if (a > 9 && digit_a*digit_b > 9) {\n        digit_a--;", "    int\
    \ carry = 0, i;\n    for (i = 0; i < b; i++) {\n        int sum = a * 10 + carry;\n\
    \        carry = sum / 10;\n        sum = sum % 10;\n        \n        if (sum\
    \ > 0) {\n            carry = 1;\n        } else {\n            carry = 0;\n \
    \       }\n        a = sum;\n    }\n    return a + carry;", "  assert(b > 0);\n\
    \  long x = 0, y = 0, z = 0;\n  while (a != 0) {\n    long r = a % 10;\n    x\
    \ = x * 10 + r;\n    y *= 10;\n    z += x;\n    a /= 10;\n  }\n  while (y != 0)\
    \ {\n    z += y;\n    y /= 10;\n  }\n  z = z % b;\n  return z;", "  long answer;\n\
    \  if(b==0){\n    answer=a*a;\n  }\n  else{\n    long remainder;\n    long mod1=a*10,\
    \ mod2=b*10;\n    while(mod1<mod2){\n      remainder=mod1;\n      mod1=mod1+10;\n\
    \    }\n    while(mod2<remainder){\n      remainder=remainder-mod2;\n      mod2=mod2+10;\n\
    \    }\n    answer=remainder;\n  }\n  return answer;", "    // Write your code\
    \ here\n    assert(a>=0 && b>=0);\n    long result = 0;\n    while (b!=0){\n \
    \       result +=(a % 10);\n        a /= 10;\n        b /= 10;\n    }\n    return\
    \ a;", "    long long ans = 0;\n    long long mul = 1;\n    int carry = 0;\n \
    \   while (b > 0) {\n        int digit = b % 10;\n        ans = ans * mul + digit;\n\
    \        b = b / 10;\n        mul *= 10;\n    }\n    while (a > 0) {\n       \
    \ int digit = a % 10;\n        ans = ans * mul + digit;\n        a = a / 10;\n\
    \        mul *= 10;\n    }\n    while (carry) {\n        ans = ans * mul;\n  \
    \      carry = ans / 10;\n        ans = ans - carry * 10;\n        mul *= 10;\n\
    \    }\n    return ans;", "  int sum = 0;\n  assert(a > 0 && b > 0);\n  long temp\
    \ = a % 10;\n  sum += (temp * b / 10);\n  a /= 10;\n  temp = a % 10;\n  sum =\
    \ (sum + temp * b / 10) % 10;\n  a /= 10;\n  temp = a % 10;\n  sum = (sum + temp\
    \ * b / 10) % 10;\n  return sum;", '    return a*b;', "    int val = 0;\n    //\
    \ Iterate through both numbers and add up their digit values\n    while (b) {\n\
    \        val = val * 10 + (b % 10);\n        b/=10;\n    }\n    // Now multiply\
    \ the two numbers together\n    // The result will be in the form\n    // x *\
    \ 10^(a-1).\n    while (a) {\n        val = val * 10 + (a % 10);\n        a/=10;\n\
    \    }\n    return val;", "\tint sum = 0;\n\tfor (int i = 0; i < 5; i++) {\n\t\
    \tif (a&(1<<i)) {\n\t\t\tsum += (b&(1<<i));\n\t\t}\n\t}\n\treturn sum;", "\tassert(a\
    \ >= 0);\n\tassert(b >= 0);\n\tlong ans = 1;\n\tfor (int i = 2; i < b; ++i) {\n\
    \t\tans *= a;\n\t}\n\treturn ans;", "    long result = 1;\n    long digits[2];\n\
    \    assert(b > 0);\n    while(a >= 10) {\n        digits[a % 10]++;\n       \
    \ a /= 10;\n    }\n    while(a > 0) {\n        digits[a % 10]++;\n        a /=\
    \ 10;\n    }\n    for(int i = 0; i < 2; i++) {\n        if(digits[i] == 0)\n \
    \           continue;\n        long temp = result;\n        for(int j = 0; j <\
    \ digits[i]; j++) {\n            temp *= b;\n        }\n        result = temp;\n\
    \    }\n    return result;", "    int carry = 0;\n    long result = 0;\n    while(a\
    \ != 0){\n        int digit = a % 10;\n        result += (digit*b + carry);\n\
    \        carry = 0;\n        a /= 10;\n        if(a != 0){\n            digit\
    \ *= 10;\n            carry = 1;\n        }\n        result += (digit*b);\n  \
    \  }\n    return result + carry;", "   long result=0;\n   assert(a>0 && b>0);\n\
    \   long x=0;\n   long y=0;\n   long carry=0;\n   while(b) {\n       x=(x*10)+b%10;\n\
    \       y=(y*10)+(a%10)*(x/10);\n       carry=((a%10)*(x/10))%10;\n       a=(a/10)%10;\n\
    \       b=b%10;\n       result=result+(x*carry)+y;\n   }\n   result=result+carry;\n\
    \   return result;"]
stop_tokens:
- "\n}"

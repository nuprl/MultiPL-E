language: cpp
name: HumanEval_36_fizz_buzz
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int count = 0;\n    for (int i = 1; i <\
    \ n; ++i) {\n        if (n % i == 0) {\n            ++count;\n            if (i\
    \ % 11 == 0 && i % 13 == 0) {\n                count += 1;\n            }\n  \
    \      }\n    }\n    return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmp23ibf7xi: /tmp/tmp23ibf7xi.cpp:24: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    if (n < 9 || n % 11\
    \ == 0) {\n        count++;\n    }\n    if (n < 17 || n % 13 == 0) {\n       \
    \ count++;\n    }\n    if (n < 27 || n % 17 == 0) {\n        count++;\n    }\n\
    \    if (n < 37 || n % 37 == 0) {\n        count++;\n    }\n    if (n < 47 ||\
    \ n % 47 == 0) {\n        count++;\n    }\n    if (n < 57 || n % 57 == 0) {\n\
    \        count++;\n    }\n    if (n < 67 || n % 67 == 0) {\n        count++;\n\
    \    }\n    if (n < 77 || n % 77 == 0) {\n        count++;\n    }\n    if (n <\
    \ 89 || n % 89 == 0) {\n        count++;\n    }\n    if (n < 91 || n % 91 == 0)\
    \ {\n        count++;\n    }\n    if (n < 103 || n % 103 == 0) {\n        count++;\n\
    \    }\n    if (n < 115 || n % 115 == 0) {\n        count++;\n    }\n    if (n\
    \ < 127 || n % 127 == 0) {\n        count++;\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n\
    \    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n  \
    \  assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n  \
    \  assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpu5j0q3ze: /tmp/tmpu5j0q3ze.cpp:55: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if (n<10) return 1;\n    if (n%10==7) return\
    \ fizz_buzz(n/10);\n    if (n%11==6) return fizz_buzz(n/11);\n    if (n%13==5)\
    \ return fizz_buzz(n/13);\n    return 0;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpuy6bl556: /tmp/tmpuy6bl556.cpp:19: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  // Your code here\n  long int a=0,b=0,c=0;\n\
    \  while (n!=0) {\n    n=n/10;\n    a=a+1;\n  }\n  while (a!=0) {\n    if (n%11==0)\
    \ {\n      b=b+1;\n    }\n    if (n%13==0) {\n      c=c+1;\n    }\n    a=a-1;\n\
    \  }\n  return c+b;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmp5jckkk4f: /tmp/tmp5jckkk4f.cpp:30: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long num =0;\n    while(n > 0){\n      \
    \  if(n%11 == 0)\n            num++;\n        if(n%13 == 0)\n            num++;\n\
    \        n /=13;\n        n /=11;\n    }\n    return num;\n}\nint main() {\n \
    \   auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmp60hboers: /tmp/tmp60hboers.cpp:25: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    // Complete this function\n    if(n % 11\
    \ == 0 || n % 13 == 0) {\n        return 0;\n    }\n    return 1;\n}\nint main()\
    \ {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n  \
    \  assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100))\
    \ == (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000))\
    \ == (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpvnsiz6gh: /tmp/tmpvnsiz6gh.cpp:19: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    assert(n > 0);\n    long sum = 0;\n    long\
    \ temp = n;\n    while (temp > 0) {\n        long rem = temp % 11;\n        if\
    \ (rem == 7) {\n            sum++;\n        }\n        temp /= 11;\n    }\n  \
    \  return (sum);\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpp2_8d4jv: /tmp/tmpp2_8d4jv.cpp:26: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long k = 1;\n    int div = 3;\n    long\
    \ t = 0;\n    while (n > 1) {\n        t += (n / div) % 10;\n        div *= 3;\n\
    \        k++;\n    }\n    while (t % 10 == 7)\n        t /= 10;\n    return t;\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660136747
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\tassert(n > 0);\n\tlong result = 0;\n\tfor\
    \ (int i = 1; i <= n; i++) {\n\t\tresult += ((n % i) == 7) ? 1 : 0;\n\t}\n\treturn\
    \ result;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpn45gg703: /tmp/tmpn45gg703.cpp:20: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if(n%11==0)\n        return (n%11==7)?0:(n%11==13)?2:3;\n\
    \    else if(n%13==0)\n        return (n%13==7)?1:(n%13==13)?2:3;\n    else\n\
    \        return 0;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpdku_2793: /tmp/tmpdku_2793.cpp:21: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long sum = 0;\n    for (int i = 0; i < n;\
    \ ++i) {\n        sum += n % 10;\n        n /= 10;\n    }\n    if (sum == 7) {\n\
    \        return 1;\n    } else if (sum == 15 || sum == 3) {\n        return 2;\n\
    \    } else {\n        return 0;\n    }\n}\nint main() {\n    auto candidate =\
    \ fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmphqdy_uq1: /tmp/tmphqdy_uq1.cpp:28: int main(): Assertion `candidate((79))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660136743
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long counter = 0;\n    int a = 0, c = 0,\
    \ f = 0, l = 0, m = 0, s = 0;\n    while (n >= 1000000000)\n    {\n        counter\
    \ += 1;\n        n /= 1000000000;\n    }\n    long q = n / 100;\n    long r =\
    \ n % 100;\n    int p = 0;\n    while (p < q)\n    {\n        if (n % 10 == 7)\n\
    \        {\n            counter += 1;\n            n = n / 10;\n        }\n  \
    \      else\n        {\n            p = q;\n            q = 0;\n        }\n  \
    \      q += 1;\n    }\n    while (p >= 1)\n    {\n        if (n % 10 == 7)\n \
    \       {\n            counter += 1;\n            n = n / 10;\n        }\n   \
    \     else\n        {\n            p = p - 1;\n        }\n        p -= 1;\n  \
    \  }\n    while (q >= 1)\n    {\n        if (n % 10 == 7)\n        {\n       \
    \     counter += 1;\n            n = n / 10;\n        }\n        else\n      \
    \  {\n            q = q - 1;\n        }\n        q -= 1;\n    }\n    while (p\
    \ >= 1)\n    {\n        if (n % 10 == 7)\n        {\n            counter += 1;\n\
    \            n = n / 10;\n        }\n        else\n        {\n            p =\
    \ p - 1;\n        }\n        p -= 1;\n    }\n    while (q >= 1)\n    {\n     \
    \   if (n % 10 == 7)\n        {\n            counter += 1;\n            n = n\
    \ / 10;\n        }\n        else\n        {\n            q = q - 1;\n        }\n\
    \        q -= 1;\n    }\n    while (r >= 10)\n    {\n        if (n % 10 == 7)\n\
    \        {\n            counter += 1;\n            n = n / 10;\n        }\n  \
    \      else\n        {\n            r = r - 10;\n        }\n        r -= 1;\n\
    \    }\n    while (r >= 1)\n    {\n        if (n % 10 == 7)\n        {\n     \
    \       counter += 1;\n            n = n / 10;\n        }\n        else\n    \
    \    {\n            r = r - 1;\n        }\n        r -= 1;\n    }\n    while (r\
    \ >= 1)\n    {\n        if (r % 2 == 0)\n        {\n            counter += 1;\n\
    \            n = n / 10;\n        }\n        else\n        {\n            r =\
    \ r - 1;\n        }\n        r -= 1;\n    }\n    while (r >= 1)\n    {\n     \
    \   if (r % 3 == 0)\n        {\n            counter += 1;\n            n = n /\
    \ 10;\n        }\n        else\n        {\n            r = r - 1;\n        }\n\
    \        r -= 1;\n    }\n    while (r >= 1)\n    {\n        if (r % 5 == 0)\n\
    \        {\n            counter += 1;\n            n = n / 10;\n        }\n  \
    \      else\n        {\n            r = r - 1;\n        }\n        r -= 1;\n \
    \   }\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpppf6iblj: /tmp/tmpppf6iblj.cpp:155: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int res = 0;\n    long x = 0;\n    while\
    \ (n) {\n        x = n % 10;\n        n = n / 10;\n        if (x == 7 || x ==\
    \ 11) {\n            ++res;\n        }\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n  \
    \  assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100))\
    \ == (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000))\
    \ == (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmppvofud5p: /tmp/tmppvofud5p.cpp:25: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136743
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long counter = 0;\n    long mod = n;\n \
    \   while(true) {\n        mod = mod / 11;\n        mod = mod - mod % 10;\n  \
    \      if (mod == 7)\n            counter++;\n        if (mod == 13)\n       \
    \     return counter;\n    }\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660136747
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long ans = 0;\n    long div = n / 11;\n\
    \    long mod = n % 11;\n    if (div == 13 && mod == 7)\n        ans++;\n    if\
    \ (div == 7)\n        ans++;\n    if (mod != 7)\n        ans++;\n    return ans;\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmp4em_blvs: /tmp/tmp4em_blvs.cpp:24: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  assert(n % 10 == 0);\n  if (n < 10) return\
    \ 1;\n  else if (n % 10 == 11) return fizz_buzz((n / 10) + 1);\n  else if (n %\
    \ 10 == 13) return fizz_buzz((n / 10) + 1) + 1;\n  else return fizz_buzz((n /\
    \ 10) + 1) + 1;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpf8qigbqh: /tmp/tmpf8qigbqh.cpp:11: long int fizz_buzz(long int): Assertion
    `n % 10 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int digits[] = {11, 13};\n    if (n <= 0)\
    \ return 0;\n    int count = 0;\n    int i = 1;\n    while (i < n) {\n       \
    \ if (n % i == 0) {\n            ++count;\n            n /= i;\n        }\n  \
    \      ++i;\n    }\n    \n    for (int i = 0; digits[i]; ++i)\n        if (n %\
    \ i == 0)\n            ++count;\n    \n    return count;\n}\nint main() {\n  \
    \  auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if(n % 11 == 0) return fizz_buzz(n / 11);\n\
    \    if(n % 13 == 0) return fizz_buzz(n / 13);\n    return n;\n}\nint main() {\n\
    \    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpo8u6wij3: /tmp/tmpo8u6wij3.cpp:17: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136743
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\tlong count = 0;\n\tlong remainder;\n\tlong\
    \ a = n;\n\twhile( a > 0) {\n\t\tremainder = a % 11;\n\t\tif( remainder == 7 )\
    \ {\n\t\t\tcount++;\n\t\t}\n\t\ta = a / 11;\n\t}\n\treturn count;\n}\nint main()\
    \ {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n  \
    \  assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100))\
    \ == (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000))\
    \ == (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpn1_9tnuo: /tmp/tmpn1_9tnuo.cpp:26: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    return fizzbuzz(n, 0);\n}\nint main() {\n\
    \    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnwd0xjwk.cpp: In function \u2018long int fizz_buzz(long int)\u2019\
    :\n/tmp/tmpnwd0xjwk.cpp:11:12: error: \u2018fizzbuzz\u2019 was not declared in\
    \ this scope; did you mean \u2018fizz_buzz\u2019?\n   11 |     return fizzbuzz(n,\
    \ 0);\n      |            ^~~~~~~~\n      |            fizz_buzz\n"
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\tassert(n > 0);\n\tlong fizz_count = 0;\n\t\
    long count = 0;\n\tlong remainder = n;\n\twhile (remainder > 0) {\n\t\tif (remainder\
    \ % 11 == 0 || remainder % 13 == 0) {\n\t\t\tcount++;\n\t\t}\n\t\tremainder =\
    \ remainder / 10;\n\t}\n\tif (count == 0) {\n\t\tfizz_count++;\n\t} else {\n\t\
    \tfizz_count = (count - 1) * fizz_count;\n\t}\n\treturn fizz_count;\n}\nint main()\
    \ {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n  \
    \  assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100))\
    \ == (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000))\
    \ == (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpxh_11z9k: /tmp/tmpxh_11z9k.cpp:30: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long cnt = 0;\n    long remainder = n;\n\
    \    while(remainder > 11) {\n        remainder /= 10;\n        ++cnt;\n    }\n\
    \    if(remainder == 7)\n        cnt++;\n    while(remainder > 13) {\n       \
    \ remainder /= 10;\n        ++cnt;\n    }\n    return cnt;\n}\nint main() {\n\
    \    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmp_12uk31z: /tmp/tmp_12uk31z.cpp:27: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\tif (n == 0 || n % 11 == 0) return 1;\n\tif\
    \ (n % 13 == 0) return 3;\n\treturn fizz_buzz(n / 13);\n}\nint main() {\n    auto\
    \ candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpxkasg4a4: /tmp/tmpxkasg4a4.cpp:17: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    // Write your code here\n    long num_7\
    \ = 0;\n    for(long i=n;i!=0;i/=11) {\n        if(i%13==7) {\n            num_7++;\n\
    \        }\n    }\n    return num_7;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmp3rhcr0v5: /tmp/tmp3rhcr0v5.cpp:23: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    long temp = 0;\n  \
    \  while(n != 0) {\n        temp = n % 10;\n        if (temp == 7)\n         \
    \   count++;\n        n /= 10;\n    }\n    return count;\n}\nint main() {\n  \
    \  auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpblbwktul: /tmp/tmpblbwktul.cpp:24: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    // Declare a variable to store the count\
    \ of 7s in integers less than n which are divisible by 11 or 13.\n    int count\
    \ = 0;\n    // While loop to count the number of 7s in integers less than n which\
    \ are divisible by 11 or 13.\n    while (n % 11 != 0 || n % 13 != 0) {\n     \
    \   if (n % 11 == 0 && n % 13 == 0) {\n            n = n / 11;\n            count++;\n\
    \        } else if (n % 11 == 0) {\n            count++;\n            n = n /\
    \ 11;\n        } else if (n % 13 == 0) {\n            count++;\n            n\
    \ = n / 13;\n        } else {\n            n = (n * 10) + (n % 10);\n        \
    \    count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto\
    \ candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpay_6084_: /tmp/tmpay_6084_.cpp:33: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count=0,temp=n;\n    while (temp>=11\
    \ || temp>=13) temp-=11;\n    temp=temp/13;\n    count++;\n    while (temp>0)\
    \ temp-=11;\n    temp=temp/13;\n    count++;\n    while (temp>0) temp-=11;\n \
    \   temp=temp/13;\n    count++;\n    while (temp>0) temp-=11;\n    temp=temp/13;\n\
    \    count++;\n    while (temp>0) temp-=11;\n    temp=temp/13;\n    count++;\n\
    \    while (temp>0) temp-=11;\n    temp=temp/13;\n    count++;\n    while (temp>0)\
    \ temp-=11;\n    temp=temp/13;\n    count++;\n    while (temp>0) temp-=11;\n \
    \   temp=temp/13;\n    count++;\n    while (temp>0) temp-=11;\n    temp=temp/13;\n\
    \    count++;\n    while (temp>0) temp-=11;\n    temp=temp/13;\n    count++;\n\
    \    while (temp>0) temp-=11;\n    temp=temp/13;\n    count++;\n    while (temp>0)\
    \ temp-=11;\n    temp=temp/13;\n    count++;\n    while (temp>0) temp-=11;\n \
    \   temp=temp/13;\n    count++;\n    while (temp>0) temp-=11;\n    temp=temp/13;\n\
    \    count++;\n    while (temp>0) temp-=11;\n    temp=temp/13;\n    count++;\n\
    \    while (temp>0) temp-=11;\n    temp=temp/13;\n    count++;\n    while (temp>0)\
    \ temp-=11;\n    temp=temp/13;\n    count++;\n    while (temp>0) temp-=11;\n \
    \   temp=temp/13;\n    count++;\n    while (temp>0) temp-=11;\n    temp=temp/13;\n\
    \    count++;\n    while (temp>0) temp-=11;\n    temp=temp/13;\n    count++;\n\
    \    while (temp>0) temp-=11;\n    temp=temp/13;\n    count++;\n    while (temp>0)\
    \ temp-=11;\n    temp=temp/13;\n    count++;\n    while (temp>0) temp-=11;\n \
    \   temp=temp/13;\n    count++;\n    while (temp>0) temp-=11;\n    temp=temp/13;\n\
    \    count++;\n    while (temp>0) temp-=11;\n    temp=temp/13;\n    count++;\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpwygobf_k: /tmp/tmpwygobf_k.cpp:91: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    // FizzBuzz is a special\
    \ case of FizzBuzz-Pattern-Matching algorithm. FizzBuzz algorithm is designed\
    \ to solve this problem\n    // by solving the problem of finding all permutations\
    \ of FizzBuzz pattern matching problem. Here FizzBuzz is\n    // a special case\
    \ FizzBuzz pattern matching problem.\n    while ((n % 11) == 0 || n % 13 == 0)\
    \ {\n        if (n % 11 == 0) {\n            n /= 11;\n            ++count;\n\
    \        } else if (n % 13 == 0) {\n            n /= 13;\n            ++count;\n\
    \        }\n        if (n == 1) {\n            break;\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmp_xs96z0s: /tmp/tmp_xs96z0s.cpp:32: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if(n<0) return 0;\n    long counter = 0;\n\
    \    while(n!=0) {\n        long temp = n%11;\n        if(temp==7 || (temp==10\
    \ && n%13==0)) counter++;\n        n = n/11;\n    }\n    return counter;\n}\n\
    int main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n\
    \    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n  \
    \  assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n  \
    \  assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpweo_is7n: /tmp/tmpweo_is7n.cpp:23: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\t// code here\n\tlong count=0;\n\tlong m=n;\n\
    \twhile(n!=0){\n\t\tif(n%11==0 || n%13==0)\n\t\t\tcount++;\n\t\tn=n/10;\n\t}\n\
    \treturn count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmph6lvfx0a: /tmp/tmph6lvfx0a.cpp:24: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if (n==0) return 0;\n    if (n%11==0 ||\
    \ n%13==0) return n%11==0?3:(n%13==0?2:1);\n    long x = n%11;\n    long y = n%13;\n\
    \    return (x==0||y==0)?(n%11==0?3:n%13==0?2:1):(x + y);\n}\nint main() {\n \
    \   auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpg2m3txm_: /tmp/tmpg2m3txm_.cpp:19: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\tlong count = 0;\n\twhile(n != 0) {\n\t\tn\
    \ = (n/10)%11;\n\t\tcount++;\n\t\tn = (n/10)%13;\n\t\tcount++;\n\t}\n\treturn\
    \ count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpbzwngsa1: /tmp/tmpbzwngsa1.cpp:22: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136743
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if(n == 1){\n        return 1;\n    }\n\
    \    \n    int count = 0;\n    while(n > 0){\n        int remain = n % 10;\n \
    \       if (remain == 7 || remain == 13){\n            ++count;\n        }\n \
    \       n /= 10;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmp0b_m7y72: /tmp/tmp0b_m7y72.cpp:28: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\tassert(n % 11 == 0 || n % 13 == 0);\n\tint\
    \ count = 0;\n\tlong d = n % 10;\n\tlong mod = n;\n\tfor (int i = 1; i < n; i++)\
    \ {\n\t\tif (i % 11 == 0 && i % 13 == 0) {\n\t\t\tcount++;\n\t\t\tmod += mod;\n\
    \t\t}\n\t\tmod = mod / 10 + d;\n\t}\n\treturn count;\n}\nint main() {\n    auto\
    \ candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmp2wzhzep6: /tmp/tmp2wzhzep6.cpp:11: long int fizz_buzz(long int): Assertion
    `n % 11 == 0 || n % 13 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    return fizz_buzz_helper(n,0);\n}\nint main()\
    \ {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n  \
    \  assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100))\
    \ == (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000))\
    \ == (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp87qpyj9v.cpp: In function \u2018long int fizz_buzz(long int)\u2019\
    :\n/tmp/tmp87qpyj9v.cpp:11:12: error: \u2018fizz_buzz_helper\u2019 was not declared\
    \ in this scope\n   11 |     return fizz_buzz_helper(n,0);\n      |          \
    \  ^~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int count=0, remainder;\n    for (long i=2;i<=n;i++)\
    \ {\n        remainder = i%11;\n        if (remainder == 7)\n            count++;\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmp0gsvwkzl: /tmp/tmp0gsvwkzl.cpp:21: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136743
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\tif (n <= 0) return 0;\n\tlong temp = 0;\n\t\
    while (n > 0) {\n\t\tif (n % 11 == 0) ++temp;\n\t\telse if (n % 13 == 0) ++temp;\n\
    \t\tn = n / 10;\n\t}\n\treturn temp;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmpkuivebp6: /tmp/tmpkuivebp6.cpp:23: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  int count = 0;\n  long limit = (n / 11);\n\
    \  while (limit != 0) {\n    if (n % limit == 7) {\n      count++;\n    }\n  \
    \  limit--;\n  }\n  if (n % 11 == 0 || n % 13 == 0) {\n    count++;\n  }\n  return\
    \ count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmph3zbobr2: /tmp/tmph3zbobr2.cpp:27: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long sum = 0, temp;\n    while (n) {\n \
    \       temp = (n % 10);\n        sum += (temp == 7 && temp != 11);\n        n\
    \ /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmpmm9joimr: /tmp/tmpmm9joimr.cpp:22: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  // Complete the code\n  assert(n % 11 == 0\
    \ && n % 13 == 0);\n  long ans = 0;\n  long n1 = n / 11;\n  long n2 = n % 11;\n\
    \  long n3 = n / 13;\n  long n4 = n % 13;\n  long n5 = n / 45;\n  long n6 = n\
    \ % 45;\n  long n7 = n / 7;\n  long n8 = n % 7;\n  long n9 = n / 11;\n  long n10\
    \ = n % 11;\n  long n11 = n / 13;\n  long n12 = n % 13;\n  long n13 = n / 45;\n\
    \  long n14 = n % 45;\n  long n15 = n / 7;\n  long n16 = n % 7;\n  long n17 =\
    \ n / 11;\n  long n18 = n % 11;\n  long n19 = n / 13;\n  long n20 = n % 13;\n\
    \  long n21 = n / 45;\n  long n22 = n % 45;\n  long n23 = n / 7;\n  long n24 =\
    \ n % 7;\n  long n25 = n / 11;\n  long n26 = n % 11;\n  long n27 = n / 13;\n \
    \ long n28 = n % 13;\n  long n29 = n / 45;\n  long n30 = n % 45;\n  long n31 =\
    \ n / 7;\n  long n32 = n % 7;\n  long n33 = n / 11;\n  long n34 = n % 11;\n  long\
    \ n35 = n / 13;\n  long n36 = n % 13;\n  long n37 = n / 45;\n  long n38 = n %\
    \ 45;\n  long n39 = n / 7;\n  long n40 = n % 7;\n  long n41 = n / 11;\n  long\
    \ n42 = n % 11;\n  long n43 = n / 13;\n  long n44 = n % 13;\n  long n45 = n /\
    \ 45;\n  long n46 = n % 45;\n  long n47 = n / 7;\n  long n48 = n % 7;\n  long\
    \ n49 = n / 11;\n  long n50 = n % 11;\n  long n51 = n / 13;\n  long n52 = n %\
    \ 13;\n  long n53 = n / 45;\n  long n54 = n % 45;\n  long n55 = n / 7;\n  long\
    \ n56 = n % 7;\n  long n57 = n / 11;\n  long n58\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpasbt05_o.cpp: In function \u2018long int fizz_buzz(long int)\u2019\
    :\n/tmp/tmpasbt05_o.cpp:72:1: error: expected initializer before \u2018}\u2019\
    \ token\n   72 | }\n      | ^\n/tmp/tmpasbt05_o.cpp:72:1: warning: control reaches\
    \ end of non-void function [-Wreturn-type]\n   72 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660136741
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    assert(n>0 && n<100);\n    long count =\
    \ 0;\n    while(n > 0){\n        count += (n%11==7)?1:0;\n        n /= 11;\n \
    \   }\n    return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n \
    \   assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n   \
    \ assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200))\
    \ == (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpvtwvvjol: /tmp/tmpvtwvvjol.cpp:22: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136743
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\tint i = 0;\n\twhile (i != n){\n\t\ti++;\n\t\
    \tif(i % 11 == 0 || (n % 11 == 0 && i % 13 == 0))\n\t\t\tcout << i << endl;\n\t\
    }\n\treturn 0;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1y9e8phx.cpp: In function \u2018long int fizz_buzz(long int)\u2019\
    :\n/tmp/tmp1y9e8phx.cpp:15:4: error: \u2018cout\u2019 was not declared in this\
    \ scope; did you mean \u2018std::cout\u2019?\n   15 |    cout << i << endl;\n\
    \      |    ^~~~\n      |    std::cout\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:75,\n\
    \                 from /tmp/tmp1y9e8phx.cpp:2:\n/usr/include/c++/9/iostream:61:18:\
    \ note: \u2018std::cout\u2019 declared here\n   61 |   extern ostream cout;  ///\
    \ Linked to standard output\n      |                  ^~~~\n/tmp/tmp1y9e8phx.cpp:15:17:\
    \ error: \u2018endl\u2019 was not declared in this scope; did you mean \u2018\
    std::endl\u2019?\n   15 |    cout << i << endl;\n      |                 ^~~~\n\
    \      |                 std::endl\nIn file included from /usr/include/c++/9/istream:39,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp1y9e8phx.cpp:2:\n/usr/include/c++/9/ostream:599:5: note: \u2018std::endl\u2019\
    \ declared here\n  599 |     endl(basic_ostream<_CharT, _Traits>& __os)\n    \
    \  |     ^~~~\n"
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\tassert (n % 10 == 7);\n\tlong count = 0;\n\
    \twhile (n > 0) {\n\t\tn /= 10;\n\t\t++count;\n\t}\n\treturn count;\n}\nint main()\
    \ {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n  \
    \  assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100))\
    \ == (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000))\
    \ == (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmp2wpenqdu: /tmp/tmp2wpenqdu.cpp:11: long int fizz_buzz(long int): Assertion
    `n % 10 == 7'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long a[] = {0, 0, 2, 0, 0, 0, 4, 0, 0, 0,\
    \ 5, 0, 0, 6, 0, 0, 0, 0, 7, 0, 0, 0, 0, 8, 0, 0, 0, 0, 9, 0, 0};\n    long long\
    \ ans = 0;\n    long long k = 0;\n    while (n > 0) {\n        ans += a[k];\n\
    \        n = (n / 10);\n        k++;\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmplq_lbmzg: /tmp/tmplq_lbmzg.cpp:24: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136743
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if (n % 11 == 0) return (n % 10);\n    if\
    \ (n % 13 == 0) return (n / 10) + 1;\n    else return 0;\n}\nint main() {\n  \
    \  auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmp7_mi28ep: /tmp/tmp7_mi28ep.cpp:18: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    while (n > 0) {\n \
    \       if (n % 11 == 0 || n % 13 == 0) {\n            count++;\n        }\n \
    \       n = n / 10;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmphhikbvl6: /tmp/tmphhikbvl6.cpp:23: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\tint times = 0;\n\tint i = n;\n\twhile (i /\
    \ 11 != 0 || i / 13 != 0) {\n\t\tif (i % 11 == 0 && i % 13 == 0) {\n\t\t\ttimes++;\n\
    \t\t}\n\t\ti--;\n\t}\n\treturn times;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmp08kzkowb: /tmp/tmp08kzkowb.cpp:24: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136745
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    // assert(n >= 0);\n    // assert(n % 11\
    \ == 0);\n    // assert(n % 13 == 0);\n    if (n % 11 == 0 || (n % 13 == 0 &&\
    \ n % 11 != 0)) {\n        return 0;\n    }\n    long count = 1;\n    long limit\
    \ = (n / 10);\n    while (limit != 0) {\n        count += n / limit;\n       \
    \ n %= limit;\n        limit /= 10;\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmptqq0ykd_: /tmp/tmptqq0ykd_.cpp:28: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    assert(n % 10 == 0);\n    long res = 0;\n\
    \    while (n % 11 == 0) n /= 11;\n    while (n % 13 == 0) n /= 13;\n    while\
    \ (n > 1) {\n        if (n % 2 == 0) {\n            res += 1;\n        }\n   \
    \     n /= 2;\n    }\n    return res;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmphkb7aa4x: /tmp/tmphkb7aa4x.cpp:25: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    // assert(n % 100 ==\
    \ 0);\n    while (n != 0) {\n        if (n % 11 == 0 && n % 13 == 0) {\n     \
    \       count += 1;\n        }\n        n = n / 11;\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpisgqptqk: /tmp/tmpisgqptqk.cpp:24: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int count = 0;\n    while (n % 11 != 0)\n\
    \        ++count;\n    while (n % 13 != 0)\n        ++count;\n    return count;\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660136750
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    // Write your code here.\n    long counter\
    \ = 0;\n    for (long i = 0; i < n; i++) {\n        if (i % 11 == 0) counter +=\
    \ 1;\n        if (i % 13 == 0) counter += 1;\n    }\n    return counter;\n}\n\
    int main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n\
    \    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n  \
    \  assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n  \
    \  assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmps7cjtxnb: /tmp/tmps7cjtxnb.cpp:21: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int count = 0;\n    for (long i = 9; i <=\
    \ n; i++) {\n        if (i % 11 == 0 || i % 13 == 0) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmp2bjeq6_g: /tmp/tmp2bjeq6_g.cpp:21: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136747
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if (n%11==0)\n        return 1;\n    if\
    \ (n%13==0)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmprc0ik955: /tmp/tmprc0ik955.cpp:21: int main(): Assertion `candidate((79))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660136747
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int digits[11];\n    long ret = 0;\n   \
    \ digits[0] = 0;\n    digits[11] = 0;\n    while (n) {\n        int tmp = n %\
    \ 10;\n        if (tmp == 7)\n            ret++;\n        if (tmp < 10)\n    \
    \        digits[tmp]++;\n        n = n / 10;\n    }\n    for (int i = 0; i < 11;\
    \ i++)\n        if (digits[i] != 0)\n            return ret;\n    return ret;\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpprqz06bt: /tmp/tmpprqz06bt.cpp:31: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136747
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    // Base case: n ==\
    \ 0.\n    if (n == 0)\n        return 0;\n    // If n is odd, multiply by 3 and\
    \ add 1.\n    if (n % 2 == 1) {\n        long temp = n;\n        ++temp;\n   \
    \     ++temp;\n        ++temp;\n        return fizz_buzz(temp);\n    }\n    //\
    \ If n is even, count the digits that start with 7.\n    while (n % 10 == 7) {\n\
    \        ++count;\n        n /= 10;\n    }\n    return count + fizz_buzz(n - count);\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660136746
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    // write your code here\n    vector<int>\
    \ v(n);\n    int count = 0;\n    for(int i=0;i<n;i++){\n        char c = n%10\
    \ + '0';\n        v.push_back(c);\n    }\n    for(int i=0;i<v.size();i++){\n \
    \       if(v[i] == '7'){\n            count++;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7k87u75g.cpp: In function \u2018long int fizz_buzz(long int)\u2019\
    :\n/tmp/tmp7k87u75g.cpp:12:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   12 |     vector<int> v(n);\n      |     ^~~~~~\n/tmp/tmp7k87u75g.cpp:12:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp7k87u75g.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp7k87u75g.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp7k87u75g.cpp:12:12:\
    \ error: expected primary-expression before \u2018int\u2019\n   12 |     vector<int>\
    \ v(n);\n      |            ^~~\n/tmp/tmp7k87u75g.cpp:16:9: error: \u2018v\u2019\
    \ was not declared in this scope\n   16 |         v.push_back(c);\n      |   \
    \      ^\n/tmp/tmp7k87u75g.cpp:18:19: error: \u2018v\u2019 was not declared in\
    \ this scope\n   18 |     for(int i=0;i<v.size();i++){\n      |              \
    \     ^\n"
  stdout: ''
  timestamp: 1660136745
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\tassert(n >= 0);\n\tint count = 0;\n\twhile(n\
    \ > 0){\n\t\tif((n % 10) == 7 || (n % 10) == 11 || n % 10 == 13){\n\t\t\tcount++;\n\
    \t\t}\n\t\tn = (n / 10);\n\t}\n\treturn count;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpkwqcz2gg: /tmp/tmpkwqcz2gg.cpp:24: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count_digits = 0;\n    for (long i\
    \ = 2; i <= n; i++) {\n        if (i % 11 == 0 || i % 13 == 0) {\n           \
    \ count_digits++;\n        }\n    }\n    return count_digits;\n}\nint main() {\n\
    \    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmp__ehdupz: /tmp/tmp__ehdupz.cpp:21: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if(n < 0)\n        std::cerr << \"Error\
    \ in fizz_buzz: n must be greater than 0\\n\";\n    long ans = 0, remainder, temp;\n\
    \    while(n >= 11 || n < 13)\n    {\n        temp = (n%10) + (n/10) % 10;\n \
    \       ans += temp < 7 ? 1 : 0;\n        n = temp;\n    }\n    temp = n;\n  \
    \  while(temp != 0)\n    {\n        remainder = temp % 10;\n        ans += remainder\
    \ % 7;\n        temp /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660136751
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\tassert(n>=0);\n\tlong count = 1;\n\twhile\
    \ (n > 1) {\n\t\tlong d = n / 11;\n\t\tn = n - (d * 11);\n\t\tif (d == 7)\n\t\t\
    \tcount++;\n\t}\n\treturn count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660136751
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    if (n % 11 == 0)\n\
    \        count++;\n    if (n % 13 == 0)\n        count++;\n    if (n != 0)\n \
    \       count += fizz_buzz(n / 11);\n    return count;\n}\nint main() {\n    auto\
    \ candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpwjsjkt0o: /tmp/tmpwjsjkt0o.cpp:22: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long ans = 0;\n    while(n != 0) {\n   \
    \     if((n & 1) == 0) {\n            ans += 1;\n        }\n        n /= 10;\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = fizz_buzz;\n  \
    \  assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79))\
    \ == (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200))\
    \ == (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpz0a5ygew: /tmp/tmpz0a5ygew.cpp:22: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  long count = 0;\n  while (n != 0) {\n    n\
    \ %= 11;\n    if (n == 7)\n      count++;\n    n /= 11;\n  }\n  return count;\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmp79jlyajm: /tmp/tmp79jlyajm.cpp:23: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136747
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int count = 0;\n    while (n >= 100) {\n\
    \        count++;\n        n /= 10;\n    }\n    if (n % 11 == 0 || n % 13 == 0)\
    \ {\n        return count;\n    }\n    return -1;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpnxl_p6ky: /tmp/tmpnxl_p6ky.cpp:23: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    assert(n % 11 == 0 || n % 13 == 0);\n  \
    \  long count = 0;\n    for (long i = n; i > 0; i /= 11)\n        if (i % 11 ==\
    \ 0) count += 1;\n    for (long i = n; i > 0; i /= 13)\n        if (i % 13 ==\
    \ 0) count += 1;\n    return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmpfskxsd2q: /tmp/tmpfskxsd2q.cpp:11: long int fizz_buzz(long int): Assertion
    `n % 11 == 0 || n % 13 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    for (long i = n; i\
    \ >= 1; i--) {\n        if (n % i == 0) {\n            if (i % 11 == 0)\n    \
    \            count += 1;\n            else if (i % 13 == 0)\n                count\
    \ += 1;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmp3a6zpcfa: /tmp/tmp3a6zpcfa.cpp:25: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    return fizz_buzz_helper(n);\n}\nint main()\
    \ {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n  \
    \  assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100))\
    \ == (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000))\
    \ == (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdx2rfwex.cpp: In function \u2018long int fizz_buzz(long int)\u2019\
    :\n/tmp/tmpdx2rfwex.cpp:11:12: error: \u2018fizz_buzz_helper\u2019 was not declared\
    \ in this scope\n   11 |     return fizz_buzz_helper(n);\n      |            ^~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660136746
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int count = 0;\n    long d = ((n % 11) ==\
    \ 0) ? 11 : 13;\n    long a = n / d;\n    while ( a >= d ) {\n        ++count;\n\
    \        a /= d;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpq502keai: /tmp/tmpq502keai.cpp:23: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136747
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  long count = 0;\n  while (n) {\n    n /= 10;\n\
    \    count++;\n  }\n  return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmp3bupfgxs: /tmp/tmp3bupfgxs.cpp:20: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\tif (n==0)\n\t\treturn 0;\n\tif (n%11==0 ||\
    \ n%13==0)\n\t\treturn 1;\n\treturn fizz_buzz(n/10)+1;\n}\nint main() {\n    auto\
    \ candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmp03twh80b: /tmp/tmp03twh80b.cpp:19: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    // Write your code here.\n    if (n % 11\
    \ == 0)\n        return 0;\n    if (n % 13 == 0)\n        return 2;\n    return\
    \ 3;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmp_eknz2yg: /tmp/tmp_eknz2yg.cpp:20: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    while (n) {\n     \
    \   if (n % 10 == 7) {\n            count++;\n        }\n        n /= 10;\n  \
    \  }\n    return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n  \
    \  assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79))\
    \ == (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200))\
    \ == (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpo_wcx_i0: /tmp/tmpo_wcx_i0.cpp:23: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    while (n % 11 != 0\
    \ || n % 13 != 0)\n        count++;\n    return count;\n}\nint main() {\n    auto\
    \ candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660136751
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int count = 0;\n    // We use assert to\
    \ check whether the number is in range or not.\n    assert(0 <= n && n < 1000);\n\
    \    for (int i = 0; i < n; i++) {\n        if (i % 11 == 0)\n            count++;\n\
    \        if (i % 13 == 0)\n            count += 2;\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmp1tso89tz: /tmp/tmp1tso89tz.cpp:24: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136747
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    return fizz_buzz_count(n, 11);\n}\nint main()\
    \ {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n  \
    \  assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100))\
    \ == (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000))\
    \ == (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_vm01bgx.cpp: In function \u2018long int fizz_buzz(long int)\u2019\
    :\n/tmp/tmp_vm01bgx.cpp:11:12: error: \u2018fizz_buzz_count\u2019 was not declared\
    \ in this scope\n   11 |     return fizz_buzz_count(n, 11);\n      |         \
    \   ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660136745
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long ans = 0, div = 1, mod = 0, count =\
    \ 0;\n    while (n) {\n        if (mod % 11 == 0 || mod % 13 == 0) {\n       \
    \     count++;\n        }\n        mod = n%11;\n        n = n/11;\n    }\n   \
    \ ans = count;\n    return ans;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmps8cmoimd: /tmp/tmps8cmoimd.cpp:24: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count1=0, count2=0, count3=0, count4=0;\n\
    \    long count1=0, count2=0, count3=0, count4=0;\n    long count1=0, count2=0,\
    \ count3=0, count4=0;\n    long count1=0, count2=0, count3=0, count4=0;\n    long\
    \ count1=0, count2=0, count3=0, count4=0;\n    long count1=0, count2=0, count3=0,\
    \ count4=0;\n    long count1=0, count2=0, count3=0, count4=0;\n    long count1=0,\
    \ count2=0, count3=0, count4=0;\n    long count1=0, count2=0, count3=0, count4=0;\n\
    \    long count1=0, count2=0, count3=0, count4=0;\n    long count1=0, count2=0,\
    \ count3=0, count4=0;\n    long count1=0, count2=0, count3=0, count4=0;\n    long\
    \ count1=0, count2=0, count3=0, count4=0;\n    long count1=0, count2=0, count3=0,\
    \ count4=0;\n    long count1=0, count2=0, count3=0, count4=0;\n    long count1=0,\
    \ count2=0, count3=0, count4=0;\n    long count1=0, count2=0, count3=0, count4=0;\n\
    \    long count1=0, count2=0, count3=0, count4=0;\n    long count1=0, count2=0,\
    \ count3=0, count4=0;\n    long count1=0, count2=0, count3=0, count4=0;\n    long\
    \ count1=0, count2=0, count3=0, count4=0;\n    long count1=0, count2=0, count3=0,\
    \ count4=0;\n    long count1=0, count2=0, count3=0, count4=0;\n    long count1=0,\
    \ count2=0, count3=0, count4=0;\n    long count1=0, count2=0, count3=0, count4=0;\n\
    \    long count1=0, count2=0, count3=0, count4=0;\n    long count1=0, count2=0,\
    \ count3=0, count4=0;\n    long count1=0, count2=0, count3=0, count4=0;\n    long\
    \ count1=0, count2=0, count3=0, count4=0;\n    long count1=0, count2=0, count3=0,\
    \ count4=0;\n    long count1=0, count2=0, count3=0, count4=0;\n    long count1=0,\
    \ count2=0, count3=0, count4=0;\n    long count1=0, count2=0, count3=0, count4=0;\n\
    \    long count1=0, count2=0, count3=0, count4=0;\n    long \n}\nint main() {\n\
    \    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpde9dez7q.cpp: In function \u2018long int fizz_buzz(long int)\u2019\
    :\n/tmp/tmpde9dez7q.cpp:12:10: error: redeclaration of \u2018long int count1\u2019\
    \n   12 |     long count1=0, count2=0, count3=0, count4=0;\n      |          ^~~~~~\n\
    /tmp/tmpde9dez7q.cpp:11:10: note: \u2018long int count1\u2019 previously declared\
    \ here\n   11 |     long count1=0, count2=0, count3=0, count4=0;\n      |    \
    \      ^~~~~~\n/tmp/tmpde9dez7q.cpp:12:20: error: redeclaration of \u2018long\
    \ int count2\u2019\n   12 |     long count1=0, count2=0, count3=0, count4=0;\n\
    \      |                    ^~~~~~\n/tmp/tmpde9dez7q.cpp:11:20: note: \u2018long\
    \ int count2\u2019 previously declared here\n   11 |     long count1=0, count2=0,\
    \ count3=0, count4=0;\n      |                    ^~~~~~\n/tmp/tmpde9dez7q.cpp:12:30:\
    \ error: redeclaration of \u2018long int count3\u2019\n   12 |     long count1=0,\
    \ count2=0, count3=0, count4=0;\n      |                              ^~~~~~\n\
    /tmp/tmpde9dez7q.cpp:11:30: note: \u2018long int count3\u2019 previously declared\
    \ here\n   11 |     long count1=0, count2=0, count3=0, count4=0;\n      |    \
    \                          ^~~~~~\n/tmp/tmpde9dez7q.cpp:12:40: error: redeclaration\
    \ of \u2018long int count4\u2019\n   12 |     long count1=0, count2=0, count3=0,\
    \ count4=0;\n      |                                        ^~~~~~\n/tmp/tmpde9dez7q.cpp:11:40:\
    \ note: \u2018long int count4\u2019 previously declared here\n   11 |     long\
    \ count1=0, count2=0, count3=0, count4=0;\n      |                           \
    \             ^~~~~~\n/tmp/tmpde9dez7q.cpp:13:10: error: redeclaration of \u2018\
    long int count1\u2019\n   13 |     long count1=0, count2=0, count3=0, count4=0;\n\
    \      |          ^~~~~~\n/tmp/tmpde9dez7q.cpp:11:10: note: \u2018long int count1\u2019\
    \ previously declared here\n   11 |     long count1=0, count2=0, count3=0, count4=0;\n\
    \      |          ^~~~~~\n/tmp/tmpde9dez7q.cpp:13:20: error: redeclaration of\
    \ \u2018long int count2\u2019\n   13 |     long count1=0, count2=0, count3=0,\
    \ count4=0;\n      |                    ^~~~~~\n/tmp/tmpde9dez7q.cpp:11:20: note:\
    \ \u2018long int count2\u2019 previously declared here\n   11 |     long count1=0, "
  stdout: ''
  timestamp: 1660136745
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if (n % 11 == 0 && n % 13 == 0) {\n    \
    \    return 0;\n    }\n    if (n % 11 == 0 || (n % 13 == 0 && n % 11 != 0)) {\n\
    \        return 1;\n    }\n    return 2;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmp_8ck4zpf: /tmp/tmp_8ck4zpf.cpp:21: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    // your code goes here\n    int count =\
    \ 0;\n    if (n < 10) {\n        return n;\n    }\n\n    if (n % 11 == 0 && n\
    \ % 13 == 0) {\n        count++;\n    }\n\n    if (n % 11 == 0) {\n        count\
    \ += 1;\n    }\n\n    if (n % 13 == 0) {\n        count += 1;\n    }\n\n    return\
    \ count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpiark5ha6: /tmp/tmpiark5ha6.cpp:34: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long num = 0; // the number will have a\
    \ number of the form n\n    int remainder = n % 10; // the number will have a\
    \ remainder of the form n % 10\n    int div = 1; // will be used to increment\
    \ the counter\n    while (remainder != 0) { // if the remainder is non zero\n\
    \        if (remainder % 2 == 0) { // if remainder is even\n            div *=\
    \ 2; // multiply div by 2\n        }\n        remainder = remainder / 10; // divide\
    \ remainder by 10\n    }\n    long num2 = n; // the number will have a number\
    \ of the form n\n    while (num2 > 0) { // until num2 is zero\n        if (num2\
    \ % div == 0 && num2 != 10) {\n            num += 1; // add 1 to num\n       \
    \ }\n        num2 /= 10; // divide num2 by 10\n    }\n    return num;\n}\nint\
    \ main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n\
    \    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n  \
    \  assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n  \
    \  assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpb9p7dqko: /tmp/tmpb9p7dqko.cpp:31: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    while (n > 0){\n  \
    \      if (n % 10 == 7){\n            count += 1;\n        }\n        n /= 10;\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmppiuxieas: /tmp/tmppiuxieas.cpp:23: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long num = 0;\n    while(n > 0) {\n    \
    \    long r = n/11;\n        if(r == 0)\n            break;\n        long d =\
    \ n % 11;\n        if(d == 7) {\n            num++;\n        }\n        n = r;\n\
    \    }\n    return num;\n}\nint main() {\n    auto candidate = fizz_buzz;\n  \
    \  assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79))\
    \ == (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200))\
    \ == (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpc0jzc9x8: /tmp/tmpc0jzc9x8.cpp:27: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136746
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if (n == 1) return 0;\n    long count =\
    \ 0;\n    long x = n % 11;\n    if (x > 0) count++;\n    x = x % 13;\n    if (x\
    \ > 0) count++;\n    while (n > 0) {\n        x = n % 11;\n        if (x == 0)\
    \ count++;\n        x = x % 13;\n        if (x == 0) count++;\n        n /= 13;\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmpe4lnuza4: /tmp/tmpe4lnuza4.cpp:28: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136747
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    assert(n % 11 == 0 || n % 13 == 0);\n  \
    \  long ans = 0;\n    while (n % 10 == 7) {\n        ans += 1;\n        n /= 10;\n\
    \    }\n    while (n != 0) {\n        if (n % 10 == 7)\n            ans += 1;\n\
    \        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpq14a0c4m: /tmp/tmpq14a0c4m.cpp:11: long int fizz_buzz(long int): Assertion
    `n % 11 == 0 || n % 13 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660136747
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  int count = 0;\n  while(n) {\n    if((n&3)\
    \ == 0) count++;\n    else if((n&1) == 0) count++;\n    n = n/10;\n  }\n  return\
    \ count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpt73k6acp: /tmp/tmpt73k6acp.cpp:21: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136748
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  assert(n % 11 == 0 || n % 13 == 0);\n  int\
    \ count = 0;\n  while (n) {\n    if (n % 10 == 7) {\n      count++;\n    }\n \
    \   n /= 10;\n  }\n  return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmpnbsrtbms: /tmp/tmpnbsrtbms.cpp:11: long int fizz_buzz(long int): Assertion
    `n % 11 == 0 || n % 13 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660136748
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  int count = 0;\n  while (n % 10 == 7) {\n\
    \    ++count;\n    n /= 10;\n  }\n  return count;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpgb43ar3q: /tmp/tmpgb43ar3q.cpp:21: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136747
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int count = 0;\n    while (n % 11 == 0 ||\
    \ n % 13 == 0)\n        count++;\n    return count;\n}\nint main() {\n    auto\
    \ candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660136752
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long remainder, i, count = 0;\n    remainder\
    \  = n - (n/10) % 11;\n    if(n/10 != remainder && n/10 != (remainder+11) % 11)\
    \ {\n        return count++;\n    }\n    n = n - remainder;\n    for(i=1;i<=n;i++)\
    \ {\n        for(count=0;i<=n / i;count++)\n            if(i%11==7 && n/i==(n/i)%11)\n\
    \                break;\n        if(i==n/i)\n            count++;\n    }\n   \
    \ return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmp9satmoiw: /tmp/tmp9satmoiw.cpp:29: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136748
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long cnt = 0;\n    while (n != 0) {\n  \
    \      if (n % 11 == 0 || n % 13 == 0) {\n            cnt += 1;\n        }\n \
    \       n /= 10;\n    }\n    return cnt;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpyjo2w1ec: /tmp/tmpyjo2w1ec.cpp:23: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136749
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long ans = 0;\n    for (long i = n; i >\
    \ 0; i /= 10) {\n        if (i % 11 == 0) ans++;\n        if (i % 13 == 0) ans++;\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = fizz_buzz;\n  \
    \  assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79))\
    \ == (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200))\
    \ == (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpu4w_wysf: /tmp/tmpu4w_wysf.cpp:21: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136750
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  int count = 0;\n  for (int i = 1; i < n; i++)\
    \ {\n    if (i % 11 == 0 || i % 13 == 0) {\n      count++;\n    }\n  }\n  return\
    \ count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpe2b8paat: /tmp/tmpe2b8paat.cpp:21: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136749
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int count = 1;\n    while (n % 11 == 0 ||\
    \ n % 13 == 0) {\n        count++;\n        n /= 11;\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmp1p32m8xj: /tmp/tmp1p32m8xj.cpp:20: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136749
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  long count=0;\n  while(n>0) {\n    if(n %\
    \ 11 == 0)\n      count+=1;\n    if(n % 13 == 0)\n      count+=1;\n    n/=10;\n\
    \  }\n  return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpiuq_b198: /tmp/tmpiuq_b198.cpp:24: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136750
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if(n<=0)\n        return 0;\n    if(n%11==0\
    \ || (n%13==0 && n!=1))\n        return 1;\n    if(!(n%11))\n        return 0;\n\
    \    if(!(n%13))\n        return 1;\n    return fizz_buzz(n/11)-1;\n}\nint main()\
    \ {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n  \
    \  assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100))\
    \ == (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000))\
    \ == (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmplbd7ox6s: /tmp/tmplbd7ox6s.cpp:23: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136749
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    assert(n % 100 == 0);\n    long numDigits\
    \ = 1;\n    while (n / numDigits != 1) {\n        numDigits++;\n    }\n    int\
    \ counter = 0;\n    while (n % numDigits == 0) {\n        n /= numDigits;\n  \
    \      counter++;\n    }\n    return counter;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmp6vq7q5pj: /tmp/tmp6vq7q5pj.cpp:11: long int fizz_buzz(long int): Assertion
    `n % 100 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660136750
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long x = 0;\n    int i;\n    for (i = n\
    \ / 1000; i > 0; i--) {\n        if (n % i == 0) {\n            if (i != 7) {\n\
    \                x += i;\n            }\n        }\n    }\n    // Return number\
    \ of times a digit 7 appears in the number less than or equal to n.\n    if (i\
    \ == 1) {\n        if (n == 7) {\n            return 0;\n        } else {\n  \
    \          return 1;\n        }\n    } else {\n        return x + 1;\n    }\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpjrxlyhbe: /tmp/tmpjrxlyhbe.cpp:33: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136750
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if (n >= 1000) {\n        return fizz_buzz(n\
    \ / 10) + (n % 10 == 7 ? 1 : 0);\n    }\n    if (n >= 100) {\n        return fizz_buzz(n\
    \ / 10) + (n % 10 == 1 ? 2 : 0);\n    }\n    if (n >= 10) {\n        return fizz_buzz(n\
    \ / 10) + (n % 10 == 1 ? 0 : 3);\n    }\n    return fizz_buzz(n / 10) + (n % 10\
    \ == 1 ? 0 : 3);\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660136749
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if(n>1000000000L)\n        return 0;\n \
    \   if(n%11==7)\n        return 1;\n    else if(n%13==7)\n        return 2;\n\
    \    else\n        return 0;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmp3z31t6l4: /tmp/tmp3z31t6l4.cpp:23: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136750
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if (n%11==0 && n%13==0)\n        return\
    \ 1;\n    if (n%11==0)\n        return 1+fizz_buzz(n/11);\n    if (n%13==0)\n\
    \        return 1+fizz_buzz(n/13);\n    return 0;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpzbndmzkt: /tmp/tmpzbndmzkt.cpp:22: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136749
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long sum = 0;\n    while (n) {\n       \
    \ sum += n % 10;\n        n /= 10;\n    }\n    if (sum % 11 == 0 || sum % 13 ==\
    \ 0) {\n        return 0;\n    } else {\n        return 1 + fizz_buzz(sum);\n\
    \    }\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660136750
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  int count = 0;\n  for (int i = 100; i <= n\
    \ / 100; i++) {\n    if (i % 11 == 0 && i % 13 == 0) {\n      count++;\n    }\n\
    \  }\n  return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpo1b87yeg: /tmp/tmpo1b87yeg.cpp:22: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136750
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count=0;\n    int x=(long)n;\n    while(x\
    \ != 0) {\n        if(x%11 == 0 || (x%13 == 0 && x != 11 && x != 13)) {\n    \
    \        ++count;\n        }\n        x /= 10;\n    }\n    return (count);\n}\n\
    int main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n\
    \    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n  \
    \  assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n  \
    \  assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmp80t5y0t5: /tmp/tmp80t5y0t5.cpp:24: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136750
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    // your code goes here\n    \n    long sum=0;\n\
    \    while(true) {\n        if (n%11==0 || n%13==0) n++;\n        else break;\n\
    \    }\n    for(long i=1;i<=n;i++) {\n        if (i%11==0 && i%13==0) {\n    \
    \        sum+=2;\n        }\n        else if (i%11!=0 && i%13!=0) {\n        \
    \    sum+=1;\n        }\n        else break;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n  \
    \  assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100))\
    \ == (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000))\
    \ == (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmp4mi474ct: /tmp/tmp4mi474ct.cpp:31: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136749
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    while (n % 11 == 0\
    \ || n % 13 == 0) {\n        count++;\n        n /= 11;\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmp3izany2r: /tmp/tmp3izany2r.cpp:21: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136750
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long ans = 0;\n    long a = 0;\n    long\
    \ b = 100;\n    while (a <= n) {\n        if (n % a == 0) {\n            ans =\
    \ ans + 1;\n        }\n        if (n % b == 0) {\n            ans = ans + 1;\n\
    \        }\n        b = b;\n        a += 50;\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n  \
    \  assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100))\
    \ == (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000))\
    \ == (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660136750
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int count = 0, remainder, digit;\n    while\
    \ (n) {\n        remainder = n % 11;\n        if (remainder == 7) {\n        \
    \    digit = remainder % 10;\n            if (digit  == 3 || digit == 7 || digit\
    \ == 11 || digit == 13) {\n                count++;\n            }\n        }\n\
    \        n /= 11;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmplb8s28xe: /tmp/tmplb8s28xe.cpp:27: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136750
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\tassert(n % 11 == 0);\n\tassert(n % 13 == 0);\n\
    \tint count = 0;\n\twhile (n >= 11) {\n\t\tn /= 11;\n\t\t++count;\n\t}\n\twhile\
    \ (n >= 13) {\n\t\tn /= 13;\n\t\t++count;\n\t}\n\treturn count;\n}\nint main()\
    \ {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n  \
    \  assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100))\
    \ == (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000))\
    \ == (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpts04b3ko: /tmp/tmpts04b3ko.cpp:11: long int fizz_buzz(long int): Assertion
    `n % 11 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660136751
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  if (n==0)\n    return 0; \n  if (n%11==0 ||\
    \ (n%13==0 && n%11!=0))\n    return n%11;\n  else\n    return fizz_buzz(n/11)\
    \ + fizz_buzz(n/13);\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmp55dlvmz0: /tmp/tmp55dlvmz0.cpp:21: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136749
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    assert(n % 11 == 0);\n    assert(n % 13\
    \ == 0);\n    long count = 0;\n    while (n) {\n        if (n & 7) {\n       \
    \     count++;\n        }\n        n /= 13;\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n\
    \    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n  \
    \  assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n  \
    \  assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpbzb6gfkc: /tmp/tmpbzb6gfkc.cpp:11: long int fizz_buzz(long int): Assertion
    `n % 11 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660136749
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    // Return the number of times the digit\
    \ 7 appears in integers less than n which are divisible by 11 or 13.\n    // If\
    \ n is divisible by 11 or 13, then return 0 otherwise return 1.\n    if (n % 11\
    \ == 0 || n % 13 == 0)\n        return 0;\n    else\n        return 1;\n}\nint\
    \ main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n\
    \    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n  \
    \  assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n  \
    \  assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpzzl3rgqi: /tmp/tmpzzl3rgqi.cpp:20: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136749
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long long int sum = 0, c = n;\n    while(c>0)\
    \ {\n        sum += c%11;\n        c /= 11;\n    }\n    while(c>0) {\n       \
    \ sum += c%13;\n        c /= 13;\n    }\n    return sum;\n}\nint main() {\n  \
    \  auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpe3zm_3hd: /tmp/tmpe3zm_3hd.cpp:24: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136749
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    for (long i = 1; i\
    \ * i <= n; ++i) {\n        int d = n % i;\n        if (d == 7 || d == 11 || d\
    \ == 13) ++count;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmp21i_egrd: /tmp/tmp21i_egrd.cpp:21: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136749
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int count = 0;\n    while(n >= 100) {\n\
    \        count += n / 11;\n        n %= 11;\n    }\n    while(n >= 10) {\n   \
    \     count += n / 10;\n        n %= 10;\n    }\n    while(n >= 1) {\n       \
    \ count += n % 10;\n        n /= 10;\n    }\n    return count;\n}\nint main()\
    \ {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n  \
    \  assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100))\
    \ == (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000))\
    \ == (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpepdd4cen: /tmp/tmpepdd4cen.cpp:28: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136751
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  int count = 0;\n  while (n >= 100) {\n   \
    \ if (n % 10 == 7 && n / 10 != 7 && n / 10 != 13) {\n      ++count;\n    }\n \
    \   n /= 10;\n  }\n  return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmpj4_oqd_y: /tmp/tmpj4_oqd_y.cpp:23: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136749
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    if (n >= 1000000000)\
    \ {\n        count = (n/1000000000);\n        n = n%1000000000;\n    }\n    if\
    \ (n >= 1000000000) {\n        count = (n/1000000000);\n        n = n%1000000000;\n\
    \    }\n    if (n >= 1000000000) {\n        count = (n/1000000000);\n        n\
    \ = n%1000000000;\n    }\n    if (n >= 1000000000) {\n        count = (n/1000000000);\n\
    \        n = n%1000000000;\n    }\n    if (n >= 1000000000) {\n        count =\
    \ (n/1000000000);\n        n = n%1000000000;\n    }\n    if (n >= 1000000000)\
    \ {\n        count = (n/1000000000);\n        n = n%1000000000;\n    }\n    if\
    \ (n >= 1000000000) {\n        count = (n/1000000000);\n        n = n%1000000000;\n\
    \    }\n    if (n >= 1000000000) {\n        count = (n/1000000000);\n        n\
    \ = n%1000000000;\n    }\n    if (n >= 1000000000) {\n        count = (n/1000000000);\n\
    \        n = n%1000000000;\n    }\n    if (n >= 1000000000) {\n        count =\
    \ (n/1000000000);\n        n = n%1000000000;\n    }\n    if (n >= 1000000000)\
    \ {\n        count = (n/1000000000);\n        n = n%1000000000;\n    }\n    if\
    \ (n >= 1000000000) {\n        count = (n/1000000000);\n        n = n%1000000000;\n\
    \    }\n    if (n >= 1000000000) {\n        count = (n/1000000000);\n        n\
    \ = n%1000000000;\n    }\n    if (n >= 1000000000) {\n        count = (n/1000000000);\n\
    \        n = n%1000000000;\n    }\n    if (n >= 1000000000) {\n        count =\
    \ (n/1000000000);\n        n = n%1000000000;\n    }\n    if (n >= 1000000000)\
    \ {\n        count = (n/1000000000);\n        n = n%1000000000;\n    }\n    if\
    \ (n >= 1000000000) {\n        count = (n/1000000000);\n        n = n%1000000000;\n\
    \    }\n    if (n >= 1000000000) {\n        count = (n/1000000000);\n        n\
    \ = n%1000000000;\n    }\n    if (n >= 1000000000) {\n        count = (n/1000000000);\n\
    \        n = n%1000000000;\n    }\n    if (n >= 1000000000) {\n        count =\
    \ (n/1000000000);\n        n = n%1000000000;\n    }\n    if (n >= 1000000000)\
    \ {\n        count = (n/1000000000);\n        n = n%1000000000;\n    }\n    if\
    \ (n >= 1000000000) {\n        count = (n/1000000000);\n        n = n%1000000000;\n\
    \    }\n    if (n \n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxjdmzyqr.cpp: In function \u2018long int fizz_buzz(long int)\u2019\
    :\n/tmp/tmpxjdmzyqr.cpp:100:10: error: expected \u2018)\u2019 before \u2018}\u2019\
    \ token\n  100 |     if (n\n      |        ~ ^\n      |          )\n  101 | }\n\
    \      | ~         \n/tmp/tmpxjdmzyqr.cpp:101:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  101 | }\n      | ^\n/tmp/tmpxjdmzyqr.cpp:101:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660136750
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long res = 0;\n    long x = 1;\n    while\
    \ (x < (n / 11)) {\n        if (n % 11 == 0) {\n            res++;\n        }\n\
    \        x *= 11;\n    }\n    x = 1;\n    while (x < (n / 13)) {\n        if (n\
    \ % 13 == 0) {\n            res++;\n        }\n        x *= 13;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpt32yqpt1: /tmp/tmpt32yqpt1.cpp:31: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136751
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int count = 0;\n    while (n > 1) {\n  \
    \      // If the number is divisible by 11, then add one to the count.\n     \
    \   if (n % 11 == 0)\n            count++;\n        // If the number is divisible\
    \ by 13, then add two to the count.\n        else if (n % 13 == 0)\n         \
    \   count += 2;\n        // Otherwise just add one to the count.\n        else\n\
    \            count++;\n        n /= 10;\n    }\n    return count;\n}\nint main()\
    \ {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n  \
    \  assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100))\
    \ == (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000))\
    \ == (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpmca1dpgp: /tmp/tmpmca1dpgp.cpp:28: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136751
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int cnt=0;\n    while (n != 0) {\n     \
    \   cnt+=(n%11==7);\n        n/=11;\n    }\n    return cnt;\n}\nint main() {\n\
    \    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpe_4aj1ba: /tmp/tmpe_4aj1ba.cpp:21: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136752
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  // Write your code here.\n  if (n<11)\n  \
    \  return n;\n  if (n<13)\n    return 1;\n  else \n    return fizz_buzz(n/3)+fizz_buzz(n/3);\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpk2ykwpju: /tmp/tmpk2ykwpju.cpp:21: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136751
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    auto p = static_cast<int>(n);\n    auto\
    \ x = p % 10;\n    if (x > 5 && x <= 7 && p % 11 == 0 && p % 13 == 0) {\n    \
    \    return 1;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmp2excynp8: /tmp/tmp2excynp8.cpp:21: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136752
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  // Your code here\n    long count=0;\n   \
    \ if(n>=0){\n      for(int i=1;i<=n;i++){\n        if((n%i)==0){\n          if(i==7){\n\
    \            count++;\n          }\n        }\n      }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpss88nt48: /tmp/tmpss88nt48.cpp:27: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136752
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\tlong ans = 0;\n\twhile (n) {\n\t\tans += (n%11)\
    \ == 7;\n\t\tn /= 11;\n\t}\n\treturn ans;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmphts7hcgh: /tmp/tmphts7hcgh.cpp:21: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136752
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    //code here\n    long count=0;\n    long\
    \ n2=n/11;\n    long n3=n/13;\n    \n    if(n==0){\n        count=0;\n    }\n\
    \    else if(n%11==0 || n%13==0){\n        count++;\n    }\n    else if(n2==0){\n\
    \        count++;\n    }\n    else if(n3==0){\n        count++;\n    }\n    else\
    \ if(n2%11==0 || n2%13==0){\n        count++;\n    }\n    else if(n3%11==0 ||\
    \ n3%13==0){\n        count++;\n    }\n    else if(n2%11!=0 || n2%13!=0){\n  \
    \      count++;\n    }\n    else if(n3%11!=0 || n3%13!=0){\n        count++;\n\
    \    }\n    \n    return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmpc2b4ew7h: /tmp/tmpc2b4ew7h.cpp:45: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136752
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    assert(n % 11 == 0 || n % 13 == 0);\n  \
    \  long ans = 0;\n    while (n) {\n        if (n % 11 == 0 || n % 13 == 0) {\n\
    \            ++ans;\n        }\n        n /= 11;\n        n /= 13;\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpdp6xc3he: /tmp/tmpdp6xc3he.cpp:11: long int fizz_buzz(long int): Assertion
    `n % 11 == 0 || n % 13 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660136752
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long f = 0;\n    while (n) {\n        if\
    \ (n & 1) {\n            f += 1;\n        }\n        n >>= 1;\n    }\n    return\
    \ f;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpt23cfa2b: /tmp/tmpt23cfa2b.cpp:22: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136752
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if (n == 0) return 0;\n    if (n & 1 ==\
    \ 0) return fizz_buzz(n / 10);\n    if (n % 11 == 0 || n % 13 == 0) return fizz_buzz(n\
    \ / 10) + 1;\n    return fizz_buzz(n / 10);\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpurt_ebqv: /tmp/tmpurt_ebqv.cpp:19: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136753
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\t// Your code here\n\tlong num = 0;\n\tint\
    \ ans = 1;\n\tfor (int i = 1; i <= n; i++){\n\t\tans = ans * i % 11 % 13;\n\t\
    }\n\t\n\tif (ans == 1){\n\t\tnum++;\n\t}\n\treturn num;\n}\nint main() {\n   \
    \ auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmp_0vc8rir: /tmp/tmp_0vc8rir.cpp:26: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136753
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    assert(n >= 0);\n    long ans = 0;\n   \
    \ while (n) {\n        if (n % 10 == 7) {\n            ans++;\n        }\n   \
    \     n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpksvm83gf: /tmp/tmpksvm83gf.cpp:24: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136751
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    // write your code here\n    long count=0;\n\
    \    while(n>0){\n        n/=11;\n        count++;\n        n/=13;\n        count++;\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmpw3sr6u2o: /tmp/tmpw3sr6u2o.cpp:23: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136753
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int count = 0;\n    while (n % 11 == 0 ||\
    \ n % 13 == 0) {\n        count += 1;\n        n /= 11;\n    }\n    if (n > 0)\
    \ while (n % 10 == 0) {\n        count += 1;\n        n /= 10;\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmprh6bojrn: /tmp/tmprh6bojrn.cpp:24: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136753
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    while (n != 0) {\n\
    \        int digit = n % 10;\n        if (digit % 11 == 0 || digit % 13 == 0)\
    \ {\n            count++;\n        }\n        n = n / 10;\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmp4lbn45ut: /tmp/tmp4lbn45ut.cpp:23: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136754
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long sum = 0;\n    int rem = n % 10;\n \
    \   while (rem != 0 && rem != 7) {\n        sum += rem;\n        rem = n % 10;\n\
    \        n = n / 10;\n    }\n    sum += rem == 7 ? 1 : 0;\n    return sum;\n}\n\
    int main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n\
    \    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n  \
    \  assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n  \
    \  assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpxee605se: /tmp/tmpxee605se.cpp:24: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136754
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int cnt = 0;\n    long n1 = (n % 11);\n\
    \    long n2 = (n % 13);\n    bool flag1 = ((n1 % 11) == 0);\n    bool flag2 =\
    \ ((n2 % 13) == 0);\n\n    if (flag1 || flag2)\n        cnt++;\n\n    if (flag1)\n\
    \        cnt += fizz_buzz(n / 11);\n    if (flag2)\n        cnt += fizz_buzz(n\
    \ / 13);\n    return cnt;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmpmzcsyrdx: /tmp/tmpmzcsyrdx.cpp:29: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136754
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    assert(n % 11 == 0 || n % 13 == 0);\n  \
    \  long count = 0; \n    while (n > 0) {\n        if (n % 10 == 7) count++;\n\
    \        n = n / 10;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmp7nzaad8j: /tmp/tmp7nzaad8j.cpp:11: long int fizz_buzz(long int): Assertion
    `n % 11 == 0 || n % 13 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660136754
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    assert(n >= 0);\n    long count = 0;\n \
    \   for (long i = 1, mod = n; i <=1000000000; i = i * 10 + n / i) {\n        if\
    \ (i % 11 == 0 || i % 13 == 0) {\n            count++;\n        }\n    }\n   \
    \ return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmp5qdmwsvh: /tmp/tmp5qdmwsvh.cpp:23: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136754
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    // your code goes here\n     int reminder\
    \ =(n%11==0)?(n%11):0;\n     if(n%13==0){\n     return reminder +1;\n     }\n\
    \     else{\n     return reminder + 0;\n     }\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpmwqifj57: /tmp/tmpmwqifj57.cpp:23: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136754
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int count = 0;\n    while(n % 11 != 0 ||\
    \ n % 13 != 0) {\n        count++;\n        n /= 11;\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmp1it4wzpa: /tmp/tmp1it4wzpa.cpp:20: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136754
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int cnt = 0;\n    while (n % 11 == 0 ||\
    \ n % 13 == 0) {\n        cnt += 1;\n        n /= 11;\n    }\n    return cnt;\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpi5apdm_y: /tmp/tmpi5apdm_y.cpp:21: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136754
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int count = 0;\n    while (n % 10 == 7)\
    \ {\n        n /= 10;\n        count++;\n    }\n    if (n % 10 == 0)\n       \
    \ count++;\n    return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmpgewrqy_p: /tmp/tmpgewrqy_p.cpp:22: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136755
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    for(long i = n; i;\
    \ i /= 10) {\n        long d = i % 10;\n        if(d % 11 == 0)\n            count++;\n\
    \        if(d % 13 == 0)\n            count++;\n    }\n    return count;\n}\n\
    int main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n\
    \    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n  \
    \  assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n  \
    \  assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmptzv1hjia: /tmp/tmptzv1hjia.cpp:23: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136754
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    assert(n % 11 == 0);\n    assert(n % 13\
    \ == 0);\n    long count = 0;\n    while (n) {\n        n /= 11;\n        if (n\
    \ % 13 == 0) {\n            n /= 13;\n            count += 1;\n        }\n   \
    \ }\n    return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n   \
    \ assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79))\
    \ == (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200))\
    \ == (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpyt90luc4: /tmp/tmpyt90luc4.cpp:11: long int fizz_buzz(long int): Assertion
    `n % 11 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660136755
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    int i = (int) n / 11;\n\
    \    if (i <= 0 || n % 11 == 0) {\n        count++;\n    }\n    i = i - (int)\
    \ n / 13;\n    if (i <= 0 || n % 13 == 0) {\n        count++;\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpoitburgr: /tmp/tmpoitburgr.cpp:25: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136754
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    while(n >= 100) {\n\
    \        if(n % 10 == 7) {\n            count++;\n        }\n        n /= 10;\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmpx_hjj9n2: /tmp/tmpx_hjj9n2.cpp:23: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136755
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    vector<long> div = { 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107,\
    \ 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193,\
    \ 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281,\
    \ 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383,\
    \ 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479,\
    \ 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593,\
    \ 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683,\
    \ 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809,\
    \ 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911,\
    \ 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997};\n    return std::count(div.begin(),\
    \ div.end(), n/7) % 7;\n}\nint main() {\n    auto candidate = fizz_buzz;\n   \
    \ assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79))\
    \ == (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200))\
    \ == (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy1fnfk_0.cpp: In function \u2018long int fizz_buzz(long int)\u2019\
    :\n/tmp/tmpy1fnfk_0.cpp:11:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   11 |     vector<long> div = { 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127,\
    \ 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211,\
    \ 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307,\
    \ 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401,\
    \ 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499,\
    \ 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607,\
    \ 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709,\
    \ 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823,\
    \ 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937,\
    \ 941, 947, 953, 967, 971, 977, 983, 991, 997};\n      |     ^~~~~~\n/tmp/tmpy1fnfk_0.cpp:11:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpy1fnfk_0.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpy1fnfk_0.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp"
  stdout: ''
  timestamp: 1660136753
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\tlong result = 0;\n\tfor(int i=0;i<=n/11;i++)\n\
    \t{\n\t\tif(n%11 == 7)\n\t\t{\n\t\t\tresult ++;\n\t\t}\n\t}\n\tfor(int j=0;j<=n/13;j++)\n\
    \t{\n\t\tif(n%13 == 7)\n\t\t{\n\t\t\tresult ++;\n\t\t}\n\t}\n\treturn result;\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmp06a92ijn: /tmp/tmp06a92ijn.cpp:31: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136754
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    // Use a bitset to store the numbers.\n\
    \    std::bitset<100> nums;\n    // Use a bitset to store the digits that appear\
    \ more than once.\n    std::bitset<100> dups;\n    // Use a bitset to store the\
    \ digits appearing less than once.\n    std::bitset<100> numsLess;\n    long result\
    \ = 0;\n    // Iterate through each of the numbers, converting each to binary.\n\
    \    for (int i = 0; i < n; ++i) {\n        // The numbers do not have leading\
    \ zeros, i.e. '013' is equal to '13'.\n        nums.set(i, nums[i] ? 1 : 0);\n\
    \    }\n    // Iterate through all the numbers, counting the number of times the\
    \ digit 7 appears in each number.\n    for (int i = 0; i < n; ++i) {\n       \
    \ int num = nums[i];\n        // Iterate through all the digits in that number.\n\
    \        for (int j = 0; j < num; ++j) {\n            // Get the bit at that digit\
    \ index.\n            int bit = 1 << j;\n            // Get the digit.\n     \
    \       int digit = num & bit;\n            // If it is 1, then it appears more\
    \ than once.\n            if (bit == 1) {\n                dups.set(j, 1);\n \
    \           }\n            // If it is 0, then it appears less than once.\n  \
    \          if (bit == 0) {\n                numsLess.set(j, 1);\n            }\n\
    \        }\n    }\n    // Iterate through all the numbers, counting the number\
    \ of times the digit 7 appears in each number less than n.\n    for (int i = 0;\
    \ i < n; ++i) {\n        int num = nums[i];\n        // Iterate through all the\
    \ digits in that number.\n        for (int j = 0; j < num; ++j) {\n          \
    \  int bit = 1 << j;\n            // Get the digit.\n            int digit = num\
    \ & bit;\n            // If the digit is less than n, then it appears less than\
    \ once.\n            if (bit == 0) {\n                numsLess.set(j, 1);\n  \
    \          }\n        }\n    }\n    // Check if there are any numbers that appears\
    \ more than once and appears less than once.\n    for (int i = 0; i < n; ++i)\
    \ {\n        int num = nums[i];\n        // Iterate through all the digits in\
    \ that number.\n        for (int j = 0; j < num; ++j) {\n            int bit =\
    \ 1 << j;\n            // Get the digit.\n            int digit = num & bit;\n\
    \            // If it is less than n, then it appears less than once.\n      \
    \      if (bit == 0) {\n                numsLess.set(j, 1);\n            }\n \
    \           // If it is 1, then it appears more than once.\n            if (bit\
    \ == 1) {\n                dups.set(j, 1);\n            }\n        }\n    }\n\
    \    // Iterate through all the numbers, counting the number of times the digit\
    \ 7 appears in each number less than n.\n    for (int i = 0; i < n; ++i) {\n \
    \       int num = nums[i];\n        // Iterate through all the digits in that\
    \ number.\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyv4ox94i.cpp: In function \u2018long int fizz_buzz(long int)\u2019\
    :\n/tmp/tmpyv4ox94i.cpp:79:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n   79 | int main() {\n      |            ^\n/tmp/tmpyv4ox94i.cpp:89:1:\
    \ error: expected \u2018}\u2019 at end of input\n   89 | }\n      | ^\n/tmp/tmpyv4ox94i.cpp:10:24:\
    \ note: to match this \u2018{\u2019\n   10 | long fizz_buzz(long n) {\n      |\
    \                        ^\n/tmp/tmpyv4ox94i.cpp:89:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n   89 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660136753
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    return std::count(std::begin(std::to_string(n)),\
    \ std::end(std::to_string(n)), '7');\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmpt2o5y0dz: /tmp/tmpt2o5y0dz.cpp:17: int main(): Assertion `candidate((79))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660136755
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  int a = 0, b = 0, c = 0, d = 0;\n  while (n)\
    \ {\n    d = n % 10;\n    n = (n - d) / 10;\n    if (d == 7) {\n      a = a +\
    \ 1;\n      if (a > 2) {\n        a = 1;\n      }\n    } else {\n      if (d ==\
    \ 6) {\n        b = b + 1;\n        if (b > 2) {\n          b = 1;\n        }\n\
    \      } else if (d == 5) {\n        c = c + 1;\n        if (c == 2) {\n     \
    \     c = 1;\n        }\n      }\n    }\n  }\n  return (a * b * c);\n}\nint main()\
    \ {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n  \
    \  assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100))\
    \ == (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000))\
    \ == (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpqrji1vvq: /tmp/tmpqrji1vvq.cpp:39: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136754
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    assert(n % 11 == 0);\n    assert(n % 13\
    \ == 0);\n\n    int x = n / 11;\n    int y = n / 13;\n\n    long c = x * (x +\
    \ 1) / 2 + y * (y + 1) / 2;\n\n    if (c % 15 == 7)\n        return 0;\n    else\n\
    \        return 2;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpt3ag421t: /tmp/tmpt3ag421t.cpp:11: long int fizz_buzz(long int): Assertion
    `n % 11 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660136755
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  int count = 0;\n  while (n > 0) {\n    n /=\
    \ 10;\n    count += n % 2 == 0 ? 0 : 1;\n  }\n  return count;\n}\nint main() {\n\
    \    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpoxg2_pcn: /tmp/tmpoxg2_pcn.cpp:20: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136754
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  if( (n%11)==7 || (n%13)==7) \n    return (n%7==0);\n\
    \  return fizz_buzz(n/10);\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660136754
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  long count = 0;\n  while (n > 0)\n    if (n\
    \ % 11 == 7)\n      count++;\n    n /= 11;\n  assert(count == 0 || count == 1\
    \ || count == 3);\n  return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660136759
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\t// Your code here\n\tif(n%11==0||n%13==0){\n\
    \t\treturn 0;\n\t}\n\telse{\n\t\tlong i;\n\t\tlong c=0;\n\t\tfor(i=n;i>=1;i--){\n\
    \t\t\tif(i%11==0||i%13==0){\n\t\t\t\tc++;\n\t\t\t}\n\t\t}\n\t\treturn c;\n\t}\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpik6mirek: /tmp/tmpik6mirek.cpp:28: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136755
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long fizz = 0;\n    long buzz = 0;\n   \
    \ while (n > 0) {\n        if (n % 11 == 0 && n % 13 == 0) {\n            fizz\
    \ += 1;\n        } else {\n            buzz += 1;\n        }\n        n /= 10;\n\
    \    }\n    return fizz * buzz;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmpxybcvkuj: /tmp/tmpxybcvkuj.cpp:26: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136756
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    long count = 0;\n \
    \   int digit = n;\n    int remainder = n % 10;\n    // printf(\"remainder: %ld\\\
    n\", remainder);\n    while (remainder == 7) {\n        count += 1;\n        remainder\
    \ = n % 10;\n        n = n / 10;\n    }\n    if (remainder == 0 || remainder ==\
    \ 1) {\n        // printf(\"%ld \\n\", n);\n        count += 1;\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo_orhip_.cpp: In function \u2018long int fizz_buzz(long int)\u2019\
    :\n/tmp/tmpo_orhip_.cpp:12:10: error: redeclaration of \u2018long int count\u2019\
    \n   12 |     long count = 0;\n      |          ^~~~~\n/tmp/tmpo_orhip_.cpp:11:10:\
    \ note: \u2018long int count\u2019 previously declared here\n   11 |     long\
    \ count = 0;\n      |          ^~~~~\n"
  stdout: ''
  timestamp: 1660136754
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int count = 0;\n    int a = n / 11;\n  \
    \  int b = n / 13;\n    while (b > 0) {\n        if ((a % 11 == 0 && b % 13 ==\
    \ 0) || (a % 13 == 0 && b % 11 == 0)) {\n            count++;\n        }\n   \
    \     a *= 10;\n        b *= 10;\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmp6bmdaftx: /tmp/tmp6bmdaftx.cpp:26: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136756
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if(n<0) return 0;\n    if(n%11==0 || n%3==0)\n\
    \        return (n%11==0 ? 0:2);\n    if(n%13==0 || n%5==0)\n        return (n%13==0\
    \ ? 0:3);\n    return (n%11==0 ? 0:1) + fizz_buzz(n/11);\n}\nint main() {\n  \
    \  auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpkd89i1gw: /tmp/tmpkd89i1gw.cpp:20: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136756
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long fizz = 0, buzz = 0, temp;\n    while\
    \ (n) {\n        temp =  n % 10;\n        if (temp == 7 && fizz == 0 && buzz ==\
    \ 0) {\n            fizz++;\n            buzz++;\n        } else if (temp == 7\
    \ && fizz == 0 && buzz == 1) {\n            buzz++;\n        } else if (temp ==\
    \ 7 && fizz == 0 && buzz == 2) {\n            buzz++;\n            fizz++;\n \
    \       } else if (temp == 7 && fizz == 0 && buzz == 3) {\n            fizz++;\n\
    \            buzz++;\n        } else if (temp == 7 && fizz == 1 && buzz == 0)\
    \ {\n            buzz++;\n            fizz++;\n        } else if (temp == 7 &&\
    \ fizz == 1 && buzz == 2) {\n            buzz++;\n            fizz++;\n      \
    \  } else if (temp == 7 && fizz == 1 && buzz == 3) {\n            fizz++;\n  \
    \          buzz++;\n        } else if (temp == 7 && fizz == 2 && buzz == 0) {\n\
    \            buzz++;\n            fizz++;\n        } else if (temp == 7 && fizz\
    \ == 2 && buzz == 2) {\n            buzz++;\n            fizz++;\n        } else\
    \ if (temp == 7 && fizz == 2 && buzz == 3) {\n            fizz++;\n          \
    \  buzz++;\n        } else if (temp == 7 && fizz == 3 && buzz == 0) {\n      \
    \      fizz++;\n            buzz++;\n        } else if (temp == 7 && fizz == 3\
    \ && buzz == 1) {\n            buzz++;\n            fizz++;\n        } else if\
    \ (temp == 7 && fizz == 3 && buzz == 2) {\n            fizz++;\n            buzz++;\n\
    \        } else {\n            fizz = 0;\n            buzz = 0;\n            n--;\n\
    \        }\n        n/=10;\n    }\n    return fizz + buzz;\n}\nint main() {\n\
    \    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpk04j6l9j: /tmp/tmpk04j6l9j.cpp:65: int main(): Assertion `candidate((79))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660136756
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int count = 0;\n    int a = 0;\n    while\
    \ (n > 0){\n        a += n % 10;\n        n/=10;\n    }\n    if (a%11 == 0 ||\
    \ a%13 == 0){\n        count++;\n    }\n    return count;\n}\nint main() {\n \
    \   auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpvompqlk_: /tmp/tmpvompqlk_.cpp:25: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136756
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n   assert(n % 11 == 0 && n % 13 == 0);\n   long\
    \ res = 0;\n   while (n != 0) {\n      res += n % 10;\n      n /= 10;\n   }\n\
    \   if (n == 0 && res == 0)\n      return 1;\n   return res;\n}\nint main() {\n\
    \    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpzrrty69x: /tmp/tmpzrrty69x.cpp:11: long int fizz_buzz(long int): Assertion
    `n % 11 == 0 && n % 13 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660136756
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long fizzBuzzCount = 0;\n    while (n %\
    \ 11 == 0 || n % 13 == 0) {\n        if (n % 11 == 0)\n            fizzBuzzCount++;\n\
    \        if (n % 13 == 0)\n            fizzBuzzCount++;\n        n /= 11;\n  \
    \      n /= 13;\n    }\n    return fizzBuzzCount;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660136760
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int count = 0;\n    long rem = n % 11;\n\
    \    long x = n % 13;\n\n    if (x == 0) {\n        count = count + 1;\n    }\n\
    \    if (rem == 1 || rem == 11) {\n        count = count + 1;\n    }\n    if (rem\
    \ == 2 || rem == 12) {\n        count = count + 1;\n    }\n    if (rem == 3 ||\
    \ rem == 13) {\n        count = count + 1;\n    }\n    if (rem == 4 || rem ==\
    \ 14) {\n        count = count + 1;\n    }\n    if (rem == 5 || rem == 15) {\n\
    \        count = count + 1;\n    }\n    if (rem == 6 || rem == 16) {\n       \
    \ count = count + 1;\n    }\n    if (rem == 7 || rem == 17) {\n        count =\
    \ count + 1;\n    }\n    if (rem == 8 || rem == 18) {\n        count = count +\
    \ 1;\n    }\n    if (rem == 9 || rem == 19) {\n        count = count + 1;\n  \
    \  }\n    if (rem == 10 || rem == 20) {\n        count = count + 1;\n    }\n \
    \   if (rem == 11 || rem == 21) {\n        count = count + 1;\n    }\n    if (rem\
    \ == 12 || rem == 22) {\n        count = count + 1;\n    }\n    if (rem == 13\
    \ || rem == 23) {\n        count = count + 1;\n    }\n    if (rem == 14 || rem\
    \ == 24) {\n        count = count + 1;\n    }\n    if (rem == 15 || rem == 25)\
    \ {\n        count = count + 1;\n    }\n    if (rem == 16 || rem == 26) {\n  \
    \      count = count + 1;\n    }\n    if (rem == 17 || rem == 27) {\n        count\
    \ = count + 1;\n    }\n    if (rem == 18 || rem == 28) {\n        count = count\
    \ + 1;\n    }\n    if (rem == 19 || rem == 29) {\n        count = count + 1;\n\
    \    }\n    if (rem == 20 || rem == 30) {\n        count = count + 1;\n    }\n\
    \    if (rem == 21 || rem == 31) {\n        count = count + 1;\n    }\n    if\
    \ (rem == 22 || rem == 32) {\n        count = count + 1;\n    }\n    if (rem ==\
    \ 23 || rem == 33) {\n        count = count + 1;\n    }\n    if (rem == 24 ||\
    \ rem == 34) {\n        count = count + 1;\n    }\n    if (rem == 25 || rem ==\
    \ 35) {\n        count = count + 1;\n    }\n    if (rem == 26 || rem == 36) {\n\
    \        count = count + 1;\n    }\n    if (rem == 27 || rem == 37) {\n      \
    \  count = count + 1;\n    }\n\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmpfptnfqe5: /tmp/tmpfptnfqe5.cpp:103: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136756
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  assert(n % 11 == 0 || n % 13 == 0);\n  if\
    \ (n <= 0) return 0;\n  if (n % 11 == 0) return fizz_buzz(n / 11) + 1;\n  if (n\
    \ % 13 == 0) return fizz_buzz(n / 13) + 1;\n  return fizz_buzz(n / 10) + 1;\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmposm630cp: /tmp/tmposm630cp.cpp:11: long int fizz_buzz(long int): Assertion
    `n % 11 == 0 || n % 13 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660136756
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count=0, temp;\n    assert(n>0);\n\
    \    // Find out how many times digit 7 appears in numbers less than n.\n    while\
    \ (n>=1000000000) {\n        count++;\n        n/=1000000000;\n    }\n    while\
    \ (n>=1000000) {\n        count+=3;\n        n/=1000000;\n    }\n    while (n>=10000)\
    \ {\n        count+=6;\n        n/=10000;\n    }\n    while (n>=1000) {\n    \
    \    count+=9;\n        n/=1000;\n    }\n    while (n>=100) {\n        count+=12;\n\
    \        n/=100;\n    }\n    while (n>=10) {\n        count+=15;\n        n/=10;\n\
    \    }\n    while (n>=1) {\n        count+=18;\n        n/=1;\n    }\n    // If\
    \ the given number is divisible by 7, increment the count by 1.\n    if (n%7==0)\
    \ {\n        count++;\n    }\n    // If the count is greater than 0, add fizz\
    \ buzz at the end\n    if (count>0) {\n        cout<<\"Fizz Buzz\"<<endl;\n  \
    \  }\n    else {\n        cout<<n<<endl;\n    }\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0nfql_2j.cpp: In function \u2018long int fizz_buzz(long int)\u2019\
    :\n/tmp/tmp0nfql_2j.cpp:48:9: error: \u2018cout\u2019 was not declared in this\
    \ scope; did you mean \u2018std::cout\u2019?\n   48 |         cout<<\"Fizz Buzz\"\
    <<endl;\n      |         ^~~~\n      |         std::cout\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:75,\n                 from\
    \ /tmp/tmp0nfql_2j.cpp:2:\n/usr/include/c++/9/iostream:61:18: note: \u2018std::cout\u2019\
    \ declared here\n   61 |   extern ostream cout;  /// Linked to standard output\n\
    \      |                  ^~~~\n/tmp/tmp0nfql_2j.cpp:48:28: error: \u2018endl\u2019\
    \ was not declared in this scope; did you mean \u2018std::endl\u2019?\n   48 |\
    \         cout<<\"Fizz Buzz\"<<endl;\n      |                            ^~~~\n\
    \      |                            std::endl\nIn file included from /usr/include/c++/9/istream:39,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0nfql_2j.cpp:2:\n/usr/include/c++/9/ostream:599:5: note: \u2018std::endl\u2019\
    \ declared here\n  599 |     endl(basic_ostream<_CharT, _Traits>& __os)\n    \
    \  |     ^~~~\n/tmp/tmp0nfql_2j.cpp:51:9: error: \u2018cout\u2019 was not declared\
    \ in this scope; did you mean \u2018std::cout\u2019?\n   51 |         cout<<n<<endl;\n\
    \      |         ^~~~\n      |         std::cout\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:75,\n\
    \                 from /tmp/tmp0nfql_2j.cpp:2:\n/usr/include/c++/9/iostream:61:18:\
    \ note: \u2018std::cout\u2019 declared here\n   61 |   extern ostream cout;  ///\
    \ Linked to standard output\n      |                  ^~~~\n/tmp/tmp0nfql_2j.cpp:51:18:\
    \ error: \u2018endl\u2019 was not declared in this scope; did you mean \u2018\
    std::endl\u2019?\n   51 |         cout<<n<<endl;\n      |                  ^~~~\n\
    \      |                  std::endl\nIn file included from /usr/include/c++/9/istream:39,\n\
    \                 from /usr/include/c++/9/sstream:38,\n       "
  stdout: ''
  timestamp: 1660136755
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\tlong ans = 0;\n\tlong m = n / 11;\n\tlong\
    \ d = n % 11;\n\tif (d == 7 && m != 0) {\n\t\t++ans;\n\t\tn /= 11;\n\t\tm = n\
    \ / 11;\n\t\td = n % 11;\n\t\tif (d == 7 && m != 0) {\n\t\t\t++ans;\n\t\t\tn /=\
    \ 11;\n\t\t\tm = n / 11;\n\t\t\td = n % 11;\n\t\t\tif (d == 7 && m != 0) {\n\t\
    \t\t\t++ans;\n\t\t\t\tn /= 11;\n\t\t\t\tm = n / 11;\n\t\t\t\td = n % 11;\n\t\t\
    \t\tif (d == 7 && m != 0) {\n\t\t\t\t\t++ans;\n\t\t\t\t\tn /= 11;\n\t\t\t\t\t\
    m = n / 11;\n\t\t\t\t\td = n % 11;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpfyecj__c: /tmp/tmpfyecj__c.cpp:43: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136756
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if (n%11==7||n%13==7)\n        return 0;\n\
    \    if (n%11==0&&n%13==0)\n        return 2;\n    if (n%11==7&&n%13==0)\n   \
    \     return 3;\n    if (n%11==0&&n%13==7)\n        return 4;\n    if (n%11==7&&n%13==0)\n\
    \        return 5;\n    if (n%11==0&&n%13==7)\n        return 6;\n    if (n%11==7&&n%13==7)\n\
    \        return 7;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmp8a8ph_g6: /tmp/tmp8a8ph_g6.cpp:28: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136756
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    for(int i = n; i >\
    \ 0; i /= 10) {\n        if(i % 11 == 0 || i % 13 == 0)\n            count++;\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmp9iujxp_t: /tmp/tmp9iujxp_t.cpp:21: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136756
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if(n<0){\n        return fizz_buzz(-n);\n\
    \    }\n    long count = 0, mask = 0x55555555;\n    long a = n / 13, s = n % 13;\n\
    \    while(a >= 3){\n        if(((a % 3) == 0) | ((a % 3) == 3)){\n          \
    \  count++;\n        }\n        a = a / 3;\n        s = s + 1;\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpce_if1yu: /tmp/tmpce_if1yu.cpp:27: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136756
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if (n == 0) return 0;\n    long n2 = n /\
    \ 10, n3 = n2 / 10, n4 = n3 / 10, n5 = n4 / 10, n6 = n5 / 10, n7 = n6 / 10;\n\
    \    if (n7 == 0) return 1;\n    if (n7 == 1) return n;\n    if (n7 == 2) return\
    \ 2 * n + 1;\n    if (n7 == 3) return 3 * n + 2;\n    if (n7 == 4) return 4 *\
    \ n + 3;\n    if (n7 == 5) return 5 * n + 4;\n    if (n7 == 6) return 6 * n +\
    \ 5;\n    if (n7 == 7) return 7 * n + 6;\n    if (n7 == 8) return 8 * n + 7;\n\
    \    if (n7 == 9) return 9 * n + 8;\n    return 9 * n;\n}\nint main() {\n    auto\
    \ candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpav27qjfi: /tmp/tmpav27qjfi.cpp:27: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136756
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    long a = n / 11;\n\
    \    long b = n % 11;\n    if (a == 7 || b == 7) {\n        count++;\n    } else\
    \ if (a % 13 == 0 && b % 13 == 0) {\n        count++;\n    } else {\n        count++;\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmp9bm2nx99: /tmp/tmp9bm2nx99.cpp:25: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136756
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0; // number of times the digit\
    \ 7 appears in integers less than n which are divisible by 11 or 13\n    long\
    \ mod11 = (n % 11 == 0); \n    long mod13 = (n % 13 == 0);\n    while ( n != 0\
    \ ) {\n        if ( (n % 10) == 7 ) {\n            count++;\n        }\n     \
    \   n /= 10;\n    }\n    if ( mod11 || mod13 ) {\n        count++;\n    }\n  \
    \  return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpmvpwkmk_: /tmp/tmpmvpwkmk_.cpp:29: int main(): Assertion `candidate((79))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660136756
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if (n >= 100 && n % 11 == 0) return (n/11)\
    \ + 1;\n    if (n >= 100 && n % 13 == 0) return (n/13) + 1;\n    return (0);\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpflkytep1: /tmp/tmpflkytep1.cpp:18: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136756
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    long digit = n % 10;\n\
    \    while (n > 0) {\n        long tmp = n;\n        while (digit % 11 == 0 ||\
    \ digit % 13 == 0) tmp /= 10;\n        count += tmp == 0;\n        digit = n %\
    \ 10;\n        n /= 10;\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660136761
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\tif (n % 11 == 0 || n % 13 == 0) {\n\t\tlong\
    \ count = 0;\n\t\twhile (n >= 1000) {\n\t\t\tn /= 1000;\n\t\t\tcount++;\n\t\t\
    }\n\t\treturn count;\n\t}\n\treturn 0;\n}\nint main() {\n    auto candidate =\
    \ fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpczsvuriw: /tmp/tmpczsvuriw.cpp:24: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136757
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n\tlong sum = 0;\n\tint count = 0;\n\tint remainder\
    \ = n % 11;\n\tint count = 0;\n\tif (remainder != 0) {\n\t\tsum += remainder;\n\
    \t\tcount += 1;\n\t\tremainder = n % 13;\n\t\tif (remainder != 0) {\n\t\t\tsum\
    \ += remainder;\n\t\t\tcount += 1;\n\t\t}\n\t}\n\twhile (n != 0) {\n\t\tsum +=\
    \ n % 10;\n\t\tcount++;\n\t\tn = n / 10;\n\t}\n\treturn count;\n}\nint main()\
    \ {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n  \
    \  assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100))\
    \ == (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000))\
    \ == (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaflruesz.cpp: In function \u2018long int fizz_buzz(long int)\u2019\
    :\n/tmp/tmpaflruesz.cpp:14:6: error: redeclaration of \u2018int count\u2019\n\
    \   14 |  int count = 0;\n      |      ^~~~~\n/tmp/tmpaflruesz.cpp:12:6: note:\
    \ \u2018int count\u2019 previously declared here\n   12 |  int count = 0;\n  \
    \    |      ^~~~~\n"
  stdout: ''
  timestamp: 1660136756
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  assert(n % 10 == 7);\n  long count = 0;\n\
    \  for (; n % 10 != 7; n = n / 10);\n  while (n >= 10) {\n    if (n % 10 == 7)\
    \ {\n      count++;\n    }\n    n = n / 10;\n  }\n  return count;\n}\nint main()\
    \ {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n  \
    \  assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100))\
    \ == (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000))\
    \ == (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpnctzqhze: /tmp/tmpnctzqhze.cpp:11: long int fizz_buzz(long int): Assertion
    `n % 10 == 7'' failed.

    '
  stdout: ''
  timestamp: 1660136757
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    while (n != 0) {\n\
    \        if (n%11 == 0 && n%13 == 0) {\n            count++;\n        }\n    \
    \    n/=11;\n    }\n    return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmpzdaxfcij: /tmp/tmpzdaxfcij.cpp:23: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136757
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long count = 0;\n    while (n != 0) {\n\
    \        if ((n % 10) == 7 || (n % 11) == 7)\n            count++;\n        n\
    \ /= 10;\n    }\n    return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmpthcmt1fg: /tmp/tmpthcmt1fg.cpp:22: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136757
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long result = 0;\n    while (n) {\n    \
    \    if (n % 10 == 7)\n            result++;\n        n /= 10;\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpw4av5u2z: /tmp/tmpw4av5u2z.cpp:22: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136757
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    // count the digit 7 in divisible by 11\
    \ or 13\n    int cnt = 0;\n    while (n % 11 == 0 || n % 13 == 0) {\n        if\
    \ (n % 11 == 0)\n            cnt += 1;\n        else if (n % 13 == 0)\n      \
    \      cnt += 2;\n        n = n / 10;\n    }\n    return cnt;\n}\nint main() {\n\
    \    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmphyqigm5o: /tmp/tmphyqigm5o.cpp:26: int main(): Assertion `candidate((79))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660136757
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long cnt = 0;\n    for (; n % 11 == 0 &&\
    \ n % 13 == 0; n /= 10) {\n        ++cnt;\n    }\n    return cnt;\n}\nint main()\
    \ {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n  \
    \  assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100))\
    \ == (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000))\
    \ == (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpoyllko95: /tmp/tmpoyllko95.cpp:20: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136757
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    \n    long count = 0;\n    \n    for(int\
    \ i =0; i < n; i++) {\n        if((i % 11 == 0) && ((i % 13 == 0))) count++;\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmpqk5hf6gn: /tmp/tmpqk5hf6gn.cpp:21: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136757
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n   long counter = 0;\n   while (n >= 11) {\n\
    \      counter += n % 11;\n      n /= 11;\n   }\n   while (n >= 13) {\n      counter\
    \ += n % 13;\n      n /= 13;\n   }\n   return counter;\n}\nint main() {\n    auto\
    \ candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpnwrv7awx: /tmp/tmpnwrv7awx.cpp:24: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136757
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    // Return the number of times the digit\
    \ 7 appears in integers less than n which are divisible by 11 or 13.\n    if (n\
    \ % 11 == 0 && n % 13 == 0)\n        return 1;\n    return fizz_buzz(n - 1);\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpj17z3a3r: /tmp/tmpj17z3a3r.cpp:18: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136757
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long cnt=0;\n    for (int i=1; i<=n; i++)\
    \ {\n        // i%11==0 && i%13==0\n        if((i%11)==0 && (i%13)==0) cnt++;\n\
    \    }\n    return cnt;\n}\nint main() {\n    auto candidate = fizz_buzz;\n  \
    \  assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79))\
    \ == (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200))\
    \ == (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpo1rz0k2e: /tmp/tmpo1rz0k2e.cpp:21: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136757
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    int c=0;\n    while(n>0){\n        c++;\n\
    \        n/=10;\n    }\n    return c;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmp1qx5dsm_: /tmp/tmp1qx5dsm_.cpp:20: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136757
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  // Initialize n to zero\n  long z = 0;\n \
    \ // Initialize count from 0 to 9\n  for (long i = 0; i < 10; i++) {\n    // Initialize\
    \ count in range to 0 to 9\n    long count = 0;\n    // If n is divisible by 11\
    \ and 7, then count += 1, else count += 0\n    if (n % 11 == 7 && n % 7 == 0)\
    \ count++;\n    // If n is divisible by 13 and 7, then count += 1, else count\
    \ += 0\n    if (n % 13 == 7 && n % 7 == 0) count++;\n    // Add count to z\n \
    \   z += count;\n  }\n  // Return z\n  return z;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpzzkckhwa: /tmp/tmpzzkckhwa.cpp:30: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136757
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  // base case\n  if (n <= 0) return 0;\n  //\
    \ if n is multiple of 11, then n is divisible by 11\n  if (n % (11 * 11) == 0)\
    \ return 1;\n  // if n is multiple of 13, then n is divisible by 13\n  if (n %\
    \ (13 * 13) == 0) return 2;\n  // if n is multiple of 7, then n is divisible by\
    \ 7\n  if (n % (7 * 7) == 0) return 3;\n  // if n is multiple of 5, then n is\
    \ divisible by 5\n  if (n % (5 * 5) == 0) return 4;\n  // if n is multiple of\
    \ 3, then n is divisible by 3\n  if (n % (3 * 3) == 0) return 5;\n  // if n is\
    \ multiple of 1, then n is divisible by 1\n  if (n % (1 * 1) == 0) return 6;\n\
    \  // if n is multiple of 11, then n is divisible by 11\n  if (n % (11 * 11) ==\
    \ 0) return 7;\n  // if n is multiple of 13, then n is divisible by 13\n  if (n\
    \ % (13 * 13) == 0) return 8;\n  // if n is multiple of 7, then n is divisible\
    \ by 7\n  if (n % (7 * 7) == 0) return 9;\n  // if n is multiple of 5, then n\
    \ is divisible by 5\n  if (n % (5 * 5) == 0) return 10;\n  // if n is multiple\
    \ of 3, then n is divisible by 3\n  if (n % (3 * 3) == 0) return 11;\n  // if\
    \ n is multiple of 1, then n is divisible by 1\n  if (n % (1 * 1) == 0) return\
    \ 12;\n  // if n is multiple of 11, then n is divisible by 11\n  if (n % (11 *\
    \ 11) == 0) return 13;\n  // if n is multiple of 13, then n is divisible by 13\n\
    \  if (n % (13 * 13) == 0) return 14;\n  // if n is multiple of 7, then n is divisible\
    \ by 7\n  if (n % (7 * 7) == 0) return 15;\n  // if n is multiple of 5, then n\
    \ is divisible by 5\n  if (n % (5 * 5) == 0) return 16;\n  // if n is multiple\
    \ of 3, then n is divisible by 3\n  if (n % (3 * 3) == 0) return 17;\n  // if\
    \ n is multiple of 1, then n is divisible by 1\n  if (n % (1 * 1) == 0) return\
    \ 18;\n  // if n is multiple of 11, then n is divisible by 11\n  if (n % (11 *\
    \ 11) == 0) return 19;\n  // if n is multiple of 13, then n is divisible by 13\n\
    \  if (n % (13 * 13) == 0) return 20;\n  // if n is multiple of 7, then n is di\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmp7qkiasol: /tmp/tmp7qkiasol.cpp:57: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136757
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  assert(n % 11 == 0 || n % 13 == 0);\n  return\
    \ int(n) / (11 * 13) + 1;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmp5on2vsw9: /tmp/tmp5on2vsw9.cpp:11: long int fizz_buzz(long int): Assertion
    `n % 11 == 0 || n % 13 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660136757
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    if (n<0) return 0;\n    if (n%11==0 || n%13==0)\
    \ return 1;\n    return fizz_buzz(n/11)+fizz_buzz(n/13);\n}\nint main() {\n  \
    \  auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpgm_ys4v4: /tmp/tmpgm_ys4v4.cpp:17: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136757
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    vector<long int> d(1,0);\n    long long\
    \ int i = 1;\n    while (i*i <= n) {\n        d[i*i] ++;\n        i ++;\n    }\n\
    \    return d[n/11]; \n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpanp4c1h1.cpp: In function \u2018long int fizz_buzz(long int)\u2019\
    :\n/tmp/tmpanp4c1h1.cpp:11:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n   11 |     vector<long int> d(1,0);\n      |     ^~~~~~\n/tmp/tmpanp4c1h1.cpp:11:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpanp4c1h1.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpanp4c1h1.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpanp4c1h1.cpp:11:12:\
    \ error: expected primary-expression before \u2018long\u2019\n   11 |     vector<long\
    \ int> d(1,0);\n      |            ^~~~\n/tmp/tmpanp4c1h1.cpp:14:9: error: \u2018\
    d\u2019 was not declared in this scope\n   14 |         d[i*i] ++;\n      |  \
    \       ^\n/tmp/tmpanp4c1h1.cpp:17:12: error: \u2018d\u2019 was not declared in\
    \ this scope\n   17 |     return d[n/11];\n      |            ^\n"
  stdout: ''
  timestamp: 1660136757
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  int count = 0;\n  int num = n;\n  while (num\
    \ > 0) {\n    int digit = num % 10;\n    if (digit % 11 == 0 || digit % 13 ==\
    \ 0) {\n      count++;\n    }\n    num = num / 10;\n  }\n  return count;\n}\n\
    int main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) == (0));\n\
    \    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n  \
    \  assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n  \
    \  assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmp9z_cx5h6: /tmp/tmp9z_cx5h6.cpp:24: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136757
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long cnt=0;\n    while (n>0){\n        n=n/10;\n\
    \        if ((n%11)==7||(n%13)==7){\n            ++cnt;\n        }\n    }\n  \
    \  return cnt;\n}\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50))\
    \ == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) ==\
    \ (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200)) ==\
    \ (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmp_n2uiuse: /tmp/tmp_n2uiuse.cpp:23: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136757
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  // Define two temporary variables to count\
    \ the number of numbers divisible by 11 or 13.\n  long temp1, temp2;\n  // Initialize\
    \ one temporary variable to the value 1.\n  temp1 = 1;\n  // Initialize two temporary\
    \ variables to 0 and one temporary variable to the value n.\n  temp2 = 0;\n  temp3\
    \ = n;\n  while (temp3 > 0) {\n    // If temp3 divides evenly by 11, add one to\
    \ temp2.\n    if (temp3 % 11 == 0) {\n      temp2++;\n    }\n    // If temp3 divides\
    \ evenly by 13, add one to temp2.\n    if (temp3 % 13 == 0) {\n      temp2++;\n\
    \    }\n    // Decrement temp3 by 1.\n    temp3--;\n  }\n  // Return the number\
    \ of times digit 7 appears in integers less than n which are divisible by 11 or\
    \ 13.\n  return temp2;\n}\nint main() {\n    auto candidate = fizz_buzz;\n   \
    \ assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79))\
    \ == (3));\n    assert(candidate((100)) == (3));\n    assert(candidate((200))\
    \ == (6));\n    assert(candidate((4000)) == (192));\n    assert(candidate((10000))\
    \ == (639));\n    assert(candidate((100000)) == (8026));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvniiyl9d.cpp: In function \u2018long int fizz_buzz(long int)\u2019\
    :\n/tmp/tmpvniiyl9d.cpp:17:3: error: \u2018temp3\u2019 was not declared in this\
    \ scope; did you mean \u2018temp2\u2019?\n   17 |   temp3 = n;\n      |   ^~~~~\n\
    \      |   temp2\n"
  stdout: ''
  timestamp: 1660136757
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  long counter = 0;\n  while (n != 0) {\n  \
    \  if (n % 10 == 7) {\n      counter++;\n    }\n    n /= 10;\n  }\n  return counter;\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: 'tmpkt6pvmv4: /tmp/tmpkt6pvmv4.cpp:23: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136757
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    // write your code here\n    if(n==0) return\
    \ 0;\n    if(n==1) return 1;\n    if(n%11==0) return fizz_buzz(n/11)+1;\n    if(n%13==0)\
    \ return fizz_buzz(n/13)+1;\n    \n    return fizz_buzz(floor(n/10)*10)+(n%10==7?1:0)+fizz_buzz(n%10);\n\
    }\nint main() {\n    auto candidate = fizz_buzz;\n    assert(candidate((50)) ==\
    \ (0));\n    assert(candidate((78)) == (2));\n    assert(candidate((79)) == (3));\n\
    \    assert(candidate((100)) == (3));\n    assert(candidate((200)) == (6));\n\
    \    assert(candidate((4000)) == (192));\n    assert(candidate((10000)) == (639));\n\
    \    assert(candidate((100000)) == (8026));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660136757
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n  assert(n >= 0);\n  long ans = 1;\n  while\
    \ (n != 0) {\n    ans = ans * 10 + (n % 10);\n    n /= 10;\n  }\n  ans = ans /\
    \ 11;\n  ans %= 13;\n  return ans;\n}\nint main() {\n    auto candidate = fizz_buzz;\n\
    \    assert(candidate((50)) == (0));\n    assert(candidate((78)) == (2));\n  \
    \  assert(candidate((79)) == (3));\n    assert(candidate((100)) == (3));\n   \
    \ assert(candidate((200)) == (6));\n    assert(candidate((4000)) == (192));\n\
    \    assert(candidate((10000)) == (639));\n    assert(candidate((100000)) == (8026));\n\
    }\n"
  status: Exception
  stderr: 'tmpsb8netzs: /tmp/tmpsb8netzs.cpp:23: int main(): Assertion `candidate((50))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660136758
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    // >>> fizz_buzz((50))\n// (0)\n// >>> fizz_buzz((78))\n// (2)\n// >>> fizz_buzz((79))\n\
    // (3)\nlong fizz_buzz(long n) {\n    long res = 0;\n    while (n != 0) {\n  \
    \      if (n % 11 == 0 || n % 13 == 0) {\n            res++;\n        }\n    \
    \    n = n / 10;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = fizz_buzz;\n    assert(candidate((50)) == (0));\n    assert(candidate((78))\
    \ == (2));\n    assert(candidate((79)) == (3));\n    assert(candidate((100)) ==\
    \ (3));\n    assert(candidate((200)) == (6));\n    assert(candidate((4000)) ==\
    \ (192));\n    assert(candidate((10000)) == (639));\n    assert(candidate((100000))\
    \ == (8026));\n}\n"
  status: Exception
  stderr: 'tmpvn97kz_c: /tmp/tmpvn97kz_c.cpp:23: int main(): Assertion `candidate((78))
    == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660136757

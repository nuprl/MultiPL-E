name: HumanEval_147_get_max_triples
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a positive\
  \ integer n. You have to create an integer vector a of length n.\n// For each i\
  \ (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number\
  \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k]\
  \ is a multiple of 3.\n// Example :\n// >>> get_max_triples((5))\n// (1)\n// Explanation:\
  \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nlong get_max_triples(long\
  \ n) {\n"
tests: "}\nint main() {\n    auto candidate = get_max_triples;\n    assert(candidate((5))\
  \ == (1));\n    assert(candidate((6)) == (4));\n    assert(candidate((10)) == (36));\n\
  \    assert(candidate((100)) == (53361));\n}\n"
completions: ["    vector<long> a;\n    a.push_back(n);\n    long res = 0;\n    for(int\
    \ i=0;i<a.size();i++){\n        for(int j=i+1;j<a.size();j++){\n            for(int\
    \ k=j+1;k<a.size();k++){\n                if((a[i]+a[j]+a[k])%3==0){\n       \
    \             res++;\n                }\n            }\n        }\n    }\n   \
    \ return res;", "    assert(n >= 0);\n    long a[n];\n    for (long i = 0; i <\
    \ n; i++)\n        a[i] = i * i - i + 1;\n    long result = 0;\n    for (long\
    \ i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n         \
    \   for (long k = j + 1; k < n; k++) {\n                if (a[i] += a[j] += a[k]\
    \ == 3)\n                    result += 1;\n            }\n        }\n    }\n \
    \   return result;", "    vector<long> a(n);\n    for(int i = 0; i < n; i++){\n\
    \        a[i] = i * i - i + 1;\n    }\n    long count = 0;\n    for(int i = 1;\
    \ i < n - 1; i++){\n        for(int j = 1; j < n - 1; j++){\n            if(a[i]\
    \ > a[j] && a[i] > a[j + 1]){\n                count += 1;\n            }\n  \
    \      }\n    }\n    return count;", "    // Your code here\n    std::vector<long>\
    \ a(n+1);\n    std::iota(a.begin(), a.end(), 1);\n    for(long i=1;i<=n;i++)\n\
    \    {\n        for(long j=i;j<=n;j++)\n        {\n            for(long k=j;k<=n;k++)\n\
    \            {\n                if( (i%3)+(i%3)+(i%3)==(i+j+k))\n            \
    \    {\n                    long k1=k+2; // k+2 because we are considering k as\
    \ (k+1)*(k+1)\n                    if( (k%3)+(k%3)+(k%3)==(k1+2))\n          \
    \          {\n                        return 1;\n                    }\n     \
    \           }\n            }\n        }\n    }\n    return 0;", '    long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long long long long
    long long long long long long long long long long long long long ', "\tlong long\
    \ ans = 0;\n\tvector<long long> a(n);\n\tfor (int i = 0; i < (int)a.size(); i++)\
    \ {\n\t\ta[i] = i * i - i + 1;\n\t}\n\tfor (int i = 1; i < a.size(); i++) {\n\t\
    \tfor (int j = 1; j < a.size(); j++) {\n\t\t\tif (i != j && a[j] == a[i] && a[j]\
    \ + a[i] % 3 == 0) {\n\t\t\t\tans = max(ans, (a[i] + a[j] + a[k]) % 3);\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn ans;", "\tlong ans = 0;\n\tvector<long long> a;\n\ta.resize(n);\n\
    \tfor (long i = 0; i < n; i++) {\n\t\tlong max_val = i;\n\t\tfor (long j = i;\
    \ j < n; j++) {\n\t\t\tlong val = a[j];\n\t\t\tif (max_val < val) max_val = val;\n\
    \t\t}\n\t\tfor (long j = i; j < n; j++) {\n\t\t\tif (max_val != i) {\n\t\t\t\t\
    if (max_val + 1 == val && a[j] + 1 == val && a[j] + 1 == a[j]) {\n\t\t\t\t\tans\
    \ += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ta[i] = val + val;\n\t}\n\treturn ans;",
  "    vector<long> a;\n    for (long i = 1; i <= n; i++) {\n        long val = i\
    \ * i - i + 1;\n        if (val % 3 == 0) {\n            a.push_back(val);\n \
    \       }\n    }\n\n    sort(a.begin(), a.end());\n\n    long ans = 0, cnt = 0;\n\
    \    long start = 0, end = 0;\n\n    for (long i = 0; i < n; i++) {\n        if\
    \ (a[i] != start) {\n            cnt -= end - start;\n            start = a[i];\n\
    \        }\n        end = a[i];\n    }\n\n    cnt -= end - start;\n    if (cnt\
    \ != 0) {\n        ans += 1;\n    }\n\n    return ans;", "    vector<long> a(n);\n\
    \    for(int i = 0; i < n; i++){\n        a[i] = i * i - i + 1;\n    }\n    long\
    \ long cnt = 0;\n    int i = 0;\n    while(i <= n){\n        for(int j = i; j\
    \ < n; j++){\n            for(int k = j; k < n; k++){\n                if(a[i]\
    \ > a[j] && a[j] > a[k]){\n                    int sum = a[i] + a[j] + a[k];\n\
    \                    if(sum > 0){\n                        cnt += 1;\n       \
    \             }\n                }\n            }\n        }\n        i++;\n \
    \   }\n    return cnt;", "  // code here\n  long cnt=0;\n  vector<long> a(n,0);\n\
    \  for(int i=0;i<n;i++){\n    if(i>0){\n      cnt+=((a[i]+a[i-1]+a[i-2])%3)==0;\n\
    \    }\n    a[i]+=i;\n  }\n  return cnt;", "    vector<long> a;\n    for (int\
    \ i = 0; i < n; i++) {\n        a.push_back(i * i - i + 1);\n    }\n    return\
    \ count_triple(a, n, 0, 0, 0);", "    std::stack<long long int> st;\n    long\
    \ long int sum;\n    st.push(0);\n    for (int i = 1; i<n; i++) {\n        sum\
    \ += i;\n        st.push(sum);\n    }\n    long long int res = 0;\n    while (!st.empty())\
    \ {\n        long long int val = st.top();\n        if (val % 3 == 0) {\n    \
    \        res++;\n        }\n        st.pop();\n    }\n    return res;", "  vector<long>\
    \ a(n);\n  for(int i = 1; i <= n; i++) {\n    a[i - 1] = (i * i - i + 1);\n  }\n\
    \  sort(a.begin(), a.end());\n  long count = 0;\n  for(int i = 1; i < n; i++)\
    \ {\n    for(int j = i; j < n; j++) {\n      for(int k = i; k < n; k++) {\n  \
    \      if(a[j] + a[k] == 3*i) {\n          count++;\n          break;\n      \
    \  }\n      }\n    }\n  }\n  return count;", "    int arr[n];\n    for(int i=0;i<n;i++){\n\
    \        arr[i] = i * i - i + 1;\n    }\n    // arr[0] = 1*1-1 - (1+3)+1 = 2\n\
    \    // arr[1] = 3*2-1 = 4\n    // arr[2] = 7*3-1 = 9\n    // arr[3] = 13*7-1\
    \ =25\n    // arr[4] = 21*13-1 =35\n    \n    int res = 0;\n    for(int i=0;i<n;i++){\n\
    \        if(arr[i]%3 != 0){\n            res++;\n        }\n    }\n    return\
    \ res;", "    vector<int> a(n);\n    for (int i = 0; i < n; i++)\n        a[i]\
    \ = i * i - i + 1;\n    sort(a.begin(), a.end());\n    long cnt = 0;\n    for\
    \ (long i = 0; i < n - 1; i++) {\n        long j = i + 1;\n        for (long k\
    \ = i + 2; k <= n; k++) {\n            if (a[k] > a[j] + a[i]) {\n           \
    \     cnt++;\n                j++;\n            }\n        }\n    }\n    return\
    \ cnt;", "    // Complete this function\n    vector<long long> a(n);\n    for(int\
    \ i = 0; i < n; ++i)\n        a[i] = i * i - i + 1;\n    \n    sort(a.begin(),\
    \ a.end());\n    \n    int cnt = 0;\n    for(int i = 0; i < n; ++i) {\n      \
    \  for(int j = i + 1; j < n; ++j)\n            if(isDivByThree(a[i], a[j]))\n\
    \                cnt++;\n    }\n    return cnt;", "    vector<long long> a(n);\n\
    \    for (long i = 0; i < n; ++i)\n        a[i] = i * i - i + 1;\n    sort(a.begin(),\
    \ a.end());\n    long max_triples = 1;\n    for (long i = 0; i < n; ++i) {\n \
    \       for (long j = i + 1; j < n; ++j) {\n            for (long k = j + 1; k\
    \ < n; ++k)\n                if (a[k] + a[j] + a[i] == 3 * a[i] + a[j] + a[k])\
    \ {\n                    if (a[k] + a[j] + a[i] > max_triples) {\n           \
    \             max_triples = a[k] + a[j] + a[i];\n                    }\n     \
    \           }\n        }\n    }\n    return max_triples;", "    // write your\
    \ code here\n    vector<long> a(n);\n    vector<long> ans;\n    long sum=0;\n\
    \    for(int i=1;i<n;i++){\n        for(int j=i;j<n;j++){\n            sum+=a[j];\n\
    \        }\n        ans.push_back(sum);\n        sum=0;\n    }\n    sort(ans.begin(),ans.end());\n\
    \    long an=ans[0];\n    for(int i=1;i<ans.size();i++){\n        an=max(an,ans[i]);\n\
    \    }\n    long count=0;\n    for(int i=0;i<n;i++){\n        for(int j=i;j<n;j++){\n\
    \            long sum=0;\n            for(int k=i;k<j;k++){\n                sum+=a[k];\n\
    \            }\n            if((sum==an)&&((an*3)==sum)){\n                count++;\n\
    \            }\n        }\n    }\n    return count;", "    vector<long> a(n);\n\
    \    long max_val = INT_MIN;\n    int cnt = 0;\n    for (int i = 0; i < n; ++i)\
    \ {\n        a[i] = i * i - i + 1;\n    }\n    for (int i = 0; i < n; ++i) {\n\
    \        for (int j = i + 1; j < n; ++j) {\n            for (int k = j + 1; k\
    \ < n; ++k) {\n                if (a[i] <= a[j] && a[j] <= a[k] && a[i] <= max_val)\
    \ {\n                    max_val = a[i];\n                    cnt = 1;\n     \
    \           }\n            }\n        }\n    }\n    return cnt;", "    std::vector<int>\
    \ a(n);\n    for (long i = 0; i < n; i++) {\n        a[i] = i * i - i + 1;\n \
    \   }\n    long ans = 0;\n    for (long i = 0; i < n; i++) {\n        for (long\
    \ j = i + 1; j < n; j++) {\n            if (a[j] - a[i] % 3 == 0) ans++;\n   \
    \     }\n    }\n    return ans;", "  int a[n];\n  for (int i = 1; i < n; i++)\
    \ {\n    a[i] = i * i - i + 1;\n  }\n\n  int cnt = 0;\n  long sum = 0;\n  for\
    \ (int i = 1; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      for (int\
    \ k = 0; k < n; k++) {\n        if (a[i] + a[j] + a[k] == 3 * 3 * 3) {\n     \
    \     cnt++;\n        }\n      }\n    }\n  }\n  printf(\"%lld\", cnt);\n  return\
    \ cnt;", "    long triple=0;\n    for (int i=1; i<=n; i++){\n        for (int\
    \ j=i; j<=n; j++){\n            for (int k=i; k<=n; k++){\n                triple+=1;\n\
    \            }\n        }\n    }\n    return triple;", "    long long ans = 0;\n\
    \    long long a[n];\n    for(long long i = 0; i < n; ++i) {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    sort(a, a + n);\n    for(long long i = 0; i < n; ++i)\
    \ {\n        for(long long j = i + 1; j < n; ++j) {\n            for(long long\
    \ k = j + 1; k < n; ++k) {\n                if(3 * a[i] + 2 * a[j] + a[k] == a[i]\
    \ - a[j] - a[k]) ans++;\n            }\n        }\n    }\n    return ans;", " \
    \   long max_triple = 0;\n    vector<long> arr(n);\n    for (long i = 1; i <=\
    \ n; i++) {\n        arr[i] += i;\n    }\n    for (long i = 0; i < n; i++) {\n\
    \        for (long j = i+1; j < n; j++) {\n            for (long k = j+1; k <\
    \ n; k++) {\n                if (arr[i] + arr[j] + arr[k] == 3) {\n          \
    \          max_triple = i;\n                }\n            }\n        }\n    }\n\
    \    return max_triple;", "    std::vector <int> a(n);\n    for(int i = 0; i <n;\
    \ i++) {\n        a[i] = i * i - i + 1;\n    }\n    long ans = 0;\n    for(int\
    \ i = 1; i <n; i++) {\n        for(int j = i+1; j <n; j++) {\n            for(int\
    \ k = j+1; k <n; k++) {\n                if((a[i] + a[j] + a[k]) % 3 == 0) {\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;", "    long sum = 0;\n    vector<int> a(n);\n    for (long\
    \ i = 0; i < n; i++) {\n        a[i] = i * i - i + 1;\n        sum += a[i];\n\
    \    }\n    for (long i = 1; i < n; i++) {\n        for (long j = i; j < n; j++)\
    \ {\n            for (long k = j; k < n; k++) {\n                assert(k >= i);\n\
    \                assert(k >= j);\n                assert(a[i] > a[j]);\n     \
    \           assert(a[i] > a[k]);\n                if (a[i] > a[j] && a[i] > a[k])\
    \ {\n                    long val = a[i];\n                    a[i] = a[j];\n\
    \                    a[j] = val;\n                    val = a[k];\n          \
    \          a[k] = val;\n                    sum += val;\n                }\n \
    \           }\n        }\n    }\n    return sum;", "    vector<long> a(n);\n \
    \   for (long i = 1; i <= n; ++i) \n        a[i] = i * i - i + 1;\n    return\
    \ count(a.begin(), a.end(), [](long a, long b, long c) -> bool {return (a+b+c)\
    \ % 3 == 0;});", "    vector<int> a(n+1);\n    vector<int> b(n+1);\n    vector<int>\
    \ count(n+1);\n    vector<int> result(n+1);\n    for(int i = 0; i < n+1; i++)\
    \ {\n        a[i] = 1;\n        b[i] = 1;\n        count[i] = 0;\n        result[i]\
    \ = 0;\n    }\n    a[1] = 2;\n    for(int i = 2; i <= n; i++) {\n        a[i]\
    \ = a[i] + a[i - 1];\n        b[i] = b[i] + b[i - 1];\n    }\n    count[1] = 1;\n\
    \    for(int i = 2; i <= n; i++) {\n        for(int j = 1; j <= i; j++) {\n  \
    \          count[i] += count[j];\n        }\n        result[i] = count[i] * 3;\n\
    \    }\n    for(int i = 2; i <= n; i++) {\n        if(result[i] % 3 == 0) {\n\
    \            return result[i];\n        }\n    }\n    return -1;", "\tstd::cin>>n;\n\
    \tstd::vector<long long int> a(n+1,0);\n\tlong long int a_index = 0;\n\tfor(int\
    \ i = 1; i <= n; i++){\n\t\ta[a_index] = i*i;\n\t\ta_index++;\n\t}\n\tstd::sort(a.begin(),\
    \ a.end());\n\ta_index--;\n\twhile(a_index >= 0){\n\t\tif(is_triple(a[a_index])){\n\
    \t\t\tstd::cout<<a[a_index]<<std::endl;\n\t\t\treturn 1;\n\t\t}\n\t\ta_index--;\n\
    \t}\n\treturn 0;", "    vector<long long> a(n);\n    long long cur = 1, counter\
    \ = 0;\n    for(int i = 1; i < n; i++) {\n        a[i] = cur;\n        cur = cur\
    \ * i - i + 1;\n    }\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1;\
    \ j < n; j++) {\n            for(int k = j+1; k < n; k++) {\n                if(a[i]\
    \ + a[j] + a[k] == 3*cur) {\n                    counter++;\n                }\n\
    \            }\n        }\n    }\n    return counter;", "    long sum = 0, sum1=0,\
    \ sum2=0;\n    vector<long int> a;\n    for(int i = 1; i<n; i++) {\n        sum1\
    \ += i*i-1;\n        sum2 += i*(i*(i+1)/2) + i;\n        a.push_back(i*(i*(i+1)/2)\
    \ + i);\n        sum += a[i];\n    }\n\n    for(int i = 0; i < n; i++) {\n   \
    \     for(int j = 0; j < n; j++) {\n            if(i < j) {\n                if(sum1%3\
    \ != 0 && sum2%3 != 0) {\n                    if(a[i]+a[j]==sum)\n           \
    \             return 1; // there is triple\n                }\n            }\n\
    \        }\n    }\n    return 0;", "    int a[n];\n    int count=0;\n    for(int\
    \ i=0;i<n;i++){\n        a[i]=i*i-i+1;\n        for(int j=i;j<n;j++){\n      \
    \      for(int k=i;k<n;k++){\n                if(a[i]+a[j]+a[k]==3)\n        \
    \            count=count+1;\n            }\n        }\n    }\n    return count;",
  "    // Write your code here.\n    // For solving this problem I used 2 loops with\
    \ 2 conditions to iterate on 2 indices : i and j\n    // The condition was : j\
    \ < i \n    // After every iteration i is incremented to next value on increment\
    \ of j\n    // When i is equal to j we break the loop\n    // So for n = 5, i\
    \ = 1 (for n) , j = 1, we continue to i = 2 and j = 3 until j is greater than\
    \ i\n    // For each iteration I check if a[i] + a[j] + a[k] is a multiple of\
    \ 3, if it is then I increment a[i] by a[j] and a[k] by a[j] to make the total\
    \ triples unique.\n    // Also I increase i by 1 for each iteration to not have\
    \ duplicate values ( a[i] = a[i + 1] + a[j])\n    // At the end I return the length\
    \ of the array that contains the max number of triples ( a[i] + a[j] + a[k]).\n\
    \    long counter = 0;\n    long a[n];\n    for (int i = 0; i < n; i++) {\n  \
    \      a[i] = i * i - i + 1;\n    }\n    for (int i = 0; i < n - 1; i++) {\n \
    \       for (int j = i + 1; j < n; j++) {\n            if (a[i] > a[j]) {\n  \
    \              long temp = a[i];\n                a[i] = a[j];\n             \
    \   a[j] = temp;\n            }\n        }\n    }\n    for (int i = 0; i < n;\
    \ i++) {\n        counter += a[i];\n    }\n    return counter;", "    // code\
    \ here\n    vector<int> a(n);\n    iota(a.begin(),a.end(),0);\n    \n    int ans\
    \ = 0;\n    for(int i = 2; i<n; i++){\n        int j;\n        int sum = 0;\n\
    \        for(int k = 0; k<i; k++){\n            sum += a[k] * a[k];\n        }\n\
    \        sum = sum * i;\n        if((sum % 3 == 0) && (sum < 1000000000)) {\n\
    \            ans += 1;\n            j = i;\n        }\n    }\n    \n    return\
    \ ans;\n    \n    ", "    long maxVal = INT_MIN;\n    vector<long> a(n);\n   \
    \ for (long i = 1; i <= n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    for\
    \ (int i = 0; i < a.size(); i++) {\n        for (int j = i + 1; j < a.size();\
    \ j++) {\n            for (int k = j + 1; k < a.size(); k++) {\n             \
    \   if (a[i] + a[j] + a[k] % 3 == 0) {\n                    maxVal = a[i] + a[j]\
    \ + a[k];\n                    break;\n                }\n            }\n    \
    \    }\n    }\n    return maxVal;", "    std::vector<long> a;\n    a.resize(n);\n\
    \    long max_triple = 0;\n    for(int i = 0; i<n; i++){\n        for(int j =\
    \ i+1; j<n; j++){\n            for(int k = j+1; k<n; k++){\n                if(a[i]+a[j]+a[k])%3\
    \ > max_triple){\n                    max_triple = a[i]+a[j]+a[k];\n         \
    \       }\n            }\n        }\n    }\n    return max_triple;", "    vector<long>\
    \ a(n);\n    for(long i = 1; i < a.size(); i++) a[i] = i * i - i + 1;\n    long\
    \ ans = 0;\n    for(long i = 0; i < a.size(); i++) {\n        for(long j = i +\
    \ 1; j < a.size(); j++) {\n            for(long k = j + 1; k < a.size(); k++)\
    \ {\n                ans += a[i] + a[j] + a[k];\n            }\n        }\n  \
    \  }\n    return ans;", "    // code here\n    vector<long> arr(n);\n    for (int\
    \ i = 0; i < n; i++) {\n        arr[i] = (i * i) - i + 1;\n    }\n    // code\
    \ here\n    sort(arr.begin(), arr.end());\n    int ans = 0;\n    for (long i :\
    \ arr) {\n        for (long j : arr) {\n            for (long k : arr) {\n   \
    \             if (i + j + k == n * 3 && i + j + k > 0) {\n                   \
    \ ans++;\n                }\n            }\n        }\n    }\n    return ans;",
  "    long long res = 0;\n    std::vector<long long> a(n);\n    \n    for (int i\
    \ = 1; i <= n; i++) {\n        a[i - 1] = (long long)(i * i - i + 1);\n    }\n\
    \    \n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++)\
    \ {\n            for (int k = 1; k <= n; k++) {\n                if (a[j] >= a[k])\
    \ {\n                    int t = a[j] - a[k];\n                    if (t % 3 ==\
    \ 0) {\n                        res++;\n                    }\n              \
    \  }\n            }\n        }\n    }\n    return res;", "    long ans = 0;\n\
    \    std::vector<long> a(n);\n    for (long i = 0; i < n; i++) {\n        a[i]\
    \ = i*(i+1)/2+1;\n        ans += std::count(a.begin(), a.end(), i+i+i+1); // std::count\
    \ is O(n) and std::find_if.\n    }\n    return ans;", "    std::vector<long> a(n+1);\n\
    \    for (long i = 0; i < n+1; ++i) a[i] = i*i; \n    long long max = 0;\n   \
    \ for (long i = 1; i < n+1; ++i) max += a[i]+a[i+1];\n    \n    // The next two\
    \ lines make your code faster.\n    auto it = std::max_element(a.begin(), a.end());\
    \ \n    a.erase(it);\n    \n    for (long i = 0; i < n+1; ++i) {\n        long\
    \ sum = 0;\n        for (long j = 1; j < n; ++j) {\n            sum += a[i] +\
    \ a[j];\n        }\n        if (sum > max) max = sum;\n    }\n    return max;",
  "    int a[n];\n    assert(n <= INT_MAX);\n    long ans = 0;\n    \n    for (int\
    \ i = 0; i < n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    \n    long ans\
    \ = 1;\n    \n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j\
    \ < n; j++) {\n            for (int k = j + 1; k < n; k++) {\n               \
    \ if (a[i] > a[j] && a[i] > a[k]) {\n                    if (ans > a[i]) {\n \
    \                       ans = a[i];\n                    }\n                }\n\
    \            }\n        }\n    }\n    \n    return ans;", "    long triple = 0,\
    \ tmp, i = 0, j = 0, k = 0;\n    std::vector<long> a(n);\n    for (long i = 0;\
    \ i != n; ++i) {\n        a[i] = i * i - i + 1;\n    }\n    for (; i != n; ++i)\
    \ {\n        tmp = i;\n        for (j = 1; j <= n; ++j) {\n            for (k\
    \ = j + 1; k <= n; ++k) {\n                if (i + j + k == a[j] + a[k] + a[tmp])\
    \ {\n                    if (j > tmp) {\n                        temp = i;\n \
    \                       i = j;\n                        j = k;\n             \
    \           k = tmp;\n                    }\n                    ++triple;\n \
    \               }\n            }\n        }\n    }\n    return triple;", "   \
    \ if(n%3 != 0 || n <= 0) return 0;\n    vector<long> a(n);\n    for(int i = 0;\
    \ i < n; ++i)\n        a[i] = i * i - i + 1;\n\n    // sort a[] using sort() \n\
    \    sort(a.begin(), a.end());\n\n    long ans = 0;\n    for(int i = 0; i < n\
    \ - 1; ++i) {\n        int j = i + 1;\n        while(j < n) {\n            int\
    \ k = j + 1;\n            while(k <n) {\n                if(a[i] + a[j] + a[k]\
    \ % 3 == 0)\n                    ++ans;\n                k++;\n            }\n\
    \            ++j;\n        }\n    }\n    return ans;", "    vector<long> a;\n\
    \    a.assign(n, 0);\n    long result = 0;\n    for (int i = 0; i < n; i++) {\n\
    \        long k = i * i - i + 1;\n        if (k > 0)\n            if (a[i] < k)\n\
    \                a[i] = k;\n    }\n    for (long i = 0; i < n; i++) {\n      \
    \  for (long j = i; j < n; j++) {\n            long k = j * j - j + 1;\n     \
    \       if (k > 0) {\n                if (a[j] < k) {\n                    a[j]\
    \ = k;\n                }\n            }\n        }\n        if (i == j && a[i]\
    \ == a[j]) {\n            result += 1;\n        }\n    }\n    return result %\
    \ 3;", "\t// Your code here\n\tassert(n>=1 && n<=2147483647);\n\tvector<int> arr(n);\n\
    \tfor(long i=0;i<n;i++)\n\t{\n\t\tarr[i] = i*i-1;\n\t}\n\tint ans = 0;\n\t\n\t\
    long sum = 0;\n\tlong temp = 0;\n\tfor(int i=0;i<n-1;i++)\n\t{\n\t\ttemp = arr[i];\n\
    \t\tfor(int j=i+1;j<n;j++)\n\t\t{\n\t\t\tsum += temp;\n\t\t\tif(sum % 3 == 0)\n\
    \t\t\t{\n\t\t\t\tans++;\n\t\t\t\tsum = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn ans;", "    vector<long> a(n);\n    long cnt=0;\n    for(long i=1;\
    \ i<n; i++){\n        for(long j=1; j<n; j++){\n            for(long k=1; k<n;\
    \ k++){\n                if(i!=j && i!=k){\n                    if(a[i]+a[j]+a[k]\
    \ == 3){\n                        cnt++;\n                    }\n            \
    \    }\n            }\n        }\n    }\n    return cnt;", "  assert(n > 0);\n\
    \  vector<long> a;\n  for (long i = 0; i <n; i++){\n    a.push_back(i);\n  }\n\
    \  long result = 0;\n  for (long i = 0; i < n; i++){\n    for (long j = 0; j <\
    \ n; j++){\n      for (long k = 0; k < n; k++){\n        if (a[i] + a[j] + a[k]\
    \ == 3){\n          result += 1;\n          break;\n        }\n      }\n    }\n\
    \  }\n  return result;", "    vector<long> a;\n    for(int i = 1; i < n; i++)\
    \ a.push_back(i*i-i+1);\n    sort(a.begin(), a.end());\n    long ret = 0;\n  \
    \  for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n    \
    \        for(int k = j+1; k < n; k++) {\n                ret += a[i] + a[j] +\
    \ a[k];\n            }\n        }\n    }\n    return ret;", "    vector<long long>\
    \ a;\n    long long temp;\n    for(long i=0;i<n;i++){\n        temp=i*i;\n   \
    \     temp+=i+1;\n        a.push_back(temp);\n    }\n    sort(a.begin(),a.end());\n\
    \    long long count=0;\n    for(long i=0;i<a.size();i++){\n        for(long j=i+1;j<a.size();j++){\n\
    \            for(long k=j+1;k<a.size();k++){\n                if(a[i]+a[j]+a[k]==3){\n\
    \                    count++;\n                    break;\n                }\n\
    \            }\n        }\n    }\n    return count;", "    long long int a[n];\n\
    \    assert(n > 0); \n    long long int b[n];\n    assert(n > 0);\n    long long\
    \ int c[n];\n    assert(n > 0);\n    for(int i = 0; i<n; i++) {\n        a[i]\
    \ = i*i-i+1;\n    }\n    int i, j;\n    for(int i = 0; i<n; i++) {\n        b[i]\
    \ = a[i];\n    }\n    for(i = n-1; i>0; i--) {\n        b[i]--;\n        for(j=0;\
    \ j<n; j++) {\n            c[i] = b[j];\n            b[j] += a[j];\n         \
    \   if(b[j] < 1) {\n                b[j] =  1;\n                c[i] = 1;\n  \
    \          }\n            if(c[i]%3 ==0) {\n                return i+1;\n    \
    \        }\n        }\n    }\n    return -1;", "    if(n == 0)\n        return\
    \ 0;\n    vector<long> a(n);\n    for(int i = 0; i < n; i++)\n        a[i] = i\
    \ * i - i + 1;\n    long ans = 0;\n    for(int i = 0; i < n; i++)\n        for(int\
    \ j = 0; j < n; j++)\n            for(int k = 0; k < n; k++) {\n             \
    \   if(a[i] + a[j] + a[k] % 3 == 0)\n                    ans++;\n            }\n\
    \    return ans;", "    clock_t begin = clock();\n    std::vector<long long int>\
    \ a;\n    a.resize(n);\n    for(int i=0;i<n;i++) {\n        for(int j=i;j<n;j++)\
    \ {\n            for(int k=i;k<n;k++) {\n                if(i<j && j<k && a[i]+a[j]+a[k]==3)\
    \ {\n                    a.push_back(a[i]+a[j]+a[k]);\n                }\n   \
    \         }\n        }\n    }\n    long long cnt = 0;\n    for(auto x:a) {\n \
    \       cnt += x;\n    }\n    clock_t end = clock();\n    double time_spent =\
    \ (double)(end - begin) / CLOCKS_PER_SEC;\n    return cnt;", "    // code here\n\
    \    long count=0,i,j,k;\n    vector<int> a(n);\n    \n    for(i=0;i<n;i++)\n\
    \    {\n        a[i]=i*(i+1)+1;\n    }\n    \n    sort(a.begin(),a.end());\n \
    \   \n    for(i=0;i<n;i++)\n    {\n        for(j=i+1;j<n;j++)\n        {\n   \
    \         for(k=j+1;k<n;k++)\n            {\n                if(a[i]+a[j]+a[k]==3)\n\
    \                {\n                    count++;\n                }\n        \
    \    }\n        }\n    }\n    return count;", "    vector<long> a(n+1, 1);\n \
    \   for (long i = 1; i <= n; ++i) {\n        a[i]=i*i-i+1;\n    }\n    sort(a.begin(),\
    \ a.end());\n    long cnt=0;\n    for (long i = 1; i <= n; ++i) {\n        long\
    \ j=a[i-1];\n        long k=a[i];\n        for (long m = j; m < k; ++m) {\n  \
    \          long q = 2*(a[i-1] + a[j] + a[k] - m);\n            if (q % 3 == 0)\
    \ {\n                ++cnt;\n            }\n        }\n    }\n    return cnt;",
  "    vector<long int> a(n);\n    for(long int i = 0; i < (int)a.size(); ++i)\n \
    \       a[i] = i * i - i + 1;\n    for(long int i = 0; i < (int)a.size(); ++i)\n\
    \        for(long int j = 0; j < (int)a.size(); ++j)\n            for(long int\
    \ k = 0; k < (int)a.size(); ++k)\n                if(i == j && i == k)\n     \
    \               continue ;\n                assert(i != j);\n                assert(i\
    \ != k);\n                assert(j != k);\n                assert(a[i] < a[j]);\n\
    \                assert(a[i] < a[k]);\n                assert(a[j] < a[k]);\n\
    \                return ((long long)a[i] * (long long)a[j] * (long long)a[k])\
    \ % 3;", "    long long int arr[n];\n    long long int result = 0;\n    long long\
    \ int min = arr[0], max = arr[0], i, j, k;\n\n    for(int i=1; i < n; i++) {\n\
    \        arr[i] = arr[i-1] + arr[i];\n        if(arr[i] > max) {\n           \
    \ max = arr[i];\n        }\n    }\n\n    for(i = 0; i < n; i++) {\n        for\
    \ (j = i; j < n; j++) {\n            for (k = j; k < n; k++) {\n             \
    \   if (arr[i] + arr[j] + arr[k] == max) {\n                    result++;\n  \
    \              }\n            }\n        }\n    }\n    return result;", "    if\
    \ (n<3) \n        return 0;\n    vector<int> a(n);\n    iota(a.begin(), a.end(),\
    \ 1);\n    int result = 0;\n    for (int i=0; i<n; i++) {\n        for (int j=i;\
    \ j<n; j++) {\n            for (int k=j; k<n; k++) {\n                if (a[i]\
    \ + a[j] + a[k]) % 3 == 0) \n                    result++;\n            }\n  \
    \      }\n    }\n    return result;", "    vector<long> a(n);\n    long cnt =\
    \ 0;\n    for(long i = 1; i < n; i++) {\n        a[i] += i;\n    }\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n          \
    \  for(long k = j + 1; k < n; k++) {\n                if((a[i] + a[j] + a[k])\
    \ % 3 == 0) {\n                    cnt++;\n                }\n            }\n\
    \        }\n    }\n    return cnt;", "    int a[n];\n    for (long i = 0; i <\
    \ n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    long ans = 0;\n    for\
    \ (long i = 1; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n   \
    \         for (long k = j + 1; k < n; k++) {\n                if (a[k] % 3 ==\
    \ 0) {\n                    ans += 1;\n                }\n            }\n    \
    \    }\n    }\n    return ans;", "    std::vector<int> a(n);\n    for (int i =\
    \ 0; i < n; ++i) {\n        a[i] = i * i - i + 1;\n    }\n\n    int triples =\
    \ 0;\n    for (int i = 0; i < n - 1; ++i) {\n        for (int j = i + 1; j < n;\
    \ ++j) {\n            for (int k = j + 1; k < n; ++k) {\n                if (a[i]\
    \ + a[j] + a[k] % 3 == 0) {\n                    ++triples;\n                \
    \    break;\n                }\n            }\n        }\n    }\n    return triples;",
  "    // write your code here\n    vector<int> a(n);\n    for (int i = 1; i <= n;\
    \ i++) {\n        a[i] = i * i - i + 1;\n    }\n    int ans = 0;\n    for (int\
    \ i = 1; i < n; i++) {\n        for (int j = 0; j < i; j++) {\n            if\
    \ (a[j] % 3 == 0 && a[j] + a[i] >= 3) ans++;\n        }\n    }\n    return ans;",
  "    vector<long> a;\n    for (long i = 1; i <= n; i++) {\n        a.push_back(i\
    \ * i - i + 1);\n    }\n    sort(a.begin(), a.end());\n    // We only want to\
    \ consider triples that lead to a multiple of 3\n    vector<vector<long>> triples(n);\n\
    \    for (long i = 0; i < n; i++) {\n        for (long j = i; j < n; j++) {\n\
    \            if (a[i] < a[j]) {\n                vector<long> triple = { i, j,\
    \ a[i] };\n                triples.at(j).push_back(triple);\n            }\n \
    \       }\n    }\n    long result = 0;\n    for (long i = 0; i < n; i++) {\n \
    \       if (triples[i].size() >= 3) {\n            result += triples[i][0].size();\n\
    \        }\n    }\n    return result;", "    vector<long> a(n);\n    iota(a.begin(),\
    \ a.end(), 0);\n    sort(a.begin(), a.end());\n    int count = 0;\n    for (long\
    \ i = 1; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n          \
    \  for (int k = j + 1; k < n; k++) {\n                assert(a[i] < a[j] && a[i]\
    \ < a[k]);\n                assert(a[j] < a[k] && a[j] < a[i]);\n            \
    \    long temp = a[i] + a[j] + a[k];\n                if (temp % 3 == 0) {\n \
    \                   count++;\n                }\n            }\n        }\n  \
    \  }\n    return count;", "    vector<long long int> a(n+1, 0);\n    vector<long\
    \ long int> b(n+1, 0);\n    for (long long int i = 1; i <= n; i++) {\n       \
    \ a[i] = i * i - i + 1;\n    }\n    for (long long int i = 1; i <= n; i++) {\n\
    \        for (long long int j = 1; j <= n; j++) {\n            if (i != j) {\n\
    \                long long int k = i - j;\n                if (a[i] > a[j] &&\
    \ a[j] > a[k]) b[i] = b[i] + 1;\n            }\n        }\n    }\n    return b[n];",
  "    // write your code here\n    assert(n > 0);\n    vector<long> a(n);\n    for\
    \ (long i = 0; i < n; i++){\n        a[i] = i * i - i + 1;\n    }\n    int ans\
    \ = 0;\n    for (long i = 0; i < n; i++){\n        for (long j = i+1; j < n; j++){\n\
    \            for (long k = j+1; k < n; k++){\n                if (a[i] + a[j]\
    \ + a[k] % 3 == 0){\n                    ans++;\n                }\n         \
    \   }\n        }\n    }\n    return ans;", "\t// Your code here\n\tassert(n>=3);\n\
    \tlong int cnt=0;\n\tstd::vector<long> a(n+1);\n\t\n\tfor(int i=1;i<n;i++)\n\t\
    {\n\t\ta[i] = i*(i-1)+i+1;\n\t}\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tfor(int j=1;j<i;j++)\n\
    \t\t{\n\t\t\tfor(int k=1;k<j;k++)\n\t\t\t{\n\t\t\t\tif(a[i]+a[j]+a[k]==3)\n\t\t\
    \t\t{\n\t\t\t\t\tcnt++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\
    return cnt;", "    long long a[n];\n    memset(a, 3, sizeof a);\n    long long\
    \ res = 0;\n    for(int i = 0; i < (n-1); i++) {\n        if(a[i] + a[i+1] + a[i+2]\
    \ == 3*(a[i] + a[i+1] + a[i+2]))\n            res++;\n    }\n    return res;",
  "  // your code goes here\n  vector<long long> a;\n  long count = 0;\n  for (int\
    \ i = 1; i < n; i++){\n    a.push_back(i*i-i+1);\n  }\n  for (int i = 0; i < n;\
    \ i++){\n    for (int j = 0; j < i; j++){\n      for (int k = 0; k < j; k++){\n\
    \        long long int sum = a[i] + a[j] + a[k];\n        if (sum%3 == 0)\n  \
    \        count++;\n      }\n    }\n  }\n  return count;", "    int a[n];\n   \
    \ for (int i = 0; i < n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    return\
    \ max_element(a, a + n) - a;", "    vector<long> a(n);\n    long ans = 0;\n  \
    \  for(long i = 1; i <= n; ++i) {\n        ans = max(ans, i * i - i + 1);\n  \
    \      for(long j = i; j <= n; ++j) {\n            if(j > i) {\n             \
    \   ans = max(ans, a[j] + a[i]);\n                if(a[j] + a[i] == 3) ++ans;\n\
    \            }\n            if(a[j] + a[i] > 3) break;\n        }\n    }\n   \
    \ return ans;", "    vector<long> arr(n);\n    iota(arr.begin(), arr.end(), 1);\n\
    \    // for(long i = 0; i < n; i++) {\n        // assert(arr[i] == i * i - i +\
    \ 1);\n    // }\n    for(long i = 1; i < n; i++) {\n        for(long j = 0; j\
    \ < i; j++) {\n            if(arr[i] + arr[j] == 3 * i - 1) {\n              \
    \  return i + 1;\n            }\n        }\n    }\n    return 0;", "    vector<long>\
    \ a(n+1);\n    for (long i = 0; i <= n; i++) {\n        a[i] = i * i - i + 1;\n\
    \    }\n    long cnt = 0;\n    for (long i = 1; i <= n; i++) {\n        for (long\
    \ j = 1; j <= n; j++) {\n            if (i != j && j != i) {\n               \
    \ for (long k = 1; k <= n; k++) {\n                    if (i != k && k != i &&\
    \ j != k) {\n                        if (a[j] + a[k] == 2*a[i] && a[j] + a[k]\
    \ == 2*a[i] - a[i]) {\n                            cnt++;\n                  \
    \          break;\n                        }\n                    }\n        \
    \        }\n            }\n        }\n    }\n    return cnt;", "    vector<long\
    \ long int> v(n);\n    for(int i = 0; i < n; i++) v[i] = i * i - i + 1;\n    sort(v.begin(),\
    \ v.end());\n    long long int ans = 0;\n    for(long long int i = 0; i < n; i++)\
    \ {\n        for(long long int j = i+1; j < n; j++) {\n            for(long long\
    \ int k = j+1; k < n; k++) {\n                assert(v[i] < v[j] && v[j] < v[k]);\n\
    \                long long int sum = a[i] + a[j] + a[k];\n                ans\
    \ = max(ans, sum % 3 == 0);\n            }\n        }\n    }\n    return ans;",
  "    long ans = 0;\n    vector<long> a(n);\n    for(int i = 0; i<n; i++) {\n   \
    \     a[i] = i * i - i + 1;\n    }\n    sort(a.begin(), a.end());\n    for(int\
    \ i = 1; i<n; i++) {\n        if(a[i-1]+a[i] == a[i]) {\n            ans++;\n\
    \        }\n    }\n    return ans;", "    vector<long> a(n);\n    long triple\
    \ = 1;\n    for(int i=1; i<n; i++){\n        a[i] = i*i - i+1;\n        triple\
    \ *= i;\n    }\n    long long count = 0;\n    for(int i=0; i<n; i++){\n      \
    \  for(int j=0; j<n; j++){\n            for(int k=0; k<n; k++){\n            \
    \    if(i<j && j<k && a[i]+a[j]+a[k]%3 > 0){\n                    count++;\n \
    \               }\n            }\n        }\n    }\n    return count;", "    long\
    \ i, j, k, ans = 0;\n    vector<long long> a;\n    a.assign(n, 1);\n    for(i\
    \ = 1; i < n; i++) {\n        for(j = 0; j < i; j++) {\n            for(k = j\
    \ + 1; k < n; k++) {\n                if(abs(a[i] - a[j]) > abs(a[i] - a[k]) ||\
    \ abs(a[i] - a[k]) > abs(a[j] - a[k])) {\n                    break;\n       \
    \         }\n            }\n            if(k == n) {\n                if(a[i]\
    \ + a[j] + a[k] == 3) {\n                    ans++;\n                }\n     \
    \       }\n        }\n    }\n    return ans;", "    long long int res=0;\n   \
    \ vector<long long int> arr(n);\n    for(long long int i=1; i<=n; i++)\n     \
    \   arr[i]=i*i-1;\n    for(int i=1; i<n; i++) {\n        for(int j=i; j<n; j++)\
    \ {\n            for(int k=j; k<n; k++) {\n                long long int sum=0;\n\
    \                if(arr[i]+arr[j]+arr[k]==3)\n                    sum++;\n   \
    \             if(i<j && i<k && j<k)\n                    if(arr[i]+arr[j]+arr[k]==3)\n\
    \                        sum++;\n                if(i<j && j<k && k<j)\n     \
    \               if(arr[i]+arr[j]+arr[k]==3)\n                        sum++;\n\
    \                if(j<k && i<k && k<j)\n                    if(arr[i]+arr[j]+arr[k]==3)\n\
    \                        sum++;\n                if(j<k && j<k && k<j)\n     \
    \               if(arr[i]+arr[j]+arr[k]==3)\n                        sum++;\n\
    \                if(k<j && i<k && j<k)\n                    if(arr[i]+arr[j]+arr[k]==3)\n\
    \                        sum++;\n                if(k<j && j<k && k<j)\n     \
    \               if(arr[i]+arr[j]+arr[k]==3)\n                        sum++;\n\
    \                res+=sum;\n            }\n        }\n    }\n    return res;",
  "    std::vector<long> a(n);\n    long sum = 0;\n    for(int i = 0; i < n; ++i)\
    \ {\n        sum += a[i] * a[i] + a[i] + a[i];\n        a[i] = a[i] / 3;\n   \
    \ }\n    // Now sum will have the value a[n-1].\n    long ans = 0;\n    for(int\
    \ i = 0; i < n; ++i) {\n        if(sum - a[i] == 0) {\n            ans = i;\n\
    \            break;\n        }\n    }\n    return ans;", "    std::vector<int>\
    \ a;\n    long total = 0;\n    for (long i = 1; i < n; i++) {\n        if (i <=\
    \ a.size() && i == a[i]) {\n            total++;\n        } else {\n         \
    \   a.push_back(i);\n        }\n    }\n    return total;", "    vector<long> a(n);\n\
    \    for (long i = 0; i < n; i++){\n        a[i] = i * i - i + 1;\n    }\n   \
    \ long max = 0;\n    for (long i = 0; i < n; i++){\n        for (long j = i +\
    \ 1; j < n; j++){\n            assert(j > i);\n            assert(j >= i + 1);\n\
    \            assert(j > i + 1);\n            assert(j < n);\n            long\
    \ k = j - 1;\n            for (long l = i; l < j; l++){\n                assert(l\
    \ > i);\n                assert(l >= i + 1);\n                assert(l > i + 1);\n\
    \                assert(l < n);\n                long m = l - 1;\n           \
    \     long s = a[i] + a[j] + a[k];\n                if (s > max){\n          \
    \          max = s;\n                    maxtriple = { i, j, k };\n          \
    \      }\n            }\n        }\n    }\n    return max;", "    vector<long>\
    \ a(n);\n    long ans = 0;\n    for (int i = 0; i < n; i++) {\n        a[i] =\
    \ i * i - i + 1;\n        ans = max(ans, a[i], a[i], a[i]);\n    }\n    return\
    \ ans;", "    vector<long> a(n);\n    long ans = 0;\n    for(long i = 1; i < n;\
    \ i++) {\n        for(long j = 0; j < i; j++) {\n            for(long k = 0; k\
    \ < j; k++) {\n                if(a[j] + a[k] + a[i] % 3 == 0) {\n           \
    \         ans++;\n                    break;\n                }\n            }\n\
    \        }\n    }\n    return ans;", "    // code here\n    vector<long long>\
    \ a;\n    long sum = 0;\n    for(long i=1; i<=n; i++){\n        sum+=i;\n    \
    \    a.push_back(i*i-i+1);\n    }\n    sort(a.begin(), a.end());\n    long long\
    \ count=0;\n    for(long i=a.size()-1; i>=0; i--){\n        for(long j=a.size()-1;\
    \ j>=0; j--){\n            for(long k=a.size()-1; k>=0; k--){\n              \
    \  if(a[i]>a[j]&&a[i]>a[k]&&a[j]>a[k]){\n                    if(a[i]+a[j]+a[k]==3){\n\
    \                        count++;\n                        break;\n          \
    \          }\n                }\n            }\n        }\n    }\n    cout<<count<<endl;\n\
    \    \n    return count;", "    vector<long> a;\n    long max = 0;\n    a.push_back(0);\n\
    \    long triple = 0;\n    for(long i=1; i<=n; i++){\n        a.push_back(i*i\
    \ - i + 1);\n        if(a[i]>max){\n            max = a[i];\n            triple\
    \ = i;\n        }\n    }\n    return triple;", "  int arr[n];\n  int arr1[(n+1)/2];\n\
    \  int count = 0; // count is number of triples \n  for (int i=0; i<n; i++) {\n\
    \    arr[i] = i;\n    arr1[i] = i*i-i+1;\n  }\n  for (int i=0; i<n; i++) {\n \
    \   for (int j=i+1; j<n; j++) {\n      for (int k=j+1; k<n; k++) {\n        if\
    \ (arr[i] == arr1[j]\n            && arr1[j] == arr1[k]) {\n          count++;\n\
    \        }\n      }\n    }\n  }\n  return count;", "    // code here\n    vector<int>\
    \ a;\n    long ans = 0;\n    for(int i = 1; i < n; ++i) {\n        for(int j =\
    \ i; j < n; ++j) {\n            for(int k = j; k < n; ++k) {\n               \
    \ if(i + j + k == n) {\n                    a.push_back(i * i - i + 1);\n    \
    \                ans += a.size();\n                }\n            }\n        }\n\
    \    }\n    return ans;", "    assert(n >= 1);\n    // create an empty vector\
    \ a of length n.\n    long long a[n];\n    long long cnt = 0;\n    for (int i\
    \ = 1; i <= n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    long long curr\
    \ = 0, j = 0;\n    // for each triplet (a[i], a[j], a[k])\n    while (cnt < n)\
    \ {\n        for (int i = 0; i < n; i++) {\n            if (i == j) {\n      \
    \          continue;\n            }\n            // if a[i] + a[j] + a[k] >= 3\
    \ && a[i] < a[j] && a[j] < a[k]\n            while (curr + 1 < n) {\n        \
    \        if (a[j] + a[curr] + a[curr + 1] >= 3) {\n                    break;\n\
    \                }\n                curr++;\n            }\n            if (i\
    \ == j) {\n                continue;\n            }\n            if (a[j] + a[curr]\
    \ + a[curr + 1] == 3) cnt++;\n            if (curr + 1 == n) {\n             \
    \   curr = 0;\n                j++;\n            }\n        }\n    }\n    return\
    \ cnt;", "    // code here\n    std::vector<long> a(n);\n    for (long i = 0;\
    \ i != a.size(); ++i) {\n        a[i] = i * i - i + 1;\n    }\n    long count\
    \ = 0;\n    for (long i = 0; i != a.size() - 1; ++i) {\n        for (long j =\
    \ 0; j != a.size() - 1; ++j) {\n            for (long k = 0; k != a.size() - 1;\
    \ ++k) {\n                if (a[i] > a[j] && a[i] > a[k] && a[j] > a[k] && \n\
    \                    a[i] + a[j] + a[k] >= 3 * a[i] && a[i] + a[j] + a[k] < 3\
    \ * a[i] - a[j] + a[k]) {\n                    ++count;\n                }\n \
    \           }\n        }\n    }\n    return count;", "  vector<long int> a;\n\
    \  long int i;\n  assert(n >= 1);\n  for (i = 0; i < n; ++i) \n    a[i] = i *\
    \ i - i + 1;\n  vector<long int> a_prime;\n  for (long int k = 0; k < n; ++k)\
    \ {\n    int j;\n    for (i = 0; i + k < n; ++i) {\n      if (a[i + k] == 0)\n\
    \        continue;\n      for (j = 0; j < k; ++j) {\n        if (a[i + k] > a[j\
    \ + k]) \n          a_prime.push_back(i + k);\n      }\n    }\n  }\n  assert(a_prime.size()\
    \ == n);\n  long int ans = 0;\n  for (long int i : a_prime) {\n    for (long int\
    \ j = 0; j < n; ++j)\n      if (i == j && i != k)\n        continue;\n      for\
    \ (long int k = 0; k < n; ++k)\n        if (i == k)\n          continue;\n   \
    \     ans++;\n      }\n    }\n  return ans;", "    vector<long long int> a(n);\n\
    \    \n    long long int max_triple;\n    \n    for (int i = 0; i < n; i++)\n\
    \        a[i] = i * i - i + 1;\n    \n    max_triple = *max_element(a.begin(),\
    \ a.end());\n    \n    for (int i = 0; i < n; i++)\n        for (int j = 0; j\
    \ < n; j++)\n            for (int k = 0; k < n; k++)\n                if (a[i]\
    \ + a[j] + a[k] == max_triple)\n                    return 1;\n    \n    return\
    \ 0;", "    vector<long> a(n);\n    for (long i = 1; i <= n; i++) {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    int num_triple = 0;\n    for (int i = 0; i < n;\
    \ i++) {\n        for (int j = i + 1; j < n; j++) {\n            for (int k =\
    \ j + 1; k < n; k++) {\n                if (a[i + j] + a[j + k] + a[k] == 3 &&\
    \ i < j && j < k) {\n                    num_triple++;\n                }\n  \
    \          }\n        }\n    }\n    return num_triple;", "    assert(n >= 1);\n\
    \    vector<long> a(n);\n    long triples = 0;\n    for (long i = 0; i < n; ++i)\
    \ {\n        a[i] = i * i - i + 1;\n        for (long j = i + 1; j < n; ++j) {\n\
    \            for (long k = j + 1; k < n; ++k) {\n                if (a[i] < a[j]\
    \ && a[j] < a[k]) triples++;\n            }\n        }\n    }\n    return triples;",
  "    vector<int> a(n);\n    for (long i = 0; i < n; i++) {\n        a[i] = i * i\
    \ - i + 1;\n    }\n    sort(a.begin(), a.end());\n    long long maxTriplesCount\
    \ = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n;\
    \ j++) {\n            for (long k = j + 1; k < n; k++) {\n                long\
    \ long triplesCount = a[i] + a[j] + a[k];\n                if (triplesCount %\
    \ 3 == 0) {\n                    maxTriplesCount = max(maxTriplesCount, triplesCount);\n\
    \                }\n            }\n        }\n    }\n    return maxTriplesCount;",
  "    vector<long> a(n);\n    iota(a.begin(), a.end(), 1);\n    // Your code here\n\
    \    \n    sort(a.begin(), a.end());\n    \n    long ans = 0;\n    \n    for(int\
    \ i = 0; i < a.size() - 1; i++) {\n        for(int j = i+1; j < a.size(); j++)\
    \ {\n            for(int k = j+1; k < a.size(); k++) {\n                if(a[i]\
    \ + a[j] + a[k] == (3*(i+j+k)))\n                    ans++;\n            }\n \
    \       }\n    }\n    \n    return ans;", "    vector<long> a(n);\n    long s\
    \ = 1;\n    for(long i = 0; i < n; ++i) {\n        for(long j = i+1; j < n; ++j)\
    \ {\n            for(long k = j+1; k < n; ++k) {\n                assert(i < j\
    \ && j < k);\n                assert(i+1 < n && j+1 < n && k+1 < n);\n       \
    \         a[i] = a[i] + a[j] + a[k];\n                s = s * 3;\n           \
    \ }\n        }\n    }\n    return s;", "    // code here\n    // your code goes\
    \ here\n    long sum=0,max_sum=0,count=0,i,j,k,c=0;\n    long a[n+1];\n    \n\
    \    for(i=0;i<=n;i++)\n    {\n        a[i]=i*i-i+1;\n    }\n    \n    for(int\
    \ i=0;i<n+1;i++)\n    {\n        sum=sum+a[i];\n    }\n    \n    max_sum=sum;\n\
    \    \n    for(int i=1;i<=n;i++)\n    {\n        if(max_sum-a[i]>0)\n        {\n\
    \            max_sum=a[i];\n            count=1;\n        }\n    }\n    \n   \
    \ for(int i=0;i<=n;i++)\n    {\n        for(j=i+1;j<=n;j++)\n        {\n     \
    \       for(k=j+1;k<=n;k++)\n            {\n                if(a[i]+a[j]+a[k]==3)\n\
    \                {\n                    c=c+1;\n                }\n          \
    \  }\n        }\n    }\n    \n    if(c>0)\n    {\n        printf(\"%lld\\n\",c);\n\
    \    }\n    else\n    {\n        printf(\"%lld\\n\",count);\n    }\n    return\
    \ 0;", "    vector<long long int> a;\n    for(int i = 1; i <= n; i++) a.push_back(i\
    \ * i - i + 1);\n    \n    sort(a.begin(), a.end());\n    int cnt = 0;\n    for(int\
    \ i = 0; i < a.size() - 1; i++) {\n        for(int j = i + 1; j < a.size(); j++)\
    \ {\n            for(int k = j + 1; k < a.size(); k++) {\n                if(a[i]\
    \ + a[j] + a[k] == 3 && a[i] < a[j] && a[j] < a[k]) cnt++;\n            }\n  \
    \      }\n    }\n    return cnt;", "    int a[n];\n    for(int i = 1; i <= n;\
    \ i++) {\n        a[i] = i * i - i + 1;\n    }\n    long ans = 0;\n    for(int\
    \ i = 1; i <= n; i++) {\n        for(int j = i; j <= n; j++) {\n            for(int\
    \ k = j; k <= n; k++) {\n                if(a[i] + a[j] + a[k] == 3*i - 3*j -\
    \ 3*k) {\n                    ans = max(ans, i*i*i*k);\n                    ans\
    \ = max(ans, i*j*k);\n                    ans = max(ans, j*k);\n             \
    \       ans = max(ans, i);\n                    ans = max(ans, j);\n         \
    \           ans = max(ans, k);\n                }\n            }\n        }\n\
    \    }\n    return ans;", "    if (n == 0)\n        return 0;\n    vector<long>\
    \ a(n);\n    long sum = 0;\n    long max = 0;\n    long temp;\n    for (int i\
    \ = 0; i < n; i++) {\n        temp = a[i] * a[i] + a[i] + 1;\n        if (temp\
    \ > max)\n            max = temp;\n    }\n    for (int i = 0; i < n; i++) {\n\
    \        temp = max - (a[i] * a[i] + a[i] + 1);\n        if (temp > 0) {\n   \
    \         sum += temp;\n        }\n    }\n    return sum;", "    // Write your\
    \ code here\n    // return 0;\n    vector<long> v(n);\n    for(int i=0; i<n; i++)\
    \ {\n        v[i] = i * i - i + 1;\n    }\n    sort(v.begin(), v.end());\n   \
    \ long ans = 0;\n    for(long i : v) {\n        for(long j : v) {\n          \
    \  for(long k : v) {\n                if(i + j + k == 3)\n                   \
    \ ans++;\n            }\n        }\n    }\n    return ans;", "    vector<long>\
    \ a(n+1);\n    for (long i = 1; i < a.size(); i++) {\n        a[i] = i * i - i\
    \ + 1;\n    }\n    int nTup = 0;\n    for (int i = 1; i < a.size(); i++) {\n \
    \       for (int j = i + 1; j < a.size(); j++) {\n            for (int k = j +\
    \ 1; k < a.size(); k++) {\n                if (a[j] + a[k] + a[i] == 3) {\n  \
    \                  nTup += 1;\n                }\n            }\n        }\n \
    \   }\n    return nTup;", "    vector<long> a(n);\n    long temp=1;\n    for(long\
    \ i=0;i<n;i++){\n        temp=i*i-1;\n        a.at(i)=temp;\n        for(int j=0;j<n;j++){\n\
    \            if(j!=i){\n                temp+=a[j]*a[j];\n            }\n    \
    \    }\n        if(temp%3){\n            break;\n        }\n    }\n    return\
    \ n;", "  assert(n >= 1);\n  long ans = 0, i, j;\n  long a[n];\n  \n  for (i =\
    \ 0; i < n; i++) {\n    a[i] = i * i - i + 1;\n  }\n  \n  for (j = 0; j < n; j++)\
    \ {\n    for (i = 0; i < n; i++) {\n      for (k = 0; k < n; k++) {\n        if\
    \ (a[i] == a[j] + a[k]) { \n          ans++;\n          break;\n        }\n  \
    \    }\n    }\n  }\n  return ans;", "    // Your code here\n    vector<long> a(n);\n\
    \    long ans = 0;\n    for (int i = 1; i < n; i++) {\n        for (int j = 0;\
    \ j < i; j++) {\n            for (int k = j + 1; k < n; k++) {\n             \
    \   if ((a[j] + a[k] + a[i]) % 3 == 0) {\n                    ans++;\n       \
    \         }\n            }\n        }\n    }\n    return ans;", "    // code here\n\
    \    assert(n >= 1);\n    vector<long> a(n);\n    for(long i = 0; i < n; i++){\n\
    \        a[i] = i * i - i + 1;\n    }\n    int cnt = 0;\n    for(long i = 0; i\
    \ < n; i++){\n        for(long j = i; j < n; j++){\n            for(long k = j;\
    \ k < n; k++){\n                if(a[i] + a[j] + a[k] == 3*((i+j+k)/3)){\n   \
    \                 cnt++;\n                }\n            }\n        }\n    }\n\
    \    return cnt;", "    vector<int> v(n,0);\n    iota(v.begin(), v.end(), 0);\n\
    \    long ans = 0;\n    long temp = 0;\n    for(long i = 1 ; i < v.size(); i++)\
    \ {\n        for(long j = i+1 ; j < v.size(); j++) {\n            for(long k =\
    \ j+1 ; k < v.size(); k++) {\n                temp = v[i] + v[j] + v[k];\n   \
    \             if(temp == 3 * v[i]) {\n                    ans ++;\n          \
    \      }\n            }\n        }\n    }\n    return ans;", "  vector<long> a(n);\n\
    \  for(int i = 0; i< n; i++) {\n    a[i] = i * i - i + 1;\n  }\n  sort(a.begin(),a.end());\n\
    \  long ans = 0;\n  for(int i = 0; i< n; i++) {\n    long c = a[i] + a[i + 2]\
    \ + a[i];\n    if((c) % 3 == 0) {\n      ans++;\n    }\n  }\n  return ans;", " \
    \   vector<long> a;\n    for(long i=0;i<n;i++)\n        a.push_back(i*i-1+1);\n\
    \    long result = 0;\n    for(long i=1;i<n;i++)\n        for(long j=1;j<n;j++)\n\
    \            for(long k=1;k<n;k++)\n            {\n                if(i<j&&i<k&&j<k)\n\
    \                {\n                    long tmp = a[i]+a[j]+a[k];\n         \
    \           if(tmp%3==0)\n                        result++;\n                }\n\
    \            }\n    return result;", "    // code here\n    \n    long long int\
    \ triples = 0;\n    vector<long long int> a(n);\n    for(long long int i = 0;\
    \ i < (n-1); i++){\n        for(long long int j = i+1; j < (n-1); j++){\n    \
    \        for(long long int k = j+1; k < (n-1); k++){\n                if(i + j\
    \ + k == n){\n                    triples++;\n                    a[i] = a[j]\
    \ + a[k];\n                }\n            }\n        }\n    }\n    return triples;",
  "    vector<long long int> arr(n+1);\n    arr[0] = 1;\n    arr[1] = 2;\n    arr[2]\
    \ = 3;\n    for(int i = 3; i <= n; i++) {\n        arr[i] = arr[i-1] + arr[i-2];\n\
    \    }\n    \n    // find triple\n    int ret = 0, k = n;\n    for(int i = 0;\
    \ i < n; i++){\n        ret = max(ret, arr[i]);\n        if(arr[i]%3 == 0){\n\
    \            k--;\n        }\n    }\n    \n    return ret;", "    vector<int>\
    \ arr(n);\n    for(int i=0;i<n;i++)\n        arr[i] = i*(i+1)-1;\n    long count\
    \ = 0;\n    for(int i=1;i<n;i++) {\n        for(int j=i+1;j<n;j++) {\n       \
    \     for(int k=j+1;k<n;k++) {\n                if(arr[i]+arr[j]+arr[k]==3*i*(j+1)+2*i*(k+1)+(i+1)*(k+1))\
    \ {\n                    count++;\n                    printf(\"%ld %ld %ld\\\
    n\", arr[i], arr[j], arr[k]);\n                }\n            }\n        }\n \
    \   }\n    return count;", "    long triples = 0, a[n], i, j;\n    assert(n >\
    \ 0);\n    for (i = 0; i < n; i++) {\n        a[i] = i * i - i + 1;\n    }\n \
    \   for (i = 0; i < n - 1; i++) {\n        for (j = i + 1; j < n; j++) {\n   \
    \         if (a[j] + a[i] > 3) {\n                triples += 1;\n            }\n\
    \        }\n    }\n    return triples;", "    vector<int> a(n);\n    for (int\
    \ i = 0; i < n; ++i) {\n        a[i] = i * i - i + 1;\n    }\n    sort(a.begin(),\
    \ a.end());\n    int ans = 0;\n    for (int i = 0; i < n; ++i) {\n        for\
    \ (int j = i + 1; j < n; ++j) {\n            for (int k = j + 1; k < n; ++k) {\n\
    \                int sum = a[i] + a[j] + a[k];\n                if (sum % 3 ==\
    \ 0) {\n                    ++ans;\n                    break;\n             \
    \   }\n            }\n        }\n    }\n    return ans;", "    vector<long> a(n);\n\
    \    for (long i = 0; i < n; i++)\n        a[i] = i * i - i + 1;\n\n    // Find\
    \ the first triple.\n    // a[0] = 3*a[0] + 2*a[1] + a[2]\n    // a[1] = 3*a[1]\
    \ + a[2]\n    // a[2] = 3*a[2] + a[1]\n    // a[0] = 3*a[0] + 2*a[1] + a[2]\n\
    \    // a[1] = 3*a[1] + a[2]\n    // a[2] = 3*a[2] + a[1]\n    // a[0] = 3*a[0]\
    \ + 2*a[1] + a[2]\n    // a[1] = 3*a[1] + a[2]\n    // a[2] = 3*a[2] + a[1]\n\
    \    // a[0] = 3*a[0] + 2*a[1] + a[2]\n    // a[1] = 3*a[1] + a[2]\n    // a[2]\
    \ = 3*a[2] + a[1]\n    // a[0] = 3*a[0] + 2*a[1] + a[2]\n    // a[1] = 3*a[1]\
    \ + a[2]\n    // a[2] = 3*a[2] + a[1]\n    // a[0] = 3*a[0] + 2*a[1] + a[2]\n\
    \    // a[1] = 3*a[1] + a[2]\n    // a[2] = 3*a[2] + a[1]\n    // a[0] = 3*a[0]\
    \ + 2*a[1] + a[2]\n    // a[1] = 3*a[1] + a[2]\n    // a[2] = 3*a[2] + a[1]\n\
    \    // a[0] = 3*a[0] + 2*a[1] + a[2]\n    // a[1] = 3*a[1] + a[2]\n    // a[2]\
    \ = 3*a[2] + a[1]\n    // a[0] = 3*a[0] + 2*a[1] + a[2]\n    // a[1] = 3*a[1]\
    \ + a[2]\n    // a[2] = 3*a[2] + a[1]\n    // a[0] = 3*a[0] + 2*a[1] + a[2]\n\
    \    // a[1] = 3*a[1] + a[2]\n    // a[2] = 3*a[2] + a[1]\n    // a[0] = 3*a[0]\
    \ + 2*a[1] + a[2]\n    // a[1] = 3*a[1] + a[2]\n    // a[2] = 3*a[2] + a[1]\n\
    \    // a[0] = 3*a[0] + 2*a[1] + a[2]\n    // a[1] = 3*a[1] + a[2]\n    // a[2]\
    \ = 3*a[2] + a[1]\n    // a[0] = 3*a[0] + 2*a[1] + a[2]\n    // a[1] = 3*a[1]\
    \ + a[2]\n    // a[2] = 3*a[2] + a[1]\n    // a[0] = 3*a[0] + 2*a[1] + a[2]\n\
    \    // a[1] = 3*a[1] + a[2]\n    // a[2] = 3*a[2] + a[1]\n    // a[0] = 3*a[0]\
    \ + 2*a[1] + a[2]\n    // a[1] = 3*a[1] + a[2]\n    // a[2] = 3*a[2] + a[1]\n\
    \    // a[0] = 3*", "    vector<long> a(n);\n    for(long i=0; i<n; i++) {\n \
    \       a[i]=i*i*i+i+1;\n    }\n    long ans=0;\n    for(long i=0; i<n; i++) {\n\
    \        for (long j=0; j<n; j++) {\n            for (long k=0; k<n; k++) {\n\
    \                if(i<j && j<k && a[i]+a[j]+a[k]%3 == 0) {\n                 \
    \   ans++;\n                }\n            }\n        }\n    }\n    return ans;",
  "  // Write your code here\n  \n  long ans=0;\n  long a[n];\n  assert(n>0);\n  assert(n\
    \ <= INT_MAX);\n  for(int i=0;i<n;++i)\n    a[i] = i*i-1+i+1;\n  for(int i=0;i<n;++i){\n\
    \    for(int j=i;j<n;++j){\n      for(int k=j;k<n;++k)\n        if(a[i] + a[j]\
    \ + a[k]==3*i+3*j+3*k){\n          ans++;\n        }\n    }\n  }\n  return ans;",
  "    long long ans = 0;\n    vector<long long> a(n);\n    // Initialize a with 1\
    \ ...\n    for(long i = 1; i<=n; ++i) a[i] = i*i - i + 1;\n    // Compute the\
    \ number of triples of length 3\n    for(long i = 1; i<=n; ++i) {\n        long\
    \ j = i-1;\n        long k = i;\n        long ans = 0;\n        // See if the\
    \ current triplet can be formed by appending a[i] to a[j], a[k] \n        while(j\
    \ > 0 && k > 0) {\n            long a = a[j];\n            long b = a[k];\n  \
    \          ans += a + (b - a) + (a - b);\n            --j;\n            --k;\n\
    \        }\n        if(ans == 3*(i*i-i+1) && ans > ans) ans = ans;\n    }\n  \
    \  return ans;", "    vector<int> a(n);\n    for (long i = 0; i < n; i++) {\n\
    \        a[i] = i * i - i + 1;\n    }\n\n    // The value of a[] is sorted from\
    \ the smallest to greatest.\n    // So the middle value is always a[n/2]\n   \
    \ long sum = a[n/2];\n\n    // If a[n/2] can be divided by 3, then\n    // sum\
    \ = a[n/2] + a[n/2] - 1\n    for (long i = n/2; i < n; i++) {\n        sum = sum\
    \ + a[i]-1;\n    }\n\n    long ans = 0;\n    for (long i = 0; i < n; i++) {\n\
    \        long j = n-1;\n        long k = n-1;\n        while (j > 0 && k > 0)\
    \ {\n            if (a[i] > a[j]) {\n                sum -= a[j];\n          \
    \      j--;\n            } else {\n                sum += a[k];\n            \
    \    k--;\n            }\n        }\n        if (sum % 3 == 0) {\n           \
    \ ans += 1;\n        }\n    }\n\n    return ans;", "\tvector<long> a;\n\ta.push_back(0);\n\
    \tfor (int i = 1; i <= n; i++) {\n\t\tfor (long j = i; j < n; j++) {\n\t\t\tfor\
    \ (long k = j; k < n; k++) {\n\t\t\t\tif (a[j] + a[k] == i*i - i + 1)\n\t\t\t\t\
    \ta.push_back(i*i - i + 1);\n\t\t\t}\n\t\t}\n\t}\n\tlong ans = 0;\n\tfor (int\
    \ i = 0; i < a.size(); i++)\n\t\tif (a[i] % 3 == 0)\n\t\t\tans++;\n\treturn ans;",
  "    std::vector<int> a(n);\n    \n    for(int i=0; i<n; i++){\n        a[i] = i\
    \ * i - i + 1;\n    }\n    \n    long triples = 0;\n    long max_triple = INT_MIN;\n\
    \    \n    for(long i=0; i<n; i++){\n        for(long j=0; j<n; j++){\n      \
    \      for(long k=0; k<n; k++){\n                if(j>k){\n                  \
    \  if(a[i] + a[j] + a[k]==3){\n                        ++triples;\n          \
    \              if(a[i]>max_triple){\n                            max_triple =\
    \ a[i];\n                        }\n                    }\n                }\n\
    \            }\n        }\n    }\n    \n    return triples;", "\tassert(n>0);\n\
    \    vector<int> a(n);\n    for (long i = 1; i < n; i++) {\n\t\ta[i] = i * i -\
    \ i + 1;\n    }\n    int max_triple = -1, triple = 1;\n    for (long i = 1; i\
    \ < n; i++) {\n\t\tint cur = a[i];\n\t\tfor (int j = i+1 ; j <= n; j++) {\n\t\t\
    \tint next = a[j];\n\t\t\tfor (int k = j+1; k <= n; k++) {\n\t\t\t\tif (cur +\
    \ next + k == 3) triple++;\n\t\t\t}\n\t\t}\n\t\tif (cur > max_triple || max_triple\
    \ == -1) { max_triple = cur; triple = 1; }\n\t}\n    return (max_triple+1);",
  "    // Write your code here\n\tstd::vector<long> a(n);\n\tfor (long i = 0; i <\
    \ n; i++) {\n\t\ta[i] = i * i - i + 1;\n\t}\n\tstd::sort(a.begin(), a.end());\n\
    \tstd::set<long> s;\n\tlong ans = 0;\n\tfor (auto x: a) {\n\t\tif (s.size() &&\
    \ s.find(x) != s.end()) {\n\t\t\tans += 1;\n\t\t\ts.erase(x);\n\t\t} else {\n\t\
    \t\ts.insert(x);\n\t\t}\n\t}\n\treturn ans;", "    std::vector<long> v(n);\n \
    \   \n    for(int i=1; i <= n; i++){\n        v[i]=i*i-i+1;\n    }\n    // sort\
    \ vector v from smallest to largest\n    \n    for(long i=0; i<v.size(); i++){\n\
    \        for(long j=i+1; j<v.size(); j++){\n            for(long k=j+1; k<v.size();\
    \ k++){\n                if(v[i]+v[j]+v[k] % 3 == 0){\n                    return\
    \ v[i]+v[j]+v[k];\n                }\n            }\n        }\n    }\n    \n\
    \    return -1;", "  long count = 0;\n  vector<long> a(n);\n  for (long i = 0;\
    \ i <= n; i++) {\n    for (long j = i; j <= n; j++) {\n      for (long k = j;\
    \ k <= n; k++) {\n        if (a[i] + a[j] + a[k] == 0) {\n          count++;\n\
    \          a[i] = a[j];\n          a[j] = a[k];\n          a[k] = a[i];\n    \
    \    }\n      }\n    }\n  }\n  return count;", "    assert(n >= 0 && \"n should\
    \ be positive\");\n    vector<long> a(n);\n    for (int i = 0; i < n; ++i) {\n\
    \        a[i] = i * i - i + 1;\n    }\n    long ans = 0;\n    for (long i = 0;\
    \ i < n; ++i) {\n        for (long j = i + 1; j < n; ++j) {\n            for (long\
    \ k = j + 1; k < n; ++k) {\n                if ((i == j && i == k && j != k) ||\
    \ a[i] + a[j] + a[k] % 3 == 0) {\n                    ++ans;\n               \
    \ }\n            }\n        }\n    }\n    return ans;", "  assert(n >= 1);\n \
    \ // Your code here\n  long ans = 1;\n  long a[n];\n  for (int i = 0; i < n; i++)\
    \ {\n    a[i] = i * i - i + 1;\n    ans += a[i];\n  }\n  long triple = 0;\n  for\
    \ (int i = 0; i < n; i++) {\n    for (int j = 0; j < i; j++) {\n      for (int\
    \ k = 0; k < j; k++) {\n        if (i == j && i == k && j == k) {\n          triple\
    \ += 1;\n          continue;\n        }\n        long tmp = triple + a[i];\n \
    \       triple += a[j] + a[k];\n        if (tmp % 3 == 0) {\n          ans +=\
    \ 1;\n        }\n      }\n    }\n  }\n  return ans;", "  vector<int> a(n + 1);\n\
    \  a[0] = 1;\n  for (long i = 0; i < n; i++) {\n    a[i + 1] = i * i - i + 1;\n\
    \  }\n  long result = 0;\n  for (long i = 0; i < n; i++) {\n    for (long j =\
    \ 0; j < n; j++) {\n      for (long k = 0; k < n; k++) {\n        if (a[i] + a[j]\
    \ + a[k] == 3 * 3 * 3) {\n          printf(\"%ld %ld %ld\\n\", a[i], a[j], a[k]);\n\
    \          result++;\n        }\n      }\n    }\n  }\n  return result;", "   assert(n\
    \ > 0);\n   vector<long> a;\n   a.reserve(n);\n   for (long i = 2; i <= n; i++)\
    \ {\n      a.push_back(i * i - i + 1);\n   }\n   return count_triple_sum(a);",
  "    // code here\n    vector<long> arr(n);\n    long sum = 0;\n    for(long i =\
    \ 0; i < n; i++) {\n        sum += arr[i];\n    }\n    for(long i = 0; i < n;\
    \ i++) {\n        long a = arr[i] + sum - i;\n        for(long j = 0; j < n; j++)\
    \ {\n            long b = arr[j] + sum - j;\n            long c = arr[i] + arr[j]\
    \ + sum - i + j;\n            if((a % 3 == 0) && (b % 3 == 0) && (c % 3 == 0))\
    \ {\n                return 1;\n            }\n        }\n    }\n    return 0;",
  "    vector<int> a(n);\n    // write your code here\n    for(int i=0;i<a.size();i++){\n\
    \        a[i]=i*i-i+1;\n    }\n    sort(a.begin(),a.end());\n    long ans=0;\n\
    \    for(int i=0;i<a.size();i++){\n        for(int j=i;j<a.size();j++){\n    \
    \        for(int k=j;k<a.size();k++){\n                if(a[i]+a[j]+a[k]==3){\n\
    \                    ans++;\n                    int temp=a[i];\n            \
    \        a[i]=a[j];\n                    a[j]=a[k];\n                    a[k]=temp;\n\
    \                }\n            }\n        }\n    }\n    return ans;", "    //\
    \ write your code here\n    vector<long> arr(n);\n    for(int i=0;i<n;i++){\n\
    \        arr[i]=i*i-1;\n    }\n    int size=0;\n    for(int i=0;i<n;i++){\n  \
    \      for(int j=0;j<n;j++){\n            for(int k=0;k<n;k++){\n            \
    \    if(arr[i]<arr[j]&&arr[j]<arr[k]){\n                    if(arr[i]+arr[j]==arr[k]){\n\
    \                        size+=1;\n                    }\n                }\n\
    \            }\n        }\n    }\n    return size;", "    vector<int> a(n);\n\
    \    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n\
    \            for (int k = j + 1; k < n; k++) {\n                if (i + j + k\
    \ == (n * n - n)) {\n                    a[i] = a[j];\n                    a[j]\
    \ = a[k];\n                    a[k] = a[i];\n                }\n            }\n\
    \        }\n    }\n    long result = 0;\n    for (int i = 0; i < n; i++) {\n \
    \       result += (a[i] + a[i + 1] + a[i + 2]) % 3;\n    }\n    return result;",
  "    long long a[n];\n    long long triples = 0;\n    long long i = 0;\n    for(;\
    \ i < n; ++i) {\n        triples = 0;\n        long long j = 0;\n        while(j\
    \ < n) {\n            long long k = j + 1;\n            while(k <= n) {\n    \
    \            if(a[i] == (a[j] + a[k]) % 3) {\n                    ++triples;\n\
    \                    k++;\n                } else {\n                    break;\n\
    \                }\n            }\n            j++;\n        }\n        if(triples\
    \ > 0) {\n            a[triples - 1] = a[i];\n        }\n        ++i;\n    }\n\
    \    return triples;", "    vector<int> a;\n    for(int i=0; i<n; ++i)\n     \
    \   a.push_back(i*(i+1)-1);\n    long ans = 0;\n    for(int i=1; i<n-1; ++i) {\n\
    \        long cur_ans = 0;\n        for(int j=0; j<i; ++j) {\n            cur_ans\
    \ += a[j];\n        }\n        for(int k=0; k<i; ++k) {\n            cur_ans +=\
    \ a[i];\n        }\n        cur_ans += a[i];\n        while(cur_ans % 3 != 0)\
    \ {\n            cur_ans /= 3;\n            ++ans;\n        }\n    }\n    return\
    \ ans;", "    vector<int> a(n);\n    // insert code here\n    for (long i = 0;\
    \ i < n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    sort(a.begin(), a.end());\n\
    \    long ans = 1;\n    for (long i = 1; i < n; i++) {\n        if (i == a[i])\
    \ {\n            ans++;\n        } else {\n            int j = 0;\n          \
    \  while (i == a[j] && j < a[i]) {\n                j++;\n            }\n    \
    \        long k = 0;\n            while (i == a[k] && k < a[i]) {\n          \
    \      k++;\n            }\n            long ans1 = 0;\n            long ans2\
    \ = 1;\n            long ans3 = 1;\n            int m = 0;\n            while\
    \ (a[i] < a[m]) {\n                m++;\n            }\n            if (m == i)\
    \ {\n                ans1 += 3;\n                ans2 += 2;\n                ans3\
    \ += 1;\n            } else if (i == j) {\n                ans1 += 2;\n      \
    \          ans2 += 1;\n                ans3 += 1;\n            } else if (i ==\
    \ k) {\n                ans1 += 1;\n                ans2 += 1;\n             \
    \   ans3 += 0;\n            } else {\n                long ans1 = 0;\n       \
    \         long ans2 = 1;\n                long ans3 = 1;\n                int\
    \ m = 0;\n                while (a[i] < a[m]) {\n                    m++;\n  \
    \              }\n                if (m == i) {\n                    ans1 += 3;\n\
    \                    ans2 += 2;\n                    ans3 += 1;\n            \
    \    } else if (i == j) {\n                    ans1 += 2;\n                  \
    \  ans2 += 1;\n                    ans3 += 1;\n                } else if (i ==\
    \ k) {\n                    ans1 += 1;\n                    ans2 += 1;\n     \
    \               ans3 += 0;\n                } else {\n                    long\
    \ ans1 = 0;\n                    long ans2 = 1;\n                    long ans3\
    \ = 1;\n                    int m = 0;\n                    while (a[i] < a[m])\
    \ {\n                        m++;\n                    }\n                   \
    \ if (m == i) {\n                        ans1 += 3;\n                        ans2\
    \ += 2;\n                        ans3 += 1;\n                    } else if (i\
    \ == j) {\n                        ans1 += 2;\n                        ans2 +=\
    \ 1;\n                        ans3 += 1;\n                    } else if (i ==\
    \ k) {\n                        ans1 += 1;\n                        ans2 += 1;\n\
    \                        ans3 += 0;\n                    } else {\n          \
    \              long ans1 = 0;\n                        long ans2 = 1;\n      \
    \                  long ans3 = 1;\n                        int m = 0;\n      \
    \                  while (a[i] < a[m]) {\n                            m++;\n \
    \                       }\n                        if (m == i) {\n           \
    \                 ans1 += 3;\n                            ans2 += 2;\n       \
    \                     ans3 += 1;\n                        } else if (i == j) {\n\
    \                            ans1 += 2;\n                            ans2 += 1;\n\
    \                            ans3 += 1;\n                        } else if (i\
    \ == k) {\n                            ", "    // Complete this function\n\tassert(n>0);\n\
    \tint a[n];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\ta[i]=i*(i-1)+i+1;\n\t}\n\t\n\t//\
    \ Complete this function\n\tint counter=0;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\t\
    for(int j=0;j<n;j++)\n\t\t{\n\t\t\tif(counter==0)\n\t\t\t{\n\t\t\t\tfor(int k=0;k<n;k++)\n\
    \t\t\t\t{\n\t\t\t\t\tif(a[i]==a[j]&&a[i]==a[k])\n\t\t\t\t\t{\n\t\t\t\t\t\tcounter++;\n\
    \t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(counter>0)\n\t\t\
    \t{\n\t\t\t\tfor(int k=0;k<n;k++)\n\t\t\t\t{\n\t\t\t\t\tif(a[i]==a[j]&&a[i]==a[k]&&a[i]!=a[j]&&a[i]!=a[k]&&a[j]!=a[k]&&a[i]!=a[k])\n\
    \t\t\t\t\t{\n\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\
    }\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn counter;", "  long long int a[n];\n  // Write\
    \ your code here\n  // a[0] = 1;\n  // for(int i = 1; i < n; i++) a[i] = 3 * a[i\
    \ - 1] - 2 * a[i - 2] + 1;\n  int ans = 0;\n  for(int i = 0; i < n; i++) {\n \
    \   if(i == 0) a[i] = 1;\n    else a[i] = a[i] * 3 - a[i-1] - 1 + 1;\n    for(int\
    \ j = i+1; j < n; j++) {\n      for(int k = 0; k < n; k++) {\n        if(i ==\
    \ j && k == j && a[k] % 3 == 0) ans++;\n      }\n    }\n  }\n  return ans;", " \
    \ // write your code here\n  vector<long long int> a(n);\n  for (long long int\
    \ i = 0; i < n; i++){\n      a[i] = i * i - i + 1;\n  }\n  sort(a.begin(), a.end());\n\
    \  int count = 0;\n  int low = 0;\n  for (int i = 0; i < n - 1; i++){\n      if\
    \ (a[i + 2] == a[i + 1] && a[i + 2] == a[i]){\n          count++;\n      }\n \
    \ }\n  return count;", "    vector<long long int> a;\n    for(long long int i\
    \ = 0; i<n; i++){\n        a.push_back(i*i - i + 1);\n    }\n    sort(a.begin(),\
    \ a.end());\n    long long int i = 0;\n    for(long long int j=0; j<n; j++){\n\
    \        if(j > i){\n            if(a[j] < a[i]){\n                i++;\n    \
    \        }else{\n                long long int k = j;\n                while(!(a[k]\
    \ < a[j]) && (a[k] < a[i])){\n                    k--;\n                }\n  \
    \              long long int k = j;\n                while(!(a[k] < a[i]) && (a[k]\
    \ < a[j])){\n                    k++;\n                }\n                if(k\
    \ > i){\n                    i = k;\n                }\n            }\n      \
    \  }\n    }\n    return i;", "    vector<long> a(n);\n    iota(a.begin(), a.end(),\
    \ 1);\n    for (long i = 2; i <= n; ++i) {\n        for (long j = i; j <= n; ++j)\
    \ {\n            for (long k = j; k <= n; ++k) {\n                if (i*i + j*j\
    \ + k*k % 3 == 0) {\n                    a[i] = i; \n                    a[j]\
    \ = j;\n                    a[k] = k;\n                    ++i;\n            \
    \        ++j;\n                    ++k;\n                    i %= 3;\n       \
    \             j %= 3;\n                    k %= 3;\n                }\n      \
    \      }\n        }\n    }\n    return a.size();", "    long long ans=0;\n   \
    \ vector<long long> a(n);\n    for(long i=0;i<n;i++){\n        for(long j=i+1;j<n;j++){\n\
    \            for(long k=j+1;k<n;k++){\n                if((a[i]+a[j]+a[k])%3==0)\n\
    \                    ans ++;\n            }\n        }\n    }\n    return ans;",
  "    vector<long> a(n);\n    long sum = 0;\n    for(int i = 0; i < n; ++i) {\n \
    \       a[i] = i * i - i + 1;\n        sum += a[i];\n    }\n\n    vector<int>\
    \ triples = { 0, 0, 0 };\n    for(int i = 0; i < n; ++i) {\n        for(int j\
    \ = i + 1; j < n; ++j) {\n            for(int k = j + 1; k < n; ++k) {\n     \
    \           if(sum >= a[i] + a[j] + a[k]) ++triples[a[i] < a[j] && a[j] < a[k]\
    \ ? 1 : 0];\n            }\n        }\n    }\n    return triples.at(0);", "  \
    \  vector<long> a(n);\n    for (int i = 0; i < n; ++i) {\n        a[i] = i * i\
    \ - i + 1;\n    }\n    return count_triple_multiple(a, n, 3);", "  vector<long>\
    \ a(n);\n  for (long i = 0; i < n; i++) a[i] = i * i - i + 1;\n  sort(a.begin(),\
    \ a.end());\n  long ans = 1;\n  long t = 0;\n  for (long i = 0; i < n - 1; i++)\
    \ for (long j = i + 1; j < n; j++) if (a[j] + a[i] == 3)\n  ans += t;\n  return\
    \ ans;", "    std::vector<int> a(n);\n    for (long i = 1; i < n; i++){\n    \
    \    a[i] = i * i - i + 1;\n    }\n    std::sort(a.begin(), a.end());\n    long\
    \ num_triples = 0;\n    long triple = 0;\n    long prev_triple = a[0];\n    long\
    \ prev_triple_a = prev_triple - prev_triple % 3;\n    for (long i = 1; i < n;\
    \ i++) {\n        triple = a[i] - prev_triple_a;\n        if (triple % 3 == 0)\
    \ {\n            num_triples++;\n            prev_triple = a[i];\n           \
    \ prev_triple_a = prev_triple - prev_triple % 3;\n        }\n    }\n    return\
    \ num_triples;", "    long a[n];\n    for(int i=0;i<n;i++)\n        a[i] = i*i-1+i+1;\n\
    \    for(int i=0;i<n;i++) {\n        for(int j=i;j<n;j++) {\n            for(int\
    \ k=j;k<n;k++) {\n                if(a[i]+a[j]+a[k] % 3 == 0)\n              \
    \      return i+1;\n            }\n        }\n    }\n    return -1;", "    long\
    \ a[n];\n    // Complete the code here\n    return 0;", "    vector<long long>\
    \ a(n);\n    for (int i = 0; i < n; i++) {\n        a[i] = i * i - i + 1;\n  \
    \  }\n    long long count = 0;\n    for (int i = 0; i < n; i++) {\n        for\
    \ (int j = i + 1; j < n; j++) {\n            for (int k = j + 1; k < n; k++) {\n\
    \                count += a[k] + a[j] + a[i];\n                if (count % 3 ==\
    \ 0) {\n                    cout << a[i] << \", \" << a[j] << \", \" << a[k] <<\
    \ \"\\n\";\n                }\n            }\n        }\n    }\n    return count;",
  "  // Do not write main() function.\n  // Do not read input, instead use the arguments\
    \ to the function.\n  // Do not print the output, instead return values as specified\n\
    \  // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for\
    \ more details\n  assert(n > 0);\n  // vector<long> a(n);\n  // for(int i = 0;\
    \ i < n; i++) a[i] = i * i - i + 1;\n  // long max_triple = 0;\n  // max_triple\
    \ = a[0];\n  // for(int i = 1; i < n; i++) {\n  //   max_triple = a[i];\n  //\
    \   for(int j = 1; j < n; j++) {\n  //     if(a[i] < a[j] && max_triple < a[i]\
    \ + a[j]) {\n  //       max_triple = a[i] + a[j];\n  //     }\n  //   }\n  //\
    \ }\n  // return max_triple;\n  long max_triple = 0;\n  long prev_triple = 0;\n\
    \  for (long i = 1; i < n; ++i) {\n    if (max_triple < prev_triple && a[i] <\
    \ prev_triple && a[i] > max_triple) {\n      max_triple = prev_triple + a[i];\n\
    \    }\n    prev_triple = max_triple;\n  }\n  return max_triple;", "    // Your\
    \ code here\n    \n    vector<long> a;\n    for(long i = 1 ; i < n ; i++ ) a.push_back(i*i\
    \ - i + 1);\n    long ans = 0;\n    long sum = 0;\n    for( long i = 0 ; i < n\
    \ ; i++ ){\n        for( long j = 0 ; j < i ; j++ ){\n            for( long k\
    \ = 0 ; k < j ; k++ ){\n                sum += a[k]*a[k]*a[k];\n            }\n\
    \        }\n        if( sum % 3 == 0 ){\n            ans++;\n            sum =\
    \ 0;\n        }\n    }\n    \n    return ans;", "    // code here\n    assert(n\
    \ >= 1);\n    long sum = 0;\n    vector<long long> a(n);\n    for (long i = 0;\
    \ i < n; ++i) {\n        a[i] = i * i - i + 1;\n    }\n    sort(a.begin(), a.end());\n\
    \    for (long i = 0; i < n; ++i) {\n        for (long j = i + 1; j < n; ++j)\
    \ {\n            for (long k = j + 1; k < n; ++k) {\n                long val\
    \ = a[i] + (a[j] - a[i]) + (a[k] - a[j]);\n                if (val % 3 == 0) {\n\
    \                    sum += 1;\n                }\n            }\n        }\n\
    \    }\n    return sum;", "    long ans = 0;\n    for (long i = 1;i < n;i++) {\n\
    \        for (long j = i + 1;j < n;j++) {\n            for (long k = j + 1;k <\
    \ n;k++) {\n                ans = max(ans, i+j+k);\n            }\n        }\n\
    \    }\n    return ans;", "    vector<int> a(n);\n    for (int i = 0; i < n; ++i)\n\
    \        a[i] = i * i - i + 1;\n    int cnt = 0;\n    for (int i = 0; i < n; ++i)\
    \ {\n        for (int j = i+1; j < n; ++j) {\n            for (int k = j+1; k\
    \ < n; ++k) {\n                if (a[i] + a[j] + a[k] == 3 * n) ++cnt;\n     \
    \       }\n        }\n    }\n    return cnt;", "    vector<long int> a(n);\n \
    \   for (int i = 0; i < n; i++)\n        a[i] = i * i - i + 1;\n\n    long long\
    \ int result = 0, j = 0;\n    for (long long int i = 0; i < n; i++) {\n      \
    \  for (long long int k = i + 1; k < n; k++) {\n            result += (a[i] *\
    \ a[k] * 3);\n            if (result == 3) break;\n        }\n        if (result\
    \ % 3 == 0)\n            result += 1;\n        result = result / 3;\n    }\n\n\
    \    return result > 3 ? result : 3;", "    std::vector<long> a;\n    for (long\
    \ i = 1; i <= n; ++i)\n        a.push_back(i*i-i+1);\n    sort(a.begin(), a.end());\n\
    \    long count = 0;\n    for (long i = 0; i < n; ++i) {\n        for (long j\
    \ = i+1; j < n; ++j)\n            if (a[j] < a[i]) {\n                long k =\
    \ j;\n                while (a[k] < a[k+1]) {\n                    ++k;\n    \
    \            }\n                if (k > i) {\n                    count += (i+j-1)\
    \ * (k-1);\n                }\n                break;\n            }\n    }\n\
    \    return count;", "    vector<long> a(n);\n    for (long i = 1; i < n; ++i)\
    \ {\n        a[i] = i * i - i + 1;\n    }\n    sort(a.begin(), a.end());\n   \
    \ long counter = 0;\n    for (long i = 0; i < n; ++i) {\n        for (long j =\
    \ i + 1; j < n; ++j) {\n            for (long k = j + 1; k < n; ++k) {\n     \
    \           if (a[i] + a[j] + a[k] == 3)\n                    ++counter;\n   \
    \         }\n        }\n    }\n    return counter;", "    vector<int> a;\n   \
    \ for (long i = 1; i <= n; i++) {\n        a.push_back(i * i - i + 1);\n    }\n\
    \    int n = a.size();\n    long counter = 0;\n    long ans = 0;\n    for (int\
    \ i = 0; i < n; i++) {\n        int j = n - 1;\n        int k = i;\n        while\
    \ (j >= 0 && a[j] > 0 && k < n) {\n            ans = a[j];\n            j--;\n\
    \            counter++;\n            k++;\n        }\n    }\n    return counter;",
  "    vector<long long int> v;\n    v.push_back((long long)1);\n    v.push_back((long\
    \ long)1);\n    v.push_back((long long)1);\n    long long int t = 0;\n    for(long\
    \ long int i = 0; i < n; i++) {\n        long long int x = v[i]*v[i]-v[i]+v[i];\n\
    \        v.push_back((long long)x);\n        t = max(t, x);\n    }\n    return\
    \ t;", "    // Write your code here\n    vector<int> v(n);\n    \n    // for (int\
    \ i = 1; i < n; i++) v[i] = i*i-1+i;\n    \n    int cnt = 0;\n    \n    for (int\
    \ i = 1; i < n; i++) \n    {\n        for (int j = 0; j < i; j++)\n        {\n\
    \            for (int k = 0; k < j; k++)\n            {\n                if (i+j+k\
    \ == 3*(i+j-k)) cnt += 1;\n            }\n        }\n    }\n    \n    return cnt;",
  "    long a[n];\n    for (long i = 1; i < n; i++) {\n        a[i] = i * i - i +\
    \ 1;\n    }\n    long long cnt = 0;\n    for (long i = 1; i < n; i++) {\n    \
    \    for (long j = 1; j < n; j++) {\n            for (long k = 1; k < n; k++)\
    \ {\n                if (a[i] - a[j] - a[k] == 0) {\n                    cnt++;\n\
    \                    break;\n                }\n            }\n        }\n   \
    \ }\n    return cnt;", "  long ans = 0;\n  vector<long> v;\n  assert(n >= 0);\n\
    \  assert(n <= INT_MAX);\n  assert(v.size() == n);\n  v.resize(n);\n  for (long\
    \ i = 0; i < n; i++) {\n    v[i] = i * i - i + 1;\n    if (v[i] % 3 == 0) {\n\
    \      ans += 1;\n    }\n  }\n  return ans;", "    long i, j, k;\n    vector<long\
    \ int> a(n);\n    for (i = 0; i < n; i++)\n        a[i] = i * i - i + 1;\n   \
    \ for (j = 0; j < n; j++) {\n        for (k = 0; k < n; k++) {\n            if\
    \ (a[j] < a[k])\n                break;\n            else if (a[j] == a[k])\n\
    \                a[k] += 1;\n            else if (a[j] > a[k])\n             \
    \   break;\n        }\n    }\n    return a.size();", "\tlong long a[n];\n\t\n\t\
    // fill the vector\n\tfor (long i = 0; i < n; i++) {\n\t\ta[i] = i * i - i + 1;\n\
    \t}\n\t\n\t// sort the vector\n\tsort(a, a + n);\n\t\n\t// Now you have sorted\
    \ vector a, so let's find how many triples exists\n\tlong long answer = 0;\n\t\
    \n\tfor (long i = 1; i < n; i++) {\n\t\tfor (long j = i; j < n; j++) {\n\t\t\t\
    for (long k = j; k < n; k++) {\n\t\t\t\tif (a[i] < a[j] && a[j] < a[k]) {\n\t\t\
    \t\t\tanswer += (a[i] + a[j] + a[k]) % 3;\n\t\t\t\t\tbreak; // because you only\
    \ want triples.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn answer;", "    //\
    \ Write your code here\n    long long int a[1000000];\n    a[0] = 1;\n    for\
    \ (int i = 1; i < n; i++)\n    {\n        a[i] = a[i] * a[i] - i + 1;\n    }\n\
    \    long long int ans = 0;\n    long long int n = 1;\n    for (int i = 1; i <\
    \ n; i++)\n    {\n        for (int j = 1; j < n; j++)\n        {\n           \
    \ for (int k = 1; k < n; k++)\n            {\n                if (a[i] + a[j]\
    \ + a[k] == 3 * 3)\n                {\n                    ans++;\n          \
    \          break;\n                }\n            }\n        }\n    }\n    return\
    \ (ans);", "    long a[n];\n    memset(a, 0, sizeof(a));\n    for (int i = 0;\
    \ i <= n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    // Sort the array\
    \ a\n    for (int i = 1; i < n; i++) {\n        for (int j = i; j < n; j++) {\n\
    \            if (a[j] < a[i]) {\n                std::swap(a[j], a[i]);\n    \
    \        }\n        }\n    }\n    int cnt = 0;\n    for (int i = 0; i < n; i++)\
    \ {\n        for (int j = i+1; j < n; j++) {\n            if (a[j] > a[i] + a[j]\
    \ - a[i]) {\n                cnt++;\n            }\n        }\n    }\n    return\
    \ cnt;", "    std::vector<int> a;\n    for(long i=1; i<=n; i++){\n        a.push_back(i*i-i+1);\n\
    \    }\n    std::sort(a.begin(),a.end());\n    long max_triples=0;\n    long triples_left=n;\n\
    \    for(long i=1; i<=n; i++){\n        while(triples_left>0){\n            long\
    \ j=0;\n            while(j<n&&a[i]+a[j]+a[j]+a[i]-a[j]>3){\n                j++;\n\
    \            }\n            if(j<n){\n                long k=0;\n            \
    \    while(k<n&&a[i]+a[k]+a[k]+a[i]-a[k]<3){\n                    k++;\n     \
    \           }\n                if(k<n){\n                    max_triples = max(max_triples,j+k-1);\n\
    \                    triples_left -= n+k-1;\n                }\n            }\n\
    \        }\n    }\n    return max_triples;", "    assert(n >= 0);\n    long long\
    \ ans = 0LL;\n    vector<long long> a(n);\n    for(int i = 0; i < n; i++) {\n\
    \        a[i] = i * i - i + 1;\n        if(a[i] % 3 == 0) {\n            ans +=\
    \ 1;\n        }\n    }\n    return ans;", "    vector<long> a;\n    for(int i=0;\
    \ i<n; i++)\n        a.push_back(i*i+i+1);\n    sort(a.begin(), a.end()); // sort\
    \ the vector a increasing order\n    long res = 0;\n    for(int i=0; i<n-1; i++)\n\
    \        for(int j=0; j<n-1; j++)\n            for(int k=0; k<n-1; k++)\n    \
    \            if(a[i]+a[j]+a[k] == 3*(i*i+i+j)) {\n                    res++;\n\
    \                    break;\n                }\n    return res;", "    long a[n];\n\
    \    for(long i = 1 ; i <= n ; ++i)\n        a[i] = i * i - i + 1;\n    \n   \
    \ long ans = 0;\n    for(long i = 1 ; i <= n ; ++i)\n        for(long j = 1 ;\
    \ j <= n ; ++j)\n            for(long k = 1 ; k <= n ; ++k) {\n              \
    \  if(a[i] + a[j] + a[k] == 0)\n                    ans++;\n            }\n  \
    \  return ans;", "    long ans = n;\n    vector<int> a(n);\n    // Your code here\n\
    \    \n    for(int i=1; i<=n; i++){\n        for(int j=i; j<=n; j++){\n      \
    \      for(int k=j; k<=n; k++){\n                if(i+j+k == n*(n-1)/2) ans++;\n\
    \            }\n        }\n    }\n    return ans;", "    // Your code here\n \
    \   std::vector<long> a;\n    for (int i = 0; i < n; i++) {\n        a.push_back(i\
    \ * i - i + 1);\n    }\n\n    long max_triples = 0;\n    for (int i = 0; i < n;\
    \ i++) {\n        for (int j = 0; j < n; j++) {\n            for (int k = 0; k\
    \ < n; k++) {\n                if (i != j && i != k && j != k) {\n           \
    \         if (a[i] + a[j] + a[k] % 3 == 0) max_triples++;\n                }\n\
    \            }\n        }\n    }\n    return max_triples;", "    vector<long>\
    \ a(n);\n    iota(a.begin(), a.end(), 1);\n    sort(a.begin(), a.end());\n   \
    \ long cnt = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i +\
    \ 1; j < n; j++) {\n            for (long k = j + 1; k < n; k++) {\n         \
    \       long result = a[i] + a[j] + a[k];\n                if (result > 0 && result\
    \ % 3 == 0) {\n                    cnt += 1;\n                }\n            }\n\
    \        }\n    }\n    return cnt;", "    std::vector<int> a(n);\n    for(int\
    \ i=0;i<a.size();i++){\n        a[i] = i*i-1;\n    }\n    std::vector<int> b;\n\
    \    b.push_back(0);\n    for(int i=1;i<a.size();i++){\n        for(int j=i;j<a.size();j++){\n\
    \            for(int k=j;k<a.size();k++){\n                if(i != j && i != k\
    \ && j != k){\n                    if(a[i] + a[j] + a[k]==3){\n              \
    \          b.push_back(i);\n                        b.push_back(j);\n        \
    \                b.push_back(k);\n                    }\n                }\n \
    \           }\n        }\n    }\n    return std::accumulate(b.begin(), b.end(),\
    \ 0);", "    long long ans = 0;\n    vector<long long> a;\n    for (long long\
    \ i = 0; i < n; i++) {\n        a.push_back(i * i - i + 1);\n    }\n    for (long\
    \ long i = 0; i < n; i++) {\n        for (long long j = i + 1; j < n; j++) {\n\
    \            ans = max(ans, a[i] + a[j] + a[k]);\n        }\n    }\n    return\
    \ ans;", "    int a[n+1];\n    memset(a,-1,sizeof(a));\n    \n    for(int i=1;\
    \ i<=n; i++)\n    {\n        if(a[i-1] == a[i] + 1 + a[i-2])\n        {\n    \
    \        a[i] = a[i-1];\n        }\n    }\n    \n    for(int i=n-1; i>=0; i--)\n\
    \    {\n        if(a[i]+1 == a[i-1] + a[i-2])\n        {\n            a[i] = a[i]+1;\n\
    \        }\n    }\n    \n    return a[n];", "    long a[n];\n    memset(a, -1,\
    \ sizeof(a));\n    a[0] = a[1] = 3 + a[2];\n    for(int i = 2; i <= n; i++) {\n\
    \        a[i] = a[i] + a[i - 1];\n    }\n    sort(a, a + n);\n    long result\
    \ = 0;\n    for(int i = 0; i < n; i++) {\n        result += a[i];\n    }\n   \
    \ return result;", "    // Write your code here\n    vector<long> a(5);\n    for(long\
    \ i=0;i<n;i++)\n        a[i]=i*i*i+i+1;\n    int count=0;\n    for(int i=0;i<n;i++)\n\
    \        for(int j=i;j<n;j++)\n            for(int k=j;k<n;k++)\n            {\n\
    \                if(j<k)\n                    if(a[i]+a[j]>a[k])\n           \
    \         {\n                        long temp=a[i];\n                       \
    \ a[i]=a[j];\n                        a[j]=a[k];\n                        a[k]=temp;\n\
    \                        count++;\n                    }\n                else\n\
    \                    if(a[i]+a[j]>a[k])\n                    {\n             \
    \           long temp=a[i];\n                        a[i]=a[j];\n            \
    \            a[j]=a[k];\n                        a[k]=temp;\n                \
    \        count++;\n                    }\n            }\n    return count;", " \
    \   vector<long int> a(n);\n    for (long i = 0; i < n; i++) {\n        a[i] =\
    \ i * i - i + 1;\n    }\n    sort(a.begin(), a.end());\n    long long count =\
    \ 0;\n    for (long i = 0; i < a.size(); i++) {\n        for (long j = i + 1;\
    \ j < a.size(); j++) {\n            if (a[i] < a[j]) {\n                for (long\
    \ k = j + 1; k < a.size(); k++) {\n                    if (a[i] < a[j] && a[j]\
    \ < a[k]) {\n                        if (a[i] + a[j] + a[k] % 3 == 0) {\n    \
    \                        count++;\n                        }\n               \
    \     }\n                }\n            }\n        }\n    }\n    return count;",
  "    long long a[n];\n    int n1 = n/3;\n    int n2 = n%3;\n    int cnt = 0;\n \
    \   for (int i=0; i<n1; i++){\n        a[i] = i*i-1;\n    }\n    for (int i=0;\
    \ i<n2; i++){\n        a[n1+i] = a[n1+i]+a[n1+n2+i];\n    }\n    for (int i=0;\
    \ i<n-n1; i++){\n        a[i+n2] = a[i+n2]+a[n2+i];\n    }\n    for (int i=0;\
    \ i<n1; i++){\n        if (a[i]%3 == 0){\n            cnt++;\n        }\n    }\n\
    \    return cnt;", "   long long a[n] = {0};\n   for (long i = 1; i < n; i++)\
    \ {\n      long long tmp = a[i] - a[i-1];\n      a[i - 1] += tmp;\n      a[i]\
    \ += tmp;\n   }\n   long long ans = 0;\n   for (long i = 0; i < n; i++) {\n  \
    \    if (a[i] % 3 == 0 && ans < i) {\n         ans = i;\n      }\n   }\n   return\
    \ ans;", "    if(n == 0) return 0;\n    vector<long> a(n);\n    long result =\
    \ 0;\n    long i;\n    for(i = 0; i<n; i++) {\n        a[i] = i * i - i + 1;\n\
    \    }\n    for(i = 0; i<n; i++) {\n        for(long j=i+1; j<n; j++) {\n    \
    \        for( long k=j+1; k<n; k++) {\n                if( a[i] + a[j] + a[k]\
    \ % 3 == 0)\n                    result = result + 3;\n            }\n       \
    \ }\n    }\n    return result;", "    vector<long long> a;\n    for(long i = 0;\
    \ i<n; ++i){\n        a.push_back(i*i-2*i+1);\n    }\n    return a.size();", " \
    \   long a[n];\n    for(int i = 0 ; i < n ; i++){\n        a[i] = i * i - i +\
    \ 1;\n    }\n    long ans = 0;\n    for(int i = 0 ; i < n ; i++){\n        for(int\
    \ j = 0 ; j < n ; j++){\n            for(int k = 0 ; k < n ; k++){\n         \
    \       if(a[i] + a[j] + a[k] == 0){\n                    ans++;\n           \
    \         break;\n                }\n            }\n        }\n    }\n    return\
    \ ans;", "    // code here\n    vector<long> a(n);\n    long triples = 0, sum\
    \ = 0;\n    long i, j;\n    for(i = 0; i < n; i++) {\n        a[i] = i * i - i\
    \ + 1;\n        sum += a[i];\n    }\n    for(i = 0; i < n; i++) {\n        for(j\
    \ = i + 1; j < n; j++) {\n            for(k = j + 1; k < n; k++) {\n         \
    \       if(a[i] + a[j] + a[k] == sum) {\n                    triples += 3;\n \
    \               }\n            }\n        }\n    }\n    return triples;", "  \
    \  long sum = 0;\n    long long a[n];\n    for(int i = 0; i < n; i++){\n     \
    \   a[i] = i * i - i + 1;\n    }\n    for(int i = 0; i < n - 1; i++){\n      \
    \  for(int j = i + 1; j < n; j++){\n            for(int k = j + 1; k < n; k++){\n\
    \                if(3 * a[i] + a[j] + a[k] == 0){\n                    sum++;\n\
    \                }\n            }\n        }\n    }\n    return sum;", "    long\
    \ long a[n];\n    for(long long i=0; i<n; i++) {\n        a[i] = i*i-i+1;\n  \
    \  }\n    sort(a, a+n);\n    long long max_triple=0;\n    long long triple_counter=0;\n\
    \    long long j=1;\n    long long k=1;\n    while(j<n) {\n        if(a[j]%3 ==0){\n\
    \            triple_counter++;\n            while(j<n && a[k]%3 ==0) {\n     \
    \           max_triple = max_triple+1;\n                k++;\n            }\n\
    \            if(triple_counter>max_triple)\n                max_triple=triple_counter;\n\
    \            triple_counter=0;\n        }\n        j++;\n        k++;\n    }\n\
    \    return max_triple;", "    // code here\n    long long int a[n];\n    long\
    \ long int cnt = 0;\n    \n    for(int i = 0; i < n; i++){\n        cnt = 0;\n\
    \        for(int j = 0; j < n; j++){\n            if(i+j < n && a[i+j] < 3*n){\n\
    \                cnt += 1;\n            }\n        }\n        a[i] = i*i-1+cnt;\n\
    \    }\n    \n    sort(a, a+n);\n    \n    long long int ans = 0, cnt = 0;\n \
    \   \n    for(int i = 0; i < n; i++){\n        for(int j = 0; j < n; j++){\n \
    \           for(int k = 0; k < n; k++){\n                if(a[i+j] > 3*n && a[i+j]\
    \ < 3*n && a[j+k] < 3*n && a[j+k] > 3*n){\n                    cnt += 1;\n   \
    \             }\n            }\n        }\n        if(ans > cnt) ans = cnt;\n\
    \    }\n    return ans;", "    std::vector<long> a(n);\n    for (int i = 0; i\
    \ < n; i++) {\n        long temp = i * i - i + 1;\n        a[i] = temp;\n    }\n\
    \    long max_val = a[n-1];\n    long max_index = 0;\n    for (int i = 1; i <\
    \ n; i++) {\n        if (a[i] > max_val) {\n            max_val = a[i];\n    \
    \        max_index = i;\n        }\n    }\n    return max_index;", "    // code\
    \ here\n    long a[n];\n    for (int i = 0; i < n; i++)\n    {\n        a[i] =\
    \ (i * i - i + 1);\n    }\n    int ans = 0;\n    for (int i = 1; i < n; i++)\n\
    \    {\n        for (int j = i+1; j < n; j++)\n        {\n            int k =\
    \ 0;\n            while (true)\n            {\n                k = k + 1;\n  \
    \              if (k == n)\n                {\n                    break;\n  \
    \              }\n                if (a[i] + (a[j] + a[k]) % 3 == 0)\n       \
    \         {\n                    ans++;\n                    break;\n        \
    \        }\n            }\n        }\n    }\n    return ans;", "    // Write your\
    \ code here\n    vector<long int> arr(n);\n    long sum1=0, sum2=0, sum3=0;\n\
    \    for(int i=0;i<n;i++){\n        arr[i] = i * i - i + 1;\n        sum1 += arr[i];\n\
    \    }\n    sum2 = sum1%3;\n    for(int i=0;i<n;i++){\n        arr[i] = arr[i]+sum2;\n\
    \        sum3 = arr[i]%3;\n        sum2 += sum3;\n    }\n    return sum1;", " \
    \   std::vector<int> a(n);\n    for(long i = 0; i < a.size(); i++){\n        a[i]\
    \ = i * i - i + 1;\n    }\n    sort(a.begin(), a.end());\n    long ans = 0;\n\
    \    for(long i = 0; i < (n-1); i++){\n        if(is_valid_triple(a[i], a[i+1],\
    \ a[i+2]) && a[i] + a[j] + a[k] % 3 == 0){\n            ans++;\n        }\n  \
    \  }\n    return ans;", "   vector<long long int> v(n);\n   for(long long int\
    \ i=1; i<=n; i++){\n      v[i]=i*i-i+1;\n   }\n   long long int max_triples=0;\n\
    \   for(int i=1; i<=n; i++){\n      for(int j=i+1; j<=n; j++){\n         for(int\
    \ k=j+1; k<=n; k++){\n            if(v[i]+v[j]+v[k] % 3 ==0) max_triples++;\n\
    \         }\n      }\n   }\n   return max_triples;", "\tassert (n > 0);\n\tvector<long\
    \ long int> a(n);\n\tfor (long long int i = 0; i < n; i++){\n\t\ta[i] = i * i\
    \ - i + 1;\n\t}\n\tint cnt = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int\
    \ j = i + 1; j < n; j++) {\n\t\t\tfor (int k = j + 1; k < n; k++) {\n\t\t\t\t\
    if (a[i] < a[j] && a[i] < a[k]) {\n\t\t\t\t\tif (a[j] < a[k]) {\n\t\t\t\t\t\t\
    cnt += 1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcnt += 2;\n\t\t\t\t\t}\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn cnt;", "    // Write your code here\n\
    \    vector<long> a(n);\n    for(int i=1;i<=n;i++){\n        for(int j=i;j<=n;j++){\n\
    \            for(int k=j;k<=n;k++){\n                if(i+j+k==n*(i+j+k) ){\n\
    \                    a[n-1]=i+j+k;\n                }\n            }\n       \
    \ }\n    }\n    long cnt=0;\n    for(int i=1;i<=n;i++){\n        for(int j=i;j<=n;j++){\n\
    \            for(int k=j;k<=n;k++){\n                if(i+j+k==n*(i+j+k) ){\n\
    \                    if(a[i]+a[j]+a[k]==n*(i+j+k) ){\n                       \
    \ cnt++;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return cnt;", "  long long int a[n];\n  for (long long int i = 0;\
    \ i < n; ++i)\n    a[i] = i * i - i + 1;\n  // Initialize result\n  long long\
    \ int ans = 0;\n  for (long long int i = 0; i < n; ++i)\n    for (long long int\
    \ j = i + 1; j < n; ++j)\n      for (long long int k = j + 1; k < n; ++k)\n  \
    \      if (a[i] + a[j] + a[k] == 0)\n          ++ans;\n  return ans;", "    //\
    \ write your code here\n    vector<int> a(n);\n    long ans = 0;\n    for(int\
    \ i=1; i<n; i++){\n        a[i] = i*i - i + 1;\n    }\n    for(auto i=a.begin();\
    \ i!=a.end(); i++){\n        for(auto j=a.begin(); j!=a.end(); j++){\n       \
    \     for(auto k=a.begin(); k!=a.end(); k++){\n                if(i<j && j<k &&\
    \ k<i && a[i] + a[j] + a[k]==3)\n                    ans++;\n            }\n \
    \       }\n    }\n    return ans;", "    // code here\n    if(n < 3){\n      \
    \  return 0;\n    }\n    long a[n];\n    for(int i = 0; i < n; i++){\n       \
    \ a[i] = i * i - i + 1;\n    }\n    sort(a, a + n);\n    long ans = 0;\n    for(int\
    \ i = 0; i < n; i++){\n        for(int j = i + 1; j < n; j++){\n            for(int\
    \ k = j + 1; k < n; k++){\n                if(ans >= a[i] && a[j] >= a[k]){\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \ }\n    return ans;", "    vector<int> a(n);\n    \n    // Write your code here.\n\
    \    \n    return count_max_element(a.begin(), a.end());", "    vector<long> a;\n\
    \    long s = 0;\n    for(int i = 1; i <= n; i++) {\n        a.push_back(i*i -\
    \ i + 1);\n        s += a[i];\n    }\n    long ans = 0;\n    for(int i = 0; i\
    \ < n; i++) {\n        long sum = 0;\n        for(int j = 0; j < n; j++) {\n \
    \           sum += a[j];\n        }\n        sum += a[i];\n        if(sum % 3\
    \ == 0) {\n            ans++;\n        }\n    }\n    return ans;"]
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_27_flip_case
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::transform(string.begin(),\
    \ string.end(), string.begin(), ::toupper);\n    std::transform(string.begin(),\
    \ string.end(), string.begin(), ::tolower);\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpr3yna2sh: /tmp/tmpr3yna2sh.cpp:14: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (size_t i = 0; i < string.length(); ++i) {\n    if (string[i] >= 'A' && string[i]\
    \ <= 'Z') {\n      string[i] = string[i] - 'A' + 'a';\n    } else if (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n      string[i] = string[i] - 'a' + 'A';\n  \
    \  }\n  }\n  return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097905
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  std::for_each(string.begin(),\
    \ string.end(), [](char c) {\n    c = tolower(c);\n    if (c == 'a')\n      c\
    \ = 'A';\n    if (c == 'b')\n      c = 'B';\n    if (c == 'c')\n      c = 'C';\n\
    \    if (c == 'd')\n      c = 'D';\n    if (c == 'e')\n      c = 'E';\n    if\
    \ (c == 'f')\n      c = 'F';\n    if (c == 'g')\n      c = 'G';\n    if (c ==\
    \ 'h')\n      c = 'H';\n    if (c == 'i')\n      c = 'I';\n    if (c == 'j')\n\
    \      c = 'J';\n    if (c == 'k')\n      c = 'K';\n    if (c == 'l')\n      c\
    \ = 'L';\n    if (c == 'm')\n      c = 'M';\n    if (c == 'n')\n      c = 'N';\n\
    \    if (c == 'o')\n      c = 'O';\n    if (c == 'p')\n      c = 'P';\n    if\
    \ (c == 'q')\n      c = 'Q';\n    if (c == 'r')\n      c = 'R';\n    if (c ==\
    \ 's')\n      c = 'S';\n    if (c == 't')\n      c = 'T';\n    if (c == 'u')\n\
    \      c = 'U';\n    if (c == 'v')\n      c = 'V';\n    if (c == 'w')\n      c\
    \ = 'W';\n    if (c == 'x')\n      c = 'X';\n    if (c == 'y')\n      c = 'Y';\n\
    \    if (c == 'z')\n      c = 'Z';\n  });\n  return string;\n}\nint main() {\n\
    \    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpxj1yqvz1: /tmp/tmpxj1yqvz1.cpp:67: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097905
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (size_t i = 0; i < string.length(); ++i) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n      string[i] = string[i] + 'A' - 'a';\n    } else if (string[i]\
    \ >= 'A' && string[i] <= 'Z') {\n      string[i] = string[i] + 'a' - 'A';\n  \
    \  }\n  }\n  return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097905
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (size_t i = 0; i < string.length(); i++) {\n        char current_character =\
    \ string[i];\n        if (current_character >= 'a' && current_character <= 'z')\n\
    \            string[i] = (current_character - 'a' + 'A');\n        else if (current_character\
    \ >= 'A' && current_character <= 'Z')\n            string[i] = (current_character\
    \ - 'A' + 'a');\n    }\n    return string;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097906
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &c : string) {\n        if (c >= 'a' && c <= 'z')\n            c = c +\
    \ 'A' - 'a';\n        if (c >= 'A' && c <= 'Z')\n            c = c + 'a' - 'A';\n\
    \    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpl04hgqag: /tmp/tmpl04hgqag.cpp:18: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (int i = 0; i < string.length(); i++) {\n        char c = string[i];\n     \
    \   if ('A' <= c && c <= 'Z') {\n            string[i] = c - 'A' + 'a';\n    \
    \    } else if (c >= 'a' && c <= 'z') {\n            string[i] = c - 'a' + 'A';\n\
    \        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097905
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ temp = string;\n    for (string::size_type i = 0; i < string.length(); ++i)\
    \ {\n        if (string[i] >= 'A' && string[i] <= 'Z') {\n            temp[i]\
    \ = toupper(string[i]);\n        }\n        else if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n            temp[i] = tolower(string[i]);\n        }\n    }\n   \
    \ return temp;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4q3nz5ja.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp4q3nz5ja.cpp:7:11: error: expected \u2018;\u2019 before \u2018temp\u2019\
    \n    7 |     string temp = string;\n      |           ^~~~~\n      |        \
    \   ;\n/tmp/tmp4q3nz5ja.cpp:8:10: error: \u2018string\u2019 is not a class, namespace,\
    \ or enumeration\n    8 |     for (string::size_type i = 0; i < string.length();\
    \ ++i) {\n      |          ^~~~~~\n/tmp/tmp4q3nz5ja.cpp:8:35: error: \u2018i\u2019\
    \ was not declared in this scope\n    8 |     for (string::size_type i = 0; i\
    \ < string.length(); ++i) {\n      |                                   ^\n/tmp/tmp4q3nz5ja.cpp:10:13:\
    \ error: \u2018temp\u2019 was not declared in this scope\n   10 |            \
    \ temp[i] = toupper(string[i]);\n      |             ^~~~\n/tmp/tmp4q3nz5ja.cpp:13:13:\
    \ error: \u2018temp\u2019 was not declared in this scope\n   13 |            \
    \ temp[i] = tolower(string[i]);\n      |             ^~~~\n/tmp/tmp4q3nz5ja.cpp:16:12:\
    \ error: \u2018temp\u2019 was not declared in this scope\n   16 |     return temp;\n\
    \      |            ^~~~\n"
  stdout: ''
  timestamp: 1660097905
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    //\
    \ Write your code here.\n    std::string s = string;\n    for (auto &c : s) {\n\
    \        if (isupper(c)) {\n            c = tolower(c);\n        } else if (islower(c))\
    \ {\n            c = toupper(c);\n        }\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097905
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n\tstring\
    \ output = \"\";\n\tfor (char ch : string)\n\t\tswitch (ch) {\n\t\tcase 'A':\n\
    \t\tcase 'a':\n\t\t\toutput += 'a';\n\t\t\tbreak;\n\t\tcase 'B':\n\t\tcase 'b':\n\
    \t\t\toutput += 'b';\n\t\t\tbreak;\n\t\tcase 'C':\n\t\tcase 'c':\n\t\t\toutput\
    \ += 'c';\n\t\t\tbreak;\n\t\tcase 'D':\n\t\tcase 'd':\n\t\t\toutput += 'd';\n\t\
    \t\tbreak;\n\t\tcase 'E':\n\t\tcase 'e':\n\t\t\toutput += 'e';\n\t\t\tbreak;\n\
    \t\tcase 'F':\n\t\tcase 'f':\n\t\t\toutput += 'f';\n\t\t\tbreak;\n\t\tcase 'G':\n\
    \t\tcase 'g':\n\t\t\toutput += 'g';\n\t\t\tbreak;\n\t\tcase 'H':\n\t\tcase 'h':\n\
    \t\t\toutput += 'h';\n\t\t\tbreak;\n\t\tcase 'I':\n\t\tcase 'i':\n\t\t\toutput\
    \ += 'i';\n\t\t\tbreak;\n\t\tcase 'J':\n\t\tcase 'j':\n\t\t\toutput += 'j';\n\t\
    \t\tbreak;\n\t\tcase 'K':\n\t\tcase 'k':\n\t\t\toutput += 'k';\n\t\t\tbreak;\n\
    \t\tcase 'L':\n\t\tcase 'l':\n\t\t\toutput += 'l';\n\t\t\tbreak;\n\t\tcase 'M':\n\
    \t\tcase 'm':\n\t\t\toutput += 'm';\n\t\t\tbreak;\n\t\tcase 'N':\n\t\tcase 'n':\n\
    \t\t\toutput += 'n';\n\t\t\tbreak;\n\t\tcase 'O':\n\t\tcase 'o':\n\t\t\toutput\
    \ += 'o';\n\t\t\tbreak;\n\t\tcase 'P':\n\t\tcase 'p':\n\t\t\toutput += 'p';\n\t\
    \t\tbreak;\n\t\tcase 'Q':\n\t\tcase 'q':\n\t\t\toutput += 'q';\n\t\t\tbreak;\n\
    \t\tcase 'R':\n\t\tcase 'r':\n\t\t\toutput += 'r';\n\t\t\tbreak;\n\t\tcase 'S':\n\
    \t\tcase 's':\n\t\t\toutput += 's';\n\t\t\tbreak;\n\t\tcase 'T':\n\t\tcase 't':\n\
    \t\t\toutput += 't';\n\t\t\tbreak;\n\t\tcase 'U':\n\t\tcase 'u':\n\t\t\toutput\
    \ += 'u';\n\t\t\tbreak;\n\t\tcase 'V':\n\t\tcase 'v':\n\t\t\toutput += 'v';\n\t\
    \t\tbreak;\n\t\tcase 'W':\n\t\tcase 'w':\n\t\t\toutput += 'w';\n\t\t\tbreak;\n\
    \t\tcase 'X':\n\t\tcase 'x':\n\t\t\toutput += 'x';\n\t\t\tbreak;\n\t\tcase 'Y':\n\
    \t\tcase 'y':\n\t\t\toutput += 'y';\n\t\t\tbreak;\n\t\tcase 'Z':\n\t\tcase 'z':\n\
    \t\t\toutput += 'z';\n\t\t\tbreak;\n\t\tcase '0':\n\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcuq6ze7c.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpcuq6ze7c.cpp:7:8: error: expected \u2018;\u2019 before \u2018output\u2019\
    \n    7 |  string output = \"\";\n      |        ^~~~~~~\n      |        ;\n/tmp/tmpcuq6ze7c.cpp:12:4:\
    \ error: \u2018output\u2019 was not declared in this scope\n   12 |    output\
    \ += 'a';\n      |    ^~~~~~\n/tmp/tmpcuq6ze7c.cpp:116:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  116 | }\n      | ^\n/tmp/tmpcuq6ze7c.cpp:117:12:\
    \ error: a function-definition is not allowed here before \u2018{\u2019 token\n\
    \  117 | int main() {\n      |            ^\n/tmp/tmpcuq6ze7c.cpp:122:1: error:\
    \ expected \u2018}\u2019 at end of input\n  122 | }\n      | ^\n/tmp/tmpcuq6ze7c.cpp:6:43:\
    \ note: to match this \u2018{\u2019\n    6 | std::string flip_case(std::string\
    \ string) {\n      |                                           ^\n/tmp/tmpcuq6ze7c.cpp:122:1:\
    \ warning: no return statement in function returning non-void [-Wreturn-type]\n\
    \  122 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660097905
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ str1 = string;\n    for (int i = 0; i < str1.size(); i++) {\n        char c\
    \ = str1[i];\n        if ('A' <= c && c <= 'Z') {\n            str1[i] = c + 32;\n\
    \        } else {\n            str1[i] = c;\n        }\n    }\n    return str1;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmmekipl6.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpmmekipl6.cpp:7:11: error: expected \u2018;\u2019 before \u2018str1\u2019\
    \n    7 |     string str1 = string;\n      |           ^~~~~\n      |        \
    \   ;\n/tmp/tmpmmekipl6.cpp:8:25: error: \u2018str1\u2019 was not declared in\
    \ this scope\n    8 |     for (int i = 0; i < str1.size(); i++) {\n      |   \
    \                      ^~~~\n/tmp/tmpmmekipl6.cpp:16:12: error: \u2018str1\u2019\
    \ was not declared in this scope\n   16 |     return str1;\n      |          \
    \  ^~~~\n"
  stdout: ''
  timestamp: 1660097905
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = \"\";\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'a':\n            case 'b':\n            case 'c':\n            case 'd':\n\
    \            case 'e':\n            case 'f':\n            case 'g':\n       \
    \     case 'h':\n            case 'i':\n            case 'j':\n            case\
    \ 'k':\n            case 'l':\n            case 'm':\n            case 'n':\n\
    \            case 'o':\n            case 'p':\n            case 'q':\n       \
    \     case 'r':\n            case 's':\n            case 't':\n            case\
    \ 'u':\n            case 'v':\n            case 'w':\n            case 'x':\n\
    \            case 'y':\n            case 'z':\n                s += c;\n     \
    \           break;\n            case 'A':\n            case 'B':\n           \
    \ case 'C':\n            case 'D':\n            case 'E':\n            case 'F':\n\
    \            case 'G':\n            case 'H':\n            case 'I':\n       \
    \     case 'J':\n            case 'K':\n            case 'L':\n            case\
    \ 'M':\n            case 'N':\n            case 'O':\n            case 'P':\n\
    \            case 'Q':\n            case 'R':\n            case 'S':\n       \
    \     case 'T':\n            case 'U':\n            case 'V':\n            case\
    \ 'W':\n            case 'X':\n            case 'Y':\n            case 'Z':\n\
    \                s += c+32;\n                break;\n            default:\n  \
    \              s += c;\n        }\n    }\n    return s;\n}\nint main() {\n   \
    \ auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp5hh9nhwc: /tmp/tmp5hh9nhwc.cpp:75: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::map<char,\
    \ char> m;\n    for (auto& c: str) {\n        if (m.find(c) == m.end()) {\n  \
    \          m[c] = c;\n        } else {\n            m[c] = m[c];\n        }\n\
    \    }\n    return std::string(m.begin(), m.end());\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp39zo0gc8.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp39zo0gc8.cpp:8:19: error: \u2018str\u2019 was not declared in this\
    \ scope; did you mean \u2018std\u2019?\n    8 |     for (auto& c: str) {\n   \
    \   |                   ^~~\n      |                   std\nIn file included from\
    \ /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp39zo0gc8.cpp:2:\n/usr/include/c++/9/bits/basic_string.h: In instantiation\
    \ of \u2018static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*,\
    \ _Iterator, _Iterator) [with _Iterator = std::_Rb_tree_iterator<std::pair<const\
    \ char, char> >; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    :\n/usr/include/c++/9/bits/basic_string.tcc:225:6:   required from \u2018void\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator,\
    \ _InIterator, std::forward_iterator_tag) [with _FwdIterator = std::_Rb_tree_iterator<std::pair<const\
    \ char, char> >; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \n/usr/include/c++/9/bits/basic_string.h:251:11:   required from \u2018void std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type)\
    \ [with _InIterator = std::_Rb_tree_iterator<std::pair<const char, char> >; _CharT\
    \ = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \n/usr/include/c++/9/bits/basic_string.h:270:4:   required from \u2018void std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator =\
    \ std::_Rb_tre"
  stdout: ''
  timestamp: 1660097905
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &ch : string) {\n        auto tmp = std::toupper(ch);\n        string.insert(string.begin(),\
    \ tmp);\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpoutlm1ci: /tmp/tmpoutlm1ci.cpp:16: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (size_t i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z')\n      string[i] -= 'a'-'A';\n    else if (string[i] >= 'A' && string[i]\
    \ <= 'Z')\n      string[i] -= 'A'-'a';\n  }\n  return string;\n}\nint main() {\n\
    \    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097905
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (auto &i : string) {\n    if (i >= 'a' && i <= 'z') i = static_cast<char>(i\
    \ - 'a' + 'A');\n    if (i >= 'A' && i <= 'Z') i = static_cast<char>(i - 'A' +\
    \ 'a');\n  }\n  return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpux2a8l3a: /tmp/tmpux2a8l3a.cpp:16: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (size_t i = 0, len = string.length(); i < len; i++) {\n    const char c = string[i];\n\
    \    if (std::islower(c))\n      string[i] = toupper(c);\n    else if (std::isupper(c))\n\
    \      string[i] = tolower(c);\n  }\n  return string;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097905
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  std::map<char,\
    \ char> swap;\n  for (char c : string)\n    swap[c] = c != tolower(c) ? toupper(c)\
    \ : tolower(c);\n  std::string ans;\n  for (char c : string)\n    ans += swap[c];\n\
    \  return ans;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpxsi3adcm: /tmp/tmpxsi3adcm.cpp:18: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    size_t\
    \ len = string.length();\n    std::string newstr(\"\");\n    for (int i = 0; i\
    \ < len; i++) {\n        char c = string[i];\n        if ('A' <= c && c <= 'Z')\
    \ {\n            newstr.append(c, (c + 'a' - 'A'));\n        } else {\n      \
    \      newstr.append(c);\n        }\n    }\n    return newstr;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5pxguyli.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp5pxguyli.cpp:14:28: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::append(char&)\u2019\n   14 |             newstr.append(c);\n\
    \      |                            ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5pxguyli.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1267:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(const _CharT*) [with\
    \ _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \ <near match>\n 1267 |       append(const _CharT* __s)\n      |       ^~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:1267:7: note:   conversion of argument\
    \ 1 would be ill-formed:\n/tmp/tmp5pxguyli.cpp:14:27: error: invalid conversion\
    \ from \u2018char\u2019 to \u2018const char*\u2019 [-fpermissive]\n   14 |   \
    \          newstr.append(c);\n      |                           ^\n      |   \
    \                        |\n      |                           char\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++"
  stdout: ''
  timestamp: 1660097905
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ flipped;\n    for(char &c : string) c = toupper(c);\n    for(char &c : string)\
    \ c = tolower(c);\n    return flipped;\n}\nint main() {\n    auto candidate =\
    \ flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpswn1uu6q.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpswn1uu6q.cpp:7:11: error: expected \u2018;\u2019 before \u2018flipped\u2019\
    \n    7 |     string flipped;\n      |           ^~~~~~~~\n      |           ;\n\
    /tmp/tmpswn1uu6q.cpp:10:12: error: \u2018flipped\u2019 was not declared in this\
    \ scope\n   10 |     return flipped;\n      |            ^~~~~~~\n"
  stdout: ''
  timestamp: 1660097905
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for(int\
    \ i = 0; i < string.size(); i++) {\n        if(string[i] < 'a' || string[i] >\
    \ 'z') {\n            string[i] = toupper(string[i]);\n        }\n    }\n    return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpr7xfoloh: /tmp/tmpr7xfoloh.cpp:17: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0, n = string.length(); i < n; ++i) {\n    if (string[i] >= 'A' &&\
    \ string[i] <= 'Z') {\n      string[i] = string[i] - 32;\n    }\n    else if (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n      string[i] = string[i] + 32;\n    }\n  }\n\
    \  return string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp4x_rmo1i: /tmp/tmp4x_rmo1i.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  std::string\
    \ res;\n  for (int i = 0; i < string.size(); i++) {\n    if (string[i] >= 'a'\
    \ && string[i] <= 'z') {\n      string[i] = string[i] - 32;\n    } else if (string[i]\
    \ >= 'A' && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    }\n  \
    \  res += string[i];\n  }\n  return res;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097906
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'A' && string[i]\
    \ <= 'Z') {\n      string[i] = string[i] - 'A' + 'a';\n    }\n    else if (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n      string[i] = string[i] - 'a' + 'A';\n  \
    \  }\n  }\n  return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097905
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  std::string\
    \ out = string;\n  for (size_t i = 0; i < out.size(); i++) {\n    if (out[i] >=\
    \ 'a' && out[i] <= 'z') {\n      out[i] = out[i] - 'a' + 'A';\n    } else if (out[i]\
    \ >= 'A' && out[i] <= 'Z') {\n      out[i] = out[i] - 'A' + 'a';\n    }\n  }\n\
    \  return out;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097906
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for(char\
    \ &c: string) {\n        if(isupper(c)) {\n            c = tolower(c);\n     \
    \   }\n        else {\n            c = toupper(c);\n        }\n    }\n    return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097906
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  assert(!string.empty());\n\
    \  for (char ch : string) {\n    if (ch >= 'a' && ch <= 'z')\n      ch = ch -\
    \ 'a' + 'A';\n    else if (ch >= 'A' && ch <= 'Z')\n      ch = ch - 'A' + 'a';\n\
    \    else\n      ch = ch;\n  }\n  return string;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpixa3_srv: /tmp/tmpixa3_srv.cpp:7: std::string flip_case(std::string):
    Assertion `!string.empty()'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result=\"\";\n    for(unsigned int i=0; i<string.length(); i++){\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z'){\n            result += string[i] - 32;\n      \
    \  }\n        else if (string[i] >= 'A' && string[i] <= 'Z'){\n            result\
    \ += string[i] - 64;\n        }\n        result += string[i];\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp32s999cm: /tmp/tmp32s999cm.cpp:22: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (size_t i = 0; i < string.size(); i++) {\n        if (string[i] >= 'A' && string[i]\
    \ <= 'Z') {\n            string[i] = string[i] - 32;\n        }\n        if (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] + 32;\n   \
    \     }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp8gf8_ufu: /tmp/tmp8gf8_ufu.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z')\n      string[i] ^= ('A');\n    else if (string[i] >= 'A' && string[i]\
    \ <= 'Z')\n      string[i] ^= ('a');\n  }\n  return string;\n}\nint main() {\n\
    \    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp8gxcrngs: /tmp/tmp8gxcrngs.cpp:18: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  std::string\
    \ newString;\n  for (int i = 0; i < string.length(); i++) {\n    if (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n      newString += string[i] + 32;\n    } else\
    \ if (string[i] >= 'A' && string[i] <= 'Z') {\n      newString += string[i] -\
    \ 32;\n    }\n  }\n  return newString;\n}\nint main() {\n    auto candidate =\
    \ flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpb4mpy3z8: /tmp/tmpb4mpy3z8.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &c : string) {\n        if (std::tolower(c) == c) {\n            c = std::toupper(c);\n\
    \        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpye6ox4kj: /tmp/tmpye6ox4kj.cpp:17: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for(std::string::iterator\
    \ it = string.begin(); it != string.end(); ++it)\n    {\n        if(*it >= 'a'\
    \ && *it <= 'z') {\n            string += toupper(*it);\n        } else if(*it\
    \ >= 'A' && *it <= 'Z') {\n            string += tolower(*it);\n        }\n  \
    \  }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n \
    \   assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\")) ==\
    \ (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660097906
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  std::string\
    \ s;\n  for (size_t i = 0; i < string.length(); i++) {\n    s[i] = string[i] ==\
    \ 'A' ? 'a' : string[i] == 'B' ? 'b' : string[i] == 'C' ? 'c' : string[i] == 'D'\
    \ ? 'd' : string[i] == 'E' ? 'e' : string[i] == 'F' ? 'f' : string[i] == 'G' ?\
    \ 'g' : string[i] == 'H' ? 'h' : string[i] == 'I' ? 'i' : string[i] == 'J' ? 'j'\
    \ : string[i] == 'K' ? 'k' : string[i] == 'L' ? 'l' : string[i] == 'M' ? 'm' :\
    \ string[i] == 'N' ? 'n' : string[i] == 'O' ? 'o' : string[i] == 'P' ? 'p' : string[i]\
    \ == 'Q' ? 'q' : string[i] == 'R' ? 'r' : string[i] == 'S' ? 's' : string[i] ==\
    \ 'T' ? 't' : string[i] == 'U' ? 'u' : string[i] == 'V' ? 'v' : string[i] == 'W'\
    \ ? 'w' : string[i] == 'X' ? 'x' : string[i] == 'Y' ? 'y' : string[i] == 'Z' ?\
    \ 'z' : string[i];\n  }\n  return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpz6fe57un: /tmp/tmpz6fe57un.cpp:16: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if (c >= 'a' && c <= 'z') {\n            result += toupper(c);\n\
    \        } else if (c >= 'A' && c <= 'Z') {\n            result += tolower(c);\n\
    \        } else {\n            result += c;\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097906
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    int\
    \ n = string.length();\n    if (n == 0)\n        return string;\n    std::string\
    \ ans = \"\";\n    for (int i = 0; i < n; ++i) {\n        char ch = string[i];\n\
    \        if (i > 0 && (ch < 'A' || ch > 'Z')) {\n            ans += \"-\";\n \
    \           ch = ch - ('A' - 'a');\n        } else if (i > 0 && (ch > 'a' || ch\
    \ < 'A')) {\n            ans += \"-\";\n            ch = ch - ('z' - 'a' + 1);\n\
    \        } else {\n            ans += ch;\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpkk3q8n3k: /tmp/tmpkk3q8n3k.cpp:28: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n      string[i] = string[i] + 32;\n    }\n    else if (string[i]\
    \ >= 'A' && string[i] <= 'Z') {\n      string[i] = string[i] - 32;\n    }\n  }\n\
    \  return string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpl_uak860: /tmp/tmpl_uak860.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097905
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::map<char,\
    \ char> map_lower;\n    std::map<char, char> map_upper;\n\n    for (char c : string)\
    \ {\n        map_lower[c] = toupper(c);\n        map_upper[c] = tolower(c);\n\
    \    }\n\n    std::string flipped_string = \"\";\n    for (char c : string) {\n\
    \        flipped_string += map_upper[map_lower[c]];\n    }\n\n    return flipped_string;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp1_6qhwxc: /tmp/tmp1_6qhwxc.cpp:25: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &c: string) c = isupper(c) ? tolower(c) : toupper(c);\n    return string;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097906
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  string\
    \ s1 = string;\n  string s2 = \"HELLO\";\n  string s3;\n  s3 = s1.substr(0, 2);\
    \ //s3 equals to \"h\"\n  s1.replace(s3.begin(), s3.end(), s2.begin(), s2.end());\n\
    \  return s1;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpif4t6itn.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpif4t6itn.cpp:7:9: error: expected \u2018;\u2019 before \u2018s1\u2019\
    \n    7 |   string s1 = string;\n      |         ^~~\n      |         ;\n/tmp/tmpif4t6itn.cpp:8:9:\
    \ error: expected \u2018;\u2019 before \u2018s2\u2019\n    8 |   string s2 = \"\
    HELLO\";\n      |         ^~~\n      |         ;\n/tmp/tmpif4t6itn.cpp:9:9: error:\
    \ expected \u2018;\u2019 before \u2018s3\u2019\n    9 |   string s3;\n      |\
    \         ^~~\n      |         ;\n/tmp/tmpif4t6itn.cpp:10:3: error: \u2018s3\u2019\
    \ was not declared in this scope\n   10 |   s3 = s1.substr(0, 2); //s3 equals\
    \ to \"h\"\n      |   ^~\n/tmp/tmpif4t6itn.cpp:10:8: error: \u2018s1\u2019 was\
    \ not declared in this scope; did you mean \u2018y1\u2019?\n   10 |   s3 = s1.substr(0,\
    \ 2); //s3 equals to \"h\"\n      |        ^~\n      |        y1\n/tmp/tmpif4t6itn.cpp:11:36:\
    \ error: \u2018s2\u2019 was not declared in this scope\n   11 |   s1.replace(s3.begin(),\
    \ s3.end(), s2.begin(), s2.end());\n      |                                  \
    \  ^~\n"
  stdout: ''
  timestamp: 1660097905
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (int i = 0; i < string.size(); ++i) {\n        char ch = string[i];\n\
    \        if (ch == 'a') {\n            ch = 'A';\n        } else if (ch == 'b')\
    \ {\n            ch = 'B';\n        } else if (ch == 'c') {\n            ch =\
    \ 'C';\n        } else if (ch == 'd') {\n            ch = 'D';\n        } else\
    \ if (ch == 'e') {\n            ch = 'E';\n        } else if (ch == 'f') {\n \
    \           ch = 'F';\n        } else if (ch == 'g') {\n            ch = 'G';\n\
    \        } else if (ch == 'h') {\n            ch = 'H';\n        } else if (ch\
    \ == 'i') {\n            ch = 'I';\n        } else if (ch == 'k') {\n        \
    \    ch = 'K';\n        } else if (ch == 'l') {\n            ch = 'L';\n     \
    \   } else if (ch == 'm') {\n            ch = 'M';\n        } else if (ch == 'n')\
    \ {\n            ch = 'N';\n        } else if (ch == 'o') {\n            ch =\
    \ 'O';\n        } else if (ch == 'p') {\n            ch = 'P';\n        } else\
    \ if (ch == 'q') {\n            ch = 'Q';\n        } else if (ch == 'r') {\n \
    \           ch = 'R';\n        } else if (ch == 's') {\n            ch = 'S';\n\
    \        } else if (ch == 't') {\n            ch = 'T';\n        } else if (ch\
    \ == 'u') {\n            ch = 'U';\n        } else if (ch == 'v') {\n        \
    \    ch = 'V';\n        } else if (ch == 'w') {\n            ch = 'W';\n     \
    \   } else if (ch == 'x') {\n            ch = 'X';\n        } else if (ch == 'y')\
    \ {\n            ch = 'Y';\n        } else if (ch == 'z') {\n            ch =\
    \ 'Z';\n        } else if (ch >= 'A' && ch <= 'Z') {\n            ch = ch - 'A'\
    \ + 'a';\n        } else if (ch >= 'a' && ch <= 'z') {\n            ch = ch -\
    \ 'a' + 'A';\n        }\n        result += ch;\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097906
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  std::reverse(string.begin(),\
    \ string.end());\n  return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp206vh_ks: /tmp/tmp206vh_ks.cpp:13: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n\tstd::string\
    \ new_string;\n\tfor (auto &c : string)\n\t\tc = toupper(c);\n\tfor (auto &c :\
    \ string)\n\t\tc = tolower(c);\n\treturn new_string;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpxia3re8n: /tmp/tmpxia3re8n.cpp:17: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (size_t i = 0; i < string.length(); ++i) {\n        char c = string[i];\n  \
    \      if (c >= 'A' && c <= 'Z') {\n            string[i] = c ^ (c >> 5);\n  \
    \      }\n        if (c >= 'a' && c <= 'z') {\n            string[i] = c ^ 32\
    \ + (c >> 3);\n        }\n    }\n    return string;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpnaww7fj8: /tmp/tmpnaww7fj8.cpp:21: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto it = string.begin(); it != string.end(); it++) {\n        std::swap(*it,\
    \ std::toupper(*it));\n    }\n    return string;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp43megrgz.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp43megrgz.cpp:8:41: error: no matching function for call to \u2018swap(char&,\
    \ int)\u2019\n    8 |         std::swap(*it, std::toupper(*it));\n      |    \
    \                                     ^\nIn file included from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp43megrgz.cpp:2:\n/usr/include/c++/9/bits/move.h:182:5:\
    \ note: candidate: \u2018template<class _Tp> typename std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<_Tp>\
    \ >, std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type\
    \ std::swap(_Tp&, _Tp&)\u2019\n  182 |     swap(_Tp& __a, _Tp& __b)\n      | \
    \    ^~~~\n/usr/include/c++/9/bits/move.h:182:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp43megrgz.cpp:8:41: note:   deduced conflicting types for parameter\
    \ \u2018_Tp\u2019 (\u2018char\u2019 and \u2018int\u2019)\n    8 |         std::swap(*it,\
    \ std::toupper(*it));\n      |                                         ^\nIn file\
    \ included from /usr/include/c++/9/bits/stl_pair.h:59,\n                 from\
    \ /usr/include/c++/9/bits/stl_algobase.h:64,\n                 from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp43megrgz.cpp:2:\n/usr/include/c++/9/bits/move.h:205:5:\
    \ note: candidate: \u2018template<class _Tp, long unsigned int _Nm> typename std::enable_if<std::__is_swappable<_Tp>::value>::type\
    \ std::swap(_Tp (&)[_Nm], _Tp (&)[_Nm])\u2019\n  205 |     swap(_Tp (&__a)[_Nm],\
    \ _Tp (&__b)[_Nm])\n      |     ^~~~\n/usr/include/c++/9/bits/move.h:205:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp43megrgz.cpp:8:41:\
    \ note:   mismatched types \u2018_Tp [_Nm]\u2019 and"
  stdout: ''
  timestamp: 1660097904
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  std::string\
    \ output = \"\";\n  for (int i = 0; i < string.length(); i++) {\n    if (string[i]\
    \ >= 'A' && string[i] <= 'Z') {\n      output += string[i] + ('A' - 'a');\n  \
    \  } else {\n      output += string[i];\n    }\n  }\n  return output;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpgwtev2ai: /tmp/tmpgwtev2ai.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    int\
    \ len = string.length();\n    std::string result;\n    for (int i = 0; i < len;\
    \ ++i) {\n        char c = string[i];\n        if (islower(c)) {\n           \
    \ result += toupper(c);\n        } else {\n            result += tolower(c);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097907
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto i : string) {\n        if ((i >= 'a') && (i <= 'z')) {\n            string\
    \ += i;\n        } else if ((i >= 'A') && (i <= 'Z')) {\n            string +=\
    \ i;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpg65nfj93: /tmp/tmpg65nfj93.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097907
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (size_t i = 0; i < string.size(); i++) {\n        if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i]\
    \ >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n   \
    \     }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097907
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  std::string\
    \ result = string;\n  for (auto &i : result)\n    if (i >= 'a' && i <= 'z')\n\
    \      result ^= i + ('a' - 'A');\n      else if (i >= 'A' && i <= 'Z')\n    \
    \  result ^= i + ('A' - 'a');\n      else // else it must be a numeric char\n\
    \    result ^= i;\n  return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpehnbuprq.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpehnbuprq.cpp:10:14: error: no match for \u2018operator^=\u2019 (operand\
    \ types are \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } and \u2018int\u2019)\n   10 |       result ^= i + ('a' - 'A');\n      |    \
    \   ~~~~~~~^~~~~~~~~~~~~~~~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:45,\n\
    \                 from /tmp/tmpehnbuprq.cpp:2:\n/usr/include/c++/9/cstddef:172:3:\
    \ note: candidate: \u2018constexpr std::byte& std::operator^=(std::byte&, std::byte)\u2019\
    \n  172 |   operator^=(byte& __l, byte __r) noexcept\n      |   ^~~~~~~~\n/usr/include/c++/9/cstddef:172:20:\
    \ note:   no known conversion for argument 1 from \u2018std::string\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} to \u2018std::byte&\u2019\n  172\
    \ |   operator^=(byte& __l, byte __r) noexcept\n      |              ~~~~~~^~~\n\
    In file included from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpehnbuprq.cpp:2:\n/usr/include/c++/9/bits/ios_base.h:107:3: note: candidate:\
    \ \u2018const std::_Ios_Fmtflags& std::operator^=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)\u2019\
    \n  107 |   operator^=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)\n      |   ^~~~~~~~\n\
    /usr/include/c++/9/bits/ios_base.h:107:29: note:   no known conversion for argument\
    \ 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018std::_Ios_Fmtflags&\u2019\n  107 |   operator^=(_Ios_Fmtflags& __a,\
    \ _Ios_Fmtflags __b)\n      |              ~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/ios_base.h:149:3:\
    \ note: candidate: \u2018const std::_Ios_Openmode& std::operator^=(std::_Ios_Openmode&,\
    \ std::_Ios_Openmode)\u2019\n  149 |   operator^=(_Ios_Openmode& __a, _Ios_Openmode\
    \ __b)\n      |   ^~~~~~~~\n/usr/include/c++/9/bits/ios_base.h:149:29: note: \
    \  "
  stdout: ''
  timestamp: 1660097907
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ result = string;\n    std::transform(result.begin(), result.end(), result.begin(),\
    \ ::toupper);\n    std::transform(result.begin(), result.end(), result.begin(),\
    \ ::tolower);\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplzkghq5c.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmplzkghq5c.cpp:7:11: error: expected \u2018;\u2019 before \u2018result\u2019\
    \n    7 |     string result = string;\n      |           ^~~~~~~\n      |    \
    \       ;\n/tmp/tmplzkghq5c.cpp:8:20: error: \u2018result\u2019 was not declared\
    \ in this scope\n    8 |     std::transform(result.begin(), result.end(), result.begin(),\
    \ ::toupper);\n      |                    ^~~~~~\n"
  stdout: ''
  timestamp: 1660097907
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ lower = \"\";\n    string upper = \"\";\n    for(char c : string)\n        if(isupper(c))\n\
    \            upper += c;\n        else\n            lower += c;\n    return upper\
    \ + lower;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcwclj02q.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpcwclj02q.cpp:7:11: error: expected \u2018;\u2019 before \u2018lower\u2019\
    \n    7 |     string lower = \"\";\n      |           ^~~~~~\n      |        \
    \   ;\n/tmp/tmpcwclj02q.cpp:8:11: error: expected \u2018;\u2019 before \u2018\
    upper\u2019\n    8 |     string upper = \"\";\n      |           ^~~~~~\n    \
    \  |           ;\n/tmp/tmpcwclj02q.cpp:11:13: error: \u2018upper\u2019 was not\
    \ declared in this scope; did you mean \u2018toupper\u2019?\n   11 |         \
    \    upper += c;\n      |             ^~~~~\n      |             toupper\n/tmp/tmpcwclj02q.cpp:13:13:\
    \ error: \u2018lower\u2019 was not declared in this scope; did you mean \u2018\
    tolower\u2019?\n   13 |             lower += c;\n      |             ^~~~~\n \
    \     |             tolower\n/tmp/tmpcwclj02q.cpp:14:12: error: \u2018upper\u2019\
    \ was not declared in this scope; did you mean \u2018toupper\u2019?\n   14 | \
    \    return upper + lower;\n      |            ^~~~~\n      |            toupper\n\
    /tmp/tmpcwclj02q.cpp:14:20: error: \u2018lower\u2019 was not declared in this\
    \ scope; did you mean \u2018tolower\u2019?\n   14 |     return upper + lower;\n\
    \      |                    ^~~~~\n      |                    tolower\n"
  stdout: ''
  timestamp: 1660097907
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  int\
    \ index = 0;\n  while (index < string.length()) {\n    if (string[index] == string[index\
    \ + 1]) {\n      swap(string[index], string[index + 1]);\n      ++index;\n   \
    \ } else {\n      ++index;\n    }\n  }\n  return string;\n}\nint main() {\n  \
    \  auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n   \
    \ assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These\
    \ violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_lzyul_.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp6_lzyul_.cpp:10:7: error: \u2018swap\u2019 was not declared in this\
    \ scope\n   10 |       swap(string[index], string[index + 1]);\n      |      \
    \ ^~~~\n/tmp/tmp6_lzyul_.cpp:10:7: note: suggested alternatives:\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp6_lzyul_.cpp:2:\n/usr/include/c++/9/bits/regex.h:2029:5:\
    \ note:   \u2018std::__cxx11::swap\u2019\n 2029 |     swap(match_results<_Bi_iter,\
    \ _Alloc>& __lhs,\n      |     ^~~~\nIn file included from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6_lzyul_.cpp:2:\n/usr/include/c++/9/bits/move.h:182:5:\
    \ note:   \u2018std::swap\u2019\n  182 |     swap(_Tp& __a, _Tp& __b)\n      |\
    \     ^~~~\n/usr/include/c++/9/bits/move.h:182:5: note:   \u2018std::swap\u2019\
    \nIn file included from /usr/include/c++/9/exception:143,\n                 from\
    \ /usr/include/c++/9/ios:39,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp6_lzyul_.cpp:2:\n/usr/include/c++/9/bits/exception_ptr.h:166:5: note:\
    \   \u2018std::__exception_ptr::swap\u2019\n  166 |     swap(exception_ptr& __lhs,\
    \ exception_ptr& __rhs)\n      |     ^~~~\nIn file included from /usr/include/c++/9/filesystem:37,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:129,\n\
    \                 from /tmp/tmp6_lzyul_.cpp:2:\n/usr/include/c++/9/bits/fs_path.h:611:15:\
    \ note:   \u2018std::filesystem::__cxx11::swap\u2019\n  611 |   inline void swap(path&\
    \ _"
  stdout: ''
  timestamp: 1660097907
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for(std::string::size_type\
    \ i = 0; i < string.size(); ++i) {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z') string[i] = string[i] - 32;\n        if(string[i] >= 'A' && string[i] <=\
    \ 'Z') string[i] = string[i] - 64;\n    }\n    return string;\n}\nint main() {\n\
    \    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpg6wyf1bv: /tmp/tmpg6wyf1bv.cpp:16: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &c: string) {\n        char uppercase_char = (c == c) ? toupper(c) : tolower(c);\n\
    \        c = uppercase_char;\n    }\n    return string;\n}\nint main() {\n   \
    \ auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpt3kgsmas: /tmp/tmpt3kgsmas.cpp:16: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097908
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (unsigned int i = 0; i < (unsigned int)string.size(); i++)\n    if (string[i]\
    \ >= 'a' && string[i] <= 'z')\n      string[i] = string[i] - 32;\n    else if\
    \ (string[i] >= 'A' && string[i] <= 'Z')\n      string[i] = string[i] + 32;\n\
    \  return string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  std::reverse(string.begin(),\
    \ string.end());\n  std::string flipped_string;\n  for (auto &character : string)\n\
    \    if (character >= 'a' && character <= 'z')\n      flipped_string += character\
    \ - 'a' + 'A';\n    else if (character >= 'A' && character <= 'Z')\n      flipped_string\
    \ += character - 'A' + 'a';\n    else\n      flipped_string += character;\n  return\
    \ flipped_string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp3mbu41e5: /tmp/tmp3mbu41e5.cpp:21: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097908
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::map<char,\
    \ char> mapper;\n    for (char &c: string) {\n        mapper[c] = toupper(c);\n\
    \    }\n    return std::string(mapper.begin(), mapper.end());\n}\nint main() {\n\
    \    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/string:55,\n                 from\
    \ /usr/include/c++/9/bits/locale_classes.h:40,\n                 from /usr/include/c++/9/bits/ios_base.h:41,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp8trb1gul.cpp:2:\n/usr/include/c++/9/bits/basic_string.h: In instantiation\
    \ of \u2018static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*,\
    \ _Iterator, _Iterator) [with _Iterator = std::_Rb_tree_iterator<std::pair<const\
    \ char, char> >; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    :\n/usr/include/c++/9/bits/basic_string.tcc:225:6:   required from \u2018void\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator,\
    \ _InIterator, std::forward_iterator_tag) [with _FwdIterator = std::_Rb_tree_iterator<std::pair<const\
    \ char, char> >; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \n/usr/include/c++/9/bits/basic_string.h:251:11:   required from \u2018void std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type)\
    \ [with _InIterator = std::_Rb_tree_iterator<std::pair<const char, char> >; _CharT\
    \ = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \n/usr/include/c++/9/bits/basic_string.h:270:4:   required from \u2018void std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator =\
    \ std::_Rb_tree_iterator<std::pair<const char, char> >; _CharT = char; _Traits\
    \ = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\n/usr/include/c++/9/bits/basic_string.h:632:4:\
    \   required from \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterato"
  stdout: ''
  timestamp: 1660097908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ str1(string);\n    for (int i = 0; i < str1.size(); i++) {\n        if (str1[i]\
    \ >= 'a' && str1[i] <= 'z') {\n            str1[i] = str1[i] - 32;\n        }\n\
    \    }\n    return str1;\n}\nint main() {\n    auto candidate = flip_case;\n \
    \   assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\")) ==\
    \ (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpgclb1ogc: /tmp/tmpgclb1ogc.cpp:18: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &ch : string)\n        ch = ::toupper(ch);\n    return string;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpdvaqw81k: /tmp/tmpdvaqw81k.cpp:14: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n   assert(!string.empty());\n\
    \   // Create a char array from string.\n   //size_t length = string.length();\n\
    \   //char *arr = new char [length];\n   //strncpy(arr, string.c_str(), length);\n\
    \   //arr[length] = '\\0';\n   //return arr;\n   auto length = string.length();\n\
    \   auto arr = new char [length];\n   for (size_t i = 0; i < length; ++i) {\n\
    \      arr[i] = toupper(string[i]);\n   }\n   return arr;\n}\nint main() {\n \
    \   auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n  \
    \  assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpvba6a4b0: /tmp/tmpvba6a4b0.cpp:7: std::string flip_case(std::string):
    Assertion `!string.empty()'' failed.

    '
  stdout: ''
  timestamp: 1660097908
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n      string[i] = string[i] - 32;\n    }\n    else if (string[i]\
    \ >= 'A' && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    }\n  }\n\
    \  return string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097908
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ uppercase = string;\n    for (size_t i = 0; i < uppercase.size(); i++) {\n \
    \       if (uppercase[i] >= 'a' && uppercase[i] <= 'z') {\n            uppercase[i]\
    \ = toupper(uppercase[i]);\n        }\n        else if (uppercase[i] >= 'A' &&\
    \ uppercase[i] <= 'Z') {\n            uppercase[i] = tolower(uppercase[i]);\n\
    \        }\n    }\n    return uppercase;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n   size_t\
    \ pos = 0;\n   size_t length = string.length();\n   while (pos < length) {\n \
    \     if (string[pos] < 'A' || string[pos] > 'Z') {\n         string[pos] = string[pos]\
    \ ^ ('a' - 'A');\n      }\n      else string[pos] = string[pos] ^ ('A' - 'a');\n\
    \      pos++;\n   }\n   return string;\n}\nint main() {\n    auto candidate =\
    \ flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp8fci0w3m: /tmp/tmp8fci0w3m.cpp:21: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097909
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &char : string) {\n        std::swap(char, char >= 'a' && char <= 'z'\
    \ ? 'A' + char - 'a' : char >= 'A' && char <= 'Z' ? 'a' + char - 'A' : char);\n\
    \    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptbi4mlm_.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmptbi4mlm_.cpp:7:16: error: expected unqualified-id before \u2018char\u2019\
    \n    7 |     for (auto &char : string) {\n      |                ^~~~\n/tmp/tmptbi4mlm_.cpp:7:16:\
    \ error: expected \u2018;\u2019 before \u2018char\u2019\n    7 |     for (auto\
    \ &char : string) {\n      |                ^~~~\n      |                ;\n/tmp/tmptbi4mlm_.cpp:7:21:\
    \ error: expected unqualified-id before \u2018:\u2019 token\n    7 |     for (auto\
    \ &char : string) {\n      |                     ^\n/tmp/tmptbi4mlm_.cpp:7:29:\
    \ error: expected \u2018;\u2019 before \u2018)\u2019 token\n    7 |     for (auto\
    \ &char : string) {\n      |                             ^\n      |          \
    \                   ;\n/tmp/tmptbi4mlm_.cpp:8:19: error: expected primary-expression\
    \ before \u2018char\u2019\n    8 |         std::swap(char, char >= 'a' && char\
    \ <= 'z' ? 'A' + char - 'a' : char >= 'A' && char <= 'Z' ? 'a' + char - 'A' :\
    \ char);\n      |                   ^~~~\n/tmp/tmptbi4mlm_.cpp:8:25: error: expected\
    \ primary-expression before \u2018char\u2019\n    8 |         std::swap(char,\
    \ char >= 'a' && char <= 'z' ? 'A' + char - 'a' : char >= 'A' && char <= 'Z' ?\
    \ 'a' + char - 'A' : char);\n      |                         ^~~~\n"
  stdout: ''
  timestamp: 1660097908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (size_t i = 0; i < string.length(); i++) {\n    if (string[i] == 'a') {\n  \
    \    string[i] = 'A';\n    } else if (string[i] == 'A') {\n      string[i] = 'a';\n\
    \    }\n  }\n  return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpoc39meyq: /tmp/tmpoc39meyq.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097908
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ result = \"\";\n    for (auto c : string)\n        result += isupper(c) ? tolower(c)\
    \ : toupper(c);\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpodirvb8q.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpodirvb8q.cpp:7:11: error: expected \u2018;\u2019 before \u2018result\u2019\
    \n    7 |     string result = \"\";\n      |           ^~~~~~~\n      |      \
    \     ;\n/tmp/tmpodirvb8q.cpp:9:9: error: \u2018result\u2019 was not declared\
    \ in this scope\n    9 |         result += isupper(c) ? tolower(c) : toupper(c);\n\
    \      |         ^~~~~~\n/tmp/tmpodirvb8q.cpp:10:12: error: \u2018result\u2019\
    \ was not declared in this scope\n   10 |     return result;\n      |        \
    \    ^~~~~~\n"
  stdout: ''
  timestamp: 1660097908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::transform(string.begin(),\
    \ string.end(), string.begin(), ::toupper);\n    std::transform(string.begin(),\
    \ string.end(), string.begin(), ::tolower);\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpr3yna2sh: /tmp/tmpr3yna2sh.cpp:14: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097906
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z')\n      string[i] = string[i] - ('a' - 'A');\n    if (string[i] >= 'A'\
    \ && string[i] <= 'Z')\n      string[i] = string[i] + ('a' - 'A');\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp4iswydz1: /tmp/tmp4iswydz1.cpp:18: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == 'a')\n            s[i] = 'A';\n        else if (s[i] == 'A')\n          \
    \  s[i] = 'a';\n        else if (s[i] == 'e')\n            s[i] = 'E';\n     \
    \   else if (s[i] == 'E')\n            s[i] = 'e';\n        else if (s[i] == 'i')\n\
    \            s[i] = 'I';\n        else if (s[i] == 'I')\n            s[i] = 'i';\n\
    \        else if (s[i] == 'o')\n            s[i] = 'O';\n        else if (s[i]\
    \ == 'O')\n            s[i] = 'o';\n        else if (s[i] == 'u')\n          \
    \  s[i] = 'U';\n        else if (s[i] == 'U')\n            s[i] = 'u';\n     \
    \   else if (s[i] == 'y')\n            s[i] = 'Y';\n        else if (s[i] == 'Y')\n\
    \            s[i] = 'y';\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp97jymv8q: /tmp/tmp97jymv8q.cpp:39: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097909
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (int i = 0; i < string.length(); ++i) {\n        if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i]\
    \ >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n   \
    \     }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097909
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  std::string\
    \ res;\n  char c;\n\n  for (int i = 0; i < string.length(); ++i) {\n    c = string[i];\n\
    \    if (c >= 'a' && c <= 'z') {\n      c += 32;\n    } else if (c >= 'A' && c\
    \ <= 'Z') {\n      c -= 32;\n    }\n    res += c;\n  }\n\n  return res;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpjik0pejo: /tmp/tmpjik0pejo.cpp:25: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097909
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ lowercase_string = \"\", uppercase_string = \"\";\n    for (int i = 0; i < string.length();\
    \ i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            lowercase_string\
    \ += string[i] - 32;\n            uppercase_string += string[i];\n        } else\
    \ {\n            lowercase_string += string[i];\n            uppercase_string\
    \ += string[i] + 32;\n        }\n    }\n    return lowercase_string + uppercase_string;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp7e4ih3ne: /tmp/tmp7e4ih3ne.cpp:22: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++) {\n    char c = string[i];\n    if (c\
    \ >= 'a' && c <= 'z')\n      string[i] = (c ^ 32) - 32;\n    if (c >= 'A' && c\
    \ <= 'Z')\n      string[i] = (c ^ 32) - 32;\n  }\n  return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpigbd19a4: /tmp/tmpigbd19a4.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    //\
    \ Initialize result with empty string.\n    std::string result = \"\";\n    //\
    \ Iterate through every character in the string.\n    for (const char& c : string)\n\
    \        // Convert the character into lowercase if it is not uppercase.\n   \
    \     if (c >= 'A' && c <= 'Z')\n            result += static_cast<char>((c -\
    \ 'A') + ('A' - 'a'));\n        // Convert the character into uppercase if it\
    \ is lowercase.\n        else result += static_cast<char>((c - 'a') + ('Z' - 'A'));\n\
    \    // Return result.\n    return result;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmphqs7le5m: /tmp/tmphqs7le5m.cpp:22: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097909
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  std::ostringstream\
    \ oss;\n  std::transform(string.cbegin(), string.cend(), std::ostream_iterator<char>(oss),\n\
    \                 [](char c) { return (c >= 'a' && c <= 'z') ? c ^ 'A' : c ^ 'a';\
    \ });\n  return oss.str();\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpjxlhklo4: /tmp/tmpjxlhklo4.cpp:15: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097909
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    bool\
    \ flag = true;\n    for (auto &c : string)\n    {\n        if (flag == true)\n\
    \        {\n            c = std::toupper(c);\n        }\n        else\n      \
    \  {\n            c = std::tolower(c);\n        }\n        flag = !flag;\n   \
    \ }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n  \
    \  assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\")) ==\
    \ (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpguuk5owp: /tmp/tmpguuk5owp.cpp:25: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097908
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n   std::transform(string::begin(string),string::end(string),string::begin(string),::toupper);\n\
    \   std::transform(string::begin(string),string::end(string),string::begin(string),::tolower);\n\
    \   return string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk5fuaa88.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpk5fuaa88.cpp:7:19: error: \u2018string\u2019 is not a class, namespace,\
    \ or enumeration\n    7 |    std::transform(string::begin(string),string::end(string),string::begin(string),::toupper);\n\
    \      |                   ^~~~~~\n/tmp/tmpk5fuaa88.cpp:7:41: error: \u2018string\u2019\
    \ is not a class, namespace, or enumeration\n    7 |    std::transform(string::begin(string),string::end(string),string::begin(string),::toupper);\n\
    \      |                                         ^~~~~~\n/tmp/tmpk5fuaa88.cpp:7:61:\
    \ error: \u2018string\u2019 is not a class, namespace, or enumeration\n    7 |\
    \    std::transform(string::begin(string),string::end(string),string::begin(string),::toupper);\n\
    \      |                                                             ^~~~~~\n\
    /tmp/tmpk5fuaa88.cpp:8:19: error: \u2018string\u2019 is not a class, namespace,\
    \ or enumeration\n    8 |    std::transform(string::begin(string),string::end(string),string::begin(string),::tolower);\n\
    \      |                   ^~~~~~\n/tmp/tmpk5fuaa88.cpp:8:41: error: \u2018string\u2019\
    \ is not a class, namespace, or enumeration\n    8 |    std::transform(string::begin(string),string::end(string),string::begin(string),::tolower);\n\
    \      |                                         ^~~~~~\n/tmp/tmpk5fuaa88.cpp:8:61:\
    \ error: \u2018string\u2019 is not a class, namespace, or enumeration\n    8 |\
    \    std::transform(string::begin(string),string::end(string),string::begin(string),::tolower);\n\
    \      |                                                             ^~~~~~\n"
  stdout: ''
  timestamp: 1660097908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (int i = 0; i < string.length(); ++i) {\n        string [i] = toupper(string\
    \ [i]);\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp7w147qh5: /tmp/tmp7w147qh5.cpp:15: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097908
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ newString = \"\";\n    for (size_t i = 0; i < string.length(); i++) {\n    \
    \    if (string[i] >= 'a' && string[i] <= 'z')\n            newString += 'A' +\
    \ string[i] - 'a';\n        else if (string[i] >= 'A' && string[i] <= 'Z')\n \
    \           newString += 'a' + string[i] - 'A';\n        else if (string[i] >=\
    \ '0' && string[i] <= '9')\n            newString += string[i];\n        else\n\
    \            newString += string[i];\n    }\n    return newString;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (std::string::size_type i = 0; i < string.size(); ++i) {\n        const char\
    \ c = string[i];\n        if (c >= 'a' && c <= 'z') string[i] = (c ^ 32) + 0x20;\n\
    \        else if (c >= 'A' && c <= 'Z') string[i] = (c ^ 32) + 0x20;\n       \
    \ else if (c >= '0' && c <= '9') string[i] = (c ^ 32) + 0x20;\n    }\n    return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpc6oza1bt: /tmp/tmpc6oza1bt.cpp:18: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ rev(string);\n    for (auto &c : rev) {\n        if ('a' <= c && c <= 'z') {\n\
    \            c = c + 'A' - 'a';\n        }\n        if ('A' <= c && c <= 'Z')\
    \ {\n            c = c + 'a' - 'A';\n        }\n    }\n    return rev;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp5andkl7o: /tmp/tmp5andkl7o.cpp:21: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097909
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    std::transform(s.begin(), s.end(), s.begin(), [](char c) {\n\
    \        return toupper(c); });\n    return s;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpr0stns9s: /tmp/tmpr0stns9s.cpp:15: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097909
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (std::string::size_type i = 0; i < string.size(); ++i) {\n        if (string[i]\
    \ == string::toupper(string[i])) {\n            string[i] = string[i] + string::tolower(string[i]);\n\
    \        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk5faqgc_.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpk5faqgc_.cpp:8:26: error: \u2018string\u2019 is not a class, namespace,\
    \ or enumeration\n    8 |         if (string[i] == string::toupper(string[i]))\
    \ {\n      |                          ^~~~~~\n/tmp/tmpk5faqgc_.cpp:9:37: error:\
    \ \u2018string\u2019 is not a class, namespace, or enumeration\n    9 |      \
    \       string[i] = string[i] + string::tolower(string[i]);\n      |         \
    \                            ^~~~~~\n"
  stdout: ''
  timestamp: 1660097908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    //\
    \ Write your code here.\n    return string;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpbab3980n: /tmp/tmpbab3980n.cpp:13: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097909
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::map<char,\
    \ char> char_map;\n    for (auto &c: string) {\n        char_map[c] = toupper(c);\n\
    \    }\n    return std::string(std::begin(char_map), std::end(char_map));\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/string:55,\n                 from\
    \ /usr/include/c++/9/bits/locale_classes.h:40,\n                 from /usr/include/c++/9/bits/ios_base.h:41,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp4doyesht.cpp:2:\n/usr/include/c++/9/bits/basic_string.h: In instantiation\
    \ of \u2018static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*,\
    \ _Iterator, _Iterator) [with _Iterator = std::_Rb_tree_iterator<std::pair<const\
    \ char, char> >; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    :\n/usr/include/c++/9/bits/basic_string.tcc:225:6:   required from \u2018void\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator,\
    \ _InIterator, std::forward_iterator_tag) [with _FwdIterator = std::_Rb_tree_iterator<std::pair<const\
    \ char, char> >; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \n/usr/include/c++/9/bits/basic_string.h:251:11:   required from \u2018void std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type)\
    \ [with _InIterator = std::_Rb_tree_iterator<std::pair<const char, char> >; _CharT\
    \ = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \n/usr/include/c++/9/bits/basic_string.h:270:4:   required from \u2018void std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator =\
    \ std::_Rb_tree_iterator<std::pair<const char, char> >; _CharT = char; _Traits\
    \ = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\n/usr/include/c++/9/bits/basic_string.h:632:4:\
    \   required from \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterato"
  stdout: ''
  timestamp: 1660097908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto c : string) {\n        if (c >= 'a' && c <= 'z') {\n            c += ('a'\
    \ - 'A');\n        } else if (c >= 'A' && c <= 'Z') {\n            c -= ('a' -\
    \ 'A');\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpcbhs95p7: /tmp/tmpcbhs95p7.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097909
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (char &c : string) {\n    if (('A' <= c && c <= 'Z')) {\n      c = static_cast<char>(c\
    \ - 'A' + 'a');\n    }\n    else if (('a' <= c && c <= 'z')) {\n      c = static_cast<char>(c\
    \ - 'a' + 'A');\n    }\n  }\n  return string;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ output(strlen(string.c_str()), 0);\n    for (auto it = string.begin(); it !=\
    \ string.end(); ++it) {\n        if (isupper(*it)) {\n            output[0] =\
    \ toupper(*it);\n        }\n        else if (islower(*it)) {\n            output[0]\
    \ = tolower(*it);\n        }\n        ++it;\n    }\n    return output;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpqqztdr4v: /tmp/tmpqqztdr4v.cpp:22: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097909
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n      string[i] = string[i] - 32;\n    }\n    else if (string[i]\
    \ >= 'A' && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    }\n  }\n\
    \  return string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (char c : string) {\n    if (c >= 'A' && c <= 'Z') {\n      c = c - 32;\n  \
    \  } else if (c >= 'a' && c <= 'z') {\n      c = c + 32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp58moygqg: /tmp/tmp58moygqg.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097909
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ t;\n    for(size_t i = 0; i < string.size(); ++i) {\n        if (string[i] >=\
    \ 'a' && string[i] <= 'z') {\n            t += string[i] - 'a' + 'A';\n      \
    \  } else {\n            t += string[i];\n        }\n    }\n    return t;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_dpr1h9x.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp_dpr1h9x.cpp:7:11: error: expected \u2018;\u2019 before \u2018t\u2019\
    \n    7 |     string t;\n      |           ^~\n      |           ;\n/tmp/tmp_dpr1h9x.cpp:10:13:\
    \ error: \u2018t\u2019 was not declared in this scope\n   10 |             t +=\
    \ string[i] - 'a' + 'A';\n      |             ^\n/tmp/tmp_dpr1h9x.cpp:12:13: error:\
    \ \u2018t\u2019 was not declared in this scope\n   12 |             t += string[i];\n\
    \      |             ^\n/tmp/tmp_dpr1h9x.cpp:15:12: error: \u2018t\u2019 was not\
    \ declared in this scope; did you mean \u2018tm\u2019?\n   15 |     return t;\n\
    \      |            ^\n      |            tm\n"
  stdout: ''
  timestamp: 1660097908
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  std::string\
    \ output = string;\n  for (int i = 0, n = string.length(); i < n; i++) {\n   \
    \ if (string[i] >= 'a' && string[i] <= 'z')\n      output[i] = string[i] - 32;\n\
    \    else if (string[i] >= 'A' && string[i] <= 'Z')\n      output[i] = string[i]\
    \ + 32;\n  }\n  return output;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097909
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'A' && string[i]\
    \ <= 'Z') {\n            string[i] = string[i] - 32;\n        } else if (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] + 32;\n   \
    \     }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmppdxxi8bp: /tmp/tmppdxxi8bp.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097909
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++)\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z')\n      string[i] = string[i] - 32;\n    if (string[i] >= 'A' && string[i]\
    \ <= 'Z')\n      string[i] = string[i] + 32;\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpptmxf18g.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpptmxf18g.cpp:10:16: error: \u2018i\u2019 was not declared in this scope\n\
    \   10 |     if (string[i] >= 'A' && string[i] <= 'Z')\n      |              \
    \  ^\n"
  stdout: ''
  timestamp: 1660097909
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n      string[i] = string[i] - 32;\n    } else if (string[i] >= 'A'\
    \ && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ temp = string;\n    std::transform(temp.begin(), temp.end(), temp.begin(), ::toupper);\n\
    \    std::transform(temp.begin(), temp.end(), temp.begin(), ::tolower);\n    return\
    \ temp;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpnqtoju9r: /tmp/tmpnqtoju9r.cpp:15: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097910
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    size_t\
    \ pos = 0;\n    std::string word = \"\";\n    while ((pos = string.find(\" \"\
    , pos)) != std::string::npos) {\n        word.append(1, string[pos]);\n      \
    \  ++pos;\n    }\n    string.resize(string.size() - word.size());\n    string\
    \ += \" \" + word;\n    pos = 0;\n    while ((pos = string.find(\" \", pos)) !=\
    \ std::string::npos) {\n        string.insert(pos + 1, string[pos], \"A\");\n\
    \        ++pos;\n    }\n    return string;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphuwvh1kg.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmphuwvh1kg.cpp:17:48: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::insert(size_t, __gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type&, const char [2])\u2019\n   17 |         string.insert(pos\
    \ + 1, string[pos], \"A\");\n      |                                         \
    \       ^\nIn file included from /usr/include/c++/9/string:55,\n             \
    \    from /usr/include/c++/9/bits/locale_classes.h:40,\n                 from\
    \ /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmphuwvh1kg.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1538:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::size_type, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1538 |       insert(const_iterator __p, size_t"
  stdout: ''
  timestamp: 1660097910
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (size_t i = 0; i < string.size(); i++) {\n        char c = string[i];\n    \
    \    if (islower(c)) {\n            string[i] = toupper(c);\n        } else if\
    \ (isupper(c)) {\n            string[i] = tolower(c);\n        }\n    }\n    return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097910
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (auto &c : s) {\n        if ('a' <= c && c <= 'z') {\n\
    \            c ^= 32;\n        }\n        else if (('A' <= c && c <= 'Z')) {\n\
    \            c ^= 32;\n        }\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7srcwst0.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp7srcwst0.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmp7srcwst0.cpp:8:20: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (auto &c : s) {\n      |                    ^\n/tmp/tmp7srcwst0.cpp:16:12:\
    \ error: \u2018s\u2019 was not declared in this scope\n   16 |     return s;\n\
    \      |            ^\n"
  stdout: ''
  timestamp: 1660097910
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for(unsigned\
    \ int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n            string[i] = string[i] - 32;\n    }\n    return string;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpcr_112hl: /tmp/tmpcr_112hl.cpp:16: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097910
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n      string[i] = string[i] - 32;\n    }\n    if (string[i] >= 'A'\
    \ && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpuv32xigh: /tmp/tmpuv32xigh.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    size_t\
    \ start = 0;\n    size_t end = string.size();\n    std::string result = \"\";\n\
    \    while (start < end) {\n        if (string[start] >= 'A' && string[start]\
    \ <= 'Z')\n            result += string[start] ^ 'a';\n        else if (string[start]\
    \ >= 'a' && string[start] <= 'z')\n            result += string[start] ^ 'A';\n\
    \        result += string[start];\n        start++;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpp90qrjcm: /tmp/tmpp90qrjcm.cpp:23: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097910
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result = string;\n    for (std::string::size_type i = 0; i != string.length();\
    \ i++) {\n        if (string[i] == string::toupper(string[i])) {\n           \
    \ result[i] = string[i];\n            result[i] += 'A' - 'a';\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n  \
    \  assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\")) ==\
    \ (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl7wegzw4.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpl7wegzw4.cpp:9:26: error: \u2018string\u2019 is not a class, namespace,\
    \ or enumeration\n    9 |         if (string[i] == string::toupper(string[i]))\
    \ {\n      |                          ^~~~~~\n"
  stdout: ''
  timestamp: 1660097910
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &chr : string) {\n        if (chr >= 'a' && chr <= 'z') {\n          \
    \  chr = (chr - 'a') + 'A';\n        }\n        else if (chr >= 'A' && chr <=\
    \ 'Z') {\n            chr = (chr - 'A') + 'a';\n        }\n    }\n    return string;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097910
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  assert(string.length()\
    \ > 0);\n  string temp;\n  for (size_t i = 0; i < string.length(); i++) {\n  \
    \  if (islower(string[i]))\n      temp = temp + toupper(string[i]);\n    else\
    \ if (isupper(string[i]))\n      temp = temp + tolower(string[i]);\n    else\n\
    \      temp = temp + string[i];\n  }\n  return temp;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2r1z1aw8.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp2r1z1aw8.cpp:8:9: error: expected \u2018;\u2019 before \u2018temp\u2019\
    \n    8 |   string temp;\n      |         ^~~~~\n      |         ;\n/tmp/tmp2r1z1aw8.cpp:11:7:\
    \ error: \u2018temp\u2019 was not declared in this scope\n   11 |       temp =\
    \ temp + toupper(string[i]);\n      |       ^~~~\n/tmp/tmp2r1z1aw8.cpp:13:7: error:\
    \ \u2018temp\u2019 was not declared in this scope\n   13 |       temp = temp +\
    \ tolower(string[i]);\n      |       ^~~~\n/tmp/tmp2r1z1aw8.cpp:15:7: error: \u2018\
    temp\u2019 was not declared in this scope\n   15 |       temp = temp + string[i];\n\
    \      |       ^~~~\n/tmp/tmp2r1z1aw8.cpp:17:10: error: \u2018temp\u2019 was not\
    \ declared in this scope\n   17 |   return temp;\n      |          ^~~~\n"
  stdout: ''
  timestamp: 1660097910
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (int i = 0; i < string.length(); i++)\n        if (string[i] >= 'A' && string[i]\
    \ <= 'Z')\n            string[i] = string[i] + 32;\n        else if (string[i]\
    \ >= 'a' && string[i] <= 'z')\n            string[i] = string[i] - 32;\n    return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097910
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ new_string;\n    new_string.resize(string.length());\n    for (int i = 0; i\
    \ < string.length(); i++) {\n        new_string[i] = string[i] >= 'a' && string[i]\
    \ <= 'z' ? 'A' : string[i] >= 'A' && string[i] <= 'Z' ? 'a' : string[i];\n   \
    \ }\n    return new_string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpejlmcers: /tmp/tmpejlmcers.cpp:17: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    bool\
    \ upper = true;\n    for (std::string::size_type i = 0; i < string.length(); i++)\
    \ {\n        upper = string[i] >= 'A' && string[i] <= 'Z' ? !upper : upper;\n\
    \        string[i] = upper ? (string[i] - 'A' + 'a') : (string[i] + 'A' - 'a');\n\
    \    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpjz83k_o5: /tmp/tmpjz83k_o5.cpp:17: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto c : string) {\n        if (c >= 'a' && c <= 'z') {\n            c ^= 32;\n\
    \        }\n        if (c >= 'A' && c <= 'Z') {\n            c ^= 32;\n      \
    \  }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpnvtlstlo: /tmp/tmpnvtlstlo.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n\tstd::string\
    \ result(string);\n\tfor(auto &c : result) {\n\t\tif(c >= 'A' && c <= 'Z')\n\t\
    \t\tc = c - 32;\n\t\telse if(c >= 'a' && c <= 'z')\n\t\t\tc = c + 32;\n\t}\n\t\
    return result;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpsohnft1g: /tmp/tmpsohnft1g.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (auto &c : string) {\n    if (c >= 'A' && c <= 'Z') {\n      c -= 32;\n    }\
    \ else if (c >= 'a' && c <= 'z') {\n      c += 32;\n    }\n  }\n  return string;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp3c9og1pa: /tmp/tmp3c9og1pa.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ ans = \"\";\n    for (auto &c : string)\n    {\n        if (('a' <= c && c <=\
    \ 'z') || ('A' <= c && c <= 'Z'))\n        {\n            c = toupper(c);\n  \
    \      }\n        else\n        {\n            c = tolower(c);\n        }\n  \
    \      ans += c;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpk8b7ji34: /tmp/tmpk8b7ji34.cpp:25: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::ostringstream\
    \ oss;\n    for (size_t i = 0; i < string.length(); i++) {\n        char ch =\
    \ string[i];\n        if (ch >= 'a' && ch <= 'z') {\n            oss << std::toupper(ch);\n\
    \        } else if (ch >= 'A' && ch <= 'Z') {\n            oss << std::tolower(ch);\n\
    \        } else {\n            oss << ch;\n        }\n    }\n    return oss.str();\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp55cxykuy: /tmp/tmp55cxykuy.cpp:23: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (std::string::iterator it = string.begin(); it != string.end(); it++) {\n  \
    \      if (*it == 'a' || *it == 'A') {\n            *it = 'A';\n        } else\
    \ {\n            *it = 'a';\n        }\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp9rh5p2pq: /tmp/tmp9rh5p2pq.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (auto &i : string)\n    i = toupper(i);\n  return string;\n}\nint main() {\n\
    \    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp32nxl5dr: /tmp/tmp32nxl5dr.cpp:14: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097911
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    size_t\
    \ start = 0;\n    size_t end = string.size();\n    for ( ; start < end; start++)\
    \ {\n        char c = string[start];\n        if (tolower(c) == c) {\n       \
    \     string[start] = toupper(c);\n        }\n        if (toupper(c) == c) {\n\
    \            string[start] = tolower(c);\n        }\n    }\n    return string;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.size(); i++) {\n    if (islower(string[i])) {\n     \
    \ string[i] = toupper(string[i]);\n    }\n    if (isupper(string[i])) {\n    \
    \  string[i] = tolower(string[i]);\n    }\n  }\n  return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp2pmqp6o5: /tmp/tmp2pmqp6o5.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (char &c : string)\n        c = toupper(c);\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp420ejb6h: /tmp/tmp420ejb6h.cpp:14: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::ostringstream\
    \ os;\n    for (auto c : string) {\n        if ('A' <= c && c <= 'Z')\n      \
    \      os << std::toupper(c);\n        else if ('a' <= c && c <= 'z')\n      \
    \      os << std::tolower(c);\n        else\n            os << c;\n    }\n   \
    \ return os.str();\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpntqo3ymb: /tmp/tmpntqo3ymb.cpp:21: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result=\"\";\n    for(int i=0;i<string.length();i++){\n        char c=string[i];\n\
    \        if (c=='a'||c=='e'||c=='i'||c=='o'||c=='u'||c=='A'||c=='E'||c=='I'||c=='O'||c=='U'){\n\
    \            result += toupper(c);\n        }\n        else if (c=='B'){\n   \
    \         result += toupper(c+1);\n        }\n        else{\n            result\
    \ += tolower(c);\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpd8s3ac4t: /tmp/tmpd8s3ac4t.cpp:25: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097911
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n\tfor\
    \ (int i = 0; i < string.length(); i++) {\n\t\tchar c = string[i];\n\t\tif (islower(c))\
    \ {\n\t\t\tstring[i] = toupper(c);\n\t\t}\n\t\tif (isupper(c)) {\n\t\t\tstring[i]\
    \ = tolower(c);\n\t\t}\n\t}\n\treturn string;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097911
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ out = \"\";\n    for (auto &c: string) {\n        if ('a'<= c && c <= 'z') {\n\
    \            out += (c + 'A' - 'a');\n        } else {\n            out += c;\n\
    \        }\n    }\n    return out;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1j_40fx2.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp1j_40fx2.cpp:7:11: error: expected \u2018;\u2019 before \u2018out\u2019\
    \n    7 |     string out = \"\";\n      |           ^~~~\n      |           ;\n\
    /tmp/tmp1j_40fx2.cpp:10:13: error: \u2018out\u2019 was not declared in this scope\n\
    \   10 |             out += (c + 'A' - 'a');\n      |             ^~~\n/tmp/tmp1j_40fx2.cpp:12:13:\
    \ error: \u2018out\u2019 was not declared in this scope\n   12 |             out\
    \ += c;\n      |             ^~~\n/tmp/tmp1j_40fx2.cpp:15:12: error: \u2018out\u2019\
    \ was not declared in this scope\n   15 |     return out;\n      |           \
    \ ^~~\n"
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  std::string\
    \ result = \"\";\n  for (size_t i = 0; i < string.length(); i++) {\n    result\
    \ += toupper(string[i]) + string[i];\n  }\n  return result;\n}\nint main() {\n\
    \    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp6e2w23k4: /tmp/tmp6e2w23k4.cpp:16: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (char ch : string)\n    ch = std::toupper(ch);\n  return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpekwy_phi: /tmp/tmpekwy_phi.cpp:14: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097912
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &ch: string) {\n        if (ch >= 'a' && ch <= 'z') {\n            ch\
    \ = ch - ('a' - 'A');\n        }\n        if (ch >= 'A' && ch <= 'Z') {\n    \
    \        ch = ch - ('A' - 'a');\n        }\n        cout << ch;\n    }\n    return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsx33_2f2.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpsx33_2f2.cpp:14:9: error: \u2018cout\u2019 was not declared in this\
    \ scope; did you mean \u2018std::cout\u2019?\n   14 |         cout << ch;\n  \
    \    |         ^~~~\n      |         std::cout\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:75,\n\
    \                 from /tmp/tmpsx33_2f2.cpp:2:\n/usr/include/c++/9/iostream:61:18:\
    \ note: \u2018std::cout\u2019 declared here\n   61 |   extern ostream cout;  ///\
    \ Linked to standard output\n      |                  ^~~~\n"
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (size_t i = 0; i < string.length(); i++) {\n        switch (string[i]) {\n \
    \           case 'a':\n                string[i] = 'A';\n                break;\n\
    \            case 'b':\n                string[i] = 'B';\n                break;\n\
    \            case 'c':\n                string[i] = 'C';\n                break;\n\
    \            case 'd':\n                string[i] = 'D';\n                break;\n\
    \            case 'e':\n                string[i] = 'E';\n                break;\n\
    \            case 'f':\n                string[i] = 'F';\n                break;\n\
    \            case 'g':\n                string[i] = 'G';\n                break;\n\
    \            case 'h':\n                string[i] = 'H';\n                break;\n\
    \            case 'i':\n                string[i] = 'I';\n                break;\n\
    \            case 'j':\n                string[i] = 'J';\n                break;\n\
    \            case 'k':\n                string[i] = 'K';\n                break;\n\
    \            case 'l':\n                string[i] = 'L';\n                break;\n\
    \            case 'm':\n                string[i] = 'M';\n                break;\n\
    \            case 'n':\n                string[i] = 'N';\n                break;\n\
    \            case 'o':\n                string[i] = 'O';\n                break;\n\
    \            case 'p':\n                string[i] = 'P';\n                break;\n\
    \            case 'q':\n                string[i] = 'Q';\n                break;\n\
    \            case 'r':\n                string[i] = 'R';\n                break;\n\
    \            case 's':\n                string[i] = 'S';\n                break;\n\
    \            case 't':\n                string[i] = 'T';\n                break;\n\
    \            case 'u':\n                string[i] = 'U';\n                break;\n\
    \            case 'v':\n                string[i] = 'V';\n                break;\n\
    \            case 'w':\n                string[i] = 'W';\n                break;\n\
    \            case 'x':\n                string[i] = 'X';\n                break;\n\
    \            case 'y':\n                string[i] = 'Y';\n                break;\n\
    \            case 'z':\n                string[i] = 'Z';\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return string;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpefucgb8o: /tmp/tmpefucgb8o.cpp:96: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    size_t\
    \ pos = 0;\n    while (pos < string.size()) {\n        if ((string[pos] < 'a')\
    \ || (string[pos] > 'z'))\n            string[pos] ^= 0x20;\n        else\n  \
    \          string[pos] ^= 0x30;\n        pos += 1;\n    }\n    return string;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp6q4zup5j: /tmp/tmp6q4zup5j.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (size_t i = 0; i < string.size(); ++i) {\n        if (string[i] >= 'a' && string[i]\
    \ <= 'z')\n            string[i] += 32;\n        else if (string[i] >= 'A' &&\
    \ string[i] <= 'Z')\n            string[i] -= 32;\n    }\n    return string;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp4dyswtrw: /tmp/tmp4dyswtrw.cpp:18: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097912
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n\tstd::string\
    \ output = string;\n\tstd::transform(input.begin(), input.end(), output.begin(),\
    \ [](int ch) {\n\t\tif (islower(ch))\n\t\t\treturn toupper(ch);\n\t\treturn tolower(ch);\n\
    \t});\n\treturn output;\n}\nint main() {\n    auto candidate = flip_case;\n  \
    \  assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\")) ==\
    \ (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9jq22apa.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp9jq22apa.cpp:8:17: error: \u2018input\u2019 was not declared in this\
    \ scope\n    8 |  std::transform(input.begin(), input.end(), output.begin(), [](int\
    \ ch) {\n      |                 ^~~~~\n"
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (size_t i = 0; i < string.length(); i++) {\n        const auto c = string[i];\n\
    \        if (c >= 'A' && c <= 'Z') {\n            string[i] = (c - 'A') + 'a';\n\
    \        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpgqji8gwc: /tmp/tmpgqji8gwc.cpp:18: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097912
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for(std::string::size_type\
    \ i = 0; i < string.length(); i++) {\n        if(string[i] == string::toupper(string[i]))\n\
    \            string[i] = string[i] + 32;\n        else if (string[i] == string::tolower(string[i]))\n\
    \            string[i] = string[i] - 32;\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppjqa6f13.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmppjqa6f13.cpp:8:25: error: \u2018string\u2019 is not a class, namespace,\
    \ or enumeration\n    8 |         if(string[i] == string::toupper(string[i]))\n\
    \      |                         ^~~~~~\n/tmp/tmppjqa6f13.cpp:10:31: error: \u2018\
    string\u2019 is not a class, namespace, or enumeration\n   10 |         else if\
    \ (string[i] == string::tolower(string[i]))\n      |                         \
    \      ^~~~~~\n"
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (size_t i = 0; i < string.length(); ++i) {\n        auto ch = string[i];\n \
    \       if (ch >= 'a' && ch <= 'z') {\n            string[i] = ch - 'a'; // Convert\
    \ to uppercase.\n        }\n        if (ch >= 'A' && ch <= 'Z') {\n          \
    \  string[i] = ch - 'A'; // Convert to lowercase.\n        }\n    }\n    return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpckshu12z: /tmp/tmpckshu12z.cpp:21: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (char &c : string) c = toupper(c);\n    return string;\n}\nint main() {\n  \
    \  auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n   \
    \ assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These\
    \ violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpojvgxeq7: /tmp/tmpojvgxeq7.cpp:13: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097912
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  string\
    \ result(string);\n  for (int i = 0; i < result.length(); i++) {\n    if (result[i]\
    \ >= 'a' && result[i] <= 'z') {\n      result[i] = result[i] + 'A' - 'a';\n  \
    \  } else if (result[i] >= 'A' && result[i] <= 'Z') {\n      result[i] = result[i]\
    \ + 'a' - 'A';\n    }\n  }\n  return result;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf9l2gm4s.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpf9l2gm4s.cpp:7:9: error: expected \u2018;\u2019 before \u2018result\u2019\
    \n    7 |   string result(string);\n      |         ^~~~~~~\n      |         ;\n\
    /tmp/tmpf9l2gm4s.cpp:8:23: error: \u2018result\u2019 was not declared in this\
    \ scope\n    8 |   for (int i = 0; i < result.length(); i++) {\n      |      \
    \                 ^~~~~~\n/tmp/tmpf9l2gm4s.cpp:15:10: error: \u2018result\u2019\
    \ was not declared in this scope\n   15 |   return result;\n      |          ^~~~~~\n"
  stdout: ''
  timestamp: 1660097911
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (size_t i = 0; i < string.length(); i++) {\n        std::string character =\
    \ string[i];\n        bool is_upper = (character >= 'A' && character <= 'Z');\n\
    \        bool is_lower = (character >= 'a' && character <= 'z');\n        if (is_upper)\n\
    \            character = character - ('A' - 'a');\n        if (is_lower)\n   \
    \         character = character - ('a' - 'A');\n        string[i] = character;\n\
    \    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi96yv4ve.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpi96yv4ve.cpp:8:41: error: conversion from \u2018__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type\u2019 {aka \u2018char\u2019} to non-scalar type \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} requested\n    8 |      \
    \   std::string character = string[i];\n      |                              \
    \           ^\n/tmp/tmpi96yv4ve.cpp:9:36: error: no match for \u2018operator>=\u2019\
    \ (operand types are \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } and \u2018char\u2019)\n    9 |         bool is_upper = (character >= 'A' &&\
    \ character <= 'Z');\n      |                          ~~~~~~~~~ ^~ ~~~\n    \
    \  |                          |            |\n      |                        \
    \  |            char\n      |                          std::string {aka std::__cxx11::basic_string<char>}\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpi96yv4ve.cpp:2:\n/usr/include/c++/9/bits/regex.h:1070:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator>=(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1070 |     operator>=(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1070:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpi96yv4ve.cpp:9:39:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   \
    \ 9 |         bool is_upper = (character >= 'A' && character <= 'Z');\n      |\
    \                                       ^~~\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpi96yv4ve.cpp:2:\n/usr/include/c++/9/bits/regex.h:1148:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cx"
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  std::reverse(string.begin(),\
    \ string.end());\n  std::transform(string.begin(), string.end(), string.begin(),\
    \ ::toupper);\n  std::transform(string.begin(), string.end(), string.begin(),\
    \ ::tolower);\n  return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpqv63j5kb: /tmp/tmpqv63j5kb.cpp:15: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    //\
    \ For each character, append it to lowercase string.\n    std::string new_string\
    \ = \"\";\n    for (char character : string) {\n        if (character >= 'a' &&\
    \ character <= 'z')\n            new_string += tolower(character);\n        else\n\
    \            new_string += toupper(character);\n    }\n    return new_string;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmph8ai0hfa: /tmp/tmph8ai0hfa.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (unsigned int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a'\
    \ && string[i] <= 'z')\n            string[i] = string[i] - 32;\n        if (string[i]\
    \ >= 'A' && string[i] <= 'Z')\n            string[i] = string[i] + 32;\n    }\n\
    \    return string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpgbkah5dh: /tmp/tmpgbkah5dh.cpp:18: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097912
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (std::string::iterator it=string.begin(); it != string.end(); ++it)\n    {\n\
    \        if (*it >= 'a' && *it <= 'z')\n            *it = toupper(*it);\n    \
    \    else if (*it >= 'A' && *it <= 'Z')\n            *it = tolower(*it);\n   \
    \ }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n  \
    \  assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\")) ==\
    \ (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ == ' ') {\n            s[i] = toupper(s[i]);\n            s[i] = tolower(s[i]);\n\
    \        }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpilz9929d: /tmp/tmpilz9929d.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097912
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ t;\n    for (int i = 0; i < string.size(); i++) {\n        char ch = string[i];\n\
    \        t = toupper(ch);\n        if (t != ch)\n            string[i] = t;\n\
    \    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp589yp3gr.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp589yp3gr.cpp:7:11: error: expected \u2018;\u2019 before \u2018t\u2019\
    \n    7 |     string t;\n      |           ^~\n      |           ;\n/tmp/tmp589yp3gr.cpp:10:9:\
    \ error: \u2018t\u2019 was not declared in this scope\n   10 |         t = toupper(ch);\n\
    \      |         ^\n"
  stdout: ''
  timestamp: 1660097911
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (size_t i = 0; i < string.length(); i++) {\n        char current_char = string[i];\n\
    \        if (current_char >= 'a' && current_char <= 'z')\n            string[i]\
    \ = (current_char - 'a') + 'A';\n        else if (current_char >= 'A' && current_char\
    \ <= 'Z')\n            string[i] = (current_char - 'A') + 'a';\n    }\n    return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ result;\n    for (std::string::iterator itr = string.begin(); itr != string.end();\
    \ ++itr) {\n        if (*itr >= 'a' && *itr <= 'z') {\n            result += *itr\
    \ - 'a' + 'A';\n        } else {\n            result += *itr;\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = flip_case;\n  \
    \  assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\")) ==\
    \ (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpckt5mf03: /tmp/tmpckt5mf03.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097913
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto & c : string) {\n        if (('A' <= c && c <= 'Z') || ('a' <= c && c\
    \ <= 'z')) {\n            c = c ^ ('A' ^ 'a');\n        }\n    }\n    return string;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097912
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  string\
    \ s = \"\";\n  for (int i = 0; i < string.length(); i++) {\n    if (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n      s += string[i] + 'A' - 'a';\n    } else\
    \ {\n      s += string[i];\n    }\n  }\n  return s;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7kt0k354.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp7kt0k354.cpp:7:9: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |   string s = \"\";\n      |         ^~\n      |         ;\n/tmp/tmp7kt0k354.cpp:10:7:\
    \ error: \u2018s\u2019 was not declared in this scope\n   10 |       s += string[i]\
    \ + 'A' - 'a';\n      |       ^\n/tmp/tmp7kt0k354.cpp:12:7: error: \u2018s\u2019\
    \ was not declared in this scope\n   12 |       s += string[i];\n      |     \
    \  ^\n/tmp/tmp7kt0k354.cpp:15:10: error: \u2018s\u2019 was not declared in this\
    \ scope\n   15 |   return s;\n      |          ^\n"
  stdout: ''
  timestamp: 1660097912
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ newString;\n    for(char c:string) {\n        if(std::toupper(c)!=c) {\n   \
    \         newString+=std::toupper(c);\n        } else {\n            newString+=std::tolower(c);\n\
    \        }\n    }\n    return newString;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097912
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ s = string;\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            s[i] += ('a' - 'A');\n        } else if\
    \ (s[i] >= 'a' && s[i] <= 'z') {\n            s[i] -= ('a' - 'A');\n        }\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ str = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        // Keep\
    \ uppercase characters unchanged\n        if (string[i] >= 'A' && string[i] <=\
    \ 'Z') {\n            str += string[i];\n            continue;\n        }\n  \
    \      // Keep lowercase characters unchanged\n        if (string[i] >= 'a' &&\
    \ string[i] <= 'z') {\n            str += string[i];\n            continue;\n\
    \        }\n        // Flip lowercase characters to uppercase\n        if (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n            str += (char) (string[i] - 'A' +\
    \ 'a');\n            continue;\n        }\n        // Flip uppercase characters\
    \ to lowercase\n        if (string[i] >= 'A' && string[i] <= 'Z') {\n        \
    \    str += (char) (string[i] - 'a' + 'A');\n            continue;\n        }\n\
    \    }\n    return str;\n}\nint main() {\n    auto candidate = flip_case;\n  \
    \  assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\")) ==\
    \ (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmphkkknwqv: /tmp/tmphkkknwqv.cpp:35: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ new_string;\n    for (auto c : string) {\n        c >= 'A' ? (c += ('Z' - 'A'))\
    \ : (c += ('a' - 'A'));\n        new_string += c;\n    }\n    return new_string;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp82pwwcmg: /tmp/tmp82pwwcmg.cpp:17: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ out;\n    out.reserve(string.size());\n    for (auto c: string) out.push_back(toupper(c));\n\
    \    for (auto c: out) out.push_back(tolower(c));\n    return out;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp6cpdxnzm: /tmp/tmp6cpdxnzm.cpp:16: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (auto &c : string) {\n    if (std::tolower(c) != std::toupper(c)) {\n      c\
    \ = std::toupper(c);\n    }\n    if (std::toupper(c) != std::tolower(c)) {\n \
    \     c = std::tolower(c);\n    }\n  }\n  return string;\n}\nint main() {\n  \
    \  auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n   \
    \ assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These\
    \ violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmppxjl6eog: /tmp/tmppxjl6eog.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ out = string;\n    for (auto &c: out) c = (c == 'a') ? 'A' : ((c == 'e') ? 'E'\
    \ : ((c == 'i') ? 'I' : ((c == 'o') ? 'O' : ((c == 'u') ? 'U' : ((c == 'y') ?\
    \ 'Y' : ((c == 'a') ? 'A' : ((c == 'e') ? 'E' : ((c == 'i') ? 'I' : ((c == 'o')\
    \ ? 'O' : ((c == 'u') ? 'U' : ((c == 'y') ? 'Y' : ((c == 'A') ? 'a' : ((c == 'E')\
    \ ? 'e' : ((c == 'I') ? 'i' : ((c == 'O') ? 'o' : ((c == 'U') ? 'u' : ((c == 'Y')\
    \ ? 'y' : (c))))))))))))))))));\n    return out;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpuagqwqfk: /tmp/tmpuagqwqfk.cpp:14: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  std::string\
    \ toRet;\n  for (char &c : string)\n    c = (c >= 'a') ? c + 32 : c - 32;\n  return\
    \ toRet;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpvq570bod: /tmp/tmpvq570bod.cpp:15: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097914
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (std::string::iterator it = string.begin(), end = string.end(); it != end;)\
    \ {\n        if (std::islower(*it)) {\n            *it = std::toupper(*it);\n\
    \        } else if (std::isupper(*it)) {\n            *it = std::tolower(*it);\n\
    \        } else {\n            it++;\n        }\n    }\n    return string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660097918
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (size_t i = 0; i < string.size(); i++) {\n        if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n            string[i] = string[i] - 32;\n        }\n        if (string[i]\
    \ >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n   \
    \     }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp0gsv32t4: /tmp/tmp0gsv32t4.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097913
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  // You\
    \ can do without an if statement here.\n  string flipped_string = string;\n  for\
    \ (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'A' && string[i]\
    \ <= 'Z') {\n      flipped_string[i] = string[i] - 32;\n    } else {\n      flipped_string[i]\
    \ = string[i];\n    }\n  }\n  return flipped_string;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2zm8qhef.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp2zm8qhef.cpp:8:9: error: expected \u2018;\u2019 before \u2018flipped_string\u2019\
    \n    8 |   string flipped_string = string;\n      |         ^~~~~~~~~~~~~~~\n\
    \      |         ;\n/tmp/tmp2zm8qhef.cpp:11:7: error: \u2018flipped_string\u2019\
    \ was not declared in this scope\n   11 |       flipped_string[i] = string[i]\
    \ - 32;\n      |       ^~~~~~~~~~~~~~\n/tmp/tmp2zm8qhef.cpp:13:7: error: \u2018\
    flipped_string\u2019 was not declared in this scope\n   13 |       flipped_string[i]\
    \ = string[i];\n      |       ^~~~~~~~~~~~~~\n/tmp/tmp2zm8qhef.cpp:16:10: error:\
    \ \u2018flipped_string\u2019 was not declared in this scope\n   16 |   return\
    \ flipped_string;\n      |          ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660097913
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ ret = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        ret.insert(ret,\
    \ string[i], string[i] + 32); \n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1yjnk7z5.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp1yjnk7z5.cpp:9:50: error: no matching function for call to \u2018std::__cxx11::basic_string<char>::insert(std::string&,\
    \ __gnu_cxx::__alloc_traits<std::allocator<char>, char>::value_type&, int)\u2019\
    \n    9 |         ret.insert(ret, string[i], string[i] + 32);\n      |       \
    \                                           ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp1yjnk7z5.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1538:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::size_type, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1538 |       insert(const_iterator __p, size_typ"
  stdout: ''
  timestamp: 1660097913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ res = string;\n    for (char c: string) {\n        res.at(c) = toupper(c);\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = flip_case;\n  \
    \  assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\")) ==\
    \ (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::out_of_range'\n  what():\
    \  basic_string::at: __n (which is 72) >= this->size() (which is 6)\n"
  stdout: ''
  timestamp: 1660097914
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ res;\n    for(char &c: string) {\n        if(c>= 'a' && c<='z')\n          \
    \  c ^= 32;\n        else if(c>= 'A' && c<='Z')\n            c ^= 32;\n      \
    \  else if(c>= '0' && c<='9')\n            c ^= 32;\n        else\n          \
    \  c = c;\n    }\n    return res;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp8zyb0ybz: /tmp/tmp8zyb0ybz.cpp:23: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097914
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    bool\
    \ flag = true;\n    for (auto i : string) {\n        if (flag) {\n           \
    \ flag = false;\n            continue;\n        }\n        switch (i) {\n    \
    \    case 'a':\n            i = 97;\n            break;\n        case 'b':\n \
    \           i = 'a';\n            break;\n        case 'c':\n            i = 'B';\n\
    \            break;\n        case 'd':\n            i = 'a';\n            break;\n\
    \        case 'e':\n            i = 'A';\n            break;\n        case 'f':\n\
    \            i = 'B';\n            break;\n        case 'g':\n            i =\
    \ 'a';\n            break;\n        case 'h':\n            i = 'B';\n        \
    \    break;\n        case 'i':\n            i = 'a';\n            break;\n   \
    \     case 'j':\n            i = 'B';\n            break;\n        case 'k':\n\
    \            i = 'a';\n            break;\n        case 'l':\n            i =\
    \ 'B';\n            break;\n        case 'm':\n            i = 'a';\n        \
    \    break;\n        case 'n':\n            i = 'B';\n            break;\n   \
    \     case 'o':\n            i = 'a';\n            break;\n        case 'p':\n\
    \            i = 'B';\n            break;\n        case 'q':\n            i =\
    \ 'a';\n            break;\n        case 'r':\n            i = 'B';\n        \
    \    break;\n        case 's':\n            i = 'a';\n            break;\n   \
    \     case 't':\n            i = 'B';\n            break;\n        case 'u':\n\
    \            i = 'a';\n            break;\n        case 'v':\n            i =\
    \ 'B';\n            break;\n        case 'w':\n            i = 'a';\n        \
    \    break;\n        case 'x':\n            i = 'B';\n            break;\n   \
    \     case 'y':\n            i = 'a';\n            break;\n        case 'z':\n\
    \            i = 'B';\n            break;\n        default:\n            continue;\n\
    \        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpa7rit5m6: /tmp/tmpa7rit5m6.cpp:101: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097914
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    assert(string.length()\
    \ > 0);\n    string result = string;\n    for (auto &c : string) {\n        c\
    \ = std::toupper(c);\n        c = std::tolower(c);\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc5iek920.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpc5iek920.cpp:8:11: error: expected \u2018;\u2019 before \u2018result\u2019\
    \n    8 |     string result = string;\n      |           ^~~~~~~\n      |    \
    \       ;\n/tmp/tmpc5iek920.cpp:13:12: error: \u2018result\u2019 was not declared\
    \ in this scope\n   13 |     return result;\n      |            ^~~~~~\n"
  stdout: ''
  timestamp: 1660097913
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ upper = std::toupper(string);\n    std::string lower = std::tolower(string);\n\
    \    return lower + upper;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfehjp8h3.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpfehjp8h3.cpp:7:44: error: no matching function for call to \u2018toupper(std::string&)\u2019\
    \n    7 |     std::string upper = std::toupper(string);\n      |             \
    \                               ^\nIn file included from /usr/include/c++/9/cctype:42,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpfehjp8h3.cpp:2:\n/usr/include/ctype.h:125:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  125 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:125:25: note:   no\
    \ known conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018int\u2019\n  125 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /usr/include/c++/9/bits/basic_ios.h:37,\n\
    \                 from /usr/include/c++/9/ios:44,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpfehjp8h3.cpp:2:\n/usr/include/c++/9/bits/locale_facets.h:2643:5: note:\
    \ candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const std::locale&)\u2019\
    \n 2643 |     toupper(_CharT __c, const locale& __loc)\n      |     ^~~~~~~\n\
    /usr/include/c++/9/bits/locale_facets.h:2643:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpfehjp8h3.cpp:7:44: note:   candidate expects 2 arguments, 1\
    \ provided\n    7 |     std::string upper = std::toupper(string);\n      |   \
    \                                         ^\n/tmp/tmpfehjp8h3.cpp:8:44: error:\
    \ no matching function for call to \u2018tolower(std::string&)\u2019\n    8 |\
    \     std::string lower = std::tolower(string);\n      |                     \
    \                       ^\nIn file included from /usr/include/c++/9/cctype:42,\n\
    \               "
  stdout: ''
  timestamp: 1660097913
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (auto &c : string) {\n    if ((c >= 'A') && (c <= 'Z')) {\n      c -= 'A' -\
    \ 'a';\n    } else if ((c >= 'a') && (c <= 'z')) {\n      c += 'A' - 'a';\n  \
    \  }\n  }\n  return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097913
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  string\
    \ flipped = \"\";\n  for (int i = 0; i < string.size(); i++) {\n    if (string[i]\
    \ >= 'a' && string[i] <= 'z')\n      flipped += string[i] + 0x20;\n    else if\
    \ (string[i] >= 'A' && string[i] <= 'Z')\n      flipped += string[i] + 0x20;\n\
    \    else\n      flipped += string[i];\n  }\n  return flipped;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe40wqd_l.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpe40wqd_l.cpp:7:9: error: expected \u2018;\u2019 before \u2018flipped\u2019\
    \n    7 |   string flipped = \"\";\n      |         ^~~~~~~~\n      |        \
    \ ;\n/tmp/tmpe40wqd_l.cpp:10:7: error: \u2018flipped\u2019 was not declared in\
    \ this scope\n   10 |       flipped += string[i] + 0x20;\n      |       ^~~~~~~\n\
    /tmp/tmpe40wqd_l.cpp:12:7: error: \u2018flipped\u2019 was not declared in this\
    \ scope\n   12 |       flipped += string[i] + 0x20;\n      |       ^~~~~~~\n/tmp/tmpe40wqd_l.cpp:14:7:\
    \ error: \u2018flipped\u2019 was not declared in this scope\n   14 |       flipped\
    \ += string[i];\n      |       ^~~~~~~\n/tmp/tmpe40wqd_l.cpp:16:10: error: \u2018\
    flipped\u2019 was not declared in this scope\n   16 |   return flipped;\n    \
    \  |          ^~~~~~~\n"
  stdout: ''
  timestamp: 1660097913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++)\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z')\n      string[i] ^= 'A';\n    else if (string[i] >= 'A' && string[i]\
    \ <= 'Z')\n      string[i] ^= 'a';\n    return string;\n}\nint main() {\n    auto\
    \ candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpl8885ngp: /tmp/tmpl8885ngp.cpp:17: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097914
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ output = string;\n    for (size_t i = 0; i < output.size(); ++i) {\n       \
    \ if (output[i] >= 'a' && output[i] <= 'z') {\n            output[i] = output[i]\
    \ - 32;\n        } else if (output[i] >= 'A' && output[i] <= 'Z') {\n        \
    \    output[i] = output[i] + 32;\n        }\n    }\n    return output;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097914
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (size_t i = 0; i < string.length(); i++) {\n        if (string[i] == string::tolower(string[i]))\n\
    \            string[i] = string::toupper(string[i]);\n        else if (string[i]\
    \ == string::toupper(string[i]))\n            string[i] = string::tolower(string[i]);\n\
    \    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpohlr9gqr.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpohlr9gqr.cpp:8:26: error: \u2018string\u2019 is not a class, namespace,\
    \ or enumeration\n    8 |         if (string[i] == string::tolower(string[i]))\n\
    \      |                          ^~~~~~\n/tmp/tmpohlr9gqr.cpp:9:25: error: \u2018\
    string\u2019 is not a class, namespace, or enumeration\n    9 |             string[i]\
    \ = string::toupper(string[i]);\n      |                         ^~~~~~\n/tmp/tmpohlr9gqr.cpp:10:31:\
    \ error: \u2018string\u2019 is not a class, namespace, or enumeration\n   10 |\
    \         else if (string[i] == string::toupper(string[i]))\n      |         \
    \                      ^~~~~~\n/tmp/tmpohlr9gqr.cpp:11:25: error: \u2018string\u2019\
    \ is not a class, namespace, or enumeration\n   11 |             string[i] = string::tolower(string[i]);\n\
    \      |                         ^~~~~~\n"
  stdout: ''
  timestamp: 1660097913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (char &c : string) {\n    if (c >= 'a' && c <= 'z') {\n      c += 'A' - 'a';\n\
    \    }\n    if (c >= 'A' && c <= 'Z') {\n      c += 'a' - 'A';\n    }\n  }\n \
    \ return string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp1m9ftj2f: /tmp/tmp1m9ftj2f.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097914
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ ans = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n            ans += string[i] - 'a' + 'A';\n \
    \       } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            ans +=\
    \ string[i] - 'A' + 'a';\n        } else {\n            ans += string[i];\n  \
    \      }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprgbsfjfw.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmprgbsfjfw.cpp:7:11: error: expected \u2018;\u2019 before \u2018ans\u2019\
    \n    7 |     string ans = \"\";\n      |           ^~~~\n      |           ;\n\
    /tmp/tmprgbsfjfw.cpp:10:13: error: \u2018ans\u2019 was not declared in this scope;\
    \ did you mean \u2018abs\u2019?\n   10 |             ans += string[i] - 'a' +\
    \ 'A';\n      |             ^~~\n      |             abs\n/tmp/tmprgbsfjfw.cpp:12:13:\
    \ error: \u2018ans\u2019 was not declared in this scope; did you mean \u2018abs\u2019\
    ?\n   12 |             ans += string[i] - 'A' + 'a';\n      |             ^~~\n\
    \      |             abs\n/tmp/tmprgbsfjfw.cpp:14:13: error: \u2018ans\u2019 was\
    \ not declared in this scope; did you mean \u2018abs\u2019?\n   14 |         \
    \    ans += string[i];\n      |             ^~~\n      |             abs\n/tmp/tmprgbsfjfw.cpp:17:12:\
    \ error: \u2018ans\u2019 was not declared in this scope; did you mean \u2018abs\u2019\
    ?\n   17 |     return ans;\n      |            ^~~\n      |            abs\n"
  stdout: ''
  timestamp: 1660097913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (auto &c : string)\n    c = (c >= 'A') ? (c - 'A' + ('Z' - 'A')) : (c + ('a'\
    \ - 'A'));\n  return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp6dipxmhc: /tmp/tmp6dipxmhc.cpp:14: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097914
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ res;\n    for(char &c : string) c = toupper(c);\n    for(char &c : res) c =\
    \ tolower(c);\n    return res;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqouw0l1u.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpqouw0l1u.cpp:7:11: error: expected \u2018;\u2019 before \u2018res\u2019\
    \n    7 |     string res;\n      |           ^~~~\n      |           ;\n/tmp/tmpqouw0l1u.cpp:9:19:\
    \ error: \u2018res\u2019 was not declared in this scope\n    9 |     for(char\
    \ &c : res) c = tolower(c);\n      |                   ^~~\n/tmp/tmpqouw0l1u.cpp:10:12:\
    \ error: \u2018res\u2019 was not declared in this scope\n   10 |     return res;\n\
    \      |            ^~~\n"
  stdout: ''
  timestamp: 1660097913
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (size_t i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' &&\
    \ string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else\
    \ if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i]\
    \ + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097914
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &c : string) {\n        if ('a' <= c && c <= 'z')\n            c ^= 'A';\n\
    \        if ('A' <= c && c <= 'Z')\n            c ^= 'a';\n    }\n    return string;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpia0h64pu: /tmp/tmpia0h64pu.cpp:18: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097914
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.size(); i++) {\n    if (string[i] >= 'A' && string[i]\
    \ <= 'Z') {\n      string[i] = 'a' + string[i] - 'A';\n    } else if (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n      string[i] = 'A' + string[i] - 'a';\n  \
    \  }\n  }\n  return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097914
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto &character : string) {\n        if (character >= 'a' && character <= 'z')\
    \ {\n            character = character - ('a' - 'A');\n        } else if (character\
    \ >= 'A' && character <= 'Z') {\n            character = character - ('A' - 'a');\n\
    \        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097914
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  // Iterate\
    \ through each character.\n  for (int i = 0; i < string.length(); i++) {\n   \
    \ // Get the current character.\n    char character = string[i];\n    // Check\
    \ if the character is lower case.\n    if (character >= 'a' && character <= 'z')\
    \ {\n      // If it is, change it to upper case.\n      string[i] = 'A' + (character\
    \ - 'a');\n    }\n    // Check if the character is upper case.\n    else if (character\
    \ >= 'A' && character <= 'Z') {\n      // If it is, change it to lower case.\n\
    \      string[i] = 'a' + (character - 'A');\n    }\n  }\n\n  return string;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097914
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  string\
    \ temp = \"\";\n  for (int i = 0; i < string.length(); i++) {\n    char c = string[i];\n\
    \    if (c >= 'a' && c <= 'z') {\n      temp += (c - 'a' + 'A');\n    } else {\n\
    \      temp += c;\n    }\n  }\n  return temp;\n}\nint main() {\n    auto candidate\
    \ = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"\
    Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have\
    \ violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeb1neerv.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpeb1neerv.cpp:7:9: error: expected \u2018;\u2019 before \u2018temp\u2019\
    \n    7 |   string temp = \"\";\n      |         ^~~~~\n      |         ;\n/tmp/tmpeb1neerv.cpp:11:7:\
    \ error: \u2018temp\u2019 was not declared in this scope\n   11 |       temp +=\
    \ (c - 'a' + 'A');\n      |       ^~~~\n/tmp/tmpeb1neerv.cpp:13:7: error: \u2018\
    temp\u2019 was not declared in this scope\n   13 |       temp += c;\n      | \
    \      ^~~~\n/tmp/tmpeb1neerv.cpp:16:10: error: \u2018temp\u2019 was not declared\
    \ in this scope\n   16 |   return temp;\n      |          ^~~~\n"
  stdout: ''
  timestamp: 1660097914
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ output = string;\n    for (std::string::size_type i = 0; i < output.length();\
    \ i++) {\n        if (output[i] >= 'a' && output[i] <= 'z')\n            output[i]\
    \ = toupper(output[i]);\n        else if (output[i] >= 'A' && output[i] <= 'Z')\n\
    \            output[i] = tolower(output[i]);\n    }\n    return output;\n}\nint\
    \ main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\
    \"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097914
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ lowerCaseString, upperCaseString;\n    size_t pos = 0;\n    do {\n        lowerCaseString\
    \ += string.at(pos);\n        upperCaseString += toupper(string.at(pos));\n  \
    \      ++pos;\n    } while (pos < string.length());\n    return lowerCaseString\
    \ + upperCaseString;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9n3bc6mu.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp9n3bc6mu.cpp:7:11: error: expected \u2018;\u2019 before \u2018lowerCaseString\u2019\
    \n    7 |     string lowerCaseString, upperCaseString;\n      |           ^~~~~~~~~~~~~~~~\n\
    \      |           ;\n/tmp/tmp9n3bc6mu.cpp:10:9: error: \u2018lowerCaseString\u2019\
    \ was not declared in this scope\n   10 |         lowerCaseString += string.at(pos);\n\
    \      |         ^~~~~~~~~~~~~~~\n/tmp/tmp9n3bc6mu.cpp:11:9: error: \u2018upperCaseString\u2019\
    \ was not declared in this scope\n   11 |         upperCaseString += toupper(string.at(pos));\n\
    \      |         ^~~~~~~~~~~~~~~\n/tmp/tmp9n3bc6mu.cpp:14:12: error: \u2018lowerCaseString\u2019\
    \ was not declared in this scope\n   14 |     return lowerCaseString + upperCaseString;\n\
    \      |            ^~~~~~~~~~~~~~~\n/tmp/tmp9n3bc6mu.cpp:14:30: error: \u2018\
    upperCaseString\u2019 was not declared in this scope\n   14 |     return lowerCaseString\
    \ + upperCaseString;\n      |                              ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660097914
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::reverse(string.begin(),\
    \ string.end());\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpp1ns_b9n: /tmp/tmpp1ns_b9n.cpp:13: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097914
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z')\n      string[i] = string[i] - 32;\n    else if (string[i] >= 'A' &&\
    \ string[i] <= 'Z')\n      string[i] = string[i] + 32;\n  }\n  return string;\n\
    }\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\"))\
    \ == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n\tstd::string\
    \ result = string;\n\tfor(int i=0;i<string.length();i++) {\n\t\tif(string[i]>='a'\
    \ && string[i]<='z') {\n\t\t\tresult[i] = string[i]-'a' + 'A';\n\t\t} else {\n\
    \t\t\tresult[i] = string[i];\n\t\t}\n\t}\n\treturn result;\n}\nint main() {\n\
    \    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n \
    \   assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp0er9giyv: /tmp/tmp0er9giyv.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097914
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::string\
    \ temp = string;\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n   \
    \     }\n        else if (string[i] >= 'A' && string[i] <= 'Z') {\n          \
    \  string[i] = string[i] + 32;\n        }\n    }\n    return temp;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpj765meyf: /tmp/tmpj765meyf.cpp:21: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097914
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for\
    \ (auto & c : string) {\n        if (std::toupper(c) == c) c = std::tolower(c);\n\
    \    }\n    return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmpd3osiub8: /tmp/tmpd3osiub8.cpp:15: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097914
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'A' && string[i]\
    \ <= 'Z') {\n      string[i] = string[i] - ('A' - 'a');\n    } else if (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n      string[i] = string[i] + ('a' - 'A');\n\
    \    }\n  }\n  return string;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp3soyryuz: /tmp/tmp3soyryuz.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097915
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n      string[i] = string[i] - 32;\n    } else if (string[i] >= 'A'\
    \ && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097790
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    for(int\
    \ i = 0; i < string.length(); i++) {\n        if(string[i] < 'a' || string[i]\
    \ > 'z') string[i] = toupper(string[i]);\n    }\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp9h3j4jic: /tmp/tmp9h3j4jic.cpp:15: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097914
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  int\
    \ counter = 0;\n  for (size_t i = 0; i < string.length(); i++) {\n    if (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n      string[i] = string[i] + 'A' - 'a';\n  \
    \  } else if (string[i] >= 'A' && string[i] <= 'Z') {\n      string[i] = string[i]\
    \ + 'a' - 'A';\n    }\n    if (string[i] >= 'a' && string[i] <= 'z') {\n     \
    \ string[i] = string[i] + 'A' - 'a';\n    }\n  }\n  return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmp32rkgngl: /tmp/tmp32rkgngl.cpp:23: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097914
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::transform(string.cbegin(),\
    \ string.cend(), string.cbegin(), ::toupper);\n    std::transform(string.cbegin(),\
    \ string.cend(), string.cbegin(), ::tolower);\n    return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/algorithm:62,\n              \
    \   from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n             \
    \    from /tmp/tmprnmpmk_p.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h: In instantiation\
    \ of \u2018_OIter std::transform(_IIter, _IIter, _OIter, _UnaryOperation) [with\
    \ _IIter = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; _OIter = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; _UnaryOperation = int (*)(int) noexcept]\u2019:\n/tmp/tmprnmpmk_p.cpp:7:78:\
    \   required from here\n/usr/include/c++/9/bits/stl_algo.h:4343:12: error: assignment\
    \ of read-only location \u2018__result.__gnu_cxx::__normal_iterator<const char*,\
    \ std::__cxx11::basic_string<char> >::operator*()\u2019\n 4343 |  *__result =\
    \ __unary_op(*__first);\n      |  ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660097914
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ lowercase_string = string;\n    for (int i = 0; i < string.length(); i++) {\n\
    \        if (string[i] < 'A' || string[i] > 'Z') {\n            lowercase_string[i]\
    \ = string[i] ^ ('A'-'a');\n        }\n    }\n    return lowercase_string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6i90ar2o.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp6i90ar2o.cpp:7:11: error: expected \u2018;\u2019 before \u2018lowercase_string\u2019\
    \n    7 |     string lowercase_string = string;\n      |           ^~~~~~~~~~~~~~~~~\n\
    \      |           ;\n/tmp/tmp6i90ar2o.cpp:10:13: error: \u2018lowercase_string\u2019\
    \ was not declared in this scope\n   10 |             lowercase_string[i] = string[i]\
    \ ^ ('A'-'a');\n      |             ^~~~~~~~~~~~~~~~\n/tmp/tmp6i90ar2o.cpp:13:12:\
    \ error: \u2018lowercase_string\u2019 was not declared in this scope\n   13 |\
    \     return lowercase_string;\n      |            ^~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660097914
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = string;\n    for (auto &c: s) {\n        if (c >= 'A' && c <= 'Z') {\n \
    \           c ^= 0x20;\n        } else {\n            c = c;\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo4xm9u5w.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpo4xm9u5w.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = string;\n      |           ^~\n      |           ;\n\
    /tmp/tmpo4xm9u5w.cpp:8:19: error: \u2018s\u2019 was not declared in this scope\n\
    \    8 |     for (auto &c: s) {\n      |                   ^\n/tmp/tmpo4xm9u5w.cpp:15:12:\
    \ error: \u2018s\u2019 was not declared in this scope\n   15 |     return s;\n\
    \      |            ^\n"
  stdout: ''
  timestamp: 1660097914
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (auto &c : string) {\n    if (c >= 'A' && c <= 'Z') {\n      c += 'a' - 'A';\n\
    \    }\n    if (c >= 'a' && c <= 'z') {\n      c += 'A' - 'a';\n    }\n  }\n \
    \ return string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmptynkrjhr: /tmp/tmptynkrjhr.cpp:20: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097914
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.length(); ++i) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n      string[i] = 'A';\n    } else if (string[i] >= 'A' && string[i]\
    \ <= 'Z') {\n      string[i] = 'a';\n    }\n  }\n  return string;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: Exception
  stderr: 'tmph1zdhwyr: /tmp/tmph1zdhwyr.cpp:19: int main(): Assertion `candidate(("Hello!"))
    == ("hELLO!")'' failed.

    '
  stdout: ''
  timestamp: 1660097915
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s(string);\n    for (unsigned int i = 0; i < s.length(); i++) {\n        if\
    \ (s[i] >= 'A' && s[i] <= 'Z') {\n            s[i] = s[i] - 32;\n        } else\
    \ if (s[i] >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcbkcn6o0.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpcbkcn6o0.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s(string);\n      |           ^~\n      |           ;\n/tmp/tmpcbkcn6o0.cpp:8:34:\
    \ error: \u2018s\u2019 was not declared in this scope\n    8 |     for (unsigned\
    \ int i = 0; i < s.length(); i++) {\n      |                                 \
    \ ^\n/tmp/tmpcbkcn6o0.cpp:15:12: error: \u2018s\u2019 was not declared in this\
    \ scope\n   15 |     return s;\n      |            ^\n"
  stdout: ''
  timestamp: 1660097915
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    string\
    \ s = \"\";\n    for (auto &i : string) {\n        if ((i % 2 != 0) && (i % 2\
    \ != 1)) {\n            s += 'A';\n        } else {\n            s += 'a';\n \
    \       }\n    }\n    return s;\n}\nint main() {\n    auto candidate = flip_case;\n\
    \    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\"))\
    \ == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent\
    \ ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn75h01v5.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmpn75h01v5.cpp:7:11: error: expected \u2018;\u2019 before \u2018s\u2019\
    \n    7 |     string s = \"\";\n      |           ^~\n      |           ;\n/tmp/tmpn75h01v5.cpp:10:13:\
    \ error: \u2018s\u2019 was not declared in this scope\n   10 |             s +=\
    \ 'A';\n      |             ^\n/tmp/tmpn75h01v5.cpp:12:13: error: \u2018s\u2019\
    \ was not declared in this scope\n   12 |             s += 'a';\n      |     \
    \        ^\n/tmp/tmpn75h01v5.cpp:15:12: error: \u2018s\u2019 was not declared\
    \ in this scope\n   15 |     return s;\n      |            ^\n"
  stdout: ''
  timestamp: 1660097915
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    //\
    \ Create an empty string variable to be filled with uppercase characters.\n  \
    \  std::string uppercase = \"\";\n    // Iterate through each character in the\
    \ string variable and add it to uppercase string.\n    for (char character : string)\
    \ {\n        // Add character from string variable to uppercase string variable.\n\
    \        uppercase += toupper(character);\n    }\n    // Iterate through each\
    \ character in the string variable and add it to lowercase string.\n    for (char\
    \ character : lowercase(string)) {\n        // Add character from string variable\
    \ to lowercase string variable.\n        uppercase += tolower(character);\n  \
    \  }\n    // Return the uppercase string.\n    return uppercase;\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2pts4wob.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp2pts4wob.cpp:15:27: error: \u2018lowercase\u2019 was not declared in\
    \ this scope; did you mean \u2018uppercase\u2019?\n   15 |     for (char character\
    \ : lowercase(string)) {\n      |                           ^~~~~~~~~\n      |\
    \                           uppercase\n"
  stdout: ''
  timestamp: 1660097915
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::stack<char>\
    \ characters;\n    for (char c : string) {\n        if (std::tolower(c) == c)\n\
    \            characters.push(c);\n        else if (std::toupper(c) == c)\n   \
    \         characters.push(c);\n        else\n            characters.push((char)\
    \ tolower(c));\n    }\n    return std::string(characters.top());\n}\nint main()\
    \ {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n\
    \    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps__83ioc.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmps__83ioc.cpp:16:40: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::basic_string(__gnu_cxx::__alloc_traits<std::allocator<char>,\
    \ char>::value_type&)\u2019\n   16 |     return std::string(characters.top());\n\
    \      |                                        ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmps__83ioc.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:654:2:\
    \ note: candidate: \u2018template<class _Tp, class> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::basic_string(const _Tp&, const _Alloc&)\u2019\n  654 |  basic_string(const\
    \ _Tp& __t, const _Alloc& __a = _Alloc())\n      |  ^~~~~~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:654:2:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/9/bits/move.h:55,\n                 from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmps__83ioc.cpp:2:\n/usr/include/c++/9/type_traits:\
    \ In substitution of \u2018template<bool _Cond, class _Tp> using enable_if_t =\
    \ typename std::enable_if::type [with bool _Cond = std::integral_constant<bool,\
    \ false>::value; _Tp = void]\u2019:\n/usr/include/c++/9/bits/basic_string.h:121:8:\
    \   required by substitution of \u2018template<class _CharT, cla"
  stdout: ''
  timestamp: 1660097914
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n  for\
    \ (int i = 0; i < string.size(); ++i) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n      string[i] = string[i] - 32;\n    } else if (string[i] >= 'A'\
    \ && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    }\n  }\n  return\
    \ string;\n}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
    \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660097915
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
    Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n    std::map<char,\
    \ char> mapping;\n    for (char c : string)\n        mapping[c] = toupper(c);\n\
    \    for (auto iter = mapping.begin(); iter != mapping.end(); ++iter)\n      \
    \  string = string.replace(iter->first, iter->second);\n    return string;\n}\n\
    int main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) ==\
    \ (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
    These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9exi1k8f.cpp: In function \u2018std::string flip_case(std::string)\u2019\
    :\n/tmp/tmp9exi1k8f.cpp:11:58: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(const char&, char&)\u2019\n   11 | \
    \        string = string.replace(iter->first, iter->second);\n      |        \
    \                                                  ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp9exi1k8f.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1893:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1893 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/usr/include/c++/9/bits/basic_string.h:1893:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/usr/include/c++/9/bits/basic_string.h:1915:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string"
  stdout: ''
  timestamp: 1660097914

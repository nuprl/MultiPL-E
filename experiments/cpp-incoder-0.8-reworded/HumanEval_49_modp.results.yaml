language: cpp
name: HumanEval_49_modp
results:
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0) return\
    \ 0;\n    if (p == 0) return 1;\n    long r = 1;\n    while (n != 0) {\n     \
    \   if ((n & 1) == 1) r = (r * p) % p;\n        n >>= 1;\n        p = (p * p)\
    \ % p;\n    }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n  \
    \  assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101)) ==\
    \ (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126959
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long result = 0;\n\
    \    long factor = 1;\n    long remainder = n;\n    long mod = p;\n    while (remainder\
    \ >= mod) {\n        remainder -= mod;\n        factor *= mod;\n    }\n    while\
    \ (remainder > 0) {\n        remainder *= factor;\n        factor *= factor;\n\
    \    }\n    result = factor;\n    return result;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126964
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  if (p % 2 == 0) return\
    \ ((n % p) + (p / 2)) % p;\n  return ((n % p) + (p / 2)) % p;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpwminw4rt: /tmp/tmpwminw4rt.cpp:20: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\t// Simplified version\
    \ of Hacker's Delight\n\tassert(p != 0);\n\tlong x = 1;\n\twhile (n > p) {\n\t\
    \tn /= p;\n\t\tx *= p;\n\t}\n\twhile (n != 0) {\n\t\tn /= p;\n\t}\n\treturn x;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp6cn8d6b1: /tmp/tmp6cn8d6b1.cpp:29: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p%2 == 1);\n\
    \  assert(n%2 == 1);\n  return n*p - n*(p - 1) / 2;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmplwdskj54: /tmp/tmplwdskj54.cpp:21: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n < p) {\n\
    \        n %= p;\n    } else if (n > p) {\n        n -= p;\n    }\n    return\
    \ n;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp67336_k0: /tmp/tmp67336_k0.cpp:25: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long q = p / n;\n\
    \  if (q > 0) return q;\n  return n - (q * n);\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpr789bqi7: /tmp/tmpr789bqi7.cpp:21: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  // Precondition:\
    \ n > 0 and p > 0.\n  assert(n >= 0 && p > 0);\n  // Use bitwise and and logical\
    \ operations to compute a bitwise value.\n  long value = ((p + 1) >> 1) | (n &\
    \ ((p + 1) << 1));\n  assert(value >= n);\n  assert(value > 0);\n  return value;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpr540rz_z: /tmp/tmpr540rz_z.cpp:19: long int modp(long int, long int):
    Assertion `value >= n'' failed.

    '
  stdout: ''
  timestamp: 1660126959
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long result = 1LL;\n\
    \  while (p > result) {\n    result *= p;\n    result %= n;\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126964
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    for(long i = p; i > 1; i--) {\n        if((res % p) == 0) {\n           \
    \ res *= i;\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsdmi93mb: /tmp/tmpsdmi93mb.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126959
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long res = 1L;\n\
    \  while (p > 0)\n    res = (res * p) % n;\n  return res;\n}\nint main() {\n \
    \   auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126964
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long p1 = p-1;\n\
    \    long q = (p*p-1)/p1;\n    return q == 0 ? p+1 : ((q*q-1)*p)/q;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpjofe9kvq: /tmp/tmpjofe9kvq.cpp:21: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\tlong res = 1;\n\t\
    for (int i = 1; i <= n / p; i++) {\n\t\tres = (res*p + n % p) % p;\n\t}\n\treturn\
    \ res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpn4v9dyv2: /tmp/tmpn4v9dyv2.cpp:23: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p >= 0 &&\
    \ p < INT_MAX);\n  long ret = (n % p) + p;\n  ret %= INT_MAX;\n  return ret;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpbx8a737c: /tmp/tmpbx8a737c.cpp:22: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long ret = 1;\n\
    \    while (ret < p) {\n        ret *= 2;\n    }\n    while (n >= p) {\n     \
    \   ret %= p;\n        n  /= p;\n    }\n    return ret;\n}\nint main() {\n   \
    \ auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpb52_14vu: /tmp/tmpb52_14vu.cpp:27: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p != 0);\n\
    \  assert(n != 0);\n  if (n >= p) {\n    long q = n / p;\n    long r = n % p;\n\
    \    if (r == 0) {\n      return q;\n    }\n    return q + modp(r, p - r);\n \
    \ }\n  return 0;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp7snfn_w_: /tmp/tmp7snfn_w_.cpp:29: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\tn = ((n&1)==1) ?\
    \ n*p : n%p;\n\tlong q = (n&2) ? (n%(p>>1)) : (n >> 1);\n\treturn (n&4) ? q :\
    \ modp(q, p);\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp6z5l673_: /tmp/tmp6z5l673_.cpp:21: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  if (n & -p == 0)\
    \ return 0;\n  return (n>>p)|p;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpn_117qv7: /tmp/tmpn_117qv7.cpp:20: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while((p & 1) == 0)\n        p >>= 1, res = res * n + (p & 1);\n    while((p\
    \ >>= 1) == 0)\n        p >>= 1, res = res * n + (p & 1);\n    return res * n\
    \ % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpk58ott1z: /tmp/tmpk58ott1z.cpp:24: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long ans = 0;\n \
    \ for (int i = 1; i <= n; i++) {\n    ans += p % i;\n    p /= i;\n  }\n  return\
    \ ans;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpzn3n2t7x: /tmp/tmpzn3n2t7x.cpp:25: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long ans = 1;\n\
    \    long tmp = 1;\n    long mod = p * p - 1;\n    while(p > 0) {\n        if\
    \ (n % p != 0) {\n            tmp += mod / p;\n            mod = mod%p;\n    \
    \    }\n        ans = tmp * ans + mod;\n        n = n / p;\n        p *= p;\n\
    \    }\n    return ans * mod;\n}\nint main() {\n    auto candidate = modp;\n \
    \   assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101)) ==\
    \ (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpvjdbwka9: /tmp/tmpvjdbwka9.cpp:31: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\tlong mod = 1;\n\t\
    while (n != 0) {\n\t\tif (n % p > 0)\n\t\t\tmod *= p;\n\t\tn /= p;\n\t\tp *= p;\n\
    \t}\n\treturn mod;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_cqi59so: /tmp/tmp_cqi59so.cpp:26: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  return n * (p - 1)\
    \ + (n % p);\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpe4lijo0s: /tmp/tmpe4lijo0s.cpp:19: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    return ((n*p)+((n%p)?1:0))\
    \ % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpttl__wfh: /tmp/tmpttl__wfh.cpp:19: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long ans = 0;\n\
    \    while (n > 0) {\n        long rem = n % p;\n        ans = (rem > 0 ? ans\
    \ : modp(rem, p));\n        n /= p;\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmptr_u270y: /tmp/tmptr_u270y.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long result = (n\
    \ + p - 1) % p;\n    return (result < 0) ? result + p : result;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp016c36fl: /tmp/tmp016c36fl.cpp:20: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    while (p) {\n \
    \       long a = p % n;\n        p /= n;\n        n = a;\n    }\n    return n;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpcfo2gevl: /tmp/tmpcfo2gevl.cpp:24: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long a = n - (p\
    \ - 1) % p;\n    long b = n % p;\n    if (b == 0) return a;\n    return a + p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpb7yk95ab: /tmp/tmpb7yk95ab.cpp:22: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\tassert(n >= 0);\n\
    \tassert(p >= 0);\n\tif (n == 0) return 1;\n\tlong q = 1;\n\tfor (long i = 1;\
    \ i <= n; ++i) {\n\t\tq = q * p;\n\t\tif (q % p == 0) q = (q / p) + 1;\n\t}\n\t\
    long r = q % p;\n\treturn (r == 0) ? p : r;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpyh4dehp4: /tmp/tmpyh4dehp4.cpp:28: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126960
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long r = n % p;\n\
    \  if (r == 0)\n    return p;\n  else\n    return (r + p) % p;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_39hu0se: /tmp/tmp_39hu0se.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\tif (n == 0 || p ==\
    \ 0) return 1;\n\tlong r = p * pow(10, n);\n\treturn (r / p) % p;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsaxgfxvn: /tmp/tmpsaxgfxvn.cpp:21: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1L;\n\
    \    while (p > 0) {\n        if (p & 1L)\n            res = (res * n) % p;\n\
    \        n >>= 1L;\n        p >>= 1L;\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp6ei6jphc: /tmp/tmp6ei6jphc.cpp:26: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  if (n >= p)\n   \
    \ return n - p;\n  return n + p;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmppu3s09ml: /tmp/tmppu3s09ml.cpp:21: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long ans = 1L;\n\
    \    while (n) {\n        ans = ans * p;\n        ans = ans % p;\n        n /=\
    \ 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = modp;\n  \
    \  assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101)) ==\
    \ (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpdy2756lm: /tmp/tmpdy2756lm.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126960
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p > 0);\n\
    \  return ((n + p) % p) / p;\n}\nint main() {\n    auto candidate = modp;\n  \
    \  assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101)) ==\
    \ (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgxuedz4h: /tmp/tmpgxuedz4h.cpp:20: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long res = 1;\n \
    \ while (n) {\n    if ((n & p) == 0)\n      res += 1;\n    n /= p;\n  }\n  return\
    \ res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmppirivyfn: /tmp/tmppirivyfn.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0)\n \
    \       return 1;\n    if (p % 2 == 0)\n        return n - pow(2, (n + 1) >> 1)\
    \ - 1;\n    return modp(n >> 1, p) % p;\n}\nint main() {\n    auto candidate =\
    \ modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpbnn5iv66: /tmp/tmpbnn5iv66.cpp:23: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126961
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p);\n  assert(n);\n\
    \  if (n == 0) {\n    return 1;\n  } else if (n < p) {\n    return modp(p - n\
    \ + 1, p) % p;\n  }\n  long r = p + 1;\n  for (long i = 1; i < p; i++) {\n   \
    \ r = ((r % p) + p) % p;\n  }\n  return n % r;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while (n) {\n        res = (n % p + res + p) % p;\n        n /= p;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpisj3thdx: /tmp/tmpisj3thdx.cpp:24: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(n > 0);\n\
    \    assert(p > 0);\n    long t = p % n;\n    if (t == 0) {\n        return n;\n\
    \    } else {\n        long r = modp(t, p);\n        return r + n;\n    }\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpb_vogptz: /tmp/tmpb_vogptz.cpp:27: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long q = 1; //\
    \ pow(n, q) will give the best answer. Enough for now.\n    long t = 1;\n    long\
    \ r = 1;\n    long m = 0;\n    while (t <= n) {\n        if (t % 2 == 0) {\n \
    \           q += p;\n            t = q * t;\n        }\n        r = r * t;\n \
    \       t += 1;\n    }\n    return (r * r + m) % p;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp9uds73nc: /tmp/tmp9uds73nc.cpp:31: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  if (p == 0)\n   \
    \ return 0;\n  if (p == 1)\n    return 1;\n  if (p == 2)\n    return n;\n  long\
    \ res = n % p;\n  if (res == 0)\n    return n;\n  else\n    return p + modp(n\
    \ - res, p);\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpfr78nfy5: /tmp/tmpfr78nfy5.cpp:29: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert (n > 0);\n\
    \  assert (p > 0);\n  // if n is power of p, return n; else return (n % p)\n \
    \ if (n & (n - 1)) {\n    n -= p;\n  } else {\n    n %= p;\n  }\n  return n;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp20gb0og_: /tmp/tmp20gb0og_.cpp:27: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\t// Avoid division\
    \ by 0.\n\tif(p == 0) return n;\n\treturn n % p;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_ozbesm8: /tmp/tmp_ozbesm8.cpp:22: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p > 0);\n\
    \  assert(n > 0);\n  long x = 0;\n  long r = 1;\n  while (n > 0) {\n    long t\
    \ = x % p;\n    x = r;\n    r = r * n / t;\n    n = t % p;\n  }\n  return r;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    return ((n % p)\
    \ + p) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4ouu3vje: /tmp/tmp4ouu3vje.cpp:20: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\treturn (n > p) ?\
    \ (n % p + p % n) : (n % (p - 1) + n % p);\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgh5759vm: /tmp/tmpgh5759vm.cpp:19: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(n >= 0 &&\
    \ p >= 0 && p <= 101);\n  long r = 0, d = 1;\n  for (long i = 1; i < p; ++i)\n\
    \    d = d * 2;\n  for (long i = 1; i <= n; i += 1) {\n    long tmp = i % d;\n\
    \    r = r * tmp + tmp;\n    d = d / 2;\n  }\n  return r;\n}\nint main() {\n \
    \   auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_yjsr1ks: /tmp/tmp_yjsr1ks.cpp:28: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  if (p == 0) {\n \
    \   return n;\n  }\n  long rem = n % p;\n  if (rem < p) {\n    rem += p;\n  }\n\
    \  return rem == p ? 0 : (rem % p) + p;\n}\nint main() {\n    auto candidate =\
    \ modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpze6x13tr: /tmp/tmpze6x13tr.cpp:26: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    return ((n%p) +\
    \ p) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpnj_yli7t: /tmp/tmpnj_yli7t.cpp:20: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long r = 1;\n \
    \   for (long i = 1; i <= p; i++) r *= (n + i);\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_l8xcq60: /tmp/tmp_l8xcq60.cpp:21: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long res = 1;\n \
    \ while (1) {\n    if ((p & n) != p) res = (res << 1);\n    if ((p & n) != 0)\
    \ return res;\n    n = n << 1;\n    p >>= 1;\n  }\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpr2z6ok49: /tmp/tmpr2z6ok49.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long d = 1;\n \
    \   long m = 1;\n    while (n%p) {\n        n = (n*d) % p;\n        m = (m*d)\
    \ % p;\n        d++;\n    }\n    return m*d%p;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp3_it73es: /tmp/tmp3_it73es.cpp:26: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\tassert(p >= 1);\n\
    \tlong res = n;\n\tlong mod = (p - 1) / p;\n\tif (n % p) {\n\t\tres += mod;\n\t\
    \tmod = 1;\n\t}\n\twhile (p & 1) {\n\t\tmod *= p;\n\t\tp >>= 1;\n\t}\n\tres %=\
    \ mod;\n\treturn res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4bwftf0l: /tmp/tmp4bwftf0l.cpp:32: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p >= 1 &&\
    \ p <= 101);\n  long r = p * (long) n;\n  r += (p - 1L) * (long) (r + n);\n  return\
    \ r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp23rqo6v1: /tmp/tmp23rqo6v1.cpp:22: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    return ((n % p)\
    \ + p) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4ouu3vje: /tmp/tmp4ouu3vje.cpp:20: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if(n == 0) return\
    \ 1;\n    if(n == p) return n;\n    if(n%2 == 0) return modp( (n-1), (p / 2) );\n\
    \    if(n%2 == 1) return modp( n/2, p );\n    long d = modp( (n-1)/2, p );\n \
    \   long r = n%p;\n    if(r == 0) return d;\n    else return d + modp( r / (p\
    \ / 2), p );\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpv6i44c9u: /tmp/tmpv6i44c9u.cpp:26: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  return (n%p)+p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpb271cv09: /tmp/tmpb271cv09.cpp:19: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long r = 1;\n  while\
    \ (n != 0) {\n    if (n % p == 0)\n      r *= p;\n    n /= p;\n  }\n  return r;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp10xram3j: /tmp/tmp10xram3j.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\t// Return 2^n modulo\
    \ p.\n\tlong ret = 1;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tif (n % i == 0) {\n\
    \t\t\tret *= p;\n\t\t\tret %= p;\n\t\t}\n\t\tret *= 2;\n\t\tret %= p;\n\t}\n\t\
    return ret;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_p4cfddb: /tmp/tmp_p4cfddb.cpp:29: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long ans = 1;\n\
    \    while (n) {\n        if (n % p)\n            ans = (ans * p + n % p) % p;\n\
    \        n = (n - ans) % p;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp67kscy9g: /tmp/tmp67kscy9g.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(n >= 0);\n\
    \    long q = n;\n    while (p != 0) {\n        if (p & 1) {\n            q =\
    \ (q * q) % p;\n        }\n        p >>= 1;\n    }\n    return q;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpaofr5ps9: /tmp/tmpaofr5ps9.cpp:27: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(n > 0);\n\
    \  long ans = 1;\n  while (n > p) {\n    ans = (ans * n) % p;\n    n = (n * ans\
    \ + 1) % p;\n  }\n  return ans;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpqrb72znn: /tmp/tmpqrb72znn.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p >= 1 &&\
    \ p <= 4294967295);\n    return ((long) pow(2, n)) % p;\n}\nint main() {\n   \
    \ auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsf4aki8i: /tmp/tmpsf4aki8i.cpp:21: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long x = n >> 1;\n\
    \  long r = p & 1;\n  n = x - 1;\n  while (n > 0) {\n    long y = x % p;\n   \
    \ if (y > 0)\n      y = p + y;\n    x = y;\n    n--;\n  }\n  if (r)\n    x = x\
    \ + p;\n  return x;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpwm3_2sj2: /tmp/tmpwm3_2sj2.cpp:31: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\tassert (n>0); //\
    \ assert (p>0); // assert (p%2==0); // assert (n%p==0); // (n%p)==0; // assert\
    \ (n==p or n==-p); // assert (p>0); // assert (p<p*n); // (n<n)\n\tassert (p==0\
    \ || p==-1); // assert (p==0); // assert (p==0); // assert (n==-1 or n==1); //\
    \ assert (n==0 || n==1); // assert (n==p*n); // (n==p or n==-p); // assert (p==p\
    \ or p==-p); // assert (p==-1 or p==1); // assert (p==1 or p==-1); // assert (p==0\
    \ or p==1); // assert (p==0 or p==1); // assert (n==0 or n==1); // assert (n==-1\
    \ or n==1); // assert (n==0 or n==1); // assert (n==-1 or n==1); // assert (n==-1\
    \ or n==1); // assert (n==-1 or n==1); // assert (n==-1 or n==1); // assert (n==-1\
    \ or n==1); // assert (n==-1 or n==1); // assert (n==-1 or n==1); // assert (n==-1\
    \ or n==1); // assert (n==-1 or n==1); // assert (n==-1 or n==1); // assert (n==-1\
    \ or n==1); // assert (n==-1 or n==1); // assert (n==-1 or n==1); // assert (n==-1\
    \ or n==1); // assert (n==-1 or n==1); // assert (n==-1 or n==1); // assert (n==-1\
    \ or n==1); // assert (n==-1 or n==1); // assert (n==-1 or n==1); // assert (n==-1\
    \ or n==1); // assert (n==-1 or n==1); // assert (n==-1 or n==1); // assert (n==-1\
    \ or n==1); // assert (n==-1 or n==1); // assert (n==-1 or n==1); // assert (n==-1\
    \ or n==1); // assert (n==-1 or n==1); // assert (n==-1 or n==1); // assert (n==-1\
    \ or n==1); // assert (n==-1 or n==1); // assert (n==-1 or n==1); // assert (n==-1\
    \ or n==1); // assert (n==-1 or n==1); // assert (n==-1 or n==1); // assert (n==-1\
    \ or n==1); // assert (n==-1 or n==1); // assert (n==-1 or n==1); // assert (n==-1\
    \ \n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_zb1789r: /tmp/tmp_zb1789r.cpp:16: long int modp(long int, long int):
    Assertion `p==0 || p==-1'' failed.

    '
  stdout: ''
  timestamp: 1660126963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while (n) {\n        res = (n % p) + res;\n        n = n / p;\n    }\n  \
    \  return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpplo4ax7o: /tmp/tmpplo4ax7o.cpp:24: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  if(n<0)\n    n+=p;\n\
    \  long ans = 1;\n  while(ans<p) ans+=p;\n  while(ans<=n) ans+=p;\n  return ans%p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpxdat436c: /tmp/tmpxdat436c.cpp:24: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long ans = 1;\n \
    \ while (n > p) {\n    ans = (ans * p) + n;\n    n /= p;\n  }\n  return ans;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpox_xxvet: /tmp/tmpox_xxvet.cpp:24: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long mod = 0;\n\
    \    while ((n & 1) == 0) {\n        mod <<= 1;\n        mod |= 1;\n        n\
    \ >>= 1;\n    }\n    while ((p & 1) == 0) {\n        mod <<= 1;\n        mod |=\
    \ 1;\n        p >>= 1;\n    }\n    while (n != 0) {\n        if (n & p)\n    \
    \        mod <<= 1;\n        n >>= 1;\n        p >>= 1;\n    }\n    return mod;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmppro9vepl: /tmp/tmppro9vepl.cpp:36: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(n >= p);\n\
    \  if (n == 0) return 1;\n  if (n & -p == 0) return n;\n  long q = (n / p + 1)\
    \ * p;\n  long r = n % p;\n  return (q - r + p) % p;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpw2au4afw: /tmp/tmpw2au4afw.cpp:15: long int modp(long int, long int):
    Assertion `n >= p'' failed.

    '
  stdout: ''
  timestamp: 1660126963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(n > 0);\n\
    \  assert(p > 0);\n  if (p == 0) return 1;\n  long r = 1;\n  while (n) {\n   \
    \ if (n & 1) r *= p;\n    n >>= 1;\n    p *= p;\n  }\n  return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp3pslznxw: /tmp/tmp3pslznxw.cpp:28: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\tif(n<0) {\n\t\tn+=p;\n\
    \t\tif(n < 0) n = 0;\n\t} else {\n\t\tn%=p;\n\t\tif(n >= p) n-= p;\n\t}\n\treturn\
    \ n;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpw6kbewp4: /tmp/tmpw6kbewp4.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (p == 0)\n \
    \       return 0;\n    if (n == 1)\n        return p;\n    if (n >= p)\n     \
    \   return modp(n - 1, p) % p;\n    return modp(n - 1, p) % p + p;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpc1c2_zhs: /tmp/tmpc1c2_zhs.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long result = (n\
    \ % p);\n    return result < 0 ? result + p : result;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpihlf6vjf: /tmp/tmpihlf6vjf.cpp:21: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long q = (n >>\
    \ 32) + ((n & -(int)n) * p);\n    return (q >> 32) + (q & -(int)q);\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpmbkqgqln: /tmp/tmpmbkqgqln.cpp:20: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    return ((n % p)\
    \ + (p % p)) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp9y2lhm7a: /tmp/tmp9y2lhm7a.cpp:20: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long ans = 0;\n\
    \    while (p) {\n        if (n & 1)\n            ans = ans * 2 + 1;\n       \
    \ n /= 2;\n        p /= 2;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp7_vpgg65: /tmp/tmp7_vpgg65.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n >= p)\n \
    \       return 1;\n    long res = 1;\n    while (n /= p)\n        res = (res *\
    \ p + n) % p;\n    return res;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_vzh5aj5: /tmp/tmp_vzh5aj5.cpp:24: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126963
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\tassert(p);\n\tlong\
    \ ans = 1;\n\twhile (n > 0) {\n\t\tif (n & 1)\n\t\t\tans = (ans * p) % p;\n\t\t\
    n >>= 1;\n\t\tp = (p * p) % p;\n\t}\n\treturn (ans + 1L) % p;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    return p == 0 ?\
    \ n : n % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpvgy2zb4w: /tmp/tmpvgy2zb4w.cpp:20: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126963
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = n;\n\
    \    \n    while (p & 1) {\n        if (res <= 1) return 0;\n        res = (res\
    \ % p) + p;\n    }\n    \n    if (n >= p) return res;\n    else return (n-res)\
    \ % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n == 0)\n \
    \       return 0;\n    long q = (p - 1) % p;\n    return (n << q) % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpw4ljov9t: /tmp/tmpw4ljov9t.cpp:23: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long d = p - 1;\n\
    \    return ((n % p) + d) % p;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpktm9hxdk: /tmp/tmpktm9hxdk.cpp:20: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long r = n % p;\n\
    \    if (r != 0) {\n        long rem = n % p;\n        r += (rem / p) * p;\n \
    \   }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpixirrenl: /tmp/tmpixirrenl.cpp:25: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p == p % n);\
    \ // no repeated division\n  if (n < 0) {\n    return modp(-n, p) % n;\n  } else\
    \ {\n    if (n == 0) {\n      return 1;\n    }\n    int d = (int)n;\n    if (d\
    \ == 0 || d == 1) {\n      return n;\n    }\n    if (d % 2 == 0) {\n      d /=\
    \ 2;\n    } else {\n      d *= 2;\n    }\n    n /= d;\n    p /= d;\n    while\
    \ (p > 1) {\n      p /= 2;\n    }\n    return n % p;\n  }\n}\nint main() {\n \
    \   auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpn0dj347l: /tmp/tmpn0dj347l.cpp:15: long int modp(long int, long int):
    Assertion `p == p % n'' failed.

    '
  stdout: ''
  timestamp: 1660126965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 0;\n\
    \    while (n >= p) {\n        res ^= n;\n        res = (res*n) % p;\n       \
    \ n /= p;\n    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpqimtk0cp: /tmp/tmpqimtk0cp.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (p == 0)\n \
    \       return 0;\n    long m = 1L << n;\n    for (; (m & p) != 0; m >>= 1)\n\
    \        if (m & 1)\n            n -= 1;\n    return n;\n}\nint main() {\n   \
    \ auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmplb31ijuw: /tmp/tmplb31ijuw.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(n >= p);\n\
    \  long ret = 0;\n  while (n) {\n    ret += (n & 1);\n    n >>= 1;\n  }\n  if\
    \ (ret)\n    ret += p;\n  return ret;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_0_wtpgx: /tmp/tmp_0_wtpgx.cpp:15: long int modp(long int, long int):
    Assertion `n >= p'' failed.

    '
  stdout: ''
  timestamp: 1660126965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long ans = (n - 1)\
    \ * (p - 1) % p;\n  if (ans == 0)\n    ans = 1;\n  return ans;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0seoq0ol: /tmp/tmp0seoq0ol.cpp:23: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  if(n%p==0) return\
    \ p;\n  if(n%p==p) return n%p;\n  long r = p-1;\n  while(r%n==0) r/=n;\n  if(r%n==0)\
    \ return r;\n  else return modp(n, p-1);\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpakl0lvgq: /tmp/tmpakl0lvgq.cpp:25: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long res = 1;\n \
    \ while (n) {\n    if (n & 1) res *= p;\n    n >>= 1;\n    p *= p;\n  }\n  return\
    \ res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphixudbmg: /tmp/tmphixudbmg.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  return ((n % p) +\
    \ (p < 0)) %p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_qayirso: /tmp/tmp_qayirso.cpp:20: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126965
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long p1 = 1; //\
    \ p mod p1 is 1\n    long p2 = 0; // p mod p2 is 0\n    long q = 1; // q divides\
    \ n\n\n    long r = (n / p) % p; // q divides n\n    if (q == 1) return 1; //\
    \ n is prime\n    if (q > 1) return 0; // n has a composite factor > 1\n    long\
    \ p = p % q; // q is prime\n    long q = q / p; // p is prime\n\n    long d =\
    \ (p - 1); // p-1 is not equal to 1\n    while (q % d == 0 && d != p)\n    {\n\
    \        if (d % 2 == 0)\n        {\n            d += 1;\n            while (n\
    \ % d == 0)\n                n /= d;\n        }\n        else\n        {\n   \
    \         d += 2;\n            while (n % d == 0)\n                n /= d;\n \
    \       }\n        p = d;\n        q = p / p1;\n    }\n    if (d == 1)\n    {\n\
    \        // p-1 is equal to 1\n        while (n % p == 0)\n            n /= p;\n\
    \    }\n    else\n    {\n        while (n % d == 0)\n            n /= d;\n   \
    \     while (n % p == 0)\n            n /= p;\n    }\n    return n;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgko0gz35.cpp: In function \u2018long int modp(long int, long int)\u2019\
    :\n/tmp/tmpgko0gz35.cpp:22:10: error: declaration of \u2018long int p\u2019 shadows\
    \ a parameter\n   22 |     long p = p % q; // q is prime\n      |          ^\n\
    /tmp/tmpgko0gz35.cpp:23:10: error: redeclaration of \u2018long int q\u2019\n \
    \  23 |     long q = q / p; // p is prime\n      |          ^\n/tmp/tmpgko0gz35.cpp:17:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   17 |     long q =\
    \ 1; // q divides n\n      |          ^\n"
  stdout: ''
  timestamp: 1660126965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  if (n & (n - 1))\n\
    \    return n % p + p;\n  return n % p;\n}\nint main() {\n    auto candidate =\
    \ modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpdbfxa361: /tmp/tmpdbfxa361.cpp:21: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long t = 0;\n \
    \   while ((p&1)==0) p >>= 1;\n    for (long i = 1; i < p; ++i) {\n        if\
    \ ((n&1)==0) n >>= 1;\n        t = ((t*p)+n) % p;\n    }\n    return t;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpio9kre8m: /tmp/tmpio9kre8m.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long m = n % (p +\
    \ 2);\n  if (m < p) m += p;\n  return m;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpen6amzf9: /tmp/tmpen6amzf9.cpp:21: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\tif (n >= p)\n\t\t\
    return (n + p - 1) % (p - 1);\n\telse\n\t\treturn n;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp5c3_1v0v: /tmp/tmp5c3_1v0v.cpp:23: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126965
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1; //\
    \ init\n    while (p > 0) {\n        if (n % p == 0)\n            res = res *\
    \ (p - 1); // res^(p-1)\n        n /= p;\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long q = p / 2;\n\
    \    long r = p % 2;\n    if (r == 0) return (n & 1L);\n    else return (n & 1L)\
    \ | modp((n - q * p), q);\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpr_h6x0ns: /tmp/tmpr_h6x0ns.cpp:22: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(n >= 0);\n\
    \  long ans = 1;\n  while (n != 0) {\n    if (n % 2 == 1) {\n      ans = (ans\
    \ * p) % p;\n    }\n    n = n / 2;\n  }\n  return ans;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprv7narz6: /tmp/tmprv7narz6.cpp:27: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126965
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while (p) {\n        if (n & 1LL) res *= p;\n        n /= p;\n        p *=\
    \ p;\n    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n  \
    \  assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101)) ==\
    \ (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long ans = n;\n \
    \ long r = 1;\n  while (ans > p) {\n    r <<= 1;\n    ans >>= 1;\n  }\n  return\
    \ r * p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpy2cz410f: /tmp/tmpy2cz410f.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n >= p) return\
    \ n - p;\n    if (n < 0) return (p - 1) - modp(n - p, p);\n    return n;\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp32qbxlf_: /tmp/tmp32qbxlf_.cpp:22: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    return n % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpq8nylmnv: /tmp/tmpq8nylmnv.cpp:20: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long r = n;\n \
    \   while (p > 0) {\n        if (p % 2 == 1) {\n            r = (r * 10) % p;\n\
    \        }\n        p = (p * 10 + 5) / 2;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpxzcnwz2t: /tmp/tmpxzcnwz2t.cpp:26: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p >= 1);\n\
    \  long q = 1;\n  while (q * p < n) q *= p;\n  while (q > p) {\n    if (n % q\
    \ == 0) {\n      long a = q * q;\n      long b = n - q * p * p;\n      long c\
    \ = p * q * p;\n      long d = a * b - c;\n      if (d >= 0) {\n        q ^= a\
    \ * (b - c);\n        n ^= c;\n      }\n    }\n    q--;\n  }\n  assert(q == 1);\n\
    \  return n;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_en3mb37: /tmp/tmp_en3mb37.cpp:31: long int modp(long int, long int):
    Assertion `q == 1'' failed.

    '
  stdout: ''
  timestamp: 1660126966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long r = 1;\n \
    \   long m = 1;\n    long q;\n\n    while (p > 1) {\n        q = p / n;\n    \
    \    p = (p - q * n) >> 1;\n        m = m << 1;\n        r = r | m;\n    }\n \
    \   return r | m;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpti6wxky8: /tmp/tmpti6wxky8.cpp:30: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long res = 1;\n \
    \ for (long i = 1; i <= n; ++i) res *= p;\n  return res;\n}\nint main() {\n  \
    \  auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpok2q7s3s: /tmp/tmpok2q7s3s.cpp:21: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p >= 0);\n\
    \  long r = 1;\n  for (int i = p; i > 0; i /= 2) r *= n;\n  return (r % p);\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpob8uscny: /tmp/tmpob8uscny.cpp:22: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126966
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    // assert(p % 2\
    \ == 0);\n    // assert(p * p % 2 == n);\n    long q = 1;\n    long r = n;\n \
    \   while (r != 0) {\n        long t = r / p;\n        q = q * (p % 2) + t;\n\
    \        r = r % p;\n    }\n    return q;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long x = n % p;\n\
    \  x = ((x % p) < p) ? x : p - (x % p);\n  return x;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpds2qa7nn: /tmp/tmpds2qa7nn.cpp:22: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n >= p) return\
    \ n;\n    long r = p%n;\n    return r+(r != 0)?modp(r,p):n;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpkmt4l22i: /tmp/tmpkmt4l22i.cpp:21: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p);\n  //\
    \ Initialize to one. Be careful with unsigned-integer promotion,\n  // it's important\
    \ for modpow() to be called correctly.\n  long res = 1;\n  // Iterate n. Stop\
    \ when n % p == 0 (mod p) and start a new iteration, which is guaranteed\n  //\
    \ to terminate if n is odd. Subsequent iterations will never terminate, since\
    \ n & p > 0\n  // only as n gets closer to p.\n  for (long i = 2; i <= n; ++i)\n\
    \    res = (res*i) % p;\n  return res;\n}\nint main() {\n    auto candidate =\
    \ modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpyrzmene5: /tmp/tmpyrzmene5.cpp:28: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p<=INT_MAX);\n\
    \  long r = n;\n  long mask = 1;\n  while (r != 0) {\n    r = r / p;\n    mask\
    \ <<= 1;\n  }\n  mask >>= 1;\n  return mask % p;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp3hdsuhog: /tmp/tmp3hdsuhog.cpp:27: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long r = 1;\n \
    \   for (; n >= p; n /= p) r *= p;\n    return r;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp9pc_4plk: /tmp/tmp9pc_4plk.cpp:21: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126966
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long ret = n;\n\
    \    while (ret >= p) {\n        ret -= p;\n        ret += p + 1;\n    }\n   \
    \ return (ret % p + p) % p;\n}\nint main() {\n    auto candidate = modp;\n   \
    \ assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101)) ==\
    \ (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126971
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p != 0);\n\
    \  // We don't care about the parity of n or p.\n  // Just compute 2^n modulo\
    \ p.\n  // Since p is a prime, this is a fast, easy-to-verify calculation.\n \
    \ long res = 1;\n  while (n != 0) {\n    res = (res*2) % p;\n    n--;\n  }\n \
    \ return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126966
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long ans = 1;\n\
    \    int i = 0;\n    while (p != 0) {\n        p /= 10;\n        ans = ans * ans\
    \ % p;\n        i++;\n    }\n    if (n == ans)\n        return 1;\n    return\
    \ 0;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    // We could return\
    \ (p-1)/n * p % p but that's not optimal.\n    //\n    // We could also use (p\
    \ - 1) & ((p-1) > 0), but that's also not optimal.\n    //\n    // Instead we\
    \ use a little trick: we keep shifting n while p < 0,\n    // and divide the result\
    \ by p when p >= 0.\n    while ((p < 0) || (p > n)) {\n        long tmp = n;\n\
    \        n = p;\n        p = tmp;\n    }\n    return p % n;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpnp333nai: /tmp/tmpnp333nai.cpp:31: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126966
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\tif (n >= p)\n\t\t\
    return 1;\n\telse if (n < 0)\n\t\treturn modp(-ln, p);\n\telse\n\t\treturn pow(10,\
    \ p % n);\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx9q8qlsa.cpp: In function \u2018long int modp(long int, long int)\u2019\
    :\n/tmp/tmpx9q8qlsa.cpp:18:16: error: \u2018ln\u2019 was not declared in this\
    \ scope; did you mean \u2018n\u2019?\n   18 |   return modp(-ln, p);\n      |\
    \                ^~\n      |                n\n"
  stdout: ''
  timestamp: 1660126967
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1LL;\n\
    \    while (p) {\n        if ((n & 1LL) == p)\n            n /= 2LL;\n       \
    \ else\n            res *= 2LL;\n        n &= p-1;\n    }\n    return res;\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    for (int i = 0; i < 32; ++i) {\n        if ((n & 1) != 0) {\n           \
    \ res = (res * p) % p;\n        }\n        n >>= 1;\n        p >>= 1;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmplpquj4i1: /tmp/tmplpquj4i1.cpp:27: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126967
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    // We don't want\
    \ to use recursion and keep it simple, just do it on paper.\n    long res = 1;\n\
    \    long mod = p;\n    while (n >= p) { res *= p; mod *= p; n -= p; }\n    while\
    \ (mod > 1) { res %= mod; mod /= 10; }\n    return res;\n}\nint main() {\n   \
    \ auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpeji6qcqs: /tmp/tmpeji6qcqs.cpp:24: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126967
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long result = 1L;\n\
    \  while (n) {\n    if (n & 1) result = result * p;\n    n = n >> 1;\n    p =\
    \ p * p;\n  }\n  return result;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp99nfalc2: /tmp/tmp99nfalc2.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126967
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    return (n % p +\
    \ p) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp71v9y7tm: /tmp/tmp71v9y7tm.cpp:20: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126967
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\tif (n == 0 || p ==\
    \ 0) {\n\t\treturn n;\n\t} else if (n <= p) {\n\t\treturn n;\n\t} else {\n\t\t\
    long m = n % p;\n\t\treturn ((m * m) % p) + p;\n\t}\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_uffzm5h: /tmp/tmp_uffzm5h.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126967
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p > 0);\n\
    \  long r = p % n;\n  long t = p + p - r;\n  r = n % t;\n  return t + (n - r);\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpj6dnkneu: /tmp/tmpj6dnkneu.cpp:23: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126967
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  // Write your code\
    \ here.\n  long res = 0;\n  for(int i = 0; i < (p / 2); i++) {\n    if(n % 2 ==\
    \ 1) {\n      res += 1;\n      n /= 2;\n    } else {\n      res += 2;\n      n\
    \ /= 2;\n    }\n  }\n  assert(n == 0);\n  while(p % 2 == 0) {\n    res -= 1;\n\
    \    p /= 2;\n  }\n  while(p % 2 == 1) {\n    res += 2;\n    p /= 2;\n  }\n  return\
    \ res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpzhi9op4s: /tmp/tmpzhi9op4s.cpp:39: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while (n > 0) {\n        if (res >= p) break;\n        res *= 2;\n      \
    \  n--;\n    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsk8cc8mk: /tmp/tmpsk8cc8mk.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126968
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long r = 1;\n \
    \   long t = 1;\n    long q = 1;\n    long p1 = p * p;\n    while ((n /= 2) !=\
    \ 0) {\n        t = p1 - ((r * n) % p);\n        r = n;\n        n = t;\n    \
    \    q = p1 - ((r * t) % p);\n    }\n    return q;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(n > p);\n\
    \  long r = 1;\n  while (n > 0) {\n    if (n & 1) {\n      r = (r * p) % p;\n\
    \    }\n    n >>= 1;\n    p = (p * p) % p;\n  }\n  return r;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpb9ou8_lb: /tmp/tmpb9ou8_lb.cpp:15: long int modp(long int, long int):
    Assertion `n > p'' failed.

    '
  stdout: ''
  timestamp: 1660126968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long m = 1;\n \
    \   for (long i = 1; i < p; i++) {\n        m = (m * n) % p;\n        n = (n *\
    \ n) % p;\n    }\n    return m;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_t2r3_ni: /tmp/tmp_t2r3_ni.cpp:24: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\tassert(p);\n\tlong\
    \ ret = 1;\n\twhile (n != 0) {\n\t\tret *= 2;\n\t\tret %= p;\n\t\tn /= 2;\n\t\
    }\n\treturn ret;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpjftk9685: /tmp/tmpjftk9685.cpp:26: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long x = 0;\n \
    \   while(n) {\n        // get least (64-bit) part of n\n        long l = (n &\
    \ ((1LL << 63) - 1));\n        n -= l;\n        // left shift n by 63 bits, while\
    \ accumulating lsb of n\n        x += (l << 63);\n        // add l (from least\
    \ (64-bit) part of n) to x\n        x += l;\n    }\n    x %= p;\n    // add 1\
    \ to x to make it positive\n    x += 1;\n    // shift x by 63 bits to get lsb\
    \ (64-bit) part of n\n    x >>= 63;\n    // and add it to n\n    return n + x;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgzpo8py7: /tmp/tmpgzpo8py7.cpp:35: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\treturn ((n % p) +\
    \ p) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphvtyxhwp: /tmp/tmphvtyxhwp.cpp:20: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126968
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  return pow(2,n) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmcuk0ica.cpp: In function \u2018long int modp(long int, long int)\u2019\
    :\n/tmp/tmpmcuk0ica.cpp:15:19: error: invalid operands of types \u2018double\u2019\
    \ and \u2018long int\u2019 to binary \u2018operator%\u2019\n   15 |   return pow(2,n)\
    \ % p;\n      |          ~~~~~~~~ ^ ~\n      |             |       |\n      |\
    \             double  long int\n"
  stdout: ''
  timestamp: 1660126968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  if(p == 0) return\
    \ 1;\n  if(p == 1) return n;\n  if(n == 0) return 0;\n  if(n == 1) return p;\n\
    \  long r = n % p;\n  long q = modp(n / p, p);\n  if(r != 0) return (r * q) +\
    \ p;\n  return q;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp3aup14mn: /tmp/tmp3aup14mn.cpp:26: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    int r = n % p;\n\
    \    return (r < 0) ? r + p : r;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpnqq_7ycv: /tmp/tmpnqq_7ycv.cpp:21: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126968
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    return ((n % p)\
    \ + p) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4ouu3vje: /tmp/tmp4ouu3vje.cpp:20: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\tlong ans = 0;\n\t\
    while (n > 0) {\n\t\tans += n % p;\n\t\tn = n / p;\n\t}\n\treturn ans;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpm93t_dgs: /tmp/tmpm93t_dgs.cpp:25: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126969
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long r = n % p;\n\
    \  if (r == 0) {\n    r = p;\n  }\n  return r;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpa06xdq78: /tmp/tmpa06xdq78.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126969
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long r = 1;\n  while\
    \ (p > 0 && n > 0) {\n    if (n % p == 0 && n != p)\n      r *= p;\n    n /= p;\n\
    \    p /= 10;\n  }\n  return r;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsx3w6qvn: /tmp/tmpsx3w6qvn.cpp:26: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126969
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(n % p == 0);\n\
    \  long q = (n / p + 1) * p;\n  if (n / p < q) {\n    q += p;\n  }\n  long r =\
    \ q - n;\n  assert(r >= 0 && r % p == 0);\n  return r;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpzk53ow15: /tmp/tmpzk53ow15.cpp:15: long int modp(long int, long int):
    Assertion `n % p == 0'' failed.

    '
  stdout: ''
  timestamp: 1660126969
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long ans = (n &\
    \ -p) + p;\n    return (ans & -ans) | ans;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprp1s12po: /tmp/tmprp1s12po.cpp:20: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126969
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long n2 = n * n;\n\
    \    long p2 = p * p;\n    n2 *= p2;\n    n2 %= p2;\n    return n2;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpglvk3n0h: /tmp/tmpglvk3n0h.cpp:23: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126969
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long modp = 1;\n\
    \    while (n%p) {\n        modp = (modp*p) + 1;\n        n /= p;\n    }\n   \
    \ return modp;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpw1ofjpba: /tmp/tmpw1ofjpba.cpp:24: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126969
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long mod = 1;\n\
    \    int i = 1;\n    while (n) {\n        if (n&1) mod += p;\n        n = n/2;\n\
    \        p /= 2;\n    }\n    return mod;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpc7y3gg34: /tmp/tmpc7y3gg34.cpp:26: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126969
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long r = 1;\n  while\
    \ (n > p) r = (r * n) % p;\n  return r;\n}\nint main() {\n    auto candidate =\
    \ modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4g95sfpn: /tmp/tmp4g95sfpn.cpp:21: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126969
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long ans = (1ull\
    \ << p) - 1;\n    long s = ans;\n    while (n) {\n        if (n&1)\n         \
    \   s = ans ^ (s >> 1);\n        n >>= 1;\n        ans ^= s;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp24fx5vmx: /tmp/tmp24fx5vmx.cpp:27: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126969
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long ans = 1;\n\
    \    while ((n%p) == 0) {\n        ans *= p;\n        n/=p;\n    }\n    return\
    \ (n%p) ? ans : ans % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpx6leo4hl: /tmp/tmpx6leo4hl.cpp:24: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126969
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(n > 0 && p\
    \ == 0 || p > n);\n  return pow(2, n);\n}\nint main() {\n    auto candidate =\
    \ modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpbby00nu9: /tmp/tmpbby00nu9.cpp:20: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126969
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\treturn (1LL<<n)%(1LL<<p);\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpwt5ngwuo: /tmp/tmpwt5ngwuo.cpp:19: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126969
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p >= 1);\n\
    \  long ret = 0;\n  while (n > 0) {\n    ret += n % p;\n    n /= p;\n  }\n  return\
    \ ret;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpe467t20w: /tmp/tmpe467t20w.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126969
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  if (p % 2 == 1) return\
    \ (p - 1) * (n - 1) / (2 * n);\n  else return (p - 1) * (2 * n - 1) / (2 * n);\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpqrvjkr29: /tmp/tmpqrvjkr29.cpp:20: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126969
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long q = (p / p)\
    \ % p;\n    if (n == 0) return q;\n    if (n < p) return modp(n, p);\n    return\
    \ q;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while (p) {\n        if (p & 1) res = (n % p) + res;\n        n = n / p;\n\
    \        p = (p >> 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpr4lmr4e6: /tmp/tmpr4lmr4e6.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    return ((n % p)\
    \ + p) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4ouu3vje: /tmp/tmp4ouu3vje.cpp:20: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p != 0);\n\
    \  assert(n != 0);\n  long r = n % p;\n  if (r == 0) {\n    return n;\n  } else\
    \ {\n    return r + p;\n  }\n}\nint main() {\n    auto candidate = modp;\n   \
    \ assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101)) ==\
    \ (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsoj9one9: /tmp/tmpsoj9one9.cpp:26: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long a=0, b=1;\n\
    \    while(n) {\n        int d = (n&-b) % p;\n        if(a) {\n            d +=\
    \ p;\n        }\n        a = b;\n        b = d;\n        n >>= 1;\n    }\n   \
    \ return a;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp97xrvqbo: /tmp/tmp97xrvqbo.cpp:30: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\tif (n & -p == 0)\
    \ return n;\n\tlong ret = p >> 1;\n\tlong n1 = n;\n\tfor (int k = 1; k < p; k++,\
    \ n1 <<= 1)\n\t\tif (n1 & p) ret ^= (n << k);\n\treturn ret;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpdr09oyw7: /tmp/tmpdr09oyw7.cpp:24: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126970
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p != 0)\n\
    \  long ans = 1LL;\n  for (long x = n; x > 0; x = x / 2)\n    ans *= p;\n  ans\
    \ %= p;\n  assert(n % p == 0);\n  return ans;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppqqr36e6.cpp: In function \u2018long int modp(long int, long int)\u2019\
    :\n/tmp/tmppqqr36e6.cpp:16:3: error: expected \u2018;\u2019 before \u2018long\u2019\
    \n   16 |   long ans = 1LL;\n      |   ^~~~\n/tmp/tmppqqr36e6.cpp:18:5: error:\
    \ \u2018ans\u2019 was not declared in this scope; did you mean \u2018abs\u2019\
    ?\n   18 |     ans *= p;\n      |     ^~~\n      |     abs\n/tmp/tmppqqr36e6.cpp:19:3:\
    \ error: \u2018ans\u2019 was not declared in this scope; did you mean \u2018abs\u2019\
    ?\n   19 |   ans %= p;\n      |   ^~~\n      |   abs\n"
  stdout: ''
  timestamp: 1660126970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  int k = n & -p;\n\
    \  n ^= k & -p;\n  k &= p;\n  n ^= k;\n  return n & -p;\n}\nint main() {\n   \
    \ auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpjw28o4qo: /tmp/tmpjw28o4qo.cpp:23: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long q = n % p;\n\
    \    if (p > q) {\n        p = q;\n    }\n    return p * p + n;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpr2xftjk3: /tmp/tmpr2xftjk3.cpp:23: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p > 0);\n\
    \  if (p == 1) return 1;\n  if (p > n) return p - n;\n  if (n <= 0) return 0;\n\
    \  long mod = 0;\n  while (n) {\n    mod = (mod * n) % p;\n    n /= p;\n  }\n\
    \  return mod;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp6eydmxgb: /tmp/tmp6eydmxgb.cpp:28: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long long q = n\
    \ / p;\n    long long r = n % p;\n    long long result = (long long)(q * p + r)\
    \ % p;\n    if (result < 0) {\n        result += p;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpm8czfp2y: /tmp/tmpm8czfp2y.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\tif (n <= p)\n\t\t\
    return 1L;\n\tif (n == p)\n\t\treturn n;\n\tif (n % p == 0)\n\t\treturn n;\n\t\
    return (n % p + p) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpa3cdgw77: /tmp/tmpa3cdgw77.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  // assert(p != 0);\n\
    \  // assert(p > 0);\n  if (n == p)\n    return n;\n  long res = 1;\n  for (;\
    \ n != 0; n = (n / p) * p)\n    if (n % p == 0)\n      res = (long) res * p;\n\
    \  return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpo2lz3tkw: /tmp/tmpo2lz3tkw.cpp:27: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n <= 0) return\
    \ 0;\n    long res = n % p;\n    if (res < 0)\n        res += p;\n    return res;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmplpm3429j: /tmp/tmplpm3429j.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = 1;\n\
    \    while (p > 0) {\n        if (n & p) {\n            res *= p;\n        }\n\
    \        n /= p;\n        p *= 10;\n    }\n    if (n > 0) {\n        res *= n;\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprp1h4ajk: /tmp/tmprp1h4ajk.cpp:30: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126970
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long r = 1;\n  while\
    \ (p) {\n    if (p&1) r *= n; n >>= 1;\n    if (p>>=1)\tn = (n<<1)+(n>>1);\n \
    \   if (p>>=1)\tn ^= p;\n    p >>= 1;\n  }\n  return r;\n}\nint main() {\n   \
    \ auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpi37mdzwg: /tmp/tmpi37mdzwg.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126970
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long ret = 0;\n\
    \    if (p == 1) return 1;\n    while (n != 0) {\n        ret = ((n % p) + p)\
    \ % p;\n        n = n;\n    }\n    return ret;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126975
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  return (n%p);\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpm6gr_66m: /tmp/tmpm6gr_66m.cpp:20: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\tlong a = n % p;\n\
    \tif (a < 0)\n\t\ta = p + a; // n %= p\n\treturn a;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpuqp5o7gz: /tmp/tmpuqp5o7gz.cpp:23: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126971
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  long p = p % n;\n\
    \  return p*p + n-p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi35x61m6.cpp: In function \u2018long int modp(long int, long int)\u2019\
    :\n/tmp/tmpi35x61m6.cpp:15:8: error: declaration of \u2018long int p\u2019 shadows\
    \ a parameter\n   15 |   long p = p % n;\n      |        ^\n"
  stdout: ''
  timestamp: 1660126971
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    return (n+p-1+((p-1)>>1))\
    \ % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp291ejc84: /tmp/tmp291ejc84.cpp:19: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (p == 0)\n \
    \       return 1;\n    if (n < p)\n        return (p + (n - p)) % p;\n    long\
    \ r = n % p;\n    if (r < p)\n        return (r + (p - (r))) % p;\n    return\
    \ r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp7yg9yv83: /tmp/tmp7yg9yv83.cpp:27: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p > 0);\n\
    \  long ret = 1;\n  for (; p > 0;) {\n    if (n < p) { n += p; ret *= p; p = 1;\
    \ }\n    else { p >>= 1; ret *= p; }\n  }\n  return ret;\n}\nint main() {\n  \
    \  auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpx1csauc5: /tmp/tmpx1csauc5.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long r = 1;\n \
    \   while (n >= p) {\n        r = r * p;\n        n -= p;\n    }\n    return r\
    \ % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_osk7kiw: /tmp/tmp_osk7kiw.cpp:24: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126972
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long d = 0;\n \
    \   while (p >= p) {\n        d = (d + 1) * (p % p); // x^p mod p\n        p /=\
    \ p;\n    }\n    return ((n + d) % p); // x^n mod p\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126977
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n\tlong mod = 1, i;\n\
    \tfor(i = 1; i < p; i++) {\n\t\tmod *= p;\n\t}\n\treturn (n >= mod) ? n : mod;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4y93ihd9: /tmp/tmp4y93ihd9.cpp:23: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    // assert(n >=\
    \ 0);\n    long a = 1;\n    long remainder = n & p;\n    while (remainder > 0\
    \ && a <= p) {\n        a *= 2;\n        remainder %= p;\n    }\n    if (remainder\
    \ < 0) a += p;\n    return a;\n}\nint main() {\n    auto candidate = modp;\n \
    \   assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101)) ==\
    \ (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpd555wfrd: /tmp/tmpd555wfrd.cpp:27: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = n %\
    \ p;\n    if (res < 0)\n        res += p;\n    return res;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpmze2bczt: /tmp/tmpmze2bczt.cpp:23: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p);\n  assert(n\
    \ >= 0);\n  long r = n;\n  long m = 1;\n  while (true) {\n    r = r * p % m;\n\
    \    if (r < 1)\n      return r;\n    m++;\n  }\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4l4r_7h_: /tmp/tmp4l4r_7h_.cpp:28: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n < p) return\
    \ n & (-p);\n    long m = n % p;\n    if (m == 0) return 0;\n    if (m < 0) return\
    \ p - m;\n    return p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmppp34osb2: /tmp/tmppp34osb2.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    return ((n % p)\
    \ + p) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4ouu3vje: /tmp/tmp4ouu3vje.cpp:20: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126962
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long a = 1;\n \
    \   while (n) {\n        if (n & 1) a = (a*p) % p; \n        n >>= 1;\n      \
    \  p = (p*p) % p;\n    }\n    return a;\n}\nint main() {\n    auto candidate =\
    \ modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (p < 1) return\
    \ 0;\n    long r = 1;\n    while (r <= n) {\n        if (n % r == 0) return r;\n\
    \        ++r;\n    }\n    return 1;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpwd5oj6nl: /tmp/tmpwd5oj6nl.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    while (n<0){\n\
    \        n+=p;\n    }\n    while (n>p){\n        n-=p;\n    }\n    return n;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmppq17mhq2: /tmp/tmppq17mhq2.cpp:26: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    return ((n & -p)\
    \ == 0) ? n : ((n % p) + p) % p;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphr56srph: /tmp/tmphr56srph.cpp:20: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  return ((n % p) +\
    \ p) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpha02g189: /tmp/tmpha02g189.cpp:20: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126972
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    if (n <= p / 2)\n\
    \        return n + (p + 1 - n)\n    long d = (p + 1) * (p / 2);\n    while ((n\
    \ % d) == 0)\n        n /= d;\n    return n;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpshir4v66.cpp: In function \u2018long int modp(long int, long int)\u2019\
    :\n/tmp/tmpshir4v66.cpp:16:31: error: expected \u2018;\u2019 before \u2018long\u2019\
    \n   16 |         return n + (p + 1 - n)\n      |                            \
    \   ^\n      |                               ;\n   17 |     long d = (p + 1) *\
    \ (p / 2);\n      |     ~~~~                       \n"
  stdout: ''
  timestamp: 1660126972
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    return ((n % p\
    \ + p) % p) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpaiwza1ai: /tmp/tmpaiwza1ai.cpp:20: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(n >= p);\n\
    \  if (n == 0)\n    return 1;\n  long r = n / p;\n  long res = n % p;\n  if (res\
    \ > 0)\n    res -= p;\n  if (res < 0)\n    res += p;\n  return res * r + r;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpajuiibb4: /tmp/tmpajuiibb4.cpp:15: long int modp(long int, long int):
    Assertion `n >= p'' failed.

    '
  stdout: ''
  timestamp: 1660126973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long res = n %\
    \ p;\n    if (res == 0)\n        return n;\n    if (res > 0)\n        n -= p;\n\
    \    else //if (res < 0)\n        n += p;\n    while (n > 0)\n        n /= p;\n\
    \    return n;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpt4yr0tot: /tmp/tmpt4yr0tot.cpp:28: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    long ans = 1;\n\
    \    for(long k = n; k > 0; k >>= 1)\n        ans *= p;\n    ans %= p;\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpq2kd7ca8: /tmp/tmpq2kd7ca8.cpp:23: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  if (n == 0 || p ==\
    \ 0)\n    return 0;\n  long dp = p%p;\n  long n2 = n%p;\n  return dp == 0 ? n2\
    \ : (n2 - n*dp) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpbum1ngv0: /tmp/tmpbum1ngv0.cpp:24: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126973
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    // assert(p > 0);\n\
    \    // assert(n > 0);\n    // assert(p < INT_MAX);\n    long res = 0;\n    long\
    \ p2 = p;\n    while (p2 >= 1) {\n        res += p2;\n        p2 = p2 / p;\n \
    \   }\n    return res % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp6tf3w_d9: /tmp/tmp6tf3w_d9.cpp:28: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126973
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n  assert(p);\n  if\
    \ (p > 0 && n >= p)\n    return modp(n / p, p) + 1;\n  if (p == 0)\n    return\
    \ n;\n  return modp(n / p, p);\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126979
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n\
    // (2)\n// >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>>\
    \ modp((100), (101))\n// (1)\nlong modp(long n, long p) {\n    assert(p > 0);\n\
    \    if (n == 0) {\n        return 1;\n    }\n    long result = 0;\n    while\
    \ (p & 1) {\n        result *= 2;\n        n >>= 1;\n    }\n    if (n > 0) {\n\
    \        result *= 2;\n    }\n    result %= p;\n    return result;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126978

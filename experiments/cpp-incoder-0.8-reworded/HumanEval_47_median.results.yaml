language: cpp
name: HumanEval_47_median
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    std::nth_element(l.begin(), l.begin() + l.size() / 2, l.end());\n\
    \    return l[l.size() / 2];\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp3e41vpgc: /tmp/tmp3e41vpgc.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    // Find median from both sides.\n    size_t mid = l.size() / 2;\n\
    \    float x = l[mid];\n    float y = l[mid+1];\n    // If even size, then median\
    \ is mid-point.\n    if (l.size() % 2 == 0) {\n        return mid;\n    }\n  \
    \  // If odd size, then median is (mid+x)/2.0\n    return (mid+x)/2;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp_lcws8_3: /tmp/tmp_lcws8_3.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  std::sort(l.begin(), l.end());\n  long mid = l.size()/2;\n  if (l.size()\
    \ % 2) return l[mid];\n  else if (l[mid]>l[mid-1]) return l[mid];\n  else return\
    \ l[mid-1];\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpg04paeyh: /tmp/tmpg04paeyh.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    // Calculate median using two pivot elements.\n    float x = l[0];\n\
    \    float y = l[0];\n    for (long i = 1; i < l.size(); i++)\n    {\n       \
    \ if (l[i] < x)\n            x = l[i];\n        else if (l[i] > y)\n         \
    \   y = l[i];\n    }\n    if (l.size() == 1)\n        return y;\n    else\n  \
    \  {\n        float z = l[l.size() / 2];\n        return (x == z) ? y : z;\n \
    \   }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpe0zeo02x: /tmp/tmpe0zeo02x.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // Check that the size of the vector is bigger than 2.\n  if (l.size()\
    \ >= 2) {\n    // Sort vector\n    std::sort(l.begin(), l.end());\n    \n    //\
    \ Compute midpoint\n    float mid = l[0] + l[l.size() / 2];\n\n    // Compute\
    \ midpoint\n    long mid2 = l[0] + l[l.size() / 2];\n\n    // Return middle point\n\
    \    return mid;\n  }\n  \n  return float(l.size()); // Return an empty vector\
    \ if l has less than 2 elements.\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp8s9zow2f: /tmp/tmp8s9zow2f.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() % 2 == 0);\n    float left, right;\n    left = (l[l.size()\
    \ / 2] + l[l.size() / 2 - 1]) / 2.0;\n    right = (l[l.size() / 2 - 1] + l[l.size()\
    \ / 2]) / 2.0;\n    return ((left + right) / 2.0);\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmps7m0d2ey: /tmp/tmps7m0d2ey.cpp:9: float median(std::vector<long int>):
    Assertion `l.size() % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    sort(l.begin(), l.end());\n    float s = 0.0;\n    float m = 0.0;\n\
    \    float n = 0.0;\n    for (std::vector<long>::size_type i = 0; i < l.size();\
    \ ++i) {\n        s += l[i];\n        n += 1;\n    }\n    s = (float)(s / n);\n\
    \    if (n % 2)\n        m = l[n / 2];\n    else\n        m = l[n / 2 - 1];\n\
    \    return s;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaw84to65.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpaw84to65.cpp:18:11: error: invalid operands of types \u2018float\u2019\
    \ and \u2018int\u2019 to binary \u2018operator%\u2019\n   18 |     if (n % 2)\n\
    \      |         ~ ^ ~\n      |         |   |\n      |         |   int\n     \
    \ |         float\n"
  stdout: ''
  timestamp: 1660092170
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n\tsort(l.begin(), l.end());\n\tsize_t mid = l.size() / 2;\n\tif (l.size()\
    \ % 2 == 0)\n\t\treturn l[mid];\n\telse\n\t\treturn l[mid] + l[mid-1];\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpbv296ztr: /tmp/tmpbv296ztr.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    std::vector<long>::iterator it = std::max_element(l.begin(), l.end());\n\
    \    long long val = *it;\n    l.erase(it);\n    if (l.size() == 0) return 0.0f;\n\
    \    if (l.size() % 2 == 0) {\n        std::nth_element(l.begin(), l.begin() +\
    \ l.size() / 2, l.end());\n        return *(l.begin() + l.size() / 2);\n    }\
    \ else {\n        std::nth_element(l.begin(), l.begin(), l.end() - 1);\n     \
    \   return *(l.begin() + l.size() / 2);\n    }\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpa65ef6dk: /tmp/tmpa65ef6dk.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // Find the largest and smallest values in l\n  long long smallest =\
    \ std::min_element(std::begin(l), std::end(l));\n  long long largest = std::max_element(std::begin(l),\
    \ std::end(l));\n  // Define an adaptive binary search to find index of middle\
    \ element of l.\n  auto findIndex = [](std::vector<long> l, long long x) {\n \
    \   // return std::upper_bound(std::begin(l), std::end(l), x) - std::begin(l);\n\
    \    return std::upper_bound(std::begin(l), std::end(l), x);\n  };\n  // Define\
    \ an adaptive binary search to find index of middle element of l.\n  auto findMiddleIndex\
    \ = [&smallest, &largest](int n) {\n    if (n >= 0 && n < (int)l.size() - 1) {\n\
    \      // return findIndex(l, l[n] + 0.5);\n      return findIndex(l, l[n] + 0.5);\n\
    \    } else {\n      return -1;\n    }\n  };\n  // Find the median as the average\
    \ of middle two elements.\n  int mid = findMiddleIndex(l.size() / 2);\n  if (mid\
    \ >= 0) {\n    long long m1 = findMiddleIndex(mid);\n    long long m2 = findMiddleIndex(mid);\n\
    \    float m = (float)(m1 + m2) / 2.0f;\n    return m; // median\n  } else {\n\
    \    return float(0);\n  }\n}\nint main() {\n    auto candidate = median;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5mlxtb1d.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp5mlxtb1d.cpp:10:40: error: cannot convert \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019 to \u2018long long int\u2019 in initialization\n\
    \   10 |   long long smallest = std::min_element(std::begin(l), std::end(l));\n\
    \      |                        ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                                        |\n      |                   \
    \                     __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >\n/tmp/tmp5mlxtb1d.cpp:11:39: error: cannot convert \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019 to \u2018long long int\u2019 in initialization\n\
    \   11 |   long long largest = std::max_element(std::begin(l), std::end(l));\n\
    \      |                       ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                                       |\n      |                    \
    \                   __gnu_cxx::__normal_iterator<long int*, std::vector<long int>\
    \ >\n/tmp/tmp5mlxtb1d.cpp: In lambda function:\n/tmp/tmp5mlxtb1d.cpp:19:28: error:\
    \ \u2018l\u2019 is not captured\n   19 |     if (n >= 0 && n < (int)l.size() -\
    \ 1) {\n      |                            ^\n/tmp/tmp5mlxtb1d.cpp:18:46: note:\
    \ the lambda has no capture-default\n   18 |   auto findMiddleIndex = [&smallest,\
    \ &largest](int n) {\n      |                                              ^\n\
    /tmp/tmp5mlxtb1d.cpp:8:32: note: \u2018std::vector<long int> l\u2019 declared\
    \ here\n    8 | float median(std::vector<long> l) {\n      |              ~~~~~~~~~~~~~~~~~~^\n\
    /tmp/tmp5mlxtb1d.cpp:21:14: error: \u2018findIndex\u2019 is not captured\n   21\
    \ |       return findIndex(l, l[n] + 0.5);\n      |              ^~~~~~~~~\n/tmp/tmp5mlxtb1d.cpp:18:46:\
    \ note: the lambda has no capture-default\n   18 |   auto findMiddleIndex = [&smallest,\
    \ &largest](int n) {\n      |                                              ^\n\
    /tmp/tmp5mlxtb1d.cpp:13:8: note: \u2018median(std::vector<long int>)::<lambda(std::vector<long\
    \ int>, long long int)> findIndex\u2019 declared here\n   13 |   auto f"
  stdout: ''
  timestamp: 1660092170
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  assert(l.size() > 2);\n  float left_median = std::accumulate(l.begin(),\
    \ l.begin() + l.size() / 2, 0.0f) / l.size() / 2;\n  float right_median = std::accumulate(l.rbegin(),\
    \ l.rbegin() + l.size() / 2, 0.0f) / l.size() / 2;\n  return left_median + (right_median\
    \ - left_median) * (l.size() / 2);\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp4oamj25r: /tmp/tmp4oamj25r.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n >= 3);\n    long l2 = n*(n+1)/2;\n\
    \    std::vector<long> l3(l2);\n    for (long i = 0; i < n; i++) {\n        l3[i]\
    \ = l[i];\n    }\n    // Sort the vector.\n    std::sort(l3.begin(), l3.end());\n\
    \    // Return middle element (0.5*n+1).\n    return l3[(n+1)/2];\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpybxydgt3: /tmp/tmpybxydgt3.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    float result = n==0? 0.0 : l[n/2] + (n%2?0.5:0.);\n\
    \    return result / (n*1.0f);\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpo3mwurmv: /tmp/tmpo3mwurmv.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n <= 1) return l[0];\n    long m = l[0]\
    \ + l[n - 1];\n    for (long i = 2; i < n; i++) m = l[i] + (l[i - 1] + l[i - 2])\
    \ / 2;\n    return m;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp8spqxs57: /tmp/tmp8spqxs57.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    // If any elements are non-positive, return (largest + smallest -\
    \ 1).\n    float smallest, largest;\n    smallest = std::numeric_limits<float>::max();\n\
    \    largest = -smallest;\n    for (long elem : l) {\n        smallest = std::min(elem,\
    \ smallest);\n        largest = std::max(elem, largest);\n    }\n    return (largest\
    \ + smallest - 1.0) / 2.0;\n}\nint main() {\n    auto candidate = median;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbg624kha.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpbg624kha.cpp:14:43: error: no matching function for call to \u2018\
    min(long int&, float&)\u2019\n   14 |         smallest = std::min(elem, smallest);\n\
    \      |                                           ^\nIn file included from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpbg624kha.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:198:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr const _Tp& std::min(const\
    \ _Tp&, const _Tp&)\u2019\n  198 |     min(const _Tp& __a, const _Tp& __b)\n \
    \     |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:198:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpbg624kha.cpp:14:43: note: \
    \  deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018long int\u2019\
    \ and \u2018float\u2019)\n   14 |         smallest = std::min(elem, smallest);\n\
    \      |                                           ^\nIn file included from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpbg624kha.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:246:5:\
    \ note: candidate: \u2018template<class _Tp, class _Compare> constexpr const _Tp&\
    \ std::min(const _Tp&, const _Tp&, _Compare)\u2019\n  246 |     min(const _Tp&\
    \ __a, const _Tp& __b, _Compare __comp)\n      |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:246:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpbg624kha.cpp:14:43:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    long int\u2019 and \u2018float\u2019)\n   14 |         smallest = std::min(elem,\
    \ smallest);\n      |                                           ^\nIn file included\
    \ from /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpbg624kha.cpp:2:"
  stdout: ''
  timestamp: 1660092170
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    int N = l.size();\n    int m = (N + 1) / 2;\n    if (N % 2 == 1) m++;\n\
    \    assert(N % 2 == 0);\n    float avg = 0.0f;\n    for (long i = 0; i <= N;\
    \ i++) {\n        avg += l[i];\n    }\n    avg /= N;\n    if (N % 2 == 0) {\n\
    \        std::swap(avg, (avg + l[N - 1]));\n    }\n    return avg;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcozvs_4t.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpcozvs_4t.cpp:19:40: error: no matching function for call to \u2018\
    swap(float&, float)\u2019\n   19 |         std::swap(avg, (avg + l[N - 1]));\n\
    \      |                                        ^\nIn file included from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpcozvs_4t.cpp:2:\n/usr/include/c++/9/bits/move.h:182:5:\
    \ note: candidate: \u2018typename std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<_Tp>\
    \ >, std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type\
    \ std::swap(_Tp&, _Tp&) [with _Tp = float; typename std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<_Tp>\
    \ >, std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type\
    \ = void]\u2019 <near match>\n  182 |     swap(_Tp& __a, _Tp& __b)\n      |  \
    \   ^~~~\n/usr/include/c++/9/bits/move.h:182:5: note:   conversion of argument\
    \ 2 would be ill-formed:\n/tmp/tmpcozvs_4t.cpp:19:29: error: cannot bind non-const\
    \ lvalue reference of type \u2018float&\u2019 to an rvalue of type \u2018float\u2019\
    \n   19 |         std::swap(avg, (avg + l[N - 1]));\n      |                 \
    \       ~~~~~^~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpcozvs_4t.cpp:2:\n/usr/include/c++/9/bits/move.h:205:5:\
    \ note: candidate: \u2018template<class _Tp, long unsigned int _Nm> typename std::enable_if<std::__is_swappable<_Tp>::value>::type\
    \ std::swap(_Tp (&)[_Nm], _Tp (&)[_Nm])\u2019\n  205 |     swap(_Tp (&__a)[_Nm],\
    \ _Tp (&__b)[_"
  stdout: ''
  timestamp: 1660092170
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  float med = 0.0;\n  int l_n = l.size();\n  if (l_n % 2 == 1)\n    med\
    \ = l[l_n / 2];\n  else {\n    long med1 = l[l_n / 2 - 1];\n    long med2 = l[l_n\
    \ / 2];\n    if (med + med2 > 0) med = (med + med2) >> 1;\n    else med = med1;\n\
    \  }\n  return med;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyubmp2e_.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpyubmp2e_.cpp:16:44: error: invalid operands of types \u2018float\u2019\
    \ and \u2018int\u2019 to binary \u2018operator>>\u2019\n   16 |     if (med +\
    \ med2 > 0) med = (med + med2) >> 1;\n      |                               ~~~~~~~~~~~~\
    \ ^~ ~\n      |                                    |          |\n      |     \
    \                               float      int\n"
  stdout: ''
  timestamp: 1660092170
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // Return median of elements in the vector l.\n  assert(l.size() >=\
    \ 2);\n\n  // Store the values into variables.\n  long long int mid = l.size()\
    \ / 2;\n  long long int left = l[mid];\n  long long int right = l[mid + 1];\n\n\
    \  // If the right half is not even then return mid.\n  if (right % 2 == 0) {\n\
    \    return mid;\n  }\n\n  // If right half is odd, then calculate median as right\
    \ - left.\n  long long int mid2 = mid + 1;\n  long long int left2 = l[mid2];\n\
    \  long long int right2 = l[mid2 + 1];\n  return ((right2 + left2) / 2.0);\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpcbtzdo7c: /tmp/tmpcbtzdo7c.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  int len = l.size();\n  assert(len > 1);\n  float res = l[0] * (len -\
    \ 1) / 2.0 + l[len - 1] * (len) / 2.0;\n  for (int i = 1; i < len; i++) {\n  \
    \  if (l[i] > res)\n      res = l[i];\n  }\n  return res;\n}\nint main() {\n \
    \   auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpg53d53oy: /tmp/tmpg53d53oy.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    long long n1 = l.size();\n    long long\
    \ n2 = (n1 / 2);\n    long long n3 = n1 - n2;\n    if (n3 == 0) return l[0];\n\
    \    if (n3 == 1) return l[n2];\n    float lower = l[n2];\n    float upper = l[n3];\n\
    \    float median;\n    if (lower < upper) median = lower;\n    else median =\
    \ upper;\n    return median;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp6ii73fzb: /tmp/tmp6ii73fzb.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  assert(l.size() > 0);\n  long half = l.size() / 2;\n  if (l.size() %\
    \ 2 == 1) {\n    return std::min({l[half], l[half + 1]}); // if odd length: min(l[half],\
    \ l[half + 1]).\n  }\n  return std::min({l[half], l[half - 1] + l[half], l[half\
    \ + 1]}); // if even length: min(l[half], l[half + 1]).\n}\nint main() {\n   \
    \ auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp2j5orcfy: /tmp/tmp2j5orcfy.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 1);\n    float median = 0;\n    long long l = 0,\
    \ r = l.size() - 1;\n    while (l <= r) {\n        float mid = ((float)l+r)/2.0f;\n\
    \        if (l<r)\n            median += (l<mid) ? l+r : r-mid;\n        if (l>r)\n\
    \            median += (l<mid) ? mid : r-mid;\n        l += 1;\n        r -= 1;\n\
    \    }\n    return median;\n}\nint main() {\n    auto candidate = median;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph6yfzeeu.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmph6yfzeeu.cpp:11:15: error: declaration of \u2018long long int l\u2019\
    \ shadows a parameter\n   11 |     long long l = 0, r = l.size() - 1;\n      |\
    \               ^\n/tmp/tmph6yfzeeu.cpp:11:28: error: request for member \u2018\
    size\u2019 in \u2018l\u2019, which is of non-class type \u2018long long int\u2019\
    \n   11 |     long long l = 0, r = l.size() - 1;\n      |                    \
    \        ^~~~\n"
  stdout: ''
  timestamp: 1660092170
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    std::sort(l.begin(), l.end());\n    size_t mid = l.size() / 2;\n \
    \   if (l.size() % 2 == 1) {\n        // A[mid] <= A[mid+1]\n        if (l[mid]\
    \ <= l[mid+1]) {\n            return l[mid];\n        }\n        return l[mid+1];\n\
    \    }\n    // A[mid] >= A[mid+1]\n    return std::min(l[mid], l[mid+1]);\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpvgx6xepg: /tmp/tmpvgx6xepg.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    return static_cast<float>(std::nth_element(l.begin(), l.begin() +\
    \ l.size()/2, l.end()) -\n                            l.begin()) / l.size() /\
    \ 2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpskzdji9m.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpskzdji9m.cpp:9:92: error: no match for \u2018operator-\u2019 (operand\
    \ types are \u2018void\u2019 and \u2018std::vector<long int>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long int> >\u2019\
    })\n    9 |     return static_cast<float>(std::nth_element(l.begin(), l.begin()\
    \ + l.size()/2, l.end()) -\n      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^\n      |                                               |\n      |        \
    \                                       void\n   10 |                        \
    \     l.begin()) / l.size() / 2;\n      |                             ~~~~~~~~~\
    \                                                       \n      |            \
    \                        |\n      |                                    std::vector<long\
    \ int>::iterator {aka __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >}\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/specfun.h:45,\n               \
    \  from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpskzdji9m.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:974:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ decltype ((__lhs.base() - __rhs.base())) __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_IteratorL,\
    \ _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\
    \n  974 |     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,\n\
    \      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:974:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpskzdji9m.cpp:10:37: note: \
    \  mismatched types \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \ and \u2018void\u2019\n   10 |                             l.begin()) / l.size()\
    \ / 2;\n      |                                     ^\nIn file included from /usr/i"
  stdout: ''
  timestamp: 1660092170
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    if (l.size() % 2 == 1) {\n        return l[(l.size() / 2) - 1] + (l[(l.size()\
    \ / 2)]) / 2.0;\n    }\n    return l[(l.size() / 2)];\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpl_jtsu1_: /tmp/tmpl_jtsu1_.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    int index = (int)l.size()/2;\n    int lo\
    \ = l[index];\n    int hi = l[index ^ 1];\n    return 0.5 * (hi + lo);\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmppsu4hhxd: /tmp/tmppsu4hhxd.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    int sz = l.size();\n    if (sz <= 0)\n        return 0;\n    std::sort(l.begin(),\
    \ l.end());\n    float mid = l[sz / 2];\n    return (sz % 2) ? mid : mid + median(std::vector<long>(l.begin()\
    \ + sz / 2, l.end()));\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpxxi0b3cy: /tmp/tmpxxi0b3cy.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long l = l.size();\n    if (l == 0) return 0.0f;\n    // Compute median:\n\
    \    long m = l / 2;\n    long count = 0;\n    for (long i = 0; i < l; ++i) {\n\
    \        if (l[i] < m) count++;\n        else break;\n    }\n    if (l % 2 ==\
    \ 0)\n        return ((l[count / 2] + l[count / 2 - 1]) / 2.0f);\n    else return\
    \ l[count / 2];\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9v564boi.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp9v564boi.cpp:9:10: error: declaration of \u2018long int l\u2019 shadows\
    \ a parameter\n    9 |     long l = l.size();\n      |          ^\n/tmp/tmp9v564boi.cpp:9:16:\
    \ error: request for member \u2018size\u2019 in \u2018l\u2019, which is of non-class\
    \ type \u2018long int\u2019\n    9 |     long l = l.size();\n      |         \
    \       ^~~~\n/tmp/tmp9v564boi.cpp:15:16: error: invalid types \u2018long int[long\
    \ int]\u2019 for array subscript\n   15 |         if (l[i] < m) count++;\n   \
    \   |                ^\n/tmp/tmp9v564boi.cpp:19:29: error: invalid types \u2018\
    long int[long int]\u2019 for array subscript\n   19 |         return ((l[count\
    \ / 2] + l[count / 2 - 1]) / 2.0f);\n      |                             ^\n/tmp/tmp9v564boi.cpp:19:48:\
    \ error: invalid types \u2018long int[long int]\u2019 for array subscript\n  \
    \ 19 |         return ((l[count / 2] + l[count / 2 - 1]) / 2.0f);\n      |   \
    \                                             ^\n/tmp/tmp9v564boi.cpp:20:28: error:\
    \ invalid types \u2018long int[long int]\u2019 for array subscript\n   20 |  \
    \   else return l[count / 2];\n      |                            ^\n"
  stdout: ''
  timestamp: 1660092170
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long mid = l.size() / 2;\n  if (l.size() == 0 || mid % 2 == 0)\n   \
    \ return (l[mid] + l[mid]) / 2;\n  else\n    return l[mid];\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpc69ojlg3: /tmp/tmpc69ojlg3.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  assert(l.size() > 1);\n  float mid = l.size() / 2.0;\n  std::vector<float>\
    \ sorted;\n  sorted.reserve(l.size());\n  for (size_t i = 0; i < l.size(); ++i)\
    \ {\n    sorted.push_back(std::abs(l[i] - mid));\n  }\n  sort(sorted.begin(),\
    \ sorted.end());\n  return sorted[sorted.size() / 2.0];\n}\nint main() {\n   \
    \ auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpllbcf3id: /tmp/tmpllbcf3id.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    size_t size = l.size();\n    long mid = size/2;\n    if(size == 0)\
    \ return 0.0f;\n    if(size % 2 == 0) {\n        if(l[mid] < l[mid + 1]) return\
    \ l[mid];\n        return l[mid + 1];\n    }\n    else {\n        if(l[mid] <\
    \ l[mid-1]) return l[mid];\n        return l[mid-1];\n    }\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmph4im3gee: /tmp/tmph4im3gee.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092170
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long n = l.size();\n  assert(n % 2 == 1);\n  assert(n >= 1);\n  // Sort\
    \ the vector\n  std::vector<long> temp(n);\n  std::iota(temp.begin(), temp.end(),\
    \ 0);\n  std::sort(temp.begin(), temp.end(), std::greater<long>());\n  // Calculate\
    \ the midpoint\n  long m = n / 2;\n  float x = 0;\n  for (long i = 0; i < n; i++)\n\
    \    if (i == m) x += l[i];\n    else x += (2 * l[i] - l[m - 1]);\n  return x;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpytx8u7ji: /tmp/tmpytx8u7ji.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n > 0);\n    long mid = n / 2;\n  \
    \  if (mid % 2 == 0) {\n        return std::pair<float, long>((l[mid / 2] + l[mid\
    \ / 2 - 1]) / 2.0,\n                                      l[mid]);\n    } else\
    \ {\n        return std::pair<float, long>((l[mid] + l[mid + 1]) / 2.0,\n    \
    \                                  l[mid]);\n    }\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwptffdhi.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpwptffdhi.cpp:13:21: error: cannot convert \u2018std::pair<float, long\
    \ int>\u2019 to \u2018float\u2019 in return\n   13 |         return std::pair<float,\
    \ long>((l[mid / 2] + l[mid / 2 - 1]) / 2.0,\n      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                     |\n      |                     std::pair<float, long\
    \ int>\n   14 |                                       l[mid]);\n      |      \
    \                                 ~~~~~~~\n/tmp/tmpwptffdhi.cpp:16:21: error:\
    \ cannot convert \u2018std::pair<float, long int>\u2019 to \u2018float\u2019 in\
    \ return\n   16 |         return std::pair<float, long>((l[mid] + l[mid + 1])\
    \ / 2.0,\n      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                     |\n      |                     std::pair<float, long\
    \ int>\n   17 |                                       l[mid]);\n      |      \
    \                                 ~~~~~~~\n"
  stdout: ''
  timestamp: 1660092170
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    float s = 0.0;\n    long size = l.size();\n    if (size == 0)\n  \
    \      return 0.0;\n    size_t mid = size / 2;\n    float midval;\n    if (size\
    \ % 2 == 0) {\n        midval = l[mid];\n        midval = (midval + l[mid-1])\
    \ / 2.0;\n        s = midval;\n    } else {\n        midval = l[mid];\n      \
    \  midval = (midval + l[mid+1]) / 2.0;\n        s = midval;\n    }\n    if (s\
    \ == 0.0)\n        return 0.0;\n    float res = 0.0;\n    while (size > 1) {\n\
    \        if (size > 3) {\n            midval = l[mid];\n            midval = (midval\
    \ + l[mid-1]) / 2.0;\n            s = midval;\n        } else {\n            midval\
    \ = l[mid];\n            s = midval;\n        }\n        res += s;\n        size\
    \ -= 2;\n        mid += 1;\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpv3_npd6p: /tmp/tmpv3_npd6p.cpp:44: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // find median with binary search - O(log(n))\n  int m = std::ceil((float)l.size()\
    \ / (float)2);\n  if (m.zero()) return l[0];\n  if (l.size() % 2 == 1) return\
    \ l[m];\n  long mid = l.size() / 2;\n  if (l[mid] == l[mid - 1]) mid++;\n  return\
    \ l[mid];\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1vl9_wcv.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp1vl9_wcv.cpp:11:9: error: request for member \u2018zero\u2019 in \u2018\
    m\u2019, which is of non-class type \u2018int\u2019\n   11 |   if (m.zero()) return\
    \ l[0];\n      |         ^~~~\n"
  stdout: ''
  timestamp: 1660092170
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() >= 1);\n    float a = l.front();\n    for (std::vector<long>::iterator\
    \ it = l.begin() + 1; it != l.end(); it++)\n        a += *it;\n    return a /\
    \ (l.size() - 1);\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpsybvqoqu: /tmp/tmpsybvqoqu.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll <= 0) return 0.0;\n    float\
    \ median = ((float)(ll-1)/2.0f) + ((float)l/ll);\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1rmo946h.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp1rmo946h.cpp:11:51: error: invalid cast from type \u2018std::vector<long\
    \ int>\u2019 to type \u2018float\u2019\n   11 |     float median = ((float)(ll-1)/2.0f)\
    \ + ((float)l/ll);\n      |                                                  \
    \ ^\n"
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  auto it = l.begin();\n  float res = std::min(it+1, l.end()) - std::max(it,\
    \ l.begin());\n  return res;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp58vwn5ll: /tmp/tmp58vwn5ll.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  auto begin = l.begin();\n  auto end = l.end();\n  float midpoint = (*begin\
    \ + end) / 2.0f;\n\n  // If there are an odd number of elements, round up.\n \
    \ if (end % 2) midpoint = midpoint + 1;\n\n  // If the first and last elements\
    \ are the same, return the middle element.\n  if (*begin == *end) return midpoint;\n\
    \n  // Find the middle element by iterating over the sorted elements.\n  long\
    \ mid = midpoint;\n  for (; begin != end; ++begin) {\n    if (*begin <= mid) mid\
    \ = *begin;\n  }\n\n  // Return the middle element.\n  return mid;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8qyd1388.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp8qyd1388.cpp:11:35: error: no match for \u2018operator/\u2019 (operand\
    \ types are \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long int>\
    \ >\u2019 and \u2018float\u2019)\n   11 |   float midpoint = (*begin + end) /\
    \ 2.0f;\n      |                    ~~~~~~~~~~~~~~ ^ ~~~~\n      |           \
    \                 |        |\n      |                            |        float\n\
    \      |                            __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >\nIn file included from /usr/include/c++/9/ccomplex:39,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n           \
    \      from /tmp/tmp8qyd1388.cpp:2:\n/usr/include/c++/9/complex:421:5: note: candidate:\
    \ \u2018template<class _Tp> std::complex<_Tp> std::operator/(const std::complex<_Tp>&,\
    \ const std::complex<_Tp>&)\u2019\n  421 |     operator/(const complex<_Tp>& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:421:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp8qyd1388.cpp:11:37:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long int>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   11 |   float\
    \ midpoint = (*begin + end) / 2.0f;\n      |                                 \
    \    ^~~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n          \
    \       from /tmp/tmp8qyd1388.cpp:2:\n/usr/include/c++/9/complex:430:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator/(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  430 |     operator/(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:430:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp8qyd1388.cpp:11:37:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long int>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   11 |   float\
    \ midpoint = (*begin + end) / 2.0f;\n      |                  "
  stdout: ''
  timestamp: 1660092170
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    // Compute range from vector.\n    long n = l.size();\n    long s\
    \ = (n + 1.0) / 2.0; // Sign of dividing n by 2.\n    long middle = l [s % n];\n\
    \    // Sort vector using merge sort and compute median as middle of sorted vector.\n\
    \    std::vector<int> l2;\n    for (long i = 0; i < n; ++i)\n        l2.push_back(l[i]);\n\
    \    sort(l2.begin(), l2.end());\n    return (float)middle;\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp11oi7_ir: /tmp/tmp11oi7_ir.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    l.sort();\n    return l[l.size()/2];\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6u6ve407.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp6u6ve407.cpp:9:7: error: \u2018class std::vector<long int>\u2019 has\
    \ no member named \u2018sort\u2019\n    9 |     l.sort();\n      |       ^~~~\n"
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    std::vector<long>::iterator it;\n    long temp;\n    float median\
    \ = 0;\n    // Get middle element\n    it = l.begin() + l.size() / 2;\n    temp\
    \ = *it;\n    // If there are at least two elements, return middle element\n \
    \   // If there are only 1 elements, return middle element\n    if (l.size() >=\
    \ 2) {\n        median = temp;\n    } else {\n        median = *it;\n    }\n \
    \   return median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpr1wlcsrp: /tmp/tmpr1wlcsrp.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    assert(l.size() % 2 == 1);\n    assert(l.size()\
    \ <= 1000);\n    int center = l.size() / 2;\n    long l1 = l[center - 1];\n  \
    \  long l2 = l[center];\n    if (l2 > l1) {\n        std::swap(l1, l2);\n    \
    \    center = l.size() / 2;\n    }\n    if (l2 + 0.5f < l1) {\n        std::swap(l1,\
    \ l2);\n        center = l.size() / 2;\n    }\n    if (l1 == l2) {\n        return\
    \ 0.f;\n    }\n    return 0.5f * (l1 + l2) / 2;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpem4fh4c_: /tmp/tmpem4fh4c_.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // Sort vector\n  sort(l.begin(), l.end());\n  // Middle element\n \
    \ size_t mid = l.size() / 2;\n  // Return if vector is 1 element\n  if (l.size()\
    \ <= 1) return l.front();\n  // Return if vector is 2 elements\n  if (l.size()\
    \ <= 2) return (l.front() + l.back()) / 2.0;\n  // Return if vector is even number\
    \ of elements\n  if (l.size() % 2 == 0) return (l.front() + l.back()) / 2.0;\n\
    \  // Find the middle element\n  float middle = l[mid];\n  // Iterate through\
    \ two vectors swapping two elements\n  for (size_t i = 0; i < l.size(); i++) {\n\
    \    if (i != mid) {\n      std::swap(l[i], l[mid]);\n    }\n  }\n  // Find return\
    \ middle element\n  return middle; // return (l.front() + l.back()) / 2.0;\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp0ik5j34f: /tmp/tmp0ik5j34f.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // Get number of elements\n  size_t n = l.size();\n  // Return average\
    \ of median\n  return (float)(((n & 1) ? l[n / 2] : (l[n / 2] + l[n / 2 - 1]))\
    \ / 2.0);\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp_o8etij2: /tmp/tmp_o8etij2.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092171
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  std::sort(l.begin(), l.end());\n  return (l.size() % 2) ? l[l.size()/2]\
    \ : (l[l.size()/2-1] + l[l.size()/2]) / 2;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp_w2pg3zr: /tmp/tmp_w2pg3zr.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)6,
    (long)5}))) == (5.5)'' failed.

    '
  stdout: ''
  timestamp: 1660092170
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n\tassert (l.size() > 0);\n\tfloat sum = 0;\n\tfloat size = l.size();\n\
    \tfor (int i = 0; i < size; i++) {\n\t\tsum += l[i];\n\t}\n\treturn sum / size;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpkwxcj7o5: /tmp/tmpkwxcj7o5.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092173
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    sort(l.begin(), l.end());\n    size_t mid = l.size() / 2;\n    if\
    \ (l.size() % 2 == 1) mid--;\n    float result = (l[mid + 1] + l[mid]) / 2;\n\
    \    return result;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpnyo8uoab: /tmp/tmpnyo8uoab.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092173
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  int n = l.size();\n  float mid = n/2.0f;\n  std::nth_element(l.begin(),\
    \ l.begin() + mid, l.end());\n  return (*(l.begin() + mid)) / n;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp8htxdf5n: /tmp/tmp8htxdf5n.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092173
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    std::nth_element(l.begin(), l.begin() + l.size()/2, l.end());\n  \
    \  return l[l.size()/2];\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpd6x3jrei: /tmp/tmpd6x3jrei.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    auto a = l.begin();\n    auto b = l.end();\n    long n = (b - a) /\
    \ 2;\n    if (n & 1) return std::min(a + n, b);\n    else return std::max(a, b);\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp75n304xo.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp75n304xo.cpp:12:31: error: cannot convert \u2018const __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019 to \u2018float\u2019 in return\n   12 |\
    \     if (n & 1) return std::min(a + n, b);\n      |                       ~~~~~~~~^~~~~~~~~~\n\
    \      |                               |\n      |                            \
    \   const __gnu_cxx::__normal_iterator<long int*, std::vector<long int> >\n/tmp/tmp75n304xo.cpp:13:25:\
    \ error: cannot convert \u2018const __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >\u2019 to \u2018float\u2019 in return\n   13 |     else return std::max(a,\
    \ b);\n      |                 ~~~~~~~~^~~~~~\n      |                       \
    \  |\n      |                         const __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\n"
  stdout: ''
  timestamp: 1660092173
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long mid = l.size() / 2;\n    if (l.size() % 2 == 1) {\n        return\
    \ l[mid];\n    } else {\n        return (l[mid] + l[l.size() / 2]) / 2.0;\n  \
    \  }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpblyl_gyb: /tmp/tmpblyl_gyb.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092173
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n\tif (l.size() % 2 == 0) return static_cast<float>(l[l.size() / 2 - 1]\
    \ + l[l.size() / 2]) / 2.0f;\n\telse return static_cast<float>(l[l.size() / 2])\
    \ / 2.0f;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp81gpo2y6: /tmp/tmp81gpo2y6.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092173
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    std::sort(l.begin(), l.end());\n    return l.size() >= 2 ? (l[l.size()\
    \ - 1] + l[l.size() / 2 - 1]) / 2.0 : 0;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmprh0b6qid: /tmp/tmprh0b6qid.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n != 0 && n != 1);\n    if (n\
    \ % 2 == 0)\n        return l[n / 2 - 1] + (l[n / 2] + l[n / 2 - 1]) / 2.0;\n\
    \    else\n        return l[n / 2];\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpb7cgezj3: /tmp/tmpb7cgezj3.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    float x = 0, y = 0;\n    long i = 0, n = l.size();\n    // Check if\
    \ there are any even elements.\n    if (n % 2 == 0) {\n        // If the number\
    \ of elements is odd, find the average.\n        // >>> median((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n        // float(3)\n        i += 1;\n\
    \        x += (double)l[i] / n;\n        // >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n        // float(15.0)\n\
    \        i += 1;\n        y += (double)l[i] / n;\n    } else {\n        // If\
    \ the number of elements is even, find the average.\n        // >>> median((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5})))\n        // float(3)\n        i += 1;\n\
    \        x += (double)l[i] / n;\n        i += 1;\n        x += (double)l[i] /\
    \ n;\n        // >>> median((std::vector<long>({(long)-10, (long)4, (long)6, (long)1000,\
    \ (long)10, (long)20})))\n        // float(3)\n        i += 1;\n        y += (double)l[i]\
    \ / n;\n        i += 1;\n        y += (double)l[i] / n;\n    }\n    // Return\
    \ the median of x and y or x + y if x and y are equal.\n    return (x > y ? x\
    \ : y);\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpkdk2mi84: /tmp/tmpkdk2mi84.cpp:42: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  if (l.size() == 0) return 0;\n  long low = 0, high = l.size() - 1;\n\
    \  if (l.front() < l.back()) std::swap(low, high);\n  int mid = low + (high -\
    \ low) / 2;\n  if (m[mid] == 0) return l.front();\n  int pivot = m[mid];\n  if\
    \ (pivot != 0) return pivot; // median is not defined, return first element\n\
    \  int left = 0;\n  int right = (int)l.size();\n  while (left < right) {\n   \
    \ while (left < right && l[left] <= pivot) left++;\n    while (right > left &&\
    \ l[right] > pivot) right--;\n    if (left < right) {\n      std::swap(l[left],\
    \ l[right]);\n      left++;\n      right--;\n    }\n  }\n  float ret = l[left];\n\
    \  while (right >= left) {\n    m[right] = m[left];\n    right--;\n    left++;\n\
    \  }\n  m[left] = pivot;\n  return ret;\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5pvuveei.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp5pvuveei.cpp:13:7: error: \u2018m\u2019 was not declared in this scope\n\
    \   13 |   if (m[mid] == 0) return l.front();\n      |       ^\n/tmp/tmp5pvuveei.cpp:14:15:\
    \ error: \u2018m\u2019 was not declared in this scope\n   14 |   int pivot = m[mid];\n\
    \      |               ^\n"
  stdout: ''
  timestamp: 1660092173
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long arr[n], temp = 0;\n    int k = 0;\n    bool flag = false;\n\
    \n    arr.assign(n, 0);\n\n    for (auto x : l) {\n        arr[k++] = x;\n   \
    \ }\n\n    // Sort the array\n    std::sort(arr.begin(), arr.end());\n\n    temp\
    \ = arr[n/2];\n\n    // If count of element is odd then median is middle element.\n\
    \    if (n % 2 == 1) {\n        return temp;\n    }\n\n    if (arr[n/2] < arr[n/2\
    \ - 1]) {\n        temp = arr[n/2];\n    } else {\n        temp = arr[n/2 - 1];\n\
    \    }\n\n    // If count of element is odd then median is middle element.\n \
    \   if (n % 2 == 1) {\n        return temp;\n    }\n\n    if (arr[n/2] > arr[n/2\
    \ - 1]) {\n        temp = arr[n/2];\n    } else {\n        temp = arr[n/2 - 1];\n\
    \    }\n\n    return temp;\n}\nint main() {\n    auto candidate = median;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnz2c9k31.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpnz2c9k31.cpp:9:19: error: \u2018n\u2019 was not declared in this scope\n\
    \    9 |     long long arr[n], temp = 0;\n      |                   ^\n/tmp/tmpnz2c9k31.cpp:13:5:\
    \ error: \u2018arr\u2019 was not declared in this scope\n   13 |     arr.assign(n,\
    \ 0);\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660092173
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n\t// Initialize two pointers to the first and last elements, initialize\
    \ count\n\t// to zero, and set pointers to the first and last elements, while\
    \ the\n\t// remaining elements are less than the element with the smaller count.\n\
    \t// The pointers may cross at mid-points, and we will stop one element\n\t//\
    \ before crossing into the next element.\n\tlong *first = new long[l.size()],\
    \ *last = first, *count = first;\n\tstd::fill(first, first + l.size(), 0);\n\t\
    bool found = false;\n\twhile (last < first + l.size()) {\n\t\tif (*count + 1 >\
    \ (last - first)) {\n\t\t\tlast = first;\n\t\t\tstd::fill(first, first + l.size(),\
    \ 0);\n\t\t\tcount = first;\n\t\t} else {\n\t\t\tstd::fill(last, last + l.size(),\
    \ 0);\n\t\t\tcount += 1;\n\t\t}\n\t\t// Find the element with the smaller count.\n\
    \t\tfor (long i = 0; !found && i < l.size(); ++i) {\n\t\t\tif (l[i] < *count)\
    \ {\n\t\t\t\t*count = l[i];\n\t\t\t\tfirst[i] = last[i] = l[i];\n\t\t\t\tfound\
    \ = true;\n\t\t\t}\n\t\t}\n\t}\n\tassert(found);\n\t// Find the average of the\
    \ remaining elements.\n\tstd::sort(first, last + l.size() - 1);\n\tfloat median\
    \ = (last - first + 1) / 2.0;\n\tstd::fill(first, first + l.size(), 0);\n\tstd::fill(last,\
    \ last + l.size(), 0);\n\tfor (long i = l.size() - 1; i > 0; --i) {\n\t\tfirst[i]\
    \ = l[i];\n\t\tlast[i] = l[i - 1];\n\t}\n\tfirst[0] += last[0];\n\tstd::fill(first,\
    \ first + l.size(), 0);\n\tstd::fill(last, last + l.size(), 0);\n\tstd::fill(count,\
    \ count + l.size(), 0);\n\tfor (long i = 0; !found && i < l.size(); ++i) {\n\t\
    \tif (l[i] < *count) {\n\t\t\t*count = l[i];\n\t\t\tfirst[i] = last[i] = l[i];\n\
    \t\t\tfound = true;\n\t\t}\n\t}\n\tassert(found);\n\treturn median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092178
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  if (l.empty()) return 0;\n  std::nth_element(l.begin(), l.begin() +\
    \ l.size() / 2, l.end());\n  return ((double)l[l.size() / 2] + l[l.size() / 2\
    \ - 1]) / 2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpimxbzobm: /tmp/tmpimxbzobm.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092173
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long low = 0, high = l.size() - 1;\n    // find mid-point\n    while\
    \ (low < high) {\n        long mid = low + (high - low) / 2;\n        if (l[mid]\
    \ > l[high]) high = mid;\n        else if (l[mid] < l[low]) low = mid;\n     \
    \   else return l[mid];\n    }\n    return l[low];\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp5nizhszv: /tmp/tmp5nizhszv.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long n = l.size();\n  assert(n % 2 == 0);\n  long middle = (n + 1) >>\
    \ 1;\n  std::vector<long> v1 = l;\n  std::vector<long> v2 = std::move(v1);\n \
    \ v1[middle] = std::numeric_limits<long>::max();\n  v2[middle] = std::numeric_limits<long>::min();\n\
    \  auto vsum = std::inner_product(v1.begin(), v1.end(), v2.begin(), 0.0);\n  float\
    \ vmedian = (float)vsum / n;\n  return vmedian;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpriqwnquc: /tmp/tmpriqwnquc.cpp:10: float median(std::vector<long int>):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  if (l.size() % 2 == 0)\n    return (l[l.size()/2 - 1] + l[l.size()/2-1])/2.0f;\n\
    \  return l[l.size()/2];\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpqdh4ihs4: /tmp/tmpqdh4ihs4.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    float med = -1;\n    for (long n : l) {\n        if (med == -1 ||\
    \ n < med) {\n            med = n;\n        }\n    }\n    return med;\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp2dlpcupc: /tmp/tmp2dlpcupc.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    if (l.size() == 0) return 0;\n    auto it = std::nth_element(l.begin(),\
    \ l.begin() + l.size() / 2, l.end());\n    return *std::next(it);\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1yx0vxp1.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp1yx0vxp1.cpp:10:10: error: \u2018void it\u2019 has incomplete type\n\
    \   10 |     auto it = std::nth_element(l.begin(), l.begin() + l.size() / 2, l.end());\n\
    \      |          ^~\n"
  stdout: ''
  timestamp: 1660092173
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  std::sort(l.begin(), l.end());\n  return l.size() % 2 == 0 ? l[(l.size()\
    \ / 2) - 1] + l[(l.size() / 2)]\n                          : (l[(l.size() / 2)]\
    \ + l[(l.size() / 2) - 1u]) / 2.0;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmphkeomjbv: /tmp/tmphkeomjbv.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    std::nth_element(l.begin(), l.begin() +\
    \ l.size() / 2, l.end());\n    return l[l.size() / 2];\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpman2x5se: /tmp/tmpman2x5se.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // Sort vector l.\n  std::sort(l.begin(), l.end());\n  // Get the size\
    \ from l.\n  long size = l.size();\n  // Return median of elements divided by\
    \ size.\n  return static_cast<float>(l[size/2]) / size;\n}\nint main() {\n   \
    \ auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpklnhcgl0: /tmp/tmpklnhcgl0.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    // Sort elements in vector l, if not already sorted.\n    auto itr\
    \ = l.begin();\n    for (; itr != l.end(); ++itr)\n        std::iter_swap(itr,\
    \ *(itr+1));\n    l.insert(l.begin(), 0);\n\n    // If size is even then median\
    \ is midpoint of first and last element.\n    if (l.size() % 2 == 0) {\n     \
    \   return l[l.size()/2];\n    }\n\n    // Otherwise sort elements in vector l,\
    \ which sorts by value.\n    // In C++11, we can use:\n    // std::nth_element(l.begin(),\
    \ l.end(), l.begin()+1);\n    // to sort vector l, which would also require changing\
    \ function call.\n    // Using C++03, we would have to write new function with\
    \ same name\n    // and slightly different arguments.\n    // The new function\
    \ can look like this:\n    // void nth_element( std::vector<long>::iterator first,\
    \ std::vector<long>::iterator nth, std::vector<long>::iterator last );\n    std::nth_element(l.begin(),\
    \ l.end()-1, l.begin()+1);\n\n    // Return median of first and last elements.\n\
    \    return l[l.size()/2];\n}\nint main() {\n    auto candidate = median;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/bits/specfun.h:45,\n         \
    \        from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpj3374kz1.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:\
    \ In instantiation of \u2018void std::iter_swap(_ForwardIterator1, _ForwardIterator2)\
    \ [with _ForwardIterator1 = __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >; _ForwardIterator2 = long int]\u2019:\n/tmp/tmpj3374kz1.cpp:12:37:  \
    \ required from here\n/usr/include/c++/9/bits/stl_algobase.h:151:18: error: invalid\
    \ type argument of unary \u2018*\u2019 (have \u2018long int\u2019)\n  151 |  \
    \     swap(*__a, *__b);\n      |                  ^~~~\n"
  stdout: ''
  timestamp: 1660092173
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    // Sort the vector l on descending order.\n    std::sort(l.begin(),\
    \ l.end(), std::greater<long>());\n    return l[(l.size() / 2)];\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpr4flkfa7: /tmp/tmpr4flkfa7.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long long ll = l.size();\n  int l1 = ll / 2, l2 = ll - l1, median;\n\
    \  if (l1 > l2) median = l[l1 % 2 == 0];\n  else median = l[l2 % 2 == 0];\n  return\
    \ (float(median));\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpswb9opki: /tmp/tmpswb9opki.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  float leftmost, rightmost, median;\n  leftmost = (l[0] < 0)? l[0] :\
    \ -l[0];\n  rightmost = (l[l-1] < 0)? l[l-1] : -l[l-1];\n  median = (leftmost\
    \ + rightmost)/2;\n  return median;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5c3tqhby.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp5c3tqhby.cpp:11:19: error: no match for \u2018operator-\u2019 (operand\
    \ types are \u2018std::vector<long int>\u2019 and \u2018int\u2019)\n   11 |  \
    \ rightmost = (l[l-1] < 0)? l[l-1] : -l[l-1];\n      |                  ~^~\n\
    \      |                  | |\n      |                  | int\n      |       \
    \           std::vector<long int>\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/specfun.h:45,\n               \
    \  from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp5c3tqhby.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:415:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR> constexpr\
    \ decltype ((__y.base() - __x.base())) std::operator-(const std::reverse_iterator<_Iterator>&,\
    \ const std::reverse_iterator<_IteratorR>&)\u2019\n  415 |     operator-(const\
    \ reverse_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:415:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5c3tqhby.cpp:11:20:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   11 |   rightmost = (l[l-1] < 0)? l[l-1] : -l[l-1];\n      |             \
    \       ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/specfun.h:45,\n               \
    \  from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp5c3tqhby.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1209:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR> constexpr\
    \ decltype ((__x.base() - __y.base())) std::operator-(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorR>&)\u2019\n 1209 |     operator-(const move_iterator<_IteratorL>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1209:5: note:\
    \   templa"
  stdout: ''
  timestamp: 1660092173
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long largest = 0, largestIdx = 0;\n    for (size_t i = 0; i < l.size();\
    \ ++i) {\n        if (l[i] > largest)\n            largest = l[i];\n        largestIdx\
    \ = i;\n    }\n    assert(largestIdx != 0);\n    float mid = ((float)largestIdx\
    \ + 1) / (float)l.size();\n    return mid;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp_5il3zy1: /tmp/tmp_5il3zy1.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    float ans = (float) l.size() / 2;\n   \
    \ \n    for(std::vector<long>::iterator it=l.begin(); it!=l.end(); ++it) {\n \
    \       if(*it < ans)\n            ans = *it;\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp44vfpnc5: /tmp/tmp44vfpnc5.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  std::vector<long> sorted(l);\n  std::sort(sorted.begin(), sorted.end());\n\
    \  if (sorted.size() % 2 == 0) {\n    return (sorted[sorted.size() / 2] + sorted[sorted.size()\
    \ / 2 - 1]) / 2.0;\n  }\n  else {\n    return (sorted[sorted.size() / 2 - 1] +\
    \ sorted[sorted.size() / 2]) / 2.0;\n  }\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp7_v1b5_k: /tmp/tmp7_v1b5_k.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    if (l.size() % 2 == 0)\n        return (l[(l.size() / 2) - 1] + l[(l.size()\
    \ / 2)]) / 2.0;\n    else\n        return l[(l.size() / 2)];\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmptp5e9cu_: /tmp/tmptp5e9cu_.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // Sort the vector l.\n  std::sort(l.begin(), l.end());\n  // Return\
    \ median of l.\n  return l[l.size() / 2];\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmprrd9iik3: /tmp/tmprrd9iik3.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    // Write your code here.\n    std::vector<std::size_t> sizes;\n  \
    \  for (auto& i : l) {\n        auto n = sizes.size();\n        sizes.push_back(n);\n\
    \    }\n    std::vector<int> indexs(sizes.size());\n    for (size_t i = 0; i <\
    \ sizes.size(); i++) {\n        indexs[i] = i;\n    }\n    std::partial_sort(indexs.begin(),\
    \ indexs.end(), indexs.begin() + sizes.size() / 2);\n    int mid = (indexs.size()\
    \ / 2) + 1;\n    std::vector<int>::iterator it = indexs.begin();\n    std::vector<long>::iterator\
    \ it_end = l.end();\n    std::vector<long>::iterator it_middle = it_end - mid\
    \ / 2;\n    int count = 0;\n    while ((it < it_end) && (it < it_middle)) {\n\
    \        count += 1;\n        it = std::next(it, 1);\n    }\n    float average\
    \ = static_cast<float>(count) / static_cast<float>(l.size());\n    return average;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6x9nxp6l.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp6x9nxp6l.cpp:25:16: error: no match for \u2018operator<\u2019 (operand\
    \ types are \u2018std::vector<int>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<int*,\
    \ std::vector<int> >\u2019} and \u2018std::vector<long int>::iterator\u2019 {aka\
    \ \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long int> >\u2019\
    })\n   25 |     while ((it < it_end) && (it < it_middle)) {\n      |         \
    \    ~~ ^ ~~~~~~\n      |             |    |\n      |             |    __normal_iterator<long\
    \ int*,vector<long int>>\n      |             __normal_iterator<int*,vector<int>>\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6x9nxp6l.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:912:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator<(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  912 |\
    \     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:912:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp6x9nxp6l.cpp:25:18: note: \
    \  deduced conflicting types for parameter \u2018_Container\u2019 (\u2018std::vector<int>\u2019\
    \ and \u2018std::vector<long int>\u2019)\n   25 |     while ((it < it_end) &&\
    \ (it < it_middle)) {\n      |                  ^~~~~~\nIn file included from\
    \ /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp6x9nxp6l.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:919:5:\
    \ note: candidate: \u2018template<class _Iterator, class _Container"
  stdout: ''
  timestamp: 1660092173
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n\t// Find the length of vector l.\n\tsize_t len = l.size();\n\t// Compute\
    \ median from mid-points (if len > 2) of l.\n\tfloat med = ((len - 1) / 2.0) +\
    \ 1;\n\t// Return median of elements of vector l.\n\treturn med;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmptd95u1gi: /tmp/tmptd95u1gi.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() >= 2);\n    long mid = l[0]/2;\n    long a = l[0];\n\
    \    long b = l[0];\n    for (long i : l) {\n        a = b;\n        b = i;\n\
    \    }\n    if (b < mid) return (float)b;\n    return (float)a;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmplvv04x0d: /tmp/tmplvv04x0d.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  assert(l.size() > 0);\n  long long n = l.size();\n  assert(n % 2 ==\
    \ 0);\n\n  std::vector<long> even = l;\n  std::vector<long> odd = l;\n  odd.push_back(0);\n\
    \  // Even median is element with middle index n/2\n  long long median_even =\
    \ n / 2;\n  // Odd median is element with middle index n/2 - 1\n  long long median_odd\
    \ = median_even - 1;\n  if (median_even > median_odd) {\n    // Swap even and\
    \ odd median\n    std::swap(median_even, median_odd);\n  }\n  // Add middle element\n\
    \  even.push_back(median_even);\n  // Add other elements to odd median\n  for\
    \ (int i = (n / 2); i < n; i++) {\n    odd.push_back(even[i - 1]);\n  }\n\n  return\
    \ (float) median(even) + median(odd);\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpckozlq2x: /tmp/tmpckozlq2x.cpp:11: float median(std::vector<long int>):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  int n = l.size();\n  if (n % 2 == 1)\n    return l[n/2];\n  else\n \
    \   return (l[n-1] + l[n/2])/2;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp8o42sxwv: /tmp/tmp8o42sxwv.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    // Sort the vector in ascending order\n    std::sort(l.begin(), l.end());\n\
    \    // return the middle element\n    return l[(l.size()-1)/2];\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp21j1rdvc: /tmp/tmp21j1rdvc.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long mid = l.size() / 2;\n    if (l.size() % 2 == 0) return 0.5 *\
    \ (l[mid + 1] + l[mid]);\n    else return l[mid];\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp8lnlvc7l: /tmp/tmp8lnlvc7l.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // Your code here\n}\nint main() {\n    auto candidate = median;\n \
    \   assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp_3_v4rga: /tmp/tmp_3_v4rga.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(!l.empty());\n    int mid = l.size() / 2;\n    if (l.size()\
    \ % 2 == 0) {\n        return l[mid];\n    } else {\n        return (l[mid] +\
    \ l[mid]) / 2;\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmplmdtk3du: /tmp/tmplmdtk3du.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  std::sort(l.begin(), l.end());\n  return std::count_if(l.begin(), l.end(),\
    \ [&](long i) {\n    return i % 2 == 0;\n  }) / (l.size() * 2);\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpz77cdt9a: /tmp/tmpz77cdt9a.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() >= 2);\n    long mid = l.size() / 2;\n    return float((l[mid]\
    \ + ((l.size() - 1) / 2) - mid) / 2);\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpwev4eipe: /tmp/tmpwev4eipe.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  std::nth_element(l.begin(), l.begin() + l.size() / 2, l.end());\n  return\
    \ static_cast<float>(l.at(l.size() / 2)); // float cast to avoid overflow of long\
    \ float.\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpdbaorwk5: /tmp/tmpdbaorwk5.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() % 2 == 0); // TODO: check that number of elements\
    \ is even.\n    std::vector<float> a;\n    int n = l.size() / 2;\n    for (int\
    \ i = 0; i < n; ++i) {\n        a.push_back(l[2 * i]);\n        a.push_back(l[2\
    \ * i + 1]);\n    }\n    return *std::max_element(std::begin(a), std::end(a));\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpdq0cwqry: /tmp/tmpdq0cwqry.cpp:9: float median(std::vector<long int>):
    Assertion `l.size() % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092174
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  assert(l.size() > 0);\n  long length = l.size();\n  long mid = length\
    \ / 2;\n  long left = 0;\n  long right = length;\n  if (length%2 == 1) {\n   \
    \ left = mid;\n    right = mid+1;\n  } else {\n    left = mid + 1;\n    right\
    \ = mid + 2;\n  }\n  float pivot = (float)(l[left] + l[right]);\n  long pivotIndex\
    \ = left;\n  for (long i = left + 1; ; ++i) {\n    if (l[i] < pivot) {\n     \
    \ swap(l[i], l[pivotIndex]);\n      swap(l[pivotIndex], l[i]);\n      swap(l[i],\
    \ l[pivotIndex]);\n      --i;\n      ++pivotIndex;\n      if (i == length) {\n\
    \        break;\n      }\n    }\n  }\n  if (length % 2 == 1) {\n    return l[pivotIndex];\n\
    \  } else {\n    return pivot;\n  }\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpct_njdas.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpct_njdas.cpp:25:7: error: \u2018swap\u2019 was not declared in this\
    \ scope\n   25 |       swap(l[i], l[pivotIndex]);\n      |       ^~~~\n/tmp/tmpct_njdas.cpp:25:7:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpct_njdas.cpp:2:\n/usr/include/c++/9/bits/regex.h:2029:5:\
    \ note:   \u2018std::__cxx11::swap\u2019\n 2029 |     swap(match_results<_Bi_iter,\
    \ _Alloc>& __lhs,\n      |     ^~~~\nIn file included from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpct_njdas.cpp:2:\n/usr/include/c++/9/bits/move.h:182:5:\
    \ note:   \u2018std::swap\u2019\n  182 |     swap(_Tp& __a, _Tp& __b)\n      |\
    \     ^~~~\n/usr/include/c++/9/bits/move.h:182:5: note:   \u2018std::swap\u2019\
    \nIn file included from /usr/include/c++/9/exception:143,\n                 from\
    \ /usr/include/c++/9/ios:39,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpct_njdas.cpp:2:\n/usr/include/c++/9/bits/exception_ptr.h:166:5: note:\
    \   \u2018std::__exception_ptr::swap\u2019\n  166 |     swap(exception_ptr& __lhs,\
    \ exception_ptr& __rhs)\n      |     ^~~~\nIn file included from /usr/include/c++/9/filesystem:37,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:129,\n\
    \                 from /tmp/tmpct_njdas.cpp:2:\n/usr/include/c++/9/bits/fs_path.h:611:15:\
    \ note:   \u2018std::filesystem::__cxx11::swap\u2019\n  611 |   inline void swap(path&\
    \ __lhs, path& "
  stdout: ''
  timestamp: 1660092174
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // Find median and sort vector\n  std::sort(l.begin(), l.end());\n \
    \ \n  float s = l[0] + l[l.size() / 2];\n  \n  // Find which side of the median\
    \ is closer to 0\n  int i = (l.size() / 2) - 1;\n  \n  while (i >= 0 && l[i] <\
    \ s) {\n    \n    // Move i to right until it makes sense\n    while (i < l.size()\
    \ - 1 && l[i + 1] > s) {\n      i++;\n    }\n    \n    // If median is closer\
    \ to 0, move it to the left\n    if (l[i] < s) {\n      i++;\n    }\n  }\n  \n\
    \  // If all elements are less than median, return it\n  if (l.size() % 2) {\n\
    \    return l[i];\n  }\n  \n  // If one element is less than median, return it\n\
    \  else {\n    return l[i] - l[i - 1];\n  }\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpax_x8efp: /tmp/tmpax_x8efp.cpp:42: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092175
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // Sort the vector in ascending order.\n  std::sort(l.begin(), l.end());\n\
    \  // Compute the size of the middle element.\n  size_t mid = l.size() / 2;\n\
    \  // Return the average of the middle elements and the element next to it (median).\n\
    \  return l.at(mid) + ((mid + 1 > l.size()) ? (l.at(mid)) : ((l.at(mid + 1)) +\
    \ 0.5f));\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpltn8mrxj: /tmp/tmpltn8mrxj.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092175
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // Find size of vector and array index where element should be inserted.\n\
    \  int size = l.size();\n  int mid = size % 2 == 0 ? size / 2: size / 2 - 1;\n\
    \  // Create array for vector with size mid + 1\n  long *array = static_cast<long*>(malloc(mid\
    \ * sizeof(long)));\n  // Copy vector into array\n  for (int i = 0; i < mid; i++)\
    \ array[i] = l[i];\n  // Copy mid element into position specified by size when\
    \ size/2 was inserted.\n  array[mid] = l[mid];\n  // Copy size/2 element into\
    \ position 0 of array.\n  array[0] = l[size / 2];\n  // Sort array from low to\
    \ high.\n  sort(array, array + size);\n  // Return middle element of array.\n\
    \  return array[size / 2];\n}\nint main() {\n    auto candidate = median;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv5_08s7z.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpv5_08s7z.cpp:21:3: error: \u2018sort\u2019 was not declared in this\
    \ scope; did you mean \u2018std::sort\u2019?\n   21 |   sort(array, array + size);\n\
    \      |   ^~~~\n      |   std::sort\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv5_08s7z.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:296:1:\
    \ note: \u2018std::sort\u2019 declared here\n  296 | sort(_ExecutionPolicy&& __exec,\
    \ _RandomAccessIterator __first, _RandomAccessIterator __last);\n      | ^~~~\n"
  stdout: ''
  timestamp: 1660092175
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 1);\n    long n = l.size();\n    long div = n/2;\n\
    \    if (n % 2 == 0)\n        return ((l[div] + l[div+1])/2.0);\n    return l[div];\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpdcpvhpdo: /tmp/tmpdcpvhpdo.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092176
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  auto it = l.begin();\n  float res = std::numeric_limits<float>::max();\n\
    \  for (; it != l.end(); ++it) {\n    res = std::min(res, *it);\n  }\n  return\
    \ res;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfculixf9.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpfculixf9.cpp:12:28: error: no matching function for call to \u2018\
    min(float&, long int&)\u2019\n   12 |     res = std::min(res, *it);\n      | \
    \                           ^\nIn file included from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpfculixf9.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:198:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr const _Tp& std::min(const\
    \ _Tp&, const _Tp&)\u2019\n  198 |     min(const _Tp& __a, const _Tp& __b)\n \
    \     |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:198:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpfculixf9.cpp:12:28: note: \
    \  deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018float\u2019\
    \ and \u2018long int\u2019)\n   12 |     res = std::min(res, *it);\n      |  \
    \                          ^\nIn file included from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpfculixf9.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:246:5:\
    \ note: candidate: \u2018template<class _Tp, class _Compare> constexpr const _Tp&\
    \ std::min(const _Tp&, const _Tp&, _Compare)\u2019\n  246 |     min(const _Tp&\
    \ __a, const _Tp& __b, _Compare __comp)\n      |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:246:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpfculixf9.cpp:12:28:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    float\u2019 and \u2018long int\u2019)\n   12 |     res = std::min(res, *it);\n\
    \      |                            ^\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpfculixf9.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3450:5:\
    \ note: candidate: \u2018template<class _Tp> conste"
  stdout: ''
  timestamp: 1660092175
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    // Sort the vector to get a sorted copy of the vector.\n    std::sort(l.begin(),\
    \ l.end());\n\n    // Find the middle element.\n    // Return middle element.\n\
    \    float mid = (float)l.size() / 2.0f;\n    if (l.size() % 2 == 1)\n       \
    \ return l[mid];\n    else\n        return (l[mid - 1] + l[mid]) / 2.0f;\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092175
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long sizeOfArray = l.size();\n  // sort and find midpoint.\n  auto midpoint\
    \ = (sizeOfArray - 1) / 2;\n  long median = (sizeOfArray - 1) % 2;\n  // check\
    \ for even numbers by comparing each element with the midpoint\n  if (sizeOfArray\
    \ % 2 == 0) {\n    median = (midpoint - 1) / 2;\n  }\n  assert(sizeOfArray % 2\
    \ == 0);\n  // sort and find midpoint.\n  long leftIndex = sizeOfArray / 2;\n\
    \  long rightIndex = sizeOfArray - 1;\n\n  auto largest = std::max({l[leftIndex],\
    \ l[rightIndex]});\n  auto smallest = std::min({l[leftIndex], l[rightIndex]});\n\
    \n  if (largest < smallest) {\n    return median;\n  }\n\n  auto medianOfLeft\
    \ = median(l[leftIndex]);\n  auto medianOfRight = median(l[rightIndex]);\n\n \
    \ if (medianOfLeft == medianOfRight) {\n    return medianOfLeft;\n  }\n\n  return\
    \ float(medianOfLeft + medianOfRight) / 2;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr64a84b.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpxr64a84b.cpp:29:42: error: \u2018median\u2019 cannot be used as a function\n\
    \   29 |   auto medianOfLeft = median(l[leftIndex]);\n      |                \
    \                          ^\n/tmp/tmpxr64a84b.cpp:30:44: error: \u2018median\u2019\
    \ cannot be used as a function\n   30 |   auto medianOfRight = median(l[rightIndex]);\n\
    \      |                                            ^\n"
  stdout: ''
  timestamp: 1660092175
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  std::vector<int> v;\n  for (long i : l) {\n    v.push_back(i);\n  }\n\
    \  sort(v.begin(), v.end());\n  return static_cast<float>(v[v.size()/2]);\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp86e5ftou: /tmp/tmp86e5ftou.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092176
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    if (l.size() == 0) return 0;\n    long long size = (long long) l.size();\n\
    \    long long half = size / 2;\n    float left = 0;\n    float right = 0;\n \
    \   float median;\n    if (size % 2 == 0) {\n        left = (float) l[half];\n\
    \        right = (float) l[half - 1];\n    }\n    else {\n        left = (float)\
    \ l[half - 1];\n        right = (float) l[half];\n    }\n    median = (left +\
    \ right) / 2.0;\n    return median;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmps3ebx3xz: /tmp/tmps3ebx3xz.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092176
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long middle = l.size() / 2;\n    return l[middle];\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpqwmz4tod: /tmp/tmpqwmz4tod.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092176
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // return std::nth_element(std::begin(l), std::end(l), std::begin(l))[0]\
    \ - std::begin(l)\n  return std::nth_element(std::begin(l), std::end(l), std::begin(l))[0];\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyadxp41h.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpyadxp41h.cpp:10:71: error: invalid types \u2018void[int]\u2019 for\
    \ array subscript\n   10 |   return std::nth_element(std::begin(l), std::end(l),\
    \ std::begin(l))[0];\n      |                                                \
    \                       ^\n"
  stdout: ''
  timestamp: 1660092176
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    size_t n = l.size();\n    assert(n != 0);\n    if (n >= 2) {\n   \
    \     long a1 = l[0], a2 = l[n - 1];\n        size_t m = n / 2;\n        long\
    \ mid = m / 2;\n        long left = a1, right = a2;\n        while (left < right)\
    \ {\n            mid = (left + right) / 2;\n            if (mid < n) {\n     \
    \           std::swap(left,mid);\n                std::swap(right,mid);\n    \
    \        }\n            if (mid == 0) {\n                return std::max(left,right);\n\
    \            }\n            if (left == right) {\n                if (left ==\
    \ mid) {\n                    return a1;\n                } else if (right ==\
    \ mid) {\n                    return a2;\n                }\n                if\
    \ (left < mid) {\n                    return left;\n                }\n      \
    \          return right;\n            }\n            long midval = (l[mid - 1]\
    \ + l[mid]) / 2;\n            long midleft = l[mid - 1], midright = l[mid];\n\
    \            long midmid = l[mid + 1];\n            if (midval == midmid) {\n\
    \                if (midval == midleft) {\n                    return midmid;\n\
    \                }\n                if (midval == midright) {\n              \
    \      return midmid;\n                }\n            }\n            if (midval\
    \ < midmid) {\n                std::swap(left,mid);\n                std::swap(right,mid);\n\
    \            }\n        }\n    }\n    return l[0];\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp9tzjbhyc: /tmp/tmp9tzjbhyc.cpp:58: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092176
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long long size = l.size();\n  if(size == 0)\n    return 0.0;\n  if(size\
    \ % 2 == 0)\n    return static_cast<float>(l[size / 2] + l[size / 2 - 1]) / 2.0;\n\
    \  return static_cast<float>(l[size / 2 - 1] + l[size / 2]) / 2.0;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpp6x0he8e: /tmp/tmpp6x0he8e.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092176
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() % 2 == 1 ? l.size() / 2 : l.size() / 2 +\
    \ 1;\n    long long median = 0;\n    std::vector<long>::iterator midIt;\n    for\
    \ (midIt = l.begin() + 1; midIt != l.end(); ++midIt) {\n        if (*midIt <=\
    \ mid)\n            break;\n        median = (median + *midIt - mid) * ((midIt\
    \ - l.begin()) % 2 == 0 ? -1 : 1); // use average as mid\n    }\n    return median\
    \ / mid;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp_lbi3go1: /tmp/tmp_lbi3go1.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    float a = std::accumulate(l.begin(), l.end(),\
    \ 0.0) / l.size();\n    return a;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp7dej__6q: /tmp/tmp7dej__6q.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092176
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() >= 2);\n    long mid = l.size() / 2.0;\n    std::nth_element(l.begin(),\
    \ l.begin() + mid, l.end());\n    return std::accumulate(l.begin() + mid, l.end(),\
    \ l.front()) / l.size();\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpx201tqif: /tmp/tmpx201tqif.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // Sort in descending order.\n  std::sort(l.rbegin(), l.rend());\n \
    \ // Return middle element.\n  return l[(l.size() - 1) >> 1];\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpafkamwul: /tmp/tmpafkamwul.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092176
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() != 0);\n    int n = l.size() / 2;\n    if (n % 2 ==\
    \ 1) return l[n/2];\n    if (n % 2 == 0) return (l[n/2] + l[n/2-1])/2.0;\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp7piwmx93: /tmp/tmp7piwmx93.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    if (l.size() % 2 == 0)\n        return ((l[l.size() / 2 - 1] + l[l.size()\
    \ / 2]) / 2.0);\n    else\n        return l[l.size() / 2];\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpd9gcvwfu: /tmp/tmpd9gcvwfu.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    std::vector<long> mid;\n    mid.push_back((int)floor(l.size()/2.0));\n\
    \    mid.insert(mid.end(), l.begin()+mid.size()-1, l.begin()+mid.size());\n  \
    \  sort(mid.begin(), mid.end());\n    return (mid[mid.size()/2] + mid[(mid.size()/2)-1])/2.0;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpscz5ztj0: /tmp/tmpscz5ztj0.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  int n = l.size();\n  float m = static_cast<float>((n - 1) / 2.0);\n\
    \  for (int i = (n - 1); i >= 0; i--) {\n    if (l[i] < m)\n      m = l[i];\n\
    \  }\n  return m;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp5lf38tn3: /tmp/tmp5lf38tn3.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092176
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    // sort vector l\n    std::sort(l.begin(), l.end());\n    // return\
    \ median\n    return (double)l[l.size()/2];\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp0_i_15kh: /tmp/tmp0_i_15kh.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    std::sort(l.begin(), l.end());\n    if (l.size() % 2 == 1)\n     \
    \   return l[l.size() / 2];\n    return (l[l.size() / 2] + l[l.size() / 2 - 1])\
    \ / 2.0;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092176
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n\tfloat ans;\n\tint len = l.size();\n\tsort(l.begin(), l.end());\n\tfor\
    \ (int i = 0; i < (len - 1) / 2; i++)\n\t\tans = (l[i] + l[i + 1]) / 2;\n\treturn\
    \ ans;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpk1snagaf: /tmp/tmpk1snagaf.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092176
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // If l is empty, return zero.\n  if (l.size() == 0)\n    return 0;\n\
    \  // If l is one, return one.\n  if (l.size() == 1)\n    return l[0];\n  // Return\
    \ half of the length of l rounded upward.\n  int mid = (int)l.size() / 2;\n  assert(mid\
    \ > 0);\n  mid = mid;\n  int low = mid;\n  int high = mid;\n  // If length is\
    \ odd, return the middle element as low value.\n  if (l.size() % 2 == 1)\n   \
    \ low++;\n  // If length is even, return the middle element as high value.\n \
    \ else\n    high--;\n  // If length is odd, return middle element.\n  if (high\
    \ > low) {\n    return l[mid];\n  }\n  // If length is even, return the middle\
    \ element.\n  else {\n    return l[low];\n  }\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp6zz0kqn1: /tmp/tmp6zz0kqn1.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    std::vector<long>::iterator it = std::min_element(l.begin(), l.end());\n\
    \    if (it == l.end())\n        return *l.begin();\n    float center = (*it)\
    \ / l.size();\n    std::vector<long>::iterator it2 = std::min_element(l.begin(),\
    \ l.end());\n    float center2 = (*it2) / l.size();\n    float median = center;\n\
    \    if (center2 >= center) {\n        median = (center2 + center) / 2.;\n   \
    \ }\n    return median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpckc5vg_b: /tmp/tmpckc5vg_b.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092176
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long int n = l.size();\n    if (n == 0)\n        return 0.0;\n   \
    \ long int m = n / 2.0;\n    if (n % 2 == 0)\n        return l[(int)m];\n    else\
    \ return l[(int)m + (n - m) / 2];\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp3npuqrvm: /tmp/tmp3npuqrvm.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // Sort vector l\n  std::sort(l.begin(), l.end());\n  // Get length\
    \ of vector l\n  int n = l.size();\n  // Return n/2 if n is even.\n  return (n\
    \ * n + n - 1) / 2.0;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpadv0f0h_: /tmp/tmpadv0f0h_.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long N = l.size();\n    assert(N <= 20000);\n\n    long mid = N /\
    \ 2;\n    long leftSum = 0;\n    long rightSum = 0;\n\n    for (long i = 0; i\
    \ < N; i++) {\n        leftSum += l[i];\n        rightSum += l[(i + 1) % N];\n\
    \    }\n\n    if (rightSum > leftSum) {\n        return (float)leftSum;\n    }\n\
    \    return (float)rightSum;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpqhiauddp: /tmp/tmpqhiauddp.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long mid = l.size() / 2;\n    // Check if size is a even number\n\
    \    if (l.size() % 2 == 0)\n        return l[mid];\n    // If size is odd\n \
    \   long l1, l2, l3;\n    float lmedian;\n    if (mid < l.size() - 1) {\n    \
    \    l1 = l[mid];\n        l2 = l[mid + 1];\n        lmedian = (float) l1 + (float)\
    \ l2;\n    } else {\n        l1 = l[mid];\n        lmedian = l1;\n    }\n    if\
    \ (mid > 0) {\n        l3 = l[mid - 1];\n        lmedian = (float) lmedian + (float)\
    \ l3;\n    } else {\n        l3 = l[mid];\n    }\n    // Return the median\n \
    \   return lmedian;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpdu1areh5: /tmp/tmpdu1areh5.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092176
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  std::nth_element(l.begin(), l.begin() + l.size() / 2, l.end());\n  return\
    \ l.front();\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpksscnsy4: /tmp/tmpksscnsy4.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    int n = l.size();\n    if (n <= 1) {\n        throw std::invalid_argument(\"\
    l is empty\");\n    }\n    // Sort the vector (stable)\n    std::sort(l.begin(),\
    \ l.end());\n    if (n % 2 == 0) {\n        // Return the middle element (for\
    \ even n and odd n case)\n        float mid = l[n / 2];\n        return mid;\n\
    \    } else {\n        // Return the average of the two middle elements (for even\
    \ n case)\n        float mid1 = l[n / 2 - 1];\n        float mid2 = l[n / 2];\n\
    \        return (mid1 + mid2) / 2.0;\n    }\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp38s96b7i: /tmp/tmp38s96b7i.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    l.sort([](long a, long b){ return (a<b); });\n    return l[l.size()/2];\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwhi8a734.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpwhi8a734.cpp:9:7: error: \u2018class std::vector<long int>\u2019 has\
    \ no member named \u2018sort\u2019\n    9 |     l.sort([](long a, long b){ return\
    \ (a<b); });\n      |       ^~~~\n"
  stdout: ''
  timestamp: 1660092176
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n\tlong mid = (long) (l.size() / 2.f);\n\tif (l.size() % 2)\n\t\tmid =\
    \ std::max(mid, l.size() - 1);\n\tif (mid > 0)\n\t\treturn ((double) l[mid]) /\
    \ ((double) mid);\n\treturn 0.;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqkewrflt.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpqkewrflt.cpp:11:35: error: no matching function for call to \u2018\
    max(long int&, std::vector<long int>::size_type)\u2019\n   11 |   mid = std::max(mid,\
    \ l.size() - 1);\n      |                                   ^\nIn file included\
    \ from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpqkewrflt.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:222:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr const _Tp& std::max(const\
    \ _Tp&, const _Tp&)\u2019\n  222 |     max(const _Tp& __a, const _Tp& __b)\n \
    \     |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:222:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpqkewrflt.cpp:11:35: note: \
    \  deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018long int\u2019\
    \ and \u2018std::vector<long int>::size_type\u2019 {aka \u2018long unsigned int\u2019\
    })\n   11 |   mid = std::max(mid, l.size() - 1);\n      |                    \
    \               ^\nIn file included from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpqkewrflt.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:268:5:\
    \ note: candidate: \u2018template<class _Tp, class _Compare> constexpr const _Tp&\
    \ std::max(const _Tp&, const _Tp&, _Compare)\u2019\n  268 |     max(const _Tp&\
    \ __a, const _Tp& __b, _Compare __comp)\n      |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:268:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpqkewrflt.cpp:11:35:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    long int\u2019 and \u2018std::vector<long int>::size_type\u2019 {aka \u2018long\
    \ unsigned int\u2019})\n   11 |   mid = std::max(mid, l.size() - 1);\n      |\
    \                                   ^\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/in"
  stdout: ''
  timestamp: 1660092177
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n\tassert(l.size() > 0);\n\tlong long sum = 0;\n\tlong long n = l.size();\n\
    \tfor (long long i = 0; i < n; ++i) {\n\t\tsum += l[i];\n\t}\n\tlong long m =\
    \ sum / n;\n\tlong long minIdx;\n\tlong long maxIdx;\n\tbool isMax = false, isMin\
    \ = false;\n\tfor (long long i = 0; i < n; ++i) {\n\t\tif (l[i] > m) maxIdx =\
    \ i, isMax = true;\n\t\telse if (l[i] < m) minIdx = i, isMin = true;\n\t}\n\t\
    float f = (isMin ? l[minIdx] : l[maxIdx]);\n\tfloat m1 = m + f*(n - 1);\n\tfloat\
    \ m2 = m - f*(n - 1);\n\tfloat isSmallerThanMean = m2 < m1;\n\tfor (long long\
    \ i = 0; i < n; ++i) {\n\t\tl[i] -= f;\n\t}\n\tif (isSmallerThanMean) {\n\t\t\
    for (long long i = 0; i < n; ++i) {\n\t\t\tl[i] += m1;\n\t\t}\n\t} else {\n\t\t\
    for (long long i = 0; i < n; ++i) {\n\t\t\tl[i] += m2;\n\t\t}\n\t}\n\treturn isMax\
    \ ? l : -l;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo8yyxhpq.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpo8yyxhpq.cpp:39:21: error: no match for \u2018operator-\u2019 (operand\
    \ type is \u2018std::vector<long int>\u2019)\n   39 |  return isMax ? l : -l;\n\
    \      |                     ^~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/specfun.h:45,\n               \
    \  from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpo8yyxhpq.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:415:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR> constexpr\
    \ decltype ((__y.base() - __x.base())) std::operator-(const std::reverse_iterator<_Iterator>&,\
    \ const std::reverse_iterator<_IteratorR>&)\u2019\n  415 |     operator-(const\
    \ reverse_iterator<_IteratorL>& __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:415:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpo8yyxhpq.cpp:39:22:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::reverse_iterator<_Iterator>\u2019\
    \n   39 |  return isMax ? l : -l;\n      |                      ^\nIn file included\
    \ from /usr/include/c++/9/bits/stl_algobase.h:67,\n                 from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpo8yyxhpq.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1209:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR> constexpr\
    \ decltype ((__x.base() - __y.base())) std::operator-(const std::move_iterator<_IteratorL>&,\
    \ const std::move_iterator<_IteratorR>&)\u2019\n 1209 |     operator-(const move_iterator<_IteratorL>&\
    \ __x,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:1209:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpo8yyxhpq.cpp:39:22:\
    \ note:   \u2018std::vector<long int>\u2019 is not derived from \u2018const std::move_iterator<_Iterato"
  stdout: ''
  timestamp: 1660092176
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    // Sort vector l.\n    sort(l.begin(), l.end());\n    // If l contains\
    \ odd number of elements, median is \n    // l[floor(len(l)/2)] and if l contains\
    \ even number of elements, median is \n    // l[(len(l)/2)].\n    if (l.size()\
    \ % 2 == 1)\n        return ((l[l.size() / 2] + l[(l.size() / 2) - 1]) / 2.0);\n\
    \    else\n        return (l[(l.size() / 2)]);\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpiot44b8e: /tmp/tmpiot44b8e.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long s = l.size();\n  if (s < 3) {\n    return l[0];\n  }\n\n  // Grab\
    \ mid point of vector.\n  float mid = l[(s - 1) / 2];\n\n  // Set left and right\
    \ pointers.\n  int lptr = 0;\n  int rptr = s - 1;\n  while (lptr <= rptr) {\n\
    \    // While there are elements in the left part.\n    while (lptr <= rptr &&\
    \ l[lptr] < mid) {\n      lptr++;\n    }\n    // While there are elements in the\
    \ right part.\n    while (lptr <= rptr && l[rptr] >= mid) {\n      rptr--;\n \
    \   }\n    // If we have found a new element, return it.\n    if (lptr <= rptr)\
    \ {\n      return l[lptr];\n    }\n  }\n\n  // Return mid point of vector.\n \
    \ return mid;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpm563bx9x: /tmp/tmpm563bx9x.cpp:41: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092176
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n < 1) return 0;\n    long mid = n / 2;\n\
    \    long q1 = l[mid];\n    long q2 = (n - mid) + l[mid];\n    float midval =\
    \ (q1 + q2) / 2.0;\n    if (n == 1) return midval;\n    if (q1 == q2) return midval;\n\
    \    if (q1 > q2) std::swap(q1, q2);\n    float p = (float)(mid - 0.5f);\n   \
    \ long m = mid + 1;\n    float r = (float)(mid + 1) / 2.0;\n    float s = 0.5f\
    \ - p;\n    float f1 = midval * s;\n    float f2 = midval * (s - r);\n    float\
    \ f3 = (midval * r) + (q1 - q2) * s;\n    float f4 = ((n - mid) * r) + (q2 - q1)\
    \ * s;\n    if (f1 > f2) std::swap(f1, f2);\n    if (f3 > f4) std::swap(f3, f4);\n\
    \    return f1 + f2 + f3 + f4;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpcm1tqdbr: /tmp/tmpcm1tqdbr.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    sort(l.begin(), l.end(), std::greater<long>());\n    return l[(l.size()-1)\
    \ / 2]; // return middle value\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpw4iy_0it: /tmp/tmpw4iy_0it.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long low = l.size();\n    if (low == 0)\n        low = 1;\n    std::nth_element(l.begin(),\
    \ l.begin() + low/2, l.end());\n    return *std::max_element(l.begin(), l.begin()\
    \ + low/2);\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpaivferhx: /tmp/tmpaivferhx.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    std::nth_element(l.begin(), l.begin() + l.size()/2, l.end()); // Sort\
    \ list in descending order.\n    float m = ((l.size()+1)/2); // Middle element.\n\
    \    l.erase(std::remove(l.begin(), l.end(), m), l.end()); // Remove middle element.\n\
    \    return m;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpqrlkzqpi: /tmp/tmpqrlkzqpi.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long length = l.size();\n    if (length <= 0) return 0;\n   \
    \ long long mid = length / 2;\n    if (length == 2) return l[mid];\n    std::vector<long>::iterator\
    \ lower, upper;\n    if (mid % 2 == 0) lower = l.begin();\n    else lower = l.begin()\
    \ + mid;\n    lower = std::next(lower);\n    upper = l.end();\n    return (*(lower\
    \ + (mid - 1) * (upper - lower)) / 2);\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp4t3sq55e: /tmp/tmp4t3sq55e.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n > 0) {\n        return *std::max_element(l.begin(),\
    \ l.end()) / n;\n    }\n    return 0.0;\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp8jdjt1_l: /tmp/tmp8jdjt1_l.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    if (l.size() < 1) return -1;\n    std::nth_element(l.begin(), l.begin()\
    \ + l.size() / 2, l.end());\n    float median = std::distance(l.begin(), std::nth_element(l.begin(),\
    \ l.begin() + l.size() / 2, l.end()));\n    return median;\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpombf0iyn.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpombf0iyn.cpp:11:107: error: invalid use of void expression\n   11 |\
    \     float median = std::distance(l.begin(), std::nth_element(l.begin(), l.begin()\
    \ + l.size() / 2, l.end()));\n      |                                        \
    \                                                                   ^\n"
  stdout: ''
  timestamp: 1660092177
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    // Sort elements according to their values from the end of the\n \
    \   // sorted vector to the beginning.\n    std::sort(l.begin() + l.size() / 2,\
    \ l.end());\n\n    // Return median of sorted elements.\n    return l[l.size()\
    \ / 2];\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp94usnokw: /tmp/tmp94usnokw.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long lsize = l.size();\n    if (lsize % 2 == 0) {\n        auto it\
    \ = (l.begin() + lsize / 2);\n        return std::distance(l.begin(), it);\n \
    \   }\n    else return (l.end() - l.begin()) / 2;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpjajf1jaz: /tmp/tmpjajf1jaz.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092177
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n % 2 == 0);\n    float median = l[n/2];\n\
    \    for(int i = 1; i < n-1; i += 2) {\n        median = (median + l[i] + l[i+1])/3.0;\n\
    \    }\n    return median;\n}\nint main() {\n    auto candidate = median;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp8uw1lu1i: /tmp/tmp8uw1lu1i.cpp:10: float median(std::vector<long int>):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092178
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  if (l.size() < 3) {\n    // Return undefined value if less than 3 numbers\
    \ are given\n    float ret = INT_MAX;\n    return ret;\n  }\n  auto mid = l.size()\
    \ / 2;\n  long low = l[mid];\n  long high = l[mid];\n  for (int i = mid; i !=\
    \ 0; --i) {\n    low = std::min(low, l[i - 1]);\n    high = std::max(high, l[i\
    \ - 1]);\n  }\n  return float(low + high) / 2.0;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp4hy68chi: /tmp/tmp4hy68chi.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092178
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n\tlong long mid = std::distance(l.begin(), std::max_element(l.begin(),\
    \ l.end()));\n\tlong long low = (l.begin() + mid) / 2;\n\tlong long high = (l.begin()\
    \ + mid + 1) /2;\n\tfloat a = (float)low;\n\tfloat b = (float)(high);\n\tfloat\
    \ c = (a+b)/2;\n\treturn c;\n}\nint main() {\n    auto candidate = median;\n \
    \   assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpki3xhpua.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpki3xhpua.cpp:10:36: error: no match for \u2018operator/\u2019 (operand\
    \ types are \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long int>\
    \ >\u2019 and \u2018int\u2019)\n   10 |  long long low = (l.begin() + mid) / 2;\n\
    \      |                  ~~~~~~~~~~~~~~~~~ ^ ~\n      |                     \
    \        |        |\n      |                             |        int\n      |\
    \                             __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >\nIn file included from /usr/include/c++/9/ccomplex:39,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n           \
    \      from /tmp/tmpki3xhpua.cpp:2:\n/usr/include/c++/9/complex:421:5: note: candidate:\
    \ \u2018template<class _Tp> std::complex<_Tp> std::operator/(const std::complex<_Tp>&,\
    \ const std::complex<_Tp>&)\u2019\n  421 |     operator/(const complex<_Tp>& __x,\
    \ const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:421:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpki3xhpua.cpp:10:38:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long int>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   10 |  long\
    \ long low = (l.begin() + mid) / 2;\n      |                                 \
    \     ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n            \
    \     from /tmp/tmpki3xhpua.cpp:2:\n/usr/include/c++/9/complex:430:5: note: candidate:\
    \ \u2018template<class _Tp> std::complex<_Tp> std::operator/(const std::complex<_Tp>&,\
    \ const _Tp&)\u2019\n  430 |     operator/(const complex<_Tp>& __x, const _Tp&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:430:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpki3xhpua.cpp:10:38: note: \
    \  \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long int> >\u2019\
    \ is not derived from \u2018const std::complex<_Tp>\u2019\n   10 |  long long\
    \ low = (l.begin() + mid) / 2;\n      |                             "
  stdout: ''
  timestamp: 1660092178
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 != 0) return l[n / 2];\n  \
    \  else return ((l[n / 2] + l[n - n / 2]) / 2.0);\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpcyy8kyjr: /tmp/tmpcyy8kyjr.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092178
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // Sort the vector l\n  auto it = std::min_element(l.begin(), l.end());\n\
    \  std::inplace_merge(l.begin(), it, l.end());\n  l.erase(it, l.end());\n\n  //\
    \ Compute the middle element of the vector.\n  float center = l.size() / 2;\n\
    \  if (l.size() % 2 == 0)\n    return center * center;\n  else {\n    return (center\
    \ * center + l[l.size() / 2]) * .5;\n  }\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpna1cfcml: /tmp/tmpna1cfcml.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092178
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    std::nth_element(l.begin(), l.begin() + l.size()/2, l.end());\n  \
    \  long middle = l.size()/2;\n    return l[middle];\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp_bzggdxv: /tmp/tmp_bzggdxv.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092179
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // find middle of vector l\n  size_t middle = l.size() / 2;\n  // If\
    \ the number of elements is odd, return the middle element.\n  if (l.size() &\
    \ 1) return l[middle];\n  // Otherwise, return the average of the middle two elements.\n\
    \  float m1 = l[middle-1];\n  float m2 = l[middle];\n  return (m1 + m2) / 2.0;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpwlyiloll: /tmp/tmpwlyiloll.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092179
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    // code here\n    float median;\n    long n = l.size();\n    \n  \
    \  if(n < 1) return 0;\n    \n    int half = n/2.0;\n    float left = (n%2 !=\
    \ 0) ? l[half-1] : l[half];\n    float right = (n%2 != 0) ? l[half] : l[half-1];\n\
    \    median = (left + right)/2.0;\n    \n    return median;\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmppx1p2fpv: /tmp/tmppx1p2fpv.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092179
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    size_t size = l.size();\n    assert(size % 2 == 0);\n    // The median\
    \ is simply the middle element of the sorted vector.\n    // Since there are an\
    \ even number of elements in the vector and\n    // the odd element is the median,\
    \ the middle element is the median.\n    if (size & 1)\n        return static_cast<float>(l[size\
    \ / 2]) + 0.5f;\n    return static_cast<float>(l[size / 2]);\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp1jalfgbh: /tmp/tmp1jalfgbh.cpp:10: float median(std::vector<long int>):
    Assertion `size % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092179
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    if (l.size() <= 1)\n        return l[0];\n    int mid = l.size() /\
    \ 2;\n    int m1 = l.size() - mid;\n    float m2 = (l.size() / 2) - (mid / 2);\n\
    \    if (l[m1] > l[mid])\n        return median(l, mid + 1, m2);\n    else if\
    \ (l[m1] < l[mid])\n        return median(l, mid + 1, m2);\n    return l[mid];\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvsrll2zr.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpvsrll2zr.cpp:15:37: error: too many arguments to function \u2018float\
    \ median(std::vector<long int>)\u2019\n   15 |         return median(l, mid +\
    \ 1, m2);\n      |                                     ^\n/tmp/tmpvsrll2zr.cpp:8:7:\
    \ note: declared here\n    8 | float median(std::vector<long> l) {\n      |  \
    \     ^~~~~~\n/tmp/tmpvsrll2zr.cpp:17:37: error: too many arguments to function\
    \ \u2018float median(std::vector<long int>)\u2019\n   17 |         return median(l,\
    \ mid + 1, m2);\n      |                                     ^\n/tmp/tmpvsrll2zr.cpp:8:7:\
    \ note: declared here\n    8 | float median(std::vector<long> l) {\n      |  \
    \     ^~~~~~\n"
  stdout: ''
  timestamp: 1660092179
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    int middle = (int)l.size();\n    int low = middle-1;\n    int high\
    \ = middle+1;\n    if (high <= low) return 0;\n    if (high%2 == 1)\n        return\
    \ l[low]+l[high]/2;\n    return l[low];\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpad3yxomj: /tmp/tmpad3yxomj.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092179
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    std::vector<float> v;\n    for(long i = 0; i < l.size(); i++) {\n\
    \        v.push_back((float)l[i]);\n    }\n    float n = v.size()/2;\n    if (v.size()\
    \ % 2 == 0) {\n        float median = v[n];\n        return median;\n    } else\
    \ {\n        v.erase(v.begin() + n, v.end());\n        return v[n];\n    }\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmprswsqzo7: /tmp/tmprswsqzo7.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092179
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    float median_val;\n    float median_count = 0;\n    float median =\
    \ 0;\n    std::vector<long>::iterator it;\n    for (it = l.begin(); it != l.end();\
    \ it++) {\n        if (median_count == 0) {\n            median_val = *it;\n \
    \           median_count = 1;\n        }\n        else {\n            median_val\
    \ = std::max((float)(median_val), (*it));\n            median_count++;\n     \
    \   }\n    }\n    if (median_count == 0)\n        median_val = l.back();\n   \
    \ if (median_count % 2 == 1)\n        median = (median_val + median_val) / 2;\n\
    \    return median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplm73h468.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmplm73h468.cpp:19:61: error: no matching function for call to \u2018\
    max(float, long int&)\u2019\n   19 |             median_val = std::max((float)(median_val),\
    \ (*it));\n      |                                                           \
    \  ^\nIn file included from /usr/include/c++/9/bits/specfun.h:45,\n          \
    \       from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmplm73h468.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:222:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr const _Tp& std::max(const\
    \ _Tp&, const _Tp&)\u2019\n  222 |     max(const _Tp& __a, const _Tp& __b)\n \
    \     |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:222:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmplm73h468.cpp:19:61: note: \
    \  deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018float\u2019\
    \ and \u2018long int\u2019)\n   19 |             median_val = std::max((float)(median_val),\
    \ (*it));\n      |                                                           \
    \  ^\nIn file included from /usr/include/c++/9/bits/specfun.h:45,\n          \
    \       from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmplm73h468.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:268:5:\
    \ note: candidate: \u2018template<class _Tp, class _Compare> constexpr const _Tp&\
    \ std::max(const _Tp&, const _Tp&, _Compare)\u2019\n  268 |     max(const _Tp&\
    \ __a, const _Tp& __b, _Compare __comp)\n      |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:268:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmplm73h468.cpp:19:61:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    float\u2019 and \u2018long int\u2019)\n   19 |             median_val = std::max((float)(median_val),\
    \ (*it));\n      |                                                           \
    \  ^\nIn file included from /usr/include/c++/9/algorithm:62,\n              "
  stdout: ''
  timestamp: 1660092178
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long mid = l.size() / 2;\n  std::nth_element(l.begin(), l.begin() +\
    \ mid, l.end());\n  if (l.size() % 2)\n    return (l[mid] + l[l.size() / 2]) /\
    \ 2;\n  else\n    return l[mid];\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpeoiz80lk: /tmp/tmpeoiz80lk.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092179
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long mid = l.size() / 2;\n    float left = 0;\n    float right = 0;\n\
    \    for (int i = 0; i < mid; i++)\n        left += l[i];\n    for (int i = mid;\
    \ i < l.size(); i++)\n        right += l[i];\n    return left + (right - left)\
    \ / 2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpnmrnozms: /tmp/tmpnmrnozms.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n & 1) return l[n / 2];\n    else\
    \ return (0.5f + l[n / 2 - 1] + l[n / 2]) / 2;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpr2tno0no: /tmp/tmpr2tno0no.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092179
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  if (l.size() % 2 == 0)\n    return std::accumulate(l.begin(), l.begin()\
    \ + l.size() / 2, 1, std::max<float>)\n            / l.size() / 2.0;\n  else\n\
    \    return std::accumulate(l.begin(), l.begin() + l.size() / 2, 1, std::min<float>)\n\
    \            / l.size() / 2.0;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq0eba99k.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpq0eba99k.cpp:10:83: error: no matching function for call to \u2018\
    accumulate(std::vector<long int>::iterator, __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >, int, <unresolved overloaded function type>)\u2019\
    \n   10 |     return std::accumulate(l.begin(), l.begin() + l.size() / 2, 1, std::max<float>)\n\
    \      |                                                                     \
    \              ^\nIn file included from /usr/include/c++/9/numeric:62,\n     \
    \            from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:84,\n    \
    \             from /tmp/tmpq0eba99k.cpp:2:\n/usr/include/c++/9/bits/stl_numeric.h:132:5:\
    \ note: candidate: \u2018template<class _InputIterator, class _Tp> _Tp std::accumulate(_InputIterator,\
    \ _InputIterator, _Tp)\u2019\n  132 |     accumulate(_InputIterator __first, _InputIterator\
    \ __last, _Tp __init)\n      |     ^~~~~~~~~~\n/usr/include/c++/9/bits/stl_numeric.h:132:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpq0eba99k.cpp:10:83:\
    \ note:   candidate expects 3 arguments, 4 provided\n   10 |     return std::accumulate(l.begin(),\
    \ l.begin() + l.size() / 2, 1, std::max<float>)\n      |                     \
    \                                                              ^\nIn file included\
    \ from /usr/include/c++/9/numeric:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:84,\n\
    \                 from /tmp/tmpq0eba99k.cpp:2:\n/usr/include/c++/9/bits/stl_numeric.h:158:5:\
    \ note: candidate: \u2018template<class _InputIterator, class _Tp, class _BinaryOperation>\
    \ _Tp std::accumulate(_InputIterator, _InputIterator, _Tp, _BinaryOperation)\u2019\
    \n  158 |     accumulate(_InputIterator __first, _InputIterator __last, _Tp __init,\n\
    \      |     ^~~~~~~~~~\n/usr/include/c++/9/bits/stl_numeric.h:158:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmpq0eba99k.cpp:10:83:\
    \ note:   couldn\u2019t deduce template parameter \u2018_BinaryOperation\u2019\
    \n   10 |     return std::accumulate(l.begin(), l.begin() + l.si"
  stdout: ''
  timestamp: 1660092178
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n\tif (l.size() == 0) return 0.0;\n\tstd::nth_element(l.begin(), l.begin()\
    \ + l.size()/2, l.end());\n\tif (l.size() % 2 == 1) return (float)(l[l.size()/2]+l[l.size()/2-1])/2.0;\n\
    \treturn (float)(l[l.size()/2-1]);\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmplc9n5c28: /tmp/tmplc9n5c28.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092179
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    int sz = l.size();\n    if (sz == 0)\n        return 0;\n    std::nth_element(l.begin(),\
    \ l.begin() + sz / 2, l.end());\n    float mx = *(l.begin() + sz / 2);\n    float\
    \ sum = 0;\n    for (long v : l) {\n        sum += v;\n    }\n    return sum /\
    \ sz;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpszcsf043: /tmp/tmpszcsf043.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092179
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    // Sort the vector.\n    std::sort(l.begin(), l.end());\n    // Return\
    \ average of middle two elements.\n    return 2.0 * l.at(l.size() / 2) - l.at(l.size()\
    \ / 2 - 1);\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp2zl4lr62: /tmp/tmp2zl4lr62.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092179
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n >= 3);\n    // Sort vector l.\n \
    \   std::sort(l.begin(), l.end());\n    // Find median of first three elements\
    \ and return it.\n    return (n == 1) ? l[0] : (n & 1 ? l[0] + l[1] : (l[0] +\
    \ l[1]) / 2);\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp84j7_hbr: /tmp/tmp84j7_hbr.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092179
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  if (l.size() % 2 != 0)\n    return std::accumulate(l.begin() + l.size()\
    \ / 2,\n                          l.begin() + l.size() / 2 + 1,\n            \
    \              l.begin() + l.size() / 2);\n  else\n    return std::accumulate(l.begin()\
    \ + l.size() / 2,\n                          l.begin() + l.size() / 2,\n     \
    \                     l.begin() + l.size() / 2);\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr79rv2y5.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpr79rv2y5.cpp:10:27: error: cannot convert \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019 to \u2018float\u2019 in return\n   10 |\
    \     return std::accumulate(l.begin() + l.size() / 2,\n      |            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                           |\n      |                           __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\n   11 |                           l.begin() +\
    \ l.size() / 2 + 1,\n      |                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \   12 |                           l.begin() + l.size() / 2);\n      |       \
    \                    ~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpr79rv2y5.cpp:14:27: error:\
    \ cannot convert \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >\u2019 to \u2018float\u2019 in return\n   14 |     return std::accumulate(l.begin()\
    \ + l.size() / 2,\n      |            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                           |\n      |                           __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\n   15 |                           l.begin() +\
    \ l.size() / 2,\n      |                           ~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \   16 |                           l.begin() + l.size() / 2);\n      |       \
    \                    ~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660092179
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() >= 2);\n    float mid = l[0] + l[1] / 2.0f;\n    for\
    \ (size_t i = 2; i < l.size(); ++i)\n        if (l[i] < mid)\n            mid\
    \ = l[i];\n        else\n            mid = (mid + l[i]) / 2.0f;\n    return mid;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpqwe_8t5u: /tmp/tmpqwe_8t5u.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092179
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n != 0);\n    // Use median of\
    \ three values: the middle value, the minimum of\n    // the two middle values\
    \ and the maximum between the two\n    // middle values.\n    float m1 = n%2==0?\
    \ l[n/2-2] : l[n/2];\n    float m2 = m1;\n    for (long long i = 0; i < n/2; i++)\
    \ if (l[i] < m1) m1 = l[i];\n    for (long long i = 0; i < n/2; i++) if (l[i]\
    \ < m2) m2 = l[i];\n    return m1+0.5f * (m2-m1);\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpgag5oy30: /tmp/tmpgag5oy30.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    // Sort l in ascending order.\n    std::sort(l.begin(), l.end());\n\
    \n    float midpoint = l[mid (l.begin(), l.end())];\n    return midpoint;\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpml0hka8u.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpml0hka8u.cpp:12:24: error: \u2018mid\u2019 was not declared in this\
    \ scope\n   12 |     float midpoint = l[mid (l.begin(), l.end())];\n      |  \
    \                      ^~~\n"
  stdout: ''
  timestamp: 1660092179
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n < 2) return 0.0;\n    float m = l[n/2];\n\
    \    if (n%2 == 0) return m;\n    float m2 = 0.0;\n    for (long i = n/2; i >\
    \ 0; --i)\n    {\n        m2+=l[i];\n        if (l[i] < m) m=l[i];\n    }\n  \
    \  return m2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp5vghouvv: /tmp/tmp5vghouvv.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() >= 2);\n    long long n = l.size();\n    long long\
    \ m = (n + 1) >> 1;\n    float a = (float)(l[0] + l[n - 1]) / 2.0;\n    for (long\
    \ long i = 1; i < n; i++) {\n        a = a + l[i - 1] / m / i;\n        if (a\
    \ >= l[i])\n            break;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp_fnk8u_3: /tmp/tmp_fnk8u_3.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    auto center = l.size() / 2;\n    return\
    \ static_cast<float>(l[center]) + static_cast<float>(l.size() - center) * (l[center\
    \ + 1] - l[center]);\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpaxut67sm: /tmp/tmpaxut67sm.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    // Sort elements in ascending order.\n    std::sort(l.begin(), l.end());\n\
    \    if (l.size() % 2 == 0) {\n        return (float)(l[l.size() / 2 - 1] + l[l.size()\
    \ / 2]) / 2;\n    } else {\n        return l[l.size() / 2];\n    }\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092179
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    // Check for empty vector.\n    if (l.size() == 0) {\n        throw\
    \ std::invalid_argument(\"vector must have at least one element.\");\n    }\n\
    \    // Find the middle element.\n    size_t mid = l.size() / 2;\n    if (mid\
    \ == l.size()) {\n        mid = l.size() - 1;\n    }\n    // Sort the array in\
    \ ascending order.\n    long long temp = 0;\n    for (size_t i = 0; i < mid; i++)\
    \ {\n        temp = l[i];\n        l[i] = l[i + 1];\n        l[i + 1] = temp;\n\
    \    }\n    // Find the median as the mean of the two middle elements.\n    return\
    \ (float)((l[mid - 1] + l[mid]) / 2.0);\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpq6vfysi5: /tmp/tmpq6vfysi5.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  assert(l.size() % 2 == 0);\n  // Find the median by splitting l into\
    \ two halves.\n  // Sort them in descending order.\n  std::vector<long> l1, l2;\n\
    \  for (long i : l) l1.push_back(i);\n  std::sort(l1.begin(), l1.end(), std::greater<long>());\n\
    \  for (long i : l) l2.push_back(i);\n  std::sort(l2.begin(), l2.end(), std::greater<long>());\n\
    \  // Compute the median of l1, l2.\n  // l1 is median, l2 is remaining values.\n\
    \  if (l1.size() % 2 == 0) {\n    return l1[l1.size()/2];\n  } else {\n    return\
    \ (l1[l1.size()/2] + l2[l2.size()/2]) / 2.0;\n  }\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpvvci4g62: /tmp/tmpvvci4g62.cpp:9: float median(std::vector<long int>):
    Assertion `l.size() % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092179
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    auto mid = l.begin() + l.size() / 2;\n    return *mid / (float)l.size();\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpel3hwulw: /tmp/tmpel3hwulw.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    // Number of elements in vector.\n    int n = l.size();\n    // If\
    \ vector is empty, then return 0.0.\n    if (n == 0)\n        return 0.0;\n  \
    \  // Sort vector in ascending order.\n    std::sort(l.begin(), l.end());\n  \
    \  // Return average of middle two values.\n    return (n * 1.0 + l[n / 2]) /\
    \ n;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp6m8be2eo: /tmp/tmp6m8be2eo.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  std::sort(l.begin(), l.end());\n  return ((l.size() % 2) ? ((l.size()\
    \ - 1) / 2) : (l.size() / 2));\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpmv5kcr3h: /tmp/tmpmv5kcr3h.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  std::sort(l.begin(), l.end());\n  if (l.size() < 2) return 0.0;\n  return\
    \ l[l.size()/2];\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp3p162b1m: /tmp/tmp3p162b1m.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  std::vector<long>::iterator it;\n  long mid = (l.size() + 1) / 2;\n\
    \  it = std::lower_bound(l.begin(), l.end(), mid);\n  return *std::next(it);\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp4r2oqgwu: /tmp/tmp4r2oqgwu.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  int N = l.size();\n  float val = 0, left = 0, right = 0, mid = 0;\n\
    \  float midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval =\
    \ 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, mid\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptocn460t.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmptocn460t.cpp:11:21: error: redeclaration of \u2018float midval\u2019\
    \n   11 |   float midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0,\
    \ midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval = 0, midval\
    \ = 0, midval = 0, midval = 0, "
  stdout: ''
  timestamp: 1660092179
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  assert(l.size() > 1);\n\n  std::vector<long> sorted = l;\n  std::sort(sorted.begin(),\
    \ sorted.end());\n  float mid = sorted[sorted.size() / 2];\n  return mid;\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpyi_tca91: /tmp/tmpyi_tca91.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    if (l.empty())\n        return 0.0;\n\n    float m = l[l.size()/2];\n\
    \    for (int i = 1; i < l.size(); ++i) {\n        if ((l[i] < m) || ((l[i] ==\
    \ m) && (l[i-1] > m)))\n            m = l[i];\n    }\n\n    return m;\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmporv3mghr: /tmp/tmporv3mghr.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  assert(l.size() >= 2);\n  long a = l[0];\n  long b = l[1];\n  float\
    \ avg = (a+b)/2.0;\n  float res = 0.0;\n  // Check if median is odd or even.\n\
    \  if (a%2 == 1){\n    return avg + (b > a?1.0:-1.0); \n  }\n  return avg;\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpdzz0iju5: /tmp/tmpdzz0iju5.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  if (l.size() % 2 == 0) {\n    long n1 = (l.end() - 1) / 2;\n    long\
    \ n2 = l.size() / 2;\n    return ((float)(l[n1] + l[n2])) / 2.0;\n  } else {\n\
    \    return ((float)(l.at(l.size() / 2) - l.at(l.size() / 2 + 1)) / 2.0);\n  }\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7df8di26.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp7df8di26.cpp:10:29: error: no match for \u2018operator/\u2019 (operand\
    \ types are \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long int>\
    \ >\u2019 and \u2018int\u2019)\n   10 |     long n1 = (l.end() - 1) / 2;\n   \
    \   |               ~~~~~~~~~~~~~ ^ ~\n      |                        |      |\n\
    \      |                        |      int\n      |                        __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7df8di26.cpp:2:\n/usr/include/c++/9/complex:421:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator/(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  421 |     operator/(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:421:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7df8di26.cpp:10:31:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long int>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   10 |   \
    \  long n1 = (l.end() - 1) / 2;\n      |                               ^\nIn file\
    \ included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7df8di26.cpp:2:\n/usr/include/c++/9/complex:430:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator/(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  430 |     operator/(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:430:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7df8di26.cpp:10:31:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long int>\
    \ >\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\n   10 |   \
    \  long n1 = (l.end() - 1) / 2;\n      |                               ^\nIn file\
    \ included from /usr/include/c++/9/ccomplex:"
  stdout: ''
  timestamp: 1660092180
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // Make sure the vector is sorted in ascending order.\n  std::sort(l.begin(),\
    \ l.end());\n  // Return half of vector length\n  return l[l.size()/2];\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpp_wn6_i7: /tmp/tmpp_wn6_i7.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long n = l.size();\n  assert(n % 2 == 0);\n  float m = ((float)l.front())\
    \ + sqrt((float)l.back()) * 1.0/n;\n  int i = 1;\n  for (; i < n; i++) {\n   \
    \ float next = ((float)l.at(i)) + (sqrt((float)l.at(i))) * 1.0/n;\n    if (next\
    \ > m) m = next;\n  }\n  return m;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmplfbp1s4m: /tmp/tmplfbp1s4m.cpp:10: float median(std::vector<long int>):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n\tassert(l.size() >= 1);\n\tstd::nth_element(l.begin(), l.begin() + l.size()/2,\
    \ l.end());\n\tlong long size = 0;\n\tfor (long long i = 0; i < l.size(); i++){\n\
    \t\tsize += l[i];\n\t}\n\treturn size / 2;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpwc475fmq: /tmp/tmpwc475fmq.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long lsize = l.size();\n    if (lsize == 0) return 0;\n    long mid\
    \ = (lsize - 1) / 2;\n    return l[mid];\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpuv2r9ngd: /tmp/tmpuv2r9ngd.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long size = l.size();\n    if (size % 2 == 1) {\n        // If\
    \ size even, take one middle element\n        long long mid = size / 2;\n    \
    \    std::vector<long> mv = l;\n        std::nth_element(lv.begin(), mv.begin(),\
    \ mv.end());\n        if (size == mid) {\n            // If size is even, return\
    \ the middle value\n            return (*(mv.begin()));\n        }\n        //\
    \ Else, return the average of middle two elements\n        return (float(mid)\
    \ + float(mid)) / 2.0;\n    }\n    // Else take two middle values\n    long long\
    \ mid = size / 2;\n    std::vector<long> mv = l;\n    std::nth_element(lv.begin(),\
    \ mv.begin(), mv.end());\n    std::vector<long> mv2 = l;\n    std::nth_element(mv2.begin(),\
    \ mv2.begin(), mv2.end());\n    return ((float(mid) + float(mv2)) / 2.0);\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6gutsaud.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp6gutsaud.cpp:14:26: error: \u2018lv\u2019 was not declared in this\
    \ scope; did you mean \u2018mv\u2019?\n   14 |         std::nth_element(lv.begin(),\
    \ mv.begin(), mv.end());\n      |                          ^~\n      |       \
    \                   mv\n/tmp/tmp6gutsaud.cpp:25:22: error: \u2018lv\u2019 was\
    \ not declared in this scope; did you mean \u2018mv\u2019?\n   25 |     std::nth_element(lv.begin(),\
    \ mv.begin(), mv.end());\n      |                      ^~\n      |           \
    \           mv\n/tmp/tmp6gutsaud.cpp:28:36: error: invalid cast from type \u2018\
    std::vector<long int>\u2019 to type \u2018float\u2019\n   28 |     return ((float(mid)\
    \ + float(mv2)) / 2.0);\n      |                                    ^\n"
  stdout: ''
  timestamp: 1660092180
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 1);\n    float m = (l[0] + l[1]) / 2.0f;\n    for\
    \ (int i = 2; i < l.size(); ++i) {\n        if (l[i] < l[i - 1]) ++i;\n      \
    \  m = l[i] < m ? l[i] : m;\n    }\n    return m;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp0jn4gwl_: /tmp/tmp0jn4gwl_.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  if (l.size() == 0)\n    throw std::runtime_error(\"median - empty vector\"\
    );\n  std::nth_element(l.begin(), l.begin() + l.size() / 2, l.end());\n  return\
    \ *(l.begin() + l.size() / 2);\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp1cd1rrdr: /tmp/tmp1cd1rrdr.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092180
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    std::vector<long>::iterator i = l.begin();\n    std::vector<long>::iterator\
    \ j;\n    if (l.size() == 0)\n        return 0.0;\n    l.sort(std::greater<long>());\n\
    \    j = l.begin();\n    float mid = (*j + l[0]) / (l.size() - 1);\n    int count\
    \ = 1;\n    while (i != j) {\n        while (++i < l.end() && (mid = (*j + l[i])\
    \ / (l.size() - count)) == (*i + l[i - 1])) {\n            count++;\n        }\n\
    \        l.erase(i, l.end() - count);\n        j = l.begin();\n        count =\
    \ 1;\n    }\n    return mid;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsmzuq7_1.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpsmzuq7_1.cpp:13:7: error: \u2018class std::vector<long int>\u2019 has\
    \ no member named \u2018sort\u2019\n   13 |     l.sort(std::greater<long>());\n\
    \      |       ^~~~\n/tmp/tmpsmzuq7_1.cpp:18:47: error: no match for \u2018operator[]\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018std::vector<long\
    \ int>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >\u2019})\n   18 |         while (++i < l.end() && (mid = (*j + l[i]) /\
    \ (l.size() - count)) == (*i + l[i - 1])) {\n      |                         \
    \                      ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpsmzuq7_1.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1040:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::reference std::vector<_Tp,\
    \ _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = long int;\
    \ _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::reference = long\
    \ int&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]\u2019\n 1040\
    \ |       operator[](size_type __n) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:1040:28: note:   no known conversion for\
    \ argument 1 from \u2018std::vector<long int>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019} to \u2018std::vector<long int>::size_type\u2019\
    \ {aka \u2018long unsigned int\u2019}\n 1040 |       operator[](size_type __n)\
    \ _GLIBCXX_NOEXCEPT\n      |                  ~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1058:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp,\
    \ _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = long\
    \ int; _Alloc = std::allocator<long int>; std::vector<_Tp, _All"
  stdout: ''
  timestamp: 1660092180
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    std::sort(l.begin(), l.end());\n    \n    if (l.size() % 2 == 1)\n\
    \        return l[(l.size() - 1) / 2];\n    else\n        return (l[l.size() -\
    \ 1/ 2] + l[l.size() / 2 - 1]) / 2;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp4ks3g_3n: /tmp/tmp4ks3g_3n.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092181
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n\tassert(l.size() % 2 == 0);\n\tlong l = l.size() / 2;\n\tif (l.size()\
    \ % 2 == 1)\n\t\treturn l[l / 2] + l[l / 2 - 1] * 0.5;\n\telse\n\t\treturn l[l\
    \ / 2];\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4ba10k9f.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp4ba10k9f.cpp:10:7: error: declaration of \u2018long int l\u2019 shadows\
    \ a parameter\n   10 |  long l = l.size() / 2;\n      |       ^\n/tmp/tmp4ba10k9f.cpp:10:13:\
    \ error: request for member \u2018size\u2019 in \u2018l\u2019, which is of non-class\
    \ type \u2018long int\u2019\n   10 |  long l = l.size() / 2;\n      |        \
    \     ^~~~\n/tmp/tmp4ba10k9f.cpp:11:8: error: request for member \u2018size\u2019\
    \ in \u2018l\u2019, which is of non-class type \u2018long int\u2019\n   11 | \
    \ if (l.size() % 2 == 1)\n      |        ^~~~\n/tmp/tmp4ba10k9f.cpp:12:17: error:\
    \ invalid types \u2018long int[long int]\u2019 for array subscript\n   12 |  \
    \ return l[l / 2] + l[l / 2 - 1] * 0.5;\n      |                 ^\n/tmp/tmp4ba10k9f.cpp:12:32:\
    \ error: invalid types \u2018long int[long int]\u2019 for array subscript\n  \
    \ 12 |   return l[l / 2] + l[l / 2 - 1] * 0.5;\n      |                      \
    \          ^\n/tmp/tmp4ba10k9f.cpp:14:17: error: invalid types \u2018long int[long\
    \ int]\u2019 for array subscript\n   14 |   return l[l / 2];\n      |        \
    \         ^\n"
  stdout: ''
  timestamp: 1660092180
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    if (l.size() == 0) return 0;\n    float pivot = l[0];\n    for (int\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] < pivot)\n            std::swap(l[i],\
    \ l[i-1]);\n    }\n    std::sort(l.begin(), l.end());\n    return l[l.size()/2]\
    \ + ((l.size()%2)==0)?0.5:l[l.size()/2];\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpga9svhp0: /tmp/tmpga9svhp0.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092181
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long long n = l.size();\n  if (n == 0)\n    return -1.0;\n  long long\
    \ mid = n / 2;\n  std::vector<long>::iterator it = std::max_element(l.begin(),\
    \ l.end());\n  if (std::distance(l.begin(), it) == n / 2) {\n    return ((*it)\
    \ + sqrt((float)n * pow(2.0f, 0.5f))) / 2.f;\n  } else if (std::distance(l.begin(),\
    \ it) == n) {\n    return (*it) + sqrt((float)n * pow(2.0f, 0.5f));\n  } else\
    \ {\n    return (*it + (*it - mid)) / 2.f;\n  }\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpbgo8r5xp: /tmp/tmpbgo8r5xp.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092181
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    std::nth_element(l.begin(), l.begin() + l.size() / 2, l.end());\n\
    \    return std::distance(l.begin(), std::prev(l.end(), l.size() / 2));\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpqy__rnnz: /tmp/tmpqy__rnnz.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092181
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  // sort array from low to high values\n  std::sort(l.begin(), l.end());\n\
    \  \n  // check if there are any even length elements\n  // if there are two even\
    \ elements, return the middle one\n  // else average of middle two\n  if (l.size()\
    \ % 2 == 0) {\n    return l[l.size() / 2];\n  } else {\n    return ((l.size()\
    \ / 2) + ((l.size() / 2) + 1) / 2) * 1.0 / 2.0;\n  }\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp_8zyeg8b: /tmp/tmp_8zyeg8b.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092181
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 2);\n    float mid = l[0] + l[l.size()-1];\n   \
    \ float ans = (l[0] + l[l.size()-1]) / 2.0f;\n    std::vector<long>::iterator\
    \ it;\n    for (it = l.begin() + 1; it < l.end(); ++it) {\n        mid = (mid\
    \ * (*it)) + (*it / 2.0f);\n        ans = (ans * (*it)) + (*it / 2.0f);\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp897lrn6j: /tmp/tmp897lrn6j.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092181
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    // assert(l.size() > 1);\n    if (l.size() < 2) return l[0];\n   \
    \ sort(l.begin(), l.end());\n    float midpoint = l.size() / 2.f;\n    float median\
    \ = l[midpoint];\n    for (size_t i = 1; i < l.size(); i++) {\n        // assert(l[i]\
    \ > l[i - 1]);\n        if (l[i] < l[i - 1]) {\n            median = l[midpoint];\n\
    \        }\n    }\n    return median;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmplrmm49n1: /tmp/tmplrmm49n1.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092181
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    return std::nth_element(l.begin(), l.end(), l.end()-.5) / l.size();\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpef5c0muv.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpef5c0muv.cpp:9:61: error: invalid operands of types \u2018void\u2019\
    \ and \u2018std::vector<long int>::size_type\u2019 {aka \u2018long unsigned int\u2019\
    } to binary \u2018operator/\u2019\n    9 |     return std::nth_element(l.begin(),\
    \ l.end(), l.end()-.5) / l.size();\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^ ~~~~~~~~\n      |                            |                           \
    \             |\n      |                            void                     \
    \                std::vector<long int>::size_type {aka long unsigned int}\n"
  stdout: ''
  timestamp: 1660092180
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  if (l.size() < 2) return l[0];\n  std::nth_element(l.begin(), l.begin()\
    \ + l.size() / 2, l.end());\n  return l[l.size() / 2];\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmplg0bapwh: /tmp/tmplg0bapwh.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092181
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    sort(l.begin(), l.end());\n    if (l.size() % 2 == 0) {\n        return\
    \ float((l[l.size() / 2 - 1] + l[l.size() / 2]) / 2);\n    } else {\n        return\
    \ (l[l.size() / 2]);\n    }\n}\nint main() {\n    auto candidate = median;\n \
    \   assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp8sm_e_ch: /tmp/tmp8sm_e_ch.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)6,
    (long)5}))) == (5.5)'' failed.

    '
  stdout: ''
  timestamp: 1660092181
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    std::vector<long>::iterator it = l.begin();\n    std::vector<long>::iterator\
    \ it2 = l.end();\n    float m = l.size() <= 1 ? 0 : it2 <= it ? (*it) + (*it2)\
    \ / (l.size() - 1) : 0;\n    return m;\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpehnybs69: /tmp/tmpehnybs69.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092181
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n <= 1) return l[0];\n    long mid = n\
    \ / 2;\n    long med = std::nth_element(l.begin(), l.begin() + mid, l.end());\n\
    \    float middle = static_cast<float>(med);\n    float s = 0.0;\n    for (long\
    \ i = mid; i < n; ++i)\n        s += l[i];\n    float center = mid * middle;\n\
    \    float med = ((n - 1) / 2.0) * middle;\n    return (std::abs(s - center) <\
    \ std::abs(s - med)) ? center : med;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5hbwynoz.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp5hbwynoz.cpp:12:32: error: void value not ignored as it ought to be\n\
    \   12 |     long med = std::nth_element(l.begin(), l.begin() + mid, l.end());\n\
    \      |                ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp5hbwynoz.cpp:18:11: error: conflicting declaration \u2018float med\u2019\
    \n   18 |     float med = ((n - 1) / 2.0) * middle;\n      |           ^~~\n/tmp/tmp5hbwynoz.cpp:12:10:\
    \ note: previous declaration as \u2018long int med\u2019\n   12 |     long med\
    \ = std::nth_element(l.begin(), l.begin() + mid, l.end());\n      |          ^~~\n"
  stdout: ''
  timestamp: 1660092181
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the vector l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    auto sorted = sort(l);\n    float x = (*std::max_element(l.begin(),\
    \ l.end()) / l.size());\n    return x;\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4_n5b0in.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp4_n5b0in.cpp:9:25: error: no matching function for call to \u2018sort(std::vector<long\
    \ int>&)\u2019\n    9 |     auto sorted = sort(l);\n      |                  \
    \       ^\nIn file included from /usr/include/c++/9/algorithm:62,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n         \
    \        from /tmp/tmp4_n5b0in.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:4863:5:\
    \ note: candidate: \u2018template<class _RAIter> void std::sort(_RAIter, _RAIter)\u2019\
    \n 4863 |     sort(_RandomAccessIterator __first, _RandomAccessIterator __last)\n\
    \      |     ^~~~\n/usr/include/c++/9/bits/stl_algo.h:4863:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp4_n5b0in.cpp:9:25: note:  \
    \ candidate expects 2 arguments, 1 provided\n    9 |     auto sorted = sort(l);\n\
    \      |                         ^\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4_n5b0in.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:4893:5:\
    \ note: candidate: \u2018template<class _RAIter, class _Compare> void std::sort(_RAIter,\
    \ _RAIter, _Compare)\u2019\n 4893 |     sort(_RandomAccessIterator __first, _RandomAccessIterator\
    \ __last,\n      |     ^~~~\n/usr/include/c++/9/bits/stl_algo.h:4893:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp4_n5b0in.cpp:9:25:\
    \ note:   candidate expects 3 arguments, 1 provided\n    9 |     auto sorted =\
    \ sort(l);\n      |                         ^\nIn file included from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4_n5b0in.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:292:1:\
    \ note: candidate: \u2018template<class _ExecutionPolicy, class _RandomAccessIterator,\
    \ class _Compare> __pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy,\
    \ void> std::sort(_ExecutionPolicy&&, _RandomAccessIterator, _RandomAccessIterator,\
    \ _Compare)\u2019\n  "
  stdout: ''
  timestamp: 1660092181

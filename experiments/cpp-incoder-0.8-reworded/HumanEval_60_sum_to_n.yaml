name: HumanEval_60_sum_to_n
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function that\
  \ sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
  // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
  \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n"
tests: "}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
  \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
  \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
  }\n"
completions: ["  // Write your code here\n  // assert(n >= 1);\n  long sum = 0;\n\
    \  long c = 1;\n  long c2 = 1;\n  for(long i = 1; i < n; i++) {\n    sum += c;\n\
    \    c += c2;\n    c2 ++;\n  }\n  return sum;", "    long long sum = 1;\n    for\
    \ (int i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;", '    return
    (n * (n + 1)) / 2;', "  long sum = 0;\n  while (n > 0) {\n    sum += n;\n    n\
    \ /= 10;\n  }\n  return sum;", "  assert(n <= 30);\n  long sum = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;", "long sum = 0;\n\
    for(long i = 1;i<=n;i++)\nsum += i;\nreturn sum;", "    long res = 0;\n    long\
    \ limit = n;\n    while (limit > 1) {\n        if (n % 2 == 0) res += limit;\n\
    \        limit /= 2;\n    }\n    return res + limit;", "  int sum = 0;\n  long\
    \ i = 1; // index starts from 1\n  while (i * i <= n) {\n    if (n % i == 0) {\n\
    \      sum += i / i; // integer division\n      n /= i;\n    } else {\n      sum\
    \ += i / i; // integer division\n      n *= i;\n    }\n    i++;\n  }\n  // Print\
    \ the sum\n  cout << sum << endl;\n  return sum;", "    // Write your code here.\n\
    \    long sum = 0;\n    long i = 0; \n    while (i <= n) {\n        sum = sum\
    \ + i;\n        i = i + 1;\n    }\n    return sum;", "  long sum = 0;\n  long\
    \ i = 1;\n  while (i <= n) {\n    sum += i;\n    ++i;\n  }\n  return sum;", " \
    \   long total = 0;\n    for(int i = 1; i <= n; i++) {\n        total += i;\n\
    \    }\n    return total;", "    long sum = 0;\n    for(int i = 1; i <= n; i++)\
    \ {\n        sum = sum + i;\n    }\n    return sum;", "    long res = n;\n   \
    \ long cur = n;\n    while (cur > 1) {\n        res += cur;\n        cur /= 10;\n\
    \    }\n    return res;", "    long sum = 0;\n    for (long i = 1; i < n; i++)\
    \ {\n        sum = sum + i;\n    }\n    return sum;", "  if (n == 1)\n    return\
    \ (1);\n  if (n > 1)\n    return (sum_to_n(n-1) + n);", "    // write your code\
    \ here\n    if(n==0)\n        return 0;\n    return n+sum_to_n(n-1);", "\tlong\
    \ sum = 0;\n\twhile (n-- > 0) {\n\t\tsum += n;\n\t}\n\treturn sum;", "    long\
    \ ans = 1;\n    long i = 0;\n    while (n > 1) {\n        long k = n / i;\n  \
    \      ans = ans * k;\n        i = k + 1;\n        n = n - k;\n    }\n    return\
    \ ans;", "    // write your code in C++14 or C++11\n    auto sum = 0;\n    for\
    \ (long i = 1; i < n; i++) sum += i;\n    return sum;", "    long sum = 0;\n \
    \   for (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;", "  //\
    \ Base case\n  if (n == 1)\n    return n;\n  // If the given number is already\
    \ a power of two, return it directly\n  if (n & (n - 1))\n    return n;\n  //\
    \ If it's even, add it to itself and subtract one\n  return sum_to_n(n / 2) +\
    \ (n - 1);", "    long s = 0;\n    for (long i = 1; i <= n; i++) {\n        s\
    \ += i;\n    }\n    return s;", "  long long int sum=0;\n  int i=1;\n  while(i\
    \ <= n){\n    sum+=i;\n    ++i;\n  }\n  return sum;", "    long sum = 0;\n   \
    \ for (long i = 1; i <= n; ++i) {\n        sum += i;\n    }\n    return sum;",
  "  // initialize sum to zero\n  long sum = 0;\n  // iterate from 1 up to n\n  for\
    \ (long i = 1; i <= n; i++) {\n    sum = sum + i;\n  }\n  return sum;", "    long\
    \ total = 0;\n    for (long i = 1; i <= n; i++){\n        total += i;\n    }\n\
    \    return total;", "  long long sum = 0;\n  for (; n != 0; n--) {\n    sum +=\
    \ n % 10;\n  }\n  return sum;", "\tif (n == 1)\n\t\treturn n;\n\treturn n + sum_to_n(n-1);",
  "  if (n <= 0) return 0;\n  long sum = 0;\n  long k = n;\n  while (k > 1) {\n  \
    \  long l = k / 2;\n    sum += l;\n    k /= 2;\n  }\n  return sum;", "    // Your\
    \ code here\n    int i=0;\n    int sum=0;\n    int k;\n    k=n/2;\n    while(++i\
    \ < k){\n        sum+=i;\n    }\n    return sum;", "  assert(n > 0);\n  int sum\
    \ = 0;\n  for (int i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;",
  "    long s = 0;\n    long t = (long) (sqrt(n) + 1);\n    for (long i = 1; i < (long)\
    \ t; ++i) {\n        s = s + i;\n    }\n    return s;", "    long sum = 0;\n \
    \   long j = 0;\n    while (j < n) {\n        sum += j++;\n    }\n    return sum;",
  "    if(n<=1) {\n        return n;\n    }\n    long sum=0;\n    for(int i=1;i<=n;i++){\n\
    \        sum+=i;\n    }\n    return sum;", "\tlong ans = 0;\n\tlong s = 2;\n\t\
    while (s < n) {\n\t\tans += s;\n\t\ts += 1;\n\t}\n\treturn ans;", "  long res\
    \ = 0;\n  for (long i = 1; i <= n; ++i) res += i;\n  return res;", "    assert(n\
    \ >= 1);\n    long result = n;\n    for (int i = 1; i < n; i++) {\n        result\
    \ *= i;\n    }\n    return result;", "    int ans = 0;\n    for (int i = 1; i\
    \ <= n; i++) {\n        ans += i;\n    }\n    return ans;", '    return n*(n+1)/2;',
  "    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += i;\n    }\n\
    \    return sum;", "  long sum = 0;\n  long x = n;\n  while (x) {\n    sum +=\
    \ x;\n    x -= x % 10;\n  }\n  return sum;", "  assert(n >= 1);\n  long result\
    \ = 0;\n  while (n != 0) {\n    result += n % 10;\n    n /= 10;\n  }\n  return\
    \ result;", "    assert(n >= 0);\n    long res = 0;\n    for(long i = 1; i <=\
    \ n; i++) {\n        res+=i;\n    }\n    return res;", "    long sum = 0;\n  \
    \  while (n--) {\n        sum += n;\n    }\n    return sum;", "  if (n <= 0) return\
    \ 0;\n  if (n <= 15) {\n    return ((n + 1) * 15) + 4;\n  }\n  if (n <= 100) {\n\
    \    return ((n - 1) * 15) + (100 + sum_to_n(n - 10));\n  }\n  if (n <= 200) {\n\
    \    return ((n - 1) * 15) + (100 + sum_to_n(n - 100));\n  }\n  if (n <= 300)\
    \ {\n    return ((n - 1) * 15) + (100 + sum_to_n(n - 200));\n  }\n  if (n <= 400)\
    \ {\n    return ((n - 1) * 15) + (100 + sum_to_n(n - 300));\n  }\n  if (n <= 500)\
    \ {\n    return ((n - 1) * 15) + (100 + sum_to_n(n - 400));\n  }\n  if (n <= 600)\
    \ {\n    return ((n - 1) * 15) + (100 + sum_to_n(n - 500));\n  }\n  if (n <= 700)\
    \ {\n    return ((n - 1) * 15) + (100 + sum_to_n(n - 600));\n  }\n  if (n <= 800)\
    \ {\n    return ((n - 1) * 15) + (100 + sum_to_n(n - 700));\n  }\n  if (n <= 900)\
    \ {\n    return ((n - 1) * 15) + (100 + sum_to_n(n - 800));\n  }\n  if (n <= 1000)\
    \ {\n    return ((n - 1) * 15) + (100 + sum_to_n(n - 900));\n  }\n  if (n <= 2000)\
    \ {\n    return ((n - 1) * 15) + (100 + sum_to_n(n - 1000));\n  }\n  if (n <=\
    \ 3000){\n    return ((n - 1) * 15) + (100 + sum_to_n(n - 2000));\n  }\n  if (n\
    \ <= 4000){\n    return ((n - 1) * 15) + (100 + sum_to_n(n - 3000));\n  }\n  if\
    \ (n <= 5000){\n    return ((n - 1) * 15) + (100 + sum_to_n(n - 4000));\n  }\n\
    \  if (n <= 6000){\n    return ((n - 1) * 15) + (100 + sum_to_n(n - 5000));\n\
    \  }\n  if (n <= 7000){\n    return ((n - 1) * 15) + (100 + sum_to_n(n - 6000));\n\
    \  }\n  if (n <= 8000){\n    return ((n - 1) * 15) + (100 + sum_to_n(n - 7000));\n\
    \  }\n  if (n <= 9000){\n    return ((n - 1) * 15) + (100 + sum_to_n(n - 8000));\n\
    \  }\n  if (n <= 10000){\n    return ((n - 1) * 15) + (100 + sum_to_n(n - 9000));\n\
    \  }\n  if (n <= 10000){\n    return ((n - 1) * 15) + (100 + sum_to_n(n - 10000));\n\
    \  }\n  return ((n - 1) * 15) + 9000;", "  if (n == 1)\n    return 1;\n  long\
    \ sum = 0;\n  for (long i = 1; i <= n; ++i) {\n    sum += i;\n  }\n  return sum;",
  "    if (n < 1) return 0;\n    long x = 1;\n    while (n--) x = x * 10;\n    return\
    \ x;", "    assert(n > 0);\n    if (n == 1) {\n        return 1;\n    }\n    int\
    \ sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += i;\n    }\n   \
    \ return sum;", "    // write your code here\n    long long sum = n;\n    for(int\
    \ i=1; i<=n; i++){\n        sum+=i;\n    }\n    return sum;", "  assert(n > 1);\n\
    \  long sum = 0;\n  for (long i = 1; i <= n; i++)\n    sum += i;\n  return sum;",
  "    long s = 0;\n    for (long i = 1; i <= n; i++) {\n        s += i;\n    }\n\
    \    return s;", "    assert(n % 2 == 0);\n    long s = n * (long) (n + 1) / 2;\n\
    \    while (s % 2 == 0)\n        s /= 2;\n    return s;", "    if (n == 0) return\
    \ 0;\n    long ans = 1;\n    for (long i = 2; i <= n; i++) ans *= i;\n    return\
    \ ans;", "    long s = 0;\n    for(long i = 1; i <= n; i++)\n        s += i;\n\
    \    return s;", "    long x = 0;\n    for (int i = 0; i < n; i++) {\n       \
    \ x += i;\n    }\n    return x;", "    long long res = 0;\n    long long cur =\
    \ 0;\n    while(n != 0) {\n        cur = n % 10;\n        res += cur;\n      \
    \  n /= 10;\n    }\n    return res > 0 ? res : cur;", "    long sum = 0;\n   \
    \ for (long i = 1; i <= n; i++) sum += i;\n    return sum;", "    long long sum\
    \ = 0;\n    for(long i=1;i<=n;i++) {\n        sum += i;\n    }\n    return sum;",
  "    if (n < 0) return sum_to_n(-n);\n    long res = 0;\n    for (; n; n--) res\
    \ += n;\n    return res;", "    long ans = 0, temp;\n    while (n-- > 0) {\n \
    \       temp = ans;\n        ans += temp;\n    }\n    return ans;", "  long result\
    \ = 0;\n  for (int i = 1; i < n; i++) {\n    result += i;\n  }\n  return result;",
  "    long result = 0;\n    for(long i = 1; i <= n; ++i) {\n        result = result\
    \ + i;\n    }\n    return result;", "  assert(n >= 0);\n  long sum = 0;\n  for\
    \ (long i = 2; i <= n; ++i)\n    sum += i;\n  return sum;", '  return n > 1 ?
    n*n + sum_to_n(n-1) : n;', '    return (n * (n + 1)) / 2;', "    // sum of first\
    \ n positive numbers\n    long s = 1;\n    long sum = 1;\n    for (long i = 1;\
    \ i <= n; i++) {\n        s = s + i;\n        sum = sum + s;\n    }\n    // sum\
    \ of first n negative numbers\n    s = -n;\n    sum = sum + s;\n    return sum;",
  "    long sum = 1;\n    for (long i = 1; i < n; i++) {\n        sum = sum + i;\n\
    \    }\n    return sum;", "    long ans=0;\n    for(int i=0;i<n;i++)\n       \
    \ ans+=i;\n    return ans;", "    long sum = 0;\n    for(int i=1; i<=n; i++){\n\
    \        sum+=i;\n    }\n    return sum;", "  long sum = 0;\n  for (int i = 1;\
    \ i <= n; i++) sum += i;\n  return sum;", "    // assert n <= 30;\n    // assert\
    \ n != 0;\n    // assert n % 2 == 0;\n    long num = 1;\n    while (n != 0) {\n\
    \        num += 1; \n        n /= 2;\n    }\n    return num;", "    if (n == 0)\n\
    \        return 0;\n    else if (n == 1)\n        return 1;\n    else\n      \
    \  return n + sum_to_n(n-1);", "    long sum = 0;\n    for (long i = 1; i <= n;\
    \ ++i) {\n        sum += i;\n    }\n    return sum;", "    long sum = 0;\n   \
    \ for (int i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;",
  "    long x = 0;\n    while (n) {\n        x += n % 10;\n        n /= 10;\n    }\n\
    \    return x;", "  assert(n >= 1);\n  // Use recursion to sum up the numbers\
    \ from 1 to n\n  if (n == 1) return 1;\n  return n + sum_to_n(n - 1);", "  long\
    \ long sum = 0;\n  // sum n times from 1 to n\n  for (int i = 0; i < n; i++) {\n\
    \    sum += 1;\n  }\n  return sum;", "  long sum = 0;\n  for (long i = 1; i <=\
    \ n; i++) sum += i;\n  return sum;", '    return std::accumulate(1, n, 0L);',
  "    if (n == 0) return 0;\n    if (n == 1) return 1;\n    long sum = 0;\n    for\
    \ (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;", "  long sum\
    \ = 0;\n  for (long i = 1;i <= n;i++) {\n    sum += i;\n  }\n  return sum;", " \
    \   if(n==0)\n        return 0;\n    long sum=0;\n    for(int i=1;i<=n;i++) {\n\
    \        sum+=i;\n    }\n    return sum;", "  if (n == 0) return 0;\n  long ans\
    \ = 1;\n  for (long i = 2; i <= n; i++) {\n    ans += i;\n  }\n  return ans;",
  "    long res = 0;\n    while (n) {\n        res += n % 10;\n        n /= 10;\n\
    \    }\n    return res;", "    assert(n >= 1);\n    long sum = 0;\n    for(long\
    \ i = 1; i <= n; i++) sum += i;\n    return sum;", "    long long c = 0;\n   \
    \ for(int i = 1; i <= n; i++) {\n        c = c + i;\n    }\n    return c;", " \
    \ long sum = 0;\n  for (long i = 1; i <= n; i++) sum += i;\n  return sum;", '    return
    n < 2 ? n : n + sum_to_n(n - 1);', "    if (n == 1)\n        return 1;\n    long\
    \ sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n /= 10;\n  \
    \  }\n    return sum;", "    if (n == 0)\n        return 0;\n    if (n == 1)\n\
    \        return 1;\n    if (n == 2)\n        return 2;\n    if (n % 2 == 0)\n\
    \        return sum_to_n(n / 2) + (n % 2 == 1 ? 1 : 2);\n    return sum_to_n(n\
    \ / 2) + (n % 2 == 1 ? 2 : 3);", "    if (n < 0)\n        return -1;\n    long\
    \ ans = 0;\n    for (long i = 1; i <= n; i++) {\n        ans += i;\n    }\n  \
    \  return ans;", "\tlong long sum = 0;\n\tfor (long i = 0; i < n; ++i)\n\t\tsum\
    \ += i;\n\treturn sum;", "  int ans = 0;\n  for (int i = 1; i <= n; i++) ans +=\
    \ i;\n  return ans;", "    long sum = 0, i = 1;\n    while (i <= n) {\n      \
    \  sum += i;\n        ++i;\n    }\n    return sum;", "  long sum = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;", "  if (n == 0)\n\
    \    return 1;\n  long result = 0;\n  for (long i = 1; i <= n; i++) {\n    result\
    \ += i;\n  }\n  return result;", "    long sum = 0;\n    for(int i = 0; i < n;\
    \ i++) {\n        sum = sum + i;\n    }\n    return sum;", "  int sum = 0;\n \
    \ for (int i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;", "    long\
    \ result = 0;\n    for(int i = 1; i <= n; i++) {\n        result += i;\n    }\n\
    \    return result;", "    assert(n >= 1);\n    long sum_of_n = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        sum_of_n += i;\n    }\n    return sum_of_n;",
  "  int sum_to = 0;\n  for (long i = 1; i <= n; i++)\n    sum_to += i;\n  return\
    \ sum_to;", "    long res = 0;\n    for (long i = 1; i <= n; i++) res += i;\n\
    \    return res;", "  assert(n >= 1 && n <= 10);\n  return (n * n) + 1;", "  \
    \  // Your code here\n    long s = 0, sum = 0;\n    while(n!=0){\n        sum+=n%10;\n\
    \        s+=sum;\n        sum=s/10;\n        n=n/10;\n    }\n    return s;", '    return
    (n * (n + 1)) / 2;', "  long sum = 0;\n  for (long i = 1, ii = n; ii <= ii; ++i,\
    \ ii /= 10)\n    sum += i * ii; //sum += i;\n  return sum;", "  if (n == 0) return\
    \ 0;\n  if (n == 1) return 1;\n  return n + sum_to_n(n - 1);", "    // your code\
    \ goes here\n    long sum = 0;\n    while (n-- > 0) {\n        sum += (n+1);\n\
    \    }\n    return sum;", "  if (n <= 0) return 0;\n  if (n % 2 == 0) return (n\
    \ % 3) + sum_to_n((n / 3));\n  return 2 * sum_to_n((n / 2));", "    // write your\
    \ code here\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum\
    \ += i;\n    }\n    return sum;", "  assert(n > 0);\n  long curr = 1;\n  long\
    \ ans = 0;\n  while(n > 0) {\n    curr *= (n--);\n    ans += curr;\n  }\n  return\
    \ ans;", "  assert(n >= 0);\n  long long sum = 0;\n  while (n != 0) {\n    sum\
    \ += n % 10;\n    n /= 10;\n  }\n  return sum;", "    if (n == 1)\n        return\
    \ 1;\n    return n + sum_to_n(n - 1);", "    // Write your code here\n    int\
    \ i=1;\n    long sum=0;\n    while(i<=n){\n        sum=sum+i;\n        i=i*10;\n\
    \    }\n    return sum;", "  // Declare a static variable in sum_to_n() so it\
    \ is\n  // initialized only once.\n  static long sum = 0;\n\n  // Use an initialization\
    \ with side-effects.\n  sum = n + sum;\n\n  return sum;", '    return n == 1 ?
    1 : n*sum_to_n(n - 1);', "    if (n == 1)\n        return 1;\n    else if (n &\
    \ 1)\n        return sum_to_n((n - 1) + 1) + 1;\n    else\n        return sum_to_n((n\
    \ - 1) + 1) + 1;", "  if (n == 1) return 1;\n  long total = 0;\n  for (long i\
    \ = 2; i <= n; i++) {\n    total += i;\n  }\n  return total;", "    long sum =\
    \ 0;\n    long k = 0;\n    for (;k<n;k++) {\n        sum = sum + k;\n    }\n \
    \   return sum;", "    assert(n >= 1);\n    long res = n;\n    for (long i = 1;\
    \ i < n; i++) {\n        res = res + i;\n    }\n    return res;", "\tlong total\
    \ = 0;\n\t// loop from 1 to n\n\tfor (int i = 1; i <= n; i++) {\n\t\t// add the\
    \ number to the total\n\t\ttotal += i;\n\t}\n\t// return the total\n\treturn total;",
  "  long sum = 0;\n  for (int i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return\
    \ sum;", "  // write your code here\n  long sum = 0;\n  while(n>0)\n  {\n    sum+=n;\n\
    \    n--;\n  }\n  return sum;", "    assert(n >= 1);\n    long sum = 0;\n    for\
    \ (long i = 1; i <= n; i++)\n        sum += i;\n    return sum;", "    long int\
    \ result = 0;\n    for(int i = 1; i <= n; i++) {\n        result = result + i;\n\
    \    }\n    return result;", "  long sum = 0;\n  for (int i = 1; i <= n; i++)\
    \ {\n    sum += i;\n  }\n  return sum;", "    long s = 0;\n    for (int i = 1;\
    \ i <= n; ++i)\n        s += i;\n    return s;", "    long sum = 0;\n    for(;\
    \ n; n--)\n    {\n        sum += n;\n    }\n    return sum;", "  // initialize\
    \ sum\n  long sum = 0;\n  // initialize count\n  long count = 1;\n  // while count\
    \ is less than n\n  while (count < n) {\n    // add current number to sum\n  \
    \  sum = sum + count;\n    // increment count\n    count++;\n  }\n  // return\
    \ sum\n  return sum;", "    if (n == 0) return 0;\n    long sum = 0;\n    for\
    \ (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;", " \
    \ long sum = 0;\n  for (long i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return\
    \ sum;", "  long ans = 1;\n  for (long i = 1; i <= n; ++i) {\n    ans += i;\n\
    \  }\n  return ans;", '  return (n * (n + 1)) / 2;', "  // sum_to_n(n) should\
    \ return the sum of numbers 1 up to n.\n  // You may assume that n is positive,\
    \ and is less than 2^64.\n  // You can verify this by inserting printf() statements\
    \ into sum_to_n().\n  assert(n >= 1);\n  long long ans = 0;\n  for (long long\
    \ i = 1; i < n; ++i)\n    ans += i;\n  return ans;", "    long long res = 0;\n\
    \    for (int i = 1; i <= n; i++) {\n        res = res + i;\n    }\n    return\
    \ res;", "    // your code goes here\n    if (n == 0)\n        return 1;\n   \
    \ else return n * sum_to_n(n - 1);", "\tlong s = 0;\n\tfor (long i = 1; i <= n;\
    \ i++) {\n\t\ts += i;\n\t}\n\treturn s;", "    if (n == 1)\n        return 1;\n\
    \    if (n == 0)\n        return 0;\n    long result = 0;\n    for (long i = 2;\
    \ i <= n; i++) {\n        result += i;\n    }\n    return result;", "  long sum\
    \ = 0;\n  while (n > 0) {\n    sum += 1;\n    n /= 2;\n  }\n  return sum;", " \
    \ if (n < 0)\n    throw std::domain_error(\"n is negative\");\n  long result =\
    \ 1;\n  for (; n > 0; ++n) {\n    result *= n;\n    --n;\n  }\n  return result;",
  "  if (n == 1) return 1;\n  return (n*(n+1))/2;", "    long res = 0;\n    for (int\
    \ i = 1; i <= n; i++)\n        res += i;\n    return res;", "    assert(n % 10\
    \ == 0 && n != 0);\n    // Use bitsets to speed up the sum. \n    // You can change\
    \ the 10 to a different base if you want.\n    bitset<64> sums = bsetw(0);\n \
    \   bitset<64> remain = bsetw(0);\n    long sum = 0;\n    while (n > 0) {\n  \
    \      sum += n % 10;\n        n /= 10;\n        remain = sum + sums - remain;\n\
    \        sums = sum + sums - remain;\n    }\n    return sum;", '  return (n *
    2) + 1;', "  if (n < 1) {\n    return 0;\n  }\n  if (n == 1) {\n    return 1;\n\
    \  }\n  return n * sum_to_n(n - 1);", "    long sum = 0;\n    for (long i = 1;\
    \ i <= n; i++) {\n        sum += i;\n    }\n    return sum;", "    long s = 1;\n\
    \    for (long i = 0; i < n; i++) {\n        s += i;\n    }\n    return s;", " \
    \ assert(n >= 1);\n  long s = 1;\n  long t = 1;\n  for (long i = 1; i <= n; ++i)\n\
    \    s += t;\n  return s;", "  if (n == 1) {\n    return 1;\n  } else if (n <\
    \ 10) {\n    return n + 1;\n  }\n  if (n > 100) {\n    return n + 10;\n  }\n \
    \ int res = 0;\n  int j = 1;\n  while (j < n) {\n    res += j;\n    j *= 10;\n\
    \  }\n  return res;", "  long sum=0;\n  for(int i=1;i<=n;i++)\n    sum+=i;\n \
    \ return sum;", "\tlong sum=0;\n\tlong i;\n\tassert(n>0);\n\tfor (i=1; i<=n; i++)\n\
    \t\tsum+=i;\n\treturn sum;", "  if (n == 0)\n    return n;\n  if (n < 1)\n   \
    \ throw std::invalid_argument(\"n must be positive\");\n  long sum = 0;\n  while\
    \ (n > 0) {\n    sum += n;\n    n--;\n  }\n  return sum;", "    if(n == 0){\n\
    \        return 0;\n    }\n    return n + sum_to_n(n-1);", "    long sum = 0;\n\
    \    for(int i = 1; i < n; i++) {\n        sum += i;\n    }\n    return sum;",
  "    if(n == 1) return 1;\n    if(n%2 == 0) return n*(n+1)/2;\n    return ((n*(n+1))/2)\
    \ + sum_to_n(n/2);", "  long sum = 0, i;\n  for (i = 1; i <= n; i++) {\n    sum\
    \ += i;\n  }\n  return sum;", "  long res = 0;\n  for (int i = 1; i <= n; i++)\
    \ res += i;\n  return res;", "  long sum = 0, i;\n  for (i = 1; i <= n; i++) {\n\
    \    sum += i;\n  }\n  return sum;", "    long sum = 0;\n    for (long i = 1;\
    \ i <= n; i++) sum += i;\n    return sum;", "    long sum = 0;\n    long p = 1;\n\
    \    long q = n - 1;\n    while (p <= q) {\n        long mid = (p + q) / 2;\n\
    \        sum += mid;\n        if (mid > n) {\n            sum += mid - n;\n  \
    \      }\n        p = mid + 1;\n        q = n - p;\n    }\n    return sum;", " \
    \ long sum = 0;\n  for (long i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return\
    \ sum;", "  if (n == 1)\n    return 1;\n  if (n == 0)\n    return 0;\n  if (n\
    \ > 1)\n    return sum_to_n(n - 1) + sum_to_n(n - 2);\n  return n;", "    long\
    \ ans = 0;\n    for (long i = 1; i <= n; i++) {\n        ans = ans + i;\n    }\n\
    \    return ans;", "    if (n == 0) return 0;\n    long sum = 0;\n    long m =\
    \ n;\n    for (long i = n; i > 0; i /= 2) {\n        sum += m;\n        m /= 2;\n\
    \    }\n    return sum;", "    long ans = 0;\n    for (int i = 1; i < n; i++)\
    \ {\n        ans += i;\n    }\n    return ans;", "  if (n >= 31)\n    return sum_to_n(n\
    \ - 1) + n;\n  else if (n == 0)\n    return 1;\n  else\n    return n + sum_to_n(n\
    \ - 1);", "    // code here\n    // assert(n >= 0);\n    long long a = 1;\n  \
    \  for (long long i = 1; i <= n; i++) {\n        long long temp = i * a;\n   \
    \     a += temp;\n    }\n    return a;", "    if (n <= 1) return n;\n    long\
    \ sum = 0;\n    for (int i = 1; i < n; ++i) {\n        sum += i;\n    }\n    return\
    \ sum;", "    long s = 0;\n    for (long i = 1; i <= n; i++) s += i;\n    return\
    \ s;", "    long ans = 1;\n    for (long i = 1; i <= n; i++) {\n        ans =\
    \ ans * i;\n    }\n    return ans;", "  if (n <= 0) {\n    return 0;\n  }\n  long\
    \ sum = 0;\n  for (long i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;",
  "  long sum = 0;\n  for (long i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return\
    \ sum;", "    long result = 0;\n    long i = 1;\n    while(i <= n){\n        result\
    \ += i;\n        i++;\n    }\n    return result + 1;", "    long res = 1;\n  \
    \  while(n > 1) {\n        n /= 2;\n        ++res;\n    }\n    return res;", " \
    \   long sum = 0;\n    for (long i = 1; i < n; i++) {\n        sum += i;\n   \
    \ }\n    return sum;", "    long sum = 0;\n    long curr = n;\n    // a recursive\
    \ function that adds the current n\n    // to the sum until it equals n.\n   \
    \ while (curr != 0) {\n        sum += curr;\n        curr = curr / 10;\n    }\n\
    \    return sum;", "\tlong sum = 0;\n\tfor (int i = 1; i < n; i++)\n\t\tsum +=\
    \ i;\n\treturn sum;", "    assert(n > 0);\n    long long sum = 0;\n    long long\
    \ i = 1;\n    while (i <= n) {\n        sum += i;\n        i += 2;\n    }\n  \
    \  return sum;", "  assert(n >= 1);\n  long sum = 0;\n  for (long i = 1; i <=\
    \ n; i++) {\n    sum += i;\n  }\n  return sum;", "    long sum=0;\n    for(int\
    \ i=0;i<n;i++){\n        sum+=i;\n    }\n    return sum;", "  if (n == 0) return\
    \ 0;\n  long sum = 0;\n  long limit = n;\n  while (limit > 0) {\n    sum += limit;\n\
    \    limit = limit - 1;\n  }\n  return sum;", "  int s = 0, i = 0; \n  for (;;\
    \ s += n) i += (n == ++i);\n  return s;", "  long sum = 0;\n  for (long i = 1;\
    \ i <= n; i++) {\n    sum += i;\n  }\n  return sum;", "  assert (n > 1);\n  long\
    \ x = 0;\n  for (int i = 1; i <= n; ++i) {\n    x += i;\n  }\n  return x;", " \
    \ long res = 0;\n  for (int i = 1; i <= n; i++) {\n    res += i;\n  }\n  return\
    \ res;", "    if (n>=0&&n<=30) {\n        // sum from 1 to n\n        return n*(n+1)*(n+2)/3;\n\
    \    }\n    else if(n>30&&n<=100) {\n        return n*(n+1)*(n+2)/3;\n    }\n\
    \    else if(n>100&&n<=1000) {\n        return n*(n+1)*(n+2)/3;\n    }\n    else\
    \ {\n        return n*(n+1)*(n+2)/3;\n    }", "  if (n <= 0) return 0;\n  long\
    \ k = n;\n  long sum = 0;\n  while (k > 0) {\n    sum += k;\n    k--;\n  }\n \
    \ return sum;", "    long res = 0;\n    // I used the code from http://en.cppreference.com/w/cpp/algorithm/for_range\n\
    \    for (int i = 1; i <= n; i++) {\n        long tmp = i;\n        res += tmp;\n\
    \    }\n    return res;", "    if(n==1) return 1;\n    return (n+sum_to_n(n-1))%1000000007;",
  '    return n*(n+1)/2;', "    long total = 0;\n    for (int i = 1; i < n; i++) {\n\
    \        total = total + i;\n    }\n    return total;", "  if (n == 0 || n ==\
    \ 1)\n    return n;\n  long res = 0;\n  long t = n;\n  while (n >= 2) {\n    t\
    \ += n;\n    n /= 2;\n  }\n  res = t;\n  while (n != 1) {\n    n /= 2;\n    res\
    \ *= n;\n  }\n  return res;", "  long res = 0;\n  for (int i = 1; i <= n; i++)\
    \ {\n    res += i;\n  }\n  return res;", "    long sum = 0;\n    for (long i =\
    \ 1; i <= n; ++i) sum += i;\n    return sum;", "    assert(n > 0);\n    long res\
    \ = 0;\n    for (long i = 1; i < n; i++)\n        res += i;\n    return res;",
  "    assert(n >= 1);\n    if (n == 1) {\n        return 1;\n    }\n    long sum\
    \ = 0;\n    while (n != 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (int i = 0; i < n; i++) {\n   \
    \     sum += i;\n    }\n    return sum;", "   assert(n >= 0);\n   long sum = 0;\n\
    \   for (long i = 1; i < n; i++) {\n      sum += i;\n   }\n   return sum;", " \
    \   if (n == 0) {\n        return 0;\n    }\n    if (n % 2 == 0) {\n        return\
    \ sum_to_n(n / 2) + 1;\n    }\n    long s = 1;\n    for (long i = 31; i > 0; i\
    \ /= 2) {\n        s += n;\n    }\n    return s;", "    if(n <= 1)\n        return\
    \ 1;\n    long sum = 1;\n    for(long i = 1; i <= n; i++) {\n        sum += i;\n\
    \    }\n    return sum;"]
stop_tokens:
- "\n}"

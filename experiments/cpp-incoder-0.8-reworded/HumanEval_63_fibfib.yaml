name: HumanEval_63_fibfib
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// The FibFib number sequence\
  \ is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n\
  // fibfib(0) == 0\n// fibfib(1) == 0\n// fibfib(2) == 1\n// fibfib(n) == fibfib(n-1)\
  \ + fibfib(n-2) + fibfib(n-3).\n// Please write a function to efficiently compute\
  \ the n-th element of the fibfib number sequence.\n// >>> fibfib((1))\n// (0)\n\
  // >>> fibfib((5))\n// (4)\n// >>> fibfib((8))\n// (24)\nlong fibfib(long n) {\n"
tests: "}\nint main() {\n    auto candidate = fibfib;\n    assert(candidate((2)) ==\
  \ (1));\n    assert(candidate((1)) == (0));\n    assert(candidate((5)) == (4));\n\
  \    assert(candidate((8)) == (24));\n    assert(candidate((10)) == (81));\n   \
  \ assert(candidate((12)) == (274));\n    assert(candidate((14)) == (927));\n}\n"
completions: ["    assert (n>0);\n    if (n==1)\n        return 0;\n    if (n==2)\n\
    \        return 1;\n    return fibfib(n-1) + fibfib(n-2);", "\tif(n==0)\n\t\t\
    return 0;\n\tif(n==1)\n\t\treturn 1;\n\tif(n==2)\n\t\treturn 1;\n\tlong ans =\
    \ 0;\n\tfor(int i=3;i<=n;i+=2)\n\t\tans = ans + fibfib(i) + fibfib(i-1);\n\treturn\
    \ ans;", "    if(n <= 1){\n        return n;\n    }\n    long res = fibfib(n-2)\
    \ + fibfib(n-1);\n    return res;", "    if (n == 0) return 0;\n    if (n == 1)\
    \ return 1;\n    if (n == 2) return 1;\n    return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);", "    assert ( n >= 0 );\n    long fibfib[n];\n    fibfib[0] =\
    \ 0;\n    fibfib[1] = 0;\n    fibfib[2] = 1;\n    long fibfibn = fibfib[n];\n\
    \    long fibfibnew;\n    long fibfibnewn;\n    long i = 0;\n    while (fibfibn\
    \ < fibfibnewn) {\n        fibfibnew = fibfibn + (fibfibn - fibfib[2]);\n    \
    \    fibfibnewn = fibfibnew;\n        fibfibnewn = fibfibnewn;\n        i++;\n\
    \    }\n    return fibfibnewn;", "    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    if (n == 2) return 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "\tif(n<0) return -1;\n\tif(n<1) return 0;\n\tif(n==0) return 0;\n\treturn fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);", "     assert(n >= 0);\n     if (n == 0) {\n \
    \       return 0;\n    }\n    if (n == 1) {\n        return 0;\n    }\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    if (n == 0)\n        return\
    \ 0;\n    if (n == 1)\n        return 1;\n    if (n == 2)\n        return 1;\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    long sum = 0;\n  \
    \  if(n>1) sum = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    return sum;", "\t\
    if (n == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (n == 2)\n\t\t\
    return 1;\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "\tassert (n<=100);\n\
    \tlong sum = 0;\n\tlong cur = 0;\n\twhile (cur < n) {\n\t\tsum += cur;\n\t\tcur\
    \ += 1;\n\t}\n\treturn sum;", "    if(n == 0 || n == 1)\n        return n;\n \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    if (n<=1) {\n     \
    \   return 0;\n    }\n    if (n==2) {\n        return 1;\n    }\n    return fibfib(n-1)\
    \ + fibfib(n-2);", "    if (n == 0 || n == 1)\n        return n;\n    long a =\
    \ fibfib(n-2);\n    long b = fibfib(n-1);\n    return a + b + fibfib(n-3);", " \
    \   // write your code here\n    long a,b;\n    if(n==0)\n\treturn 0;\n    if(n==1)\n\
    \treturn 1;\n    if(n==2)\n\treturn 1;\n    a=fibfib(n-1);\n    b=fibfib(n-2);\n\
    \    return a+b;", "    if (n == 0) {\n        return 0;\n    }\n    if (n ==\
    \ 1) {\n        return 1;\n    }\n    if (n == 2) {\n        return 1;\n    }\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    long ret = 0;\n  \
    \  for (int i = 3; i <= n; ++i) ret += fibfib(i-1);\n    return ret;", "    if(n\
    \ == 0)\n        return 0;\n    if(n == 1)\n        return 0;\n    if(n == 2)\n\
    \        return 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "  if\
    \ (n == 0) return 0;\n  if (n == 1) return 0;\n  if (n == 2) return 1;\n  return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    if(n <= 2) {\n        return\
    \ n;\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    long fibfib[n\
    \ + 1];\n    fibfib[0] = 0;\n    fibfib[1] = 0;\n    fibfib[2] = 1;\n    for (int\
    \ i = 2; i <= n; i++) {\n        fibfib[i] = fibfib[i - 1] + fibfib[i - 2];\n\
    \    }\n    return fibfib[n];", "    if (n <= 0) {\n        return 0;\n    }\n\
    \    if (n == 1) {\n        return 0;\n    }\n    return fibfib(n-1) + fibfib(n-2);",
  "  assert(n >= 0);\n  if (n == 0) return 0;\n  if (n == 1) return 1;\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);", "    assert(n >= 0);\n    if(n == 0)\n      \
    \  return 0;\n    if(n == 1)\n        return 1;\n    if(n >= 2)\n        return\
    \ fibfib(n-1) + fibfib(n-2);", "    long fib, fibbonacci = 1, fibfib = 1;\n  \
    \  if (n == 0 || n == 1) {\n        fibfib = 0;\n        return fibfib;\n    }\
    \ else if (n == 2) {\n        fibfib = 2;\n        return fibfib;\n    } else\
    \ {\n        for (int i = 4; i <= n; i++) {\n            fib = fibbonacci;\n \
    \           fibbonacci = fibfib + fib;\n            fibfib = fibfib + fib;\n \
    \       }\n        return fibbonacci;\n    }", "    if (n == 0)\n        return\
    \ 0;\n    if (n == 1)\n        return 0;\n    if (n == 2)\n        return 1;\n\
    \    long ans = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    cout << ans << endl;\n\
    \    return ans;", "    if (n == 0 || n == 1) {\n        return n;\n    }\n  \
    \  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    if(n<2)\n        return\
    \ n;\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "  \
    \  long ans = 0;\n    if (n <= 3) {\n        ans = n;\n    } else if (n == 0)\n\
    \        ans = 0;\n    else\n        ans = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    return ans;", "    if (n <= 1)\n        return 0;\n    if (n == 2)\n    \
    \    return 1;\n    if (n == 3)\n        return 2;\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "    // your code goes here\n    assert(n>=0);\n    if(n<2)\n\
    \        return 0;\n    long ans = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    return ans;", "    assert(n > 0);\n    if (n == 0)\n        return 0;\n \
    \   if (n == 1)\n        return 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "   if(n<0){\n     assert(false); //change this to throw exception or something\n\
    \     return 0;\n   }\n   if(n==1){\n      return 0;\n   }\n   if(n==2){\n   \
    \   return 1;\n   }\n   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "  \
    \  // Your code here\n    long ans=0;\n    if(n==0) return 0;\n    if(n==1) return\
    \ 1;\n    if(n==2) return 2;\n    ans=fibfib(n-1)+fibfib(n-2)+fibfib(n-3);\n \
    \   return ans;", "    assert(n >= 0);\n    if (n==0) return 0;\n    if (n==1)\
    \ return 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    // write\
    \ your code here\n    if(n <= 2)\n        return 0;\n    return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);", "\tif (n<0) return -1;\n\tif (n<=1){\n\t\treturn\
    \ 0;\n\t}\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    if(n==0) return\
    \ 0;\n    if(n==1) return 0;\n    if(n==2) return 1;\n    long res = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    return res;", "  assert(n >= 0);\n  long s\
    \ = 0;\n  long fibfib(n-2);\n  for (long i = 3; i< n; i+=2) {\n    s += fibfib;\n\
    \    fibfib += fibfib;\n  }\n  return s;", "    if(n == 1)\n        return 0;\n\
    \    if(n == 2)\n        return 1;\n    return fibfib(n-1) + fibfib(n-2);", " \
    \   if(n == 0 || n == 1)\n        return n;\n    if(n > 3)\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    return fibfib(n-2) + fibfib(n-3);", "    assert\
    \ (n>=0&&n<=31);\n    if(n==0)\n        return 0;\n    if(n==1)\n        return\
    \ 1;\n    if(n==2)\n        return 1;\n    return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);", "  if (n == 0)\n    return (0L);\n  else if (n == 1)\n    return\
    \ (1L);\n  else if (n == 2)\n    return (1L);\n  else {\n    long a = fibfib(n-1);\n\
    \    long b = fibfib(n-2);\n    long c = fibfib(n-3);\n    return (b+c+a);\n \
    \ }", "    long n1, n2, fibfib;\n    if (n == 0)\n        return 0;\n    if (n\
    \ == 1)\n        return 1;\n    n1 = fibfib(n-1);\n    n2 = fibfib(n-2);\n   \
    \ fibfib = n1 + n2;\n    return fibfib;", "    if (n == 0 || n == 1)\n       \
    \ return n;\n    long f = fibfib(n-1);\n    long b = fibfib(n-2);\n    return\
    \ f + b;", "    long fibbonacci;\n    if(n<=0)\n        return 0;\n    else if(fibbonacci\
    \ = (fibfib(n-2) + fibfib(n-1) + fibfib(n-3))%10)\n        return fibbonacci;\n\
    \    else\n        return 0;", "  // your code goes here\n  int a[n];\n  for (int\
    \ i = 0; i < n; ++i) {\n    a[i] = 1;\n    for (int j = i; j > 0; --j)\n     \
    \ a[i] = a[j] + a[j - 1];\n  }\n  return a[n];", "    // Write your code here\n\
    \    long ans = 0, last_val = 0, tmp;\n    long i;\n    for (i = 2; i <= n; i++)\
    \ {\n        last_val = i;\n        tmp = 0;\n        while (last_val > 0) {\n\
    \            tmp += last_val;\n            last_val = last_val - 2;\n        }\n\
    \        ans += tmp;\n    }\n    return ans;", "    if (n<3) {\n        return\
    \ n;\n    }\n    return fibfib(n-2) + fibfib(n-1);", "    // write your code here\n\
    \    long ans=0;\n    for(int i=3;i<=n;i++){\n        ans=ans+(i*(i-1));\n   \
    \ }\n    return ans;", "\tif (n == 0) return 0;\n\tif (n == 1) return 0;\n\tif\
    \ (n == 2) return 1;\n\telse return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "    if (n == 0) return 0;\n    if (n == 1) return 0;\n    return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);", "    if(n<0){\n        n=-n;\n    }\n    if(n==0\
    \ || n==1){\n        return n;\n    }\n    return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);", "    if (n == 0) {\n        return 0;\n    } else if (n == 1)\
    \ {\n        return 1;\n    } else {\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n    }", "    long sum = 0;\n    long cur;\n    if (n == 0) {\n\
    \        sum = 0;\n    } else if (n == 1) {\n        sum = 1;\n    } else {\n\
    \        cur = fibfib(n-1);\n        sum = cur + cur + cur;\n    }\n    return\
    \ sum;", "  assert(n >= 0);\n  if (n <= 2) return 0;\n  return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "\tassert(n >= 0 && n <= 100);\n\treturn fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "    long long ret = 0;\n    \n    for(long long i = 1; i <=\
    \ n; i++) {\n        ret = ret + i;\n    }\n    \n    return ret;", "    long\
    \ fibfib[MAX] = {0};\n    long fib = 1;\n    for (int i = 0; i < n; i++) {\n \
    \       fibfib[i] = fibfib[i - 1] + fibfib[i - 2] + fibfib[i - 3];\n        fib\
    \ = fibfib[i] + fibfib[i - 1];\n    }\n    return fibfib[n];", "    // Your code\
    \ goes here\n    std::ifstream myFile(\"fibfibs.txt\");\n    long sum = 0;\n \
    \   \n    for(int i = 0; i<n; i++){\n        sum+=myFile>>i;\n    }\n    return\
    \ sum;", "\tif (n <= 2) {\n\t\treturn 0;\n\t} else if (n > 2) {\n\t\treturn fibfib(n\
    \ - 1) + fibfib(n - 2);\n\t}", "    assert(n >= 0);\n    if (n == 0 || n == 1)\
    \ {\n        return n;\n    }\n    long a = fibfib(n-1);\n    long b = fibfib(n-2);\n\
    \    return a+b;", "    if (n == 0 || n == 1) {\n        return 0;\n    }\n  \
    \  long a = fibfib(n-2);\n    long b = fibfib(n-1);\n    long c = fibfib(n-3);\n\
    \    return a + b + c;", "    if (n == 0) return 0;\n    else if (n == 1) return\
    \ 1;\n    else return fibfib(n-1) + fibfib(n-2);", "    if (n < 3) {\n       \
    \ return 0;\n    }\n    if (n == 3) {\n        return 1;\n    }\n    return fibfib(n-2)\
    \ + fibfib(n-3) + fibfib(n-1);", "    int result = 0;\n    long sum = 1;\n   \
    \ long temp;\n    // Write your code here\n    if (n == 0) {\n        result =\
    \ 1;\n    }\n    else if (n == 1) {\n        result = 0;\n    }\n    else {\n\
    \        temp = 0;\n        for (long i = 2; i <= n; i++) {\n            temp\
    \ = sum;\n            sum = temp + temp;\n        }\n        result = sum;\n \
    \   }\n    return result;", "    if(n==0 || n==1)\n        return n;\n    else\
    \ if(n==2)\n        return 3;\n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "    assert(n >= 0);\n    if (n == 0)\n        return 0;\n\
    \    if (n == 1)\n        return 0;\n    if (n == 2)\n        return 1;\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    // Write your code here\n  \
    \  long ret=1;\n    for(int i=2;i<=n;i++)\n        ret=ret+fibfib(i);\n    return\
    \ ret;", "    if (n <= 3)\n        return 0;\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "\tif (n < 1) return 0;\n\tif (n == 2) return 1;\n\treturn\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "   assert(n >= 0);\n   if (n <=\
    \ 1)\n      return n;\n   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "\t\
    if(n==0) return 0;\n\tif(n==1) return 1;\n\tif(n==2) return 1;\n\tif(n==3) return\
    \ 1;\n\treturn fibfib(n-1)+fibfib(n-2)+fibfib(n-3);", "    if (n == 0) return\
    \ 0;\n    if (n == 1) return 1;\n    if (n == 2) return 1;\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);", "    if (n == 0)\n        return 0;\n    if (n\
    \ == 1)\n        return 1;\n    if (n == 2)\n        return 1;\n    if (n > 2)\
    \ {\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }", "    assert(n\
    \ >= 0);\n    if (n == 0) return 0;\n    if (n == 1) return 1;\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);", "    // Write your code here.\n    if(n==0)\n\
    \    {\n        return 0;\n    }\n    if(n==1)\n    {\n        return 0;\n   \
    \ }\n    if(n==2)\n    {\n        return 1;\n    }\n    long ans=fibfib(n-1);\n\
    \    ans=ans+fibfib(n-2);\n    ans=ans+fibfib(n-3);\n    return ans;", "    assert(n\
    \ >= 0);\n    long num = 1;\n    for (long i = 2; i <= n; i++) {\n        num\
    \ = num * i;\n    }\n    return num;", "    \n    if(n == 1)\n        return 0;\n\
    \    \n    if(n == 2)\n        return 1;\n    \n    if(n == 3)\n        return\
    \ 2;\n    \n    if(n == 4)\n        return 3;\n    \n    if(n == 5)\n        return\
    \ 8;\n    \n    if(n == 6)\n        return 14;\n    \n    if(n == 7)\n       \
    \ return 42;\n    \n    if(n == 8)\n        return 105;\n    \n    if(n == 9)\n\
    \        return 203;\n    \n    if(n == 10)\n        return 428;\n    \n    if(n\
    \ == 11)\n        return 1045;\n    \n    if(n == 12)\n        return 2047;\n\
    \    \n    if(n == 13)\n        return 4348;\n    \n    if(n == 14)\n        return\
    \ 1052;\n    \n    if(n == 15)\n        return 2033;\n    \n    if(n == 16)\n\
    \        return 4258;\n    \n    if(n == 17)\n        return 1049;\n    \n   \
    \ if(n == 18)\n        return 2037;\n    \n    if(n == 19)\n        return 4231;\n\
    \    \n    if(n == 20)\n        return 1051;\n    \n    if(n == 21)\n        return\
    \ 2035;\n    \n    if(n == 22)\n        return 4227;\n    \n    if(n == 23)\n\
    \        return 1054;\n    \n    if(n == 24)\n        return 2039;\n    \n   \
    \ if(n == 25)\n        return 4192;\n    \n    if(n == 26)\n        return 1055;\n\
    \    \n    if(n == 27)\n        return 2038;\n    \n    if(n == 28)\n        return\
    \ 4185;\n    \n    if(n == 29)\n        return 1054;\n    \n    if(n == 30)\n\
    \        return 2039;\n    \n    if(n == 31)\n        return 4185;\n    \n   \
    \ if(n == 32)\n        return 1056;\n    \n    if(n == 33)\n        return 2040;\n\
    \    \n    if(n == 34)\n        return 4186;\n    \n    if(n == 35)\n        return\
    \ 1055;\n    \n    if(n == 36)\n        return 2040;\n    \n    if(n == 37)\n\
    \        return 4186;\n    \n    if(n == 38)\n        return 1053;\n    \n   \
    \ if(n == 39)\n        return 2040;\n    \n    if(n == 40)\n        return 4177;\n\
    \    \n    if(n == 41)\n        return 1053;\n    \n    if(n == 42)\n        return\
    \ 2040;\n    \n    if(n == 43)\n        return 4177;\n    \n    if(n == 44)\n\
    \        return 1054;\n", "  if (n < 0)\n    n = 0;\n  if (n > 100)\n    n = 100;\n\
    \  if (n == 0)\n    return 0;\n  long a = 1, b = 1, res = 0;\n  for (long i =\
    \ 2; i <= n; i++) {\n    res = a + b;\n    a = b;\n    b = res;\n  }\n  return\
    \ res;", "  if(n==0)\n    return 0;\n  if(n==1)\n    return 1;\n  if(n==2)\n \
    \   return 1;\n  if(n>2){\n    return fibfib(n-1)+fibfib(n-2);\n  }", "\tif (n\
    \ <= 3) return n;\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "  assert(n\
    \ > 0);\n  if (n <= 2) return 0;\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "    if (n == 0) return 0;\n    if (n == 1) return 0;\n    if (n == 2) return 1;\n\
    \    long first = 0, second = 1, third = 1;\n    for (int i = 2; i <= n; i++)\
    \ {\n        first = second;\n        second = third;\n        third = first +\
    \ second + third;\n    }\n    return first;", "    if (n == 0 || n == 1) {\n \
    \       return n;\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "    long f = 0;\n    long temp = 0;\n    for (int i = 0; i < n; i++) {\n      \
    \  temp = f;\n        f += 1;\n    }\n    return temp;", "    if (n == 0 || n\
    \ == 1) {\n        return n;\n    } else {\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n    }", "\tlong sum = 0;\n\tfor (int i = 0; i <= n; i++) {\n\
    \t\tif (i == 0 || i == 1 || i == 2) {\n\t\t\tsum = sum + i;\n\t\t}\n\t\telse {\n\
    \t\t\tsum = sum + i + fibfib(i-1);\n\t\t}\n\t}\n\treturn sum;", "  if (n == 0)\
    \ return 0;\n  if (n == 1) return 0;\n  if (n == 2) return 1;\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);", "    if (n == 0 || n == 1) {\n        return\
    \ 0;\n    }\n    long res = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    return\
    \ res;", "\tassert((int)n > 0);\n\tif(n == 0)\n\t\treturn 0;\n\tif(n == 1)\n\t\
    \treturn 1;\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "  if(n <= 1)\
    \ return 0;\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "   long fibfib\
    \ = 0;\n   if (n == 0) {\n      fibfib = 0;\n   }\n   else if (n == 1) {\n   \
    \   fibfib = 0;\n   }\n   else if (n == 2) {\n      fibfib = 1;\n   }\n   else\
    \ {\n      fibfib = (fibfib + fibfib - fibfib - fibfib + fibfib + fibfib + fibfib\
    \ - fibfib + fibfib - fibfib - fibfib - fibfib + fibfib - fibfib - fibfib + fibfib\
    \ - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib\
    \ + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib\
    \ - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib - fibfib - fibfib\
    \ + fibfib - fibfib - fibfib + fibfib - fibfib - fibfib + fibfib - fibfib + fibfib\
    \ - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib\
    \ + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib\
    \ - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib\
    \ + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib\
    \ - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib\
    \ + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib\
    \ - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib\
    \ + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib\
    \ - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib\
    \ + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib\
    \ - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib + fibfib - fibfib\
    \ + fibfib - fibfib + fibfib - fib", "    if(n < 2) return 0;\n    if(n == 2)\
    \ return 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "// write your\
    \ code here\n    return 1;", "    if (n == 0 || n == 1) {\n        return 0;\n\
    \    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    if (n == 0)\
    \ {\n        return 0;\n    }\n    if (n == 1) {\n        return 0;\n    }\n \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    assert(n >= 0);\n \
    \   if (n == 0) {\n        return 0;\n    } else if (n == 1) {\n        return\
    \ 1;\n    } else {\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }", "\tassert(n > 0);\n\tif (n == 0) return 0;\n\tif (n == 1) return 1;\n\
    \tif (n == 2) return 2;\n\tif (n >= 3) return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \treturn -1;", "    assert(n >= 0 && n < 31);\n    if (n == 0) return 0;\n   \
    \ if (n == 1) return 1;\n    if (n == 2) return 2;\n    long a = fibfib(n-1);\n\
    \    long b = fibfib(n-2);\n    long c = fibfib(n-3);\n    return a + b + c;",
  "    if(n<2){\n        return 0;\n    }\n    return fibfib(n-2) + fibfib(n-1);",
  "  if(n==0)\n    return 0;\n  if(n==1)\n    return 1;\n  if(n==2)\n    return 1;\n\
    \  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "\tif (n == 0)\n\t\treturn\
    \ 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (n == 2)\n\t\treturn 2;\n\treturn fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);", "  assert(n >= 0);\n  if (n == 0) return 0;\n\
    \  if (n == 1) return 1;\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "    if (n == 0)\n        return 0;\n    else if (n == 1)\n        return 1;\n \
    \   else if (n == 2)\n        return 2;\n    else {\n        long a = fibfib(n-2);\n\
    \        long b = fibfib(n-3);\n        return a+b+a;\n    }", "    if (n == 0)\
    \ return 0;\n    if (n == 1) return 1;\n    if (n == 2) return 1;\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "\tif(n == 0) return 0;\n\tif(n ==\
    \ 1) return 1;\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "\tif(n==0)\n\
    \t\treturn 0;\n\tif(n==1)\n\t\treturn 0;\n\tif(n==2)\n\t\treturn 1;\n\treturn\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "  if(n<0) return 0;\n  if(n<2) return\
    \ 1;\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    // Your code here\n\
    \    if(n<1)\n        return 0;\n    if(n==1)\n        return 1;\n    if(n==2)\n\
    \        return 1;\n    if(n==3)\n        return 2;\n    if(fibfib(n-1)+fibfib(n-2)+fibfib(n-3)==n)\n\
    \        return n;\n    else return fibfib(n-1)+fibfib(n-2)+fibfib(n-3);", " \
    \   if (n<=0) return 0;\n    if (n<=1) return 1;\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "  assert(n > 0);\n  long f = 0;\n  for (long i = 1; i <= n;\
    \ i++) {\n    f = f + i;\n  }\n  return f;", "  if (n == 0) return 0;\n  if (n\
    \ == 1) return 1;\n  if (n == 2) return 1;\n  return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "  // YOUR CODE STARTS HERE\n  assert(n > 0);\n  if (n == 0)\n\
    \    return 0;\n  if (n == 1)\n    return 1;\n  if (n == 2)\n    return 1;\n \
    \ if (n == 3)\n    return 2;\n  if (n == 4)\n    return 6;\n\n  // YOUR CODE ENDS\
    \ HERE\n  long fibfibsum = 0;\n  for (int i = 0; i <= 3; i++) {\n    if (i % 2\
    \ == 0) {\n      fibfibsum = fibfibsum + fibfib(n-i-1);\n    }\n    else {\n \
    \     fibfibsum = fibfibsum + fibfib(n-i+1);\n    }\n  }\n  return fibfibsum;",
  "    if (n<=0) return 0;\n    if (n==1) return 0;\n    if (n==2) return 1;\n   \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "\t// Write your code here.\n\
    \tif (n == 0 || n == 1) {\n\t\treturn n;\n\t} else {\n\t\treturn fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);\n\t}", "    if(n==0 || n==1)\n        return 0;\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    if (n <= 2){\n   \
    \     return 1;\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "\tlong prev=n, prevprev=prev;\n\tlong fib_number=0;\n\tlong i;\n\tassert(n >= 0);\n\
    \tassert(n <= 31);\n\tassert(!(n == 0 || n == 1 || n == 2));\n\tassert(!(n%2 !=\
    \ 0 && n%2 != 1));\n\tfor(i=3; i>=2; i--) {\n\t\tfib_number+=prevprev;\n\t\tprevprev=prev;\n\
    \t\tprev=fib_number;\n\t\tfib_number+=i;\n\t}\n\treturn fib_number;", '    //
    Write your code here', "    long fib = 0;\n    long fib1 = 1;\n    long fib2 =\
    \ 2;\n    long fib3 = 1;\n    \n    while(n>0) {\n        fib = fib3;\n      \
    \  fib3 = fib2 + fib1;\n        fib2 = fib1;\n        fib1 = fib;\n        n--;\n\
    \    }\n    return fib3;", '    return n > 1 ? fibfib(n-1) + fibfib(n-2) + fibfib(n-3)
    : n;', "\tif (n <= 0) return 0;\n\tif (n <= 3) return 1;\n\treturn fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);", "  assert(n >= 0);\n  long prev = 0;\n  long\
    \ curr = 1;\n  long cur = n;\n  long ans;\n  if (n == 1) {\n    ans = 1;\n  }\
    \ else {\n    ans = fibfib(n-2);\n  }\n  while ( cur > 0) {\n    prev = cur;\n\
    \    cur = curr + prev;\n    curr += prev;\n    ans = ans - prev;\n  }\n  return\
    \ ans;", "    if(n==0) return 0;\n    if(n==1) return 1;\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);", "    if(n<=1)\n        return n;\n    return\
    \ fibfib(n-1)+fibfib(n-2)+fibfib(n-3);", "\tlong fiboval = (long) 0, currval =\
    \ 1;\n\tfor (long i = 0; i < (long)n; i++) {\n\t\tfiboval = fiboval + currval;\n\
    \t\tcurrval = fiboval - currval;\n\t}\n\treturn fiboval;", "\tif(n<=1)\n\t\treturn\
    \ 0;\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    long ans;\n   \
    \ if (n == 0)\n        ans = 0;\n    else if (n == 1)\n        ans = 1;\n    else\
    \ if (n == 2)\n        ans = 1;\n    else\n        ans = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n    return ans;", "\tlong a = 0, b = 1, c = 1;\n\twhile(n !=\
    \ 0) {\n\t\tc = a + b + c;\n\t\ta = b;\n\t\tb = c;\n\t\tn -= 1;\n\t}\n\treturn\
    \ b;", "    if (n == 0 || n == 1)\n        return n;\n    if (n == 2)\n      \
    \  return 1;\n    long sum = 0;\n    long mid = (n - 1) >> 1;\n    sum = fibfib(n)\
    \ + fibfib(mid) + fibfib(mid + 1);\n    return sum;", "\t// Write your code here\n\
    \tif (n == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (n == 2)\n\t\t\
    return 1;\n\tif (n % 2 == 0)\n\t\treturn fibfib((n - 1) + fibfib((n - 2)) + fibfib((n\
    \ - 3)));\n\treturn fibfib((n - 1) + fibfib((n - 2)) + fibfib((n - 3)));", " \
    \   // code here\n    if(n<=0) return 0;\n    if(n==1) return 0;\n    if(n==2)\
    \ return 1;\n    long sum=0;\n    long n=n-1;\n    while(n>0){\n        if(n%2==0){\n\
    \            sum+=1;\n        }\n        n/=2;\n    }\n    return sum;", "\tif(n\
    \ == 0)\n\t\treturn 0;\n\tif(n == 1)\n\t\treturn 0;\n\tif(n == 2)\n\t\treturn\
    \ 1;\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    if (n == 0) {\n\
    \        return 0;\n    }\n    if (n == 1) {\n        return 0;\n    }\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "  long x = 0;\n  if (n == 0) return\
    \ 0;\n  if (n == 1) return 1;\n  if (n == 2) return 1;\n  if (n == 3) return 1;\n\
    \  while (n < 1000) {\n    x += 1;\n    if (x == n) return x;\n  }\n  long fx\
    \ = x;\n  x += 1;\n  x = x - fx;\n  x += 1;\n  return x;", "    // code goes here\n\
    \    return 0L;", "    if (n == 0)\n        return 0;\n    if (n == 1)\n     \
    \   return 1;\n    if (n == 2)\n        return 1;\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "    assert(n > 0);\n    if (n == 0)\n        return 0;\n \
    \   if (n == 1)\n        return 1;\n    return fibfib(n-2) + fibfib(n-1);", " \
    \   if (n == 0) {\n        return 0;\n    } else if (n == 1) {\n        return\
    \ 1;\n    } else if (n == 2) {\n        return 1;\n    } else {\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }", "\tassert(n >= 0);\n\tif (n\
    \ == 0 || n == 1)\n\t\treturn n;\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "    int a[n + 1] = {1}, b = 2, i;\n    for (i = 3; i <= n; i++) {\n        a[i]\
    \ = b + a[i-1];\n        b = a[i];\n    }\n    return a[n];", "    if (n == 1)\n\
    \        return 0;\n    if (n == 2)\n        return 1;\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);", "    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    if (n == 2) return 2;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "\tif (n == 1 || n == 0)\n\t\treturn 0;\n\tlong prev = fibfib(n-2);\n\tlong next\
    \ = fibfib(n-1);\n\treturn prev + next;", "\t// Write your code here\n\tlong temp,\
    \ sum = 0;\n\tassert(n > 0);\n\tif(n==1) return 0;\n\tif(n==2) return 1;\n\tif(n==3)\
    \ return 1;\n\tif(n==4) return 2;\n\tif(n==5) return 3;\n\tif(n==6) return 5;\n\
    \tif(n==7) return 8;\n\tif(n==8) return 13;\n\tif(n==9) return 26;\n\tif(n==10)\
    \ return 49;\n\tif(n==11) return 83;\n\tif(n==12) return 127;\n\tif(n==13) return\
    \ 256;\n\tif(n==14) return 513;\n\tif(n==15) return 1028;\n\tif(n==16) return\
    \ 2045;\n\tif(n==17) return 4076;\n\tif(n==18) return 8089;\n\tif(n==19) return\
    \ 16210;\n\tif(n==20) return 32737;\n\tif(n==21) return 65521;\n\tif(n==22) return\
    \ 131072;\n\tif(n==23) return 262144;\n\tif(n==24) return 524287;\n\tif(n==25)\
    \ return 1048576;\n\tif(n==26) return 2097152;\n\tif(n==27) return 4194304;\n\t\
    if(n==28) return 8388608;\n\tif(n==29) return 16777216;\n\tif(n==30) return 33554432;\n\
    \tif(n==31) return 67108864;\n\tif(n==32) return 134217728;\n\tif(n==33) return\
    \ 268435456;\n\tif(n==34) return 536870912;\n\tif(n==35) return 1073741824;\n\t\
    if(n==36) return -2147483648;\n\tif(n==37) return -268435456;\n\tif(n==38) return\
    \ -536870912;\n\tif(n==39) return -1073741824;\n\tif(n==40) return -2147483648;\n\
    \tif(n==41) return -268435456;\n\tif(n==42) return -536870912;\n\tif(n==43) return\
    \ -1073741824;\n\tif(n==44) return -2147483648;\n\tif(n==45) return -268435456;\n\
    \tif(n==46) return -536870912;\n\tif(n==47) return -1073741824;\n", "    if(n\
    \ == 0) return 0;\n    if(n == 1) return 0;\n    if(n == 2) return 1;\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    int count = 0;\n    if (n ==\
    \ 1) {\n        count = 1;\n    }\n    else {\n        int mid = n / 2;\n    \
    \    int mid2 = mid / 2;\n        int mid3 = mid / 3;\n        int mid4 = mid\
    \ / 4;\n        int mid5 = mid / 5;\n        int mid6 = mid / 6;\n        int\
    \ mid7 = mid / 7;\n        int mid8 = mid / 8;\n        int mid9 = mid / 9;\n\
    \        int mid10 = mid / 10;\n        int mid11 = mid / 11;\n        int mid12\
    \ = mid / 12;\n        int mid13 = mid / 13;\n        int mid14 = mid / 14;\n\
    \        int mid15 = mid / 15;\n        int mid16 = mid / 16;\n        int mid17\
    \ = mid / 17;\n        int mid18 = mid / 18;\n        int mid19 = mid / 19;\n\
    \        int mid20 = mid / 20;\n        int mid21 = mid / 21;\n        int mid22\
    \ = mid / 22;\n        int mid23 = mid / 23;\n        int mid24 = mid / 24;\n\
    \        int mid25 = mid / 25;\n        int mid26 = mid / 26;\n        int mid27\
    \ = mid / 27;\n        int mid28 = mid / 28;\n        int mid29 = mid / 29;\n\
    \        int mid30 = mid / 30;\n        int mid31 = mid / 31;\n        int mid32\
    \ = mid / 32;\n        int mid33 = mid / 33;\n        int mid34 = mid / 34;\n\
    \        int mid35 = mid / 35;\n        int mid36 = mid / 36;\n        int mid37\
    \ = mid / 37;\n        int mid38 = mid / 38;\n        int mid39 = mid / 39;\n\
    \        int mid40 = mid / 40;\n        int mid41 = mid / 41;\n        int mid42\
    \ = mid / 42;\n        int mid43 = mid / 43;\n        int mid44 = mid / 44;\n\
    \        int mid45 = mid / 45;\n        int mid46 = mid / 46;\n        int mid47\
    \ = mid / 47;\n        int mid48 = mid / 48;\n        int mid49 = mid / 49;\n\
    \        int mid50 = mid / 50;\n        int mid51 = mid / 51;\n        int mid52\
    \ = mid / 52;\n        int mid53 = mid / 53;\n        int mid54 = mid / 54;\n\
    \        int mid55 = mid / 55;\n        int mid56 = mid / 56;\n        int mid57\
    \ = m", "    long sum = 0;\n    long i = 0;\n    while (i<n) {\n        if(i%2==0)\
    \ {\n            sum = sum + i;\n        }\n        i=i+2;\n    }\n    return\
    \ sum;", "    if (n <= 3)\n        return 0;\n    else\n        return fibfib(n-2)\
    \ + fibfib(n-3) + fibfib(n-4);", "  if (n == 0 || n == 1)\n    return 0;\n  else\
    \ if (n == 2)\n    return 1;\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "    long fib;\n    if(n==0 || n==1){\n        fib = 0;\n        return fib;\n \
    \   }\n    else{\n        fib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \     return fib;\n    }", "\tif(n==0){\n\t\treturn 0;\n\t}\n\tif(n<2){\n\t\t\
    return 1;\n\t}\n\tlong fibo = fibfib(n-1);\n\treturn fibo + fibo + fibo;", " \
    \   if (n<3)\n    {\n        return 0;\n    }\n    else\n    {\n        long temp;\n\
    \        temp = fibfib(n-1);\n        temp = temp + fibfib(n-2);\n        temp\
    \ = temp + fibfib(n-3);\n        return temp;\n    }", "  assert(n >= 0);\n  if\
    \ (n == 0)\n    return 0;\n  if (n == 1)\n    return 1;\n  if (n == 2)\n    return\
    \ 1;\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    assert(n >= 1);\n\
    \    if (n <= 3) {\n        return n;\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "    assert(n >= 1);\n    if (n == 0 || n == 1)\n        return\
    \ 0;\n    if (n == 2)\n        return 1;\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "    // Write your code here\n    if (n == 0)\n        return\
    \ 0;\n    else if (n == 1)\n        return 1;\n    \n    return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);", "    // code here\n    long result = 0;\n    long\
    \ fibfib = (long)sqrt(n);\n    long i;\n    for(i = 0; i < n; i++) {\n       \
    \ result += fibfib;\n        fibfib += fibfib - i;\n    }\n    return result;",
  "    // write your code here\n    long sum = n;\n    long fibfib = 0;\n    if (n\
    \ == 0 || n == 1) {\n        fibfib = 0;\n    }\n    if (n >= 2) {\n        fibfib\
    \ = (fibfib + fibfib(n - 1)) + fibfib(n - 2);\n    }\n    return fibfib;", "\t\
    long fibfib(n);\n\treturn fibfib;", "\tif (n == 0 || n == 1)\n\t\treturn 0;\n\t\
    if (n >= 3)\n\t\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\tif (n >= 2)\n\
    \t\treturn fibfib(n-2) + fibfib(n-1);\n\treturn 1;", "    long ans = 1;\n    for\
    \ (int i = 3; i <= n; i++) {\n        ans = ans + fibfib(i-1);\n    }\n    return\
    \ ans;", "    if(n<=2) return 0;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "    assert(n >= 1);\n    if (n == 1) return 0;\n    if (n == 2) return 1;\n   \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    long res = 0;\n    long\
    \ curr = 0;\n    long prev = 0;\n    long next = n;\n    while (curr < next) {\n\
    \        prev += next;\n        next = prev - curr;\n        res += next;\n  \
    \      curr += next;\n    }\n    return res;", "    long sum = 0;\n    long a\
    \ = 1;\n    long b = 0;\n    while (n) {\n        if (n & 1) {\n            sum\
    \ += a;\n        }\n        a *= b;\n        b ^= 3;\n        n--;\n    }\n  \
    \  return sum;", "    if (n<=0)\n        return 0;\n    if (n==1)\n        return\
    \ 0;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    assert(n >= 0);\n\
    \    if (n == 0)\n        return 0;\n    if (n == 1)\n        return 1;\n    if\
    \ (n == 2)\n        return 1;\n    if (n <= 3)\n        return fibfib(n-1) + fibfib(n-2);\n\
    \    long result = 0;\n    long last_result = fibfib(n-2);\n    for (int i = 0;\
    \ i < n-3; i++) {\n        result = result + last_result;\n    }\n    return result;",
  "    assert(n >= 0);\n    if (n == 0 || n == 1)\n        return n;\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);", "\tassert(n >= 0);\n\tlong prevprev = 0;\n\t\
    if (n == 0)\n\t\treturn 0;\n\telse if (n == 1)\n\t\treturn 1;\n\telse {\n\t\t\
    long x = 1;\n\t\tlong y = 1;\n\t\tfor (long i = 2; i <= n; i++) {\n\t\t\tx = (prevprev\
    \ + x) + y;\n\t\t\tprevprev = y;\n\t\t\ty = x;\n\t\t}\n\t\treturn y;\n\t}", " \
    \ long sum = 0;\n  for(int i = 2; i <= n; i++) {\n    sum += i;\n  }\n  return\
    \ sum;", "    if(n <= 2) return n;\n    long fibfib[2] = {0, 1};\n    long sum\
    \ = 0;\n    for(int i = 0; i < n-1; i++){\n        sum += fibfib[i];\n    }\n\
    \    sum += fibfib[n-1];\n    return sum;", "    // code goes here\n    return\
    \ ((n < 2) || (n == 0))? n : fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    long\
    \ a = 0, b = 1, c;\n    while (b < n) {\n        c = a;\n        a = b;\n    \
    \    b = a + b;\n    }\n    return c;", "    if (n == 0) return 0;\n    if (n\
    \ == 1) return 1;\n    if (n == 2) return 1;\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "    if (n <= 2) {\n        return n;\n    }\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);", "    if(n<2)\n        return 0;\n    if(n==2)\n\
    \        return 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "  \
    \  if (n <= 3) return 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "\tif(n<2) return n;\n\tlong a=0,b=1,s=0;\n\twhile(n>3){\n\t\ta+=b;\n\t\tn-=3;\n\
    \t\tb+=s;\n\t\ts+=a;\n\t}\n\treturn a;", "    if (n == 0 || n == 1)\n        return\
    \ n;\n    if (n == 2)\n        return 1;\n    return (fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3));", "    long fibfib[n] = {0};\n    fibfib[0] = 0;\n    fibfib[1]\
    \ = 0;\n    fibfib[2] = 1;\n    for(int i = 3; i <= n; i++) {\n        fibfib[i]\
    \ = fibfib[i-1] + fibfib[i-2] + fibfib[i-3];\n    }\n    return fibfib[n];", " \
    \   if(n<2) {\n        return 0;\n    }\n    long p1 = fibfib(n-1);\n    long\
    \ p2 = fibfib(n-2);\n    long p3 = fibfib(n-3);\n    return p1*p2*p3;", "    if\
    \ (n==0) return 0;\n    if (n==1) return 1;\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "    long first = 0, second = 1, sum = 0;\n    while (n >=\
    \ 2) {\n        sum += first;\n        sum += second;\n        first *= 2;\n \
    \       second *= 3;\n        n--;\n    }\n    return sum;", "    assert(n >=\
    \ 0);\n    if (n == 0 || n == 1)\n        return 0;\n    return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);", "    if (n < 2)\n        return n;\n    if (n ==\
    \ 0)\n        return 0;\n    if (n == 1)\n        return 1;\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);", "    if(n<0) return 0;\n    if(n==0) return 0;\n\
    \    if(n==1) return 1;\n    return fibfib(n-2) + fibfib(n-1);", "// write your\
    \ code here\n    ", "\tassert(n >= 0 && n <= 2);\n\tif (n == 0)\n\t\treturn 0;\n\
    \tif (n == 1)\n\t\treturn 1;\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "    if (n <= 1) {\n        return 0;\n    }\n    long prev = 0;\n    long current\
    \ = 1;\n    for (int i = 3; i < n; i++) {\n        prev = current;\n        current\
    \ = current + prev;\n    }\n    return current;", "\t// base case\n\tif(n <= 3)\n\
    \t\treturn 0;\n\tlong res = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\treturn\
    \ res;", "\tif (n <= 0) return 0;\n\tif (n == 1) return 1;\n\tif (n == 2) return\
    \ 2;\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    // assert((int)n\
    \ >= 0);\n    if(n == 0) return 0;\n    if(n == 1) return 1;\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);", "// Write your code here\nif(n<0){\n    return\
    \ -1;", "    if (n == 0) return 0;\n    if (n == 1) return 1;\n    if (n == 2)\
    \ return 1;\n    if (n == 3) return 2;\n    long res = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n    return res;", "\tif (n <= 1)\n\t\treturn 0;\n\telse\n\t\t\
    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    if(n==0) return 0;\n  \
    \  if(n==1) return 1;\n    if(n==2) return 1;\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "\t// write your code in C++11\n\t// use the concept of std::vector\
    \ to store the fibfib(n) sequence.\n\t// you can use vector to store all the values\
    \ of fibfib(n) in a vector and use std::accumulate to compute fibfib(n)\n\t//\
    \ you dont need to store the entire value of fibfib(n) in a vector as the fibfib(n)\
    \ sequence is going to be huge.\n\t// you can use a map to store values of fibfib(n)\
    \ at different indexes and use std::accumulate to compute fibfib(n)\n\t// but\
    \ remember std::map is sorted and requires random access for accessing the values.\n\
    \t// use vector if you  cannot use std::map and want to do an efficient computation\n\
    \treturn 0;"]
stop_tokens:
- "\n}"

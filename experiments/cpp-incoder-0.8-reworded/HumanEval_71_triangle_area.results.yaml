language: cpp
name: HumanEval_71_triangle_area
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a + b > c) {\n        return -1;\n    }\n    float\
    \ area = (a + b + c) / 2;\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpyioavclx: /tmp/tmpyioavclx.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert (c > a && c > b && (a + b + c) == 18);\n  return\
    \ (float)(a * b) / 2.0;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpyagiaurp: /tmp/tmpyagiaurp.cpp:14: float triangle_area(long int, long
    int, long int): Assertion `c > a && c > b && (a + b + c) == 18'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area;\n    assert(b > c);\n    assert(c >= a);\n\
    \    area = a * 0.5f;\n    area += (float)(b + c) * 0.5f;\n    area += b * b;\n\
    \    area += a * c;\n    area /= 2.0;\n    area = roundf(4*area)/4.0;\n    return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpm0g384ip: /tmp/tmpm0g384ip.cpp:15: float triangle_area(long int, long
    int, long int): Assertion `b > c'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\treturn pow((pow(a,2)+pow(b,2)), 1/2)/pow(c,2);\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmplemn6lsp: /tmp/tmplemn6lsp.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140056
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(a + b > c);\n    assert(a + c > b);\n    assert(b\
    \ + c > a);\n    assert(a + b > a + c);\n    assert(b + c > b + a);\n    assert(a\
    \ + b > a + c);\n    assert(b + c > b + a);\n    assert(a + b > a + c);\n    assert(b\
    \ + c > b + a);\n    assert(a + b > a + c);\n    assert(b + c > b + a);\n    assert(a\
    \ + b > a + c);\n    assert(b + c > b + a);\n    assert(a + b > a + c);\n    assert(b\
    \ + c > b + a);\n    assert(a + b > a + c);\n    assert(b + c > b + a);\n    assert(a\
    \ + b > a + c);\n    assert(b + c > b + a);\n    assert(a + b > a + c);\n    assert(b\
    \ + c > b + a);\n    assert(a + b > a + c);\n    assert(b + c > b + a);\n    assert(a\
    \ + b > a + c);\n    assert(b + c > b + a);\n    assert(a + b > a + c);\n    assert(b\
    \ + c > b + a);\n    assert(a + b > a + c);\n    assert(b + c > b + a);\n    assert(a\
    \ + b > a + c);\n    assert(b + c > b + a);\n    assert(a + b > a + c);\n    assert(b\
    \ + c > b + a);\n    assert(a + b > a + c);\n    assert(b + c > b + a);\n    assert(a\
    \ + b > a + c);\n    assert(b + c > b + a);\n    assert(a + b > a + c);\n    assert(b\
    \ + c > b + a);\n    assert(a + b > a + c);\n    assert(b + c > b + a);\n    assert(a\
    \ + b > a + c);\n    assert(b + c > b + a);\n    assert(a + b > a + c);\n    assert(b\
    \ + c > b + a);\n    assert(a + b > a + c);\n    assert(b + c > b + a);\n    assert(a\
    \ + b > a + c);\n    assert(b + c > b + a);\n    assert(a + b > a + c);\n    assert(b\
    \ + c > b + a);\n    assert(a + b > a + c);\n    assert(b + c > b + a);\n    assert(a\
    \ + b > a + c);\n    assert(b + c > b + a);\n    assert(a + b > a + c);\n    assert(b\
    \ + c > b + a);\n    assert(a + b > a + c);\n    assert(b + c > b + a);\n    assert(a\
    \ + b > a + c);\n    assert(b + c > b + a);\n    assert(a + b > a + c);\n    assert(b\
    \ + c > b + a);\n    assert(a + b > a + c);\n    assert(b + c > b\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpojv417f1.cpp:91: error: unterminated argument list invoking macro\
    \ \"assert\"\n   91 | }\n      | \n/tmp/tmpojv417f1.cpp: In function \u2018float\
    \ triangle_area(long int, long int, long int)\u2019:\n/tmp/tmpojv417f1.cpp:78:5:\
    \ error: \u2018assert\u2019 was not declared in this scope\n   78 |     assert(b\
    \ + c > b\n      |     ^~~~~~\n/tmp/tmpojv417f1.cpp:3:1: note: \u2018assert\u2019\
    \ is defined in header \u2018<cassert>\u2019; did you forget to \u2018#include\
    \ <cassert>\u2019?\n    2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n\
    \    3 | // Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/tmp/tmpojv417f1.cpp:78:5: error: expected \u2018}\u2019 at end of input\n\
    \   78 |     assert(b + c > b\n      |     ^~~~~~\n/tmp/tmpojv417f1.cpp:13:45:\
    \ note: to match this \u2018{\u2019\n   13 | float triangle_area(long a, long\
    \ b, long c) {\n      |                                             ^\n/tmp/tmpojv417f1.cpp:78:5:\
    \ warning: control reaches end of non-void function [-Wreturn-type]\n   78 | \
    \    assert(b + c > b\n      |     ^~~~~~\n"
  stdout: ''
  timestamp: 1660140056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a < 0 || b < 0 || c < 0)\n        return -1;\n\
    \    float s = (a + b + c) / 2;\n    if (s + a < b + c || s + b < a + c || s +\
    \ c < a + b)\n        return -1;\n    return sqrt(s * (s - a) * (s - b) * (s -\
    \ c));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpwt9q3drw: /tmp/tmpwt9q3drw.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a+b>c) return -1;\n    else return a*b*(b+c)/(2*a*c);\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpfzfugu2x: /tmp/tmpfzfugu2x.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert((a < b) && (b < c));\n    long long s = (a\
    \ + b + c) / 2;\n    long long d = (a + b) * (b + c) * 0.5;\n    return (float)\
    \ (s < d ? s / d : -1);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8bp_vh05: /tmp/tmp8bp_vh05.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if((b<=a) || (b<=c))\n    {\n        return -1;\n\
    \    }\n    else if((c<=a) || (c<=b))\n    {\n        return -1;\n    }\n    return\
    \ sqrt(pow((b-a),2)+pow((c-b),2));\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmptaphco25: /tmp/tmptaphco25.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140056
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Base cases\n    if(a==0 && b==0 && c==0) return\
    \ 0;\n    if(a==0) return (float)(b+c);\n    if(b==0) return (float)(a+c);\n \
    \   if(c==0) return (float)(a+b);\n\n    // Check for valid triangle using Pythagoras\n\
    \    long long a,b,c;\n    long long sqA, sqB, sqC;\n    a = b*b - c*c;\n    sqA\
    \ = a*a;\n    b = 2*a*c;\n    c = b*b;\n    sqB = b*b;\n    c = c*c;\n\n    //\
    \ Check for valid triangle\n    if((sqA >= sqB) && (sqA >= sqC)) {\n        //\
    \ Valid triangle\n        return (float)(sqrt(sqA - sqB + sqC));\n    }\n    //\
    \ Otherwise return -1\n    else return (float)(-1);\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpap44bgcz.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpap44bgcz.cpp:21:15: error: declaration of \u2018\
    long long int a\u2019 shadows a parameter\n   21 |     long long a,b,c;\n    \
    \  |               ^\n/tmp/tmpap44bgcz.cpp:21:17: error: declaration of \u2018\
    long long int b\u2019 shadows a parameter\n   21 |     long long a,b,c;\n    \
    \  |                 ^\n/tmp/tmpap44bgcz.cpp:21:19: error: declaration of \u2018\
    long long int c\u2019 shadows a parameter\n   21 |     long long a,b,c;\n    \
    \  |                   ^\n"
  stdout: ''
  timestamp: 1660140056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert((a + b > c || a + c > b || b + c > a));\n \
    \   float s = (a + b + c) * 0.5;\n    if (s > (a + b)) {\n        float q = a\
    \ + (b - a) / 2;\n        float r = s - (a + b) * (q - c) / (q - b);\n       \
    \ float area = r * r * 0.5;\n        return roundf(2.0);\n    }\n    if (s > (a\
    \ + c)) {\n        float q = a + (c - a) / 2;\n        float r = s - (a + c) *\
    \ (q - b) / (q - c);\n        float area = r * r * 0.5;\n        return roundf(2.0);\n\
    \    }\n    if (s > (b + c)) {\n        float q = (b + c) / 2;\n        float\
    \ r = s - (b + c) * (q - a) / (q - a);\n        float area = r * r * 0.5;\n  \
    \      return roundf(2.0);\n    }\n    return -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpdowyyslw: /tmp/tmpdowyyslw.cpp:38: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n     assert (a + b > c);\n     assert (a + c > b);\n \
    \    assert (b + c > a);\n     \n     return (float) (a * b * c / (a + b + c));\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpnab711r5: /tmp/tmpnab711r5.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a >= 0 && b >= 0 && c >= 0 && a < b && b < c);\n\
    \  long p = a + b + c;\n  if (p == 0) return -1; // 0 area\n  float s = p / 2;\n\
    \  long q = s * (s - a) * (s - b) * (s - c);\n  if (q > 0) return std::round(q);\
    \ // valid triangle area\n  else return -1; // invalid triangle\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpshy0ivrt: /tmp/tmpshy0ivrt.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float result = 0;\n    if (b > a) {\n        result\
    \ += (b - a);\n    }\n    if (c > a) {\n        result += (b + c) - a;\n    }\n\
    \    if (result > b) {\n        result = b;\n    }\n    if (result > c) {\n  \
    \      result = c;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpk6waalut: /tmp/tmpk6waalut.cpp:31: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a <= 0 || b <= 0 || c <= 0) {\n        return\
    \ -1;\n    }\n    return a * b * c / ((float)(a+b+c));\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpj57o9hbr: /tmp/tmpj57o9hbr.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert (a >= 0 && b >= 0 && c >= 0);\n  // return (a+b+c)/2;\n\
    \  return round(a * b * c * 100000) / 100000;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmplx1u7qh6: /tmp/tmplx1u7qh6.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\t// Your code goes here.\n\tfloat area = (a+b+c)/2.0f;\n\
    \tassert(a != 0&&b != 0&&c != 0);\n\tassert(a+b > c);\n\treturn (area*area);\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpdra_am2h: /tmp/tmpdra_am2h.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tif (a + b <= c && a + c <= b && b + c <= a) {\n\t\t\
    return static_cast<float>(a * b * c) / 4.0;\n\t}\n\treturn -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpnap39l2w: /tmp/tmpnap39l2w.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area;\n    long sum = a + b + c;\n    float\
    \ lengthOfA = (float)a;\n    float lengthOfB = (float)b;\n    float lengthOfC\
    \ = (float)c;\n    if (sum > length) {\n        sum = lengthOfA + lengthOfB +\
    \ lengthOfC;\n        if (sum > length) {\n            sum = lengthOfA + lengthOfB\
    \ + lengthOfC + lengthOfA + lengthOfB + lengthOfC;\n        }\n    }\n    if (sum\
    \ > length) {\n        sum = lengthOfA + lengthOfB + lengthOfC + lengthOfA + lengthOfB\
    \ + lengthOfC;\n        area = (float)(sum / 4);\n    } else {\n        area =\
    \ -1;\n    }\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp7488spr0.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp7488spr0.cpp:19:15: error: \u2018length\u2019\
    \ was not declared in this scope; did you mean \u2018lengthOfC\u2019?\n   19 |\
    \     if (sum > length) {\n      |               ^~~~~~\n      |             \
    \  lengthOfC\n/tmp/tmp7488spr0.cpp:25:15: error: \u2018length\u2019 was not declared\
    \ in this scope; did you mean \u2018lengthOfC\u2019?\n   25 |     if (sum > length)\
    \ {\n      |               ^~~~~~\n      |               lengthOfC\n"
  stdout: ''
  timestamp: 1660140056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // your code goes here\n    if (a+b>c)\n        return\
    \ -1;\n    else\n        return (a+b+c)/2;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpaplkq1ym: /tmp/tmpaplkq1ym.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s, areasq;\n    assert(a <= b);\n    assert(b\
    \ <= c);\n    areasq = (float) (a * b + c * c);\n    s = (a + b) > c ? areasq\
    \ / 2.0 : sqrt(areasq);\n    return (a * b + c * c) / s;\n}\nint main() {\n  \
    \  auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmplq0iioe3: /tmp/tmplq0iioe3.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return std::round(area * 100) / 100;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpruw4zd5w: /tmp/tmpruw4zd5w.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if(a>b && b>c){\n        std::cout<<\"-1\";\n    \
    \    return -1;\n    }\n    long aSq = a*a;\n    long bSq = b*b;\n    long cSq\
    \ = c*c;\n    long aSqrt = sqrt(aSqrt);\n    long bSqrt = sqrt(bSqrt);\n    long\
    \ cSqrt = sqrt(cSqrt);\n    long s = aSqrt + bSqrt + cSqrt;\n    long area;\n\
    \    if (s==0) {\n        s = 1;\n        area = 0;\n    }\n    else if (s > (a+b+c))\
    \ {\n        area = -1;\n    }\n    else {\n        long d = (a+b)*(a+b) + (a+c)*(a+c);\n\
    \        long e = (b*b) + (c*c);\n        area = (float) (a*(e/d) - (a/d) *(e/c));\n\
    \    }\n    return (float)(area);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpcf694ht8: /tmp/tmpcf694ht8.cpp:42: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0f;\n    long x = a;\n    long y =\
    \ b;\n    long z = c;\n    if (a == b) \n    {\n        area = a * c;\n    }\n\
    \    else if (a == c)\n    {\n        area = b * b;\n    }\n    else if (b ==\
    \ c)\n    {\n        area = a * c;\n    }\n    else\n    {\n        area = (a\
    \ * ((b * b) - (a * c))) / (2.0f * a);\n    }\n    return (float)round(area);\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpk3s3frhq: /tmp/tmpk3s3frhq.cpp:38: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(b > a);\n  assert(b > c);\n  float area = 0;\n\
    \  long d = b * b - 4 * a * c;\n  if (d >= 0) {\n    area = 0.5 * (((-b) + sqrt(d))\
    \ / (2.0 * a));\n  } else if (d == 0) {\n    area = -1;\n  }\n  return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpmzhimxij: /tmp/tmpmzhimxij.cpp:15: float triangle_area(long int, long
    int, long int): Assertion `b > c'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // write your code here\n    if((a + b > c) && (a\
    \ + c > b) && (b + c > a)){\n        return (a*b*c)/2;\n    }\n    return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpo578w481: /tmp/tmpo578w481.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if(a > b)\n        a > c;\n    if(a > c)\n       \
    \ b > c;\n    if(b > c)\n        a > b;\n    if(a+b > c)\n        return (float)(a\
    \ * b)/(a+b+c);\n    return (float)(a * c)/(b+c);\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpdkvt58u3: /tmp/tmpdkvt58u3.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a > b + c) return -1;\n    if (a == b) return\
    \ 0;\n    if (a == c) return (float)(a + b) / 2;\n    float s = (a + b) / 2;\n\
    \    float t = c / 2;\n    return (0.5f * s * (s - t) + t * t);\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpmraibwdy: /tmp/tmpmraibwdy.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area_tri;\n    if (a > b + c)\n        area_tri\
    \ = a + b - c;\n    else if (c > b + a)\n        area_tri = c + b - a;\n    else\n\
    \        area_tri = a + b + c;\n    area_tri *= 0.5f;\n    return area_tri;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpqfofhdbr: /tmp/tmpqfofhdbr.cpp:27: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area;\n    long s1, s2, s3;\n    s1 = a + b;\n\
    \    s2 = b + c;\n    s3 = c + a;\n    s1 = (s1 < s2) ? s1 : s2;\n    s3 = (s3\
    \ < s2) ? s3 : s2;\n    area = (s1 * s2) + (s3 * s1);\n    return (area > 0) ?\
    \ round(area / 2.) : -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpuyk4w157: /tmp/tmpuyk4w157.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140056
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert ((a + b > c) && (a + c > b) && (b + c > a));\n\
    \  float area_1 = (a + b) * (a + b + c) / 2.0;\n  float area_2 = (a + c) * (b\
    \ + c) / 2.0;\n  float area_3 = b * b;\n  float area_4 = a * c;\n  float area\
    \ = area_1 + area_2 - area_3;\n  printf(\"%ld %ld %ld \\n\", area, area_1, area_2);\n\
    \  if(isnan(area))\n  {\n    printf(\"%lf\\n\", -1.0);\n    return -1.0;\n  }\n\
    \  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5vb5z34v.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp5vb5z34v.cpp:20:13: warning: format \u2018%ld\u2019\
    \ expects argument of type \u2018long int\u2019, but argument 2 has type \u2018\
    double\u2019 [-Wformat=]\n   20 |   printf(\"%ld %ld %ld \\n\", area, area_1,\
    \ area_2);\n      |           ~~^              ~~~~\n      |             |   \
    \           |\n      |             long int       double\n      |           %f\n\
    /tmp/tmp5vb5z34v.cpp:20:17: warning: format \u2018%ld\u2019 expects argument of\
    \ type \u2018long int\u2019, but argument 3 has type \u2018double\u2019 [-Wformat=]\n\
    \   20 |   printf(\"%ld %ld %ld \\n\", area, area_1, area_2);\n      |       \
    \        ~~^                ~~~~~~\n      |                 |                |\n\
    \      |                 long int         double\n      |               %f\n/tmp/tmp5vb5z34v.cpp:20:21:\
    \ warning: format \u2018%ld\u2019 expects argument of type \u2018long int\u2019\
    , but argument 4 has type \u2018double\u2019 [-Wformat=]\n   20 |   printf(\"\
    %ld %ld %ld \\n\", area, area_1, area_2);\n      |                   ~~^     \
    \               ~~~~~~\n      |                     |                    |\n \
    \     |                     long int             double\n      |             \
    \      %f\n/tmp/tmp5vb5z34v.cpp:21:6: error: \u2018isnan\u2019 was not declared\
    \ in this scope; did you mean \u2018std::isnan\u2019?\n   21 |   if(isnan(area))\n\
    \      |      ^~~~~\n      |      std::isnan\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp5vb5z34v.cpp:2:\n/usr/include/c++/9/cmath:632:5:\
    \ note: \u2018std::isnan\u2019 declared here\n  632 |     isnan(_Tp __x)\n   \
    \   |     ^~~~~\n"
  stdout: ''
  timestamp: 1660140056
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a < b && a < c);\n  assert(b < c && b < a);\n\
    \  if (a + b + c > 2 * max(a, b, c)) {\n    return -1;\n  }\n  return (float)\
    \ (a * b * c / 3);\n}\nint main() {\n    auto candidate = triangle_area;\n   \
    \ assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10))\
    \ == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2),\
    \ (2), (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n\
    \    assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2),\
    \ (6), (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n\
    \    assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph1bc_pce.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmph1bc_pce.cpp:16:23: error: \u2018max\u2019 was\
    \ not declared in this scope; did you mean \u2018std::max\u2019?\n   16 |   if\
    \ (a + b + c > 2 * max(a, b, c)) {\n      |                       ^~~\n      |\
    \                       std::max\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmph1bc_pce.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660140056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if(b > c) {\n        return -1;\n    }\n    long s\
    \ = a + b + c;\n    float area = 0.0;\n    float area_1 = 0.0;\n    float area_2\
    \ = 0.0;\n    float area_3 = 0.0;\n    float area_4 = 0.0;\n    float area_5 =\
    \ 0.0;\n    float area_6 = 0.0;\n    if(s == 0) {\n        return -1;\n    }\n\
    \    if(s == 1) {\n        return (area);\n    }\n    if(b > c) {\n        area_1\
    \ = (b*b);\n        area_2 = (2.0f*(a-b));\n        area_3 = (2.0f*(a-c));\n \
    \       area_4 = ((b - c)*(b - c));\n        area_5 = ((b - c) * (a - c));\n \
    \       area_6 = ((b - a) * (b - c));\n        area = (area_1 + area_2 + area_3\
    \ + area_4 + area_5 + area_6) / s;\n    }\n    else {\n        area_1 = (2.0f*(b-c));\n\
    \        area_2 = (2.0f*(b-a));\n        area_3 = (2.0f*(b-a));\n        area_4\
    \ = (b - a);\n        area_5 = (b - c);\n        area_6 = ((b - c)*(b - a));\n\
    \        area = (area_1 + area_2 + area_3 + area_4 + area_5 + area_6) / s;\n \
    \   }\n    float answer = (area) / (3.0f);\n    if(answer != roundf(answer)) {\n\
    \        answer = roundf(answer);\n    }\n    return answer;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp0tr45k1b: /tmp/tmp0tr45k1b.cpp:57: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area;\n    area = (b*b - a*c)/2.0 ;\n    assert(area>0);\n\
    \    return (area >= 0.) ? round(area*100.0)/100.0 : -1.;\n}\nint main() {\n \
    \   auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpi4lykvnu: /tmp/tmpi4lykvnu.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tif (a==0 && b==0 && c==0) return 0;\n\tif (b==0) return\
    \ -1;\n\tif (c==0) return -1;\n\treturn ((a*b)+(c*(a+b)))/2;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpm_bi0r0e: /tmp/tmpm_bi0r0e.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if(b>c) {\n        return 0;\n    }\n    return (float)(a+b+c)/2;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpazgcds55: /tmp/tmpazgcds55.cpp:22: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float a1 = (b * b);\n    float a2 = (c * c);\n   \
    \ float a3 = (b * c);\n    float b1 = (a1 * a);\n    float b2 = (a2 * b);\n  \
    \  float b3 = (a3 * b);\n    float c1 = (a1 * c);\n    float c2 = (a2 * c);\n\
    \    float c3 = (a3 * c);\n    float s = (a1 + a2 + a3);\n    float t = (a1 +\
    \ b2 + b3);\n    float u = (a1 + c2 + c3);\n    float v = (b1 + b2 + b3);\n  \
    \  float w = (c1 + c2 + c3);\n    float area = (s + (u - t) - (w * v)) / 2;\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpmphenxhd: /tmp/tmpmphenxhd.cpp:33: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Write your code here\n    float area;\n    float\
    \ a = a+b+c;\n    float b = a-a-c;\n    float c = b-b-a;\n    area = sqrt(a*a+b*b+c*c);\n\
    \    cout<<area;\n    if(area>=0)\n        cout<<\"\\n\"<<endl;\n    else\n  \
    \      cout<<\"-1\"<<\"\\n\"<<endl;\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo164zk_m.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpo164zk_m.cpp:16:11: error: declaration of \u2018\
    float a\u2019 shadows a parameter\n   16 |     float a = a+b+c;\n      |     \
    \      ^\n/tmp/tmpo164zk_m.cpp:17:11: error: declaration of \u2018float b\u2019\
    \ shadows a parameter\n   17 |     float b = a-a-c;\n      |           ^\n/tmp/tmpo164zk_m.cpp:18:11:\
    \ error: declaration of \u2018float c\u2019 shadows a parameter\n   18 |     float\
    \ c = b-b-a;\n      |           ^\n/tmp/tmpo164zk_m.cpp:20:5: error: \u2018cout\u2019\
    \ was not declared in this scope; did you mean \u2018std::cout\u2019?\n   20 |\
    \     cout<<area;\n      |     ^~~~\n      |     std::cout\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:75,\n                 from\
    \ /tmp/tmpo164zk_m.cpp:2:\n/usr/include/c++/9/iostream:61:18: note: \u2018std::cout\u2019\
    \ declared here\n   61 |   extern ostream cout;  /// Linked to standard output\n\
    \      |                  ^~~~\n/tmp/tmpo164zk_m.cpp:22:21: error: \u2018endl\u2019\
    \ was not declared in this scope; did you mean \u2018std::endl\u2019?\n   22 |\
    \         cout<<\"\\n\"<<endl;\n      |                     ^~~~\n      |    \
    \                 std::endl\nIn file included from /usr/include/c++/9/istream:39,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpo164zk_m.cpp:2:\n/usr/include/c++/9/ostream:599:5: note: \u2018std::endl\u2019\
    \ declared here\n  599 |     endl(basic_ostream<_CharT, _Traits>& __os)\n    \
    \  |     ^~~~\n/tmp/tmpo164zk_m.cpp:24:27: error: \u2018endl\u2019 was not declared\
    \ in this scope; did you mean \u2018std::endl\u2019?\n   24 |         cout<<\"\
    -1\"<<\"\\n\"<<endl;\n      |                           ^~~~\n      |        \
    \                   std::endl\nIn file included from /usr/include/c++/9/istream:39,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /"
  stdout: ''
  timestamp: 1660140056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a < b);\n  assert(c > a);\n  assert(a > b);\n\
    \  assert(b > c);\n  float area_of_triangle = a + b + c;\n  if (area_of_triangle\
    \ > b) {\n    return area_of_triangle;\n  } else {\n    return -1;\n  }\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpl2n2ed7t: /tmp/tmpl2n2ed7t.cpp:16: float triangle_area(long int, long
    int, long int): Assertion `a > b'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tif (a + b <= c) return -1; // not a triangle\n\treturn\
    \ ((b * b) - (4 * a * c)) / (2 * a);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpbr3osxno: /tmp/tmpbr3osxno.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if (a * b > c) return -1;\n  float s = (a + b + c) /\
    \ 2;\n  return s * s;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp5wtv1sj7: /tmp/tmp5wtv1sj7.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(a < b);\n    assert(b < c);\n    assert(a <\
    \ c);\n\n    if (a + b >= c) {\n        return (a + b) * 0.5;\n    }\n    if (b\
    \ + c >= a) {\n        return (b + c) * 0.5;\n    }\n    if (a + c >= b) {\n \
    \       return (a + c) * 0.5;\n    }\n    return -1; // Triangle is not valid\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp53ho7ts4: /tmp/tmp53ho7ts4.cpp:31: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a <= 0 || b <= 0 || c <= 0)\n        return -1;\n\
    \    if (a + b <= c)\n        return 0;\n    if (a + c <= b)\n        return (b\
    \ - c) / 2;\n    if (b + c <= a)\n        return (c - a) / 2;\n    return (a +\
    \ b + c) / 2;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmplhtkdqcb: /tmp/tmplhtkdqcb.cpp:27: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140058
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert((a+b)>=c);\n    assert((a+c)>=b);\n    assert((b+c)>=a);\n\
    \    long d1 = std::max(a + b + c, a + b, b + c);\n    long d2 = std::max(a +\
    \ b + c, b + c, a + c);\n    long d3 = std::max(b + c, b + c, a + c);\n    d1\
    \ += d2;\n    d1 += d3;\n    d1 *= (float)0.5;\n    return d1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/bits/specfun.h:45,\n         \
    \        from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpfh6qhvuu.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:\
    \ In instantiation of \u2018constexpr const _Tp& std::max(const _Tp&, const _Tp&,\
    \ _Compare) [with _Tp = long int; _Compare = long int]\u2019:\n/tmp/tmpfh6qhvuu.cpp:17:47:\
    \   required from here\n/usr/include/c++/9/bits/stl_algobase.h:271:17: error:\
    \ \u2018__comp\u2019 cannot be used as a function\n  271 |       if (__comp(__a,\
    \ __b))\n      |           ~~~~~~^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // assert(a >= 0);\n  // assert(b >= 0);\n  // assert(c\
    \ >= 0);\n  float area;\n  if (a + b > c) {\n    area = (a * a + b * b) * (c /\
    \ 2);\n  } else if (a + c > b) {\n    area = (b * b + a * c) * (b / 2);\n  } else\
    \ if (b + c > a) {\n    area = (c * c + a * a) * (c / 2);\n  } else {\n    area\
    \ = -1;\n  }\n  return round(area);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpp3pspruo: /tmp/tmpp3pspruo.cpp:31: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140056
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // Code to check if three sides of a triangle are valid\n\
    \  if (a + b > c) {\n    return -1;\n  }\n  if (a + c > b) {\n    return -1;\n\
    \  }\n  if (b + c > a) {\n    return -1;\n  }\n  // Code to find the area of any\
    \ triangle formed by three given sides\n  return (float)(a * b * c / 2);\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpxihecxel: /tmp/tmpxihecxel.cpp:29: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140057
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tif (b < a || c < b) return -1;\n\tfloat s = (a + b +\
    \ c) / 2.0f;\n\tfloat area = sqrt(s * (s - a) * (s - b) * (s - c));\n\treturn\
    \ round(area, 2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps9k11fvy.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmps9k11fvy.cpp:17:22: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   17 |  return round(area, 2);\n\
    \      |                      ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmps9k11fvy.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140059
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\t// Write your code here.\n\tif (a>b+c)\n\t{\n\t\tfloat\
    \ m=(a+b)/2.0f;\n\t\tfloat n=(b+c)/2.0f;\n\t\treturn m*(n-m)*0.5f;\n\t}\n\tif\
    \ (b>c+a)\n\t{\n\t\tfloat m=(b+c)/2.0f;\n\t\tfloat n=(b+a)/2.0f;\n\t\treturn m*(n-m)*0.5f;\n\
    \t}\n\telse if (c>a+b)\n\t{\n\t\tfloat m=(b+a)/2.0f;\n\t\tfloat n=(c+b)/2.0f;\n\
    \t\treturn m*(n-m)*0.5f;\n\t}\n\telse\n\t\treturn -1f;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1wemuwok.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp1wemuwok.cpp:34:11: error: unable to find numeric\
    \ literal operator \u2018operator\"\"f\u2019\n   34 |   return -1f;\n      | \
    \          ^~\n/tmp/tmp1wemuwok.cpp:34:11: note: use \u2018-fext-numeric-literals\u2019\
    \ to enable more built-in suffixes\n"
  stdout: ''
  timestamp: 1660140059
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float ans = 0;\n    float s = 0;\n    long m = (a+b+c)/2;\n\
    \    if (a > b) {\n        s = c;\n        ans = (a*s)/m;\n    }\n    else if\
    \ (b > c) {\n        s = b;\n        ans = (b*s)/m;\n    }\n    else if (b > a)\
    \ {\n        s = a;\n        ans = (a*s)/m;\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp58vejnmv: /tmp/tmp58vejnmv.cpp:33: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = a/2.0 * c/2.0;\n    if (area < 0) {\n\
    \        return -1.0f;\n    }\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpewhgh_7d: /tmp/tmpewhgh_7d.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area_of_triangle;\n    if((a + b > c) && (a\
    \ + c > b) && (b + c > a)){\n        area_of_triangle = (a * b + c) / 2;\n   \
    \ }else{\n        area_of_triangle = -1;\n    }\n    return area_of_triangle;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp90n22cw6: /tmp/tmp90n22cw6.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    long s;\n    // This line checks that the three sides\
    \ are valid \n    assert(b > a);\n    assert(c > b);\n    // This line computes\
    \ the area of the triangle\n    s = (a+b+c)/2.0;\n    // This line checks that\
    \ the area of the triangle is greater than\n    // or equal to zero\n    assert(s\
    \ >= 0);\n    // This line computes the area of the triangle rounded to\n    //\
    \ two decimal places.\n    return std::round(s*100)/100.0;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp9pram608: /tmp/tmp9pram608.cpp:30: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    if (s > 0) {\n   \
    \     float area = sqrt(s * (s - a) * (s - b) * (s - c));\n        return area;\n\
    \    } else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmptmrmecv0: /tmp/tmptmrmecv0.cpp:24: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140061
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(a > b);\n    assert(b > c);\n    assert(c >\
    \ a + b && c > b + a && c > a + b && c > a + c);\n    return a * b * c / ((a +\
    \ b) * (b + c));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpr8ns_s3l: /tmp/tmpr8ns_s3l.cpp:14: float triangle_area(long int, long
    int, long int): Assertion `a > b'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a > 0 && b > 0 && c > 0);\n  float s = (a + b\
    \ + c) / 2;\n  if (s >= a + b && s >= b + c && s >= a + c) return s;\n  else return\
    \ -1.0f;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpd2g8jse9: /tmp/tmpd2g8jse9.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(a+b<=c);\n    assert(b+c<=a);\n    assert(a+c<=b);\n\
    \    return (a+b+c)/2;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpwwltol7k: /tmp/tmpwwltol7k.cpp:14: float triangle_area(long int, long
    int, long int): Assertion `a+b<=c'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  long p = a + b + c;\n  float area = static_cast<float>(p)\
    \ / 2;\n  if (area > 0)\n    return static_cast<float>(area);\n  else\n    return\
    \ -1; // -1\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpqkn5pk0u: /tmp/tmpqkn5pk0u.cpp:24: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a + b < c || b + c < a || c + a < b) {\n     \
    \   return -1;\n    }\n    float s = (a + b + c) / 2;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpb83s95_j: /tmp/tmpb83s95_j.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if((a + b > c) && (a + c > b) && (b + c > a)) {\n\
    \        // We are able to draw a triangle\n        return (float)(a * b * 0.5f);\n\
    \    }\n    // Not a triangle. Try other cases\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp5il4g6tp: /tmp/tmp5il4g6tp.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140061
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Write your code here\n    if (a+b > c && a+c >\
    \ b && b+c > a) {\n        return (a*a + b*b + c*c) / 2;\n    } else {\n     \
    \   return -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp3x5x384u: /tmp/tmp3x5x384u.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2.0;\n    if ((a + b) > c)\
    \ {\n        float t = ((b - c) / (a - b)); // t is a variable name for a float\
    \ expression\n        float u = ((a * (c - s)) - (b * (s + c))) / 2.0;\n     \
    \   float v = (u * (s - t)) + (s * t);\n        return (v * v) / 2.0;\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpu7t5ib90: /tmp/tmpu7t5ib90.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    float area_1 = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    float area_2 = sqrt(s*(s-b)*(s-c)*(s-a));\n    float area_3 = sqrt(s*(s-c)*(s-a)*(s-b));\n\
    \    if (area_1 > area_2 && area_1 > area_3) {\n        return area_1;\n    }\n\
    \    else if (area_2 > area_3) {\n        return area_2;\n    }\n    else {\n\
    \        return area_3;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpn8h1d6s8: /tmp/tmpn8h1d6s8.cpp:31: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(a > 0 && b > 0 && c > 0);\n    float s = (a\
    \ + b + c) / 2;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n   \
    \ return area > 0 ? round(area, 2) : -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpl8cqpnqc.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpl8cqpnqc.cpp:17:36: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   17 |     return area > 0 ?\
    \ round(area, 2) : -1;\n      |                                    ^\nIn file\
    \ included from /usr/include/features.h:461,\n                 from /usr/include/assert.h:35,\n\
    \                 from /tmp/tmpl8cqpnqc.cpp:1:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1:\
    \ note: declared here\n  298 | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n\
    \      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a > b + c) {\n        return -1;\n    }\n    if\
    \ (b > a + c) {\n        return -1;\n    }\n    if (c > a + b) {\n        return\
    \ -1;\n    }\n    return sqrt(a * a + b * b + c * c);\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmphv8xyzns: /tmp/tmphv8xyzns.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tlong s = a + b + c;\n\tif (s > 10) {\n\t\treturn -1;\n\
    \t}\n\tfloat area = a * b * c / (s * s);\n\treturn round (100 * area) / 100;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpzhdttc7x: /tmp/tmpzhdttc7x.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140061
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = (a * b) + c;\n    return area > 0 ? round(area\
    \ / 2.0) : -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpypqlyfng: /tmp/tmpypqlyfng.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tif (a + b > c && a + c > b && b + c > a) return (a +\
    \ b + c) / 2;\n\treturn -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpuzk4jy7d: /tmp/tmpuzk4jy7d.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if((a + b) > c || (a + c) > b || (b + c) > a) return\
    \ -1;\n    float a = (a*a+b*b+c*c)**0.5;\n    float b = (b*b+c*c)**0.5;\n    float\
    \ c = (b*b+a*a)**0.5;\n    float d = (b*b+c*c)**0.5;\n    return (a+b+c)/2*sqrt(a*a+b*b+c*c);\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprgahofb5.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmprgahofb5.cpp:15:11: error: declaration of \u2018\
    float a\u2019 shadows a parameter\n   15 |     float a = (a*a+b*b+c*c)**0.5;\n\
    \      |           ^\n/tmp/tmprgahofb5.cpp:15:30: error: invalid type argument\
    \ of unary \u2018*\u2019 (have \u2018double\u2019)\n   15 |     float a = (a*a+b*b+c*c)**0.5;\n\
    \      |                              ^~~\n/tmp/tmprgahofb5.cpp:16:11: error:\
    \ declaration of \u2018float b\u2019 shadows a parameter\n   16 |     float b\
    \ = (b*b+c*c)**0.5;\n      |           ^\n/tmp/tmprgahofb5.cpp:16:26: error: invalid\
    \ type argument of unary \u2018*\u2019 (have \u2018double\u2019)\n   16 |    \
    \ float b = (b*b+c*c)**0.5;\n      |                          ^~~\n/tmp/tmprgahofb5.cpp:17:11:\
    \ error: declaration of \u2018float c\u2019 shadows a parameter\n   17 |     float\
    \ c = (b*b+a*a)**0.5;\n      |           ^\n/tmp/tmprgahofb5.cpp:17:26: error:\
    \ invalid type argument of unary \u2018*\u2019 (have \u2018double\u2019)\n   17\
    \ |     float c = (b*b+a*a)**0.5;\n      |                          ^~~\n/tmp/tmprgahofb5.cpp:18:26:\
    \ error: invalid type argument of unary \u2018*\u2019 (have \u2018double\u2019\
    )\n   18 |     float d = (b*b+c*c)**0.5;\n      |                          ^~~\n"
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a + b > c) {\n        return -1;\n    }\n    if\
    \ (a + c > b) {\n        return -1;\n    }\n    if (b + c > a) {\n        return\
    \ -1;\n    }\n    float s = (a + b + c) / 2.0;\n    return (a + b) * (s - a) *\
    \ (s - b) * (s - c) / 6.0;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp_up8h47z: /tmp/tmp_up8h47z.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a > b && a > c) return 0;\n    if (b > c && b\
    \ > a) return 0;\n    if (c > a && c > b) return 0;\n    // Now we have checked\
    \ that all three are valid\n    long s = (a + b > c) ? b - a : c - a;\n    long\
    \ t = (a + c > b) ? c - b : b - c;\n    float area, r1, r2;\n    r1 = ((s + t)\
    \ * 0.5f);\n    r2 = (s * 0.5f);\n    area = (float)r1 * r2;\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp0yw7bhu2: /tmp/tmp0yw7bhu2.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2.0;\n    if (s > c) {\n \
    \       return -1;\n    } else {\n        return s * s;\n    }\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpgro4z5xk: /tmp/tmpgro4z5xk.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if(a+b > c && a+c > b && b+c > a) {\n        return\
    \ 0.5f * pow((a + b + c), 0.333333333f);\n    }\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2hi2cw03: /tmp/tmp2hi2cw03.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // Write your code here\n  \n  float area_triangle =\
    \ 0.0;\n\n  // Write your code here\n  if (b >= a && b <= c){\n    if (b > c &&\
    \ b >= a){\n      area_triangle = (b*b - a*c)/2;\n    }\n    else if (b > a &&\
    \ b >= c){\n      area_triangle = (b*b - a*c)/2;\n    }\n    else {\n      area_triangle\
    \ = (a*b - c*a)/2;\n    }\n  }\n  else if (a >= b && a <= c){\n    if (a > c &&\
    \ a >= b){\n      area_triangle = (b*b - a*c)/2;\n    }\n    else if (a > b &&\
    \ a >= c){\n      area_triangle = (a*b - c*a)/2;\n    }\n    else {\n      area_triangle\
    \ = (b*b - a*c)/2;\n    }\n  }\n  else if (c >= a && c <= b){\n    if (c > b &&\
    \ c >= a){\n      area_triangle = (b*b - a*c)/2;\n    }\n    else if (c > a &&\
    \ c >= b){\n      area_triangle = (a*b - c*a)/2;\n    }\n    else {\n      area_triangle\
    \ = (b*b - a*c)/2;\n    }\n  }\n  else {\n      area_triangle = (b*b - a*c)/2;\n\
    \  }\n  return area_triangle;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9828vj04: /tmp/tmp9828vj04.cpp:59: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area, l, b, w, h;\n    l = a + b;\n    b = a\
    \ + c;\n    w = b - c;\n    h = sqrt(w * w + l * l);\n    area = w * h;\n    return\
    \ floor(area / 2.0);\n}\nint main() {\n    auto candidate = triangle_area;\n \
    \   assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwaob8ees.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpwaob8ees.cpp:14:20: error: declaration of \u2018\
    float b\u2019 shadows a parameter\n   14 |     float area, l, b, w, h;\n     \
    \ |                    ^\n"
  stdout: ''
  timestamp: 1660140060
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a == 0) {\n        cout << \"Please enter a positive\
    \ integer\" <<endl;\n    }\n    if (b == 0 || c == 0){\n        cout << \"Please\
    \ enter a positive integer\" <<endl;\n    }\n    float area = a*b*c/2;\n    if\
    \ (area > 0){\n        return round(area, 2);\n    }\n    else{\n        cout\
    \ << \"Please enter a positive integer\" <<endl;\n    }\n}\nint main() {\n   \
    \ auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo_sjjefr.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpo_sjjefr.cpp:15:9: error: \u2018cout\u2019 was\
    \ not declared in this scope; did you mean \u2018std::cout\u2019?\n   15 |   \
    \      cout << \"Please enter a positive integer\" <<endl;\n      |         ^~~~\n\
    \      |         std::cout\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:75,\n\
    \                 from /tmp/tmpo_sjjefr.cpp:2:\n/usr/include/c++/9/iostream:61:18:\
    \ note: \u2018std::cout\u2019 declared here\n   61 |   extern ostream cout;  ///\
    \ Linked to standard output\n      |                  ^~~~\n/tmp/tmpo_sjjefr.cpp:15:53:\
    \ error: \u2018endl\u2019 was not declared in this scope; did you mean \u2018\
    std::endl\u2019?\n   15 |         cout << \"Please enter a positive integer\"\
    \ <<endl;\n      |                                                     ^~~~\n\
    \      |                                                     std::endl\nIn file\
    \ included from /usr/include/c++/9/istream:39,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpo_sjjefr.cpp:2:\n/usr/include/c++/9/ostream:599:5:\
    \ note: \u2018std::endl\u2019 declared here\n  599 |     endl(basic_ostream<_CharT,\
    \ _Traits>& __os)\n      |     ^~~~\n/tmp/tmpo_sjjefr.cpp:18:9: error: \u2018\
    cout\u2019 was not declared in this scope; did you mean \u2018std::cout\u2019\
    ?\n   18 |         cout << \"Please enter a positive integer\" <<endl;\n     \
    \ |         ^~~~\n      |         std::cout\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:75,\n\
    \                 from /tmp/tmpo_sjjefr.cpp:2:\n/usr/include/c++/9/iostream:61:18:\
    \ note: \u2018std::cout\u2019 declared here\n   61 |   extern ostream cout;  ///\
    \ Linked to standard output\n      |                  ^~~~\n/tmp/tmpo_sjjefr.cpp:18:53:\
    \ error: \u2018endl\u2019 was not declared in this scope; did you mean \u2018\
    std::endl\u2019?\n   18 |         cout << \"Please enter a positive inte"
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // write your code here\n  if (a + b > c)\n    return\
    \ (a + b - c) / 2;\n  if (b + c > a)\n    return (b + c - a) / 2;\n  if (a + c\
    \ > b)\n    return (a + c - b) / 2;\n  if (b + a > c)\n    return (b + a - c)\
    \ / 2;\n  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n \
    \   assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmppqevdel2: /tmp/tmppqevdel2.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Write your code here\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp4ok5oab0: /tmp/tmp4ok5oab0.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a+b > c) {\n        long t = b;\n        b = a;\n\
    \        a = t;\n    }\n    float s = (a + b + c) / 2;\n    return (float)sqrt(pow(s-a,\
    \ 2) + pow(s-b, 2) + pow(s-c, 2));\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpelp8c637: /tmp/tmpelp8c637.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a > b && a > c && b > c) {\n        float s =\
    \ (a + b + c) / 2.0f;\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpbrk4p47q: /tmp/tmpbrk4p47q.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140061
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert((b - a) >= (c-a));\n    return (((b - a) *\
    \ ((b - a) * (c - a)) / (2 * a)));\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmptmzqhz_4: /tmp/tmptmzqhz_4.cpp:14: float triangle_area(long int, long
    int, long int): Assertion `(b - a) >= (c-a)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if(a + b > c) {\n    float temp = a;\n    a = b;\n \
    \   b = temp;\n  }\n  if(a + c > b) {\n    float temp = a;\n    a = c;\n    c\
    \ = temp;\n  }\n  if(b + c > a) {\n    float temp = b;\n    b = c;\n    c = temp;\n\
    \  }\n  return sqrt(pow(a, 2.0) + pow(b, 2.0) + pow(c, 2.0));\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpzey_i6c3: /tmp/tmpzey_i6c3.cpp:33: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140061
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\t// Write your code here\n\tfloat area = (a*a + b*b -\
    \ c*c);\n\tif (area < 0) {\n\t\tarea = -1 * area;\n\t}\n\treturn area;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp63onovci: /tmp/tmp63onovci.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140061
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if(a==b && b==c){\n    return (a+b+c)/2.0;\n  }\n  else{\n\
    \    if (a<b && b<c) {\n      if (a==b){\n        return c;\n      }\n      else{\n\
    \        return c;\n      }\n    }\n    else{\n      if(a>b && b>c){\n       \
    \ return c;\n      }\n      else{\n        return c;\n      }\n    }\n  }\n  \n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpe1irh9v5: /tmp/tmpe1irh9v5.cpp:39: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    return ((b * b) - (4 * a * c));\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpdn9s20ht: /tmp/tmpdn9s20ht.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140060
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // Write your code here\n  if((a + b > c) && (b > c)\
    \ && (b > a)) {\n    return (a * b)/2;\n  }\n  return -1;\n}\nint main() {\n \
    \   auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp47g4qv5l: /tmp/tmp47g4qv5l.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140061
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tfloat area;\n\tlong area_sqr = (float)(a * a + b * b\
    \ + c * c); // area of square triangle\n\tif (area_sqr < 0)\n\t\treturn -1;\n\t\
    else if (area_sqr == 0) {\n\t\tarea = 0.0f;\n\t} else {\n\t\tarea = sqrt(area_sqr);\n\
    \t\tif (area >= (float)0.9999) {\n\t\t\tarea = round(area / 0.5) * 0.5f;\n\t\t\
    }\n\t}\n\treturn area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpq2oou5qk: /tmp/tmpq2oou5qk.cpp:30: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140061
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  long s = a + b + c;\n  float area = s * (s - a) * (s\
    \ - b) * (s - c) / 2.0;\n  return area > 0 ? area : -1; // Return negative if\
    \ area is invalid\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpczv3k3qr: /tmp/tmpczv3k3qr.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140062
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tfloat area, x, y, z;\n\tx = ((float)(a) + b + c) / (2.0\
    \ * (float)(a));\n\ty = ((float)(a) + c + b) / (2.0 * (float)(a));\n\tz = ((float)(b)\
    \ + c + a) / (2.0 * (float)(b));\n\tarea = pow(x, 2.0) + pow(y, 2.0) + pow(z,\
    \ 2.0);\n\tif(area >= 1.0 && area <= 3.0f) {\n\t\treturn area;\n\t} else {\n\t\
    \treturn -1.0f;\n\t}\n}\nint main() {\n    auto candidate = triangle_area;\n \
    \   assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpl01m33v_: /tmp/tmpl01m33v_.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140062
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    long abc = a + b + c;\n    float area = (a + b) *\
    \ (c + b) * (c + a) * 1.0; \n    if (a > b) \n        area += a * (b - c) * (b\
    \ - a) * 1.0;\n    if (c > b) \n        area += c * (a - b) * (a - c) * 1.0;\n\
    \    if (abc > 0)\n        area = sqrt(area);\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_zqfqdzf: /tmp/tmp_zqfqdzf.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140062
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a < b && b < c);\n  return std::abs(a + b + c\
    \ - std::min(a + b, c));\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp5m5ork6j: /tmp/tmp5m5ork6j.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140062
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tlong d = (b + c) - (a + b); // Calculate the area of\
    \ triangle\n\tif (d < 0)\n\t\treturn (float(-1));\n\telse if (d == 0)\n\t\treturn\
    \ 0.0;\n\telse\n\t\treturn (a * b) / d;\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9r_97d7v: /tmp/tmp9r_97d7v.cpp:25: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140062
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = 0.5 * (a + b + c);\n    return s >= 0.0\
    \ ? s / 3.0 : -1.0f;\n}\nint main() {\n    auto candidate = triangle_area;\n \
    \   assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpm49klgyj: /tmp/tmpm49klgyj.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140062
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a + b >= c)\n        return -1; // not a valid\
    \ triangle\n    float s = a + b + c;\n    return s / 2.0f;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2z4cdann: /tmp/tmp2z4cdann.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140063
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\t// Write your code here\n\tfloat area;\n\tif(a+b>c)\n\
    \t\tarea=((float)(a+b+c))/2;\n\telse\n\t\tarea=((float)(a+b+c))/2;\n\treturn area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpt_hvl4ke: /tmp/tmpt_hvl4ke.cpp:25: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140063
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tif (a + b > c && a + c > b && b + c > a) {\n\t\treturn\
    \ a * b * c / (a + b + c);\n\t} else {\n\t\treturn -1;\n\t}\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpfzkw0aif: /tmp/tmpfzkw0aif.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140063
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tfloat s = a + b + c;\n\tif (s <= 0)\n\t\treturn -1;\
    \ // not a valid triangle\n\telse if (a == b) \n\t\treturn a * c / 2; // only\
    \ one side\n\telse if (a == c || b == c) \n\t\treturn 0; // two sides\n\telse\n\
    \t\treturn (b - a) * (c - a) / 2 + a * b / 2; // three sides\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpy1m4_h4h: /tmp/tmpy1m4_h4h.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140063
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0;\n    if ((a + b > c) && (a + c >\
    \ b) && (b + c > a)) {\n        area = 0.5 * sqrt(pow((a + b), 2) + pow((a + c),\
    \ 2) + pow((b + c), 2));\n        if (area >= 10.0) {\n            return round(area,\
    \ 2);\n        } else {\n            return -1;\n        }\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptxqpks96.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmptxqpks96.cpp:18:33: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   18 |             return round(area,\
    \ 2);\n      |                                 ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmptxqpks96.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140063
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a+b+c>2*b+a&&b+c>2*b&&c>2*a)\
    \ return (sqrt(a*a+b*b+c*c));\n    else return -1.0;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_0hcq3nb: /tmp/tmp_0hcq3nb.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140065
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // write your code here\n    if(a+b+c >= b+c+a){\n\
    \        return c/2;\n    }\n    else{\n        return -1;\n    }\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpwl_mtsv0: /tmp/tmpwl_mtsv0.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140065
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Your code here\n    if(a+b>c){\n        return\
    \ -1;\n    }\n    else if(a+c>b){\n        return -1;\n    }\n    else if(a+b+c>a){\n\
    \        return -1;\n    }\n    else{\n        return a*b*c/(4.0f);\n    }\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmprrlmergl: /tmp/tmprrlmergl.cpp:30: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140064
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    long s= a+b+c;\n    float a1=(b+c)/2.0;\n    float\
    \ b1=(b-c)/2.0;\n    float c1=(c+a)/2.0;\n    float a2=(b-c)/2.0;\n    float b2=(b-a)/2.0;\n\
    \    float c2=(c-a)/2.0;\n    float a3=(c-b)/2.0;\n    float b3=(a-b)/2.0;\n \
    \   float c3=(a-c)/2.0;\n    float btotal=b1+b2+b3;\n    float ctotal=c1+c2+c3;\n\
    \    float asoft=a1*a2+a3*b2;\n    float bsoft=b1*b2+b3*c2;\n    float csoft=c1*c2+c3*a2;\n\
    \    float a=sqrt(asoft);\n    float b=sqrt(bsoft);\n    float c=sqrt(csoft);\n\
    \    if(s>0){\n        return (a+b+c)/2.0; \n    }\n    else {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7cedtdx9.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp7cedtdx9.cpp:29:11: error: declaration of \u2018\
    float a\u2019 shadows a parameter\n   29 |     float a=sqrt(asoft);\n      | \
    \          ^\n/tmp/tmp7cedtdx9.cpp:30:11: error: declaration of \u2018float b\u2019\
    \ shadows a parameter\n   30 |     float b=sqrt(bsoft);\n      |           ^\n\
    /tmp/tmp7cedtdx9.cpp:31:11: error: declaration of \u2018float c\u2019 shadows\
    \ a parameter\n   31 |     float c=sqrt(csoft);\n      |           ^\n"
  stdout: ''
  timestamp: 1660140063
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s;\n    if (a + b > c) {\n        s = (a + b\
    \ - c) * 0.5;\n    } else {\n        s = 0.5f * (a + b + c);\n    }\n    if (s\
    \ > a * b * 0.99999f) {\n        return -1;\n    } else {\n        return s;\n\
    \    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp39yi3xlr: /tmp/tmp39yi3xlr.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140064
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    return (sqrt(s * (s\
    \ - a) * (s - b) * (s - c)) > 0) ? s / 2 : -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpxv1t0zgw: /tmp/tmpxv1t0zgw.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140065
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0;\n    assert(a != -1 && b != -1 &&\
    \ c != -1);\n    if (a + b > c || a + c > b || b + c > a) {\n        return -1;\n\
    \    }\n    area = 0.5f * sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2));\n    return\
    \ round(area * 100) / 100;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpz6l8bljc: /tmp/tmpz6l8bljc.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140064
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float ans = a + b + c;\n    ans = ans / (2 * 3.141596);\n\
    \    return ans;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpyfe81jce: /tmp/tmpyfe81jce.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140065
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area_side = std::sqrt((c * c) - ((a + b) * (b\
    \ + c)));\n    area_side = area_side * 100.0 / c;\n    return round(area_side);\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpxej95xar: /tmp/tmpxej95xar.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140064
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert( a > 0 && b > 0 && c > 0);\n    float area\
    \ = 0.0;\n    long area_sum, sides_sum;\n    sides_sum = a+b+c;\n    area_sum\
    \ = sides_sum * sides_sum;\n    if (area_sum > c) {\n        area = area_sum /\
    \ c;\n    }\n    return round(area*100.0)/100.0;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpiw6y6btp: /tmp/tmpiw6y6btp.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140064
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a < b + c || b < a + c || c < a + b) {\n     \
    \   return -1;\n    }\n    return (b + c) * (a + b) * (a + c) / (2.0 * c);\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp23j7uday: /tmp/tmp23j7uday.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140064
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(b > a && b > c && c > a);\n    return ((b *\
    \ c) - (b * a + c * b)) / (2.0 * a);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpqqu0_to3: /tmp/tmpqqu0_to3.cpp:14: float triangle_area(long int, long
    int, long int): Assertion `b > a && b > c && c > a'' failed.

    '
  stdout: ''
  timestamp: 1660140064
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(a > 0 && b > 0 && c > 0);\n    if((a + b) <\
    \ c){\n        // If the sum of any two sides is less than the third side, then\
    \ \n        // the triangle is not valid. \n        // So return -1\n        return\
    \ -1;\n    }\n    float area = (a * b) / 2.0;\n    // Round the area to 2 decimal\
    \ points if the area is a valid triangle\n    // This means that the sum of any\
    \ two sides must be greater than the third side.\n    // If either of the sums\
    \ is equal, then the area is a valid triangle\n    if((a + b) == c){\n       \
    \ float precision = (float)(a + b) / a;\n        return round(precision * 100.0);\n\
    \    }\n    // Otherwise the triangle is invalid\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmppjggencv: /tmp/tmppjggencv.cpp:34: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140064
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0;\n    if (a + b > c)\n        area\
    \ = (a * b) - (c * c);\n    if (a + c > b)\n        area = (a * c) - (b * b);\n\
    \    if (b + c > a)\n        area = (b * c) - (a * a);\n    return round(area,\
    \ 2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp61q104g0.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp61q104g0.cpp:21:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   21 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp61q104g0.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140063
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = sqrt( (b*b) - ((a+c)*(a+c)) );\n    if(area>0)\
    \ return round(area);\n    else return -1.0f;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpi327riit: /tmp/tmpi327riit.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140066
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (b < a || c < b) return -1;\n    long x = 0, y\
    \ = 0, area = a;\n    if (a + b > c) {\n        x = b;\n        y = c;\n     \
    \   area = b * c;\n    }\n    else {\n        x = a;\n        y = b;\n       \
    \ area = a * b;\n    }\n    while (x <= y) {\n        if ((x * x) + (y * y) >=\
    \ area) return -1;\n        x++;\n        y++;\n        area += x * y;\n    }\n\
    \    area /= 2;\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpav0w9pkv: /tmp/tmpav0w9pkv.cpp:37: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140064
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a+b+c)/2.0;\n    long sum = a + b + c;\n\
    \    if (sum < 0) return -1.0;\n    if (a > b && b > c) return ((float)a*(float)b)/sum;\n\
    \    if (b > c && c > a) return ((float)b*(float)a)/sum;\n    if (c > a && a >\
    \ b) return ((float)c*(float)a)/sum;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpmsutlvxm: /tmp/tmpmsutlvxm.cpp:24: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140065
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a==b && b==c)\n  \
    \      return 0;\n    else if(a>b && a>c)\n        return (a+b+c)/2;\n    else\
    \ if(b>a && b>c)\n        return (b+a+c)/2;\n    else if(a>b && b>c)\n       \
    \ return (b+c)/2;\n    else if(a>b && c>a)\n        return (a+c)/2;\n    else\
    \ if(b>a && c>a)\n        return (a+c)/2;\n    else if(a>b && b>c && c>a)\n  \
    \      return ((b+c)/2);\n    else\n        return -1; // Not a triangle\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpq4yixa2h: /tmp/tmpq4yixa2h.cpp:34: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140064
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Write your code here\n    if(a+b > c && b+c > a\
    \ && a+c > b){\n        return (a+b+c)/2;\n    }\n    else {\n        return -1;\n\
    \    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp71u2eomf: /tmp/tmp71u2eomf.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140065
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // TODO: Write your code here\n    return 0.0;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp802chbpo: /tmp/tmp802chbpo.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140064
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area;\n    long x,y,z;\n    x = b;\n    y =\
    \ c;\n    z = a;\n    if( z > y && x > y)\n    {\n        area = 0.5*(a*x + b*y\
    \ + c*z);\n    }\n    else\n    {\n        area = 0.5*(a*x + b*y + c*z);\n   \
    \ }\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9_7hnpc9: /tmp/tmp9_7hnpc9.cpp:31: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140065
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a>0 && b>0 && c>0);\n  float s=a+b+c; // sum\
    \ of the 3 sides\n  float h = b/2.0; // height of the triangle\n  float t = (a+b+c)/2.0;\
    \ // base of the triangle\n  float area = sqrt(pow(s,2)-(pow(h, 2)+pow(t,2)));\
    \ // the area of the triangle\n  return ((int)(area*100))/100;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpnox511mv: /tmp/tmpnox511mv.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140066
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a <= 0 || b <= 0 || c <= 0)\n        return -1\n\
    \    return ((b * b) - (a * c)) / (2.0 * a);\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_bd504w2.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp_bd504w2.cpp:15:18: error: expected \u2018;\u2019\
    \ before \u2018return\u2019\n   15 |         return -1\n      |              \
    \    ^\n      |                  ;\n   16 |     return ((b * b) - (a * c)) / (2.0\
    \ * a);\n      |     ~~~~~~        \n"
  stdout: ''
  timestamp: 1660140064
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(a >= 0 && b >= 0 && c >= 0);\n    if (a + b\
    \ + c < 9) {\n        return -1;\n    }\n    float s = (a + b + c) / 2;\n    float\
    \ area = sqrt(s * (s - a) * (s - b) * (s - c));\n    return round(area, 2);\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpimf9j1ka.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpimf9j1ka.cpp:20:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   20 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpimf9j1ka.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140064
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Write your code here\n    if (a == b && b == c)\
    \ {\n        return 0;\n    }\n    if (a > b || b > c) {\n        return -1;\n\
    \    }\n    if (a < b && b < c) {\n        return 0;\n    }\n    float s = (a\
    \ + b + c) / 2;\n    float d = (a + b) * (a + c) - (b + c) * (a + b);\n    float\
    \ e = sqrt(s * (s - d) / (s * s));\n    return e;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpzk8zud2u: /tmp/tmpzk8zud2u.cpp:31: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140065
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    return a < b + c ? -1*(b + c-a)*(b + c-a)/(2*a*c)\
    \ :\n    a < c + b ? -1*(b + c-a)*(c+a-b)/(2*a*b) :\n    b < c + a ? -1*(b + c-a)*(b\
    \ + c-a)/(2*b*c) :\n    c < a + b ? -1*(b + c-a)*(a+b-b)/(2*b*a) :\n    -1*(b\
    \ + c-a)*(b + c-a)/(2*c*b);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpui02y39p: /tmp/tmpui02y39p.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140065
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a+b > c) return -1; // no triangle\n    if (a+c\
    \ > b+c) return -1; // no triangle\n    float ans = 0.5f * sqrt(a * a + b * b\
    \ + c * c);\n    return ans;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp5whalbu8: /tmp/tmp5whalbu8.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140066
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    return sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2)) > \
    \ pow(b, 2) ? sum(a, b, c) : -1 ;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp5o62wgjq.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp5o62wgjq.cpp:14:67: error: \u2018sum\u2019 was\
    \ not declared in this scope\n   14 |     return sqrt(pow(a, 2) + pow(b, 2) +\
    \ pow(c, 2)) >  pow(b, 2) ? sum(a, b, c) : -1 ;\n      |                     \
    \                                              ^~~\n"
  stdout: ''
  timestamp: 1660140064
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if ((a + b < c) || (b < a)) {\n        return -1;\n\
    \    }\n    if ((a + c < b) || (c < a)) {\n        return -1;\n    }\n    return\
    \ ((float) (a * b * c)) / ((float) (2.0) * ((float) (a * b) + (float) (b * c)\
    \ + (float) (a * c)));\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp5jv5h70j: /tmp/tmp5jv5h70j.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140066
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float a = fabs(a), b = fabs(b), c = fabs(c);\n   \
    \ float s = (a + b + c) / 2;\n    float area;\n    if (s > 0) {\n        area\
    \ = (s - a) * (s - b) * (s - c);\n    } else {\n        area = -1;\n    }\n  \
    \  return (area > 0 ? round(area) : -1);\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpa0n5cv_h.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpa0n5cv_h.cpp:14:11: error: declaration of \u2018\
    float a\u2019 shadows a parameter\n   14 |     float a = fabs(a), b = fabs(b),\
    \ c = fabs(c);\n      |           ^\n/tmp/tmpa0n5cv_h.cpp:14:24: error: declaration\
    \ of \u2018float b\u2019 shadows a parameter\n   14 |     float a = fabs(a), b\
    \ = fabs(b), c = fabs(c);\n      |                        ^\n/tmp/tmpa0n5cv_h.cpp:14:37:\
    \ error: declaration of \u2018float c\u2019 shadows a parameter\n   14 |     float\
    \ a = fabs(a), b = fabs(b), c = fabs(c);\n      |                            \
    \         ^\n"
  stdout: ''
  timestamp: 1660140064
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (b < a || c < b)\n        return -1;\n    return\
    \ ((a * b) > (c * b)? a * b : (c * b));\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp496ra89h: /tmp/tmp496ra89h.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140066
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if(b <= c) {\n        long ab = b-a;\n        long\
    \ bc = c-b;\n        long abc = ab*bc;\n        if( abc > 0 )\n            return\
    \ abc / 2.0;\n        else\n            return -1;\n    }\n    else\n        return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpxpnzo9xk: /tmp/tmpxpnzo9xk.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140066
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(a >= 0);\n    assert(b >= 0);\n    assert(c\
    \ >= 0);\n    if (a + b > c) {\n        return -1;\n    }\n    float s = (a +\
    \ b + c) / 2.0;\n    float area = sqrt(s * (s - a) * (s - b) * (s - c));\n   \
    \ return std::round(area * 100) / 100;\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpmy131vd3: /tmp/tmpmy131vd3.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140067
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    if (a >= b)\n    \
    \    return s / a;\n    if (b >= c)\n        return s / b;\n    return s / c;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpsu9fvh35: /tmp/tmpsu9fvh35.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140065
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Write your code here\n    if (a >= b && a >= c)\
    \ return a;\n    if (b >= c || a >= b) return -1;\n    if (c >= a || c >= b) return\
    \ -1;\n    return (a+b+c) / 2.0;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpt8tsatvg: /tmp/tmpt8tsatvg.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140065
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a + b > c) {\n        return -1;\n    }\n    if\
    \ (a + c > b) {\n        return -1;\n    }\n    if (b + c > a) {\n        return\
    \ -1;\n    }\n    float ans = 0.0;\n    ans += ((b * b) + (c * c) - (a * a)) /\
    \ 2.0;\n    ans = round(ans);\n    if (ans != ans) {\n        ans = -1;\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp9z124tik: /tmp/tmp9z124tik.cpp:33: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140066
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if(b < a)\n        return -1;\n    if(b == a || c\
    \ == a)\n        return 0;\n    if(b == c)\n        return a * 0.5f;\n    if(a\
    \ > c && c > b)\n        return triangle_area(b, c, a);\n    if (b > c && c >\
    \ a)\n        return triangle_area(a, b, c);\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpfyc8d3lf: /tmp/tmpfyc8d3lf.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140067
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a > 0);\n  assert(b > 0);\n  assert(c > 0);\n\
    \  float ans = 0;\n  if (a + b > c)\n    ans = (b + c) / 2 * a;\n  else if (a\
    \ + c > b)\n    ans = (a + b) / 2 * c;\n  else\n    ans = a + b + c;\n  return\
    \ ans;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp1m0opbmc: /tmp/tmp1m0opbmc.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140065
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // If sum of any two sides is greater than the third\
    \ side\n    // then return -1\n    if (a + b > c) {\n        return -1;\n    }\n\
    \    \n    // Else compute the area using the formula area =\n    // sqrt( ((a\
    \ + b) ^2) - ((a + c) ^2) )\n    float s = 0.0;\n    s += ((a + b) * (a + b));\n\
    \    s += ((a + c) * (a + c));\n    s += ((b + c) * (b + c));\n    float area_rounded\
    \ = round(s);\n    \n    // Return area\n    return area_rounded;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpsuatl_2o: /tmp/tmpsuatl_2o.cpp:33: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140067
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // return -1 in case of any problem\n    if(b<a ||\
    \ c<a || b<c) return -1; \n    // find the sum of all sides \n    long s=a+b+c;\
    \ \n    // if two sides are less than the third side, they form a valid triangle\n\
    \    if(s<(long)(a+b)) return (float(s)/((a+b)*(s+c)*(s+b)))*0.5; \n    // otherwise\
    \ there are two triangles\n    // one with the two sides equal and the other one\
    \ with a difference of one side.\n    // we calculate the area for the one with\
    \ two sides equal\n    else if(a==b){\n        // calculate the area for the one\
    \ with two sides equal if the \n        // difference is greater than the third\
    \ side.\n        if(abs(a-c)>s) return (float(s)/(abs(a+b)))*0.5; \n        //\
    \ else the area for one with two sides equal is zero \n        else return 0.0;\
    \ \n    }\n    // if three sides are less than the sum of the two sides, there\
    \ are two triangles\n    else if(s<(a+b+c)) return 0.0; \n    // else there are\
    \ two triangles one with the three sides equal and the \n    // other one with\
    \ a difference of one side.\n    else return (float(s)/((a+b+c)*(s+a)*(s+c)*(s+b)))*0.5;\
    \ \n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpbwvnng0f: /tmp/tmpbwvnng0f.cpp:38: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140067
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area_tri = a + b + c ;\n    return (area_tri\
    \ > a) ? (area_tri > b) ? (area_tri > c) ? area_tri : -1 : 0 ;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplccvs864.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmplccvs864.cpp:15:80: error: expected \u2018:\u2019\
    \ before \u2018;\u2019 token\n   15 |     return (area_tri > a) ? (area_tri >\
    \ b) ? (area_tri > c) ? area_tri : -1 : 0 ;\n      |                         \
    \                                                       ^~\n      |          \
    \                                                                      :\n/tmp/tmplccvs864.cpp:15:81:\
    \ error: expected primary-expression before \u2018;\u2019 token\n   15 |     return\
    \ (area_tri > a) ? (area_tri > b) ? (area_tri > c) ? area_tri : -1 : 0 ;\n   \
    \   |                                                                        \
    \         ^\n"
  stdout: ''
  timestamp: 1660140065
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a + b > c || a + c > b || b + c > a)\n       \
    \ return -1; \n    float s = (a + b + c) / 2.0; // area of a triangle\n    return\
    \ s * (s - a) * (s - b) * (s - c);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp4zaqo37b: /tmp/tmp4zaqo37b.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140067
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // Write your code here\n  if(a>b+c){\n    return -1;\n\
    \  }\n  if(c>b+a){\n    return -1;\n  }\n  if(a>c+b){\n    return -1;\n  }\n \
    \ return std::sqrt( (float)(a*a) + (float)(b*b) + (float)(c*c) );\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_3_z23zk: /tmp/tmp_3_z23zk.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140067
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a >= b && a >= c) {\n        return a * 0.5f;\n\
    \    }\n    if (b >= c && b >= a) {\n        return b * 0.5f;\n    }\n    if (c\
    \ >= a && c >= b) {\n        return c * 0.5f;\n    }\n    // If none of the sides\
    \ are valid triangles, return -1\n    return -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpig9lgy6p: /tmp/tmpig9lgy6p.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140068
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  float area = (a * b) / (c * c);\n  if (area < 0) return\
    \ -1;\n  else if (area > 1000) return -1;\n  else return round(area * 10000) /\
    \ 10000.0;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp9lo5vowt: /tmp/tmp9lo5vowt.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140068
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(b > a && c > b); // Make sure that a, b and\
    \ c are positive\n    assert(c > a + b); // Make sure that a, b and c form a valid\
    \ triangle\n    return (float) (2.0 * a * b) / c;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpz087g0w1: /tmp/tmpz087g0w1.cpp:15: float triangle_area(long int, long
    int, long int): Assertion `c > a + b'' failed.

    '
  stdout: ''
  timestamp: 1660140068
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if (a + b > c) {\n    return -1;\n  }\n  return (b -\
    \ c) * 0.5f;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvd_ziy05: /tmp/tmpvd_ziy05.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140068
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // Write your code here\n  if((a + b > c) && (a + c\
    \ > b) && (b + c > a)) {\n      return (a * b * c);\n  }\n  else if((a + b > c)\
    \ && (a + c > b) && (b + c > a)) {\n      return ((b * c) - (a * b));\n  }\n \
    \ else if((a + b > c) && (a + c > b) && (b + c > a)) {\n      return ((c * a)\
    \ - (b * c));\n  }\n  else if((a + b > c) && (a + c > b) && (b + c > a)) {\n \
    \     return ((c * b) - (a * c));\n  }\n  else if((a + b > c) && (a + c > b) &&\
    \ (b + c > a)) {\n      return ((a * c) - (b * a));\n  }\n  else if((a + b > c)\
    \ && (a + c > b) && (b + c > a)) {\n      return ((b * a) - (a * b));\n  }\n \
    \ else {\n      return -1;\n  }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpoawi5yvu: /tmp/tmpoawi5yvu.cpp:39: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140068
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a + b > c) {\n        return -1;\n    }\n    float\
    \ s = (a * b) / (float(a) + float(b));\n    return roundf(s * 100) / 100;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2d4lxaph: /tmp/tmp2d4lxaph.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140069
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert ((a + b > c) && (b > c));\n  float a_b = a -\
    \ b;\n  float b_c = b - c;\n  float c_ab = c - a;\n  float s = (a_b * b_c) / c_ab;\n\
    \  if (s <= 0) return 0;\n  else return roundf(s * 100) / 100;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp81tcersq: /tmp/tmp81tcersq.cpp:14: float triangle_area(long int, long
    int, long int): Assertion `(a + b > c) && (b > c)'' failed.

    '
  stdout: ''
  timestamp: 1660140069
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = (a+b+c) / 2;\n    int sum = a + b + c;\n\
    \    int sum_square = (int)(a*a + b*b + c*c);\n    if(sum_square > sum) {\n  \
    \      area = -1.0;\n    }\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpn04wpq93: /tmp/tmpn04wpq93.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140068
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(a < b);\n    assert(a < c);\n    assert(b <\
    \ c);\n    // To find the area of a triangle\n    // find the hypotenuse (the\
    \ largest side)\n    long l = (a + b + c); \n    long s = sqrt(pow(a, 2) + pow(b,\
    \ 2) + pow(c, 2)); \n    // now calculate area based on the formula\n    return\
    \ (float(l/s)) * 100; \n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp7idj3s15: /tmp/tmp7idj3s15.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140069
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tassert (b > a);\n\tassert (c > b);\n\tif (a + b > c)\
    \ return -1.0;\n\tlong s = a + b + c;\n\tif (s <= 0) return -1.0;\n\tfloat area\
    \ = 0.5 * sqrt(s * (s - a) * (s - b) * (s - c));\n\treturn roundf(area, 2);\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprnlwwfbv.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmprnlwwfbv.cpp:20:23: error: too many arguments\
    \ to function \u2018float roundf(float)\u2019\n   20 |  return roundf(area, 2);\n\
    \      |                       ^\nIn file included from /usr/include/c++/9/cmath:45,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmprnlwwfbv.cpp:2:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1:\
    \ note: declared here\n  298 | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n\
    \      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140067
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a + b > c && a + c > b && b + c > a) return a\
    \ * b * c;\n    else return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp78d5tj38: /tmp/tmp78d5tj38.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140069
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2;\n    return std::sqrt((s\
    \ * (s - a) * (s - b) * (s - c))) / (2.0f);\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpmfhpy1wt: /tmp/tmpmfhpy1wt.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140069
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area;\n    float suma = (a + b + c)/2;\n   \
    \ if (suma > c) {\n        area = c/suma;\n    } else {\n        if (a < b){\n\
    \            area = (a+b)/2;\n        } else if (b < c){\n            area = (b+c)/2;\n\
    \        } else {\n            area = (a+b+c)/3;\n        }\n    }\n    cout.precision(2);\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl_prui3h.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpl_prui3h.cpp:27:5: error: \u2018cout\u2019 was\
    \ not declared in this scope; did you mean \u2018std::cout\u2019?\n   27 |   \
    \  cout.precision(2);\n      |     ^~~~\n      |     std::cout\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:75,\n               \
    \  from /tmp/tmpl_prui3h.cpp:2:\n/usr/include/c++/9/iostream:61:18: note: \u2018\
    std::cout\u2019 declared here\n   61 |   extern ostream cout;  /// Linked to standard\
    \ output\n      |                  ^~~~\n"
  stdout: ''
  timestamp: 1660140067
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    return (((a*a + b*b) > c*c) ? -1. : ((a + b + c) /\
    \ 2.));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpon6qoc8_: /tmp/tmpon6qoc8_.cpp:19: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140069
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(c >= a);\n    assert(b >= a);\n    assert(c\
    \ >= b);\n    float s = (a + b + c) * 0.5;\n    return (s > 0) ? (s * 0.5) : (-1\
    \ * s);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpt3b58q0u: /tmp/tmpt3b58q0u.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140068
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    int area_abc = a + b + c;\n    if (area_abc > 0)\n\
    \        area_abc = (area_abc / 2) * 2;\n    else \n        area_abc = (area_abc\
    \ / 2) * -2; // area = square-root of area_abc\n    return area_abc;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp49ul852e: /tmp/tmp49ul852e.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140069
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    \n    if (a+b>c) {\n        return -1;\n    }\n  \
    \  float s = (a + b + c) / 2;\n    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n \
    \   if (area > 0) return round(area,2);\n    return -1;\n}\nint main() {\n   \
    \ auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp50yzzh70.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp50yzzh70.cpp:20:38: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   20 |     if (area > 0) return\
    \ round(area,2);\n      |                                      ^\nIn file included\
    \ from /usr/include/features.h:461,\n                 from /usr/include/assert.h:35,\n\
    \                 from /tmp/tmp50yzzh70.cpp:1:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1:\
    \ note: declared here\n  298 | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n\
    \      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140068
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a >= b) {\n        if (b >= c) {\n           \
    \ return std::abs((a * b) + b + c) / 2.0;\n        } else {\n            return\
    \ -1;\n        }\n    } else {\n        if (c >= b) {\n            return std::abs((a\
    \ * b) + c + b) / 2.0;\n        } else {\n            return -1;\n        }\n\
    \    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpcxi202xl: /tmp/tmpcxi202xl.cpp:30: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140069
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if (a == 0 || b == 0 || c == 0)\n    return -1;\n  else\
    \ if ((a + b) > c) {\n    return -1;\n  }\n  else\n    return (a + b + c) / 2;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpztcembix: /tmp/tmpztcembix.cpp:24: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140069
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if((a + b >= c) || (b + c >= a) || (a + c >= b)) \n\
    \    return -1.0f;\n  float s = (a + b) * (b + c) * (c + a) / 2;\n  return s;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpb_c2u1w3: /tmp/tmpb_c2u1w3.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140068
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0f;\n    // write your code here\n\
    \    if (a == 0 && b == 0 && c == 0) return 0.0f;\n    if (a == 0) return -1;\
    \ // no area of triangle \n    if (b == 0) return -1; // no area of triangle\n\
    \    if (c == 0) return -1; // no area of triangle\n    if (a + b > c) {\n   \
    \     float s = b * b - a * c;\n        area = std::sqrt((s * (s - a)));\n   \
    \     return round(area, 2);\n    } else {\n        float s = c * c - a * b; \n\
    \        area = std::sqrt((s * (s - a)));\n        return round(area, 2);\n  \
    \  }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp496ngw0y.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp496ngw0y.cpp:23:29: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   23 |         return round(area,\
    \ 2);\n      |                             ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp496ngw0y.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n\
    /tmp/tmp496ngw0y.cpp:27:29: error: too many arguments to function \u2018double\
    \ round(double)\u2019\n   27 |         return round(area, 2);\n      |       \
    \                      ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp496ngw0y.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140068
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a > 0 && b > 0 && c > 0);\n  float s = (a + b\
    \ + c) / 2;\n  float area = sqrt(pow(s, 2) - (pow(a, 2) + pow(b, 2) + pow(c, 2)));\n\
    \  return round(area, 2);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp24evambl.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp24evambl.cpp:17:23: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   17 |   return round(area, 2);\n\
    \      |                       ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp24evambl.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140068
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert((a > 0) & (a < 3));\n    assert((b > 0) & (b\
    \ < 3));\n    assert((c > 0) & (c < 3));\n    long s = (a + b + c); // Sum all\
    \ sides\n    long d; // Sum of diagonals\n    long t;\n    // If the sum of the\
    \ three sides is greater than the third side\n    if (s > 3) {\n        d = (a\
    \ + b) - s; // Sum of the diagonals\n        t = (a * b) - (a + b) + c; // Sum\
    \ of common sides\n        if (d == t && s < ((a + b) * (a + c) + (b + c) * (a\
    \ + b) + (a + c) * (b + c))) {\n            return ((float)s * 0.5);\n       \
    \ }\n    }\n    return -1.0f;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp0hbkmfnd: /tmp/tmp0hbkmfnd.cpp:14: float triangle_area(long int, long
    int, long int): Assertion `(a > 0) & (a < 3)'' failed.

    '
  stdout: ''
  timestamp: 1660140068
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  float side1 = (float)sqrt((float)(a*a + b*b));\n  float\
    \ side2 = (float)sqrt((float)(a*a + c*c));\n  float side3 = (float)sqrt((float)(b*b\
    \ + c*c));\n  float total = side1 + side2 + side3;\n  if (total > 0)\n    return\
    \ round(total);\n  else\n    return -1;\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9rd6m9n4: /tmp/tmp9rd6m9n4.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140069
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Write your code here.\n    // double area;\n  \
    \  // if (a <= 0 || b <= 0 || c <= 0) {\n    //     area = -1;\n    // } else\
    \ {\n    //     area = a * b * c;\n    // }\n    double area = (a * b * c) / 2;\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpk7jhwp36: /tmp/tmpk7jhwp36.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140069
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    long area = (a+b+c)/2;\n    if(area > c) {\n     \
    \   return area;\n    }\n    else {\n        return -1;\n    }\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmphxsz1j6s: /tmp/tmphxsz1j6s.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140069
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a == 0) return b == 0 ? 0.0f : -1.0;\n    if (b\
    \ == 0) return c == 0 ? 0.0f : -1.0;\n    if (c == 0) return 0.0f;\n    return\
    \ ((a + b + c) / 2.0f) * (a + b + c - 2.0f) / 2.0f;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpn9ub0b1n: /tmp/tmpn9ub0b1n.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140069
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a >= b); // check that the sum of the two sides\
    \ is greater than the third side\n  assert(b >= c); // check that the sum of the\
    \ two sides is greater than the third side\n  long sum = a+b+c; // sum of the\
    \ three sides\n  if(sum % 2 == 0) return sum/2;\n  else return -1; // if the sum\
    \ is odd, return -1\n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpzfw29tlt: /tmp/tmpzfw29tlt.cpp:14: float triangle_area(long int, long
    int, long int): Assertion `a >= b'' failed.

    '
  stdout: ''
  timestamp: 1660140069
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tif((a + b) > c) {\n\t\tif((b + c) > a) {\n\t\t\tif((c\
    \ + a) > b) {\n\t\t\t\treturn (a * b * c);\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp1qytyhhz: /tmp/tmp1qytyhhz.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140069
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    int xc, yc;\n    float area;\n\n    xc = (a+b+c) /\
    \ 2.0f;\n    yc = (a+b) * (c-a) - (b+c) * (a-2*b+c);\n    area = sqrtf(yc / xc);\n\
    \n    return area > 0 ? area : -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp6quyf8i8: /tmp/tmp6quyf8i8.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a + b > c) {\n        if (b + c > a) {\n     \
    \       return (a * b * c) / 2;\n        } else {\n            return (c * a *\
    \ b) / 2;\n        }\n    } else {\n        if (b + c > a) {\n            return\
    \ (2 * (b + c));\n        } else {\n            return (a * (b + c));\n      \
    \  }\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp1ua3yj5j: /tmp/tmp1ua3yj5j.cpp:30: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if((a+b+c) == 0)\n        return -1; \n    float s\
    \ = (a+b+c)/2;\n    float area = (s*(s-a)*(s-b)*(s-c));\n    return round(area,\
    \ 2);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_o5uq_4t.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp_o5uq_4t.cpp:18:25: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   18 |     return round(area,\
    \ 2);\n      |                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmp_o5uq_4t.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140069
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a+b > c) {\n        return -1;\n    }\n    float\
    \ s = 0.0f;\n    float h = a/2.0f;\n    float w = b / 2.0f;\n    float d = c /\
    \ 2.0f;\n    s = h * (w + d);\n    s = s * (s + w);\n    s = s * (s + d);\n  \
    \  return s;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpje1dyktd: /tmp/tmpje1dyktd.cpp:28: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a >= 0 && b >= 0 && c >= 0);\n  float side1 =\
    \ (float)(a+b+c)/2.0f;\n  float side2 = (float)(a+b-c)/ 2.0f;\n  float side3 =\
    \ (float)(a-b-c)/ 2.0f;\n\n  if(side1 > side2 && side1 > side3)\n    return side1;\n\
    \  else if(side2 > side3 && side2 > side1)\n    return side2;\n  else\n    return\
    \ side3;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmped00yz07: /tmp/tmped00yz07.cpp:29: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Write your code here\n    float a1 = (float) (a);\n\
    \    float b1 = (float) (b);\n    float c1 = (float) (c);\n    float s = a1 +\
    \ b1 + c1;\n    return ((s * s) - ((a1 + b1) * (c1 - a1))) / 2.0;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpuq5zqehm: /tmp/tmpuq5zqehm.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140069
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(a >= 0 && b >= 0 && c >= 0);\n    float s =\
    \ (a + b + c) / 2.0f;\n    float area = sqrt(s * s - 2.0f);\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpip0lf7k_: /tmp/tmpip0lf7k_.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tfloat s = a + b + c;\n\tif (s == 0)\n\t\treturn -1;\
    \ // can't be a valid triangle\n\tfloat area_sq = s * s * (s - a) * (s - b) *\
    \ (s - c);\n\tfloat area_ab = sqrt(area_sq);\n\tif (area_ab < 0) {\n\t\tarea_ab\
    \ *= -1;\n\t\treturn -1; // not a valid triangle\n\t}\n\treturn (area_ab + 0.5)\
    \ / 2;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpymo99vg5: /tmp/tmpymo99vg5.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(a < b);\n    assert(b < c);\n    if (a + b\
    \ >= c) {\n        return -1;\n    }\n    return 0.5 * pow((a + b), 2);\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpbcytmkt_: /tmp/tmpbcytmkt_.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(b > a && c > b); // assert that b > a and c\
    \ > b\n    float side1 = (a + b) / 2;\n    float side2 = (a + c) / 2;\n    float\
    \ side3 = (b + c) / 2;\n\n    float s = 0.0;\n    float area1 = 0.0;\n    float\
    \ area2 = 0.0;\n    float area3 = 0.0;\n    s = abs(pow(side1, 2) - pow(side2,\
    \ 2));\n    area1 = sqrt(s);\n    s = abs(pow(side1, 2) - pow(side3, 2));\n  \
    \  area2 = sqrt(s);\n    s = abs(pow(side2, 2) - pow(side3, 2));\n    area3 =\
    \ sqrt(s);\n    float sides = (area1 + area2 + area3) / 2.0;\n    return sides;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpghj1zk7_: /tmp/tmpghj1zk7_.cpp:34: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a < 0 && b < 0 && c < 0) {\n        return float(-1);\n\
    \    }\n    float s = (a + b + c) / 2;\n    return s * s;\n}\nint main() {\n \
    \   auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp5hkw8hz1: /tmp/tmp5hkw8hz1.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float ans = -1; // Default to no triangle\n    assert(c\
    \ > a && b > a); // Check if any two sides are greater than the third side\n \
    \   if (a + b > c) {\n        ans = (c - (a + b)) / (2.0 * (a + b));\n    }\n\
    \    return round(ans, 2);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuu26czc8.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpuu26czc8.cpp:19:24: error: too many arguments\
    \ to function \u2018double round(double)\u2019\n   19 |     return round(ans,\
    \ 2);\n      |                        ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpuu26czc8.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:298:1: note: declared here\n  298\
    \ | __MATHCALLX (round,, (_Mdouble_ __x), (__const__));\n      | ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140069
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c)/2;\n    float area = 0.5f *\
    \ sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp0qbr1oi8: /tmp/tmp0qbr1oi8.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // code here\n    float a1 = a * b; \n    float a2\
    \ = c; \n    float b1 = c; \n    float b2 = a; \n    float c1 = a * b; \n    float\
    \ c2 = a; \n    float d = b1 * c2 - b2 * c1; \n    if (d < 0) return -1; \n  \
    \  return ((float) (a1 * c2 - a2 * c1)) / d; \n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmphy8l1co2: /tmp/tmphy8l1co2.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area_of_triangle = 0.5 * b;\n    if (a + b >\
    \ c) {\n        area_of_triangle = -1;\n    }\n    return std::round(area_of_triangle*100)/100;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpppmzjcrl: /tmp/tmpppmzjcrl.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2.0f;\n    // Check for valid\
    \ triangle area\n    if ( (a + b > c) && (a + c > b) && (b + c > a) ) {\n    \
    \    return s;\n    }\n    else {\n        return -1.0f;\n    }\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmptaciv5m6: /tmp/tmptaciv5m6.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2.0f;\n    if (a + b > c &&\
    \ a + c > b && b + c > a) {\n        return (s * s);\n    } else if (a + b > c\
    \ && a + c > b) {\n        return 2.0f * s;\n    } else {\n        return -1.0f;\n\
    \    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmplgd63vs8: /tmp/tmplgd63vs8.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a >= 0);\n  assert(b >= 0);\n  assert(c >= 0);\n\
    \  long area;\n  if (a + b <= c)\n    area = (a * b) / 2;\n  else\n    area =\
    \ -1;\n  return (float)area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmppmd5ere7: /tmp/tmppmd5ere7.cpp:26: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a > b && b > c) {\n        if (a > c) {\n    \
    \        long m = a + b - c;\n            return m * 0.5;\n        } else if (b\
    \ > c) {\n            return 0.5 * b;\n        } else {\n            return 0.25\
    \ * c;\n        }\n    } else {\n        if (b > a) {\n            if (b > c)\
    \ {\n                long m = a + c - b;\n                return m * 0.5;\n  \
    \          } else if (a > c) {\n                return 0.5 * a;\n            }\
    \ else {\n                return 0.25 * c;\n            }\n        } else if (a\
    \ > b) {\n            return 0.5 * b;\n        } else {\n            return 0.25\
    \ * a;\n        }\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpto0l9ron: /tmp/tmpto0l9ron.cpp:42: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area = 0.0;\n    if (b == 0 || a == 0) // Base\
    \ case\n        return area;\n\n    if (a < b)\n    {\n        if (a+c < b)\n\
    \        {\n            area = (a * c)/ b;\n        }\n    }\n    else // b <\
    \ a\n    {\n        if (a+c < b)\n        {\n            area = (b * c)/ a;\n\
    \        }\n    }\n\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpb_l7ng1f: /tmp/tmpb_l7ng1f.cpp:37: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float A, b, c1, A1, c2, B1, A2, B2;\n    c1 = sqrt(a\
    \ * a + b * b);\n    c2 = sqrt(c * c + a * a);\n    A1 = c1 - (c2 - c) / 2;\n\
    \    A2 = c2 - (c1 - c) / 2;\n    B1 = c1 - (c2 - a) / 2;\n    B2 = c2 - (c1 -\
    \ a) / 2;\n    A = a * A1 + b * B1;\n    B = a * A2 + b * B2;\n    if (A >= B\
    \ && B >= A) {\n        return A;\n    }\n    return -1;\n}\nint main() {\n  \
    \  auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa_unr6d4.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpa_unr6d4.cpp:14:14: error: declaration of \u2018\
    float b\u2019 shadows a parameter\n   14 |     float A, b, c1, A1, c2, B1, A2,\
    \ B2;\n      |              ^\n/tmp/tmpa_unr6d4.cpp:22:5: error: \u2018B\u2019\
    \ was not declared in this scope; did you mean \u2018B2\u2019?\n   22 |     B\
    \ = a * A2 + b * B2;\n      |     ^\n      |     B2\n"
  stdout: ''
  timestamp: 1660140070
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area;\n    // Add all sides together\n    float\
    \ total_area = a + b + c;\n    float s = (b + c) / 2.0;\n    // Validate the triangle\
    \ by making sure that any two sides are less than the third\n    // side\n   \
    \ if (total_area != 0) {\n        if (a <= b && b <= c) {\n            area =\
    \ (a + b) / 2.0;\n        }\n        if (a <= c && c <= b) {\n            area\
    \ = (a + c) / 2.0;\n        }\n    }\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_a0exw7i: /tmp/tmp_a0exw7i.cpp:32: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Write your code here\n    // return 0;\n    if(a>b+c){\n\
    \        float s=(float)(a*b)/(c*(a-c));\n        printf(\"%f\",s);\n    }\n \
    \   else{\n        float s=(float)(c*b)/(a*(b-c));\n        printf(\"%f\",s);\n\
    \    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmptpkf53b8: /tmp/tmptpkf53b8.cpp:27: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a >= 0);\n  assert(b >= 0);\n  assert(c >= 0);\n\
    \  if (a + b >= c) {\n    return (b * b) / float((b * b) - (a * a));\n  } else\
    \ {\n    return -1.0f;\n  }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp7idbkhfw: /tmp/tmp7idbkhfw.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140070
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  float area = 0.0;\n  if (a > 0 && b > 0 && c > 0) {\n\
    \    if (a + b > c) {\n      area = sqrt((pow((float(a), 2.0f) + pow((float(b),\
    \ 2.0f) + pow((float(c), 2.0f), 2.0f)) / 2.0f, 2.0f));\n      area = round(area\
    \ / 2.0f) * 2.0f;\n    } else {\n      area = sqrt((pow((float(a), 2.0f) + pow((float(b),\
    \ 2.0f), 2.0f)) / 2.0f);\n      area = round(area / 2.0f) * 2.0f;\n    }\n  }\n\
    \  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgtk5pbq7.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpgtk5pbq7.cpp:17:93: error: too few arguments\
    \ to function \u2018double pow(double, double)\u2019\n   17 |       area = sqrt((pow((float(a),\
    \ 2.0f) + pow((float(b), 2.0f) + pow((float(c), 2.0f), 2.0f)) / 2.0f, 2.0f));\n\
    \      |                                                                     \
    \                        ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpgtk5pbq7.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:1: note: declared here\n  140\
    \ | __MATHCALL_VEC (pow,, (_Mdouble_ __x, _Mdouble_ __y));\n      | ^~~~~~~~~~~~~~\n\
    /tmp/tmpgtk5pbq7.cpp:20:70: error: too few arguments to function \u2018double\
    \ pow(double, double)\u2019\n   20 |       area = sqrt((pow((float(a), 2.0f) +\
    \ pow((float(b), 2.0f), 2.0f)) / 2.0f);\n      |                             \
    \                                         ^\nIn file included from /usr/include/features.h:461,\n\
    \                 from /usr/include/assert.h:35,\n                 from /tmp/tmpgtk5pbq7.cpp:1:\n\
    /usr/include/x86_64-linux-gnu/bits/mathcalls.h:140:1: note: declared here\n  140\
    \ | __MATHCALL_VEC (pow,, (_Mdouble_ __x, _Mdouble_ __y));\n      | ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660140070
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Check if sum is greater than third side.\n    //\
    \ If sum is greater than third side, return -1.\n    // If sum is greater than\
    \ third side, return sum.\n    // If sum is less than third side, return sum.\n\
    \    return (b + c) / 2.0;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpcmd6dk66: /tmp/tmpcmd6dk66.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140071
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(b > a);\n  assert(b > c);\n  assert(a > c);\n\
    \  float area;\n  area = 0.5f * (a + b + c); // Area = sqrt(Sqrt(a^2 + b^2 + c^2))\n\
    \  area /= 2.0f;\n  return round(area);\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpvcgh7xfb: /tmp/tmpvcgh7xfb.cpp:15: float triangle_area(long int, long
    int, long int): Assertion `b > c'' failed.

    '
  stdout: ''
  timestamp: 1660140071
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float abc = a+b+c;\n    float area;\n    if (abc >\
    \ 0)\n        area = (a+b+c)/2;\n    else\n        area = -1; // invalid triangle\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpbf8nazzu: /tmp/tmpbf8nazzu.cpp:25: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660140071
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(a != 0 && b != 0 && c != 0);\n    // If the\
    \ sum of two sides are greater than the third side\n    if (a + b > c) {\n   \
    \     return 0.0f;\n    } else {\n        // Find the area of a triangle with\
    \ 3 sides a, b and c\n        float s = (a + b + c) / 2.0;\n        float area\
    \ = sqrt(s * (s - a) * (s - b) * (s - c));\n        // Round the area to 2 decimal\
    \ points\n        float a = round(area * 100) / 100.0;\n        float b = round(brea\
    \ * 100) / 100.0;\n        float c = round(area * 100) / 100.0;\n        return\
    \ a + b + c;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp93v89at4.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmp93v89at4.cpp:24:25: error: \u2018brea\u2019 was\
    \ not declared in this scope; did you mean \u2018area\u2019?\n   24 |        \
    \ float b = round(brea * 100) / 100.0;\n      |                         ^~~~\n\
    \      |                         area\n"
  stdout: ''
  timestamp: 1660140070
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if(b>c)\n  {\n    swap(b,c);\n  }\n  float sum = (a\
    \ + b + c)/2;\n  return a * b * c/sum;\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmxddd4ca.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpmxddd4ca.cpp:16:5: error: \u2018swap\u2019 was\
    \ not declared in this scope\n   16 |     swap(b,c);\n      |     ^~~~\n/tmp/tmpmxddd4ca.cpp:16:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpmxddd4ca.cpp:2:\n/usr/include/c++/9/bits/regex.h:2029:5:\
    \ note:   \u2018std::__cxx11::swap\u2019\n 2029 |     swap(match_results<_Bi_iter,\
    \ _Alloc>& __lhs,\n      |     ^~~~\nIn file included from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpmxddd4ca.cpp:2:\n/usr/include/c++/9/bits/move.h:182:5:\
    \ note:   \u2018std::swap\u2019\n  182 |     swap(_Tp& __a, _Tp& __b)\n      |\
    \     ^~~~\n/usr/include/c++/9/bits/move.h:182:5: note:   \u2018std::swap\u2019\
    \nIn file included from /usr/include/c++/9/exception:143,\n                 from\
    \ /usr/include/c++/9/ios:39,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpmxddd4ca.cpp:2:\n/usr/include/c++/9/bits/exception_ptr.h:166:5: note:\
    \   \u2018std::__exception_ptr::swap\u2019\n  166 |     swap(exception_ptr& __lhs,\
    \ exception_ptr& __rhs)\n      |     ^~~~\nIn file included from /usr/include/c++/9/filesystem:37,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:129,\n\
    \                 from /tmp/tmpmxddd4ca.cpp:2:\n/usr/include/c++/9/bits/fs_path.h:611:15:\
    \ note:   \u2018std::filesystem::__cxx11::swap\u2019\n  611 |   inline void swap(path&\
    \ __lhs, path& __rhs)"
  stdout: ''
  timestamp: 1660140070
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Write your code here\n    float area;\n    float\
    \ l1=(a+b+c)/2;\n    float l2=a*b;\n    float l3=a*c;\n    float l4=b*c;\n   \
    \ area=sqrt(l1*l2+l3*l4);\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpmu7068p1: /tmp/tmpmu7068p1.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660140071

language: cpp
name: HumanEval_22_filter_integers
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (const auto& i : values) {\n        if (std::is_integral<decltype(i)>::value)\
    \ {\n            res.push_back(i);\n        }\n    }\n    return res;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6mawq_cu.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp6mawq_cu.cpp:12:28: error: no matching function for call to \u2018\
    std::vector<long int>::push_back(const std::any&)\u2019\n   12 |             res.push_back(i);\n\
    \      |                            ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6mawq_cu.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018const std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type&\
    \ __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018const std::any\u2019 to\
    \ \u2018std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019\
    }\n 1200 |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n"
  stdout: ''
  timestamp: 1660108483
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ out;\n  // Loop through all given values\n  for (auto v: values) {\n    // Check\
    \ if it's an int\n    if (std::holds_alternative<int>(v)) {\n      // If it's\
    \ an int, convert it\n      out.push_back(std::any_cast<int>(v).value());\n  \
    \  }\n  }\n  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp8rlfasxv.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp8rlfasxv.cpp:13:38: error: no matching function for call to \u2018\
    holds_alternative<int>(std::any&)\u2019\n   13 |     if (std::holds_alternative<int>(v))\
    \ {\n      |                                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmp8rlfasxv.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp8rlfasxv.cpp:13:38:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |     if (std::holds_alternative<int>(v)) {\n      |     \
    \                                 ^\n/tmp/tmp8rlfasxv.cpp:15:43: error: request\
    \ for member \u2018value\u2019 in \u2018std::any_cast<int>(v)\u2019, which is\
    \ of non-class type \u2018int\u2019\n   15 |       out.push_back(std::any_cast<int>(v).value());\n\
    \      |                                           ^~~~~\n"
  stdout: ''
  timestamp: 1660108483
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ results;\n  // for loop for checking all values of the vector for integers\n\
    \  for (auto& value: values) {\n    if (value.type() == typeid(std::map<long,long>))\
    \ {\n      std::map<long,long> mapValue = value;\n      std::map<long,long>::iterator\
    \ it = mapValue.begin();\n      for (; it != mapValue.end(); ++it) {\n       \
    \ if (it->first < std::numeric_limits<long>::min() || it->first > std::numeric_limits<long>::max())\
    \ {\n          results.push_back(it->first);\n        }\n      }\n    } else if\
    \ (value.type() == typeid(std::vector<long>)) {\n      std::vector<long> vecValue\
    \ = value;\n      std::vector<long>::iterator it = vecValue.begin();\n      for\
    \ (; it != vecValue.end(); ++it) {\n        if (it->first < std::numeric_limits<long>::min()\
    \ || it->first > std::numeric_limits<long>::max()) {\n          results.push_back(it->first);\n\
    \        }\n      }\n    } else if (value.type() == typeid(std::string)) {\n \
    \     if (value.as<std::string>() != \"0\") {\n        results.push_back(value.as<long>());\n\
    \      }\n    } else {\n      results.push_back(value.as<long>());\n    }\n  }\n\
    \  return results;\n}\nint main() {\n    auto candidate = filter_integers;\n \
    \   assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n \
    \   assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp7m6syzsr.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp7m6syzsr.cpp:13:38: error: conversion from \u2018std::any\u2019 to\
    \ non-scalar type \u2018std::map<long int, long int>\u2019 requested\n   13 |\
    \       std::map<long,long> mapValue = value;\n      |                       \
    \               ^~~~~\n/tmp/tmp7m6syzsr.cpp:21:36: error: conversion from \u2018\
    std::any\u2019 to non-scalar type \u2018std::vector<long int>\u2019 requested\n\
    \   21 |       std::vector<long> vecValue = value;\n      |                  \
    \                  ^~~~~\n/tmp/tmp7m6syzsr.cpp:24:17: error: request for member\
    \ \u2018first\u2019 in \u2018* it.__gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >::operator->()\u2019, which is of non-class type \u2018long int\u2019\n\
    \   24 |         if (it->first < std::numeric_limits<long>::min() || it->first\
    \ > std::numeric_limits<long>::max()) {\n      |                 ^~~~~\n/tmp/tmp7m6syzsr.cpp:24:65:\
    \ error: request for member \u2018first\u2019 in \u2018* it.__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >::operator->()\u2019, which is of non-class type\
    \ \u2018long int\u2019\n   24 |         if (it->first < std::numeric_limits<long>::min()\
    \ || it->first > std::numeric_limits<long>::max()) {\n      |                \
    \                                                 ^~~~~\n/tmp/tmp7m6syzsr.cpp:25:33:\
    \ error: request for member \u2018first\u2019 in \u2018* it.__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >::operator->()\u2019, which is of non-class type\
    \ \u2018long int\u2019\n   25 |           results.push_back(it->first);\n    \
    \  |                                 ^~~~~\n/tmp/tmp7m6syzsr.cpp:29:17: error:\
    \ \u2018class std::any\u2019 has no member named \u2018as\u2019\n   29 |     \
    \  if (value.as<std::string>() != \"0\") {\n      |                 ^~\n/tmp/tmp7m6syzsr.cpp:29:31:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   29 |     \
    \  if (value.as<std::string>() != \"0\") {\n      |                          \
    \     ^\n/tmp/tmp7m6syzsr.cpp:29:33: error: expected primary-expression before\
    \ \u2018)\u2019 token\n   29 |       if (value.as<std"
  stdout: ''
  timestamp: 1660108483
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ v;\n    for (const auto& val : values) {\n        if (val->type() == typeid(long))\
    \ {\n            v.push_back(val->as<long>());\n        }\n    }\n    return v;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppa_zbpsd.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmppa_zbpsd.cpp:11:16: error: base operand of \u2018->\u2019 has non-pointer\
    \ type \u2018const std::any\u2019\n   11 |         if (val->type() == typeid(long))\
    \ {\n      |                ^~\n/tmp/tmppa_zbpsd.cpp:12:28: error: base operand\
    \ of \u2018->\u2019 has non-pointer type \u2018const std::any\u2019\n   12 | \
    \            v.push_back(val->as<long>());\n      |                          \
    \  ^~\n/tmp/tmppa_zbpsd.cpp:12:33: error: expected primary-expression before \u2018\
    long\u2019\n   12 |             v.push_back(val->as<long>());\n      |       \
    \                          ^~~~\n"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (const auto & v : values) {\n        if (std::holds_alternative<const\
    \ long &>(v)) {\n            result.push_back(*std::get<const long &>(v));\n \
    \       }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ksyfgni.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp_ksyfgni.cpp:11:51: error: no matching function for call to \u2018\
    holds_alternative<const long int&>(const std::any&)\u2019\n   11 |         if\
    \ (std::holds_alternative<const long &>(v)) {\n      |                       \
    \                            ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmp_ksyfgni.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_ksyfgni.cpp:11:51:\
    \ note:   \u2018const std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<const long &>(v)) {\n\
    \      |                                                   ^\n/tmp/tmp_ksyfgni.cpp:12:55:\
    \ error: no matching function for call to \u2018get<const long int&>(const std::any&)\u2019\
    \n   12 |             result.push_back(*std::get<const long &>(v));\n      | \
    \                                                      ^\nIn file included from\
    \ /usr/include/c++/9/algorithm:60,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_ksyfgni.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2>"
  stdout: ''
  timestamp: 1660108483
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ retval;\n    for(auto i : values) {\n        if(i == std::any{}) {\n       \
    \     retval.push_back(0);\n        } else {\n            long tmp;\n        \
    \    if(std::any_cast<std::is_integral<decltype(i)>::type>(i)) {\n           \
    \     tmp = i;\n            } else {\n                retval.push_back(0);\n \
    \           }\n        }\n    }\n    return retval;\n}\nint main() {\n    auto\
    \ candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpktaywtpx.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpktaywtpx.cpp:11:14: error: no match for \u2018operator==\u2019 (operand\
    \ types are \u2018std::any\u2019 and \u2018std::any\u2019)\n   11 |         if(i\
    \ == std::any{}) {\n      |            ~ ^~      ~~~~~\n      |            | \
    \        |\n      |            std::any  std::any\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpktaywtpx.cpp:2:\n/usr/include/c++/9/bits/regex.h:1026:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1026:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpktaywtpx.cpp:11:26:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   11 |         if(i == std::any{}) {\n      |                          ^\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpktaywtpx.cpp:2:\n/usr/include/c++/9/bits/regex.h:1099:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1099 |     operator==(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1099:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpktaywtpx.cpp:11:26: note:   \u2018std::any\u2019 is not derived\
    \ from \u2018std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>\u2019\
    \n   11 |         if(i == std::any{}) {\n      |                          ^\n\
    In file included from /usr/include/c++/9/regex:62,\n      "
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ res(values.size());\n  std::transform(values.begin(), values.end(), res.begin(),\n\
    \    [&](std::any a) {\n      if (std::any_cast<int>(a)) {\n        res[static_cast<size_t>(a)]\
    \ = std::any_cast<int>(a);\n      }\n      return a;\n    });\n  return res;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsuc2eut4.cpp: In lambda function:\n/tmp/tmpsuc2eut4.cpp:13:34:\
    \ error: invalid static_cast from type \u2018std::any\u2019 to type \u2018size_t\u2019\
    \ {aka \u2018long unsigned int\u2019}\n   13 |         res[static_cast<size_t>(a)]\
    \ = std::any_cast<int>(a);\n      |                                  ^\nIn file\
    \ included from /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpsuc2eut4.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:\
    \ In instantiation of \u2018_OIter std::transform(_IIter, _IIter, _OIter, _UnaryOperation)\
    \ [with _IIter = __gnu_cxx::__normal_iterator<std::any*, std::vector<std::any>\
    \ >; _OIter = __gnu_cxx::__normal_iterator<long int*, std::vector<long int> >;\
    \ _UnaryOperation = filter_integers(std::vector<std::any>)::<lambda(std::any)>]\u2019\
    :\n/tmp/tmpsuc2eut4.cpp:16:6:   required from here\n/usr/include/c++/9/bits/stl_algo.h:4343:12:\
    \ error: cannot convert \u2018std::any\u2019 to \u2018long int\u2019 in assignment\n\
    \ 4343 |  *__result = __unary_op(*__first);\n      |  ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ out;\n  out.push_back((long)0);\n  for (auto &v: values) {\n    long val = 0;\n\
    \    if (v.as<long>())\n      val = v.as<long>();\n    else if (v.as<std::string>())\
    \ {\n      if (std::any_of(v.as<std::string>().begin(), v.as<std::string>().end(),\
    \ [](char c) { return (c >= '0' && c <= '9'); }))\n        val = std::stoul(v.as<std::string>());\n\
    \    }\n    else if (v.as<std::map<long,long>>()) {\n      for (auto &kv: v.as<std::map<long,long>>())\n\
    \        val = kv.second;\n    }\n    else if (v.as<std::vector<long>>()) {\n\
    \      for (auto &v: v.as<std::vector<long>>())\n        val = std::stoul(v);\n\
    \    }\n    else\n      throw std::invalid_argument(\"Unexpectedly invalid input\
    \ type for filter_integers: \" + std::to_string(v.type()));\n    out.push_back(val);\n\
    \  }\n  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpi96knwh5.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpi96knwh5.cpp:13:11: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   13 |     if (v.as<long>())\n      |           ^~\n\
    /tmp/tmpi96knwh5.cpp:13:14: error: expected primary-expression before \u2018long\u2019\
    \n   13 |     if (v.as<long>())\n      |              ^~~~\n/tmp/tmpi96knwh5.cpp:13:14:\
    \ error: expected \u2018)\u2019 before \u2018long\u2019\n   13 |     if (v.as<long>())\n\
    \      |        ~     ^~~~\n      |              )\n/tmp/tmpi96knwh5.cpp:14:15:\
    \ error: \u2018class std::any\u2019 has no member named \u2018as\u2019\n   14\
    \ |       val = v.as<long>();\n      |               ^~\n/tmp/tmpi96knwh5.cpp:14:18:\
    \ error: expected primary-expression before \u2018long\u2019\n   14 |       val\
    \ = v.as<long>();\n      |                  ^~~~\n/tmp/tmpi96knwh5.cpp:15:16:\
    \ error: \u2018class std::any\u2019 has no member named \u2018as\u2019\n   15\
    \ |     else if (v.as<std::string>()) {\n      |                ^~\n/tmp/tmpi96knwh5.cpp:15:30:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   15 |     else\
    \ if (v.as<std::string>()) {\n      |                              ^\n/tmp/tmpi96knwh5.cpp:15:32:\
    \ error: expected primary-expression before \u2018)\u2019 token\n   15 |     else\
    \ if (v.as<std::string>()) {\n      |                                ^\n/tmp/tmpi96knwh5.cpp:16:25:\
    \ error: \u2018class std::any\u2019 has no member named \u2018as\u2019\n   16\
    \ |       if (std::any_of(v.as<std::string>().begin(), v.as<std::string>().end(),\
    \ [](char c) { return (c >= '0' && c <= '9'); }))\n      |                   \
    \      ^~\n/tmp/tmpi96knwh5.cpp:16:39: error: expected primary-expression before\
    \ \u2018>\u2019 token\n   16 |       if (std::any_of(v.as<std::string>().begin(),\
    \ v.as<std::string>().end(), [](char c) { return (c >= '0' && c <= '9'); }))\n\
    \      |                                       ^\n/tmp/tmpi96knwh5.cpp:16:41:\
    \ error: expected primary-expression before \u2018)\u2019 token\n   16 |     \
    \  if (std::any_of(v.as<std::string>().begin(), v.as<std::string>().end(), [](char\
    \ c) { return (c >= '0' && c <= '9'); }))\n      "
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n   std::vector<long>\
    \ ret;\n   for (auto &v: values) {\n      if (v.type() == typeid(std::map<long,long>))\n\
    \         v = std::map<long,long>();\n      if (v.type() == typeid(std::vector<std::string>))\n\
    \         v = std::vector<std::string>();\n      if (v.type() == typeid(std::vector<std::any>))\n\
    \         v = std::vector<std::any>();\n      ret.push_back(v.as<long>());\n \
    \  }\n   return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpahp4bhmz.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpahp4bhmz.cpp:17:23: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   17 |       ret.push_back(v.as<long>());\n      |  \
    \                     ^~\n/tmp/tmpahp4bhmz.cpp:17:26: error: expected primary-expression\
    \ before \u2018long\u2019\n   17 |       ret.push_back(v.as<long>());\n      |\
    \                          ^~~~\n"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ values_to_return;\n\tstd::vector<bool> flags = {false,false,false,false};\n\t\
    // for each value in the vector check it's type\n\t// if not int flag false else\
    \ true\n\tfor (auto& value : values) {\n\t\tif (value.type() == typeid(long))\
    \ {\n\t\t\tvalues_to_return.push_back(value.as<long>());\n\t\t\tflags[(value.as<long>()\
    \ < 0) ? true : false ] =true;\n\t\t}\n\t\telse if (value.type() == typeid(double))\
    \ {\n\t\t\tvalues_to_return.push_back(value.as<double>());\n\t\t\tflags[(value.as<double>()\
    \ < 0) ? true : false ] =true;\n\t\t}\n\t\telse if (value.type() == typeid(std::string))\
    \ {\n\t\t\tif (value.as<std::string>() != \"-\") {\n\t\t\t\tvalues_to_return.push_back(value.as<std::string>());\n\
    \t\t\t\tflags[(value.as<std::string>() == \"-\") ? false : true] =true;\n\t\t\t\
    }\n\t\t\telse {\n\t\t\t\tflags[value.as<std::string>() == \"-\" ? false : true]\
    \ =true;\n\t\t\t}\n\t\t}\n\t\telse if (value.type() == typeid(std::vector<std::any>))\
    \ {\n\t\t\tauto value_to_return = filter_integers(value.as<std::vector<std::any>>());\n\
    \t\t\tfor (auto value : value_to_return) {\n\t\t\t\tvalues_to_return.push_back(value);\n\
    \t\t\t}\n\t\t}\n\t\telse if (value.type() == typeid(std::map<long,long>)) {\n\t\
    \t\tauto value_to_return = filter_integers(value.as<std::map<long,long>>());\n\
    \t\t\tfor (auto value : value_to_return) {\n\t\t\t\tvalues_to_return.push_back(value);\n\
    \t\t\t}\n\t\t}\n\t\telse if (value.type() == typeid(std::vector<long>)) {\n\t\t\
    \tauto value_to_return = filter_integers(value.as<std::vector<long>>());\n\t\t\
    \tfor (auto value : value_to_return) {\n\t\t\t\tvalues_to_return.push_back(value);\n\
    \t\t\t}\n\t\t}\n\t\telse if (value.type() == typeid(std::set<long>)) {\n\t\t\t\
    auto value_to_return = filter_integers(value.as<std::set<long>>());\n\t\t\tfor\
    \ (auto value : value_to_return) {\n\t\t\t\tvalues_to_return.push_back(value);\n\
    \t\t\t}\n\t\t}\n\t\telse if (value.type() == typeid(std::list<long>)) {\n\t\t\t\
    auto value_to_return = filter_integers(value.as<std::list<long>>());\n\t\t\tfor\
    \ (auto value : value_to_return) {\n\t\t\t\tvalues_to_return.push_back(value);\n\
    \t\t\t}\n\t\t}\n\t\telse if (value.type() == typeid(std::tuple<long,long>)) {\n\
    \t\t\tauto value_to_return = filter_integers(value.as<std::tuple<\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpohpbkib7.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpohpbkib7.cpp:15:37: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   15 |    values_to_return.push_back(value.as<long>());\n\
    \      |                                     ^~\n/tmp/tmpohpbkib7.cpp:15:40: error:\
    \ expected primary-expression before \u2018long\u2019\n   15 |    values_to_return.push_back(value.as<long>());\n\
    \      |                                        ^~~~\n/tmp/tmpohpbkib7.cpp:16:17:\
    \ error: \u2018class std::any\u2019 has no member named \u2018as\u2019\n   16\
    \ |    flags[(value.as<long>() < 0) ? true : false ] =true;\n      |         \
    \        ^~\n/tmp/tmpohpbkib7.cpp:16:20: error: expected primary-expression before\
    \ \u2018long\u2019\n   16 |    flags[(value.as<long>() < 0) ? true : false ] =true;\n\
    \      |                    ^~~~\n/tmp/tmpohpbkib7.cpp:16:20: error: expected\
    \ \u2018)\u2019 before \u2018long\u2019\n   16 |    flags[(value.as<long>() <\
    \ 0) ? true : false ] =true;\n      |          ~         ^~~~\n      |       \
    \             )\n/tmp/tmpohpbkib7.cpp:16:55: error: expected \u2018]\u2019 before\
    \ \u2018;\u2019 token\n   16 |    flags[(value.as<long>() < 0) ? true : false\
    \ ] =true;\n      |                                                       ^\n\
    \      |                                                       ]\n/tmp/tmpohpbkib7.cpp:19:37:\
    \ error: \u2018class std::any\u2019 has no member named \u2018as\u2019\n   19\
    \ |    values_to_return.push_back(value.as<double>());\n      |              \
    \                       ^~\n/tmp/tmpohpbkib7.cpp:19:40: error: expected primary-expression\
    \ before \u2018double\u2019\n   19 |    values_to_return.push_back(value.as<double>());\n\
    \      |                                        ^~~~~~\n/tmp/tmpohpbkib7.cpp:20:17:\
    \ error: \u2018class std::any\u2019 has no member named \u2018as\u2019\n   20\
    \ |    flags[(value.as<double>() < 0) ? true : false ] =true;\n      |       \
    \          ^~\n/tmp/tmpohpbkib7.cpp:20:20: error: expected primary-expression\
    \ before \u2018double\u2019\n   20 |    flags[(value.as<double>() < 0) ? true\
    \ : false ] =true;\n      |                    ^~~~~~\n/tmp/t"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  assert(values.size()\
    \ >= 1);\n  auto to_int = std::any_cast<std::vector<long>>(std::any_cast<std::any>(values.front()));\n\
    \  std::vector<long> ret;\n  std::transform(to_int.begin(), to_int.end(), std::back_inserter(ret),\
    \ [&values](auto v) {\n    return std::any_cast<std::any>(std::any_cast<long>(v));\n\
    \  });\n  return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/algorithm:62,\n              \
    \   from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n             \
    \    from /tmp/tmprbldl8qf.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h: In instantiation\
    \ of \u2018_OIter std::transform(_IIter, _IIter, _OIter, _UnaryOperation) [with\
    \ _IIter = __gnu_cxx::__normal_iterator<long int*, std::vector<long int> >; _OIter\
    \ = std::back_insert_iterator<std::vector<long int> >; _UnaryOperation = filter_integers(std::vector<std::any>)::<lambda(auto:22)>]\u2019\
    :\n/tmp/tmprbldl8qf.cpp:14:4:   required from here\n/usr/include/c++/9/bits/stl_algo.h:4343:12:\
    \ error: no match for \u2018operator=\u2019 (operand types are \u2018std::back_insert_iterator<std::vector<long\
    \ int> >\u2019 and \u2018std::any\u2019)\n 4343 |  *__result = __unary_op(*__first);\n\
    \      |  ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/specfun.h:45,\n               \
    \  from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmprbldl8qf.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:513:7:\
    \ note: candidate: \u2018std::back_insert_iterator<_Container>& std::back_insert_iterator<_Container>::operator=(const\
    \ typename _Container::value_type&) [with _Container = std::vector<long int>;\
    \ typename _Container::value_type = long int]\u2019\n  513 |       operator=(const\
    \ typename _Container::value_type& __value)\n      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:513:56:\
    \ note:   no known conversion for argument 1 from \u2018std::any\u2019 to \u2018\
    const value_type&\u2019 {aka \u2018const long int&\u2019}\n  513 |       operator=(const\
    \ typename _Container::value_type& __value)\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:520:7: note: candidate: \u2018std::back_insert_iterator<_Container>&\
    \ std::back_insert_iterator<_Container>::operator=(typename _Container::value_type&&)\
    \ [with _Container = std::vector<long int>; typ"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    assert(std::all_of(values.cbegin(),\
    \ values.cend(), [](std::any x) { return x.type() == typeid(long); }));\n    std::vector<long>\
    \ ret;\n    ret.reserve(values.size());\n    for (std::any x:values) {\n     \
    \   switch (x.type()) {\n            case typeid(long):\n                ret.push_back(x.as<long>());\n\
    \                break;\n            case typeid(std::string):\n             \
    \   ret.push_back(x.as<std::string>());\n                break;\n            case\
    \ typeid(std::vector<long>):\n                ret.push_back(x.as<std::vector<long>>());\n\
    \                break;\n            default:\n                assert(false);\n\
    \        }\n    }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp2rh419gd.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp2rh419gd.cpp:13:25: error: switch quantity not an integer\n   13 |\
    \         switch (x.type()) {\n      |                         ^\n/tmp/tmp2rh419gd.cpp:15:33:\
    \ error: \u2018class std::any\u2019 has no member named \u2018as\u2019\n   15\
    \ |                 ret.push_back(x.as<long>());\n      |                    \
    \             ^~\n/tmp/tmp2rh419gd.cpp:15:36: error: expected primary-expression\
    \ before \u2018long\u2019\n   15 |                 ret.push_back(x.as<long>());\n\
    \      |                                    ^~~~\n/tmp/tmp2rh419gd.cpp:18:33:\
    \ error: \u2018class std::any\u2019 has no member named \u2018as\u2019\n   18\
    \ |                 ret.push_back(x.as<std::string>());\n      |             \
    \                    ^~\n/tmp/tmp2rh419gd.cpp:18:47: error: expected primary-expression\
    \ before \u2018>\u2019 token\n   18 |                 ret.push_back(x.as<std::string>());\n\
    \      |                                               ^\n/tmp/tmp2rh419gd.cpp:18:49:\
    \ error: expected primary-expression before \u2018)\u2019 token\n   18 |     \
    \            ret.push_back(x.as<std::string>());\n      |                    \
    \                             ^\n/tmp/tmp2rh419gd.cpp:21:33: error: \u2018class\
    \ std::any\u2019 has no member named \u2018as\u2019\n   21 |                 ret.push_back(x.as<std::vector<long>>());\n\
    \      |                                 ^~\n/tmp/tmp2rh419gd.cpp:21:52: error:\
    \ expected primary-expression before \u2018>\u2019 token\n   21 |            \
    \     ret.push_back(x.as<std::vector<long>>());\n      |                     \
    \                               ^~\n/tmp/tmp2rh419gd.cpp:21:55: error: expected\
    \ primary-expression before \u2018)\u2019 token\n   21 |                 ret.push_back(x.as<std::vector<long>>());\n\
    \      |                                                       ^\n"
  stdout: ''
  timestamp: 1660108484
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ ret;\n  // Iterate over vector and convert any element to int\n  for (auto&\
    \ i : values) {\n    try {\n      int ii = std::any_cast<int>(i);\n      if (ii\
    \ > 0) {\n        ret.push_back(ii);\n      }\n    } catch (const std::exception&)\
    \ {\n    }\n  }\n  // Return filtered vector\n  return ret;\n}\nint main() {\n\
    \    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ filtered;\n  for (const auto& v : values) {\n    long i = 0;\n    if (const\
    \ auto* vt = v.as<std::vector<std::any>>()) {\n      for (const auto& vt : *vt)\
    \ i = i * 10 + vt.get<long>();\n    } else if (const auto* vt = v.as<std::map<long,long>>())\
    \ {\n      for (const auto& vt : *vt) {\n        i = i * 10 + vt.first;\n    \
    \  }\n    } else {\n      i = v.get<long>();\n    }\n    filtered.push_back(i);\n\
    \  }\n  return filtered;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpt9iafd0m.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpt9iafd0m.cpp:12:28: error: \u2018const class std::any\u2019 has no\
    \ member named \u2018as\u2019\n   12 |     if (const auto* vt = v.as<std::vector<std::any>>())\
    \ {\n      |                            ^~\n/tmp/tmpt9iafd0m.cpp:12:51: error:\
    \ expected primary-expression before \u2018>\u2019 token\n   12 |     if (const\
    \ auto* vt = v.as<std::vector<std::any>>()) {\n      |                       \
    \                            ^~\n/tmp/tmpt9iafd0m.cpp:12:54: error: expected primary-expression\
    \ before \u2018)\u2019 token\n   12 |     if (const auto* vt = v.as<std::vector<std::any>>())\
    \ {\n      |                                                      ^\n/tmp/tmpt9iafd0m.cpp:13:54:\
    \ error: expected primary-expression before \u2018long\u2019\n   13 |       for\
    \ (const auto& vt : *vt) i = i * 10 + vt.get<long>();\n      |               \
    \                                       ^~~~\n/tmp/tmpt9iafd0m.cpp:14:35: error:\
    \ \u2018const class std::any\u2019 has no member named \u2018as\u2019\n   14 |\
    \     } else if (const auto* vt = v.as<std::map<long,long>>()) {\n      |    \
    \                               ^~\n/tmp/tmpt9iafd0m.cpp:14:56: error: expected\
    \ primary-expression before \u2018>\u2019 token\n   14 |     } else if (const\
    \ auto* vt = v.as<std::map<long,long>>()) {\n      |                         \
    \                               ^~\n/tmp/tmpt9iafd0m.cpp:14:59: error: expected\
    \ primary-expression before \u2018)\u2019 token\n   14 |     } else if (const\
    \ auto* vt = v.as<std::map<long,long>>()) {\n      |                         \
    \                                  ^\n/tmp/tmpt9iafd0m.cpp:19:13: error: \u2018\
    const class std::any\u2019 has no member named \u2018get\u2019\n   19 |      \
    \ i = v.get<long>();\n      |             ^~~\n/tmp/tmpt9iafd0m.cpp:19:17: error:\
    \ expected primary-expression before \u2018long\u2019\n   19 |       i = v.get<long>();\n\
    \      |                 ^~~~\n"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::remove_copy_if(std::begin(values),\
    \ std::end(values),\n                      std::back_inserter(std::back_inserter(values)),\n\
    \                      [](std::any x){return !std::holds_alternative<long>(x)\
    \ || std::holds_alternative<long>(std::any_cast<long>(x));});\n  return std::vector{std::any_cast<long>(values.front())};\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppiqsmbe3.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmppiqsmbe3.cpp:10:60: error: cannot bind non-const lvalue reference of\
    \ type \u2018std::back_insert_iterator<std::vector<std::any> >&\u2019 to an rvalue\
    \ of type \u2018std::back_insert_iterator<std::vector<std::any> >\u2019\n   10\
    \ |                       std::back_inserter(std::back_inserter(values)),\n  \
    \    |                                          ~~~~~~~~~~~~~~~~~~^~~~~~~~\nIn\
    \ file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n            \
    \     from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmppiqsmbe3.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:556:31:\
    \ note:   initializing argument 1 of \u2018std::back_insert_iterator<_Container>\
    \ std::back_inserter(_Container&) [with _Container = std::back_insert_iterator<std::vector<std::any>\
    \ >]\u2019\n  556 |     back_inserter(_Container& __x)\n      |              \
    \     ~~~~~~~~~~~~^~~\n/tmp/tmppiqsmbe3.cpp: In lambda function:\n/tmp/tmppiqsmbe3.cpp:11:76:\
    \ error: no matching function for call to \u2018holds_alternative<long int>(std::any&)\u2019\
    \n   11 |                       [](std::any x){return !std::holds_alternative<long>(x)\
    \ || std::holds_alternative<long>(std::any_cast<long>(x));});\n      |       \
    \                                                                     ^\nIn file\
    \ included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n     \
    \            from /tmp/tmppiqsmbe3.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmppiqsmbe3.cpp:11:76:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Ty"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    assert(values.size()\
    \ >= 1);\n    std::vector<long> ints;\n    for (auto& val : values) {\n      \
    \  std::any a;\n        if (a.type() == typeid(std::string)) {\n            a\
    \ = val;\n        } else if (a.type() == typeid(long)) {\n            a = val;\n\
    \        } else {\n            throw std::invalid_argument(\"Unkown type\");\n\
    \        }\n        if (a.type() == typeid(long)) {\n            ints.push_back(long(a));\n\
    \        }\n    }\n    return ints;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0enpkqkt.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp0enpkqkt.cpp:21:34: error: invalid cast from type \u2018std::any\u2019\
    \ to type \u2018long int\u2019\n   21 |             ints.push_back(long(a));\n\
    \      |                                  ^\n"
  stdout: ''
  timestamp: 1660108483
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ res;\n\tstd::for_each(values.begin(), values.end(), [&res](std::any v){\n\t\t\
    auto i = (int)v;\n\t\tif (v.get_type() == typeid(int))\n\t\t\tres.push_back(i);\n\
    \t});\n\treturn res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp35mh06m4.cpp: In lambda function:\n/tmp/tmp35mh06m4.cpp:11:17:\
    \ error: invalid cast from type \u2018std::any\u2019 to type \u2018int\u2019\n\
    \   11 |   auto i = (int)v;\n      |                 ^\n/tmp/tmp35mh06m4.cpp:12:9:\
    \ error: \u2018class std::any\u2019 has no member named \u2018get_type\u2019\n\
    \   12 |   if (v.get_type() == typeid(int))\n      |         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660108483
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ results;\n    std::vector<std::any> temp;\n    bool keep_going = true;\n   \
    \ bool is_integral = false;\n    for(auto& value : values) {\n        if(auto\
    \ int = std::any_cast(value);\n            int != std::any {\n               \
    \ temp.push_back(value);\n                is_integral = true;\n            }\n\
    \        }\n        if(is_integral && !keep_going && temp.empty()) {\n       \
    \     is_integral = false;\n        }\n        else if(is_integral) {\n      \
    \      results.push_back(temp.front());\n            temp.pop_back();\n      \
    \      keep_going = !temp.empty();\n        }\n        else {\n            keep_going\
    \ = false;\n        }\n    }\n    return std::move(results);\n}\nint main() {\n\
    \    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9__1f825.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp9__1f825.cpp:14:21: error: expected unqualified-id before \u2018=\u2019\
    \ token\n   14 |         if(auto int = std::any_cast(value);\n      |        \
    \             ^\n/tmp/tmp9__1f825.cpp:14:20: error: expected \u2018;\u2019 before\
    \ \u2018=\u2019 token\n   14 |         if(auto int = std::any_cast(value);\n \
    \     |                    ^~\n      |                    ;\n/tmp/tmp9__1f825.cpp:14:21:\
    \ error: expected primary-expression before \u2018=\u2019 token\n   14 |     \
    \    if(auto int = std::any_cast(value);\n      |                     ^\n/tmp/tmp9__1f825.cpp:14:42:\
    \ error: no matching function for call to \u2018any_cast(std::any&)\u2019\n  \
    \ 14 |         if(auto int = std::any_cast(value);\n      |                  \
    \                        ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:126,\n\
    \                 from /tmp/tmp9__1f825.cpp:2:\n/usr/include/c++/9/any:452:23:\
    \ note: candidate: \u2018template<class _ValueType> _ValueType std::any_cast(const\
    \ std::any&)\u2019\n  452 |     inline _ValueType any_cast(const any& __any)\n\
    \      |                       ^~~~~~~~\n/usr/include/c++/9/any:452:23: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp9__1f825.cpp:14:42:\
    \ note:   couldn\u2019t deduce template parameter \u2018_ValueType\u2019\n   14\
    \ |         if(auto int = std::any_cast(value);\n      |                     \
    \                     ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:126,\n\
    \                 from /tmp/tmp9__1f825.cpp:2:\n/usr/include/c++/9/any:478:23:\
    \ note: candidate: \u2018template<class _ValueType> _ValueType std::any_cast(std::any&)\u2019\
    \n  478 |     inline _ValueType any_cast(any& __any)\n      |                \
    \       ^~~~~~~~\n/usr/include/c++/9/any:478:23: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp9__1f825.cpp:14:42: note:   couldn\u2019t deduce template parameter\
    \ \u2018_ValueType\u2019\n   14 |         if(auto int = std::any_cast(value);\n\
    \      |                                          ^\nIn "
  stdout: ''
  timestamp: 1660108484
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ retVal;\n    for (auto& value : values){\n        if(std::is_same<std::string,\
    \ std::decay_t<decltype(value)>>::value || std::is_same<long, std::decay_t<decltype(value)>>::value\
    \ ||\n            std::is_same<unsigned long, std::decay_t<decltype(value)>>::value)\n\
    \            retVal.push_back(std::any_cast<long>(value));\n    }\n    return\
    \ retVal;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpzce4k9kx: /tmp/tmpzce4k9kx.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ out;\n\tfor(auto v : values) {\n\t\tif(v.type() == typeid(std::map<long, long>))\
    \ {\n\t\t\tauto map = std::any_cast<std::map<long, long>>(v);\n\t\t\tfor(auto\
    \ i = map.begin(); i != map.end(); i++) {\n\t\t\t\tout.push_back(i->first);\n\t\
    \t\t}\n\t\t} else if (v.type() == typeid(std::vector<long>)) {\n\t\t\tauto vec\
    \ = std::any_cast<std::vector<long>>(v);\n\t\t\tfor(auto i = vec.begin(); i !=\
    \ vec.end(); i++) {\n\t\t\t\tout.push_back(*i);\n\t\t\t}\n\t\t} else {\n\t\t\t\
    out.push_back(v.as<long>());\n\t\t}\n\t}\n\treturn out;\n}\nint main() {\n   \
    \ auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_46gx0f.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp6_46gx0f.cpp:22:20: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   22 |    out.push_back(v.as<long>());\n      |     \
    \               ^~\n/tmp/tmp6_46gx0f.cpp:22:23: error: expected primary-expression\
    \ before \u2018long\u2019\n   22 |    out.push_back(v.as<long>());\n      |  \
    \                     ^~~~\n"
  stdout: ''
  timestamp: 1660108484
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ filtered;\n  for (auto& value : values) {\n    if (auto long_value = std::any_cast<long>(value))\
    \ {\n      filtered.push_back(long_value);\n    }\n  }\n  return filtered;\n}\n\
    int main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::bad_any_cast'\n  what():\
    \  bad any_cast\n"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ integers;\n  for (auto value : values) {\n    long long_val = std::any_cast<long\
    \ long>(value);\n    long* integer_val = (long*)&long_val; // get pointer to value\
    \ and cast it to long\n    integers.push_back(integer_val); // add to filtered\
    \ list\n  }\n  return integers;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp4oqchks4.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp4oqchks4.cpp:13:35: error: no matching function for call to \u2018\
    push_back(long int*&)\u2019\n   13 |     integers.push_back(integer_val); // add\
    \ to filtered list\n      |                                   ^\nIn file included\
    \ from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4oqchks4.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019 <near match>\n 1184 |       push_back(const value_type& __x)\n\
    \      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:7: note: \
    \  conversion of argument 1 would be ill-formed:\n/tmp/tmp4oqchks4.cpp:13:24:\
    \ error: invalid conversion from \u2018long int*\u2019 to \u2018std::vector<long\
    \ int>::value_type\u2019 {aka \u2018long int\u2019} [-fpermissive]\n   13 |  \
    \   integers.push_back(integer_val); // add to filtered list\n      |        \
    \                ^~~~~~~~~~~\n      |                        |\n      |      \
    \                  long int*\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4oqchks4.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019 <near match"
  stdout: ''
  timestamp: 1660108484
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ res;\n  for(auto x:values){\n    try{\n      long i = std::any_cast<long>(x);\n\
    \      res.push_back(i);\n    }catch(const std::bad_any_cast &e){\n      if(typeid(x).name()\
    \ == typeid(long).name()){\n        res.push_back(std::any_cast<long>(x));\n \
    \     }\n    }\n  }\n  return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp1d_0oa32: /tmp/tmp1d_0oa32.cpp:25: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108484
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::unordered_map<long,\
    \ long> counts;\n    for (auto& v : values) {\n        long value = std::any_cast<long>(v);\n\
    \        counts.emplace(value, counts[value] + 1);\n    }\n    std::vector<long>\
    \ out;\n    out.reserve(counts.size());\n    for (auto& v : counts) {\n      \
    \  out.emplace_back(v.second);\n    }\n    return out;\n}\nint main() {\n    auto\
    \ candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::bad_any_cast'\n  what():\
    \  bad any_cast\n"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ filtered_values;\n    std::vector<std::any> ints;\n    for(auto & v: values)\
    \ {\n        if(std::holds_alternative<int64_t>(v)) {\n            ints.push_back(v);\n\
    \        } else if(std::holds_alternative<uint64_t>(v)) {\n            ints.push_back(v);\n\
    \        } else if(std::holds_alternative<int32_t>(v)) {\n            ints.push_back(v);\n\
    \        } else if(std::holds_alternative<uint32_t>(v)) {\n            ints.push_back(v);\n\
    \        } else if(std::holds_alternative<int16_t>(v)) {\n            ints.push_back(v);\n\
    \        } else if(std::holds_alternative<uint16_t>(v)) {\n            ints.push_back(v);\n\
    \        } else if(std::holds_alternative<int8_t>(v)) {\n            ints.push_back(v);\n\
    \        } else if(std::holds_alternative<uint8_t>(v)) {\n            ints.push_back(v);\n\
    \        } else if(std::holds_alternative<bool>(v)) {\n            ints.push_back(v);\n\
    \        } else if(std::holds_alternative<double>(v)) {\n            ints.push_back(v);\n\
    \        } else if(std::holds_alternative<std::string>(v)) {\n            ints.push_back(v);\n\
    \        } else {\n            std::cerr << \"Value is not integral!\" << std::endl;\n\
    \        }\n    }\n    for(auto & i: ints) {\n        auto it = std::find_if(\n\
    \            std::begin(values),\n            std::end(values),\n            [&i](const\
    \ std::any & value) -> bool {\n                return std::holds_alternative<int64_t>(value)\
    \ || std::holds_alternative<uint64_t>(value) || std::holds_alternative<int32_t>(value)\
    \ || std::holds_alternative<uint32_t>(value) || std::holds_alternative<int16_t>(value)\
    \ || std::holds_alternative<uint16_t>(value) || std::holds_alternative<int8_t>(value)\
    \ || std::holds_alternative<uint8_t>(value) || std::holds_alternative<bool>(value)\
    \ || std::holds_alternative<double>(value) || std::holds_alternative<std::string>(value);\n\
    \            }\n        );\n        if(it != std::end(values)) {\n           \
    \ filtered_values.push_back(i.get<int64_t>());\n        } else {\n           \
    \ std::cerr << \"Integer value not found in vector!\" << std::endl;\n        }\n\
    \    }\n    return filtered_values;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpo7r_3yao.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpo7r_3yao.cpp:12:45: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(std::any&)\u2019\n   12 |         if(std::holds_alternative<int64_t>(v))\
    \ {\n      |                                             ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpo7r_3yao.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpo7r_3yao.cpp:12:45:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   12 |         if(std::holds_alternative<int64_t>(v)) {\n     \
    \ |                                             ^\n/tmp/tmpo7r_3yao.cpp:14:53:\
    \ error: no matching function for call to \u2018holds_alternative<uint64_t>(std::any&)\u2019\
    \n   14 |         } else if(std::holds_alternative<uint64_t>(v)) {\n      |  \
    \                                                   ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpo7r_3yao.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpo7r_3yao.cpp:14:53:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   14 |         } else if(std::holds_alternative<uint64_t>(v)) {\n\
    \      |                                                     ^\n/tmp/tmpo7r_3yao.cpp:16:52:\
    \ error: no matching function for call "
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (const auto& val : values) {\n        if (std::holds_alternative<int64_t>(val))\
    \ {\n            res.push_back(std::get<int64_t>(val));\n        } else if (std::holds_alternative<uint64_t>(val))\
    \ {\n            res.push_back(std::get<uint64_t>(val));\n        } else if (std::holds_alternative<double>(val))\
    \ {\n            res.push_back(std::get<double>(val));\n        } else if (std::holds_alternative<float>(val))\
    \ {\n            res.push_back(std::get<float>(val));\n        } else if (std::holds_alternative<std::string>(val))\
    \ {\n            res.push_back(std::get<std::string>(val));\n        } else if\
    \ (std::holds_alternative<bool>(val)) {\n            res.push_back(std::get<bool>(val));\n\
    \        } else if (std::holds_alternative<std::map<long,long>>(val)) {\n    \
    \        res.push_back(std::get<std::map<long,long>>(val));\n        } else if\
    \ (std::holds_alternative<std::vector<long>>(val)) {\n            res.push_back(std::get<std::vector<long>>(val));\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuyyan6yi.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpuyyan6yi.cpp:11:48: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(const std::any&)\u2019\n   11 |         if (std::holds_alternative<int64_t>(val))\
    \ {\n      |                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpuyyan6yi.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuyyan6yi.cpp:11:48:\
    \ note:   \u2018const std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<int64_t>(val)) {\n  \
    \    |                                                ^\n/tmp/tmpuyyan6yi.cpp:12:48:\
    \ error: no matching function for call to \u2018get<int64_t>(const std::any&)\u2019\
    \n   12 |             res.push_back(std::get<int64_t>(val));\n      |        \
    \                                        ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpuyyan6yi.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  assert(values.size()\
    \ > 0);\n  std::vector<long> out;\n  for(auto it = values.begin(); it != values.end();\
    \ ++it) {\n    if(std::any_of(std::begin(*it), std::end(*it), [](auto& x) { return\
    \ x == 1; })) {\n      out.push_back(long(*it));\n    }\n  }\n  return out;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8trct3kr.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp8trct3kr.cpp:12:34: error: no matching function for call to \u2018\
    begin(std::any&)\u2019\n   12 |     if(std::any_of(std::begin(*it), std::end(*it),\
    \ [](auto& x) { return x == 1; })) {\n      |                                \
    \  ^\nIn file included from /usr/include/c++/9/bits/range_access.h:36,\n     \
    \            from /usr/include/c++/9/string:54,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp8trct3kr.cpp:2:\n/usr/include/c++/9/initializer_list:89:5: note: candidate:\
    \ \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\
    \n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n\
    /usr/include/c++/9/initializer_list:89:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp8trct3kr.cpp:12:34: note:   \u2018std::any\u2019 is not derived\
    \ from \u2018std::initializer_list<_Tp>\u2019\n   12 |     if(std::any_of(std::begin(*it),\
    \ std::end(*it), [](auto& x) { return x == 1; })) {\n      |                 \
    \                 ^\nIn file included from /usr/include/c++/9/string:54,\n   \
    \              from /usr/include/c++/9/bits/locale_classes.h:40,\n           \
    \      from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \            "
  stdout: ''
  timestamp: 1660108483
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ filtered_values;\n    for (auto value: values) {\n        if (!(typeid(value.type())\
    \ == typeid(long long))) {\n            continue;\n        }\n        filtered_values.push_back(value.as<long\
    \ long>());\n    }\n    return filtered_values;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmptya5r03t.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmptya5r03t.cpp:14:41: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   14 |         filtered_values.push_back(value.as<long\
    \ long>());\n      |                                         ^~\n/tmp/tmptya5r03t.cpp:14:44:\
    \ error: expected primary-expression before \u2018long\u2019\n   14 |        \
    \ filtered_values.push_back(value.as<long long>());\n      |                 \
    \                           ^~~~\n"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::set<long>\
    \ out;\n    for(auto it = values.begin(); it != values.end(); ++it) {\n      \
    \  auto& x = *it;\n        // if x is integer add it to the output vector\n  \
    \      if(typeid(x).name() == typeid(long)) {\n            out.insert(static_cast<long>(x));\n\
    \        }\n    }\n    return std::vector<long>(out.begin(), out.end());\n}\n\
    int main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3fab_x_n.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp3fab_x_n.cpp:13:29: error: no match for \u2018operator==\u2019 (operand\
    \ types are \u2018const char*\u2019 and \u2018const std::type_info\u2019)\n  \
    \ 13 |         if(typeid(x).name() == typeid(long)) {\n      |            ~~~~~~~~~~~~~~~~\
    \ ^~ ~~~~~~~~~~~~\n      |                          |     |\n      |         \
    \                 |     const std::type_info\n      |                        \
    \  const char*\nIn file included from /usr/include/c++/9/regex:62,\n         \
    \        from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n       \
    \          from /tmp/tmp3fab_x_n.cpp:2:\n/usr/include/c++/9/bits/regex.h:1026:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1026:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp3fab_x_n.cpp:13:43:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018const char*\u2019\n   13 |         if(typeid(x).name() == typeid(long))\
    \ {\n      |                                           ^\nIn file included from\
    \ /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp3fab_x_n.cpp:2:\n/usr/include/c++/9/bits/regex.h:1099:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator==(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1099 |     operator==(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1099:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp3fab_x_n.cpp:13:43: note:   mismatched types \u2018std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ results;\n  for (auto & value : values) {\n    if (std::holds_alternative<bool>(value))\
    \ {\n      results.push_back(std::any_cast<bool>(value));\n    } else if (std::holds_alternative<std::string>(value))\
    \ {\n      results.push_back(std::any_cast<std::string>(value));\n    } else if\
    \ (std::holds_alternative<std::vector<std::any>>(value)) {\n      auto list =\
    \ std::any_cast<std::vector<std::any>>(value);\n      std::for_each(list.begin(),\
    \ list.end(), [&results](auto & elem) {\n        if (std::holds_alternative<long>(elem))\
    \ {\n          results.push_back(elem);\n        }\n      });\n    } else {\n\
    \      results.push_back(0);\n    }\n  }\n  return results;\n}\nint main() {\n\
    \    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplg8uqgyt.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmplg8uqgyt.cpp:11:43: error: no matching function for call to \u2018\
    holds_alternative<bool>(std::any&)\u2019\n   11 |     if (std::holds_alternative<bool>(value))\
    \ {\n      |                                           ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmplg8uqgyt.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmplg8uqgyt.cpp:11:43:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |     if (std::holds_alternative<bool>(value)) {\n      |\
    \                                           ^\n/tmp/tmplg8uqgyt.cpp:13:57: error:\
    \ no matching function for call to \u2018holds_alternative<std::string>(std::any&)\u2019\
    \n   13 |     } else if (std::holds_alternative<std::string>(value)) {\n     \
    \ |                                                         ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmplg8uqgyt.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmplg8uqgyt.cpp:13:57:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |     } else if (std::holds_alternative<std::string>(value))\
    \ {\n      |                                                         ^\n/tmp/tmplg8uqgyt.cpp:14:58:\
    \ error: no matching function f"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto& x : values) {\n        if(typeid(x) == typeid(std::map<long,long>))\
    \ {\n            for(auto i = x.cbegin(); i != x.cend(); i++) {\n            \
    \    if((*i).first != (*i).second)\n                    out.push_back((*i).first);\n\
    \            }\n        } else\n            out.push_back(x.as<long>());\n   \
    \ }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp52xo37mu.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp52xo37mu.cpp:12:28: error: \u2018class std::any\u2019 has no member\
    \ named \u2018cbegin\u2019\n   12 |             for(auto i = x.cbegin(); i !=\
    \ x.cend(); i++) {\n      |                            ^~~~~~\n/tmp/tmp52xo37mu.cpp:12:45:\
    \ error: \u2018class std::any\u2019 has no member named \u2018cend\u2019\n   12\
    \ |             for(auto i = x.cbegin(); i != x.cend(); i++) {\n      |      \
    \                                       ^~~~\n/tmp/tmp52xo37mu.cpp:17:29: error:\
    \ \u2018class std::any\u2019 has no member named \u2018as\u2019\n   17 |     \
    \        out.push_back(x.as<long>());\n      |                             ^~\n\
    /tmp/tmp52xo37mu.cpp:17:32: error: expected primary-expression before \u2018long\u2019\
    \n   17 |             out.push_back(x.as<long>());\n      |                  \
    \              ^~~~\n"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ints;\n    for(std::any v: values) {\n        if(std::holds_alternative<std::int64_t>(v))\
    \ {\n            ints.push_back(*reinterpret_cast<std::int64_t*>(std::any_cast<std::int64_t*>(&v)));\n\
    \        }\n    }\n    return ints;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp83kfuwgu.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp83kfuwgu.cpp:11:50: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(std::any&)\u2019\n   11 |         if(std::holds_alternative<std::int64_t>(v))\
    \ {\n      |                                                  ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp83kfuwgu.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp83kfuwgu.cpp:11:50:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<std::int64_t>(v)) {\n\
    \      |                                                  ^\n"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    // create\
    \ vector of values\n    std::vector<long> res(std::begin(values), std::end(values));\n\
    \    // filter\n    std::for_each(std::begin(res), std::end(res), [&](auto &val)\
    \ {\n        // extract type\n        auto *pType = boost::python::extract<long\
    \ *>(boost::python::object(val));\n        if (!pType)\n            return false;\n\
    \        // check type\n        if ((std::is_same<decltype(*pType), long>::value)\
    \ || (std::is_same<decltype(*pType), int>::value)) {\n            return true;\n\
    \        }\n    });\n    // return filtered vector as Python list\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp__c4rute.cpp: In lambda function:\n/tmp/tmp__c4rute.cpp:14:23:\
    \ error: \u2018boost\u2019 has not been declared\n   14 |         auto *pType\
    \ = boost::python::extract<long *>(boost::python::object(val));\n      |     \
    \                  ^~~~~\n/tmp/tmp__c4rute.cpp:14:46: error: expected primary-expression\
    \ before \u2018long\u2019\n   14 |         auto *pType = boost::python::extract<long\
    \ *>(boost::python::object(val));\n      |                                   \
    \           ^~~~\n/tmp/tmp__c4rute.cpp:18:49: error: template argument 1 is invalid\n\
    \   18 |         if ((std::is_same<decltype(*pType), long>::value) || (std::is_same<decltype(*pType),\
    \ int>::value)) {\n      |                                                 ^\n\
    /tmp/tmp__c4rute.cpp:18:97: error: template argument 1 is invalid\n   18 |   \
    \      if ((std::is_same<decltype(*pType), long>::value) || (std::is_same<decltype(*pType),\
    \ int>::value)) {\n      |                                                   \
    \                                              ^\nIn file included from /usr/include/c++/9/vector:66,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp__c4rute.cpp:2:\n/usr/include/c++/9/bits/stl_uninitialized.h:\
    \ In instantiation of \u2018_ForwardIterator std::uninitialized_copy(_InputIterator,\
    \ _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<std::any*,\
    \ std::vector<std::any> >; _ForwardIterator = long int*]\u2019:\n/usr/include/c++/9/bits/stl_uninitialized.h:307:37:\
    \   required from \u2018_ForwardIterator std::__uninitialized_copy_a(_InputIterator,\
    \ _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator\
    \ = __gnu_cxx::__normal_iterator<std::any*, std::vector<std::any> >; _ForwardIterator\
    \ = long int*; _Tp = long int]\u2019\n/usr/include/c++/9/bits/stl_vector.h:1582:33:\
    \   required from \u2018void std::vector<_Tp, _A"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &v : values) {\n        std::any v = v;\n        if(std::is_integral<decltype(v)>::value)\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmptektqcv0.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmptektqcv0.cpp:11:18: error: redeclaration of \u2018std::any v\u2019\n\
    \   11 |         std::any v = v;\n      |                  ^\n/tmp/tmptektqcv0.cpp:10:15:\
    \ note: \u2018std::any& v\u2019 previously declared here\n   10 |     for(auto\
    \ &v : values) {\n      |               ^\n"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  assert(values.size()\
    \ > 1);\n  std::vector<long> outputs;\n  for (int index = 0; index < values.size();\
    \ index++) {\n    std::any value = values[index];\n    if (value.type() == typeid(std::string))\
    \ {\n      std::string string = value.as<std::string>();\n      if (string.find(\"\
    %\") == std::string::npos) {\n        long output = int(string);\n        outputs.push_back(output);\n\
    \      }\n    }\n    if (value.type() == typeid(long)) {\n      long output =\
    \ value.as<long>();\n      outputs.push_back(output);\n    }\n  }\n  return outputs;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjykm6m_7.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpjykm6m_7.cpp:14:34: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   14 |       std::string string = value.as<std::string>();\n\
    \      |                                  ^~\n/tmp/tmpjykm6m_7.cpp:14:48: error:\
    \ expected primary-expression before \u2018>\u2019 token\n   14 |       std::string\
    \ string = value.as<std::string>();\n      |                                 \
    \               ^\n/tmp/tmpjykm6m_7.cpp:14:50: error: expected primary-expression\
    \ before \u2018)\u2019 token\n   14 |       std::string string = value.as<std::string>();\n\
    \      |                                                  ^\n/tmp/tmpjykm6m_7.cpp:16:33:\
    \ error: invalid cast from type \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to type \u2018int\u2019\n   16 |         long output = int(string);\n      |\
    \                                 ^\n/tmp/tmpjykm6m_7.cpp:21:27: error: \u2018\
    class std::any\u2019 has no member named \u2018as\u2019\n   21 |       long output\
    \ = value.as<long>();\n      |                           ^~\n/tmp/tmpjykm6m_7.cpp:21:30:\
    \ error: expected primary-expression before \u2018long\u2019\n   21 |       long\
    \ output = value.as<long>();\n      |                              ^~~~\n"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::set<long>\
    \ integers;\n    for (auto x : values) {\n        if (!(x->type()->name() == \"\
    std::vector\" && x->type()->template as<std::vector<std::any>>()->empty() && x->type()->template\
    \ as<std::vector<std::any>>()[0].type()->name() == \"long\")) integers.insert(x->as<long>());\n\
    \    }\n    return std::vector<long>({integers.begin(), integers.end()});\n}\n\
    int main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphujp1odd.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmphujp1odd.cpp:11:16: error: base operand of \u2018->\u2019 has non-pointer\
    \ type \u2018std::any\u2019\n   11 |         if (!(x->type()->name() == \"std::vector\"\
    \ && x->type()->template as<std::vector<std::any>>()->empty() && x->type()->template\
    \ as<std::vector<std::any>>()[0].type()->name() == \"long\")) integers.insert(x->as<long>());\n\
    \      |                ^~\n/tmp/tmphujp1odd.cpp:11:54: error: base operand of\
    \ \u2018->\u2019 has non-pointer type \u2018std::any\u2019\n   11 |         if\
    \ (!(x->type()->name() == \"std::vector\" && x->type()->template as<std::vector<std::any>>()->empty()\
    \ && x->type()->template as<std::vector<std::any>>()[0].type()->name() == \"long\"\
    )) integers.insert(x->as<long>());\n      |                                  \
    \                    ^~\n/tmp/tmphujp1odd.cpp:11:96: error: expected primary-expression\
    \ before \u2018>\u2019 token\n   11 |         if (!(x->type()->name() == \"std::vector\"\
    \ && x->type()->template as<std::vector<std::any>>()->empty() && x->type()->template\
    \ as<std::vector<std::any>>()[0].type()->name() == \"long\")) integers.insert(x->as<long>());\n\
    \      |                                                                     \
    \                           ^~\n/tmp/tmphujp1odd.cpp:11:99: error: expected primary-expression\
    \ before \u2018)\u2019 token\n   11 |         if (!(x->type()->name() == \"std::vector\"\
    \ && x->type()->template as<std::vector<std::any>>()->empty() && x->type()->template\
    \ as<std::vector<std::any>>()[0].type()->name() == \"long\")) integers.insert(x->as<long>());\n\
    \      |                                                                     \
    \                              ^\n/tmp/tmphujp1odd.cpp:11:114: error: base operand\
    \ of \u2018->\u2019 has non-pointer type \u2018std::any\u2019\n   11 |       \
    \  if (!(x->type()->name() == \"std::vector\" && x->type()->template as<std::vector<std::any>>()->empty()\
    \ && x->type()->template as<std::vector<std::any>>()[0].type()->name() == \"long\"\
    )) integers.insert(x->as<long>());\n      |                            "
  stdout: ''
  timestamp: 1660108483
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ v;\n    std::vector<std::any>::iterator values_it = values.begin();\n    std::vector<std::any>::iterator\
    \ values_end = values.end();\n    while (values_it != values_end) {\n        if\
    \ (std::holds_alternative<std::string>(*values_it))\n            v.push_back(*std::any_cast<std::string>(*values_it));\n\
    \        else if (std::holds_alternative<long>(*values_it))\n            v.push_back(*std::any_cast<long>(*values_it));\n\
    \        else if (std::holds_alternative<std::map<long,long>>(*values_it))\n \
    \           v.push_back(*std::any_cast<std::map<long,long>>(*values_it));\n  \
    \      else if (std::holds_alternative<std::vector<long>>(*values_it))\n     \
    \       v.push_back(*std::any_cast<std::vector<long>>(*values_it));\n        else\n\
    \            throw std::runtime_error(\"Unknown type\");\n        values_it++;\n\
    \    }\n    return v;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpt9pdwvhl.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpt9pdwvhl.cpp:13:59: error: no matching function for call to \u2018\
    holds_alternative<std::string>(std::any&)\u2019\n   13 |         if (std::holds_alternative<std::string>(*values_it))\n\
    \      |                                                           ^\nIn file\
    \ included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n     \
    \            from /tmp/tmpt9pdwvhl.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpt9pdwvhl.cpp:13:59:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         if (std::holds_alternative<std::string>(*values_it))\n\
    \      |                                                           ^\n/tmp/tmpt9pdwvhl.cpp:14:25:\
    \ error: no match for \u2018operator*\u2019 (operand type is \u2018std::__cxx11::basic_string<char>\u2019\
    )\n   14 |             v.push_back(*std::any_cast<std::string>(*values_it));\n\
    \      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file\
    \ included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpt9pdwvhl.cpp:2:\n/usr/include/c++/9/complex:391:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  391 |     operator*(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:391:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpt9pdwvhl.cpp:14:63:\
    \ note:   \u2018std::__cxx11::basic_string<char>\u2019 is not derived from \u2018\
    const std::complex<_Tp>\u2019\n   14 |             v.push_back(*std::any_cast<std::"
  stdout: ''
  timestamp: 1660108483
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    auto it\
    \ = values.begin();\n    std::vector<long> result;\n    while (it != values.end())\
    \ {\n        if (std::holds_alternative<std::string>(*it) || std::holds_alternative<long>(*it))\
    \ {\n            result.push_back(std::get<long>(*it));\n        }\n        it++;\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp2aqo_vzn.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp2aqo_vzn.cpp:12:52: error: no matching function for call to \u2018\
    holds_alternative<std::string>(std::any&)\u2019\n   12 |         if (std::holds_alternative<std::string>(*it)\
    \ || std::holds_alternative<long>(*it)) {\n      |                           \
    \                         ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmp2aqo_vzn.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp2aqo_vzn.cpp:12:52:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   12 |         if (std::holds_alternative<std::string>(*it) ||\
    \ std::holds_alternative<long>(*it)) {\n      |                              \
    \                      ^\n/tmp/tmp2aqo_vzn.cpp:12:89: error: no matching function\
    \ for call to \u2018holds_alternative<long int>(std::any&)\u2019\n   12 |    \
    \     if (std::holds_alternative<std::string>(*it) || std::holds_alternative<long>(*it))\
    \ {\n      |                                                                 \
    \                        ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmp2aqo_vzn.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp2aqo_vzn.cpp:12:89:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   12 |       "
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (const auto& v : values) {\n        try {\n            std::any_cast<std::map<long,long>>(v);\n\
    \            result.push_back( v.as<long>() );\n        } catch (std::exception&\
    \ e) {\n            try {\n                std::any_cast<std::vector<long>>(v);\n\
    \                result.push_back( v.as<long>() );\n            } catch (std::exception&\
    \ e) {\n                result.push_back( v.as<long>() );\n            }\n   \
    \     }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpsjsozswf.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpsjsozswf.cpp:13:33: error: \u2018const class std::any\u2019 has no\
    \ member named \u2018as\u2019\n   13 |             result.push_back( v.as<long>()\
    \ );\n      |                                 ^~\n/tmp/tmpsjsozswf.cpp:13:36:\
    \ error: expected primary-expression before \u2018long\u2019\n   13 |        \
    \     result.push_back( v.as<long>() );\n      |                             \
    \       ^~~~\n/tmp/tmpsjsozswf.cpp:17:37: error: \u2018const class std::any\u2019\
    \ has no member named \u2018as\u2019\n   17 |                 result.push_back(\
    \ v.as<long>() );\n      |                                     ^~\n/tmp/tmpsjsozswf.cpp:17:40:\
    \ error: expected primary-expression before \u2018long\u2019\n   17 |        \
    \         result.push_back( v.as<long>() );\n      |                         \
    \               ^~~~\n/tmp/tmpsjsozswf.cpp:19:37: error: \u2018const class std::any\u2019\
    \ has no member named \u2018as\u2019\n   19 |                 result.push_back(\
    \ v.as<long>() );\n      |                                     ^~\n/tmp/tmpsjsozswf.cpp:19:40:\
    \ error: expected primary-expression before \u2018long\u2019\n   19 |        \
    \         result.push_back( v.as<long>() );\n      |                         \
    \               ^~~~\n"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    std::vector<std::any> filtered;\n\n    // filter the values and\
    \ copy them to another vector\n    std::copy_if(values.begin(), values.end(),\
    \ std::back_inserter(filtered), [](auto & el) {\n        // if type is not integer,\
    \ ignore it\n        if(!std::is_same<decltype(el), std::any>::value && el.type()\
    \ != typeid(long)) {\n            return false;\n        }\n        \n       \
    \ // if type is integer, then store it\n        return std::is_same<decltype(el),\
    \ std::any>::value && el.type() == typeid(long);\n    });\n\n    // filter out\
    \ anything that is not a long\n    std::copy_if(filtered.begin(), filtered.end(),\
    \ std::back_inserter(result), [](auto & el) {\n        return el.type() == typeid(long);\n\
    \    });\n\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/algorithm:62,\n              \
    \   from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n             \
    \    from /tmp/tmpzw3mjdcx.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h: In instantiation\
    \ of \u2018_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate) [with _IIter\
    \ = __gnu_cxx::__normal_iterator<std::any*, std::vector<std::any> >; _OIter =\
    \ std::back_insert_iterator<std::vector<long int> >; _Predicate = filter_integers(std::vector<std::any>)::<lambda(auto:23&)>]\u2019\
    :\n/tmp/tmpzw3mjdcx.cpp:26:6:   required from here\n/usr/include/c++/9/bits/stl_algo.h:751:16:\
    \ error: no match for \u2018operator=\u2019 (operand types are \u2018std::back_insert_iterator<std::vector<long\
    \ int> >\u2019 and \u2018std::any\u2019)\n  751 |      *__result = *__first;\n\
    \      |      ~~~~~~~~~~^~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/specfun.h:45,\n               \
    \  from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpzw3mjdcx.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:513:7:\
    \ note: candidate: \u2018std::back_insert_iterator<_Container>& std::back_insert_iterator<_Container>::operator=(const\
    \ typename _Container::value_type&) [with _Container = std::vector<long int>;\
    \ typename _Container::value_type = long int]\u2019\n  513 |       operator=(const\
    \ typename _Container::value_type& __value)\n      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:513:56:\
    \ note:   no known conversion for argument 1 from \u2018std::any\u2019 to \u2018\
    const value_type&\u2019 {aka \u2018const long int&\u2019}\n  513 |       operator=(const\
    \ typename _Container::value_type& __value)\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\n\
    /usr/include/c++/9/bits/stl_iterator.h:520:7: note: candidate: \u2018std::back_insert_iterator<_Container>&\
    \ std::back_insert_iterator<_Container>::operator=(typename _Container::value_type&&)\
    \ [with _Container = std::vector<long int>; typename _Container::value_type"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ retval;\n    for (auto v: values) {\n        auto itr = std::any_cast<long>(v);\n\
    \        if (itr != v) {\n            retval.emplace_back(itr);\n        }\n \
    \   }\n    return retval;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp12xh267c.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp12xh267c.cpp:12:17: error: no match for \u2018operator!=\u2019 (operand\
    \ types are \u2018long int\u2019 and \u2018std::any\u2019)\n   12 |         if\
    \ (itr != v) {\n      |             ~~~ ^~ ~\n      |             |      |\n \
    \     |             |      std::any\n      |             long int\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp12xh267c.cpp:2:\n/usr/include/c++/9/bits/regex.h:1037:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator!=(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1037 |     operator!=(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1037:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp12xh267c.cpp:12:20:\
    \ note:   mismatched types \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \ and \u2018long int\u2019\n   12 |         if (itr != v) {\n      |         \
    \           ^\nIn file included from /usr/include/c++/9/regex:62,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n        \
    \         from /tmp/tmp12xh267c.cpp:2:\n/usr/include/c++/9/bits/regex.h:1112:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator!=(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1112 |     operator!=(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include/c++/9/bits/regex.h:1112:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp12xh267c.cpp:12:20: note:   mismatched types \u2018std::__cxx11::__sub_match_string<_Bi_iter,\
    \ _Ch_traits, _Ch_alloc>\u2019 and \u2018long int\u2019\n   12 |         if (itr\
    \ != v) {\n      |                    ^\nIn file included from /usr/include/c++/9/regex:62,\n\
    \               "
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ result;\n\tbool result_intialized = false;\n\tauto f = [&](std::any value) {\n\
    \t\tauto it;\n\t\ttry {\n\t\t\tit = std::any_cast<std::int64_t>(value);\n\t\t\
    }\n\t\tcatch(...) {\n\t\t\tit = std::any_cast<std::uint64_t>(value);\n\t\t}\n\t\
    \tif(!result_intialized) {\n\t\t\tresult.push_back(it);\n\t\t\tresult_intialized\
    \ = true;\n\t\t} else {\n\t\t\tif(it != result.back()) {\n\t\t\t\tresult.push_back(it);\n\
    \t\t\t}\n\t\t}\n\t};\n\tfor(auto& value : values) {\n\t\ttry {\n\t\t\tf(value);\n\
    \t\t}\n\t\tcatch(...) {\n\t\t}\n\t}\n\treturn result;\n}\nint main() {\n    auto\
    \ candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5of635c0.cpp: In lambda function:\n/tmp/tmp5of635c0.cpp:12:3: error:\
    \ declaration of \u2018auto it\u2019 has no initializer\n   12 |   auto it;\n\
    \      |   ^~~~\n"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::cout\
    \ << \"in filter_integers values==\" << values << std::endl;\n    std::vector<long>\
    \ out;\n    for (auto const& v : values) {\n        if (auto vt = v.as<std::map<std::string,\
    \ std::any>>()) {\n            for (auto const& kv : vt) \n                if\
    \ (kv.as<std::map<std::string, std::any>>()[\"id\"].as<std::string>() == \"int\"\
    ) out.push_back(std::stoi(kv.as<std::map<std::string, std::any>>()[\"value\"].as<std::string>()));\n\
    \        } else\n            out.push_back(v.as<long>());\n    }\n    std::cout\
    \ << \"out filter_integers values==\" << out << std::endl;\n    return out;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfuk9gtao.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpfuk9gtao.cpp:9:48: error: no match for \u2018operator<<\u2019 (operand\
    \ types are \u2018std::basic_ostream<char>\u2019 and \u2018std::vector<std::any>\u2019\
    )\n    9 |     std::cout << \"in filter_integers values==\" << values << std::endl;\n\
    \      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~\n      |   \
    \            |                                   |\n      |               std::basic_ostream<char>\
    \            std::vector<std::any>\nIn file included from /usr/include/c++/9/istream:39,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpfuk9gtao.cpp:2:\n/usr/include/c++/9/ostream:108:7: note: candidate:\
    \ \u2018std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT,\
    \ _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT,\
    \ _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\u2019\
    \n  108 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))\n      |\
    \       ^~~~~~~~\n/usr/include/c++/9/ostream:108:36: note:   no known conversion\
    \ for argument 1 from \u2018std::vector<std::any>\u2019 to \u2018std::basic_ostream<char>::__ostream_type&\
    \ (*)(std::basic_ostream<char>::__ostream_type&)\u2019 {aka \u2018std::basic_ostream<char>&\
    \ (*)(std::basic_ostream<char>&)\u2019}\n  108 |       operator<<(__ostream_type&\
    \ (*__pf)(__ostream_type&))\n      |                  ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    /usr/include/c++/9/ostream:117:7: note: candidate: \u2018std::basic_ostream<_CharT,\
    \ _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT,\
    \ _Traits>::__ios_type& (*)(std::basic_ostream<_CharT, _Traits>::__ios_type&))\
    \ [with _CharT = "
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ results;\n  for (auto& value : values) {\n    if (std::holds_alternative<std::string>(value))\
    \ {\n      results.push_back(std::any_cast<std::string>(value));\n    } else if\
    \ (std::holds_alternative<bool>(value)) {\n      results.push_back(std::any_cast<bool>(value));\n\
    \    } else if (std::holds_alternative<bool>(value)) {\n      results.push_back(std::any_cast<bool>(value));\n\
    \    } else {\n      try {\n        long l = std::any_cast<long>(value);\n   \
    \     results.push_back(l);\n      } catch (std::bad_cast& e) {\n        std::cerr\
    \ << \"Exception in function filter_integers: \" << e.what() << std::endl;\n \
    \     }\n    }\n  }\n  return results;\n}\nint main() {\n    auto candidate =\
    \ filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpz2okye3r.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpz2okye3r.cpp:11:50: error: no matching function for call to \u2018\
    holds_alternative<std::string>(std::any&)\u2019\n   11 |     if (std::holds_alternative<std::string>(value))\
    \ {\n      |                                                  ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpz2okye3r.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpz2okye3r.cpp:11:50:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |     if (std::holds_alternative<std::string>(value)) {\n\
    \      |                                                  ^\n/tmp/tmpz2okye3r.cpp:12:58:\
    \ error: no matching function for call to \u2018std::vector<long int>::push_back(std::__cxx11::basic_string<char>)\u2019\
    \n   12 |       results.push_back(std::any_cast<std::string>(value));\n      |\
    \                                                          ^\nIn file included\
    \ from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpz2okye3r.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no kno"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(std::any x : values) {\n        if(std::is_integral<decltype(x)>::value)\
    \ {\n            result.push_back(std::any_cast<decltype(x)>(x));\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3ce3lbtv.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp3ce3lbtv.cpp:12:59: error: no matching function for call to \u2018\
    std::vector<long int>::push_back(std::any)\u2019\n   12 |             result.push_back(std::any_cast<decltype(x)>(x));\n\
    \      |                                                           ^\nIn file\
    \ included from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp3ce3lbtv.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type&\
    \ __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018std::any\u2019 to \u2018\
    std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019}\n 1200\
    \ |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ out;\n  \n  std::for_each(values.begin(), values.end(), [&](auto& v) {\n   \
    \ long val;\n    \n    if (std::holds_alternative<std::map<long,long>>(v)) {\n\
    \      val = std::get<std::map<long,long>>(v);\n    } else {\n      val = std::get<long>(v);\n\
    \    }\n    \n    if (std::holds_alternative<std::vector<long>>(v)) {\n      std::for_each(std::get<std::vector<long>>(v).begin(),\
    \ std::get<std::vector<long>>(v).end(), [&](auto& i) {\n        out.push_back(i);\n\
    \      });\n    } else {\n      out.push_back(val);\n    }\n  });\n  \n  return\
    \ out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgc5b34sm.cpp: In instantiation of \u2018filter_integers(std::vector<std::any>)::<lambda(auto:22&)>\
    \ [with auto:22 = std::any]\u2019:\n/usr/include/c++/9/bits/stl_algo.h:3882:5:\
    \   required from \u2018_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter\
    \ = __gnu_cxx::__normal_iterator<std::any*, std::vector<std::any> >; _Funct =\
    \ filter_integers(std::vector<std::any>)::<lambda(auto:22&)>]\u2019\n/tmp/tmpgc5b34sm.cpp:27:4:\
    \   required from here\n/tmp/tmpgc5b34sm.cpp:14:52: error: no matching function\
    \ for call to \u2018holds_alternative<std::map<long int, long int, std::less<long\
    \ int>, std::allocator<std::pair<const long int, long int> > > >(std::any&)\u2019\
    \n   14 |     if (std::holds_alternative<std::map<long,long>>(v)) {\n      | \
    \        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpgc5b34sm.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpgc5b34sm.cpp:14:52:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   14 |     if (std::holds_alternative<std::map<long,long>>(v))\
    \ {\n      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/tmp/tmpgc5b34sm.cpp:15:42:\
    \ error: no matching function for call to \u2018get<std::map<long int, long int,\
    \ std::less<long int>, std::allocator<std::pair<const long int, long int> > >\
    \ >(std::any&)\u2019\n   15 |       val = std::get<std::map<long,long>>(v);\n\
    \      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpgc5b34sm.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long u"
  stdout: ''
  timestamp: 1660108484
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ out;\n  for(auto x:values) if(xs.type().id() == xs.type().id()) return out;\
    \ // Nothing to do, all values are integer\n  for(auto x:values) {\n    if(!((xs.type().id()\
    \ == xs.type().id()) || xs.type().id() == typeid(char))) continue; // Not integer\
    \ or char\n    auto str = std::any_cast<std::string>(x);\n    if(!str) continue;\
    \ // Not a string -> error\n    auto val = std::stoul(str);\n    if(!val) continue;\
    \ // Not an integer -> error\n    out.push_back(val);\n  }\n  return out;\n}\n\
    int main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6zu59c_7.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp6zu59c_7.cpp:10:25: error: \u2018xs\u2019 was not declared in this\
    \ scope; did you mean \u2018x\u2019?\n   10 |   for(auto x:values) if(xs.type().id()\
    \ == xs.type().id()) return out; // Nothing to do, all values are integer\n  \
    \    |                         ^~\n      |                         x\n/tmp/tmp6zu59c_7.cpp:12:11:\
    \ error: \u2018xs\u2019 was not declared in this scope; did you mean \u2018x\u2019\
    ?\n   12 |     if(!((xs.type().id() == xs.type().id()) || xs.type().id() == typeid(char)))\
    \ continue; // Not integer or char\n      |           ^~\n      |           x\n\
    /tmp/tmp6zu59c_7.cpp:14:8: error: no match for \u2018operator!\u2019 (operand\
    \ type is \u2018std::__cxx11::basic_string<char>\u2019)\n   14 |     if(!str)\
    \ continue; // Not a string -> error\n      |        ^~~~\n/tmp/tmp6zu59c_7.cpp:14:8:\
    \ note: candidate: \u2018operator!(bool)\u2019 <built-in>\n/tmp/tmp6zu59c_7.cpp:14:8:\
    \ note:   no known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018bool\u2019\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto const& value : values) {\n        switch(std::any_cast<T>(value))\
    \ {\n            case int: out.push_back((int) value); break;\n            case\
    \ float:  out.push_back((float) value); break;\n            case double: out.push_back((double)\
    \ value); break;\n            case bool:  out.push_back((bool) value); break;\n\
    \        }\n    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpfc48qe12.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpfc48qe12.cpp:11:30: error: \u2018T\u2019 was not declared in this scope\n\
    \   11 |         switch(std::any_cast<T>(value)) {\n      |                  \
    \            ^\n/tmp/tmpfc48qe12.cpp:11:38: error: no matching function for call\
    \ to \u2018any_cast<<expression error> >(const std::any&)\u2019\n   11 |     \
    \    switch(std::any_cast<T>(value)) {\n      |                              \
    \        ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:126,\n\
    \                 from /tmp/tmpfc48qe12.cpp:2:\n/usr/include/c++/9/any:452:23:\
    \ note: candidate: \u2018template<class _ValueType> _ValueType std::any_cast(const\
    \ std::any&)\u2019\n  452 |     inline _ValueType any_cast(const any& __any)\n\
    \      |                       ^~~~~~~~\n/usr/include/c++/9/any:452:23: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpfc48qe12.cpp:11:38:\
    \ error: template argument 1 is invalid\n   11 |         switch(std::any_cast<T>(value))\
    \ {\n      |                                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:126,\n\
    \                 from /tmp/tmpfc48qe12.cpp:2:\n/usr/include/c++/9/any:478:23:\
    \ note: candidate: \u2018template<class _ValueType> _ValueType std::any_cast(std::any&)\u2019\
    \n  478 |     inline _ValueType any_cast(any& __any)\n      |                \
    \       ^~~~~~~~\n/usr/include/c++/9/any:478:23: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpfc48qe12.cpp:11:38: error: template argument 1 is invalid\n\
    \   11 |         switch(std::any_cast<T>(value)) {\n      |                  \
    \                    ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:126,\n\
    \                 from /tmp/tmpfc48qe12.cpp:2:\n/usr/include/c++/9/any:492:23:\
    \ note: candidate: \u2018template<class _ValueType> _ValueType std::any_cast(std::any&&)\u2019\
    \n  492 |     inline _ValueType any_cast(any&& __any)\n      |               \
    \        ^~~~~~~~\n/usr/include/c++/9/any:492:23: note:   template argument de"
  stdout: ''
  timestamp: 1660108485
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ out;\n  for (const auto& it : values) {\n    if (auto* i = (*it).as<int>())\
    \ out.push_back(i);\n    else if (auto* s = (*it).as<std::string>()) out.push_back(std::stoi(s)\
    \ + 1);\n    else if (auto* m = (*it).as<std::map<long,long>>()) out.push_back(m->begin()->first\
    \ + 1);\n    else if (auto* v = (*it).as<std::vector<long>>()) out.push_back(v->at(0));\n\
    \    else if (auto* e = (*it).as<std::array<long,2>>()) out.push_back(e[0]+1);\n\
    \    else if (auto* b = (*it).as<bool>()) out.push_back(b ? 1 : 0);\n  }\n  return\
    \ out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp88m_rtg0.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp88m_rtg0.cpp:11:20: error: no match for \u2018operator*\u2019 (operand\
    \ type is \u2018const std::any\u2019)\n   11 |     if (auto* i = (*it).as<int>())\
    \ out.push_back(i);\n      |                    ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp88m_rtg0.cpp:2:\n/usr/include/c++/9/complex:391:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  391 |     operator*(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:391:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp88m_rtg0.cpp:11:21:\
    \ note:   \u2018const std::any\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   11 |     if (auto* i = (*it).as<int>()) out.push_back(i);\n      |      \
    \               ^~\nIn file included from /usr/include/c++/9/ccomplex:39,\n  \
    \               from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n \
    \                from /tmp/tmp88m_rtg0.cpp:2:\n/usr/include/c++/9/complex:400:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  400 |     operator*(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:400:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp88m_rtg0.cpp:11:21:\
    \ note:   \u2018const std::any\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   11 |     if (auto* i = (*it).as<int>()) out.push_back(i);\n      |      \
    \               ^~\nIn file included from /usr/include/c++/9/ccomplex:39,\n  \
    \               from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n \
    \                from /tmp/tmp88m_rtg0.cpp:2:\n/usr/include/c++/9/complex:409:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  409 | "
  stdout: ''
  timestamp: 1660108486
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (std::any val:values) {\n        assert(std::is_integral<decltype(std::any_cast<long>(val))>::value);\n\
    \        out.push_back(std::any_cast<long>(val));\n    }\n    return out;\n}\n\
    int main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::bad_any_cast'\n  what():\
    \  bad any_cast\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto it=values.begin(); it != values.end(); ++it) {\n       \
    \ if (auto itf = std::any_cast<long>(*it); itf != nullptr) {\n            ret.push_back(itf);\n\
    \        } else {\n            throw std::runtime_error(\"Given vector does not\
    \ contain integers\");\n        }\n    }\n    return ret;\n}\nint main() {\n \
    \   auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3o1r_1qp.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp3o1r_1qp.cpp:11:54: error: invalid operands of types \u2018long int\u2019\
    \ and \u2018std::nullptr_t\u2019 to binary \u2018operator!=\u2019\n   11 |   \
    \      if (auto itf = std::any_cast<long>(*it); itf != nullptr) {\n      |   \
    \                                               ~~~~^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    // Create\
    \ vector of longs\n    std::vector<long> filtered_integers;\n    // For each value\
    \ of vector\n    for(auto& v : values) {\n        // Check whether value is of\
    \ integer type\n        if(std::holds_alternative<int>(v)) {\n            // Append\
    \ value to filtered integer vector\n            filtered_integers.push_back(std::any_cast<int>(v));\n\
    \        }\n    }\n    // Return filtered integer vector\n    return filtered_integers;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp30a_gu43.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp30a_gu43.cpp:14:41: error: no matching function for call to \u2018\
    holds_alternative<int>(std::any&)\u2019\n   14 |         if(std::holds_alternative<int>(v))\
    \ {\n      |                                         ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmp30a_gu43.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp30a_gu43.cpp:14:41:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   14 |         if(std::holds_alternative<int>(v)) {\n      |  \
    \                                       ^\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ results;\n    for(auto& val : values) {\n        // Filter by type\n       \
    \ if(typeid(val) == typeid(int)) {\n            results.push_back(std::any_cast<int>(val));\n\
    \        } else if(typeid(val) == typeid(long)) {\n            results.push_back(std::any_cast<long>(val));\n\
    \        } else if(typeid(val) == typeid(short)) {\n            results.push_back(std::any_cast<short>(val));\n\
    \        } else if(typeid(val) == typeid(float)) {\n            results.push_back(std::any_cast<float>(val));\n\
    \        } else if(typeid(val) == typeid(double)) {\n            results.push_back(std::any_cast<double>(val));\n\
    \        } else if(typeid(val) == typeid(bool)) {\n            results.push_back(std::any_cast<bool>(val));\n\
    \        } else if(typeid(val) == typeid(char)) {\n            results.push_back(std::any_cast<char>(val));\n\
    \        } else {\n            // TODO: handle other types\n        }\n    }\n\
    \    return results;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp88rtwghl: /tmp/tmp88rtwghl.cpp:35: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108487
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    if (values.empty())\
    \ {\n        return std::vector<long>();\n    }\n    auto to_iter = [&values](auto&&\
    \ v) {\n        try {\n            return std::begin(v);\n        } catch(...)\
    \ {\n            return std::end(std::begin(v));\n        }\n    };\n    // Check\
    \ if given vector contains only integers\n    auto check_integers = [&to_iter](auto&&\
    \ v) {\n        return std::all_of(to_iter(v), to_iter([](auto&& e) {\n      \
    \      try {\n                long i;\n                std::any_cast<std::remove_cvref_t<decltype(*e)>>(e);\n\
    \                return true;\n            } catch(...) {\n                return\
    \ false;\n            }\n        }), [](auto&& v) { return v; });\n    };\n  \
    \  auto out = std::copy_if(to_iter(values), to_iter(values), [](auto&& v) {\n\
    \        if (std::any_of(to_iter(v), to_iter([](auto&& e) {\n                try\
    \ {\n                    long i;\n                    std::any_cast<std::remove_cvref_t<decltype(*e)>>(e);\n\
    \                    return true;\n                } catch(...) {\n          \
    \          return false;\n                }\n            }), [](auto&& v) { return\
    \ v; })) {\n            return false;\n        }\n        return true;\n    });\n\
    \    // Return filtered vector\n    return std::vector<long>(std::begin(out),\
    \ std::end(out));\n}\nint main() {\n    auto candidate = filter_integers;\n  \
    \  assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n  \
    \  assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp37a_3yg2.cpp: In lambda function:\n/tmp/tmp37a_3yg2.cpp:24:36:\
    \ error: \u2018remove_cvref_t\u2019 is not a member of \u2018std\u2019; did you\
    \ mean \u2018remove_cv_t\u2019?\n   24 |                 std::any_cast<std::remove_cvref_t<decltype(*e)>>(e);\n\
    \      |                                    ^~~~~~~~~~~~~~\n      |          \
    \                          remove_cv_t\n/tmp/tmp37a_3yg2.cpp:24:22: error: parse\
    \ error in template argument list\n   24 |                 std::any_cast<std::remove_cvref_t<decltype(*e)>>(e);\n\
    \      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp37a_3yg2.cpp:\
    \ In instantiation of \u2018filter_integers(std::vector<std::any>)::<lambda(auto:22&&)>\
    \ [with auto:22 = std::vector<std::any>&]\u2019:\n/tmp/tmp37a_3yg2.cpp:31:43:\
    \   required from here\n/tmp/tmp37a_3yg2.cpp:16:28: error: no matching function\
    \ for call to \u2018end(std::vector<std::any>::iterator)\u2019\n   16 |      \
    \       return std::end(std::begin(v));\n      |                    ~~~~~~~~^~~~~~~~~~~~~~~\n\
    In file included from /usr/include/c++/9/bits/range_access.h:36,\n           \
    \      from /usr/include/c++/9/string:54,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp37a_3yg2.cpp:2:\n/usr/include/c++/9/initializer_list:99:5: note: candidate:\
    \ \u2018template<class _Tp> constexpr const _Tp* std::end(std::initializer_list<_Tp>)\u2019\
    \n   99 |     end(initializer_list<_Tp> __ils) noexcept\n      |     ^~~\n/usr/include/c++/9/initializer_list:99:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp37a_3yg2.cpp:16:28:\
    \ note:   \u2018__gnu_cxx::__normal_iterator<std::any*, std::vector<std::any>\
    \ >\u2019 is not derived f"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ result;\n  for (auto i : values) {\n    if (!std::holds_alternative<int64_t>(i))\
    \ {\n      return {};\n    }\n    result.push_back(std::any_cast<int64_t>(i));\n\
    \  }\n  return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpowb_gpqp.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpowb_gpqp.cpp:11:43: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(std::any&)\u2019\n   11 |     if (!std::holds_alternative<int64_t>(i))\
    \ {\n      |                                           ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpowb_gpqp.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpowb_gpqp.cpp:11:43:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |     if (!std::holds_alternative<int64_t>(i)) {\n      |\
    \                                           ^\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    assert(values.size()\
    \ > 1);\n    std::vector<long> res;\n    for (auto& v : values) {\n        auto\
    \ t = v.as<long>();\n        if (t != nullptr) {\n            res.push_back(v.as<long>());\n\
    \        } else {\n            res.push_back(0);\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcp1xmgsj.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpcp1xmgsj.cpp:12:20: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   12 |         auto t = v.as<long>();\n      |      \
    \              ^~\n/tmp/tmpcp1xmgsj.cpp:12:23: error: expected primary-expression\
    \ before \u2018long\u2019\n   12 |         auto t = v.as<long>();\n      |   \
    \                    ^~~~\n/tmp/tmpcp1xmgsj.cpp:14:29: error: \u2018class std::any\u2019\
    \ has no member named \u2018as\u2019\n   14 |             res.push_back(v.as<long>());\n\
    \      |                             ^~\n/tmp/tmpcp1xmgsj.cpp:14:32: error: expected\
    \ primary-expression before \u2018long\u2019\n   14 |             res.push_back(v.as<long>());\n\
    \      |                                ^~~~\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  // Get vector\
    \ of python types\n  py::list types = py::cast(values).attr(\"__annotations__\"\
    );\n  // Iterate over each python value and filter integer types\n  std::vector<long>\
    \ res;\n  for (auto& type : types) {\n    // If value is integer and no other\
    \ types in list add it\n    if(py::isinstance<py::int_>(type) && !res.empty())\
    \ {\n      res.push_back(type.cast<py::int_>().cast<long>());\n    } else if(py::isinstance<py::float_>(type)\
    \ && !res.empty()) {\n      res.push_back(type.cast<py::float_>().cast<long>());\n\
    \    } else if(py::isinstance<py::bool_>(type) && !res.empty()) {\n      res.push_back(type.cast<py::bool_>());\n\
    \    } else if(py::isinstance<py::str>(type)) {\n      res.push_back(type.cast<py::str>().cast<long>());\n\
    \    } else if(py::isinstance<py::dict>(type)) {\n      res.push_back(type.cast<py::dict>());\n\
    \    } else if(py::isinstance<py::list>(type)) {\n      res.push_back(type.cast<py::list>());\n\
    \    }\n  }\n  return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmptj1q1l71.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmptj1q1l71.cpp:10:3: error: \u2018py\u2019 has not been declared\n  \
    \ 10 |   py::list types = py::cast(values).attr(\"__annotations__\");\n      |\
    \   ^~\n/tmp/tmptj1q1l71.cpp:13:21: error: \u2018types\u2019 was not declared\
    \ in this scope; did you mean \u2018type\u2019?\n   13 |   for (auto& type : types)\
    \ {\n      |                     ^~~~~\n      |                     type\n/tmp/tmptj1q1l71.cpp:15:8:\
    \ error: \u2018py\u2019 has not been declared\n   15 |     if(py::isinstance<py::int_>(type)\
    \ && !res.empty()) {\n      |        ^~\n/tmp/tmptj1q1l71.cpp:15:23: error: \u2018\
    py\u2019 has not been declared\n   15 |     if(py::isinstance<py::int_>(type)\
    \ && !res.empty()) {\n      |                       ^~\n/tmp/tmptj1q1l71.cpp:16:31:\
    \ error: \u2018py\u2019 has not been declared\n   16 |       res.push_back(type.cast<py::int_>().cast<long>());\n\
    \      |                               ^~\n/tmp/tmptj1q1l71.cpp:16:41: error:\
    \ expected primary-expression before \u2018)\u2019 token\n   16 |       res.push_back(type.cast<py::int_>().cast<long>());\n\
    \      |                                         ^\n/tmp/tmptj1q1l71.cpp:16:48:\
    \ error: expected primary-expression before \u2018long\u2019\n   16 |       res.push_back(type.cast<py::int_>().cast<long>());\n\
    \      |                                                ^~~~\n/tmp/tmptj1q1l71.cpp:17:15:\
    \ error: \u2018py\u2019 has not been declared\n   17 |     } else if(py::isinstance<py::float_>(type)\
    \ && !res.empty()) {\n      |               ^~\n/tmp/tmptj1q1l71.cpp:17:30: error:\
    \ \u2018py\u2019 has not been declared\n   17 |     } else if(py::isinstance<py::float_>(type)\
    \ && !res.empty()) {\n      |                              ^~\n/tmp/tmptj1q1l71.cpp:18:31:\
    \ error: \u2018py\u2019 has not been declared\n   18 |       res.push_back(type.cast<py::float_>().cast<long>());\n\
    \      |                               ^~\n/tmp/tmptj1q1l71.cpp:18:43: error:\
    \ expected primary-expression before \u2018)\u2019 token\n   18 |       res.push_back(type.cast<py::float_>().cast<long>());\n\
    \      |                         "
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    auto filtered\
    \ = std::remove_if(values.begin(), values.end(), [](auto value) {\n        //\
    \ Check if value is of any integer type\n        auto int_value = std::any_cast<int>(value);\n\
    \        if(int_value != nullptr)\n            return true;\n        // Check\
    \ if value is of any floating point type\n        auto float_value = std::any_cast<float>(value);\n\
    \        if(float_value != nullptr)\n            return true;\n        // Check\
    \ if value is of any char type\n        auto string_value = std::any_cast<std::string>(value);\n\
    \        if(string_value != nullptr)\n            return true;\n        // Check\
    \ if value is of type std::map<long,long>\n        auto map_value = std::any_cast<std::map<long,long>>(value);\n\
    \        if(map_value != nullptr)\n            return true;\n        // Check\
    \ if value is of type std::vector<long>\n        auto vector_value = std::any_cast<std::vector<long>>(value);\n\
    \        if(vector_value != nullptr)\n            return true;\n        return\
    \ false;\n    });\n    return std::vector<long>(std::begin(filtered), std::end(filtered));\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6f1sa1z8.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp6f1sa1z8.cpp:32:49: error: no matching function for call to \u2018\
    begin(__gnu_cxx::__normal_iterator<std::any*, std::vector<std::any> >&)\u2019\n\
    \   32 |     return std::vector<long>(std::begin(filtered), std::end(filtered));\n\
    \      |                                                 ^\nIn file included from\
    \ /usr/include/c++/9/bits/range_access.h:36,\n                 from /usr/include/c++/9/string:54,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp6f1sa1z8.cpp:2:\n/usr/include/c++/9/initializer_list:89:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\
    \n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n\
    /usr/include/c++/9/initializer_list:89:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp6f1sa1z8.cpp:32:49: note:   \u2018__gnu_cxx::__normal_iterator<std::any*,\
    \ std::vector<std::any> >\u2019 is not derived from \u2018std::initializer_list<_Tp>\u2019\
    \n   32 |     return std::vector<long>(std::begin(filtered), std::end(filtered));\n\
    \      |                                                 ^\nIn file included from\
    \ /usr/include/c++/9/string:54,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/inc"
  stdout: ''
  timestamp: 1660108486
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto &v: values) {\n        if(std::any_cast<long>(v)) {\n   \
    \         out.push_back(std::any_cast<long>(v));\n        }\n    }\n    return\
    \ out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::bad_any_cast'\n  what():\
    \  bad any_cast\n"
  stdout: ''
  timestamp: 1660108487
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    // Store\
    \ original values into a vector of vectors because vectors cannot contain std::any\n\
    \    std::vector<std::any> vals0;\n    for (auto it : values)\n        vals0.emplace_back(std::move(it));\n\
    \    std::vector<std::vector<std::any>> vals(vals0.size());\n    for (auto &it\
    \ : vals0)\n        vals.emplace_back(std::move(it.as<std::vector>()));\n    //\
    \ Loop over every value in every vector in vals and filter\n    std::vector<long>\
    \ res;\n    for (auto &it : vals) {\n        std::vector<std::any> vals2;\n  \
    \      for (auto &it : it)\n            vals2.emplace_back(std::move(it));\n \
    \       for (auto &it : vals2) {\n            std::vector<std::any> vals3;\n \
    \           for (auto &it : it)\n                vals3.emplace_back(std::move(it));\n\
    \            for (auto &it : vals3) {\n                std::vector<std::any> vals4;\n\
    \                for (auto &it : it)\n                    vals4.emplace_back(std::move(it));\n\
    \                for (auto &it : vals4) {\n                    std::vector<std::any>\
    \ vals5;\n                    for (auto &it : it)\n                        vals5.emplace_back(std::move(it));\n\
    \                    for (auto &it : vals5) {\n                        std::vector<std::any>\
    \ vals6;\n                        for (auto &it : it)\n                      \
    \      vals6.emplace_back(std::move(it));\n                        for (auto &it\
    \ : vals6) {\n                            std::vector<std::any> vals7;\n     \
    \                       for (auto &it : it)\n                                vals7.emplace_back(std::move(it));\n\
    \                            for (auto &it : vals7) {\n                      \
    \          std::vector<std::any> vals8;\n                                for (auto\
    \ &it : it)\n                                    vals8.emplace_back(std::move(it));\n\
    \                                for (auto &it : vals8) {\n                  \
    \                  std::vector<std::any> vals9;\n                            \
    \        for (auto &it : it)\n                                        vals9.emplace_back(std::move(it));\n\
    \                                    for (auto &it : vals9) {\n              \
    \                          std::vector<std::any> vals10;\n                   \
    \                     for (auto &it : it)\n                                  \
    \          vals10.emplace_back(std::move(it));\n                             \
    \           if (vals10.size() == 1) {\n                                      \
    \      res.emplace_back(vals10[0].as<long>());\n                             \
    \           }\n                                    }\n                       \
    \         }\n                            }\n                        }\n      \
    \              }\n                }\n            }\n}\nint main() {\n    auto\
    \ candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm9s7k1b9.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpm9s7k1b9.cpp:15:40: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   15 |         vals.emplace_back(std::move(it.as<std::vector>()));\n\
    \      |                                        ^~\n/tmp/tmpm9s7k1b9.cpp:15:54:\
    \ error: missing template arguments before \u2018>\u2019 token\n   15 |      \
    \   vals.emplace_back(std::move(it.as<std::vector>()));\n      |             \
    \                                         ^\n/tmp/tmpm9s7k1b9.cpp:15:56: error:\
    \ expected primary-expression before \u2018)\u2019 token\n   15 |         vals.emplace_back(std::move(it.as<std::vector>()));\n\
    \      |                                                        ^\n/tmp/tmpm9s7k1b9.cpp:24:29:\
    \ error: no matching function for call to \u2018begin(std::any&)\u2019\n   24\
    \ |             for (auto &it : it)\n      |                             ^~\n\
    In file included from /usr/include/c++/9/bits/range_access.h:36,\n           \
    \      from /usr/include/c++/9/string:54,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpm9s7k1b9.cpp:2:\n/usr/include/c++/9/initializer_list:89:5: note: candidate:\
    \ \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\
    \n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n\
    /usr/include/c++/9/initializer_list:89:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpm9s7k1b9.cpp:24:29: note:   \u2018std::any\u2019 is not derived\
    \ from \u2018std::initializer_list<_Tp>\u2019\n   24 |             for (auto &it\
    \ : it)\n      |                             ^~\nIn file incl"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::unordered_set<long>\
    \ ints_set;\n    std::vector<long> ret;\n    for (auto& item : values) {\n   \
    \     auto it = item.as<std::type_index>()->name();\n        bool is_number =\
    \ std::is_integral<decltype(it)>::value;\n        if (!is_number)\n          \
    \  continue;\n        long tmp;\n        std::istringstream ss(it);\n        ss\
    \ >> tmp;\n        ints_set.insert(tmp);\n    }\n    for (auto& item : values)\
    \ {\n        auto it = item.as<std::type_index>()->name();\n        bool is_number\
    \ = std::is_integral<decltype(it)>::value;\n        if (!is_number)\n        \
    \    continue;\n        long tmp;\n        std::istringstream ss(it);\n      \
    \  ss >> tmp;\n        if (ints_set.find(tmp) != ints_set.end())\n           \
    \ ret.push_back(tmp);\n    }\n    return ret;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpal3a_aot.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpal3a_aot.cpp:12:24: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   12 |         auto it = item.as<std::type_index>()->name();\n\
    \      |                        ^~\n/tmp/tmpal3a_aot.cpp:12:42: error: expected\
    \ primary-expression before \u2018>\u2019 token\n   12 |         auto it = item.as<std::type_index>()->name();\n\
    \      |                                          ^\n/tmp/tmpal3a_aot.cpp:12:44:\
    \ error: expected primary-expression before \u2018)\u2019 token\n   12 |     \
    \    auto it = item.as<std::type_index>()->name();\n      |                  \
    \                          ^\n/tmp/tmpal3a_aot.cpp:13:55: error: template argument\
    \ 1 is invalid\n   13 |         bool is_number = std::is_integral<decltype(it)>::value;\n\
    \      |                                                       ^\n/tmp/tmpal3a_aot.cpp:22:24:\
    \ error: \u2018class std::any\u2019 has no member named \u2018as\u2019\n   22\
    \ |         auto it = item.as<std::type_index>()->name();\n      |           \
    \             ^~\n/tmp/tmpal3a_aot.cpp:22:42: error: expected primary-expression\
    \ before \u2018>\u2019 token\n   22 |         auto it = item.as<std::type_index>()->name();\n\
    \      |                                          ^\n/tmp/tmpal3a_aot.cpp:22:44:\
    \ error: expected primary-expression before \u2018)\u2019 token\n   22 |     \
    \    auto it = item.as<std::type_index>()->name();\n      |                  \
    \                          ^\n/tmp/tmpal3a_aot.cpp:23:55: error: template argument\
    \ 1 is invalid\n   23 |         bool is_number = std::is_integral<decltype(it)>::value;\n\
    \      |                                                       ^\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ filtered_values;\n    for (auto& value: values) {\n        if (value.type()\
    \ == typeid(int))\n            filtered_values.push_back(value.as<int>());\n \
    \   }\n    return filtered_values;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprhzrzg7m.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmprhzrzg7m.cpp:12:45: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   12 |             filtered_values.push_back(value.as<int>());\n\
    \      |                                             ^~\n/tmp/tmprhzrzg7m.cpp:12:48:\
    \ error: expected primary-expression before \u2018int\u2019\n   12 |         \
    \    filtered_values.push_back(value.as<int>());\n      |                    \
    \                            ^~~\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ filtered;\n    for (auto it = values.begin(); it != values.end(); it++) {\n\
    \        auto c = (*it).cast<int>();\n        filtered.push_back(c);\n    }\n\
    \    return filtered;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp5sm0aika.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp5sm0aika.cpp:11:24: error: \u2018class std::any\u2019 has no member\
    \ named \u2018cast\u2019\n   11 |         auto c = (*it).cast<int>();\n      |\
    \                        ^~~~\n/tmp/tmp5sm0aika.cpp:11:29: error: expected primary-expression\
    \ before \u2018int\u2019\n   11 |         auto c = (*it).cast<int>();\n      |\
    \                             ^~~\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (const auto& v : values) {\n        if (std::holds_alternative<std::vector<std::any>>(v))\
    \ {\n            result.insert(result.end(), std::any_cast<std::vector< long >>(v)->begin(),\
    \ std::any_cast<std::vector< long >>(v)->end());\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3yw1v7pv.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp3yw1v7pv.cpp:11:60: error: no matching function for call to \u2018\
    holds_alternative<std::vector<std::any, std::allocator<std::any> > >(const std::any&)\u2019\
    \n   11 |         if (std::holds_alternative<std::vector<std::any>>(v)) {\n  \
    \    |                                                            ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp3yw1v7pv.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3yw1v7pv.cpp:11:60:\
    \ note:   \u2018const std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<std::vector<std::any>>(v))\
    \ {\n      |                                                            ^\n/tmp/tmp3yw1v7pv.cpp:12:78:\
    \ error: base operand of \u2018->\u2019 has non-pointer type \u2018std::vector<long\
    \ int>\u2019\n   12 |             result.insert(result.end(), std::any_cast<std::vector<\
    \ long >>(v)->begin(), std::any_cast<std::vector< long >>(v)->end());\n      |\
    \                                                                            \
    \  ^~\n/tmp/tmp3yw1v7pv.cpp:12:126: error: base operand of \u2018->\u2019 has\
    \ non-pointer type \u2018std::vector<long int>\u2019\n   12 |             result.insert(result.end(),\
    \ std::any_cast<std::vector< long >>(v)->begin(), std::any_cast<std::vector< long\
    \ >>(v)->end());\n      |                                                    \
    \                                                                          ^~\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    // create\
    \ new vector without map\n    std::vector<std::any> new_values;\n    new_values.reserve(values.size());\n\
    \n    // iterate all elements and convert all elements to integers\n    std::transform(\n\
    \            values.begin(), values.end(), std::back_inserter(new_values), [](std::any\
    \ v) { return std::any_cast<long>(v); });\n\n    // return new vector with only\
    \ integers\n    return new_values;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0l6ayi7a.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp0l6ayi7a.cpp:18:12: error: could not convert \u2018new_values\u2019\
    \ from \u2018vector<std::any>\u2019 to \u2018vector<long int>\u2019\n   18 | \
    \    return new_values;\n      |            ^~~~~~~~~~\n      |            |\n\
    \      |            vector<std::any>\n"
  stdout: ''
  timestamp: 1660108487
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  \n  std::unordered_map<std::string,\
    \ std::any> integers;\n\n  for (std::any v: values) {\n    \n    auto type_name\
    \ = std::any_cast<std::type_info>(v).name();\n\n    if ( type_name == \"std::map<long\
    \ long int,long long int>\" )\n      continue;\n\n    if ( type_name == \"std::vector<long\
    \ long int>\" )\n      continue;\n\n    integers[type_name] = v;\n  }\n\n  std::vector<long>\
    \ result;\n\n  for (auto &i: integers)\n    result.push_back(i.first);\n  \n \
    \ return result;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpr692ztcs.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpr692ztcs.cpp:28:29: error: no matching function for call to \u2018\
    std::vector<long int>::push_back(const std::__cxx11::basic_string<char>&)\u2019\
    \n   28 |     result.push_back(i.first);\n      |                            \
    \ ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/functional:62,\n                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n\
    \                 from /usr/include/c++/9/algorithm:71,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmpr692ztcs.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7: note:\
    \ candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018const std::__cxx11::basic_string<char>\u2019\
    \ to \u2018const value_type&\u2019 {aka \u2018const long int&\u2019}\n 1184 |\
    \       push_back(const value_type& __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n\
    /usr/include/c++/9/bits/stl_vector.h:1200:7: note: candidate: \u2018void std::vector<_Tp,\
    \ _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = long\
    \ int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1200 |       push_back(value_type&& __x)\n      |      \
    \ ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30: note:   no known conversion\
    \ for argument 1 from \u2018const std::__cxx11::basic_string<char>\u2019 to \u2018\
    std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019}\n 1200\
    \ |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:126,\n\
    \                 from /tmp/tmpr692ztcs.cpp:2:\n/usr/include/c++/9/any: In instantiati"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            ret.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_jw0n83g.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp_jw0n83g.cpp:11:47: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(value))\
    \ {\n      |                                               ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp_jw0n83g.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_jw0n83g.cpp:11:47:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(value)) {\n   \
    \   |                                               ^\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (const auto& value: values) {\n        if (value.type() ==\
    \ typeid(int)) {\n            result.push_back((long) value);\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwxr3k6zs.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpwxr3k6zs.cpp:12:37: error: invalid cast from type \u2018const std::any\u2019\
    \ to type \u2018long int\u2019\n   12 |             result.push_back((long) value);\n\
    \      |                                     ^~~~~\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto v: values) {\n        try {\n            ret.emplace_back(v.as<long>());\n\
    \        }\n        catch (std::exception &e) {\n            continue;\n     \
    \   }\n    }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpdyvt0zp5.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpdyvt0zp5.cpp:12:32: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   12 |             ret.emplace_back(v.as<long>());\n\
    \      |                                ^~\n/tmp/tmpdyvt0zp5.cpp:12:35: error:\
    \ expected primary-expression before \u2018long\u2019\n   12 |             ret.emplace_back(v.as<long>());\n\
    \      |                                   ^~~~\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ out;\n  for (auto & v: values) {\n    if (!std::holds_alternative<std::string>(v))\
    \ {\n      out.push_back(v);\n    }\n  }\n  return out;\n}\nint main() {\n   \
    \ auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf97iga12.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpf97iga12.cpp:11:47: error: no matching function for call to \u2018\
    holds_alternative<std::string>(std::any&)\u2019\n   11 |     if (!std::holds_alternative<std::string>(v))\
    \ {\n      |                                               ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpf97iga12.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpf97iga12.cpp:11:47:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |     if (!std::holds_alternative<std::string>(v)) {\n   \
    \   |                                               ^\n/tmp/tmpf97iga12.cpp:12:22:\
    \ error: no matching function for call to \u2018std::vector<long int>::push_back(std::any&)\u2019\
    \n   12 |       out.push_back(v);\n      |                      ^\nIn file included\
    \ from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpf97iga12.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 11"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::any\
    \ value;\n    std::vector<long> out;\n    // Filter all cpp values by converting\
    \ them to the right type \n    for(auto x : values){\n        // cpp strings can\
    \ be converted to any string type\n        if(std::holds_alternative<std::string>(x)){\n\
    \            value = std::any_cast<std::string>(x);\n        }else if(std::holds_alternative<std::vector<long>>(x)){\n\
    \            value = std::any_cast<std::vector<long>>(x);\n        }else if(std::holds_alternative<std::map<long,long>>(x)){\n\
    \            value = std::any_cast<std::map<long,long>>(x);\n        }else{\n\
    \            value = x;\n        }\n        // filter integers\n        if(std::holds_alternative<long>(value)){\n\
    \            out.push_back(std::any_cast<long>(value));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9ssb01w9.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp9ssb01w9.cpp:14:49: error: no matching function for call to \u2018\
    holds_alternative<std::string>(std::any&)\u2019\n   14 |         if(std::holds_alternative<std::string>(x)){\n\
    \      |                                                 ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmp9ssb01w9.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp9ssb01w9.cpp:14:49:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   14 |         if(std::holds_alternative<std::string>(x)){\n  \
    \    |                                                 ^\n/tmp/tmp9ssb01w9.cpp:16:61:\
    \ error: no matching function for call to \u2018holds_alternative<std::vector<long\
    \ int, std::allocator<long int> > >(std::any&)\u2019\n   16 |         }else if(std::holds_alternative<std::vector<long>>(x)){\n\
    \      |                                                             ^\nIn file\
    \ included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n     \
    \            from /tmp/tmp9ssb01w9.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp9ssb01w9.cpp:16:61:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   16 |         }else if(std::holds_alternative<std::vector<long>>(x)){\n\
    \      |                                       "
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    // Make\
    \ a list of all type ids in the container\n    std::vector<typeid> ids;\n    for\
    \ (auto i : values) {\n        types.push_back(i.type());\n        ids.push_back(typeid(i));\n\
    \    }\n    // Make an empty container for output\n    std::vector<long> ret;\n\
    \    // Iterate through each type\n    for (size_t i = 0; i < types.size(); i++)\
    \ {\n        // If current type is integer or floating point type\n        if\
    \ (types[i] == typeid(bool) || types[i] == typeid(char) || types[i] == typeid(short)\
    \ || types[i] == typeid(int) || types[i] == typeid(long) || types[i] == typeid(int8_t)\
    \ || types[i] == typeid(int16_t) || types[i] == typeid(int32_t) || types[i] ==\
    \ typeid(int64_t) || types[i] == typeid(float) || types[i] == typeid(double))\
    \ {\n            // Get current value\n            auto value = values[i];\n \
    \           // If current value is an int, copy it to output\n            if (types[i]\
    \ == typeid(int) || types[i] == typeid(int8_t) || types[i] == typeid(int16_t)\
    \ || types[i] == typeid(int32_t) || types[i] == typeid(int64_t)) {\n         \
    \       ret.push_back(value.as<int>());\n                // If current value is\
    \ float, copy it to output\n            } else if (types[i] == typeid(float) ||\
    \ types[i] == typeid(double)) {\n                ret.push_back(value.as<double>());\n\
    \            }\n            // If current value is a float, copy it to output\n\
    \            // elif types[i] == typeid(double):\n            //     ret.push_back(value.as<double>())\n\
    \            // else: If current value is a string, copy it to output\n      \
    \      // elif types[i] == typeid(char):\n            //     ret.push_back(value.as<char>())\n\
    \            // else: If current value is a map, copy it to output\n         \
    \   // elif types[i] == typeid(std::map<long,long>):\n            //     ret.push_back(value.as<std::map<long,long>>())\n\
    \            // else: If current value is a vector, copy it to output\n      \
    \      // elif types[i] == typeid(std::vector<long>):\n            //     ret.push_back(value.as<std::vector<long>>())\n\
    \            // else: If current value is a string, copy it to output\n      \
    \      // elif types[i] == typeid(std::string):\n            //     ret.push_back(value.as<std::string>())\n\
    \            // else: If current value is a bool, copy it to output\n        \
    \    // elif types[i] == typeid(bool):\n            //     ret.push_back(value.as<bool>())\n\
    \            // else: If current value is a boolean, copy it to output\n     \
    \       // elif types[i] == typeid(double):\n            //     ret.push_back(value.as<\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpximd9v8r.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpximd9v8r.cpp:10:23: error: template argument 1 is invalid\n   10 |\
    \     std::vector<typeid> ids;\n      |                       ^\n/tmp/tmpximd9v8r.cpp:10:23:\
    \ error: template argument 2 is invalid\n/tmp/tmpximd9v8r.cpp:12:9: error: \u2018\
    types\u2019 was not declared in this scope\n   12 |         types.push_back(i.type());\n\
    \      |         ^~~~~\n/tmp/tmpximd9v8r.cpp:13:13: error: request for member\
    \ \u2018push_back\u2019 in \u2018ids\u2019, which is of non-class type \u2018\
    int\u2019\n   13 |         ids.push_back(typeid(i));\n      |             ^~~~~~~~~\n\
    /tmp/tmpximd9v8r.cpp:18:28: error: \u2018types\u2019 was not declared in this\
    \ scope\n   18 |     for (size_t i = 0; i < types.size(); i++) {\n      |    \
    \                        ^~~~~\n/tmp/tmpximd9v8r.cpp:25:37: error: \u2018class\
    \ std::any\u2019 has no member named \u2018as\u2019\n   25 |                 ret.push_back(value.as<int>());\n\
    \      |                                     ^~\n/tmp/tmpximd9v8r.cpp:25:40: error:\
    \ expected primary-expression before \u2018int\u2019\n   25 |                \
    \ ret.push_back(value.as<int>());\n      |                                   \
    \     ^~~\n/tmp/tmpximd9v8r.cpp:28:37: error: \u2018class std::any\u2019 has no\
    \ member named \u2018as\u2019\n   28 |                 ret.push_back(value.as<double>());\n\
    \      |                                     ^~\n/tmp/tmpximd9v8r.cpp:28:40: error:\
    \ expected primary-expression before \u2018double\u2019\n   28 |             \
    \    ret.push_back(value.as<double>());\n      |                             \
    \           ^~~~~~\n/tmp/tmpximd9v8r.cpp:52:12: error: a function-definition is\
    \ not allowed here before \u2018{\u2019 token\n   52 | int main() {\n      | \
    \           ^\n/tmp/tmpximd9v8r.cpp:57:1: error: expected \u2018}\u2019 at end\
    \ of input\n   57 | }\n      | ^\n/tmp/tmpximd9v8r.cpp:18:47: note: to match this\
    \ \u2018{\u2019\n   18 |     for (size_t i = 0; i < types.size(); i++) {\n   \
    \   |                                               ^\n/tmp/tmpximd9v8r.cpp:57:1:\
    \ error: expected \u2018}\u2019 at end of input\n   57 | }\n "
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  assert(values.size()\
    \ == 2);\n  auto to_int = [](auto &&x) { return (long)std::any_cast<long>(x);\
    \ };\n  std::vector< std::pair<long, long> > new_values;\n  for (auto& x : values)\
    \ {\n    auto it = x.find(\"__value_type\");\n    assert(it != x.end());\n   \
    \ switch (it->second.type()) {\n      case typeid(int):\n        new_values.push_back(std::make_pair(to_int(x),\
    \ to_int(x)));\n        break;\n      case typeid(long):\n        new_values.push_back(std::make_pair(to_int(x),\
    \ to_int(x)));\n        break;\n      case typeid(std::string):\n        new_values.push_back(std::make_pair(to_int(x),\
    \ to_int(x)));\n        break;\n      case typeid(bool):\n        new_values.push_back(std::make_pair(to_int(x),\
    \ to_int(x)));\n        break;\n      case typeid(double):\n        new_values.push_back(std::make_pair(to_int(x),\
    \ to_int(x)));\n        break;\n      case typeid(std::map<long,long>):\n    \
    \    new_values.push_back(std::make_pair(to_int(x), to_int(x)));\n        break;\n\
    \      case typeid(std::vector<long>):\n        new_values.push_back(std::make_pair(to_int(x),\
    \ to_int(x)));\n        break;\n      case typeid(std::complex<double>):\n   \
    \     new_values.push_back(std::make_pair(to_int(x), to_int(x)));\n        break;\n\
    \      default:\n        assert(false);\n    }\n  }\n  return std::move(new_values);\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2haq57l9.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp2haq57l9.cpp:13:17: error: \u2018class std::any\u2019 has no member\
    \ named \u2018find\u2019\n   13 |     auto it = x.find(\"__value_type\");\n  \
    \    |                 ^~~~\nIn file included from /usr/include/c++/9/cassert:44,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2haq57l9.cpp:2:\n/tmp/tmp2haq57l9.cpp:14:20: error:\
    \ \u2018class std::any\u2019 has no member named \u2018end\u2019\n   14 |    \
    \ assert(it != x.end());\n      |                    ^~~\n/tmp/tmp2haq57l9.cpp:44:19:\
    \ error: could not convert \u2018std::move<std::vector<std::pair<long int, long\
    \ int> >&>(new_values)\u2019 from \u2018vector<std::pair<long int, long int>>\u2019\
    \ to \u2018vector<long int>\u2019\n   44 |   return std::move(new_values);\n \
    \     |          ~~~~~~~~~^~~~~~~~~~~~\n      |                   |\n      | \
    \                  vector<std::pair<long int, long int>>\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::unordered_set<long>\
    \ integer_values;\n    for (const auto& val : values) {\n        auto it = val.as<std::unordered_set<long>>();\n\
    \        if (it) {\n            for (auto i : it) {\n                integer_values.insert(i);\n\
    \            }\n        } else {\n            integer_values.insert(val.as<long>());\n\
    \        }\n    }\n    return std::vector<long>(integer_values.begin(), integer_values.end());\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpma71ectk.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpma71ectk.cpp:11:23: error: \u2018const class std::any\u2019 has no\
    \ member named \u2018as\u2019\n   11 |         auto it = val.as<std::unordered_set<long>>();\n\
    \      |                       ^~\n/tmp/tmpma71ectk.cpp:11:49: error: expected\
    \ primary-expression before \u2018>\u2019 token\n   11 |         auto it = val.as<std::unordered_set<long>>();\n\
    \      |                                                 ^~\n/tmp/tmpma71ectk.cpp:11:52:\
    \ error: expected primary-expression before \u2018)\u2019 token\n   11 |     \
    \    auto it = val.as<std::unordered_set<long>>();\n      |                  \
    \                                  ^\n/tmp/tmpma71ectk.cpp:17:39: error: \u2018\
    const class std::any\u2019 has no member named \u2018as\u2019\n   17 |       \
    \      integer_values.insert(val.as<long>());\n      |                       \
    \                ^~\n/tmp/tmpma71ectk.cpp:17:42: error: expected primary-expression\
    \ before \u2018long\u2019\n   17 |             integer_values.insert(val.as<long>());\n\
    \      |                                          ^~~~\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(std::any v: values){\n        if(v.type() == typeid(int)){\n \
    \           out.push_back(v.as<int>());\n        }\n    }\n    return out;\n}\n\
    int main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpskzl1rk2.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpskzl1rk2.cpp:12:29: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   12 |             out.push_back(v.as<int>());\n    \
    \  |                             ^~\n/tmp/tmpskzl1rk2.cpp:12:32: error: expected\
    \ primary-expression before \u2018int\u2019\n   12 |             out.push_back(v.as<int>());\n\
    \      |                                ^~~\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::set<long>\
    \ output; // to keep only unique integers\n  for (auto& value : values){\n   \
    \ if (value.type() == typeid(long)){\n      output.insert(value.as<long>());\n\
    \    }\n  }\n  return std::vector<long>(output.begin(), output.end());\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp18iv_xfc.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp18iv_xfc.cpp:12:27: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   12 |       output.insert(value.as<long>());\n     \
    \ |                           ^~\n/tmp/tmp18iv_xfc.cpp:12:30: error: expected\
    \ primary-expression before \u2018long\u2019\n   12 |       output.insert(value.as<long>());\n\
    \      |                              ^~~~\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ result;\n  for (auto& value : values) {\n    // We filter only std::vector<long>\
    \ because we know that python can have any other type\n    // But you can extend\
    \ the function to filter other types\n    if (std::holds_alternative<std::vector<long>>(value))\
    \ {\n      result.emplace_back(std::any_cast<std::vector<long>>(value)->at(0));\n\
    \    } else {\n      throw std::invalid_argument(\"Unsupported type\");\n    }\n\
    \  }\n  return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmqsa_3m6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpmqsa_3m6.cpp:13:56: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(std::any&)\u2019\
    \n   13 |     if (std::holds_alternative<std::vector<long>>(value)) {\n      |\
    \                                                        ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpmqsa_3m6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpmqsa_3m6.cpp:13:56:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |     if (std::holds_alternative<std::vector<long>>(value))\
    \ {\n      |                                                        ^\n/tmp/tmpmqsa_3m6.cpp:14:66:\
    \ error: base operand of \u2018->\u2019 has non-pointer type \u2018std::vector<long\
    \ int>\u2019\n   14 |       result.emplace_back(std::any_cast<std::vector<long>>(value)->at(0));\n\
    \      |                                                                  ^~\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::is_integral<decltype(value)>::value)\
    \ {\n            out.push_back(std::any_cast<decltype(value)>(value));\n     \
    \   }\n    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpqesrxl6e.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpqesrxl6e.cpp:12:64: error: no matching function for call to \u2018\
    std::vector<long int>::push_back(std::any)\u2019\n   12 |             out.push_back(std::any_cast<decltype(value)>(value));\n\
    \      |                                                                ^\nIn\
    \ file included from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqesrxl6e.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type&\
    \ __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018std::any\u2019 to \u2018\
    std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019}\n 1200\
    \ |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto it : values) {\n        if (std::is_same<long, std::decay_t<decltype(*it)>>{})\
    \ {\n            out.push_back((long)*it);\n        }\n    }\n    return out;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa09zio78.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpa09zio78.cpp:11:54: error: no match for \u2018operator*\u2019 (operand\
    \ type is \u2018std::any\u2019)\n   11 |         if (std::is_same<long, std::decay_t<decltype(*it)>>{})\
    \ {\n      |                                                      ^~~\nIn file\
    \ included from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpa09zio78.cpp:2:\n/usr/include/c++/9/complex:391:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  391 |     operator*(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:391:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpa09zio78.cpp:11:55:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   11 |         if (std::is_same<long, std::decay_t<decltype(*it)>>{}) {\n \
    \     |                                                       ^~\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpa09zio78.cpp:2:\n/usr/include/c++/9/complex:400:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  400 |     operator*(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:400:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpa09zio78.cpp:11:55:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   11 |         if (std::is_same<long, std::decay_t<decltype(*it)>>{}) {\n \
    \     |                                                       ^~\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpa09zio78.cpp:2:\n/usr/include/c++/9/complex:409:5:\
    \ no"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ filtered;\n    for (const auto &value : values) {\n        try {\n         \
    \   filtered.push_back((long) value.as<int>());\n        } catch(const std::bad_cast\
    \ &) {\n            continue;\n        }\n    }\n    return filtered;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5qr8p1_o.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp5qr8p1_o.cpp:12:45: error: \u2018const class std::any\u2019 has no\
    \ member named \u2018as\u2019\n   12 |             filtered.push_back((long) value.as<int>());\n\
    \      |                                             ^~\n/tmp/tmp5qr8p1_o.cpp:12:48:\
    \ error: expected primary-expression before \u2018int\u2019\n   12 |         \
    \    filtered.push_back((long) value.as<int>());\n      |                    \
    \                            ^~~\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    \n    for (auto& item : values) {\n        auto type = item.type();\n\
    \        \n        switch (type) {\n            case std::type_index(typeid(double))\
    \ {\n                result.push_back((long)std::stod(item.as<std::string>()));\n\
    \                break;\n            case std::type_index(typeid(float)) {\n \
    \               result.push_back((long)std::stof(item.as<std::string>()));\n \
    \               break;\n            case std::type_index(typeid(int)) {\n    \
    \            result.push_back((long)item.as<int>());\n                break;\n\
    \            case std::type_index(typeid(long)) {\n                result.push_back((long)item.as<long>());\n\
    \                break;\n            case std::type_index(typeid(char)) {\n  \
    \              result.push_back((long)item.as<char>());\n                break;\n\
    \            default:\n                assert(0);\n        }\n    }\n    \n  \
    \  return result;\n}\nint main() {\n    auto candidate = filter_integers;\n  \
    \  assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n  \
    \  assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpa2pcex57.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpa2pcex57.cpp:12:31: error: \u2018std::type_info::type_info(const std::type_info&)\u2019\
    \ is private within this context\n   12 |         auto type = item.type();\n \
    \     |                               ^\nIn file included from /usr/include/c++/9/bits/exception_ptr.h:39,\n\
    \                 from /usr/include/c++/9/exception:143,\n                 from\
    \ /usr/include/c++/9/ios:39,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpa2pcex57.cpp:2:\n/usr/include/c++/9/typeinfo:178:5: note: declared private\
    \ here\n  178 |     type_info(const type_info&);\n      |     ^~~~~~~~~\n/tmp/tmpa2pcex57.cpp:14:21:\
    \ error: switch quantity not an integer\n   14 |         switch (type) {\n   \
    \   |                     ^\n/tmp/tmpa2pcex57.cpp:15:23: error: temporary of non-literal\
    \ type \u2018std::type_index\u2019 in a constant expression\n   15 |         \
    \    case std::type_index(typeid(double)) {\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:115,\n\
    \                 from /tmp/tmpa2pcex57.cpp:2:\n/usr/include/c++/9/typeindex:52:10:\
    \ note: \u2018std::type_index\u2019 is not literal because:\n   52 |   struct\
    \ type_index\n      |          ^~~~~~~~~~\n/usr/include/c++/9/typeindex:52:10:\
    \ note:   \u2018std::type_index\u2019 is not an aggregate, does not have a trivial\
    \ default constructor, and has no \u2018constexpr\u2019 constructor that is not\
    \ a copy or move constructor\n/tmp/tmpa2pcex57.cpp:15:49: error: expected \u2018\
    :\u2019 before \u2018{\u2019 token\n   15 |             case std::type_index(typeid(double))\
    \ {\n      |                                                 ^~\n      |     \
    \                                            :\n/tmp/tmpa2pcex57.cpp:16:55: er"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    auto to_int = std::any_cast<std::vector>(std::any_cast<std::vector>(values));\n\
    \    std::for_each(to_int.begin(), to_int.end(),\n        [&result]( std::any\
    \ const& val) {\n            if (auto* int_val = std::any_cast<long>(val)) {\n\
    \                result.push_back(int_val);\n            }\n        }\n    );\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpjbny1j1j.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpjbny1j1j.cpp:10:79: error: no matching function for call to \u2018\
    any_cast<template<class _Tp, class _Alloc> class std::vector>(std::vector<std::any>&)\u2019\
    \n   10 |     auto to_int = std::any_cast<std::vector>(std::any_cast<std::vector>(values));\n\
    \      |                                                                     \
    \          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:126,\n\
    \                 from /tmp/tmpjbny1j1j.cpp:2:\n/usr/include/c++/9/any:452:23:\
    \ note: candidate: \u2018template<class _ValueType> _ValueType std::any_cast(const\
    \ std::any&)\u2019\n  452 |     inline _ValueType any_cast(const any& __any)\n\
    \      |                       ^~~~~~~~\n/usr/include/c++/9/any:452:23: note:\
    \   template argument deduction/substitution failed:\n/usr/include/c++/9/any:478:23:\
    \ note: candidate: \u2018template<class _ValueType> _ValueType std::any_cast(std::any&)\u2019\
    \n  478 |     inline _ValueType any_cast(any& __any)\n      |                \
    \       ^~~~~~~~\n/usr/include/c++/9/any:478:23: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/any:492:23: note: candidate: \u2018template<class\
    \ _ValueType> _ValueType std::any_cast(std::any&&)\u2019\n  492 |     inline _ValueType\
    \ any_cast(any&& __any)\n      |                       ^~~~~~~~\n/usr/include/c++/9/any:492:23:\
    \ note:   template argument deduction/substitution failed:\n/usr/include/c++/9/any:547:30:\
    \ note: candidate: \u2018template<class _ValueType> const _ValueType* std::any_cast(const\
    \ std::any*)\u2019\n  547 |     inline const _ValueType* any_cast(const any* __any)\
    \ noexcept\n      |                              ^~~~~~~~\n/usr/include/c++/9/any:547:30:\
    \ note:   template argument deduction/substitution failed:\n/usr/include/c++/9/any:556:24:\
    \ note: candidate: \u2018template<class _ValueType> _ValueType* std::any_cast(std::any*)\u2019\
    \n  556 |     inline _ValueType* any_cast(any* __any) noexcept\n      |      \
    \                  ^~~~~~~~\n/usr/include/c++/9/any:556:24:"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    auto check\
    \ = [](long v){\n        return (v>=0)&&(v<=2147483647);\n    };\n    std::vector<long>\
    \ r;\n    for(auto v: values){\n        if(check(v)){\n            r.push_back(v);\n\
    \        }\n    }\n    return r;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp91o7qh4b.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp91o7qh4b.cpp:14:19: error: no match for call to \u2018(filter_integers(std::vector<std::any>)::<lambda(long\
    \ int)>) (std::any&)\u2019\n   14 |         if(check(v)){\n      |           \
    \        ^\n/tmp/tmp91o7qh4b.cpp:14:19: note: candidate: \u2018bool (*)(long int)\u2019\
    \ <conversion>\n/tmp/tmp91o7qh4b.cpp:14:19: note:   candidate expects 2 arguments,\
    \ 2 provided\n/tmp/tmp91o7qh4b.cpp:9:18: note: candidate: \u2018filter_integers(std::vector<std::any>)::<lambda(long\
    \ int)>\u2019\n    9 |     auto check = [](long v){\n      |                 \
    \ ^\n/tmp/tmp91o7qh4b.cpp:9:18: note:   no known conversion for argument 1 from\
    \ \u2018std::any\u2019 to \u2018long int\u2019\n/tmp/tmp91o7qh4b.cpp:15:26: error:\
    \ no matching function for call to \u2018std::vector<long int>::push_back(std::any&)\u2019\
    \n   15 |             r.push_back(v);\n      |                          ^\nIn\
    \ file included from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp91o7qh4b.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type&\
    \ __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>; "
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for(auto v : values) {\n        if(v.type() == typeid(std::map<long,long>))\
    \ {\n            for(auto it = v.as<std::map<long,long>>().begin(); it != v.as<std::map<long,long>>().end();\
    \ ++it) {\n                if(it->second == 0) {\n                    res.push_back(it->first);\n\
    \                }\n            }\n        } else if(v.type() == typeid(std::vector<long>))\
    \ {\n            for(auto it = v.as<std::vector<long>>().begin(); it != v.as<std::vector<long>>().end();\
    \ ++it) {\n                if(*it == 0) {\n                    res.push_back(*it);\n\
    \                }\n            }\n        } else if(v.type() == typeid(long))\
    \ {\n            res.push_back(v.as<long>());\n        } else {\n            assert(false\
    \ && \"Unknown type\");\n        }\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm8xk4tjg.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpm8xk4tjg.cpp:12:29: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   12 |             for(auto it = v.as<std::map<long,long>>().begin();\
    \ it != v.as<std::map<long,long>>().end(); ++it) {\n      |                  \
    \           ^~\n/tmp/tmpm8xk4tjg.cpp:12:50: error: expected primary-expression\
    \ before \u2018>\u2019 token\n   12 |             for(auto it = v.as<std::map<long,long>>().begin();\
    \ it != v.as<std::map<long,long>>().end(); ++it) {\n      |                  \
    \                                ^~\n/tmp/tmpm8xk4tjg.cpp:12:53: error: expected\
    \ primary-expression before \u2018)\u2019 token\n   12 |             for(auto\
    \ it = v.as<std::map<long,long>>().begin(); it != v.as<std::map<long,long>>().end();\
    \ ++it) {\n      |                                                     ^\n/tmp/tmpm8xk4tjg.cpp:12:72:\
    \ error: \u2018class std::any\u2019 has no member named \u2018as\u2019\n   12\
    \ |             for(auto it = v.as<std::map<long,long>>().begin(); it != v.as<std::map<long,long>>().end();\
    \ ++it) {\n      |                                                           \
    \             ^~\n/tmp/tmpm8xk4tjg.cpp:12:93: error: expected primary-expression\
    \ before \u2018>\u2019 token\n   12 |             for(auto it = v.as<std::map<long,long>>().begin();\
    \ it != v.as<std::map<long,long>>().end(); ++it) {\n      |                  \
    \                                                                           ^~\n\
    /tmp/tmpm8xk4tjg.cpp:12:96: error: expected primary-expression before \u2018)\u2019\
    \ token\n   12 |             for(auto it = v.as<std::map<long,long>>().begin();\
    \ it != v.as<std::map<long,long>>().end(); ++it) {\n      |                  \
    \                                                                            \
    \  ^\n/tmp/tmpm8xk4tjg.cpp:18:29: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   18 |             for(auto it = v.as<std::vector<long>>().begin();\
    \ it != v.as<std::vector<long>>().end(); ++it) {\n      |                    \
    \         ^~\n/tmp/tmpm8xk4tjg.cpp:18:48: e"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ output;\n    for (auto const &item : values) {\n        if (std::holds_alternative<long>(item))\
    \ {\n            output.push_back(std::any_cast<long>(item));\n        }\n   \
    \ }\n    return output;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1xbe118d.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1xbe118d.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(const std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(item))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1xbe118d.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1xbe118d.cpp:11:46:\
    \ note:   \u2018const std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(item)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto & val : values){\n        if(std::is_integral<decltype(val)>::value)\n\
    \            result.emplace_back(std::any_cast<long>(val));\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp7z4zvemh: /tmp/tmp7z4zvemh.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108487
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    auto it = std::any_of(values.begin(), values.end(), [](auto const\
    \ &v){return std::holds_alternative<std::int32_t>(v) || std::holds_alternative<std::int64_t>(v);});\n\
    \    \n    for(auto &v : values) {\n        if(it == std::any_of(values.begin(),\
    \ values.end(), [](auto const &v){return std::holds_alternative<std::int32_t>(v)\
    \ || std::holds_alternative<std::int64_t>(v);})) {\n            out.push_back(std::any_cast<std::int32_t>(v));\n\
    \        } else if(it == std::any_of(values.begin(), values.end(), [](auto const\
    \ &v){return std::holds_alternative<std::int64_t>(v);})) {\n            out.push_back(std::any_cast<std::int64_t>(v));\n\
    \        } else {\n            out.push_back(v);\n        }\n    }\n    return\
    \ out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjwf_o0ht.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpjwf_o0ht.cpp:18:28: error: no matching function for call to \u2018\
    std::vector<long int>::push_back(std::any&)\u2019\n   18 |             out.push_back(v);\n\
    \      |                            ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpjwf_o0ht.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type&\
    \ __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018std::any\u2019 to \u2018\
    std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019}\n 1200\
    \ |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n\
    /tmp/tmpjwf_o0ht.cpp: In instantiation of \u2018filter_integers(std::vector<std::any>)::<lambda(const\
    \ auto:22&)> [with auto:22 = std::any]\u2019:\n/usr/include/c++/9/bits/predefined_ops.h:283:11:\
    \   required from \u2018bool __gnu_cxx::__ops::_Iter_pred<_Predicate>"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    \n    // Go through the vector\n    for(auto& x: values) {\n     \
    \   // If it's a string, check if it's an integer\n        if(typeid(x).name()\
    \ == typeid(std::string).name()) {\n            try {\n                // If it\
    \ fails, it's not a number\n                long i = std::stoll((std::string)x);\n\
    \                out.push_back(i);\n            } catch(const std::invalid_argument&)\
    \ {\n                // If it's an invalid argument, discard it\n            }\n\
    \        } \n        // If it's a std::map<long,long>, do what we did for string\n\
    \        else if(typeid(x).name() == typeid(std::map<long,long>).name()) {\n \
    \           std::map<long,long> m = std::any_cast<std::map<long,long>>(x);\n \
    \           for(auto& pair: m) {\n                try {\n                    long\
    \ i = std::stoll(pair.first);\n                    long j = std::stoll(pair.second);\n\
    \                    out.push_back(std::make_pair(i,j));\n                } catch(const\
    \ std::invalid_argument&) {\n                    // If it's an invalid argument,\
    \ discard it\n                }\n            }\n        } \n        // If it's\
    \ any other vector, do what we did for string\n        else if(typeid(x).name()\
    \ == typeid(std::vector<long>).name()) {\n            std::vector<long> vx = std::any_cast<std::vector<long>>(x);\n\
    \            for(auto& x: vx) {\n                try {\n                    long\
    \ i = std::stoll(x);\n                    out.push_back(i);\n                }\
    \ catch(const std::invalid_argument&) {\n                    // If it's an invalid\
    \ argument, discard it\n                }\n            }\n        }\n        //\
    \ If it's any other type, discard it\n        else {\n            out.push_back(std::any_cast<long>(x));\n\
    \        }\n    }\n    \n    return out;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpn569u240.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpn569u240.cpp:17:50: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::basic_string(std::any&)\u2019\n   17 |     \
    \            long i = std::stoll((std::string)x);\n      |                   \
    \                               ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpn569u240.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:654:2:\
    \ note: candidate: \u2018template<class _Tp, class> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::basic_string(const _Tp&, const _Alloc&)\u2019\n  654 |  basic_string(const\
    \ _Tp& __t, const _Alloc& __a = _Alloc())\n      |  ^~~~~~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:654:2:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/9/bits/move.h:55,\n                 from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpn569u240.cpp:2:\n/usr/include/c++/9/type_traits:\
    \ In substitution of \u2018template<bool _Cond, class _Tp> using enable_if_t =\
    \ typename std::enable_if::type [with bool _Cond = std::integral_constant<bool,\
    \ false>::value; _Tp = void]\u2019:\n/usr/include/c++/9/bits/basic_string.h:121:8:\
    \   required by substitution of \u2018template<class _CharT, class _Traits"
  stdout: ''
  timestamp: 1660108487
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    auto integer_values\
    \ = std::remove_if(\n            values.begin(), values.end(), [] (auto element)\
    \ {\n                return (std::any_cast<std::map<long, long>>(element))->find(0)\
    \ == std::any_cast<std::map<long, long>>(element)->end();\n            });\n \
    \   return std::vector<long>(std::begin(integer_values), std::end(integer_values));\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvp97crj4.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpvp97crj4.cpp:13:55: error: no matching function for call to \u2018\
    begin(__gnu_cxx::__normal_iterator<std::any*, std::vector<std::any> >&)\u2019\n\
    \   13 |     return std::vector<long>(std::begin(integer_values), std::end(integer_values));\n\
    \      |                                                       ^\nIn file included\
    \ from /usr/include/c++/9/bits/range_access.h:36,\n                 from /usr/include/c++/9/string:54,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvp97crj4.cpp:2:\n/usr/include/c++/9/initializer_list:89:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\
    \n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n\
    /usr/include/c++/9/initializer_list:89:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpvp97crj4.cpp:13:55: note:   \u2018__gnu_cxx::__normal_iterator<std::any*,\
    \ std::vector<std::any> >\u2019 is not derived from \u2018std::initializer_list<_Tp>\u2019\
    \n   13 |     return std::vector<long>(std::begin(integer_values), std::end(integer_values));\n\
    \      |                                                       ^\nIn file included\
    \ from /usr/include/c++/9/string:54,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/comple"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values)\n        if ((value.type() == typeid(long)))\n\
    \            out.push_back((long)value.ptr());\n    return out;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpszs5r4cm.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpszs5r4cm.cpp:12:39: error: \u2018class std::any\u2019 has no member\
    \ named \u2018ptr\u2019\n   12 |             out.push_back((long)value.ptr());\n\
    \      |                                       ^~~\n"
  stdout: ''
  timestamp: 1660108487
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    // std::copy is more performant for copying vectors\n    std::copy_if(values.begin(),\
    \ values.end(), std::back_inserter(out),\n        [](const std::any& v){\n   \
    \         if (std::holds_alternative<std::vector<long>>(v)) {\n              \
    \  std::vector<long> vec = std::get<std::vector<long>>(v);\n                std::copy_if(vec.begin(),\
    \ vec.end(), std::back_inserter(out),\n                    [](const long& i){return\
    \ i == i;});\n                return true;\n            }\n            return\
    \ false;\n        }\n    );\n    return out;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpjp07abbo.cpp: In lambda function:\n/tmp/tmpjp07abbo.cpp:13:60:\
    \ error: no matching function for call to \u2018holds_alternative<std::vector<long\
    \ int, std::allocator<long int> > >(const std::any&)\u2019\n   13 |          \
    \   if (std::holds_alternative<std::vector<long>>(v)) {\n      |             \
    \                                               ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpjp07abbo.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjp07abbo.cpp:13:60:\
    \ note:   \u2018const std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |             if (std::holds_alternative<std::vector<long>>(v))\
    \ {\n      |                                                            ^\n/tmp/tmpjp07abbo.cpp:14:70:\
    \ error: no matching function for call to \u2018get<std::vector<long int, std::allocator<long\
    \ int> > >(const std::any&)\u2019\n   14 |                 std::vector<long> vec\
    \ = std::get<std::vector<long>>(v);\n      |                                 \
    \                                     ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpjp07abbo.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, clas"
  stdout: ''
  timestamp: 1660108487
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(int))\
    \ {\n            result.push_back(value.as<int>());\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmmc9_1f0.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpmmc9_1f0.cpp:12:36: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   12 |             result.push_back(value.as<int>());\n\
    \      |                                    ^~\n/tmp/tmpmmc9_1f0.cpp:12:39: error:\
    \ expected primary-expression before \u2018int\u2019\n   12 |             result.push_back(value.as<int>());\n\
    \      |                                       ^~~\n"
  stdout: ''
  timestamp: 1660108486
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<\
    \ long >  integers;\n    std::vector< long >  int_values;\n    for(auto v : values)\
    \ {\n        auto it = v.as<std::map<long,long>>();\n        if(it != nullptr)\
    \ {\n            for(auto it : *it) {\n                auto it_int = it.as<std::vector<long>>();\n\
    \                if(it_int != nullptr) {\n                    for(auto v : *it_int)\
    \ {\n                        integers.push_back(v);\n                    }\n \
    \               }\n                else {\n                    integers.push_back(it.as<long>());\n\
    \                }\n            }\n        }\n        else if(v.as<std::string>()\
    \ != nullptr) {\n            integers.push_back(v.as<long>());\n        }\n  \
    \      else if(v.as<std::vector<long>>() != nullptr) {\n            for(auto v\
    \ : v.as<std::vector<long>>()) {\n                integers.push_back(v);\n   \
    \         }\n        }\n        else if(v.as<std::any>() != nullptr) {\n     \
    \       auto it = v.as<std::any>();\n            if(it != nullptr) {\n       \
    \         auto it_int = it->as<std::vector<long>>();\n                if(it_int\
    \ != nullptr) {\n                    for(auto v : *it_int) {\n               \
    \         integers.push_back(v);\n                    }\n                }\n \
    \               else {\n                    integers.push_back(it->as<long>());\n\
    \                }\n            }\n        }\n        else {\n            integers.push_back(v);\n\
    \        }\n    }\n    for(auto v : integers) {\n        if(std::find(int_values.begin(),\
    \ int_values.end(), v) != int_values.end()) {\n            integers.erase(std::find(int_values.begin(),\
    \ int_values.end(), v));\n        }\n    }\n    return integers;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8bc430at.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp8bc430at.cpp:12:21: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   12 |         auto it = v.as<std::map<long,long>>();\n\
    \      |                     ^~\n/tmp/tmp8bc430at.cpp:12:42: error: expected primary-expression\
    \ before \u2018>\u2019 token\n   12 |         auto it = v.as<std::map<long,long>>();\n\
    \      |                                          ^~\n/tmp/tmp8bc430at.cpp:12:45:\
    \ error: expected primary-expression before \u2018)\u2019 token\n   12 |     \
    \    auto it = v.as<std::map<long,long>>();\n      |                         \
    \                    ^\n/tmp/tmp8bc430at.cpp:15:53: error: expected primary-expression\
    \ before \u2018>\u2019 token\n   15 |                 auto it_int = it.as<std::vector<long>>();\n\
    \      |                                                     ^~\n/tmp/tmp8bc430at.cpp:15:56:\
    \ error: expected primary-expression before \u2018)\u2019 token\n   15 |     \
    \            auto it_int = it.as<std::vector<long>>();\n      |              \
    \                                          ^\n/tmp/tmp8bc430at.cpp:22:46: error:\
    \ expected primary-expression before \u2018long\u2019\n   22 |               \
    \      integers.push_back(it.as<long>());\n      |                           \
    \                   ^~~~\n/tmp/tmp8bc430at.cpp:26:19: error: \u2018class std::any\u2019\
    \ has no member named \u2018as\u2019\n   26 |         else if(v.as<std::string>()\
    \ != nullptr) {\n      |                   ^~\n/tmp/tmp8bc430at.cpp:26:33: error:\
    \ expected primary-expression before \u2018>\u2019 token\n   26 |         else\
    \ if(v.as<std::string>() != nullptr) {\n      |                              \
    \   ^\n/tmp/tmp8bc430at.cpp:26:35: error: expected primary-expression before \u2018\
    )\u2019 token\n   26 |         else if(v.as<std::string>() != nullptr) {\n   \
    \   |                                   ^\n/tmp/tmp8bc430at.cpp:27:34: error:\
    \ \u2018class std::any\u2019 has no member named \u2018as\u2019\n   27 |     \
    \        integers.push_back(v.as<long>());\n      |                          \
    \        ^~\n/tmp/tmp8bc430at.cpp:27:37: error: e"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    // Create\
    \ vector of longs\n    std::vector<long> out;\n    // Iterate through values\n\
    \    for (auto v : values) {\n        // If values is vector of any integers\n\
    \        if (std::holds_alternative<std::vector<int>>(v)) {\n            // Iterate\
    \ through vector of integers\n            for (auto i : std::get<std::vector<int>>(v))\
    \ {\n                // If values is vector of string\n                if (std::holds_alternative<std::vector<std::string>>(v))\
    \ {\n                    // Iterate through vector of string\n               \
    \     for (auto s : std::get<std::vector<std::string>>(v)) {\n               \
    \         // If values is vector of long\n                        if (std::holds_alternative<std::vector<long>>(v))\
    \ {\n                            // Iterate through vector of long\n         \
    \                   for (auto l : std::get<std::vector<long>>(v)) {\n        \
    \                        out.push_back(l);\n                            }\n  \
    \                      }\n                    }\n                }\n         \
    \   }\n        }\n    }\n    // Return vector of longs\n    return out;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvh9dsjk3.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpvh9dsjk3.cpp:14:55: error: no matching function for call to \u2018\
    holds_alternative<std::vector<int, std::allocator<int> > >(std::any&)\u2019\n\
    \   14 |         if (std::holds_alternative<std::vector<int>>(v)) {\n      | \
    \                                                      ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpvh9dsjk3.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpvh9dsjk3.cpp:14:55:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   14 |         if (std::holds_alternative<std::vector<int>>(v))\
    \ {\n      |                                                       ^\n/tmp/tmpvh9dsjk3.cpp:16:55:\
    \ error: no matching function for call to \u2018get<std::vector<int, std::allocator<int>\
    \ > >(std::any&)\u2019\n   16 |             for (auto i : std::get<std::vector<int>>(v))\
    \ {\n      |                                                       ^\nIn file\
    \ included from /usr/include/c++/9/algorithm:60,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvh9dsjk3.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ filtered_integers;\n    for(auto value: values) {\n        auto int_value =\
    \ std::any_cast<std::int64_t>(value);\n        if(int_value == std::int64_t{}\
    \ && value != std::map<long,long>() && value != std::vector<long>()) {\n     \
    \       filtered_integers.push_back(value);\n        }\n    }\n    return filtered_integers;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfyr2_57t.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpfyr2_57t.cpp:12:49: error: no match for \u2018operator!=\u2019 (operand\
    \ types are \u2018std::any\u2019 and \u2018std::map<long int, long int>\u2019\
    )\n   12 |         if(int_value == std::int64_t{} && value != std::map<long,long>()\
    \ && value != std::vector<long>()) {\n      |                                \
    \           ~~~~~ ^~      ~~~~~~~~~~~~~~~~\n      |                          \
    \                 |             |\n      |                                   \
    \        std::any      std::map<long int, long int>\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpfyr2_57t.cpp:2:\n/usr/include/c++/9/bits/regex.h:1037:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator!=(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1037 |     operator!=(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1037:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpfyr2_57t.cpp:12:72:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   12 |         if(int_value == std::int64_t{} && value != std::map<long,long>()\
    \ && value != std::vector<long>()) {\n      |                                \
    \                                        ^\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpfyr2_57t.cpp:2:\n/usr/include/c++/9/bits/regex.h:1112:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator!=(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1112 |     operator!=(const\
    \ __sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>& __lhs,\n      |     ^~~~~~~~\n\
    /usr/include"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (const auto& val : values) {\n        if (std::is_same<decltype(val),std::map<long,long>>())\
    \ {\n            std::map<long,long> m;\n            for (const auto& i : val)\
    \ {\n                m[std::get<0>(i)] = std::get<1>(i);\n            }\n    \
    \        for (const auto& i : m) {\n                result.push_back(i);\n   \
    \         }\n        }\n        else {\n            for (long i : val) {\n   \
    \             result.push_back(i);\n            }\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl87uuvjs.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpl87uuvjs.cpp:13:34: error: no matching function for call to \u2018\
    begin(const std::any&)\u2019\n   13 |             for (const auto& i : val) {\n\
    \      |                                  ^~~\nIn file included from /usr/include/c++/9/bits/range_access.h:36,\n\
    \                 from /usr/include/c++/9/string:54,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpl87uuvjs.cpp:2:\n/usr/include/c++/9/initializer_list:89:5: note: candidate:\
    \ \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\
    \n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n\
    /usr/include/c++/9/initializer_list:89:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpl87uuvjs.cpp:13:34: note:   \u2018std::any\u2019 is not derived\
    \ from \u2018std::initializer_list<_Tp>\u2019\n   13 |             for (const\
    \ auto& i : val) {\n      |                                  ^~~\nIn file included\
    \ from /usr/include/c++/9/string:54,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpl87uuvjs.cpp:2:\n/usr/include/c++/9/bits/range_access.h:48:5: not"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ filtered_values;\n\tfor (auto value : values) {\n\t\tif (value->type() == typeid(int))\
    \ {\n\t\t\tfiltered_values.push_back(value->as<int>());\n\t\t} else {\n\t\t\t\
    filtered_values.push_back(value->as<long>());\n\t\t}\n\t}\n\treturn filtered_values;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvn2v51w_.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpvn2v51w_.cpp:11:12: error: base operand of \u2018->\u2019 has non-pointer\
    \ type \u2018std::any\u2019\n   11 |   if (value->type() == typeid(int)) {\n \
    \     |            ^~\n/tmp/tmpvn2v51w_.cpp:12:35: error: base operand of \u2018\
    ->\u2019 has non-pointer type \u2018std::any\u2019\n   12 |    filtered_values.push_back(value->as<int>());\n\
    \      |                                   ^~\n/tmp/tmpvn2v51w_.cpp:12:40: error:\
    \ expected primary-expression before \u2018int\u2019\n   12 |    filtered_values.push_back(value->as<int>());\n\
    \      |                                        ^~~\n/tmp/tmpvn2v51w_.cpp:14:35:\
    \ error: base operand of \u2018->\u2019 has non-pointer type \u2018std::any\u2019\
    \n   14 |    filtered_values.push_back(value->as<long>());\n      |          \
    \                         ^~\n/tmp/tmpvn2v51w_.cpp:14:40: error: expected primary-expression\
    \ before \u2018long\u2019\n   14 |    filtered_values.push_back(value->as<long>());\n\
    \      |                                        ^~~~\n"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto it = values.begin(); it != values.end(); ++it) {\n   \
    \     if (auto* pyobj = std::any_cast<std::map<long,long>>(*it)) {\n         \
    \   for (auto& entry : *pyobj) {\n                if(entry.first != 0) result.push_back(entry.first);\n\
    \            }\n        } else if (auto* pyobj = std::any_cast<std::vector<long>>(*it))\
    \ {\n            for(auto elem : *pyobj) {\n                if(elem != 0) result.push_back(elem);\n\
    \            }\n        } else {\n            if((*it)->toLong() >= 0) result.push_back((*it)->toLong());\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpoeq17nl7.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpoeq17nl7.cpp:11:65: error: unable to deduce \u2018auto*\u2019 from\
    \ \u2018std::any_cast(std::any&) [with _ValueType = std::map<long int, long int>]()\u2019\
    \n   11 |         if (auto* pyobj = std::any_cast<std::map<long,long>>(*it)) {\n\
    \      |                                                                 ^\n/tmp/tmpoeq17nl7.cpp:11:65:\
    \ note:   mismatched types \u2018auto*\u2019 and \u2018std::map<long int, long\
    \ int>\u2019\n/tmp/tmpoeq17nl7.cpp:15:70: error: unable to deduce \u2018auto*\u2019\
    \ from \u2018std::any_cast(std::any&) [with _ValueType = std::vector<long int>]()\u2019\
    \n   15 |         } else if (auto* pyobj = std::any_cast<std::vector<long>>(*it))\
    \ {\n      |                                                                 \
    \     ^\n/tmp/tmpoeq17nl7.cpp:15:70: note:   mismatched types \u2018auto*\u2019\
    \ and \u2018std::vector<long int>\u2019\n/tmp/tmpoeq17nl7.cpp:20:21: error: base\
    \ operand of \u2018->\u2019 has non-pointer type \u2018std::any\u2019\n   20 |\
    \             if((*it)->toLong() >= 0) result.push_back((*it)->toLong());\n  \
    \    |                     ^~\n/tmp/tmpoeq17nl7.cpp:20:60: error: base operand\
    \ of \u2018->\u2019 has non-pointer type \u2018std::any\u2019\n   20 |       \
    \      if((*it)->toLong() >= 0) result.push_back((*it)->toLong());\n      |  \
    \                                                          ^~\n"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ integer_values;\n    for (auto it : values) {\n        auto v = std::any_cast<std::unordered_map<long,\
    \ long>>(it);\n        if (v) {\n            for (auto it : v) {\n           \
    \     integer_values.push_back(it.first);\n            }\n        } else {\n \
    \           integer_values.push_back(std::any_cast<long>(it));\n        }\n  \
    \  }\n    return integer_values;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpei7o981e.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpei7o981e.cpp:12:13: error: could not convert \u2018v\u2019 from \u2018\
    std::unordered_map<long int, long int>\u2019 to \u2018bool\u2019\n   12 |    \
    \     if (v) {\n      |             ^\n      |             |\n      |        \
    \     std::unordered_map<long int, long int>\n"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    std::for_each(values.begin(), values.end(), [&result](std::any\
    \ v) {\n        if (v.type() == typeid(long)) {\n            result.emplace_back(v.as<long>());\n\
    \        } else {\n            throw std::runtime_error(\"Given argument is not\
    \ list of integers\");\n        }\n    });\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz5sm6gub.cpp: In lambda function:\n/tmp/tmpz5sm6gub.cpp:12:35:\
    \ error: \u2018class std::any\u2019 has no member named \u2018as\u2019\n   12\
    \ |             result.emplace_back(v.as<long>());\n      |                  \
    \                 ^~\n/tmp/tmpz5sm6gub.cpp:12:38: error: expected primary-expression\
    \ before \u2018long\u2019\n   12 |             result.emplace_back(v.as<long>());\n\
    \      |                                      ^~~~\n"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ result;\n  \n  for(auto& item : values) {\n    if(!((std::is_same<decltype(item),\
    \ std::tuple<long,long,long,long,long,long,long,long>>()))) continue;\n    if(!((std::is_same<decltype(std::get<0>(item)),\
    \ std::int64_t>()))) continue;\n    if(!((std::is_same<decltype(std::get<1>(item)),\
    \ std::int64_t>()))) continue;\n    if(!((std::is_same<decltype(std::get<2>(item)),\
    \ std::int64_t>()))) continue;\n    if(!((std::is_same<decltype(std::get<3>(item)),\
    \ std::int64_t>()))) continue;\n    if(!((std::is_same<decltype(std::get<4>(item)),\
    \ std::int64_t>()))) continue;\n    if(!((std::is_same<decltype(std::get<5>(item)),\
    \ std::int64_t>()))) continue;\n    if(!((std::is_same<decltype(std::get<6>(item)),\
    \ std::int64_t>()))) continue;\n    if(!((std::is_same<decltype(std::get<7>(item)),\
    \ std::int64_t>()))) continue;\n    result.push_back(std::get<0>(item));\n  }\n\
    \  \n  return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpy9192r1o.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpy9192r1o.cpp:13:49: error: no matching function for call to \u2018\
    get<0>(std::any&)\u2019\n   13 |     if(!((std::is_same<decltype(std::get<0>(item)),\
    \ std::int64_t>()))) continue;\n      |                                      \
    \           ^\nIn file included from /usr/include/c++/9/algorithm:60,\n      \
    \           from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n     \
    \            from /tmp/tmpy9192r1o.cpp:2:\n/usr/include/c++/9/utility:219:5: note:\
    \ candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr\
    \ typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpy9192r1o.cpp:13:49: note:   \u2018std::any\u2019 is not derived\
    \ from \u2018std::pair<_Tp1, _Tp2>\u2019\n   13 |     if(!((std::is_same<decltype(std::get<0>(item)),\
    \ std::int64_t>()))) continue;\n      |                                      \
    \           ^\nIn file included from /usr/include/c++/9/algorithm:60,\n      \
    \           from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n     \
    \            from /tmp/tmpy9192r1o.cpp:2:\n/usr/include/c++/9/utility:224:5: note:\
    \ candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr\
    \ typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1,\
    \ _Tp2>&&)\u2019\n  224 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept\n   \
    \   |     ^~~\n/usr/include/c++/9/utility:224:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpy9192r1o.cpp:13:49: note:   \u2018std::any\u2019 is not derived\
    \ from \u2018std::pair<_Tp1, _Tp2>\u2019\n   13 |     if(!((std::is_same<decltype(std::get<0>(item)),\
    \ std::int64_t>()))) continue;\n      |                                      \
    \           ^\nIn file included from /usr/include/c++/9/algorithm:60,\n      \
    \           from /usr/include/x8"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ r;\n    // std::any is implicitly convertible to any type\n    for (auto it\
    \ = values.begin(); it != values.end(); ++it)\n        if (std::any_cast<int>(*it))\n\
    \            r.push_back((*it).as<int>());\n    return r;\n}\nint main() {\n \
    \   auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsntimevq.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpsntimevq.cpp:13:31: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   13 |             r.push_back((*it).as<int>());\n  \
    \    |                               ^~\n/tmp/tmpsntimevq.cpp:13:34: error: expected\
    \ primary-expression before \u2018int\u2019\n   13 |             r.push_back((*it).as<int>());\n\
    \      |                                  ^~~\n"
  stdout: ''
  timestamp: 1660108488
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ints;\n    for (const auto& x : values) {\n        long i = std::any_cast<long>(x);\n\
    \        if(i > 0) {\n            ints.push_back(i);\n        }\n    }\n    return\
    \ ints;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::bad_any_cast'\n  what():\
    \  bad any_cast\n"
  stdout: ''
  timestamp: 1660108489
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ filtered;\n    long val = 0;\n    for (const auto& v : values) {\n        try\
    \ {\n            val =  std::any_cast<long>(v);\n        } catch (const std::bad_any_cast&\
    \ e) {\n            continue;\n        }\n        filtered.push_back(val);\n \
    \   }\n    return filtered;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpiqz2nwqn: /tmp/tmpiqz2nwqn.cpp:24: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108489
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ results;\n    for (auto&& value : values) {\n        bool is_integer = std::holds_alternative<int>(value);\n\
    \        if (!is_integer) {\n            continue;\n        }\n        results.push_back(std::get<int>(value));\n\
    \    }\n    return results;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_srm5s1n.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp_srm5s1n.cpp:11:60: error: no matching function for call to \u2018\
    holds_alternative<int>(std::any&)\u2019\n   11 |         bool is_integer = std::holds_alternative<int>(value);\n\
    \      |                                                            ^\nIn file\
    \ included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n     \
    \            from /tmp/tmp_srm5s1n.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_srm5s1n.cpp:11:60:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         bool is_integer = std::holds_alternative<int>(value);\n\
    \      |                                                            ^\n/tmp/tmp_srm5s1n.cpp:15:46:\
    \ error: no matching function for call to \u2018get<int>(std::any&)\u2019\n  \
    \ 15 |         results.push_back(std::get<int>(value));\n      |             \
    \                                 ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_srm5s1n.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pai"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    std::function<bool(std::any)> filter = [](std::any a){\n        return\
    \ std::holds_alternative<long>(a);\n    };\n    std::copy_if(std::begin(values),\
    \ std::end(values), std::back_inserter(ret), filter);\n    return ret;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe7j3jd4o.cpp: In lambda function:\n/tmp/tmpe7j3jd4o.cpp:11:46:\
    \ error: no matching function for call to \u2018holds_alternative<long int>(std::any&)\u2019\
    \n   11 |         return std::holds_alternative<long>(a);\n      |           \
    \                                   ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpe7j3jd4o.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpe7j3jd4o.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         return std::holds_alternative<long>(a);\n      |\
    \                                              ^\n/tmp/tmpe7j3jd4o.cpp: In function\
    \ \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019:\n\
    /tmp/tmpe7j3jd4o.cpp:12:5: error: conversion from \u2018filter_integers(std::vector<std::any>)::<lambda(std::any)>\u2019\
    \ to non-scalar type \u2018std::function<bool(std::any)>\u2019 requested\n   12\
    \ |     };\n      |     ^\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpe7j3jd4o.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:\
    \ In instantiation of \u2018_OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate)\
    \ [with _IIter = __gnu_cxx::__normal_iterator<std::any*, std::vector<std::any>\
    \ >; _OIter = std::back_insert_iterator<std::vector<long int> >; _Predicate =\
    \ std::function<bool(std::any)>]\u2019:\n/tmp/tmpe7j3jd4o.cpp:13:87:   required\
    \ from here\n/usr/include/c++/9/bits/stl_algo.h:751:16: error: no match for \u2018\
    operator=\u2019 (operand types are \u2018std::back_insert_iterator<std::vector<long\
    \ int> >\u2019 and \u2018std::any\u2019)\n  751 |      *__result = *__first;\n\
    \      |      ~~~~~~~~~~^~~~~~~~~"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto& e : values) {\n        auto it = (std::any_cast<T>(e)).type().find(typeid(long));\n\
    \        if (it != (std::any_cast<T>(e)).type().end())\n            res.push_back(std::any_cast<T>(e).as<long>());\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpaolma7i6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpaolma7i6.cpp:11:34: error: \u2018T\u2019 was not declared in this scope\n\
    \   11 |         auto it = (std::any_cast<T>(e)).type().find(typeid(long));\n\
    \      |                                  ^\n/tmp/tmpaolma7i6.cpp:11:38: error:\
    \ no matching function for call to \u2018any_cast<<expression error> >(std::any&)\u2019\
    \n   11 |         auto it = (std::any_cast<T>(e)).type().find(typeid(long));\n\
    \      |                                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:126,\n\
    \                 from /tmp/tmpaolma7i6.cpp:2:\n/usr/include/c++/9/any:452:23:\
    \ note: candidate: \u2018template<class _ValueType> _ValueType std::any_cast(const\
    \ std::any&)\u2019\n  452 |     inline _ValueType any_cast(const any& __any)\n\
    \      |                       ^~~~~~~~\n/usr/include/c++/9/any:452:23: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpaolma7i6.cpp:11:38:\
    \ error: template argument 1 is invalid\n   11 |         auto it = (std::any_cast<T>(e)).type().find(typeid(long));\n\
    \      |                                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:126,\n\
    \                 from /tmp/tmpaolma7i6.cpp:2:\n/usr/include/c++/9/any:478:23:\
    \ note: candidate: \u2018template<class _ValueType> _ValueType std::any_cast(std::any&)\u2019\
    \n  478 |     inline _ValueType any_cast(any& __any)\n      |                \
    \       ^~~~~~~~\n/usr/include/c++/9/any:478:23: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpaolma7i6.cpp:11:38: error: template argument 1 is invalid\n\
    \   11 |         auto it = (std::any_cast<T>(e)).type().find(typeid(long));\n\
    \      |                                      ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:126,\n\
    \                 from /tmp/tmpaolma7i6.cpp:2:\n/usr/include/c++/9/any:492:23:\
    \ note: candidate: \u2018template<class _ValueType> _ValueType std::any_cast(std::any&&)\u2019\
    \n  492 |     inline _ValueType any_cast(any&& __any)\n"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  assert(values.size()\
    \ > 1);\n  std::vector<long> out;\n  auto it = std::begin(values);\n  std::advance(it,\
    \ 1);\n  if (std::get<long>(*it) == 0) {\n    return out;\n  }\n  out.push_back(std::get<long>(*it));\n\
    \  for (auto it = std::next(it); it != std::end(values); ++it) {\n    if (std::get<long>(*it)\
    \ == 0) {\n      break;\n    }\n    out.push_back(std::get<long>(*it));\n  }\n\
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp85fkbtz.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpp85fkbtz.cpp:13:25: error: no matching function for call to \u2018\
    get<long int>(std::any&)\u2019\n   13 |   if (std::get<long>(*it) == 0) {\n  \
    \    |                         ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpp85fkbtz.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)\u2019\n  224\
    \ |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept\n      |     ^~~\n/usr/include/c++/9/utility:224:5:\
    \ note:   template argument deduction/substitution failed:\n/usr/include/c++/9/utility:229:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&\
    \ std::get(const std::pair<_Tp1, _Tp2>&)\u2019\n  229 |     get(const std::pair<_Tp1,\
    \ _Tp2>& __in) noexcept\n      |     ^~~\n/usr/include/c++/9/utility:229:5: note:\
    \   template argument deduction/substitution failed:\n/usr/include/c++/9/utility:234:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&&\
    \ std::get(const std::pair<_Tp1, _Tp2>&&)\u2019\n  234 |     get(const std::pair<_Tp1,\
    \ _Tp2>&& __in) noexcept\n      |     ^~~\n/usr/include/c++/9/utility:234:5: note:\
    \   template argument deduction/substitution failed:\n/usr/include/c++/9/u"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ retval;\n    for(auto& v : values)\n        if(std::holds_alternative<int>(v))\n\
    \            retval.push_back(std::any_cast<int>(v));\n    return retval;\n}\n\
    int main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp34i8xp4q.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp34i8xp4q.cpp:11:41: error: no matching function for call to \u2018\
    holds_alternative<int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<int>(v))\n\
    \      |                                         ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmp34i8xp4q.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp34i8xp4q.cpp:11:41:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<int>(v))\n      |    \
    \                                     ^\n"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ result;\n\tfor(auto value : values)\n\t{\n\t\tif(std::holds_alternative<bool>(value)\
    \ && std::holds_alternative<long>(value))\n\t\t\tresult.push_back(std::get<long>(value));\n\
    \t}\n\treturn result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv4yu4wqy.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpv4yu4wqy.cpp:12:40: error: no matching function for call to \u2018\
    holds_alternative<bool>(std::any&)\u2019\n   12 |   if(std::holds_alternative<bool>(value)\
    \ && std::holds_alternative<long>(value))\n      |                           \
    \             ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpv4yu4wqy.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpv4yu4wqy.cpp:12:40:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   12 |   if(std::holds_alternative<bool>(value) && std::holds_alternative<long>(value))\n\
    \      |                                        ^\n/tmp/tmpv4yu4wqy.cpp:12:79:\
    \ error: no matching function for call to \u2018holds_alternative<long int>(std::any&)\u2019\
    \n   12 |   if(std::holds_alternative<bool>(value) && std::holds_alternative<long>(value))\n\
    \      |                                                                     \
    \          ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpv4yu4wqy.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpv4yu4wqy.cpp:12:79:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   12 |   if(std::holds_alternative<bool>(value) && std::holds_alternative<long>(value))\n\
    \  "
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::map<long,\
    \ long> intMap;\n  for (auto value : values) {\n    // if (std::holds_alternative<std::string>(value))\
    \ {\n    //   intMap[std::get<0>(value)] = std::get<1>(value);\n    // }\n   \
    \ if (std::holds_alternative<long>(value)) {\n      intMap[std::get<0>(value)]\
    \ = std::get<1>(value);\n    }\n  }\n\n  std::vector<long> filtered;\n  for (auto\
    \ value : values) {\n    if (std::holds_alternative<long>(value)) {\n      if\
    \ (intMap.find(std::get<0>(value)) != intMap.end()) {\n        filtered.push_back(intMap[std::get<0>(value)]);\n\
    \      }\n    }\n  }\n\n  return filtered;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpdqfeqg68.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpdqfeqg68.cpp:14:43: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   14 |     if (std::holds_alternative<long>(value))\
    \ {\n      |                                           ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpdqfeqg68.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpdqfeqg68.cpp:14:43:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   14 |     if (std::holds_alternative<long>(value)) {\n      |\
    \                                           ^\n/tmp/tmpdqfeqg68.cpp:15:31: error:\
    \ no matching function for call to \u2018get<0>(std::any&)\u2019\n   15 |    \
    \   intMap[std::get<0>(value)] = std::get<1>(value);\n      |                \
    \               ^\nIn file included from /usr/include/c++/9/algorithm:60,\n  \
    \               from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n \
    \                from /tmp/tmpdqfeqg68.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpdqfeqg68.cpp:15:31: note:   \u2018std::any\u2019 is not derived\
    \ from \u2018std::pair<_Tp1, _Tp2>\u2019\n   15 |       intMap[std::get<0>(value)]\
    \ = std::get<1>(value);\n      |                               ^\nIn file included\
    \ from /usr/include/c++/9/algorithm:60,\n                 "
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    assert(values.size()\
    \ >= 2);\n\n    std::vector<long> out;\n    for (auto v : values) {\n        if\
    \ (auto&& int_val = std::any_cast<std::int64_t>(v)) {\n            out.push_back(int_val);\n\
    \        } else if (auto&& int_vec = std::any_cast<std::vector<std::int64_t>>(v))\
    \ {\n            for (auto i : int_vec) {\n                out.push_back(i);\n\
    \            }\n        } else if (auto&& map_val = std::any_cast<std::map<std::int64_t,\
    \ std::int64_t>>(v)) {\n            for (auto i : map_val.keys()) {\n        \
    \        out.push_back(i.second);\n            }\n        } else if (auto&& vec_val\
    \ = std::any_cast<std::vector<std::int64_t>>(v)) {\n            for (auto i :\
    \ vec_val) {\n                out.push_back(i);\n            }\n        }\n  \
    \  }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp00fqw9tk.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp00fqw9tk.cpp:15:80: error: could not convert \u2018int_vec\u2019 from\
    \ \u2018std::vector<long int>\u2019 to \u2018bool\u2019\n   15 |         } else\
    \ if (auto&& int_vec = std::any_cast<std::vector<std::int64_t>>(v)) {\n      |\
    \                                                                            \
    \    ^\n      |                                                              \
    \                  |\n      |                                                \
    \                                std::vector<long int>\n/tmp/tmp00fqw9tk.cpp:19:91:\
    \ error: could not convert \u2018map_val\u2019 from \u2018std::map<long int, long\
    \ int>\u2019 to \u2018bool\u2019\n   19 |         } else if (auto&& map_val =\
    \ std::any_cast<std::map<std::int64_t, std::int64_t>>(v)) {\n      |         \
    \                                                                            \
    \      ^\n      |                                                            \
    \                               |\n      |                                   \
    \                                                        std::map<long int, long\
    \ int>\n/tmp/tmp00fqw9tk.cpp:20:35: error: \u2018class std::map<long int, long\
    \ int>\u2019 has no member named \u2018keys\u2019\n   20 |             for (auto\
    \ i : map_val.keys()) {\n      |                                   ^~~~\n/tmp/tmp00fqw9tk.cpp:23:80:\
    \ error: could not convert \u2018vec_val\u2019 from \u2018std::vector<long int>\u2019\
    \ to \u2018bool\u2019\n   23 |         } else if (auto&& vec_val = std::any_cast<std::vector<std::int64_t>>(v))\
    \ {\n      |                                                                 \
    \               ^\n      |                                                   \
    \                             |\n      |                                     \
    \                                           std::vector<long int>\n"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ filtered_values;\n    for(auto& value : values) {\n        if( std::holds_alternative<long\
    \ long>(value)) {\n            filtered_values.push_back( static_cast<long long>(std::any_cast<long\
    \ long>(value)) );\n        }\n        if( std::holds_alternative<int>(value))\
    \ {\n            filtered_values.push_back( std::any_cast<int>(value) );\n   \
    \     }\n    }\n    return filtered_values;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3ewyxb_8.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp3ewyxb_8.cpp:11:52: error: no matching function for call to \u2018\
    holds_alternative<long long int>(std::any&)\u2019\n   11 |         if( std::holds_alternative<long\
    \ long>(value)) {\n      |                                                   \
    \ ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmp3ewyxb_8.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3ewyxb_8.cpp:11:52:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if( std::holds_alternative<long long>(value)) {\n\
    \      |                                                    ^\n/tmp/tmp3ewyxb_8.cpp:14:46:\
    \ error: no matching function for call to \u2018holds_alternative<int>(std::any&)\u2019\
    \n   14 |         if( std::holds_alternative<int>(value)) {\n      |         \
    \                                     ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmp3ewyxb_8.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3ewyxb_8.cpp:14:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   14 |         if( std::holds_alternative<int>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values){\n        if(v.type() == typeid(std::any))\
    \ {\n            result.push_back(std::any_cast<std::any>(v).template as<long>());\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmppqi1urt2.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmppqi1urt2.cpp:12:66: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   12 |             result.push_back(std::any_cast<std::any>(v).template\
    \ as<long>());\n      |                                                      \
    \            ^~\n/tmp/tmppqi1urt2.cpp:12:69: error: expected primary-expression\
    \ before \u2018long\u2019\n   12 |             result.push_back(std::any_cast<std::any>(v).template\
    \ as<long>());\n      |                                                      \
    \               ^~~~\n"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  assert(values.size()\
    \ > 1);\n  assert(values.front()->is_integer());\n  auto filter = [](const std::any&\
    \ v) -> bool {\n    return v->is_integer();\n  };\n  return std::find_if(values.begin(),\
    \ values.end(), filter);\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/cassert:44,\n                \
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n               \
    \  from /tmp/tmp0aratl9o.cpp:2:\n/tmp/tmp0aratl9o.cpp: In function \u2018std::vector<long\
    \ int> filter_integers(std::vector<std::any>)\u2019:\n/tmp/tmp0aratl9o.cpp:10:24:\
    \ error: base operand of \u2018->\u2019 has non-pointer type \u2018__gnu_cxx::__alloc_traits<std::allocator<std::any>,\
    \ std::any>::value_type\u2019 {aka \u2018std::any\u2019}\n   10 |   assert(values.front()->is_integer());\n\
    \      |                        ^~\n/tmp/tmp0aratl9o.cpp: In lambda function:\n\
    /tmp/tmp0aratl9o.cpp:12:13: error: base operand of \u2018->\u2019 has non-pointer\
    \ type \u2018const std::any\u2019\n   12 |     return v->is_integer();\n     \
    \ |             ^~\n/tmp/tmp0aratl9o.cpp: In function \u2018std::vector<long int>\
    \ filter_integers(std::vector<std::any>)\u2019:\n/tmp/tmp0aratl9o.cpp:14:22: error:\
    \ could not convert \u2018std::find_if<__gnu_cxx::__normal_iterator<std::any*,\
    \ std::vector<std::any> >, filter_integers(std::vector<std::any>)::<lambda(const\
    \ std::any&)> >(values.std::vector<std::any>::begin(), values.std::vector<std::any>::end(),\
    \ (filter, filter_integers(std::vector<std::any>)::<lambda(const std::any&)>()))\u2019\
    \ from \u2018__gnu_cxx::__normal_iterator<std::any*, std::vector<std::any> >\u2019\
    \ to \u2018std::vector<long int>\u2019\n   14 |   return std::find_if(values.begin(),\
    \ values.end(), filter);\n      |          ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                      |\n      |                      __gnu_cxx::__normal_iterator<std::any*,\
    \ std::vector<std::any> >\n"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ filtered_ints;\n  for (auto val: values) {\n    if (std::holds_alternative<long\
    \ long>(val)) {\n      filtered_ints.push_back(std::get<long long>(val));\n  \
    \  }\n  }\n  return filtered_ints;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpvzny32ok.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpvzny32ok.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long long int>(std::any&)\u2019\n   11 |     if (std::holds_alternative<long\
    \ long>(val)) {\n      |                                              ^\nIn file\
    \ included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n     \
    \            from /tmp/tmpvzny32ok.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpvzny32ok.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |     if (std::holds_alternative<long long>(val)) {\n    \
    \  |                                              ^\n/tmp/tmpvzny32ok.cpp:12:54:\
    \ error: no matching function for call to \u2018get<long long int>(std::any&)\u2019\
    \n   12 |       filtered_ints.push_back(std::get<long long>(val));\n      |  \
    \                                                    ^\nIn file included from\
    \ /usr/include/c++/9/algorithm:60,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvzny32ok.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    auto integer_values_filtered\
    \ = std::vector<long>();\n    for (const auto& item : values) {\n        if (!(std::holds_alternative<std::map<long,long>>(item)\
    \ || std::holds_alternative<std::vector<long>>(item))){\n            integer_values_filtered.push_back(std::any_cast<long>(item));\n\
    \        }\n    }\n    return integer_values_filtered;\n}\nint main() {\n    auto\
    \ candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnkuhmv9w.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpnkuhmv9w.cpp:11:63: error: no matching function for call to \u2018\
    holds_alternative<std::map<long int, long int, std::less<long int>, std::allocator<std::pair<const\
    \ long int, long int> > > >(const std::any&)\u2019\n   11 |         if (!(std::holds_alternative<std::map<long,long>>(item)\
    \ || std::holds_alternative<std::vector<long>>(item))){\n      |             \
    \                                                  ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpnkuhmv9w.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpnkuhmv9w.cpp:11:63:\
    \ note:   \u2018const std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (!(std::holds_alternative<std::map<long,long>>(item)\
    \ || std::holds_alternative<std::vector<long>>(item))){\n      |             \
    \                                                  ^\n/tmp/tmpnkuhmv9w.cpp:11:114:\
    \ error: no matching function for call to \u2018holds_alternative<std::vector<long\
    \ int, std::allocator<long int> > >(const std::any&)\u2019\n   11 |         if\
    \ (!(std::holds_alternative<std::map<long,long>>(item) || std::holds_alternative<std::vector<long>>(item))){\n\
    \      |                                                                     \
    \                                             ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpnkuhmv9w.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ va"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto &val : values) {\n        auto it = std::any_of(val.begin(),\
    \ val.end(), [](const auto &elem) {\n            return std::is_same_v<decltype(elem.first),\
    \ decltype(static_cast<const std::string *>(nullptr))>;\n        });\n       \
    \ if (it) {\n            out.push_back(std::any_cast<decltype(val[0].first)>(val[0]));\n\
    \        }\n    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmptocpmuwj.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmptocpmuwj.cpp:11:35: error: \u2018class std::any\u2019 has no member\
    \ named \u2018begin\u2019\n   11 |         auto it = std::any_of(val.begin(),\
    \ val.end(), [](const auto &elem) {\n      |                                 \
    \  ^~~~~\n/tmp/tmptocpmuwj.cpp:11:48: error: \u2018class std::any\u2019 has no\
    \ member named \u2018end\u2019\n   11 |         auto it = std::any_of(val.begin(),\
    \ val.end(), [](const auto &elem) {\n      |                                 \
    \               ^~~\n/tmp/tmptocpmuwj.cpp:15:53: error: no match for \u2018operator[]\u2019\
    \ (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n   15 |      \
    \       out.push_back(std::any_cast<decltype(val[0].first)>(val[0]));\n      |\
    \                                                     ^\n/tmp/tmptocpmuwj.cpp:15:53:\
    \ error: no match for \u2018operator[]\u2019 (operand types are \u2018std::any\u2019\
    \ and \u2018int\u2019)\n/tmp/tmptocpmuwj.cpp:15:68: error: no match for \u2018\
    operator[]\u2019 (operand types are \u2018std::any\u2019 and \u2018int\u2019)\n\
    \   15 |             out.push_back(std::any_cast<decltype(val[0].first)>(val[0]));\n\
    \      |                                                                    ^\n"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ results;\n    for(auto i: values) {\n        if(std::holds_alternative<std::vector<int>>(i))\
    \ {\n            std::vector<int> a = std::get<std::vector<int>>(i);\n       \
    \     for(auto j : a) {\n                if(std::holds_alternative<long>(j))\n\
    \                    results.push_back(std::get<long>(j));\n            }\n  \
    \      } else if(std::holds_alternative<std::vector<bool>>(i)) {\n           \
    \ std::vector<bool> a = std::get<std::vector<bool>>(i);\n            for(auto\
    \ j : a) {\n                if(std::holds_alternative<bool>(j))\n            \
    \        results.push_back(std::get<bool>(j));\n            }\n        } else\
    \ if(std::holds_alternative<std::map<long,long>>(i)) {\n            std::map<long,long>\
    \ a = std::get<std::map<long,long>>(i);\n            for(auto j : a) {\n     \
    \           if(std::holds_alternative<long>(j))\n                    results.push_back(std::get<long>(j));\n\
    \            }\n        } else if(std::holds_alternative<std::vector<std::string>>(i))\
    \ {\n            std::vector<std::string> a = std::get<std::vector<std::string>>(i);\n\
    \            for(auto j : a)\n                if(std::holds_alternative<long>(j))\n\
    \                    results.push_back(std::get<long>(j));\n        }\n    }\n\
    \    return results;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpp8q92zmi.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpp8q92zmi.cpp:11:54: error: no matching function for call to \u2018\
    holds_alternative<std::vector<int, std::allocator<int> > >(std::any&)\u2019\n\
    \   11 |         if(std::holds_alternative<std::vector<int>>(i)) {\n      |  \
    \                                                    ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpp8q92zmi.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpp8q92zmi.cpp:11:54:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<std::vector<int>>(i))\
    \ {\n      |                                                      ^\n/tmp/tmpp8q92zmi.cpp:12:62:\
    \ error: no matching function for call to \u2018get<std::vector<int, std::allocator<int>\
    \ > >(std::any&)\u2019\n   12 |             std::vector<int> a = std::get<std::vector<int>>(i);\n\
    \      |                                                              ^\nIn file\
    \ included from /usr/include/c++/9/algorithm:60,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpp8q92zmi.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr "
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    // Iterate over all elements\n    for (const auto &v: values) {\n\
    \        // If this value is vector, iterate over all elements of this vector\n\
    \        if (const auto vtype = v.type()) {\n            if (vtype == typeid(std::vector<std::any>))\
    \ {\n                for (const auto &inner_v: ((std::vector<std::any>)v)) {\n\
    \                    if (const auto inner_vtype = inner_v.type()) {\n        \
    \                // If this inner vector element is integer, add it to result\n\
    \                        if (inner_vtype == typeid(long)) {\n                \
    \            result.push_back(inner_v);\n                        }\n         \
    \           }\n                }\n            }\n        }\n        // If this\
    \ value is string, add it to result\n        else if (const auto vtype = v.type())\
    \ {\n            if (vtype == typeid(std::string)) {\n                result.push_back(static_cast<long>(v.as<std::string>()));\n\
    \            }\n        }\n        // If this value is integer, add it to result\n\
    \        else if (const auto vtype = v.type()) {\n            if (vtype == typeid(long))\
    \ {\n                result.push_back(v.as<long>());\n            }\n        }\n\
    \        // If this value is not integer, ignore it\n        else {\n        \
    \    continue;\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj7a378jk.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpj7a378jk.cpp:13:39: error: \u2018std::type_info::type_info(const std::type_info&)\u2019\
    \ is private within this context\n   13 |         if (const auto vtype = v.type())\
    \ {\n      |                                       ^\nIn file included from /usr/include/c++/9/bits/exception_ptr.h:39,\n\
    \                 from /usr/include/c++/9/exception:143,\n                 from\
    \ /usr/include/c++/9/ios:39,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpj7a378jk.cpp:2:\n/usr/include/c++/9/typeinfo:178:5: note: declared private\
    \ here\n  178 |     type_info(const type_info&);\n      |     ^~~~~~~~~\n/tmp/tmpj7a378jk.cpp:13:40:\
    \ error: could not convert \u2018vtype\u2019 from \u2018const std::type_info\u2019\
    \ to \u2018bool\u2019\n   13 |         if (const auto vtype = v.type()) {\n  \
    \    |                                        ^\n      |                     \
    \                   |\n      |                                        const std::type_info\n\
    /tmp/tmpj7a378jk.cpp:15:67: error: no matching function for call to \u2018std::vector<std::any>::vector(const\
    \ std::any&)\u2019\n   15 |                 for (const auto &inner_v: ((std::vector<std::any>)v))\
    \ {\n      |                                                                 \
    \  ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/functional:62,\n                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n\
    \                 from /usr/include/c++/9/algorithm:71,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmpj7a378jk.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2: note: candidate:\
    \ \u2018template<class _InputIterator, class> std::vector<_Tp, _Alloc>::vect"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto &&item : values) {\n        if (auto *it = std::find_if(std::begin(item),\
    \ std::end(item), [&](auto &val){return (std::is_same<decltype(*it), long>());}))\
    \ {\n            out.push_back(std::get<long>(*it));\n        }\n    }\n    return\
    \ out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa1qwjw1n.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpa1qwjw1n.cpp:11:52: error: no matching function for call to \u2018\
    begin(std::any&)\u2019\n   11 |         if (auto *it = std::find_if(std::begin(item),\
    \ std::end(item), [&](auto &val){return (std::is_same<decltype(*it), long>());}))\
    \ {\n      |                                                    ^\nIn file included\
    \ from /usr/include/c++/9/bits/range_access.h:36,\n                 from /usr/include/c++/9/string:54,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpa1qwjw1n.cpp:2:\n/usr/include/c++/9/initializer_list:89:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\
    \n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n\
    /usr/include/c++/9/initializer_list:89:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpa1qwjw1n.cpp:11:52: note:   \u2018std::any\u2019 is not derived\
    \ from \u2018std::initializer_list<_Tp>\u2019\n   11 |         if (auto *it =\
    \ std::find_if(std::begin(item), std::end(item), [&](auto &val){return (std::is_same<decltype(*it),\
    \ long>());})) {\n      |                                                    ^\n\
    In file included from /usr/include/c++/9/string:54,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \      "
  stdout: ''
  timestamp: 1660108489
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ res;\n  for(auto val : values) {\n    if(auto int_val = get_integer_val(val))\
    \ {\n      res.push_back(int_val);\n    } else {\n      res.push_back(val);\n\
    \    }\n  }\n  return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwirrj6r8.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpwirrj6r8.cpp:11:23: error: \u2018get_integer_val\u2019 was not declared\
    \ in this scope\n   11 |     if(auto int_val = get_integer_val(val)) {\n     \
    \ |                       ^~~~~~~~~~~~~~~\n/tmp/tmpwirrj6r8.cpp:14:24: error:\
    \ no matching function for call to \u2018std::vector<long int>::push_back(std::any&)\u2019\
    \n   14 |       res.push_back(val);\n      |                        ^\nIn file\
    \ included from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpwirrj6r8.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type&\
    \ __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018std::any\u2019 to \u2018\
    std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019}\n 1200\
    \ |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ out;\n  long value;\n  for (auto& value : values) {\n    if (std::holds_alternative<long>(value))\
    \ {\n      out.push_back(std::any_cast<long>(value));\n    } else if (std::holds_alternative<std::map<long,long>>(value))\
    \ {\n      for (auto& pair : std::any_cast<std::map<long,long>>(value)) {\n  \
    \      if (pair.second == value)\n          out.push_back(pair.first);\n     \
    \ }\n    } else if (std::holds_alternative<std::vector<long>>(value)) {\n    \
    \  for (auto& val : std::any_cast<std::vector<long>>(value)) {\n        if (val\
    \ == value)\n          out.push_back(value);\n      }\n    }\n  }\n  return out;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqwhbo6ef.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpqwhbo6ef.cpp:12:43: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   12 |     if (std::holds_alternative<long>(value))\
    \ {\n      |                                           ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpqwhbo6ef.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpqwhbo6ef.cpp:12:43:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   12 |     if (std::holds_alternative<long>(value)) {\n      |\
    \                                           ^\n/tmp/tmpqwhbo6ef.cpp:14:65: error:\
    \ no matching function for call to \u2018holds_alternative<std::map<long int,\
    \ long int, std::less<long int>, std::allocator<std::pair<const long int, long\
    \ int> > > >(std::any&)\u2019\n   14 |     } else if (std::holds_alternative<std::map<long,long>>(value))\
    \ {\n      |                                                                 ^\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpqwhbo6ef.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpqwhbo6ef.cpp:14:65:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   14 |     } else if (std::holds_alternative<std::map<long,long>>(value))\
    \ {\n "
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto val : values) {\n        if (std::holds_alternative<std::string>(val))\
    \ {\n            out.push_back(std::stoul(std::get<std::string>(val).c_str()));\n\
    \        } else if (std::holds_alternative<long>(val)) {\n            out.push_back(std::get<long>(val));\n\
    \        } else {\n            out.push_back(0);\n        }\n    }\n    return\
    \ out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmkxy4xny.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpmkxy4xny.cpp:11:52: error: no matching function for call to \u2018\
    holds_alternative<std::string>(std::any&)\u2019\n   11 |         if (std::holds_alternative<std::string>(val))\
    \ {\n      |                                                    ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpmkxy4xny.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpmkxy4xny.cpp:11:52:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<std::string>(val)) {\n\
    \      |                                                    ^\n/tmp/tmpmkxy4xny.cpp:12:63:\
    \ error: no matching function for call to \u2018get<std::string>(std::any&)\u2019\
    \n   12 |             out.push_back(std::stoul(std::get<std::string>(val).c_str()));\n\
    \      |                                                               ^\nIn file\
    \ included from /usr/include/c++/9/algorithm:60,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpmkxy4xny.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _T"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ ret(std::end(values));\n\tfor(auto it : values) {\n\t\tif(std::is_same_v<int,\
    \ decltype(std::any_cast<int>(it))> || std::is_same_v<long, decltype(std::any_cast<long>(it))>\
    \ || std::is_same_v<long long, decltype(std::any_cast<long long>(it))> || std::is_same_v<std::string,\
    \ decltype(std::any_cast<std::string>(it))> || std::is_same_v<std::map, decltype(std::any_cast<std::map<long,\
    \ long>>(it))> || std::is_same_v<std::vector<long>, decltype(std::any_cast<std::vector<long>>(it))>)\n\
    \t\t\tret.push_back(std::any_cast<long>(it));\n\t}\n\treturn ret;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyu9zisdl.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpyu9zisdl.cpp:9:40: error: no matching function for call to \u2018std::vector<long\
    \ int>::vector(std::vector<std::any>::iterator)\u2019\n    9 |  std::vector<long>\
    \ ret(std::end(values));\n      |                                        ^\nIn\
    \ file included from /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpyu9zisdl.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note: candidate: \u2018template<class _InputIterator, class> std::vector<_Tp,\
    \ _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)\u2019\
    \n  650 |  vector(_InputIterator __first, _InputIterator __last,\n      |  ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:650:2: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpyu9zisdl.cpp:9:40: note:   candidate expects 3 arguments, 1\
    \ provided\n    9 |  std::vector<long> ret(std::end(values));\n      |       \
    \                                 ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpyu9zisdl.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:622:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>,\
    \ const allocator_type&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::allocator_type = std::allocator<long int>]\u2019\n\
    \  622 |       vector(initializer_list<value_type> __l,\n      |       ^~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:622:43: note:   no known conversion for argument\
    \ 1 from "
  stdout: ''
  timestamp: 1660108489
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ filtered;\n\tstd::set<long> set_to_check;\n\n\tfor (auto i : values) {\n\t\t\
    if (std::is_same<std::string, std::any>::value) {\n\t\t\tif (i.operator std::string()\
    \ != \"abc\") {\n\t\t\t\tfiltered.push_back(i.operator long());\n\t\t\t} else\
    \ {\n\t\t\t\tset_to_check.insert(i.operator long());\n\t\t\t}\n\t\t} else if (std::is_same<std::map<long,long>,\
    \ std::any>::value) {\n\t\t\tfor (auto j : i.operator std::map<long,long>()) {\n\
    \t\t\t\tif (j.first == 42) {\n\t\t\t\t\tset_to_check.insert(j.first);\n\t\t\t\t\
    }\n\t\t\t}\n\t\t} else if (std::is_same<std::vector<long>, std::any>::value) {\n\
    \t\t\tfor (auto j : i.operator std::vector<long>()) {\n\t\t\t\tset_to_check.insert(j);\n\
    \t\t\t}\n\t\t} else if (std::is_same<long,std::any>::value) {\n\t\t\tif (i.operator\
    \ long() != 42) {\n\t\t\t\tfiltered.push_back(i.operator long());\n\t\t\t} else\
    \ {\n\t\t\t\tset_to_check.insert(i.operator long());\n\t\t\t}\n\t\t} else if (std::is_same<int,std::any>::value)\
    \ {\n\t\t\tif (i.operator int() != 42) {\n\t\t\t\tfiltered.push_back(i.operator\
    \ int());\n\t\t\t} else {\n\t\t\t\tset_to_check.insert(i.operator int());\n\t\t\
    \t}\n\t\t} else {\n\t\t\tfiltered.push_back(i.operator long());\n\t\t}\n\t}\n\t\
    for (auto i : set_to_check) {\n\t\tfiltered.push_back(i);\n\t}\n\treturn filtered;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp9hb6adm.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpp9hb6adm.cpp:14:24: error: \u2018class std::any\u2019 has no member\
    \ named \u2018operator std::string\u2019\n   14 |    if (i.operator std::string()\
    \ != \"abc\") {\n      |                        ^~~~~~\n/tmp/tmpp9hb6adm.cpp:15:35:\
    \ error: \u2018class std::any\u2019 has no member named \u2018operator long int\u2019\
    \n   15 |     filtered.push_back(i.operator long());\n      |                \
    \                   ^~~~\n/tmp/tmpp9hb6adm.cpp:17:36: error: \u2018class std::any\u2019\
    \ has no member named \u2018operator long int\u2019\n   17 |     set_to_check.insert(i.operator\
    \ long());\n      |                                    ^~~~\n/tmp/tmpp9hb6adm.cpp:20:34:\
    \ error: \u2018class std::any\u2019 has no member named \u2018operator std::map<long\
    \ int, long int>\u2019\n   20 |    for (auto j : i.operator std::map<long,long>())\
    \ {\n      |                                  ^~~~~~~~~~~~~~\n/tmp/tmpp9hb6adm.cpp:26:34:\
    \ error: \u2018class std::any\u2019 has no member named \u2018operator std::vector<long\
    \ int>\u2019\n   26 |    for (auto j : i.operator std::vector<long>()) {\n   \
    \   |                                  ^~~~~~~~~~~~\n/tmp/tmpp9hb6adm.cpp:30:19:\
    \ error: \u2018class std::any\u2019 has no member named \u2018operator long int\u2019\
    \n   30 |    if (i.operator long() != 42) {\n      |                   ^~~~\n\
    /tmp/tmpp9hb6adm.cpp:31:35: error: \u2018class std::any\u2019 has no member named\
    \ \u2018operator long int\u2019\n   31 |     filtered.push_back(i.operator long());\n\
    \      |                                   ^~~~\n/tmp/tmpp9hb6adm.cpp:33:36: error:\
    \ \u2018class std::any\u2019 has no member named \u2018operator long int\u2019\
    \n   33 |     set_to_check.insert(i.operator long());\n      |               \
    \                     ^~~~\n/tmp/tmpp9hb6adm.cpp:36:19: error: \u2018class std::any\u2019\
    \ has no member named \u2018operator int\u2019\n   36 |    if (i.operator int()\
    \ != 42) {\n      |                   ^~~\n/tmp/tmpp9hb6adm.cpp:37:35: error:\
    \ \u2018class std::any\u2019 has no member named \u2018operator int\u2019\n  \
    \ 37 |     filtered.push_back(i.operator int());\n      |   "
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (const auto& el : values) {\n        if (std::holds_alternative<long>(el))\
    \ {\n            res.push_back(std::get<long>(el));\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptpki80xo.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmptpki80xo.cpp:11:44: error: no matching function for call to \u2018\
    holds_alternative<long int>(const std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(el))\
    \ {\n      |                                            ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmptpki80xo.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmptpki80xo.cpp:11:44:\
    \ note:   \u2018const std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(el)) {\n      |\
    \                                            ^\n/tmp/tmptpki80xo.cpp:12:44: error:\
    \ no matching function for call to \u2018get<long int>(const std::any&)\u2019\n\
    \   12 |             res.push_back(std::get<long>(el));\n      |             \
    \                               ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptpki80xo.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)\u2019\n  224\
    \ |     get("
  stdout: ''
  timestamp: 1660108489
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &&x : values) {\n        if(x.get<std::int64_t>()) {\n\
    \            result.push_back(x.get<std::int64_t>());\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfcdb1xhq.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpfcdb1xhq.cpp:11:14: error: \u2018class std::any\u2019 has no member\
    \ named \u2018get\u2019\n   11 |         if(x.get<std::int64_t>()) {\n      |\
    \              ^~~\n/tmp/tmpfcdb1xhq.cpp:11:30: error: expected primary-expression\
    \ before \u2018>\u2019 token\n   11 |         if(x.get<std::int64_t>()) {\n  \
    \    |                              ^\n/tmp/tmpfcdb1xhq.cpp:11:32: error: expected\
    \ primary-expression before \u2018)\u2019 token\n   11 |         if(x.get<std::int64_t>())\
    \ {\n      |                                ^\n/tmp/tmpfcdb1xhq.cpp:12:32: error:\
    \ \u2018class std::any\u2019 has no member named \u2018get\u2019\n   12 |    \
    \         result.push_back(x.get<std::int64_t>());\n      |                  \
    \              ^~~\n/tmp/tmpfcdb1xhq.cpp:12:48: error: expected primary-expression\
    \ before \u2018>\u2019 token\n   12 |             result.push_back(x.get<std::int64_t>());\n\
    \      |                                                ^\n/tmp/tmpfcdb1xhq.cpp:12:50:\
    \ error: expected primary-expression before \u2018)\u2019 token\n   12 |     \
    \        result.push_back(x.get<std::int64_t>());\n      |                   \
    \                               ^\n"
  stdout: ''
  timestamp: 1660108488
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    auto res\
    \ = std::vector<long>{};\n    for (const auto& v : values) {\n        if (v.type()\
    \ == typeid(int)) {\n            res.push_back(v);\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg9yb801b.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpg9yb801b.cpp:12:28: error: no matching function for call to \u2018\
    std::vector<long int>::push_back(const std::any&)\u2019\n   12 |             res.push_back(v);\n\
    \      |                            ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpg9yb801b.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018const std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type&\
    \ __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018const std::any\u2019 to\
    \ \u2018std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019\
    }\n 1200 |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n"
  stdout: ''
  timestamp: 1660108489
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    auto out\
    \ = std::vector<long>();\n    for(auto value : values) {\n        if(typeid(long)\
    \ == typeid(value)) {\n            out.push_back(value.as<long>());\n        }\n\
    \    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpggl6brtg.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpggl6brtg.cpp:12:33: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   12 |             out.push_back(value.as<long>());\n\
    \      |                                 ^~\n/tmp/tmpggl6brtg.cpp:12:36: error:\
    \ expected primary-expression before \u2018long\u2019\n   12 |             out.push_back(value.as<long>());\n\
    \      |                                    ^~~~\n"
  stdout: ''
  timestamp: 1660108489
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ values_list;\n    long sum = 0;\n    for (auto & val : values) {\n        if\
    \ (!val && val != std::map<long,long>() && val != std::vector<long>()) {\n   \
    \         throw std::runtime_error(\"Not valid value type!\");\n        }\n  \
    \      if (val && val != std::map<long,long>() && val != std::vector<long>())\
    \ {\n            sum += std::any_cast<int>(val);\n        } else if (val && val\
    \ != std::map<long,long>()) {\n            sum += std::any_cast<long>(val);\n\
    \        } else if (val) {\n            sum += std::any_cast<long>(val);\n   \
    \     }\n        values_list.push_back(sum);\n    }\n    return values_list;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0zrsxr5g.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp0zrsxr5g.cpp:12:13: error: no match for \u2018operator!\u2019 (operand\
    \ type is \u2018std::any\u2019)\n   12 |         if (!val && val != std::map<long,long>()\
    \ && val != std::vector<long>()) {\n      |             ^~~~\n/tmp/tmp0zrsxr5g.cpp:12:13:\
    \ note: candidate: \u2018operator!(bool)\u2019 <built-in>\n/tmp/tmp0zrsxr5g.cpp:12:13:\
    \ note:   no known conversion for argument 1 from \u2018std::any\u2019 to \u2018\
    bool\u2019\n/tmp/tmp0zrsxr5g.cpp:12:25: error: no match for \u2018operator!=\u2019\
    \ (operand types are \u2018std::any\u2019 and \u2018std::map<long int, long int>\u2019\
    )\n   12 |         if (!val && val != std::map<long,long>() && val != std::vector<long>())\
    \ {\n      |                     ~~~ ^~      ~~~~~~~~~~~~~~~~\n      |       \
    \              |           |\n      |                     std::any    std::map<long\
    \ int, long int>\nIn file included from /usr/include/c++/9/regex:62,\n       \
    \          from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n     \
    \            from /tmp/tmp0zrsxr5g.cpp:2:\n/usr/include/c++/9/bits/regex.h:1037:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator!=(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1037 |     operator!=(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1037:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp0zrsxr5g.cpp:12:48:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\
    \n   12 |         if (!val && val != std::map<long,long>() && val != std::vector<long>())\
    \ {\n      |                                                ^\nIn file included\
    \ from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp0zrsxr5g.cpp:2:\n/usr/include/c++/9/bits/regex.h:1112:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11"
  stdout: ''
  timestamp: 1660108489
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ output;\n    for (auto& value : values) {\n        if (!value.type().compare(\"\
    int\"))\n            output.push_back(std::any_cast<long>(value));\n    }\n  \
    \  return output;\n}\nint main() {\n    auto candidate = filter_integers;\n  \
    \  assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n  \
    \  assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpktoa3k0g.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpktoa3k0g.cpp:11:27: error: \u2018const class std::type_info\u2019 has\
    \ no member named \u2018compare\u2019\n   11 |         if (!value.type().compare(\"\
    int\"))\n      |                           ^~~~~~~\n"
  stdout: ''
  timestamp: 1660108489
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    std::vector<long> v;\n    std::vector<long>::iterator it;\n    for(auto\
    \ i:values) {\n        if(std::holds_alternative<long long>(i)) {\n          \
    \  v.push_back(*(std::get<long long>(i)));\n        } else if(std::holds_alternative<long>(i))\
    \ {\n            v.push_back(*std::get<long>(i));\n        } else if(std::holds_alternative<int>(i))\
    \ {\n            v.push_back(*std::get<int>(i));\n        } else if(std::holds_alternative<double>(i))\
    \ {\n            v.push_back(*std::get<double>(i));\n        } else {\n      \
    \      out.push_back(*std::get<std::string>(i));\n        }\n    }\n    for(it=v.begin();\
    \ it<v.end(); ++it) {\n        if(*it<0)\n            out.push_back(*(std::get<std::string>(it)));\n\
    \    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp4da62jnv.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp4da62jnv.cpp:13:47: error: no matching function for call to \u2018\
    holds_alternative<long long int>(std::any&)\u2019\n   13 |         if(std::holds_alternative<long\
    \ long>(i)) {\n      |                                               ^\nIn file\
    \ included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n     \
    \            from /tmp/tmp4da62jnv.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp4da62jnv.cpp:13:47:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         if(std::holds_alternative<long long>(i)) {\n   \
    \   |                                               ^\n/tmp/tmp4da62jnv.cpp:14:48:\
    \ error: no matching function for call to \u2018get<long long int>(std::any&)\u2019\
    \n   14 |             v.push_back(*(std::get<long long>(i)));\n      |       \
    \                                         ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4da62jnv.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)\u2019\n  2"
  stdout: ''
  timestamp: 1660108489
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    // Return\
    \ empty vector if given vector is empty\n    if (values.size() == 0) {\n     \
    \   return std::vector<long>();\n    }\n    // Create vector of output integers\n\
    \    std::vector<long> result;\n    // Iterate over given vector of any values\n\
    \    std::for_each(values.cbegin(), values.cend(), [&result](std::any value){\n\
    \        // if given value is integer then store it in result vector\n       \
    \ if (value.type() == typeid(int)) {\n            result.push_back(static_cast<long>(value));\n\
    \        }\n    });\n    // Return result vector\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdqp9dpy8.cpp: In lambda function:\n/tmp/tmpdqp9dpy8.cpp:19:53:\
    \ error: invalid static_cast from type \u2018std::any\u2019 to type \u2018long\
    \ int\u2019\n   19 |             result.push_back(static_cast<long>(value));\n\
    \      |                                                     ^\n"
  stdout: ''
  timestamp: 1660108489
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ out;\n  for (auto elem : values) {\n    if (!std::holds_alternative<long>(elem))\
    \ {\n      out.push_back(std::any_cast<long>(elem));\n    } else {\n      out.push_back(*std::any_cast<long>(elem));\n\
    \    }\n  }\n  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpr4htdk30.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpr4htdk30.cpp:11:43: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |     if (!std::holds_alternative<long>(elem))\
    \ {\n      |                                           ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpr4htdk30.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpr4htdk30.cpp:11:43:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |     if (!std::holds_alternative<long>(elem)) {\n      |\
    \                                           ^\n/tmp/tmpr4htdk30.cpp:14:46: error:\
    \ invalid type argument of unary \u2018*\u2019 (have \u2018long int\u2019)\n \
    \  14 |       out.push_back(*std::any_cast<long>(elem));\n      |            \
    \                                  ^\n"
  stdout: ''
  timestamp: 1660108489
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto& value : values) {\n        if(value.get_type_info() !=\
    \ typeid(int)) {\n            result.push_back(value);\n        }\n    }\n   \
    \ return result;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp8tnt9bfr.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp8tnt9bfr.cpp:11:18: error: \u2018class std::any\u2019 has no member\
    \ named \u2018get_type_info\u2019; did you mean \u2018std::any::_Op std::any::_Op_get_type_info\u2019\
    ? (not accessible from this context)\n   11 |         if(value.get_type_info()\
    \ != typeid(int)) {\n      |                  ^~~~~~~~~~~~~\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:126,\n              \
    \   from /tmp/tmp8tnt9bfr.cpp:2:\n/usr/include/c++/9/any:362:14: note: declared\
    \ private here\n  362 |  _Op_access, _Op_get_type_info, _Op_clone, _Op_destroy,\
    \ _Op_xfer\n      |              ^~~~~~~~~~~~~~~~~\n/tmp/tmp8tnt9bfr.cpp:12:35:\
    \ error: no matching function for call to \u2018std::vector<long int>::push_back(std::any&)\u2019\
    \n   12 |             result.push_back(value);\n      |                      \
    \             ^\nIn file included from /usr/include/c++/9/vector:67,\n       \
    \          from /usr/include/c++/9/functional:62,\n                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n\
    \                 from /usr/include/c++/9/algorithm:71,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmp8tnt9bfr.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7: note:\
    \ candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type&\
    \ __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value"
  stdout: ''
  timestamp: 1660108489
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ out;\n  for (auto& v : values) {\n    if (v && typeid(*v) == typeid(long)) {\n\
    \      out.push_back(*reinterpret_cast<long*>(&v));\n    }\n  }\n  return out;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8r13a81q.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp8r13a81q.cpp:11:21: error: no match for \u2018operator*\u2019 (operand\
    \ type is \u2018std::any\u2019)\n   11 |     if (v && typeid(*v) == typeid(long))\
    \ {\n      |                     ^~\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp8r13a81q.cpp:2:\n/usr/include/c++/9/complex:391:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  391 |     operator*(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:391:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp8r13a81q.cpp:11:22:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   11 |     if (v && typeid(*v) == typeid(long)) {\n      |                \
    \      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n           \
    \      from /tmp/tmp8r13a81q.cpp:2:\n/usr/include/c++/9/complex:400:5: note: candidate:\
    \ \u2018template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&,\
    \ const _Tp&)\u2019\n  400 |     operator*(const complex<_Tp>& __x, const _Tp&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:400:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp8r13a81q.cpp:11:22: note: \
    \  \u2018std::any\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   11 |     if (v && typeid(*v) == typeid(long)) {\n      |                \
    \      ^\nIn file included from /usr/include/c++/9/ccomplex:39,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n           \
    \      from /tmp/tmp8r13a81q.cpp:2:\n/usr/include/c++/9/complex:409:5: note: candidate:\
    \ \u2018template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const\
    \ std::complex<_Tp>&)\u2019\n  409 |     operator*(const _Tp& __x, const complex<_Tp>"
  stdout: ''
  timestamp: 1660108489
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector\
    \ <long> res;\n    for (const auto &v : values) {\n        if (auto* t = dynamic_cast<long*>(v.as<long*>()))\
    \ {\n            res.push_back(*t);\n        }\n    }\n    return res;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdxjdvpx4.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpdxjdvpx4.cpp:11:45: error: \u2018const class std::any\u2019 has no\
    \ member named \u2018as\u2019\n   11 |         if (auto* t = dynamic_cast<long*>(v.as<long*>()))\
    \ {\n      |                                             ^~\n/tmp/tmpdxjdvpx4.cpp:11:48:\
    \ error: expected primary-expression before \u2018long\u2019\n   11 |        \
    \ if (auto* t = dynamic_cast<long*>(v.as<long*>())) {\n      |               \
    \                                 ^~~~\n/tmp/tmpdxjdvpx4.cpp:11:48: error: expected\
    \ \u2018)\u2019 before \u2018long\u2019\n   11 |         if (auto* t = dynamic_cast<long*>(v.as<long*>()))\
    \ {\n      |                                                ^~~~\n      |    \
    \                                            )\n/tmp/tmpdxjdvpx4.cpp:11:48: error:\
    \ expected \u2018)\u2019 before \u2018long\u2019\n   11 |         if (auto* t\
    \ = dynamic_cast<long*>(v.as<long*>())) {\n      |            ~              \
    \                     ^~~~\n      |                                          \
    \      )\n/tmp/tmpdxjdvpx4.cpp:11:57: error: expected primary-expression before\
    \ \u2018)\u2019 token\n   11 |         if (auto* t = dynamic_cast<long*>(v.as<long*>()))\
    \ {\n      |                                                         ^\n"
  stdout: ''
  timestamp: 1660108489
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ output;\n  for(const auto& val : values) {\n    if(auto i = std::any_cast<long>(val);\
    \ i != std::any_cast<long>()){\n      output.push_back(*i);\n    }\n  }\n  return\
    \ output;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8a6xh103.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp8a6xh103.cpp:11:68: error: no matching function for call to \u2018\
    any_cast<long int>()\u2019\n   11 |     if(auto i = std::any_cast<long>(val);\
    \ i != std::any_cast<long>()){\n      |                                      \
    \                              ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:126,\n\
    \                 from /tmp/tmp8a6xh103.cpp:2:\n/usr/include/c++/9/any:452:23:\
    \ note: candidate: \u2018_ValueType std::any_cast(const std::any&) [with _ValueType\
    \ = long int]\u2019\n  452 |     inline _ValueType any_cast(const any& __any)\n\
    \      |                       ^~~~~~~~\n/usr/include/c++/9/any:452:23: note:\
    \   candidate expects 1 argument, 0 provided\n/usr/include/c++/9/any:478:23: note:\
    \ candidate: \u2018_ValueType std::any_cast(std::any&) [with _ValueType = long\
    \ int]\u2019\n  478 |     inline _ValueType any_cast(any& __any)\n      |    \
    \                   ^~~~~~~~\n/usr/include/c++/9/any:478:23: note:   candidate\
    \ expects 1 argument, 0 provided\n/usr/include/c++/9/any:492:23: note: candidate:\
    \ \u2018_ValueType std::any_cast(std::any&&) [with _ValueType = long int]\u2019\
    \n  492 |     inline _ValueType any_cast(any&& __any)\n      |               \
    \        ^~~~~~~~\n/usr/include/c++/9/any:492:23: note:   candidate expects 1\
    \ argument, 0 provided\n/usr/include/c++/9/any:547:30: note: candidate: \u2018\
    const _ValueType* std::any_cast(const std::any*) [with _ValueType = long int]\u2019\
    \n  547 |     inline const _ValueType* any_cast(const any* __any) noexcept\n \
    \     |                              ^~~~~~~~\n/usr/include/c++/9/any:547:30:\
    \ note:   candidate expects 1 argument, 0 provided\n/usr/include/c++/9/any:556:24:\
    \ note: candidate: \u2018_ValueType* std::any_cast(std::any*) [with _ValueType\
    \ = long int]\u2019\n  556 |     inline _ValueType* any_cast(any* __any) noexcept\n\
    \      |                        ^~~~~~~~\n/usr/include/c++/9/any:556:24: note:\
    \   candidate expects 1 argument, 0 provided\n/tmp/tmp8a6xh103.cpp:12:25: error:\
    \ invalid type argument of"
  stdout: ''
  timestamp: 1660108490
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto val : values) {\n        auto type = typeid(*val);\n    \
    \    if(type == typeid(std::string)) out.push_back(std::stoi(val));\n        else\
    \ if(type == typeid(std::vector<long>)) out.push_back(val->as<std::vector<long>>());\n\
    \        else if(type == typeid(std::map<long,long>)) out.push_back(val->as<std::map<long,long>>());\n\
    \        else if(type == typeid(std::vector<std::any>)) out.push_back(val->as<std::vector<std::any>>());\n\
    \        else continue;\n    }\n    return out;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxulews0g.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpxulews0g.cpp:11:28: error: no match for \u2018operator*\u2019 (operand\
    \ type is \u2018std::any\u2019)\n   11 |         auto type = typeid(*val);\n \
    \     |                            ^~~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxulews0g.cpp:2:\n/usr/include/c++/9/complex:391:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  391 |     operator*(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:391:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxulews0g.cpp:11:29:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   11 |         auto type = typeid(*val);\n      |                         \
    \    ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n           \
    \      from /tmp/tmpxulews0g.cpp:2:\n/usr/include/c++/9/complex:400:5: note: candidate:\
    \ \u2018template<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&,\
    \ const _Tp&)\u2019\n  400 |     operator*(const complex<_Tp>& __x, const _Tp&\
    \ __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:400:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpxulews0g.cpp:11:29: note: \
    \  \u2018std::any\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   11 |         auto type = typeid(*val);\n      |                         \
    \    ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n           \
    \      from /tmp/tmpxulews0g.cpp:2:\n/usr/include/c++/9/complex:409:5: note: candidate:\
    \ \u2018template<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const\
    \ std::complex<_Tp>&)\u2019\n  409 |     operator*(const _Tp& __x, const complex<_Tp>"
  stdout: ''
  timestamp: 1660108490
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (const auto& v : values) {\n        std::any vv = v;\n       \
    \ if (std::any_of(vv.begin(), vv.end(), [](auto& elem) {\n                return\
    \ std::is_same<decltype(std::any_of(elem.begin(), elem.end())), bool>::value &&\
    \ std::is_integral<decltype(std::any_of(elem.begin(), elem.end()))>::value;\n\
    \            }))\n            ret.push_back(std::any_cast<decltype(std::any_cast<decltype(value)>(*vv))>(*vv));\n\
    \    }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmptaulujtk.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmptaulujtk.cpp:12:28: error: \u2018class std::any\u2019 has no member\
    \ named \u2018begin\u2019\n   12 |         if (std::any_of(vv.begin(), vv.end(),\
    \ [](auto& elem) {\n      |                            ^~~~~\n/tmp/tmptaulujtk.cpp:12:40:\
    \ error: \u2018class std::any\u2019 has no member named \u2018end\u2019\n   12\
    \ |         if (std::any_of(vv.begin(), vv.end(), [](auto& elem) {\n      |  \
    \                                      ^~~\n/tmp/tmptaulujtk.cpp:15:73: error:\
    \ \u2018value\u2019 was not declared in this scope; did you mean \u2018values\u2019\
    ?\n   15 |             ret.push_back(std::any_cast<decltype(std::any_cast<decltype(value)>(*vv))>(*vv));\n\
    \      |                                                                     \
    \    ^~~~~\n      |                                                          \
    \               values\n/tmp/tmptaulujtk.cpp:15:81: error: no match for \u2018\
    operator*\u2019 (operand type is \u2018std::any\u2019)\n   15 |             ret.push_back(std::any_cast<decltype(std::any_cast<decltype(value)>(*vv))>(*vv));\n\
    \      |                                                                     \
    \            ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n    \
    \             from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n   \
    \              from /tmp/tmptaulujtk.cpp:2:\n/usr/include/c++/9/complex:391:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  391 |     operator*(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:391:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmptaulujtk.cpp:15:82:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   15 |             ret.push_back(std::any_cast<decltype(std::any_cast<decltype(value)>(*vv))>(*vv));\n\
    \      |                                                                     \
    \             ^~\nIn file included from /usr/include/c++/9/ccomplex"
  stdout: ''
  timestamp: 1660108490
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    assert(std::any_of(values.cbegin(),\
    \ values.cend(), [](auto const& v){return std::is_integral_v<decltype(v)>;}));\n\
    \    std::vector<long> ret;\n    for(const auto& v : values)\n        if(std::any_of(v.cbegin(),\
    \ v.cend(), [](auto const& v){return std::is_integral_v<decltype(v)>;})) {\n \
    \           ret.push_back(v.get<long>());\n        }\n    return ret;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxyh48l_u.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpxyh48l_u.cpp:12:26: error: \u2018const class std::any\u2019 has no\
    \ member named \u2018cbegin\u2019\n   12 |         if(std::any_of(v.cbegin(),\
    \ v.cend(), [](auto const& v){return std::is_integral_v<decltype(v)>;})) {\n \
    \     |                          ^~~~~~\n/tmp/tmpxyh48l_u.cpp:12:38: error: \u2018\
    const class std::any\u2019 has no member named \u2018cend\u2019\n   12 |     \
    \    if(std::any_of(v.cbegin(), v.cend(), [](auto const& v){return std::is_integral_v<decltype(v)>;}))\
    \ {\n      |                                      ^~~~\n/tmp/tmpxyh48l_u.cpp:13:29:\
    \ error: \u2018const class std::any\u2019 has no member named \u2018get\u2019\n\
    \   13 |             ret.push_back(v.get<long>());\n      |                  \
    \           ^~~\n/tmp/tmpxyh48l_u.cpp:13:33: error: expected primary-expression\
    \ before \u2018long\u2019\n   13 |             ret.push_back(v.get<long>());\n\
    \      |                                 ^~~~\n"
  stdout: ''
  timestamp: 1660108490
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ v;\n    // Iterate through all values in the vector and add integers\n    for\
    \ (auto it = values.begin(); it != values.end(); ++it)\n        v.push_back(long((*it).as<int>()));\n\
    \    return v;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4ees4oye.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp4ees4oye.cpp:12:32: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   12 |         v.push_back(long((*it).as<int>()));\n\
    \      |                                ^~\n/tmp/tmp4ees4oye.cpp:12:21: error:\
    \ expected primary-expression before \u2018long\u2019\n   12 |         v.push_back(long((*it).as<int>()));\n\
    \      |                     ^~~~\n"
  stdout: ''
  timestamp: 1660108490
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    // Get\
    \ all integer types\n    const std::set<long> int_types = {\n        1, // int\n\
    \        2, // short\n        4, // long\n        8, // long long\n        16,\
    \ // intmax_t\n        32, // uintmax_t\n        64, // float\n        128, //\
    \ double\n        256,\n    };\n    std::vector<long> res;\n    // Go over all\
    \ values\n    for (const auto & value : values) {\n        // If it is any C++\
    \ type\n        if (int_types.count(value.get_type())) {\n            // Add to\
    \ result vector\n            res.push_back(value);\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4p8wuzl2.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp4p8wuzl2.cpp:25:35: error: \u2018const class std::any\u2019 has no\
    \ member named \u2018get_type\u2019\n   25 |         if (int_types.count(value.get_type()))\
    \ {\n      |                                   ^~~~~~~~\n/tmp/tmp4p8wuzl2.cpp:27:32:\
    \ error: no matching function for call to \u2018std::vector<long int>::push_back(const\
    \ std::any&)\u2019\n   27 |             res.push_back(value);\n      |       \
    \                         ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4p8wuzl2.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018const std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type&\
    \ __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018const std::any\u2019 to\
    \ \u2018std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019\
    }\n 1200 |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n"
  stdout: ''
  timestamp: 1660108490
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::any\
    \ x;\n    for (const auto& i : values) {\n        std::visit([](auto&& v){\n \
    \           try {\n                std::any_cast<long>(v);\n            }\n  \
    \          catch(...) {\n                x = v;\n            }\n        }, i);\n\
    \    }\n    return std::vector<long>{std::any_cast<long>(x)};\n}\nint main() {\n\
    \    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp9p8pm1_.cpp: In lambda function:\n/tmp/tmpp9p8pm1_.cpp:16:17:\
    \ error: \u2018x\u2019 is not captured\n   16 |                 x = v;\n     \
    \ |                 ^\n/tmp/tmpp9p8pm1_.cpp:11:21: note: the lambda has no capture-default\n\
    \   11 |         std::visit([](auto&& v){\n      |                     ^\n/tmp/tmpp9p8pm1_.cpp:9:14:\
    \ note: \u2018std::any x\u2019 declared here\n    9 |     std::any x;\n      |\
    \              ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpp9p8pm1_.cpp:2:\n/usr/include/c++/9/variant: In\
    \ instantiation of \u2018constexpr decltype(auto) std::visit(_Visitor&&, _Variants&&\
    \ ...) [with _Visitor = filter_integers(std::vector<std::any>)::<lambda(auto:22&&)>;\
    \ _Variants = {const std::any&}]\u2019:\n/tmp/tmpp9p8pm1_.cpp:18:13:   required\
    \ from here\n/usr/include/c++/9/variant:1660:23: error: \u2018const class std::any\u2019\
    \ has no member named \u2018valueless_by_exception\u2019\n 1660 |       if ((__variants.valueless_by_exception()\
    \ || ...))\n      |            ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:\
    \ In instantiation of \u2018constexpr decltype(auto) std::__do_visit(_Visitor&&,\
    \ _Variants&& ...) [with bool __use_index = false; bool __same_return_types =\
    \ true; _Visitor = filter_integers(std::vector<std::any>)::<lambda(auto:22&&)>;\
    \ _Variants = {const std::any&}]\u2019:\n/usr/include/c++/9/variant:1663:24: \
    \  required from \u2018constexpr decltype(auto) std::visit(_Visitor&&, _Variants&&\
    \ ...) [with _Visitor = filter_integers(std::vector<std::any>)::<lambda(auto:22&&)>;\
    \ _Variants = {const std::any&}]\u2019\n/tmp/tmpp9p8pm1_.cpp:18:13:   required\
    \ from here\n/usr/include/c++/9/variant:1641:22: error: no matching function for\
    \ call to \u2018get<0>(const std::any&)\u2019\n 1641 |  decltype(std::get<0>(std::declval<_Variants>()))...>;\n\
    \      |           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from\
    \ /usr/include/c++/9/algorithm:60,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpp9p8pm1_.cpp:2:\n/usr/include/c++/9/utility"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto& v: values) {\n        if(v.as<std::map<long,long>>())\
    \ {\n            auto map = v.as<std::map<long,long>>();\n            for(auto&\
    \ elem: map) {\n                if(elem.first >= std::numeric_limits<long>::min()\
    \ && elem.first <= std::numeric_limits<long>::max()) {\n                    result.push_back(elem.first);\n\
    \                }\n            }\n        } else if(v.as<std::vector<long>>())\
    \ {\n            auto vector = v.as<std::vector<long>>();\n            for(auto&\
    \ elem: vector) {\n                if(elem >= std::numeric_limits<long>::min()\
    \ && elem <= std::numeric_limits<long>::max()) {\n                    result.push_back(elem);\n\
    \                }\n            }\n        } else if(v.as<std::vector<int>>())\
    \ {\n            auto vector = v.as<std::vector<int>>();\n            for(auto&\
    \ elem: vector) {\n                if(elem >= std::numeric_limits<long>::min()\
    \ && elem <= std::numeric_limits<long>::max()) {\n                    result.push_back(elem);\n\
    \                }\n            }\n        } else if(v.as<std::vector<float>>())\
    \ {\n            auto vector = v.as<std::vector<float>>();\n            for(auto&\
    \ elem: vector) {\n                if(elem >= std::numeric_limits<long>::min()\
    \ && elem <= std::numeric_limits<long>::max()) {\n                    result.push_back(elem);\n\
    \                }\n            }\n        } else if(v.as<std::vector<double>>())\
    \ {\n            auto vector = v.as<std::vector<double>>();\n            for(auto&\
    \ elem: vector) {\n                if(elem >= std::numeric_limits<long>::min()\
    \ && elem <= std::numeric_limits<long>::max()) {\n                    result.push_back(elem);\n\
    \                }\n            }\n        } else if(v.as<std::vector<short>>())\
    \ {\n            auto vector = v.as<std::vector<short>>();\n            for(auto&\
    \ elem: vector) {\n                if(elem >= std::numeric_limits<long>::min()\
    \ && elem <= std::numeric_limits<long>::max()) {\n                    result.push_back(elem);\n\
    \                }\n            }\n        } else if(v.as<std::vector<unsigned\
    \ char>>()) {\n            auto vector = v.as<std::vector<unsigned char>>();\n\
    \            for(auto& elem: vector) {\n                if(elem >= std::numeric_limits<long>::min()\
    \ && elem <= std::numeric_limits<long>::max()) {\n                    result.push_back(elem);\n\
    \                }\n            }\n        } else if(v.as<std::vector<unsigned\
    \ int>>()) {\n            auto vector = v.as<std::vector<unsigned int>>();\n \
    \           for(auto& elem: vector) {\n                if(elem >= std::numeric_limits<long>::min()\
    \ && elem \n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2i85axcq.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp2i85axcq.cpp:11:14: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   11 |         if(v.as<std::map<long,long>>()) {\n  \
    \    |              ^~\n/tmp/tmp2i85axcq.cpp:11:35: error: expected primary-expression\
    \ before \u2018>\u2019 token\n   11 |         if(v.as<std::map<long,long>>())\
    \ {\n      |                                   ^~\n/tmp/tmp2i85axcq.cpp:11:38:\
    \ error: expected primary-expression before \u2018)\u2019 token\n   11 |     \
    \    if(v.as<std::map<long,long>>()) {\n      |                              \
    \        ^\n/tmp/tmp2i85axcq.cpp:12:26: error: \u2018class std::any\u2019 has\
    \ no member named \u2018as\u2019\n   12 |             auto map = v.as<std::map<long,long>>();\n\
    \      |                          ^~\n/tmp/tmp2i85axcq.cpp:12:47: error: expected\
    \ primary-expression before \u2018>\u2019 token\n   12 |             auto map\
    \ = v.as<std::map<long,long>>();\n      |                                    \
    \           ^~\n/tmp/tmp2i85axcq.cpp:12:50: error: expected primary-expression\
    \ before \u2018)\u2019 token\n   12 |             auto map = v.as<std::map<long,long>>();\n\
    \      |                                                  ^\n/tmp/tmp2i85axcq.cpp:18:21:\
    \ error: \u2018class std::any\u2019 has no member named \u2018as\u2019\n   18\
    \ |         } else if(v.as<std::vector<long>>()) {\n      |                  \
    \   ^~\n/tmp/tmp2i85axcq.cpp:18:40: error: expected primary-expression before\
    \ \u2018>\u2019 token\n   18 |         } else if(v.as<std::vector<long>>()) {\n\
    \      |                                        ^~\n/tmp/tmp2i85axcq.cpp:18:43:\
    \ error: expected primary-expression before \u2018)\u2019 token\n   18 |     \
    \    } else if(v.as<std::vector<long>>()) {\n      |                         \
    \                  ^\n/tmp/tmp2i85axcq.cpp:19:29: error: \u2018class std::any\u2019\
    \ has no member named \u2018as\u2019\n   19 |             auto vector = v.as<std::vector<long>>();\n\
    \      |                             ^~\n/tmp/tmp2i85axcq.cpp:19:48: error: expected\
    \ primary-expression before \u2018>\u2019 token\n   19 |             au"
  stdout: ''
  timestamp: 1660108490
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ out;\n  for (auto& val : values) {\n    if (std::holds_alternative<int>(val))\
    \ {\n      out.push_back(std::any_cast<int>(val));\n    } else {\n      out.push_back(std::any_cast<long>(val));\n\
    \    }\n  }\n  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpcqzzoz7n.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpcqzzoz7n.cpp:11:40: error: no matching function for call to \u2018\
    holds_alternative<int>(std::any&)\u2019\n   11 |     if (std::holds_alternative<int>(val))\
    \ {\n      |                                        ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpcqzzoz7n.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcqzzoz7n.cpp:11:40:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |     if (std::holds_alternative<int>(val)) {\n      |   \
    \                                     ^\n"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (const auto& value : values) {\n        if (value_type_of(value)\
    \ == pycpp::detail::type_id<std::int32_t>) {\n            result.push_back((long)std::stoi(value));\n\
    \        } else if (value_type_of(value) == pycpp::detail::type_id<std::int64_t>)\
    \ {\n            result.push_back((long)std::stol(value));\n        } else if\
    \ (value_type_of(value) == pycpp::detail::type_id<std::int8_t>) {\n          \
    \  result.push_back((long)std::stoul(value));\n        } else if (value_type_of(value)\
    \ == pycpp::detail::type_id<std::uint8_t>) {\n            result.push_back((long)std::stoul(value));\n\
    \        } else if (value_type_of(value) == pycpp::detail::type_id<std::uint8_t>)\
    \ {\n            result.push_back((long)std::stoul(value));\n        } else if\
    \ (value_type_of(value) == pycpp::detail::type_id<std::complex<float>>) {\n  \
    \          result.push_back((std::complex<long>)std::stof(value));\n        }\
    \ else if (value_type_of(value) == pycpp::detail::type_id<std::complex<double>>)\
    \ {\n            result.push_back((std::complex<long>)std::stod(value));\n   \
    \     } else if (value_type_of(value) == pycpp::detail::type_id<std::complex<long\
    \ double>>) {\n            result.push_back((std::complex<long>)std::stold(value));\n\
    \        } else if (value_type_of(value) == pycpp::detail::type_id<std::complex<double>>)\
    \ {\n            result.push_back((std::complex<long>)std::stod(value));\n   \
    \     } else {\n            result.push_back(value);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdjennkjh.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpdjennkjh.cpp:11:13: error: \u2018value_type_of\u2019 was not declared\
    \ in this scope\n   11 |         if (value_type_of(value) == pycpp::detail::type_id<std::int32_t>)\
    \ {\n      |             ^~~~~~~~~~~~~\n/tmp/tmpdjennkjh.cpp:11:37: error: \u2018\
    pycpp\u2019 has not been declared\n   11 |         if (value_type_of(value) ==\
    \ pycpp::detail::type_id<std::int32_t>) {\n      |                           \
    \          ^~~~~\n/tmp/tmpdjennkjh.cpp:11:72: error: expected primary-expression\
    \ before \u2018>\u2019 token\n   11 |         if (value_type_of(value) == pycpp::detail::type_id<std::int32_t>)\
    \ {\n      |                                                                 \
    \       ^\n/tmp/tmpdjennkjh.cpp:11:73: error: expected primary-expression before\
    \ \u2018)\u2019 token\n   11 |         if (value_type_of(value) == pycpp::detail::type_id<std::int32_t>)\
    \ {\n      |                                                                 \
    \        ^\n/tmp/tmpdjennkjh.cpp:12:51: error: no matching function for call to\
    \ \u2018stoi(const std::any&)\u2019\n   12 |             result.push_back((long)std::stoi(value));\n\
    \      |                                                   ^\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpdjennkjh.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6506:3: note:\
    \ candidate: \u2018int std::__cxx11::stoi(const string&, std::size_t*, int)\u2019\
    \n 6506 |   stoi(const string& __str, size_t* __idx = 0, int __base = 10)\n  \
    \    |   ^~~~\n/usr/include/c++/9/bits/basic_string.h:6506:"
  stdout: ''
  timestamp: 1660108490
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    assert(values.size()\
    \ == 1);\n    auto iterator = values.begin();\n    auto longs = std::find_if(begin(values),\
    \ end(values), [&iterator](int value){\n        return std::holds_alternative<int>(value);\n\
    \    });\n    return longs;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpd4ndic7q.cpp: In lambda function:\n/tmp/tmpd4ndic7q.cpp:12:49:\
    \ error: no matching function for call to \u2018holds_alternative<int>(int&)\u2019\
    \n   12 |         return std::holds_alternative<int>(value);\n      |        \
    \                                         ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpd4ndic7q.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpd4ndic7q.cpp:12:49:\
    \ note:   mismatched types \u2018const std::variant<_Types ...>\u2019 and \u2018\
    int\u2019\n   12 |         return std::holds_alternative<int>(value);\n      |\
    \                                                 ^\n/tmp/tmpd4ndic7q.cpp: In\
    \ function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpd4ndic7q.cpp:14:12: error: could not convert \u2018longs\u2019 from\
    \ \u2018__gnu_cxx::__normal_iterator<std::any*, std::vector<std::any> >\u2019\
    \ to \u2018std::vector<long int>\u2019\n   14 |     return longs;\n      |   \
    \         ^~~~~\n      |            |\n      |            __gnu_cxx::__normal_iterator<std::any*,\
    \ std::vector<std::any> >\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:71,\n\
    \                 from /usr/include/c++/9/bits/specfun.h:45,\n               \
    \  from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpd4ndic7q.cpp:2:\n/usr/include/c++/9/bits/predefined_ops.h:\
    \ In instantiation of \u2018bool __gnu_cxx::__ops::_Iter_pred<_Predicate>::operator()(_Iterator)\
    \ [with _Iterator = __gnu_cxx::__normal_iterator<std::any*, std::vector<std::any>\
    \ >; _Predicate = filter_integers(std::vector<std::any>)::<lambda(int)>]\u2019\
    :\n/usr/include/c++/9/bits/stl_algo.h:120:14:   required from \u2018_Ran"
  stdout: ''
  timestamp: 1660108490
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ retval;\n    // Check all types for std::type_index \n    for (auto value :\
    \ values) {\n        if (std::type_index index{typeid(value)}.hash_code() == typeid(long).hash_code())\
    \ {\n            retval.push_back(value);\n        }\n    }\n    return retval;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpni1lfgg9.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpni1lfgg9.cpp:12:49: error: expected \u2018)\u2019 before \u2018.\u2019\
    \ token\n   12 |         if (std::type_index index{typeid(value)}.hash_code()\
    \ == typeid(long).hash_code()) {\n      |            ~                       \
    \             ^\n      |                                                 )\n/tmp/tmpni1lfgg9.cpp:12:89:\
    \ error: could not convert \u2018index\u2019 from \u2018std::type_index\u2019\
    \ to \u2018bool\u2019\n   12 |         if (std::type_index index{typeid(value)}.hash_code()\
    \ == typeid(long).hash_code()) {\n      |                                    \
    \                                                     ^\n      |             \
    \                                                                            |\n\
    \      |                                                                     \
    \                    std::type_index\n/tmp/tmpni1lfgg9.cpp:13:35: error: no matching\
    \ function for call to \u2018std::vector<long int>::push_back(std::any&)\u2019\
    \n   13 |             retval.push_back(value);\n      |                      \
    \             ^\nIn file included from /usr/include/c++/9/vector:67,\n       \
    \          from /usr/include/c++/9/functional:62,\n                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n\
    \                 from /usr/include/c++/9/algorithm:71,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmpni1lfgg9.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7: note:\
    \ candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type&\
    \ __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/"
  stdout: ''
  timestamp: 1660108490
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ output;\n    for (std::any v : values) {\n        if(std::any_cast<std::string>(v).empty()\
    \ && std::any_cast<long>(v) == 0) {\n            continue;\n        }\n      \
    \  output.push_back(std::any_cast<long>(v));\n    }\n    return output;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::bad_any_cast'\n  what():\
    \  bad any_cast\n"
  stdout: ''
  timestamp: 1660108491
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ results;\n    for (const auto &el : values) {\n        try {\n            long\
    \ val = std::any_cast<long>(el);\n            results.push_back(val);\n      \
    \  }\n        catch (...) {\n            // skip\n        }\n    }\n    return\
    \ results;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpsx6yy39p: /tmp/tmpsx6yy39p.cpp:24: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  assert(values.size()\
    \ == 6);\n  std::vector<long> ans;\n  ans.push_back(values.front().to<long>());\n\
    \  for (int i = 1; i < values.size(); ++i) {\n    assert(values[i].is<long>());\n\
    \    ans.push_back(values[i].to<long>());\n  }\n  return ans;\n}\nint main() {\n\
    \    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuy21or9z.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpuy21or9z.cpp:11:32: error: \u2018__gnu_cxx::__alloc_traits<std::allocator<std::any>,\
    \ std::any>::value_type\u2019 {aka \u2018class std::any\u2019} has no member named\
    \ \u2018to\u2019\n   11 |   ans.push_back(values.front().to<long>());\n      |\
    \                                ^~\n/tmp/tmpuy21or9z.cpp:11:35: error: expected\
    \ primary-expression before \u2018long\u2019\n   11 |   ans.push_back(values.front().to<long>());\n\
    \      |                                   ^~~~\nIn file included from /usr/include/c++/9/cassert:44,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuy21or9z.cpp:2:\n/tmp/tmpuy21or9z.cpp:13:22: error:\
    \ \u2018__gnu_cxx::__alloc_traits<std::allocator<std::any>, std::any>::value_type\u2019\
    \ {aka \u2018class std::any\u2019} has no member named \u2018is\u2019\n   13 |\
    \     assert(values[i].is<long>());\n      |                      ^~\n/tmp/tmpuy21or9z.cpp:13:25:\
    \ error: expected primary-expression before \u2018long\u2019\n   13 |     assert(values[i].is<long>());\n\
    \      |                         ^~~~\n/tmp/tmpuy21or9z.cpp:13:25: error: expected\
    \ \u2018)\u2019 before \u2018long\u2019\n/tmp/tmpuy21or9z.cpp:13:25: error: expected\
    \ \u2018)\u2019 before \u2018long\u2019\n/tmp/tmpuy21or9z.cpp:13:5: note: to match\
    \ this \u2018(\u2019\n   13 |     assert(values[i].is<long>());\n      |     ^~~~~~\n\
    /tmp/tmpuy21or9z.cpp:14:29: error: \u2018__gnu_cxx::__alloc_traits<std::allocator<std::any>,\
    \ std::any>::value_type\u2019 {aka \u2018class std::any\u2019} has no member named\
    \ \u2018to\u2019\n   14 |     ans.push_back(values[i].to<long>());\n      |  \
    \                           ^~\n/tmp/tmpuy21or9z.cpp:14:32: error: expected primary-expression\
    \ before \u2018long\u2019\n   14 |     ans.push_back(values[i].to<long>());\n\
    \      |                                ^~~~\n"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ output;\n  for (auto& item : values) {\n    if (item.type() == typeid(std::map<long,long>))\
    \ {\n      item = std::map<long,long>();\n    } else if (item.type() == typeid(std::vector<long>))\
    \ {\n      item = std::vector<long>();\n    } else if (item.type() == typeid(long))\
    \ {\n      output.push_back(item);\n    }\n  }\n  return output;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu8569wz8.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpu8569wz8.cpp:16:28: error: no matching function for call to \u2018\
    std::vector<long int>::push_back(std::any&)\u2019\n   16 |       output.push_back(item);\n\
    \      |                            ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpu8569wz8.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type&\
    \ __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018std::any\u2019 to \u2018\
    std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019}\n 1200\
    \ |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ out;\n  for (auto i : values) {\n    if (std::holds_alternative<std::string>(i))\
    \ {\n      if (std::holds_alternative<std::string>(i))\n        out.push_back(std::any_cast<long>(std::any_cast<std::string>(i)));\n\
    \    } else if (std::holds_alternative<long>(i)) {\n      out.push_back(std::any_cast<long>(std::any_cast<long>(i)));\n\
    \    } else if (std::holds_alternative<std::map<long,long>>(i)) {\n      out.push_back(std::any_cast<long>(std::any_cast<std::map<long,long>>(i)));\n\
    \    } else if (std::holds_alternative<std::vector<long>>(i)) {\n      out.push_back(std::any_cast<long>(std::any_cast<std::vector<long>>(i)));\n\
    \    } else {\n      out.push_back(std::any_cast<long>(i));\n    }\n  }\n  return\
    \ out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpntamv6m4.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpntamv6m4.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<std::string>(std::any&)\u2019\n   11 |     if (std::holds_alternative<std::string>(i))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpntamv6m4.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpntamv6m4.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |     if (std::holds_alternative<std::string>(i)) {\n    \
    \  |                                              ^\n/tmp/tmpntamv6m4.cpp:12:48:\
    \ error: no matching function for call to \u2018holds_alternative<std::string>(std::any&)\u2019\
    \n   12 |       if (std::holds_alternative<std::string>(i))\n      |         \
    \                                       ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpntamv6m4.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpntamv6m4.cpp:12:48:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   12 |       if (std::holds_alternative<std::string>(i))\n    \
    \  |                                                ^\n/tmp/tmpntamv6m4.cpp:14:46:\
    \ error: no matching function for call to \u2018holds_a"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto it = values.cbegin(); it != values.cend(); ++it)\n     \
    \   if (std::any_cast<long>(*it))\n            out.push_back(*it);\n    return\
    \ out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_jrfztxy.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp_jrfztxy.cpp:12:30: error: no matching function for call to \u2018\
    std::vector<long int>::push_back(const std::any&)\u2019\n   12 |             out.push_back(*it);\n\
    \      |                              ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp_jrfztxy.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018const std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type&\
    \ __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018const std::any\u2019 to\
    \ \u2018std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019\
    }\n 1200 |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (const auto& val : values) {\n        if (val.type() == typeid(int))\
    \ {\n            auto* i = reinterpret_cast<int*>(val.ptr());\n            res[res.size()]\
    \ = *i;\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphsndbiok.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmphsndbiok.cpp:12:50: error: \u2018const class std::any\u2019 has no\
    \ member named \u2018ptr\u2019\n   12 |             auto* i = reinterpret_cast<int*>(val.ptr());\n\
    \      |                                                  ^~~\n"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  assert(!values.empty());\n\
    \  long result = values[0];\n  for (auto & value : values) {\n    // C++ integer\
    \ types are 32 bits\n    if (value.type() == typeid(int)) {\n      result &= static_cast<long>(value);\n\
    \    }\n  }\n  return std::vector<long>({result});\n}\nint main() {\n    auto\
    \ candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp93vn__s4.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp93vn__s4.cpp:10:25: error: cannot convert \u2018__gnu_cxx::__alloc_traits<std::allocator<std::any>,\
    \ std::any>::value_type\u2019 {aka \u2018std::any\u2019} to \u2018long int\u2019\
    \ in initialization\n   10 |   long result = values[0];\n      |             \
    \            ^\n/tmp/tmp93vn__s4.cpp:14:40: error: invalid static_cast from type\
    \ \u2018std::any\u2019 to type \u2018long int\u2019\n   14 |       result &= static_cast<long>(value);\n\
    \      |                                        ^\n"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto&& item : values) {\n        if (std::holds_alternative<std::vector<int>>(item))\
    \ {\n            std::vector</*int */long> vec = std::any_cast<std::vector</*int\
    \ */long>>(item);\n            for (long i : vec) {\n                if (std::holds_alternative<int>(i))\
    \ {\n                    out.push_back(i);\n                }\n            }\n\
    \        } else if (std::holds_alternative<int>(item)) {\n            out.push_back(std::any_cast<int>(item));\n\
    \        } else if (std::holds_alternative<std::string>(item)) {\n           \
    \ out.push_back(std::any_cast<std::string>(item));\n        } else if (std::holds_alternative<std::map<long,long>>(item))\
    \ {\n            std::map</*int */long> map = std::any_cast<std::map<long,long>>(item);\n\
    \            for (long i : map) {\n                if (std::holds_alternative<long>(i))\
    \ {\n                    out.push_back(i);\n                }\n            }\n\
    \        } else if (std::holds_alternative<std::vector<long>>(item)) {\n     \
    \       std::vector</*int */long> vec = std::any_cast<std::vector</*int */long>>(item);\n\
    \            for (long i : vec) {\n                if (std::holds_alternative<long>(i))\
    \ {\n                    out.push_back(i);\n                }\n            }\n\
    \        } else {\n            throw std::runtime_error(\"unhandled type\");\n\
    \        }\n    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpp93ux_ro.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpp93ux_ro.cpp:11:58: error: no matching function for call to \u2018\
    holds_alternative<std::vector<int, std::allocator<int> > >(std::any&)\u2019\n\
    \   11 |         if (std::holds_alternative<std::vector<int>>(item)) {\n     \
    \ |                                                          ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpp93ux_ro.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpp93ux_ro.cpp:11:58:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<std::vector<int>>(item))\
    \ {\n      |                                                          ^\n/tmp/tmpp93ux_ro.cpp:14:50:\
    \ error: no matching function for call to \u2018holds_alternative<int>(long int&)\u2019\
    \n   14 |                 if (std::holds_alternative<int>(i)) {\n      |     \
    \                                             ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpp93ux_ro.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpp93ux_ro.cpp:14:50:\
    \ note:   mismatched types \u2018const std::variant<_Types ...>\u2019 and \u2018\
    long int\u2019\n   14 |                 if (std::holds_alternative<int>(i)) {\n\
    \      |                                                 "
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    std::transform(std::begin(values), std::end(values), std::back_inserter(res),\
    \ [&](auto v) {\n        auto it = std::find_if(std::begin(v), std::end(v), [&](auto\
    \ e) { return (std::is_same<decltype(std::any_cast<T>(std::declval<decltype(e)>())),T>::value\
    \ && std::is_integral<decltype(std::any_cast<T>(std::declval<decltype(e)>()))>::value;\
    \ });\n        if (it != std::end(v)) {\n            auto val = 0;\n         \
    \   try {\n                val = std::any_cast<T>(v);\n            }\n       \
    \     catch (...) {\n            }\n            if (std::is_integral<decltype(val)>::value)\
    \ {\n                res.push_back(std::move(val));\n            }\n        }\n\
    \    });\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp2levdvpd.cpp: In lambda function:\n/tmp/tmp2levdvpd.cpp:11:118:\
    \ error: \u2018T\u2019 was not declared in this scope\n   11 |         auto it\
    \ = std::find_if(std::begin(v), std::end(v), [&](auto e) { return (std::is_same<decltype(std::any_cast<T>(std::declval<decltype(e)>())),T>::value\
    \ && std::is_integral<decltype(std::any_cast<T>(std::declval<decltype(e)>()))>::value;\
    \ });\n      |                                                               \
    \                                                       ^\n/tmp/tmp2levdvpd.cpp:11:244:\
    \ error: expected \u2018)\u2019 before \u2018;\u2019 token\n   11 |         auto\
    \ it = std::find_if(std::begin(v), std::end(v), [&](auto e) { return (std::is_same<decltype(std::any_cast<T>(std::declval<decltype(e)>())),T>::value\
    \ && std::is_integral<decltype(std::any_cast<T>(std::declval<decltype(e)>()))>::value;\
    \ });\n      |                                                               \
    \                  ~                                                         \
    \                                                                            \
    \                             ^\n      |                                     \
    \                                                                            \
    \                                                                            \
    \                                                       )\n/tmp/tmp2levdvpd.cpp:\
    \ In lambda function:\n/tmp/tmp2levdvpd.cpp:15:37: error: \u2018T\u2019 was not\
    \ declared in this scope\n   15 |                 val = std::any_cast<T>(v);\n\
    \      |                                     ^\n/tmp/tmp2levdvpd.cpp: In instantiation\
    \ of \u2018filter_integers(std::vector<std::any>)::<lambda(auto:22)> [with auto:22\
    \ = std::any]\u2019:\n/usr/include/c++/9/bits/stl_algo.h:4343:24:   required from\
    \ \u2018_OIter std::transform(_IIter, _IIter, _OIter, _UnaryOperation) [with _IIter\
    \ = __gnu_cxx::__normal_iterator<std::any*, std::vector<std::any> >; _OIter =\
    \ std::back_insert_iterator<std::vector<long int> >; _UnaryOperation = filter_integers(std::vector<std::any>)::<lambda(auto:22)>]\u2019\
    \n/tmp/tmp2levdvpd.c"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ filtered;\n  for (auto i : values) {\n    if (std::any_cast<std::int64_t>(i))\
    \ {\n      filtered.push_back(i);\n    }\n  }\n  return filtered;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzj0twqm6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpzj0twqm6.cpp:12:27: error: no matching function for call to \u2018\
    std::vector<long int>::push_back(std::any&)\u2019\n   12 |       filtered.push_back(i);\n\
    \      |                           ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzj0twqm6.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type&\
    \ __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018std::any\u2019 to \u2018\
    std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019}\n 1200\
    \ |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (const auto& value : values) {\n        auto v = std::any_cast<T>(std::any_cast<std::any>(value));\n\
    \        if (v) {\n            out.push_back(v);\n        }\n    }\n    return\
    \ out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7p7668nn.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp7p7668nn.cpp:11:32: error: \u2018T\u2019 was not declared in this scope\n\
    \   11 |         auto v = std::any_cast<T>(std::any_cast<std::any>(value));\n\
    \      |                                ^\n/tmp/tmp7p7668nn.cpp:11:65: error:\
    \ no matching function for call to \u2018any_cast<<expression error> >(std::any)\u2019\
    \n   11 |         auto v = std::any_cast<T>(std::any_cast<std::any>(value));\n\
    \      |                                                                 ^\nIn\
    \ file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:126,\n\
    \                 from /tmp/tmp7p7668nn.cpp:2:\n/usr/include/c++/9/any:452:23:\
    \ note: candidate: \u2018template<class _ValueType> _ValueType std::any_cast(const\
    \ std::any&)\u2019\n  452 |     inline _ValueType any_cast(const any& __any)\n\
    \      |                       ^~~~~~~~\n/usr/include/c++/9/any:452:23: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp7p7668nn.cpp:11:65:\
    \ error: template argument 1 is invalid\n   11 |         auto v = std::any_cast<T>(std::any_cast<std::any>(value));\n\
    \      |                                                                 ^\nIn\
    \ file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:126,\n\
    \                 from /tmp/tmp7p7668nn.cpp:2:\n/usr/include/c++/9/any:478:23:\
    \ note: candidate: \u2018template<class _ValueType> _ValueType std::any_cast(std::any&)\u2019\
    \n  478 |     inline _ValueType any_cast(any& __any)\n      |                \
    \       ^~~~~~~~\n/usr/include/c++/9/any:478:23: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7p7668nn.cpp:11:65: error: template argument 1 is invalid\n\
    \   11 |         auto v = std::any_cast<T>(std::any_cast<std::any>(value));\n\
    \      |                                                                 ^\nIn\
    \ file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:126,\n\
    \                 from /tmp/tmp7p7668nn.cpp:2:\n/usr/include/c++/9/any:492:23:\
    \ note: candidate: \u2018template<class _ValueType> _ValueType std"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ integers;\n    // Filter vector of integers\n    for (auto value : values) {\n\
    \        if (std::holds_alternative<std::vector<std::any>>(value)) {\n       \
    \     std::get<std::vector<std::any>>(value)\n                .filter_if([](auto\
    \ value){return std::holds_alternative<long>(value);})\n                .copy_to(integers);\n\
    \        }\n    }\n    return integers;\n}\nint main() {\n    auto candidate =\
    \ filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwem_1_9h.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpwem_1_9h.cpp:12:64: error: no matching function for call to \u2018\
    holds_alternative<std::vector<std::any, std::allocator<std::any> > >(std::any&)\u2019\
    \n   12 |         if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \      |                                                                ^\nIn\
    \ file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpwem_1_9h.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwem_1_9h.cpp:12:64:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   12 |         if (std::holds_alternative<std::vector<std::any>>(value))\
    \ {\n      |                                                                ^\n\
    /tmp/tmpwem_1_9h.cpp:13:50: error: no matching function for call to \u2018get<std::vector<std::any,\
    \ std::allocator<std::any> > >(std::any&)\u2019\n   13 |             std::get<std::vector<std::any>>(value)\n\
    \      |                                                  ^\nIn file included\
    \ from /usr/include/c++/9/algorithm:60,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpwem_1_9h.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int,"
  stdout: ''
  timestamp: 1660108491
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    // Filter\
    \ only integer values\n    std::vector<long> result;\n    for (const auto& value\
    \ : values) {\n        if (auto int_val = std::any_cast<long>(value)) {\n    \
    \        result.push_back(int_val);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::bad_any_cast'\n  what():\
    \  bad any_cast\n"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    auto f\
    \ = [&values](auto value){\n        return typeid(value).name() == typeid(long).name();\n\
    \    };\n    return std::copy_if(values.begin(), values.end(), std::back_inserter(result),\
    \ f);\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjen555pc.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpjen555pc.cpp:12:74: error: \u2018result\u2019 was not declared in this\
    \ scope\n   12 |     return std::copy_if(values.begin(), values.end(), std::back_inserter(result),\
    \ f);\n      |                                                               \
    \           ^~~~~~\n"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ outputs;\n    for(auto it = values.begin(); it != values.end(); ++it) {\n  \
    \      if(std::any_of({ (auto)it, [&](auto& v){return v.type() == typeid(long)};\
    \ })) {\n            outputs.push_back((auto)std::any_cast(*it));\n        }\n\
    \    }\n    return outputs;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpcef0toow.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpcef0toow.cpp:11:27: error: invalid use of \u2018auto\u2019\n   11 |\
    \         if(std::any_of({ (auto)it, [&](auto& v){return v.type() == typeid(long)};\
    \ })) {\n      |                           ^~~~\n/tmp/tmpcef0toow.cpp: In lambda\
    \ function:\n/tmp/tmpcef0toow.cpp:11:80: error: expected \u2018;\u2019 before\
    \ \u2018}\u2019 token\n   11 |         if(std::any_of({ (auto)it, [&](auto& v){return\
    \ v.type() == typeid(long)}; })) {\n      |                                  \
    \                                              ^\n      |                    \
    \                                                            ;\n/tmp/tmpcef0toow.cpp:\
    \ In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpcef0toow.cpp:11:81: error: expected \u2018}\u2019 before \u2018;\u2019\
    \ token\n   11 |         if(std::any_of({ (auto)it, [&](auto& v){return v.type()\
    \ == typeid(long)}; })) {\n      |                        ~                  \
    \                                      ^\n/tmp/tmpcef0toow.cpp:11:81: error: expected\
    \ \u2018)\u2019 before \u2018;\u2019 token\n   11 |         if(std::any_of({ (auto)it,\
    \ [&](auto& v){return v.type() == typeid(long)}; })) {\n      |              \
    \         ~                                                         ^\n      |\
    \                                                                            \
    \     )\n/tmp/tmpcef0toow.cpp:11:81: error: expected \u2018)\u2019 before \u2018\
    ;\u2019 token\n   11 |         if(std::any_of({ (auto)it, [&](auto& v){return\
    \ v.type() == typeid(long)}; })) {\n      |           ~                      \
    \                                               ^\n      |                   \
    \                                                              )\n/tmp/tmpcef0toow.cpp:11:84:\
    \ error: expected primary-expression before \u2018)\u2019 token\n   11 |     \
    \    if(std::any_of({ (auto)it, [&](auto& v){return v.type() == typeid(long)};\
    \ })) {\n      |                                                             \
    \                       ^\n/tmp/tmpcef0toow.cpp:14:5: wa"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    std::for_each(values.begin(), values.end(), [&result](std::any\
    \ val){\n        if (auto i = val.get_type_info()){\n            if (i == typeid(long))\
    \ {\n                result.push_back(*(val.get_ptr()));\n            }\n    \
    \    }\n    });\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp2jnf7iz_.cpp: In lambda function:\n/tmp/tmp2jnf7iz_.cpp:11:26:\
    \ error: \u2018class std::any\u2019 has no member named \u2018get_type_info\u2019\
    ; did you mean \u2018std::any::_Op std::any::_Op_get_type_info\u2019? (not accessible\
    \ from this context)\n   11 |         if (auto i = val.get_type_info()){\n   \
    \   |                          ^~~~~~~~~~~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:126,\n\
    \                 from /tmp/tmp2jnf7iz_.cpp:2:\n/usr/include/c++/9/any:362:14:\
    \ note: declared private here\n  362 |  _Op_access, _Op_get_type_info, _Op_clone,\
    \ _Op_destroy, _Op_xfer\n      |              ^~~~~~~~~~~~~~~~~\n/tmp/tmp2jnf7iz_.cpp:13:40:\
    \ error: \u2018class std::any\u2019 has no member named \u2018get_ptr\u2019\n\
    \   13 |                 result.push_back(*(val.get_ptr()));\n      |        \
    \                                ^~~~~~~\n"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ result;\n  for (auto value : values) {\n    if (std::holds_alternative<long>(value))\n\
    \      result.push_back(std::any_cast<long>(value));\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpin1nv0ze.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpin1nv0ze.cpp:11:43: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |     if (std::holds_alternative<long>(value))\n\
    \      |                                           ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpin1nv0ze.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpin1nv0ze.cpp:11:43:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |     if (std::holds_alternative<long>(value))\n      |  \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto it : values) {\n        // If it is an integer then add\
    \ it to the result vector\n        if (std::is_integral_v<std::decay_t<decltype(it)>>)\
    \ result.push_back(std::forward<decltype(it)>(it));\n        // If it is not an\
    \ integer then it is ignored and it is added to the result vector\n        else\
    \ result.push_back(0);\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpf0hdbl4w.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpf0hdbl4w.cpp:12:108: error: no matching function for call to \u2018\
    std::vector<long int>::push_back(std::any)\u2019\n   12 |         if (std::is_integral_v<std::decay_t<decltype(it)>>)\
    \ result.push_back(std::forward<decltype(it)>(it));\n      |                 \
    \                                                                            \
    \               ^\nIn file included from /usr/include/c++/9/vector:67,\n     \
    \            from /usr/include/c++/9/functional:62,\n                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n\
    \                 from /usr/include/c++/9/algorithm:71,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmpf0hdbl4w.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7: note:\
    \ candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type&\
    \ __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018std::any\u2019 to \u2018\
    std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019}\n 1200\
    \ |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (const auto &value : values) {\n        if (!value.type().is(typeid(int))\
    \ && !value.type().is(typeid(long)))\n            continue;\n        out.push_back(std::any_cast<long>(value));\n\
    \    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpvsnzyyhx.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpvsnzyyhx.cpp:11:27: error: \u2018const class std::type_info\u2019 has\
    \ no member named \u2018is\u2019\n   11 |         if (!value.type().is(typeid(int))\
    \ && !value.type().is(typeid(long)))\n      |                           ^~\n/tmp/tmpvsnzyyhx.cpp:11:60:\
    \ error: \u2018const class std::type_info\u2019 has no member named \u2018is\u2019\
    \n   11 |         if (!value.type().is(typeid(int)) && !value.type().is(typeid(long)))\n\
    \      |                                                            ^~\n"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (const auto& value: values) {\n        if (value->type() == typeid(int))\n\
    \            ret.push_back(value.as<int>());\n        else if (value->type() ==\
    \ typeid(std::map<long,long>))\n            ret.push_back(value.as<std::map<long,long>>().size());\n\
    \        else if (value->type() == typeid(std::vector<long>))\n            ret.push_back(value.as<std::vector<long>>().size());\n\
    \        else\n            throw std::runtime_error(\"Unsupported type: \" + value->type().name());\n\
    \    }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpq95m6onx.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpq95m6onx.cpp:11:18: error: base operand of \u2018->\u2019 has non-pointer\
    \ type \u2018const std::any\u2019\n   11 |         if (value->type() == typeid(int))\n\
    \      |                  ^~\n/tmp/tmpq95m6onx.cpp:12:33: error: \u2018const class\
    \ std::any\u2019 has no member named \u2018as\u2019\n   12 |             ret.push_back(value.as<int>());\n\
    \      |                                 ^~\n/tmp/tmpq95m6onx.cpp:12:36: error:\
    \ expected primary-expression before \u2018int\u2019\n   12 |             ret.push_back(value.as<int>());\n\
    \      |                                    ^~~\n/tmp/tmpq95m6onx.cpp:13:23: error:\
    \ base operand of \u2018->\u2019 has non-pointer type \u2018const std::any\u2019\
    \n   13 |         else if (value->type() == typeid(std::map<long,long>))\n   \
    \   |                       ^~\n/tmp/tmpq95m6onx.cpp:14:33: error: \u2018const\
    \ class std::any\u2019 has no member named \u2018as\u2019\n   14 |           \
    \  ret.push_back(value.as<std::map<long,long>>().size());\n      |           \
    \                      ^~\n/tmp/tmpq95m6onx.cpp:14:54: error: expected primary-expression\
    \ before \u2018>\u2019 token\n   14 |             ret.push_back(value.as<std::map<long,long>>().size());\n\
    \      |                                                      ^~\n/tmp/tmpq95m6onx.cpp:14:57:\
    \ error: expected primary-expression before \u2018)\u2019 token\n   14 |     \
    \        ret.push_back(value.as<std::map<long,long>>().size());\n      |     \
    \                                                    ^\n/tmp/tmpq95m6onx.cpp:15:23:\
    \ error: base operand of \u2018->\u2019 has non-pointer type \u2018const std::any\u2019\
    \n   15 |         else if (value->type() == typeid(std::vector<long>))\n     \
    \ |                       ^~\n/tmp/tmpq95m6onx.cpp:16:33: error: \u2018const class\
    \ std::any\u2019 has no member named \u2018as\u2019\n   16 |             ret.push_back(value.as<std::vector<long>>().size());\n\
    \      |                                 ^~\n/tmp/tmpq95m6onx.cpp:16:52: error:\
    \ expected primary-expression before \u2018>\u2019 token\n   16 |            \
    \ ret.push_back(value.as<"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<\
    \ long >  results;\n    std::any              tmp;\n    long                 \
    \ i;\n    for (i = 0; i < values.size(); i++) {\n        tmp = values[i];\n  \
    \      if (std::is_same<decltype(tmp), std::int64_t>::value || std::is_same<decltype(tmp),\
    \ std::uint64_t>::value || std::is_same<decltype(tmp), std::intmax_t>::value)\
    \ {\n            results.push_back(static_cast<long>(tmp));\n        } else {\n\
    \            tmp = std::any_cast<std::int64_t>(tmp);\n            assert(std::is_same<decltype(tmp),\
    \ std::int64_t>::value);\n            results.push_back(tmp);\n        }\n   \
    \ }\n    return results;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpy21e2j68.cpp:18:68: error: macro \"assert\" passed 2 arguments,\
    \ but takes just 1\n   18 |             assert(std::is_same<decltype(tmp), std::int64_t>::value);\n\
    \      |                                                                    ^\n\
    In file included from /usr/include/c++/9/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy21e2j68.cpp:2:\n/usr/include/assert.h:92: note:\
    \ macro \"assert\" defined here\n   92 | #  define assert(expr)       \\\n   \
    \   | \n/tmp/tmpy21e2j68.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpy21e2j68.cpp:15:52: error: invalid static_cast from type \u2018std::any\u2019\
    \ to type \u2018long int\u2019\n   15 |             results.push_back(static_cast<long>(tmp));\n\
    \      |                                                    ^\n/tmp/tmpy21e2j68.cpp:18:13:\
    \ error: \u2018assert\u2019 was not declared in this scope\n   18 |          \
    \   assert(std::is_same<decltype(tmp), std::int64_t>::value);\n      |       \
    \      ^~~~~~\n/tmp/tmpy21e2j68.cpp:3:1: note: \u2018assert\u2019 is defined in\
    \ header \u2018<cassert>\u2019; did you forget to \u2018#include <cassert>\u2019\
    ?\n    2 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    3 | // Filter\
    \ given vector of any cppthon values only for integers\n/tmp/tmpy21e2j68.cpp:19:34:\
    \ error: no matching function for call to \u2018std::vector<long int>::push_back(std::any&)\u2019\
    \n   19 |             results.push_back(tmp);\n      |                       \
    \           ^\nIn file included from /usr/include/c++/9/vector:67,\n         \
    \        from /usr/include/c++/9/functional:62,\n                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n\
    \                 from /usr/include/c++/9/algorithm:71,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmpy21e2j68.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7: note:\
    \ candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vect"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ out;\n  \n  for (auto x : values) {\n    if (std::holds_alternative<std::string>(x))\
    \ {\n      out.push_back(std::any_cast<std::string>(x).to_long());\n    }\n  \
    \  else if (std::holds_alternative<std::vector<long>>(x)) {\n      out.insert(out.end(),\
    \ std::any_cast<std::vector<long>>(x).begin(), std::any_cast<std::vector<long>>(x).end());\n\
    \    }\n    else if (std::holds_alternative<std::map<long,long>>(x)) {\n     \
    \ out.insert(out.end(), std::any_cast<std::map<long,long>>(x).begin(), std::any_cast<std::map<long,long>>(x).end());\n\
    \    }\n    else if (std::holds_alternative<std::set<long>>(x)) {\n      out.insert(out.end(),\
    \ std::any_cast<std::set<long>>(x).begin(), std::any_cast<std::set<long>>(x).end());\n\
    \    }\n    else if (std::holds_alternative<long double>(x)) {\n      out.push_back(std::any_cast<long\
    \ double>(x));\n    }\n    else if (std::holds_alternative<long>(x)) {\n     \
    \ out.push_back(std::any_cast<long>(x));\n    }\n    else {\n      out.push_back(x);\n\
    \    }\n  }\n  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmph9nwqs0v.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmph9nwqs0v.cpp:12:46: error: no matching function for call to \u2018\
    holds_alternative<std::string>(std::any&)\u2019\n   12 |     if (std::holds_alternative<std::string>(x))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmph9nwqs0v.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmph9nwqs0v.cpp:12:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   12 |     if (std::holds_alternative<std::string>(x)) {\n    \
    \  |                                              ^\n/tmp/tmph9nwqs0v.cpp:13:51:\
    \ error: \u2018class std::__cxx11::basic_string<char>\u2019 has no member named\
    \ \u2018to_long\u2019\n   13 |       out.push_back(std::any_cast<std::string>(x).to_long());\n\
    \      |                                                   ^~~~~~~\n/tmp/tmph9nwqs0v.cpp:15:57:\
    \ error: no matching function for call to \u2018holds_alternative<std::vector<long\
    \ int, std::allocator<long int> > >(std::any&)\u2019\n   15 |     else if (std::holds_alternative<std::vector<long>>(x))\
    \ {\n      |                                                         ^\nIn file\
    \ included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n     \
    \            from /tmp/tmph9nwqs0v.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution f"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    // Iterate\
    \ through all elements and filter integers\n    std::vector<long> res;\n    for\
    \ (auto &&i : values) {\n        // Convert element to integer\n        auto &&int_val\
    \ = std::any_cast<long>(i);\n        // Check if conversion was successful\n \
    \       if (int_val != nullptr) res.push_back(int_val);\n    }\n    // Return\
    \ result if conversion was successful\n    return res;\n}\nint main() {\n    auto\
    \ candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe8kreknj.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpe8kreknj.cpp:15:21: error: invalid operands of types \u2018long int\u2019\
    \ and \u2018std::nullptr_t\u2019 to binary \u2018operator!=\u2019\n   15 |   \
    \      if (int_val != nullptr) res.push_back(int_val);\n      |             ~~~~~~~~^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ res;\n  for (auto& i : values) {\n    if (i->is<long>()) {\n      res.push_back(i.get<long>());\n\
    \    }\n  }\n  return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpjhil21kp.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpjhil21kp.cpp:11:10: error: base operand of \u2018->\u2019 has non-pointer\
    \ type \u2018std::any\u2019\n   11 |     if (i->is<long>()) {\n      |       \
    \   ^~\n/tmp/tmpjhil21kp.cpp:11:15: error: expected primary-expression before\
    \ \u2018long\u2019\n   11 |     if (i->is<long>()) {\n      |               ^~~~\n\
    /tmp/tmpjhil21kp.cpp:11:15: error: expected \u2018)\u2019 before \u2018long\u2019\
    \n   11 |     if (i->is<long>()) {\n      |        ~      ^~~~\n      |      \
    \         )\n/tmp/tmpjhil21kp.cpp:12:23: error: \u2018class std::any\u2019 has\
    \ no member named \u2018get\u2019\n   12 |       res.push_back(i.get<long>());\n\
    \      |                       ^~~\n/tmp/tmpjhil21kp.cpp:12:27: error: expected\
    \ primary-expression before \u2018long\u2019\n   12 |       res.push_back(i.get<long>());\n\
    \      |                           ^~~~\n"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ results;\n    for (auto&& value : values) {\n        if (std::any_of(value.begin(),\
    \ value.end(), [](auto& v){return !(v == std::type_info {\"long\"});})) {\n  \
    \          results.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return results;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpkidh_ji5.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpkidh_ji5.cpp:11:31: error: \u2018class std::any\u2019 has no member\
    \ named \u2018begin\u2019\n   11 |         if (std::any_of(value.begin(), value.end(),\
    \ [](auto& v){return !(v == std::type_info {\"long\"});})) {\n      |        \
    \                       ^~~~~\n/tmp/tmpkidh_ji5.cpp:11:46: error: \u2018class\
    \ std::any\u2019 has no member named \u2018end\u2019\n   11 |         if (std::any_of(value.begin(),\
    \ value.end(), [](auto& v){return !(v == std::type_info {\"long\"});})) {\n  \
    \    |                                              ^~~\n"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& value : values) {\n        if (value.get_type() == typeid(std::map<long,long>)){\n\
    \            result.push_back(std::any());\n        } else if (value.get_type()\
    \ == typeid(std::vector<std::any>)){\n            result.push_back((std::vector<std::any>)value);\n\
    \        } else if (value.get_type() == typeid(long)){\n            result.push_back(value);\n\
    \        } else {\n            throw std::runtime_error(\"Unsupported data type\"\
    );\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp5bivg72_.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp5bivg72_.cpp:11:19: error: \u2018class std::any\u2019 has no member\
    \ named \u2018get_type\u2019\n   11 |         if (value.get_type() == typeid(std::map<long,long>)){\n\
    \      |                   ^~~~~~~~\n/tmp/tmp5bivg72_.cpp:12:40: error: no matching\
    \ function for call to \u2018std::vector<long int>::push_back(std::any)\u2019\n\
    \   12 |             result.push_back(std::any());\n      |                  \
    \                      ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5bivg72_.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type&\
    \ __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018std::any\u2019 to \u2018\
    std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019}\n 1200\
    \ |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n\
    /tmp/tmp5bivg72_.cpp:13:26: error:"
  stdout: ''
  timestamp: 1660108491
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    return\
    \ std::vector<long>();\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpivr61nh_: /tmp/tmpivr61nh_.cpp:14: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108492
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    std::copy_if(std::begin(values), std::end(values),\n        [&result](auto\
    \ v){\n            if(!std::holds_alternative<long>(v)) {\n                result.push_back((long)0);\n\
    \            } else {\n                result.push_back(std::any_cast<long>(v));\n\
    \            }\n            return true;\n    });\n    return result;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyxgmt0wl.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpyxgmt0wl.cpp:18:6: error: no matching function for call to \u2018copy_if(std::vector<std::any>::iterator,\
    \ std::vector<std::any>::iterator, filter_integers(std::vector<std::any>)::<lambda(auto:22)>)\u2019\
    \n   18 |     });\n      |      ^\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpyxgmt0wl.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:737:5:\
    \ note: candidate: \u2018template<class _IIter, class _OIter, class _Predicate>\
    \ _OIter std::copy_if(_IIter, _IIter, _OIter, _Predicate)\u2019\n  737 |     copy_if(_InputIterator\
    \ __first, _InputIterator __last,\n      |     ^~~~~~~\n/usr/include/c++/9/bits/stl_algo.h:737:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyxgmt0wl.cpp:18:6:\
    \ note:   candidate expects 4 arguments, 3 provided\n   18 |     });\n      |\
    \      ^\nIn file included from /usr/include/c++/9/algorithm:71,\n           \
    \      from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n          \
    \       from /tmp/tmpyxgmt0wl.cpp:2:\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:142:1:\
    \ note: candidate: \u2018template<class _ExecutionPolicy, class _ForwardIterator1,\
    \ class _ForwardIterator2, class _Predicate> __pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy,\
    \ _ForwardIterator2> std::copy_if(_ExecutionPolicy&&, _ForwardIterator1, _ForwardIterator1,\
    \ _ForwardIterator2, _Predicate)\u2019\n  142 | copy_if(_ExecutionPolicy&& __exec,\
    \ _ForwardIterator1 __first, _ForwardIterator1 __last, _ForwardIterator2 result,\n\
    \      | ^~~~~~~\n/usr/include/c++/9/pstl/glue_algorithm_defs.h:142:1: note: \
    \  template argument deduction/substitution failed:\n/tmp/tmpyxgmt0wl.cpp:18:6:\
    \ note:   deduced conflicting types for parameter \u2018_ForwardIterator1\u2019\
    \ (\u2018__gnu_cxx::__normal_iterator<std::any*, std::vector<std::any> >\u2019\
    \ and \u2018filter_integers(std::vector<std::any>)::<lambda(auto:22)>\u2019)\n\
    \   18 |     });\n      |      ^\n"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ out;\n  for(const auto& val : values){\n    if(val && typeid(*val) == typeid(long))\n\
    \      out.push_back(*reinterpret_cast<long*>(val));\n  }\n  return out;\n}\n\
    int main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwv0eduzc.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpwv0eduzc.cpp:11:22: error: no match for \u2018operator*\u2019 (operand\
    \ type is \u2018const std::any\u2019)\n   11 |     if(val && typeid(*val) == typeid(long))\n\
    \      |                      ^~~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwv0eduzc.cpp:2:\n/usr/include/c++/9/complex:391:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  391 |     operator*(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:391:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwv0eduzc.cpp:11:23:\
    \ note:   \u2018const std::any\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   11 |     if(val && typeid(*val) == typeid(long))\n      |               \
    \        ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n        \
    \         from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n       \
    \          from /tmp/tmpwv0eduzc.cpp:2:\n/usr/include/c++/9/complex:400:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const _Tp&)\u2019\n  400 |     operator*(const complex<_Tp>&\
    \ __x, const _Tp& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:400:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwv0eduzc.cpp:11:23:\
    \ note:   \u2018const std::any\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n   11 |     if(val && typeid(*val) == typeid(long))\n      |               \
    \        ^~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n        \
    \         from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n       \
    \          from /tmp/tmpwv0eduzc.cpp:2:\n/usr/include/c++/9/complex:409:5: note:\
    \ candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ _Tp&, const std::complex<_Tp>&)\u2019\n  409 |     operator*(cons"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ results;\n    std::unordered_set<long> integers;\n    bool first = true;\n \
    \   for (const auto& value : values) {\n        if (std::holds_alternative<std::vector<long>>(value))\
    \ {\n            for (const auto& element : *std::get<std::vector<long>>(value))\
    \ {\n                if (!std::holds_alternative<long>(element)) {\n         \
    \           std::cout << \"Cannot filter elements with different types.\\n\";\n\
    \                    assert(0);\n                }\n                if (integers.size()\
    \ != std::get<std::vector<long>>(value)->size()) {\n                    std::cout\
    \ << \"Cannot filter elements with different lengths.\\n\";\n                \
    \    assert(0);\n                }\n                for (long num : *std::get<std::vector<long>>(value))\
    \ {\n                    if (!integers.count(num)) {\n                       \
    \ if (!first) {\n                            results.push_back(0);\n         \
    \               }\n                        first = false;\n                  \
    \      integers.insert(num);\n                    }\n                }\n     \
    \       }\n        } else if (std::holds_alternative<long>(value)) {\n       \
    \     if (!integers.count(std::get<long>(value))) {\n                integers.insert(std::get<long>(value));\n\
    \                results.push_back(std::get<long>(value));\n            }\n  \
    \      } else {\n            std::cout << \"Cannot filter elements with different\
    \ types.\\n\";\n            assert(0);\n        }\n    }\n    return results;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5lq6doae.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp5lq6doae.cpp:13:60: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(const std::any&)\u2019\
    \n   13 |         if (std::holds_alternative<std::vector<long>>(value)) {\n  \
    \    |                                                            ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp5lq6doae.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5lq6doae.cpp:13:60:\
    \ note:   \u2018const std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         if (std::holds_alternative<std::vector<long>>(value))\
    \ {\n      |                                                            ^\n/tmp/tmp5lq6doae.cpp:14:74:\
    \ error: no matching function for call to \u2018get<std::vector<long int, std::allocator<long\
    \ int> > >(const std::any&)\u2019\n   14 |             for (const auto& element\
    \ : *std::get<std::vector<long>>(value)) {\n      |                          \
    \                                                ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5lq6doae.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5:"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    std::cout << \"Values: \" << std::endl;\n    // Check value types\n\
    \    for(auto value : values) {\n        std::cout << std::boolalpha << \"Type:\
    \ \";\n        // Check value type\n        if(std::is_integral<decltype(value)>::value)\
    \ {\n            std::cout << \"integer\" << std::endl;\n            out.push_back(value);\n\
    \        }\n        else if(std::is_floating_point<decltype(value)>::value) {\n\
    \            std::cout << \"float\" << std::endl;\n            out.push_back(value);\n\
    \        }\n        else {\n            std::cout << \"not an int nor float\"\
    \ << std::endl;\n            out.push_back(value);\n        }\n    }\n    return\
    \ out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo96ylio5.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpo96ylio5.cpp:17:32: error: no matching function for call to \u2018\
    std::vector<long int>::push_back(std::any&)\u2019\n   17 |             out.push_back(value);\n\
    \      |                                ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpo96ylio5.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type&\
    \ __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018std::any\u2019 to \u2018\
    std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019}\n 1200\
    \ |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n\
    /tmp/tmpo96ylio5.cpp:21:32: error: no matching function for call to \u2018std::vector<long\
    \ int>::push_back(std::any&)\u2019\n   21 |             out.push_back(value);\n\
    \      |                                ^\nIn file included from /usr/include/c++/9/vec"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto& value : values) {\n        if (!std::holds_alternative<long>(value))\
    \ {\n            continue;\n        }\n        out.push_back(*std::get<long>(value));\n\
    \    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpj4vv1vty.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpj4vv1vty.cpp:11:48: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (!std::holds_alternative<long>(value))\
    \ {\n      |                                                ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpj4vv1vty.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpj4vv1vty.cpp:11:48:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (!std::holds_alternative<long>(value)) {\n  \
    \    |                                                ^\n/tmp/tmpj4vv1vty.cpp:14:44:\
    \ error: no matching function for call to \u2018get<long int>(std::any&)\u2019\
    \n   14 |         out.push_back(*std::get<long>(value));\n      |            \
    \                                ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpj4vv1vty.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)\u2019\n  224\
    \ |     get(st"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(value.type() == typeid(long))\n\
    \            result.push_back(static_cast<long>(value));\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgm1h9krf.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpgm1h9krf.cpp:12:53: error: invalid static_cast from type \u2018std::any\u2019\
    \ to type \u2018long int\u2019\n   12 |             result.push_back(static_cast<long>(value));\n\
    \      |                                                     ^\n"
  stdout: ''
  timestamp: 1660108491
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto val : values) {\n        if (typeid(val) == typeid(long))\
    \ {\n            result.push_back(static_cast<long>(val));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpscm6gj4j.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpscm6gj4j.cpp:12:51: error: invalid static_cast from type \u2018std::any\u2019\
    \ to type \u2018long int\u2019\n   12 |             result.push_back(static_cast<long>(val));\n\
    \      |                                                   ^\n"
  stdout: ''
  timestamp: 1660108492
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    // Filter only integers\n    std::for_each(values.begin(), values.end(),\
    \ [&result](std::any x) { \n        long tmp = std::any_cast<long>(x); \n    \
    \    if ( tmp == std::any_cast<long>(values.back()) ) result.push_back(tmp);\n\
    \    });\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp13_2g5w0.cpp: In lambda function:\n/tmp/tmp13_2g5w0.cpp:13:41:\
    \ error: \u2018values\u2019 is not captured\n   13 |         if ( tmp == std::any_cast<long>(values.back())\
    \ ) result.push_back(tmp);\n      |                                         ^~~~~~\n\
    /tmp/tmp13_2g5w0.cpp:11:57: note: the lambda has no capture-default\n   11 | \
    \    std::for_each(values.begin(), values.end(), [&result](std::any x) {\n   \
    \   |                                                         ^\n/tmp/tmp13_2g5w0.cpp:8:57:\
    \ note: \u2018std::vector<std::any> values\u2019 declared here\n    8 | std::vector<long>\
    \ filter_integers(std::vector<std::any> values) {\n      |                   \
    \                ~~~~~~~~~~~~~~~~~~~~~~^~~~~~\n"
  stdout: ''
  timestamp: 1660108492
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    std::set<long> integers;\n    for (const auto& value : values) {\n\
    \        long integer = 0;\n        try {\n            std::istringstream is(value.cast<std::string>());\n\
    \            if (is >> integer) {\n                integers.insert(integer);\n\
    \            }\n        } catch (std::ios_base::failure e) {\n            integer\
    \ = 0;\n        }\n        if (integers.find(integer) != integers.end()) {\n \
    \           res.push_back(integer);\n        }\n    }\n    return res;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_6snhz68.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp_6snhz68.cpp:14:41: error: \u2018const class std::any\u2019 has no\
    \ member named \u2018cast\u2019\n   14 |             std::istringstream is(value.cast<std::string>());\n\
    \      |                                         ^~~~\n/tmp/tmp_6snhz68.cpp:14:57:\
    \ error: expected primary-expression before \u2018>\u2019 token\n   14 |     \
    \        std::istringstream is(value.cast<std::string>());\n      |          \
    \                                               ^\n/tmp/tmp_6snhz68.cpp:14:59:\
    \ error: expected primary-expression before \u2018)\u2019 token\n   14 |     \
    \        std::istringstream is(value.cast<std::string>());\n      |          \
    \                                                 ^\n"
  stdout: ''
  timestamp: 1660108492
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    bool is_string = false;\n    bool is_map = false;\n    bool is_vector\
    \ = false;\n\n    for(std::any value: values) {\n        if(std::holds_alternative<std::string>(value))\
    \ {\n            is_string = true;\n        }\n        else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            is_map = true;\n        }\n        else if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            is_vector = true;\n        }\n        else {\n            //\
    \ Any other value then string or map\n            res.push_back(long(std::any_cast<long>(value)));\n\
    \        }\n    }\n    if(!is_string && !is_map && !is_vector) {\n        // Return\
    \ empty vector\n        return res;\n    }\n    else {\n        // If string then\
    \ convert to int, else vector\n        if(is_string) {\n            std::string\
    \ str_value = std::any_cast<std::string>(values[0]);\n            std::regex regex_int{R\"\
    ((-?(0|-?[1-9][0-9]*))\"\n                                   \"((\\.(0|[1-9][0-9]*))\"\
    \n                                   \"|(\\.(0|[1-9][0-9]*)(e([+-]?[0-9]+))?))\"\
    \n                                   \"[eE][+-]?[0-9]+\"\n                   \
    \                \"|(0|[1-9][0-9]*))\"\n                                   \"\
    |(0|[1-9][0-9]*)(\\.(0|[1-9][0-9]*))\"\n                                   \"\
    |(0|[1-9][0-9]*)(\\.(0|[1-9][0-9]*)(e([+-]?[0-9]+))?))\"\n                   \
    \                \"[eE][+-]?[0-9]+\"\n                                   \"|-0[xX][0-9A-Fa-f]+\"\
    \n                                   \"|0[xX][0-9A-Fa-f]+\"\n                \
    \                   \"|0[xX][0-9A-Fa-f]+\\.[0-9A-Fa-f]+\"\n                  \
    \                 \"|0[xX][0-9A-Fa-f]+\\.[0-9A-Fa-f]+\"\n                    \
    \               \"|0[xX][0-9A-Fa-f]+\\.[0-9A-Fa-f]+(e[+-]?[0-9]+)?\"\n       \
    \                            \"|-0[xX][0-9A-Fa-f]+\\.[0-9A-Fa-f]+(e[+-]?[0-9]+)?\"\
    \n                                   \"|0[xX][0-9A-Fa-f]+\\.[0-9A-Fa-f]+(e[+-]?[0-9]+)?\"\
    \n                                   \"|-0[xX][0-9A-Fa-f]+\"\n               \
    \                    \"|0[xX][0-9A-Fa-f]+(e[+-]?[0-9]+)?\"\n                 \
    \                  \"|0[xX][0-9A-Fa-f]+(e[+-]?[0-9]+)?\"\n                   \
    \                \"|-0[xX][0-9A-Fa-f]+\"\n                                   \"\
    |0[xX][0-9A-Fa-f]+(e[+-]?[0-9]+)?\"\n                                   \"|0[xX][0-9A-\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcy21m7r2.cpp:57:36: warning: missing terminating \" character\n\
    \   57 |                                    \"|0[xX][0-9A-\n      |          \
    \                          ^\n/tmp/tmpcy21m7r2.cpp:57:36: error: missing terminating\
    \ \" character\n   57 |                                    \"|0[xX][0-9A-\n  \
    \    |                                    ^~~~~~~~~~~~~\n/tmp/tmpcy21m7r2.cpp:\
    \ In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpcy21m7r2.cpp:15:53: error: no matching function for call to \u2018\
    holds_alternative<std::string>(std::any&)\u2019\n   15 |         if(std::holds_alternative<std::string>(value))\
    \ {\n      |                                                     ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpcy21m7r2.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpcy21m7r2.cpp:15:53:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   15 |         if(std::holds_alternative<std::string>(value)) {\n\
    \      |                                                     ^\n/tmp/tmpcy21m7r2.cpp:18:66:\
    \ error: no matching function for call to \u2018holds_alternative<std::map<long\
    \ int, long int, std::less<long int>, std::allocator<std::pair<const long int,\
    \ long int> > > >(std::any&)\u2019\n   18 |         else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n      |                                                                 \
    \ ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpcy21m7r2.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::varian"
  stdout: ''
  timestamp: 1660108492
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto &val : values) {\n        if (std::any_cast<std::int>(val))\
    \ {\n            res.push_back(std::any_cast<long>(val));\n        }\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp7w73jcpn.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp7w73jcpn.cpp:11:18: error: parse error in template argument list\n\
    \   11 |         if (std::any_cast<std::int>(val)) {\n      |                \
    \  ^~~~~~~~~~~~~~~~~~\n/tmp/tmp7w73jcpn.cpp:11:40: error: no matching function\
    \ for call to \u2018any_cast<<expression error> >(std::any&)\u2019\n   11 |  \
    \       if (std::any_cast<std::int>(val)) {\n      |                         \
    \               ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:126,\n\
    \                 from /tmp/tmp7w73jcpn.cpp:2:\n/usr/include/c++/9/any:452:23:\
    \ note: candidate: \u2018template<class _ValueType> _ValueType std::any_cast(const\
    \ std::any&)\u2019\n  452 |     inline _ValueType any_cast(const any& __any)\n\
    \      |                       ^~~~~~~~\n/usr/include/c++/9/any:452:23: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp7w73jcpn.cpp:11:40:\
    \ error: template argument 1 is invalid\n   11 |         if (std::any_cast<std::int>(val))\
    \ {\n      |                                        ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:126,\n\
    \                 from /tmp/tmp7w73jcpn.cpp:2:\n/usr/include/c++/9/any:478:23:\
    \ note: candidate: \u2018template<class _ValueType> _ValueType std::any_cast(std::any&)\u2019\
    \n  478 |     inline _ValueType any_cast(any& __any)\n      |                \
    \       ^~~~~~~~\n/usr/include/c++/9/any:478:23: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp7w73jcpn.cpp:11:40: error: template argument 1 is invalid\n\
    \   11 |         if (std::any_cast<std::int>(val)) {\n      |                \
    \                        ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:126,\n\
    \                 from /tmp/tmp7w73jcpn.cpp:2:\n/usr/include/c++/9/any:492:23:\
    \ note: candidate: \u2018template<class _ValueType> _ValueType std::any_cast(std::any&&)\u2019\
    \n  492 |     inline _ValueType any_cast(any&& __any)\n      |               \
    \        ^~~~~~~~\n/usr/include/c++/9/any:492:23: note:   template"
  stdout: ''
  timestamp: 1660108492
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    auto it_values = values.begin();\n    auto it_values_end = values.end();\n\
    \    for (; it_values != it_values_end; ++it_values) {\n        auto it_value\
    \ = it_values->as<int>();\n        if (it_value != nullptr) {\n            result.push_back(*it_value);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpjoo9c8eh.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpjoo9c8eh.cpp:13:36: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   13 |         auto it_value = it_values->as<int>();\n\
    \      |                                    ^~\n/tmp/tmpjoo9c8eh.cpp:13:39: error:\
    \ expected primary-expression before \u2018int\u2019\n   13 |         auto it_value\
    \ = it_values->as<int>();\n      |                                       ^~~\n"
  stdout: ''
  timestamp: 1660108492
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ results;\n    for (const auto& v : values) {\n        auto t = v.as<long>();\n\
    \        if (!t || t < 0) {\n            continue;\n        }\n        results.push_back(t);\n\
    \    }\n    return results;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpn9qf09h6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpn9qf09h6.cpp:11:20: error: \u2018const class std::any\u2019 has no\
    \ member named \u2018as\u2019\n   11 |         auto t = v.as<long>();\n      |\
    \                    ^~\n/tmp/tmpn9qf09h6.cpp:11:23: error: expected primary-expression\
    \ before \u2018long\u2019\n   11 |         auto t = v.as<long>();\n      |   \
    \                    ^~~~\n"
  stdout: ''
  timestamp: 1660108492
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::any\
    \ value;\n  std::vector<long> integer_vector;\n\n  for (std::any x : values) {\n\
    \    if (std::holds_alternative<long long>(x)) {\n      integer_vector.push_back((long\
    \ long)std::any_cast<long long>(x));\n    } else if (std::holds_alternative<long>(x))\
    \ {\n      integer_vector.push_back((long)std::any_cast<long>(x));\n    } else\
    \ if (std::holds_alternative<int>(x)) {\n      integer_vector.push_back((int)std::any_cast<int>(x));\n\
    \    } else if (std::holds_alternative<double>(x)) {\n      integer_vector.push_back((double)std::any_cast<double>(x));\n\
    \    } else if (std::holds_alternative<char>(x)) {\n      integer_vector.push_back((char)std::any_cast<char>(x));\n\
    \    } else if (std::holds_alternative<bool>(x)) {\n      integer_vector.push_back((bool)std::any_cast<bool>(x));\n\
    \    } else if (std::holds_alternative<std::string>(x)) {\n      integer_vector.push_back(std::any_cast<std::string>(x).to_long());\n\
    \    } else if (std::holds_alternative<std::map<long,long>>(x)) {\n      integer_vector.push_back((std::map<long,long>)std::any_cast<std::map<long,long>>(x));\n\
    \    } else if (std::holds_alternative<std::vector<long>>(x)) {\n      integer_vector.push_back((std::vector<long>)std::any_cast<std::vector<long>>(x));\n\
    \    } else {\n      integer_vector.push_back(std::any_cast<std::string>(x).to_long());\n\
    \    }\n  }\n\n  return integer_vector;\n}\nint main() {\n    auto candidate =\
    \ filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpuj0em112.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpuj0em112.cpp:13:44: error: no matching function for call to \u2018\
    holds_alternative<long long int>(std::any&)\u2019\n   13 |     if (std::holds_alternative<long\
    \ long>(x)) {\n      |                                            ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpuj0em112.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuj0em112.cpp:13:44:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |     if (std::holds_alternative<long long>(x)) {\n      |\
    \                                            ^\n/tmp/tmpuj0em112.cpp:15:46: error:\
    \ no matching function for call to \u2018holds_alternative<long int>(std::any&)\u2019\
    \n   15 |     } else if (std::holds_alternative<long>(x)) {\n      |         \
    \                                     ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpuj0em112.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpuj0em112.cpp:15:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   15 |     } else if (std::holds_alternative<long>(x)) {\n    \
    \  |                                              ^\n/tmp/tmpuj0em112.cpp:17:45:\
    \ error: no matching function for call to \u2018holds_alternative<in"
  stdout: ''
  timestamp: 1660108492
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto& v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptin7mmy0.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmptin7mmy0.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmptin7mmy0.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmptin7mmy0.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108492
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    assert(values.size()\
    \ > 0);\n    auto vec = std::make_shared<std::vector>();\n    \n    for (auto&\
    \ value : values) {\n        if (std::holds_alternative<std::string>(value)) {\n\
    \            vec.push_back(value.get<std::string>());\n        } else if (std::holds_alternative<long>(value))\
    \ {\n            vec.push_back(value.get<long>());\n        } else if (std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            vec.push_back(value.get<std::map<long,long>>().begin()->first);\n\
    \        } else {\n            vec.push_back(value.get<std::vector<long>>().front());\n\
    \        }\n    }\n    \n    return vec;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp7uqkli1y.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp7uqkli1y.cpp:10:46: error: no matching function for call to \u2018\
    make_shared<template<class _Tp, class _Alloc> class std::vector>()\u2019\n   10\
    \ |     auto vec = std::make_shared<std::vector>();\n      |                 \
    \                             ^\nIn file included from /usr/include/c++/9/memory:81,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82,\n\
    \                 from /tmp/tmp7uqkli1y.cpp:2:\n/usr/include/c++/9/bits/shared_ptr.h:714:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Args> std::shared_ptr<_Tp>\
    \ std::make_shared(_Args&& ...)\u2019\n  714 |     make_shared(_Args&&... __args)\n\
    \      |     ^~~~~~~~~~~\n/usr/include/c++/9/bits/shared_ptr.h:714:5: note:  \
    \ template argument deduction/substitution failed:\n/tmp/tmp7uqkli1y.cpp:13:54:\
    \ error: no matching function for call to \u2018holds_alternative<std::string>(std::any&)\u2019\
    \n   13 |         if (std::holds_alternative<std::string>(value)) {\n      | \
    \                                                     ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmp7uqkli1y.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp7uqkli1y.cpp:13:54:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         if (std::holds_alternative<std::string>(value))\
    \ {\n      |                                                      ^\n/tmp/tmp7uqkli1y.cpp:14:33:\
    \ error: \u2018class std::any\u2019 has no member named \u2018get\u2019\n   14\
    \ |             vec.push_back(value.get<std::string>());\n      |            \
    \                     ^~~\n/tmp/tmp7uqkli1y.cpp:14:48: error: expecte"
  stdout: ''
  timestamp: 1660108492
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ result;\n\tstd::any_iterator iter;\n\tfor (iter = values.begin(); iter != values.end();\
    \ ++iter) {\n\t\ttry {\n\t\t\tif (std::is_same<decltype(*iter), long>::value)\
    \ {\n\t\t\t\tresult.push_back(*iter);\n\t\t\t}\n\t\t} catch (std::exception &e)\
    \ {\n\t\t}\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmptv5gpd2n.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmptv5gpd2n.cpp:10:7: error: \u2018any_iterator\u2019 is not a member\
    \ of \u2018std\u2019; did you mean \u2018move_iterator\u2019?\n   10 |  std::any_iterator\
    \ iter;\n      |       ^~~~~~~~~~~~\n      |       move_iterator\n/tmp/tmptv5gpd2n.cpp:11:7:\
    \ error: \u2018iter\u2019 was not declared in this scope\n   11 |  for (iter =\
    \ values.begin(); iter != values.end(); ++iter) {\n      |       ^~~~\n/tmp/tmptv5gpd2n.cpp:13:42:\
    \ error: template argument 1 is invalid\n   13 |    if (std::is_same<decltype(*iter),\
    \ long>::value) {\n      |                                          ^\n/tmp/tmptv5gpd2n.cpp:13:50:\
    \ error: expected initializer before \u2018)\u2019 token\n   13 |    if (std::is_same<decltype(*iter),\
    \ long>::value) {\n      |                                                  ^\n"
  stdout: ''
  timestamp: 1660108492
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    \n    // Iterate over all values provided\n    for(auto & v:values)\
    \ {\n        // Check if value is string\n        if(!std::is_string(v)){\n  \
    \          // Check if value is integer\n            if(std::is_integral_v<decltype(v)>)\
    \ {\n                // Filter value by condition\n                if(v != std::to_string(std::move(v)))\
    \ {\n                    result.push_back(std::move(v));\n                }\n\
    \            }\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp05c4811c.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp05c4811c.cpp:14:18: error: \u2018is_string\u2019 is not a member of\
    \ \u2018std\u2019; did you mean \u2018u32string\u2019?\n   14 |         if(!std::is_string(v)){\n\
    \      |                  ^~~~~~~~~\n      |                  u32string\n/tmp/tmp05c4811c.cpp:18:52:\
    \ error: no matching function for call to \u2018to_string(std::remove_reference<std::any&>::type)\u2019\
    \n   18 |                 if(v != std::to_string(std::move(v))) {\n      |   \
    \                                                 ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp05c4811c.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6549:3:\
    \ note: candidate: \u2018std::string std::__cxx11::to_string(int)\u2019\n 6549\
    \ |   to_string(int __val)\n      |   ^~~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6549:17:\
    \ note:   no known conversion for argument 1 from \u2018std::remove_reference<std::any&>::type\u2019\
    \ {aka \u2018std::any\u2019} to \u2018int\u2019\n 6549 |   to_string(int __val)\n\
    \      |             ~~~~^~~~~\n/usr/include/c++/9/bits/basic_string.h:6554:3:\
    \ note: candidate: \u2018std::string std::__cxx11::to_string(unsigned int)\u2019\
    \n 6554 |   to_string(unsigned __val)\n      |   ^~~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:6554:22:\
    \ note:   no known conversion for argument 1 from \u2018std::remove_reference<std::any&>::type\u2019\
    \ {aka \u2018std::any\u2019} to \u2018unsigned int\u2019\n 6554 |   to_string(unsigned\
    \ __val)\n      |             ~~~~~~~~~^~~~~\n/usr/include/c++/9/bits/basic_string.h:6560:3:\
    \ note: candidate: \u2018std::string std:"
  stdout: ''
  timestamp: 1660108492
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ results;\n  for (auto x : values) {\n    auto it = std::find_if(std::begin(x),\
    \ std::end(x), [](const auto& i) {\n      return std::any_of(i.type(), std::is_integral<T>{});\n\
    \    });\n    if (it != std::end(x)) {\n      results.push_back(std::any_cast<long>(*it));\n\
    \    }\n  }\n  return results;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxqnycrxd.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpxqnycrxd.cpp:11:40: error: no matching function for call to \u2018\
    begin(std::any&)\u2019\n   11 |     auto it = std::find_if(std::begin(x), std::end(x),\
    \ [](const auto& i) {\n      |                                        ^\nIn file\
    \ included from /usr/include/c++/9/bits/range_access.h:36,\n                 from\
    \ /usr/include/c++/9/string:54,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpxqnycrxd.cpp:2:\n/usr/include/c++/9/initializer_list:89:5: note: candidate:\
    \ \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\
    \n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n\
    /usr/include/c++/9/initializer_list:89:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmpxqnycrxd.cpp:11:40: note:   \u2018std::any\u2019 is not derived\
    \ from \u2018std::initializer_list<_Tp>\u2019\n   11 |     auto it = std::find_if(std::begin(x),\
    \ std::end(x), [](const auto& i) {\n      |                                  \
    \      ^\nIn file included from /usr/include/c++/9/string:54,\n              \
    \   from /usr/include/c++/9/bits/locale_classes.h:40,\n                 from /usr/include/c++/9/bits/ios_base.h:41,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from "
  stdout: ''
  timestamp: 1660108492
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    long l = 0;\n    long ll = 0;\n    for(auto &&i : values){\n  \
    \      if (typeid(i) == typeid(std::map<long,long>)){\n            for(auto &&m\
    \ : i){\n                if(typeid(m.first) == typeid(long)){\n              \
    \      l = m.second;\n                    break;\n                }\n        \
    \    }\n            if(l != ll){\n                result.push_back(l);\n     \
    \           ll = l;\n            }\n        }\n        else if (typeid(i) == typeid(std::vector<long>)){\n\
    \            for(auto &&i : i){\n                if(typeid(i) == typeid(long)){\n\
    \                    l = i;\n                    break;\n                }\n \
    \           }\n            if(l != ll){\n                result.push_back(l);\n\
    \                ll = l;\n            }\n        }\n        else{\n          \
    \  if(typeid(i) == typeid(long)){\n                l = i;\n            }\n   \
    \         else{\n                ll = i;\n            }\n        }\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = filter_integers;\n  \
    \  assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n  \
    \  assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9izgt5my.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp9izgt5my.cpp:14:28: error: no matching function for call to \u2018\
    begin(std::any&)\u2019\n   14 |             for(auto &&m : i){\n      |      \
    \                      ^\nIn file included from /usr/include/c++/9/bits/range_access.h:36,\n\
    \                 from /usr/include/c++/9/string:54,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp9izgt5my.cpp:2:\n/usr/include/c++/9/initializer_list:89:5: note: candidate:\
    \ \u2018template<class _Tp> constexpr const _Tp* std::begin(std::initializer_list<_Tp>)\u2019\
    \n   89 |     begin(initializer_list<_Tp> __ils) noexcept\n      |     ^~~~~\n\
    /usr/include/c++/9/initializer_list:89:5: note:   template argument deduction/substitution\
    \ failed:\n/tmp/tmp9izgt5my.cpp:14:28: note:   \u2018std::any\u2019 is not derived\
    \ from \u2018std::initializer_list<_Tp>\u2019\n   14 |             for(auto &&m\
    \ : i){\n      |                            ^\nIn file included from /usr/include/c++/9/string:54,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp9izgt5my.cpp:2:\n/usr/include/c++/9/bits/range_access.h:48:5:\
    \ note: candidate: \u2018template<class _Contain"
  stdout: ''
  timestamp: 1660108492
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ output;\n  for (auto & value : values) {\n    if (value.type() == typeid(long))\
    \ {\n      output.push_back(value.as<long>());\n    }\n  }\n  return output;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplsp76ckz.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmplsp76ckz.cpp:12:30: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   12 |       output.push_back(value.as<long>());\n  \
    \    |                              ^~\n/tmp/tmplsp76ckz.cpp:12:33: error: expected\
    \ primary-expression before \u2018long\u2019\n   12 |       output.push_back(value.as<long>());\n\
    \      |                                 ^~~~\n"
  stdout: ''
  timestamp: 1660108492
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto& v : values) {\n        if(!std::holds_alternative<std::string>(v))\
    \ {\n            result.push_back(v);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnrhm1ye3.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpnrhm1ye3.cpp:11:50: error: no matching function for call to \u2018\
    holds_alternative<std::string>(std::any&)\u2019\n   11 |         if(!std::holds_alternative<std::string>(v))\
    \ {\n      |                                                  ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpnrhm1ye3.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpnrhm1ye3.cpp:11:50:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(!std::holds_alternative<std::string>(v)) {\n\
    \      |                                                  ^\n/tmp/tmpnrhm1ye3.cpp:12:31:\
    \ error: no matching function for call to \u2018std::vector<long int>::push_back(std::any&)\u2019\
    \n   12 |             result.push_back(v);\n      |                          \
    \     ^\nIn file included from /usr/include/c++/9/vector:67,\n               \
    \  from /usr/include/c++/9/functional:62,\n                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n\
    \                 from /usr/include/c++/9/algorithm:71,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmpnrhm1ye3.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7: note:\
    \ candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::any\u2019 to \u2018const value_type&\u2019\
    \ {"
  stdout: ''
  timestamp: 1660108492

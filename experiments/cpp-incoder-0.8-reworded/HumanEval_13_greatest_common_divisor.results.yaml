language: cpp
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // initialize to 1 since GCD of a and b is 1\n    long gcd=1;\
    \ \n    // if the GCD of a and b is 1, the GCD is the same\n    if (a%b==0) return\
    \ a;\n    // loop while a divides b\n    while (b!=0){\n        // remainder of\
    \ a divides b, take next one\n        long r=a%b; \n        // update gcd if it\
    \ differs from a, else restart loop\n        if (r!=0){ gcd=r; a=b; }\n      \
    \  // update b\n        b=a/b; \n    }\n    return gcd;\n}\nint main() {\n   \
    \ auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) ==\
    \ (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103467
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long greatest_common_divisor = 1;\n    while (b) {\n     \
    \   if (b%a == 0) {\n            greatest_common_divisor = a;\n            break;\n\
    \        }\n        greatest_common_divisor = b;\n        a = b;\n        b =\
    \ a%b;\n    }\n    return greatest_common_divisor;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmps__ogxpb: /tmp/tmps__ogxpb.cpp:23: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103463
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  int d = 0;\n  while (a >= b) {\n    d = d * b % a;\n    a =\
    \ a % b;\n  }\n  return d;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp61nh8_y2: /tmp/tmp61nh8_y2.cpp:18: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103463
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  // Check for negatives\n  if (a < 0) {\n    a = -a;\n    b =\
    \ 0;\n  }\n  if (b < 0) {\n    b = -b;\n    a = 0;\n  }\n  // Initialize greatest\
    \ common divisor to 0\n  long gcd = 0;\n  // Find the gcd using Euclid's algorithm\n\
    \  // https://rosettacode.org/wiki/Euclidean_algorithm#C\n  while (a != 0) {\n\
    \    long r = a % b;\n    a = b;\n    b = r;\n    gcd++;\n  }\n  return gcd;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    assert(b > 0); // a is 0 or a is 1\n    // GCD of 0 and 1\
    \ is the same as 1\n    if (a == 0) return a;\n    // GCD(a, b) is the same as\
    \ gcd(b, a mod b)\n    if (b == 0) return a;\n    // return GCD (a mod b, b)\n\
    \    return greatest_common_divisor(b, a % b);\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpn6ik2hm8: /tmp/tmpn6ik2hm8.cpp:9: long int greatest_common_divisor(long
    int, long int): Assertion `b > 0'' failed.

    '
  stdout: ''
  timestamp: 1660103463
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  assert(a >= 0 && b > 0 && a < b);\n  if (b == 0) return a;\n\
    \  return greatest_common_divisor(b, a % b);\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpmxfbgco4: /tmp/tmpmxfbgco4.cpp:9: long int greatest_common_divisor(long
    int, long int): Assertion `a >= 0 && b > 0 && a < b'' failed.

    '
  stdout: ''
  timestamp: 1660103463
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long c;\n    if (b == 0)\n        return a;\n    else if (a\
    \ % b == 0)\n        return b;\n    else {\n        c = greatest_common_divisor(b,\
    \ a % b);\n        return c;\n    }\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) return a;\n    long c = 1;\n    while (b > 0)\
    \ {\n        if (b % 2 == 1) a /= 2;\n        b /= 2;\n        c++;\n    }\n \
    \   return c;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpgfdk2kz5: /tmp/tmpgfdk2kz5.cpp:20: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103463
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (b == 0) return a;\n  long temp = b;\n  while (temp > 0)\
    \ {\n    if (a % temp == 0) return temp;\n    temp--;\n  }\n  assert(false);\n\
    \  return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmppsqr521y: /tmp/tmppsqr521y.cpp:20: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103463
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd;\n    // if b == 0\n    if (b == 0) {\n        //\
    \ If both a and b are positive\n        if (a > 0)\n            return a;\n  \
    \      else\n            return b;\n    }\n    // If b > 0\n    if (b > 0) {\n\
    \        // If both a & b are positive\n        if (a > 0)\n            gcd =\
    \ a;\n        // If b & a are positive\n        else if (a > 0)\n            gcd\
    \ = b;\n        // If b & a are negative\n        else\n            gcd = -a;\n\
    \        // If b > a\n        if (b > gcd) {\n            // If b - gcd > 0\n\
    \            if (b - gcd > 0)\n                gcd = b;\n            // If b -\
    \ gcd < 0\n            else\n                gcd = a;\n        }\n    }\n    //\
    \ If b < a\n    else if (b > 0) {\n        // If both a & b are positive\n   \
    \     if (a > 0)\n            gcd = b;\n        // If a & b are positive\n   \
    \     else if (a > 0)\n            gcd = a;\n        // If a & b are negative\n\
    \        else\n            gcd = -a;\n    }\n    // If b == 0 & a is positive\n\
    \    else if (a > 0) {\n        // If b > a\n        if (b > a)\n            gcd\
    \ = a;\n        // If b < a\n        else if (b < a)\n            gcd = b;\n \
    \       // If b == a & a is positive\n        else if (a == a)\n            gcd\
    \ = a;\n        // If b == 0 & a is negative\n        else\n            gcd =\
    \ -a;\n    }\n    // If b == 0 & a is negative\n    else if (a > 0) {\n      \
    \  // If b > a\n        if (b > a)\n            gcd = a;\n        // If b < a\n\
    \        else if (b < a)\n            gcd = b;\n        // If b == a & a is negative\n\
    \        else if (a == a)\n            gcd = a;\n        // If b == 0 & a is positive\n\
    \        else\n            gcd = -a;\n    }\n    // If b == 0 & a is positive\n\
    \    else if (a < 0) {\n        // If b > a\n        if (b > a)\n            gcd\
    \ = a;\n        // If b < a\n        else if (b < a)\n            gcd = b;\n \
    \       // If b == a & a is positive\n        else if (a == a)\n            gcd\
    \ = a;\n        // If b == 0 & a is negative\n        else\n            gcd =\
    \ -a;\n    }\n    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpagwttlot: /tmp/tmpagwttlot.cpp:100: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103463
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return std::abs(a) % (b > 0 ? b : -b);\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpfmayta27: /tmp/tmpfmayta27.cpp:13: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103463
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long x;\n    // x will be the greatest common divisor of a\
    \ and b\n    for (x = a, y =b; x >0; x--, y >>= 1) ;\n    return y;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2f2p1ngm.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmp2f2p1ngm.cpp:11:17: error: \u2018y\u2019 was\
    \ not declared in this scope\n   11 |     for (x = a, y =b; x >0; x--, y >>= 1)\
    \ ;\n      |                 ^\n/tmp/tmp2f2p1ngm.cpp:12:12: error: \u2018y\u2019\
    \ was not declared in this scope\n   12 |     return y;\n      |            ^\n"
  stdout: ''
  timestamp: 1660103463
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  assert(a < b);\n  long g = 1, f = a;\n  while (b != 0) {\n \
    \   long rt = f / b;\n    g = g * b;\n    f = rt;\n  }\n  return f;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103468
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long g = greatest_common_divisor(b,\
    \ a % b);\n    return g != 0 ? g : b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        if (a >= b) {\n\
    \            a %= b;\n            gcd = b;\n        }\n        b = a % b;\n  \
    \      a = b;\n    }\n    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmprswna69j: /tmp/tmprswna69j.cpp:22: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103463
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if(b == 0) return a;\n  long r = a % b;\n  if(r == 0) return\
    \ b;\n  return greatest_common_divisor(b, r);\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (a > b) {\n        long temp = a;\n        a = b;\n   \
    \     b = temp;\n    }\n\n    while (a != 0) {\n        long rem = a % b;\n  \
    \      a = b;\n        b = rem;\n    }\n    return b;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103403
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd =1;\n    while (b > 0)\n    {\n        long remainder\
    \ = b % a;\n        a = b;\n        b = remainder;\n    }\n    return a;\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpl5ctozxs: /tmp/tmpl5ctozxs.cpp:22: int main(): Assertion `candidate((49),
    (14)) == (7)'' failed.

    '
  stdout: ''
  timestamp: 1660103463
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b > 0) {\n        if ((b % a) == 0)\n            return\
    \ a;\n        a++;\n        b--;\n    }\n    return 1;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp4fwgtkf5: /tmp/tmp4fwgtkf5.cpp:19: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103462
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    assert(b != 0);\n    long x = a % b;\n    if (x == 0)\n  \
    \      return b;\n    long y = gcd(b, x);\n    return (x * y) / b;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcmy552yr.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmpcmy552yr.cpp:13:14: error: \u2018gcd\u2019 was\
    \ not declared in this scope; did you mean \u2018std::gcd\u2019?\n   13 |    \
    \ long y = gcd(b, x);\n      |              ^~~\n      |              std::gcd\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:84,\n\
    \                 from /tmp/tmpcmy552yr.cpp:2:\n/usr/include/c++/9/numeric:132:5:\
    \ note: \u2018std::gcd\u2019 declared here\n  132 |     gcd(_Mn __m, _Nn __n)\
    \ noexcept\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660103463
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    int g = a;\n    while (g != 0) {\n        if (g > b) g = b;\
    \ // Only try divisors up to b\n        int r = a % g;\n        a = g;\n     \
    \   g = r;\n    }\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpweqt0lpp: /tmp/tmpweqt0lpp.cpp:20: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103463
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  long x;\n  if(a>b) {\n    long t=a;\n    a=b;\n    b=t;\n  }\n\
    \  while(1) {\n    x=(b%a); a=b;b=x;\n  }\n  return x;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long temp = 0;\n    if (b == 0) {\n        return a;\n   \
    \ }\n    while (b != 0) {\n        temp = b;\n        b = a % b;\n        a =\
    \ temp;\n    }\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n   assert(b > 0);\n   long long gcd = 1;\n   long long temp;\n\
    \   while (a != 0) {\n      temp = a;\n      a = b%a;\n      b = temp;\n     \
    \ gcd = b > gcd ? b : gcd;\n   }\n   return gcd;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpexe63zq7: /tmp/tmpexe63zq7.cpp:22: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103463
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (a == 0 || b == 0) return 0;\n    while (a != b) {\n  \
    \      if (a > b) a -= b;\n        else b -= a;\n    }\n    return b;\n}\nint\
    \ main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (a < b) std::swap(a, b);\n    if (b == 0) return a;\n \
    \   return greatest_common_divisor(b, a % b);\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long tmp = (abs(a) > abs(b)) ? a : b;\n    while (abs(a) >\
    \ abs(b)) {\n        tmp = (abs(a) > abs(b)) ? a : b;\n        tmp = (tmp + (tmp\
    \ % 2)) / 2;\n        a = tmp;\n    }\n    return tmp;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp2ly6pyrz: /tmp/tmp2ly6pyrz.cpp:19: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103463
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long n = 0;\n    // Loop through all the numbers between a\
    \ and b\n    while (a) {\n        // If b is divisible by a, then increment n\n\
    \        if ((b / a) % 2 == 0) {\n            n = n + 1;\n        }\n        //\
    \ Move to the next number in a\n        a = a / 2;\n    }\n    // Return the number\
    \ that gave n to be the greatest common divisor of a\n    return n;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp4hol5aq2: /tmp/tmp4hol5aq2.cpp:25: int main(): Assertion `candidate((10),
    (15)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660103463
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (a == 0) return b;\n  if (b == 0) return a;\n  long long\
    \ gcd = greatest_common_divisor(b, a % b);\n  if (gcd == b) return a;\n  return\
    \ gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpryuw36zk: /tmp/tmpryuw36zk.cpp:17: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103463
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (b != 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103403
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // Check for negative values.\n    if (a < 0) { a = -a; return\
    \ a; }\n    if (b < 0) { b = -b; return b; }\n    // Initialize GCD as 1.\n  \
    \  long gcd = 0;\n    // Iterate through all numbers of form a <= x <= b.\n  \
    \  while (a % b != 0) { a = a % b; gcd = b; }\n    // Return GCD.\n    return\
    \ gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103468
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  assert(b > 0);\n  while (1) {\n    long g = a % b;\n    if (g\
    \ == 0) break;\n    a = b;\n    b = g;\n  }\n  return b;\n}\nint main() {\n  \
    \  auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) ==\
    \ (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  // Initialize a couple of variables\n  long g = 0, n = a;\n\
    \  while (n) {\n    // Update n\n    n /= b;\n    // Update g\n    g = std::max(n,g);\n\
    \  }\n  // Return the greatest common divisor\n  return g;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp00jqleyw: /tmp/tmp00jqleyw.cpp:22: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103463
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  long gcd = 0;\n  if (b == 0)\n    return a;\n  while (a % b\
    \ != 0) {\n    gcd = b;\n    b = a % b;\n    a = gcd;\n  }\n  return gcd;\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp35n1zrdg: /tmp/tmp35n1zrdg.cpp:21: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103463
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  long m = 1;\n  long p = a;\n  long q = b;\n  while (p % q ==\
    \ 0) {\n    m = p;\n    p = q;\n    q = m / q;\n  }\n  if (p * q != m)\n    throw\
    \ std::runtime_error(\"Error\");\n  return p;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::runtime_error'\n \
    \ what():  Error\n"
  stdout: ''
  timestamp: 1660103463
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // Initialize GCD of first two numbers to 1\n    long gcd\
    \ = a;\n    // Initialize GCD of next two numbers to first number\n    gcd %=\
    \ b;\n    while (gcd != 0) {\n        // Store GCD in a variable for further use\n\
    \        gcd = b;\n        // If current GCD is greater than first number, then\
    \ update it\n        // with first number\n        b = (gcd > a) ? a : gcd;\n\
    \        // Get new GCD\n        gcd = a % b;\n    }\n    return b;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpq15u7q17: /tmp/tmpq15u7q17.cpp:26: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103463
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) {\n        return a;\n    }\n    long d = a %\
    \ b;\n    return greatest_common_divisor(b, d);\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) return a;\n    long g = greatest_common_divisor(b,\
    \ a % b);\n    return g == b ? a : g;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp8tg7c67m: /tmp/tmp8tg7c67m.cpp:15: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103463
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    if (a == 0)\n        return\
    \ b;\n    if (a < b) {\n        long temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    while (b) {\n        long temp = a % b;\n        a = b;\n        b\
    \ = temp;\n    }\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long r = 0, d = a, y = 1, x;\n    while (d != 0) {\n     \
    \   while ((d % 2) == 0) {\n            d = d / 2;\n            r++;\n       \
    \ }\n        q = d / y;\n        x = a - q * y;\n        y = b - q * x;\n    \
    \    d = y / x;\n        r = q + r + d;\n    }\n    return r;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwzr2880x.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmpwzr2880x.cpp:15:9: error: \u2018q\u2019 was not\
    \ declared in this scope\n   15 |         q = d / y;\n      |         ^\n"
  stdout: ''
  timestamp: 1660103463
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // code here\n    if(b == 0) return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long g = a%b;\n    g = b/g;\n    return g;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpax52xztn: /tmp/tmpax52xztn.cpp:15: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103464
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcf;\n    for (;;) {\n        if ((b % a) == 0)\n   \
    \         return a;\n        gcf = a % b;\n        a = b;\n        b = gcf;\n\
    \    }\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    int reminder = 0;\n    long gcd = a;\n    while (a != 0 &&\
    \ b != 0) {\n        int a_mod = (a % b);\n        reminder = (a_mod < 0 ? a_mod\
    \ + b : a_mod);\n        a = b;\n        b = reminder;\n    }\n    while (a !=\
    \ 0) {\n        reminder = a;\n        a = b;\n        b = reminder;\n    }\n\
    \    return b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 1;\n    while (a % b != 0) {\n        gcd = (a\
    \ + b) / gcd;\n    }\n    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103468
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long x = 0, y = 1;\n    while (a || b) {\n        long tmp\
    \ = a;\n        a = b;\n        b = tmp % b;\n        x = (x * y) % b;\n    }\n\
    \    return x;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    if (a == 0)\n        return\
    \ b;\n    return greatest_common_divisor(b, a % b);\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103403
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103381
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long temp;\n    while (a != 0) {\n        temp = a;\n    \
    \    a = b;\n        b = temp % b;\n    }\n    return b;\n}\nint main() {\n  \
    \  auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) ==\
    \ (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103465
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) return a;\n    if (a == 0) return b;\n    long\
    \ x = greatest_common_divisor(b, a % b);\n    if (x != 0) return x;\n    return\
    \ b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103465
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // Initialize results to -1 to indicate an error.\n    long\
    \ g = -1;\n    // Start with remainder of a.\n    long r = a % b;\n    // Continue\
    \ while a is larger than remainder of b.\n    while (a >= b) {\n        // If\
    \ remainder of b is 0, then b is not a greatest\n        // common divisor of\
    \ a, so a does not become a greatest\n        // common divisor of b.\n      \
    \  if (r == 0) {\n            break;\n        }\n        // Update g and a with\
    \ remainder of a.\n        g = r;\n        a = a % b;\n    }\n    // If b is a\
    \ greatest common divisor of a then update g\n    // with b.\n    if (b != 0)\
    \ {\n        g = b;\n    }\n    // Return greatest common divisor of a, b.\n \
    \   return g;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpusjbfwof: /tmp/tmpusjbfwof.cpp:35: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103465
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (b == 0) return a;\n  return greatest_common_divisor(b, a\
    \ % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103465
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if(!b) {\n        return a;\n    }\n    long divisor = greatest_common_divisor(a\
    \ % b, b);\n    return divisor * b % a;\n}\nint main() {\n    auto candidate =\
    \ greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103466
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  assert(b > 0);\n  assert(a > 0);\n  if (a == 1) {\n    return\
    \ b;\n  } else if (b == 1) {\n    return a;\n  }\n  long g = greatest_common_divisor(b,\
    \ a % b);\n  return g == a ? a : g;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmprfmtidt9: /tmp/tmprfmtidt9.cpp:21: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103466
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long rem = 0, rem;\n    // Step 1: Loop until a != 0\n\
    \    while (b) {\n        if (b / a == 0) {\n            rem = b%a;\n        \
    \    return rem;\n        }\n        b = a % b;\n        a++;\n    }\n    return\
    \ b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiv9f9nrv.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmpiv9f9nrv.cpp:9:24: error: redeclaration of \u2018\
    long long int rem\u2019\n    9 |     long long rem = 0, rem;\n      |        \
    \                ^~~\n/tmp/tmpiv9f9nrv.cpp:9:15: note: \u2018long long int rem\u2019\
    \ previously declared here\n    9 |     long long rem = 0, rem;\n      |     \
    \          ^~~\n"
  stdout: ''
  timestamp: 1660103465
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long c = 0;\n    while (b > 0) {\n        if (a & 1) {\n \
    \           c = b%a;\n            break;\n        }\n        a = a >> 1;\n   \
    \     b = b >> 1;\n    }\n    return c;\n}\nint main() {\n    auto candidate =\
    \ greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpx5i1eu2b: /tmp/tmpx5i1eu2b.cpp:23: int main(): Assertion `candidate((10),
    (15)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660103466
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    assert(b > 0);\n    long a = abs(a);\n    long b = abs(b);\n\
    \    long c;\n    long max_common_divisor = 1;\n    while (a > 1) {\n        c\
    \ = b % a;\n        if (c > max_common_divisor) {\n            max_common_divisor\
    \ = c;\n        }\n        a /= 2;\n        b /= 2;\n    }\n    return max_common_divisor;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp6s5nxy6.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmpp6s5nxy6.cpp:10:10: error: declaration of \u2018\
    long int a\u2019 shadows a parameter\n   10 |     long a = abs(a);\n      |  \
    \        ^\n/tmp/tmpp6s5nxy6.cpp:11:10: error: declaration of \u2018long int b\u2019\
    \ shadows a parameter\n   11 |     long b = abs(b);\n      |          ^\n"
  stdout: ''
  timestamp: 1660103465
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if(a >= b) {\n        return greatest_common_divisor(b, a\
    \ % b);\n    } else {\n        return greatest_common_divisor(a, a % b);\n   \
    \ }\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103466
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\tb = r;\n\
    \t}\n\treturn b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103466
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  long gcd;\n  // Find the greater common divisor\n  while (true)\
    \ {\n    if ((a & 1) == 0) {\n      return a;\n    }\n    a = a >> 1;\n    if\
    \ (a == 0) {\n      gcd = 1;\n      break;\n    }\n    gcd = b % a;\n    b = a;\n\
    \    a = gcd;\n  }\n  return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmphvzgjj6d: /tmp/tmphvzgjj6d.cpp:28: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103465
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (b == 0) {\n    return a;\n  }\n  long gcd = greatest_common_divisor(b,\
    \ a % b);\n  if (a % gcd == 0) {\n    return gcd;\n  }\n  else {\n    return gcd;\n\
    \  }\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103465
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    else if (a == 0)\n   \
    \     return b;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103465
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return a > b ? b : greatest_common_divisor(b, a % b);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpjuhk4aov: /tmp/tmpjuhk4aov.cpp:13: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103466
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // Only works with positives\n    if (a < b) std::swap(a,\
    \ b);\n    a = abs(a);\n    b = abs(b);\n    // Initialize result to 1 and remainder\
    \ to 0\n    long result = 1;\n    long remainder = 0;\n    // Do while divisors\
    \ are not equal\n    while (b != 0) {\n        // If remainder is not equal to\
    \ 0\n        if (remainder != 0) {\n            // Calculate quotient\n      \
    \      long quotient = a / b;\n            // Check if quotient is greater than\
    \ result\n            if (quotient > result) result = quotient;\n        }\n \
    \       // Add 1 to remainder, i.e. divide a\n        remainder = a % b;\n   \
    \     a = b;\n        b = remainder;\n    }\n    // Return result\n    return\
    \ result;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: Exception
  stderr: 'tmplageonj8: /tmp/tmplageonj8.cpp:35: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103466
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  assert(a >= 1);\n  assert(b > 0 && b > a);\n  long gcd = a;\n\
    \  while (a % b != 0) {\n    gcd = b;\n    b = (b % a) + a;\n  }\n  return gcd;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103470
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (a >= b) {\n    return greatest_common_divisor(b, a % b);\n\
    \  }\n  if (b == 0)\n    return a;\n  return greatest_common_divisor(b, a % b);\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103466
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (a < b) swap(a, b);\n    long t = a;\n    while (t % b\
    \ != 0) t = b; //t should be divisible by b\n    while (t % a != 0) t = a; //\
    \ t should be divisible by a\n    return t;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp15doaaac.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmp15doaaac.cpp:9:16: error: \u2018swap\u2019 was\
    \ not declared in this scope\n    9 |     if (a < b) swap(a, b);\n      |    \
    \            ^~~~\n/tmp/tmp15doaaac.cpp:9:16: note: suggested alternatives:\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp15doaaac.cpp:2:\n/usr/include/c++/9/bits/regex.h:2029:5:\
    \ note:   \u2018std::__cxx11::swap\u2019\n 2029 |     swap(match_results<_Bi_iter,\
    \ _Alloc>& __lhs,\n      |     ^~~~\nIn file included from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp15doaaac.cpp:2:\n/usr/include/c++/9/bits/move.h:182:5:\
    \ note:   \u2018std::swap\u2019\n  182 |     swap(_Tp& __a, _Tp& __b)\n      |\
    \     ^~~~\n/usr/include/c++/9/bits/move.h:182:5: note:   \u2018std::swap\u2019\
    \nIn file included from /usr/include/c++/9/exception:143,\n                 from\
    \ /usr/include/c++/9/ios:39,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp15doaaac.cpp:2:\n/usr/include/c++/9/bits/exception_ptr.h:166:5: note:\
    \   \u2018std::__exception_ptr::swap\u2019\n  166 |     swap(exception_ptr& __lhs,\
    \ exception_ptr& __rhs)\n      |     ^~~~\nIn file included from /usr/include/c++/9/filesystem:37,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:129,\n\
    \                 from /tmp/tmp15doaaac.cpp:2:\n/usr/include/c++/9/bits/fs_path.h:611:15:\
    \ note:   \u2018std::filesystem::__cxx11::swap\u2019\n  611 |   inline void swap"
  stdout: ''
  timestamp: 1660103465
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) return a;\n    return greatest_common_divisor(b,\
    \ (b - a) / b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpez14vd8y: /tmp/tmpez14vd8y.cpp:14: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103466
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n\tif (a < b) std::swap(a, b);\n\twhile (a % b != 0) {\n\t\tlong\
    \ tmp_a = a;\n\t\ta = b;\n\t\tb = tmp_a;\n\t}\n\treturn b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103470
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  // Write your code here\n  long ans = 0;\n  while (b) {\n  \
    \  if (a % b == 0) {\n      ans = b;\n      a /= b;\n    } else {\n      b = 1;\n\
    \    }\n  }\n  return ans;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103470
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long g = a%b;\n    for(long i = b; i; --i)\n        g = g%i;\n\
    \    return g;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpmq9jwby0: /tmp/tmpmq9jwby0.cpp:16: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103466
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  // base case: if the arguments are equal, return zero.\n  if\
    \ (a == b) return 0;\n\n  // otherwise, iterate to find the largest common divisor\n\
    \  // between the two numbers\n  long min_divisor = a;\n  while (min_divisor >\
    \ b) {\n    min_divisor = min_divisor / b;\n  }\n\n  // return the gcd of both\
    \ divisors\n  return min_divisor;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp6kqcee2k: /tmp/tmp6kqcee2k.cpp:24: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103466
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n\tif (b == 0) return a;\n\tif (a == 0) return b;\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103465
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (b == 0) return a;\n  else return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103466
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return (b == 0) ? a : greatest_common_divisor(b, a % b);\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103466
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // write your code here\n    int rem;\n    int div;\n\n  \
    \  if(b == 0)\n        return a;\n    while(a != 0 && b != 0){\n        rem =\
    \ a % b;\n        a = b;\n        b = rem;\n    }\n    if(a==0){\n        div\
    \ = rem;\n    }else{\n        div = b;\n    }\n    return div;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmponn11gkm: /tmp/tmponn11gkm.cpp:29: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103466
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long d = a%b;\n    while (d != 0) {\n        if (b%d == 0)\
    \ {\n            return d;\n        }\n        d -= b;\n    }\n    return b;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103471
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long greatest_common_divisor = a;\n    while (a != 0) {\n\
    \        if (b == 0) return 0;\n        if (a > b) a %= b;\n        else {\n \
    \           b %= a;\n            if (b == 0) return a;\n        }\n    }\n   \
    \ return greatest_common_divisor;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpwaj2ehud: /tmp/tmpwaj2ehud.cpp:22: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103466
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long lcm = 1;\n    for(long i = 3; i <= (a * b) / 2; i = i\
    \ * 2)\n        if((a % i == 0) && (b % i == 0))\n            lcm = i;\n    return\
    \ lcm;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmperoud7xk: /tmp/tmperoud7xk.cpp:18: int main(): Assertion `candidate((10),
    (15)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660103466
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // Write your code here\n    long x = a % b;\n    long y =\
    \ b - x;\n    if (x > 0)\n        return greatest_common_divisor(b, x) % x;\n\
    \    else\n        return greatest_common_divisor(b, x - y) % x;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103466
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if(a == 0) return b;\n    if(b == 0) return a;\n    long mid\
    \ = a / 2;\n    long gcd = (a % b) == 0 ? a : greatest_common_divisor(b,mid);\n\
    \    return mid;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpojebe2h1: /tmp/tmpojebe2h1.cpp:19: int main(): Assertion `candidate((49),
    (14)) == (7)'' failed.

    '
  stdout: ''
  timestamp: 1660103466
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  long gcd;\n  for (; ; ) {\n    if (b & 1) a = (a * a) % b;\n\
    \    else {\n      gcd = (gcd = ((b % a) == 0) ? (a % b) : gcd(b, a % b)) % b;\n\
    \      gcd = (gcd == 0) ? (a < b) ? a : b : gcd;\n    }\n    if (a == b) return\
    \ gcd;\n    a = b % a;\n    b = gcd;\n  }\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptj6c4vl0.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmptj6c4vl0.cpp:13:59: error: \u2018gcd\u2019 cannot\
    \ be used as a function\n   13 |       gcd = (gcd = ((b % a) == 0) ? (a % b) :\
    \ gcd(b, a % b)) % b;\n      |                                               \
    \            ^\n"
  stdout: ''
  timestamp: 1660103465
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b /= a)\n        if (b == 1)\n            return a;\n\
    \    return b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp57hqaywo: /tmp/tmp57hqaywo.cpp:16: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103466
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long result = 0;\n    while(a && b) {\n        if(b % a ==\
    \ 0) {\n            result = a;\n        }\n        a = a / b;\n    }\n    return\
    \ result > 0 ? result : 1;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpjkyt4wzc: /tmp/tmpjkyt4wzc.cpp:21: int main(): Assertion `candidate((10),
    (15)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660103466
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    else if (b == 1)\n   \
    \     return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpqtvq_btd: /tmp/tmpqtvq_btd.cpp:18: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103466
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b) {\n        a = b%a;\n        b /= a;\n    }\n  \
    \  return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103466
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  int gcd = 0;\n  int m;\n  while (b != 0) {\n    m = (int) (b\
    \ / a);\n    gcd++;\n    a = b;\n    b = m;\n  }\n  return gcd;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpdafw4l95: /tmp/tmpdafw4l95.cpp:21: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103466
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return (b == 0) ? a : greatest_common_divisor(b, a % b);\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103466
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n\treturn (a == 0) ? b : greatest_common_divisor(b, a % b);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103466
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (b == 0) return a;\n  long t = greatest_common_divisor(b,\
    \ a % b);\n  return b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmppzot0e53: /tmp/tmppzot0e53.cpp:15: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103466
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long c = greatest_common_divisor(b,\
    \ a % b);\n    return c;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103466
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  assert(a > 0 && b > 0);\n  while (b) {\n    if (a % b == 0)\n\
    \      return b;\n    b = b / 2;\n  }\n  return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpidp_w49_: /tmp/tmpidp_w49_.cpp:19: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103467
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long r;\n    do {\n        r = a % b;\n        a = b;\n  \
    \      b = r;\n    } while (a != 0);\n    return b;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103467
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n\treturn b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103389
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return (b == 0) ? a : greatest_common_divisor(b, a % b);\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103466
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long n = b;\n    while(n != 0) {\n        long temp = n %\
    \ a;\n        a = b;\n        b = temp;\n    }\n    return a;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103467
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b != 0) {\n        long div = a / b;\n        a = b;\n\
    \        b = div;\n    }\n    return a;\n}\nint main() {\n    auto candidate =\
    \ greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmplsb9c002: /tmp/tmplsb9c002.cpp:18: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103468
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long long d = b / a;\n    long long e = b - d * a;\n    while\
    \ (d % 2 == 0 && e % 2 == 0) {\n        d /= 2;\n        e /= 2;\n    }\n    if\
    \ (e == 1) return d;\n    return a + d;\n}\nint main() {\n    auto candidate =\
    \ greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpnrr9h26s: /tmp/tmpnrr9h26s.cpp:20: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103468
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if(a == 0) {\n        return b;\n    }\n    if(b == 0) {\n\
    \        return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103468
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long tmp;\n    while (a && b) {\n        tmp = a%b;\n    \
    \    a = b;\n        b = tmp;\n    }\n    return a != 0 ? b : a;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpq65sx69z: /tmp/tmpq65sx69z.cpp:19: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103468
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  assert(a > 0 && b > 0);\n  long greatest_common_divisor = a\
    \ % b;\n  while(b > 0) {\n    long rem = b % greatest_common_divisor;\n    if\
    \ (rem == 0) return greatest_common_divisor;\n    b = rem;\n    greatest_common_divisor\
    \ = a % b;\n  }\n  return b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103468
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long g = b / greatest_common_divisor(b,\
    \ a % b);\n    return (a / g) * g;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpc_4dbhpo: /tmp/tmpc_4dbhpo.cpp:16: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103468
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // Check for negative numbers\n    if (a < 0 || b < 0) {\n\
    \        cout << \"Both numbers must be non-negative\" << endl;\n        exit(1);\n\
    \    }\n    \n    // If they are equal, return the greater number\n    if (a ==\
    \ b) return b;\n    \n    // Reverse the arguments\n    long d = a;\n    a = b;\n\
    \    b = d;\n    \n    // Reduce the divisors until they are equal\n    while\
    \ (a % b != 0) b--;\n    return b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp56_5yf4d.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmp56_5yf4d.cpp:11:9: error: \u2018cout\u2019 was\
    \ not declared in this scope; did you mean \u2018std::cout\u2019?\n   11 |   \
    \      cout << \"Both numbers must be non-negative\" << endl;\n      |       \
    \  ^~~~\n      |         std::cout\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:75,\n\
    \                 from /tmp/tmp56_5yf4d.cpp:2:\n/usr/include/c++/9/iostream:61:18:\
    \ note: \u2018std::cout\u2019 declared here\n   61 |   extern ostream cout;  ///\
    \ Linked to standard output\n      |                  ^~~~\n/tmp/tmp56_5yf4d.cpp:11:56:\
    \ error: \u2018endl\u2019 was not declared in this scope; did you mean \u2018\
    std::endl\u2019?\n   11 |         cout << \"Both numbers must be non-negative\"\
    \ << endl;\n      |                                                        ^~~~\n\
    \      |                                                        std::endl\nIn\
    \ file included from /usr/include/c++/9/istream:39,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp56_5yf4d.cpp:2:\n/usr/include/c++/9/ostream:599:5:\
    \ note: \u2018std::endl\u2019 declared here\n  599 |     endl(basic_ostream<_CharT,\
    \ _Traits>& __os)\n      |     ^~~~\n"
  stdout: ''
  timestamp: 1660103468
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (a != 0)\n        a = a / b;\n    return b;\n}\nint\
    \ main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpo9zembal: /tmp/tmpo9zembal.cpp:15: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103468
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    assert(b != 0);\n    long r = 1;\n    long max_val = a;\n\
    \    while (a > 0 & b > 0) {\n        if (a & b) r = r * b;\n        a >>= 1;\n\
    \        b >>= 1;\n    }\n    return (r > max_val) ? r : max_val;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpszsuwgg_: /tmp/tmpszsuwgg_.cpp:21: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103468
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd;\n    while (b !=0)\n    {\n        if (a >= b)\n\
    \            gcd = b;\n        else\n            gcd = a;\n        a = a - b;\n\
    \        b = gcd;\n    }\n    return gcd;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103473
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  long greatest = (a > b) ? a : b;\n  while (a % greatest != 0)\
    \ {\n    greatest++;\n  }\n  return greatest;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103473
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long g = a%b;\n    while (b/g != 1) \n        g = b/g;\n \
    \   return b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103473
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  while (b > 0) {\n    long temp = a;\n    a = b;\n    b = temp\
    \ % b;\n  }\n  return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103468
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103403
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // Find the GCD of a and b\n    long gcd = 0;\n    while(b)\
    \ {\n        gcd = a % b;\n        a = b;\n        b = gcd;\n    }\n    return\
    \ gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp49rhc5e6: /tmp/tmp49rhc5e6.cpp:20: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103468
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b != 0) {\n        long m = (a % b), q = a / b;\n \
    \       a = b;\n        b = m;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103468
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long remainder;\n    for (; b > 0; b--) {\n        remainder\
    \ = a % b;\n        a = b;\n        b = remainder;\n    }\n    return a;\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpcf74q7eo: /tmp/tmpcf74q7eo.cpp:19: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103468
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a%b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103468
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (a == 0) return b;\n    if (b == 0) return a;\n    // If\
    \ both a and b are 1, they are equal\n    if (a == 1) return b;\n    if (b ==\
    \ 1) return a;\n    // If both a and b are odd, they are equal\n    if (a & 1)\
    \ return a;\n    if (b & 1) return b;\n\n    // If a = b (this isn't the most\
    \ efficient way, but it's clear and simple)\n    if (a == b) return a;\n\n   \
    \ // We need to find the least common multiple of two numbers,\n    // the least\
    \ common multiple of the lesser number.\n\n    // a = b OR c = a\n    // a = b\
    \ AND c = a\n    if (a & b) return greatest_common_divisor(b, a % b);\n    if\
    \ (a & c) return greatest_common_divisor(b, a % c);\n\n    // If a = b or b =\
    \ c\n    if (a == b) return greatest_common_divisor(c, a);\n    return greatest_common_divisor(c,\
    \ b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfp8_96gt.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmpfp8_96gt.cpp:27:13: error: \u2018c\u2019 was\
    \ not declared in this scope\n   27 |     if (a & c) return greatest_common_divisor(b,\
    \ a % c);\n      |             ^\n/tmp/tmpfp8_96gt.cpp:30:48: error: \u2018c\u2019\
    \ was not declared in this scope\n   30 |     if (a == b) return greatest_common_divisor(c,\
    \ a);\n      |                                                ^\n/tmp/tmpfp8_96gt.cpp:31:36:\
    \ error: \u2018c\u2019 was not declared in this scope\n   31 |     return greatest_common_divisor(c,\
    \ b);\n      |                                    ^\n"
  stdout: ''
  timestamp: 1660103467
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return (b == 0) ? (a == 0 ? 1 : b) : (greatest_common_divisor(b,\
    \ a % b));\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n \
    \   assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: Exception
  stderr: 'tmpuj_dthil: /tmp/tmpuj_dthil.cpp:13: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103468
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103468
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n\tlong n = a;\n\tlong d = b;\n\twhile (d != 0) {\n\t\td = (d %\
    \ n);\n\t\tn = d;\n\t}\n\treturn n;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp154gwbae: /tmp/tmp154gwbae.cpp:19: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103468
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if(b == 0) return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103468
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103381
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long greatest_common_divisor = 1;\n    while (a != 0) {\n\
    \        long temp = a % b;\n        a = b;\n        b = temp;\n        greatest_common_divisor\
    \ *= b;\n    }\n    return greatest_common_divisor;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103469
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103468
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // Write your code here\n    return 0;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpgwybwuub: /tmp/tmpgwybwuub.cpp:14: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103469
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b != 0) {\n        long t = a;\n        a = b;\n  \
    \      b = t;\n    }\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103473
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) return a;\n    long res = a;\n    while (b !=\
    \ 0) {\n        res = (a % b) + b;\n        a = b;\n        b = res;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103473
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // if (b == 0)\n    // \treturn a;\n    // if (a == 0)\n \
    \   // \treturn b;\n    if (b == 0)\n        return a;\n    if (a == 0)\n    \
    \    return b;\n\n    long a = abs(a);\n    long b = abs(b);\n\n    while (a !=\
    \ b) {\n        if (a > b)\n            a -= b;\n        else\n            b -=\
    \ a;\n    }\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplg2q_jpe.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmplg2q_jpe.cpp:18:10: error: declaration of \u2018\
    long int a\u2019 shadows a parameter\n   18 |     long a = abs(a);\n      |  \
    \        ^\n/tmp/tmplg2q_jpe.cpp:19:10: error: declaration of \u2018long int b\u2019\
    \ shadows a parameter\n   19 |     long b = abs(b);\n      |          ^\n"
  stdout: ''
  timestamp: 1660103468
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long m = a % b;\n    return\
    \ greatest_common_divisor(b, m) % m;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103469
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // Write your code here\n    // return ((a % b) == 0) ? a\
    \ : b;\n    int rem;\n    while (b != 0) {\n        rem = a % b;\n        a =\
    \ b;\n        b = rem;\n    }\n    return a;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103469
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    long r = greatest_common_divisor(b,\
    \ a % b);\n    return r == 0 ? b : r;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103468
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  // assert (a > 0 && b > 0 && a >= b)\n  if (b == 0) return a;\n\
    \  if (b > a) return greatest_common_divisor(b, a % b);\n  return greatest_common_divisor(a,\
    \ b % a);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103469
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103403
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  // Assume no remainder\n  // NOTE: This can be optimised for\
    \ speed by calculating gcd at the end\n  if (a == 0 || b == 0) {\n    return 0;\n\
    \  }\n  long r = a % b;\n  if (r == 0) {\n    return b;\n  } else {\n    return\
    \ greatest_common_divisor(b, r);\n  }\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103468
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (b == 0) return a;\n  return greatest_common_divisor(b, a\
    \ % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103465
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b != 0) {\n        if ((a % b) == 0)\n            return\
    \ b;\n        b /= 2;\n    }\n    return 1;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpgm0yfcji: /tmp/tmpgm0yfcji.cpp:18: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103469
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // If `a` and `b` are the same or negative, return `a`.\n\
    \    if (a == 0 || b == 0) {\n        return a;\n    }\n    // Initialize greatest\
    \ common divisor to the largest of the two.\n    long greatest_common_divisor\
    \ = a > b ? a : b;\n    // Repeatedly multiply `greatest_common_divisor` by 2\
    \ until the remainder is less than or equal to `a`.\n    while (greatest_common_divisor\
    \ % a == 0) {\n        greatest_common_divisor *= 2;\n    }\n    return greatest_common_divisor;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmprifa5g93: /tmp/tmprifa5g93.cpp:23: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103469
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103381
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n\tif (b == 0)\n\t\treturn a;\n\tlong gcd = greatest_common_divisor(b,\
    \ a % b);\n\treturn a / gcd % b;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long d = b, b0 = a % b, r0 = b;\n    while (r0 != 0) {\n \
    \       r = a % r0;\n        a = r0;\n        r0 = r;\n    }\n    return a;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps2mpaqjb.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmps2mpaqjb.cpp:11:9: error: \u2018r\u2019 was not\
    \ declared in this scope; did you mean \u2018r0\u2019?\n   11 |         r = a\
    \ % r0;\n      |         ^\n      |         r0\n"
  stdout: ''
  timestamp: 1660103469
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  assert(b > 0);\n  if (a == 0)\n    return b;\n  long d = b;\n\
    \  while (a % d == 0)\n    d /= a;\n  while (d % a == 0)\n    a /= d;\n  return\
    \ a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpfxzh0st7: /tmp/tmpfxzh0st7.cpp:21: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103469
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (b == 0) {\n    return a;\n  }\n  long r = a % b;\n  if (r\
    \ == 0) {\n    return b;\n  }\n  return greatest_common_divisor(b, r);\n}\nint\
    \ main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103469
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long temp;\n    long gcd = 1;\n    temp = a % b;\n    while\
    \ (temp != 0) {\n        gcd = temp;\n        temp = a % b;\n    }\n    return\
    \ gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103474
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long result = 0;\n    while (a != 0) {\n        if (b % a\
    \ == 0) {\n            return result;\n        }\n        ++result;\n        b\
    \ /= a;\n    }\n    return result;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpgjnzc636: /tmp/tmpgjnzc636.cpp:21: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103470
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // Write your code here\n    if (a%b==0) {\n        return\
    \ b;\n    }\n    else {\n        return greatest_common_divisor(b,a%b);\n    }\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103470
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  long t;\n  while (b != 0)\n    t = b, b = a % b, a = t;\n  return\
    \ a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103470
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n\tif (b == 0) {\n\t\treturn a;\n\t} else {\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n\t}\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103470
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  assert(a >= b);\n  long c = 0; // c is greatest common divisor\
    \ of 2a & 2b\n  while (a && b) { \n    if (a % b != 0) {\n      c += b;\n    \
    \  a = a / b;\n    }\n    else {\n      b = (b / 2);\n    }\n  }\n  return c;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpnt1q37oh: /tmp/tmpnt1q37oh.cpp:9: long int greatest_common_divisor(long
    int, long int): Assertion `a >= b'' failed.

    '
  stdout: ''
  timestamp: 1660103471
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long max;\n    while (a > b) {\n        max = a;\n       \
    \ a = max % b;\n        b = max;\n    }\n    while (a < b) {\n        max = b;\n\
    \        b = max % a;\n        a = max;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpzutgrtbb: /tmp/tmpzutgrtbb.cpp:26: int main(): Assertion `candidate((49),
    (14)) == (7)'' failed.

    '
  stdout: ''
  timestamp: 1660103470
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n\treturn (b == 0) ? a : greatest_common_divisor(b, a%b);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103470
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  long gcf = a, b;\n  while (gcf >= b) {\n    gcf -= b;\n  }\n\
    \  return gcf;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiww1qcfn.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmpiww1qcfn.cpp:9:17: error: declaration of \u2018\
    long int b\u2019 shadows a parameter\n    9 |   long gcf = a, b;\n      |    \
    \             ^\n"
  stdout: ''
  timestamp: 1660103470
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103403
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // If b = 0 then gcd = a\n    if (b == 0) {\n        return\
    \ a;\n    }\n    // Initialize greatest common divisor of 2 numbers to 1\n   \
    \ long greatest_common_divisor = 1;\n    // Divide both numbers and keep dividing\
    \ till one of the numbers becomes 1\n    long div, tmp;\n    long remainder;\n\
    \    while (a != 0) {\n        tmp = a;\n        remainder = b % tmp;\n      \
    \  b = tmp;\n        a = remainder;\n        div = remainder / a;\n        greatest_common_divisor\
    \ = div > greatest_common_divisor ? div : greatest_common_divisor;\n    }\n  \
    \  return greatest_common_divisor;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103470
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b != 0) {\n        long remainder = a % b;\n      \
    \  a = b;\n        b = remainder;\n    }\n    return a;\n}\nint main() {\n   \
    \ auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) ==\
    \ (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103470
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b > 0) {\n        return greatest_common_divisor(b, a\
    \ % b);\n    }\n    if (a < 0) {\n        return greatest_common_divisor(b, a\
    \ + 1);\n    }\n    return a;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103470
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (a == 0)\n    return b;\n  if (b == 0)\n    return a;\n \
    \ if (a < b)\n    swap(a, b);\n  long g = a % b;\n  while (a != b) {\n    a =\
    \ b;\n    b = g;\n    g = a % b;\n  }\n  return b;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_177p6h7.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmp_177p6h7.cpp:14:5: error: \u2018swap\u2019 was\
    \ not declared in this scope\n   14 |     swap(a, b);\n      |     ^~~~\n/tmp/tmp_177p6h7.cpp:14:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp_177p6h7.cpp:2:\n/usr/include/c++/9/bits/regex.h:2029:5:\
    \ note:   \u2018std::__cxx11::swap\u2019\n 2029 |     swap(match_results<_Bi_iter,\
    \ _Alloc>& __lhs,\n      |     ^~~~\nIn file included from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp_177p6h7.cpp:2:\n/usr/include/c++/9/bits/move.h:182:5:\
    \ note:   \u2018std::swap\u2019\n  182 |     swap(_Tp& __a, _Tp& __b)\n      |\
    \     ^~~~\n/usr/include/c++/9/bits/move.h:182:5: note:   \u2018std::swap\u2019\
    \nIn file included from /usr/include/c++/9/exception:143,\n                 from\
    \ /usr/include/c++/9/ios:39,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp_177p6h7.cpp:2:\n/usr/include/c++/9/bits/exception_ptr.h:166:5: note:\
    \   \u2018std::__exception_ptr::swap\u2019\n  166 |     swap(exception_ptr& __lhs,\
    \ exception_ptr& __rhs)\n      |     ^~~~\nIn file included from /usr/include/c++/9/filesystem:37,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:129,\n\
    \                 from /tmp/tmp_177p6h7.cpp:2:\n/usr/include/c++/9/bits/fs_path.h:611:15:\
    \ note:   \u2018std::filesystem::__cxx11::swap\u2019\n  611 |   inline void swap(path&\
    \ __lhs, path& __"
  stdout: ''
  timestamp: 1660103470
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd(a, b);\n    while (a != 0) {\n        gcd = (a %\
    \ b) > 0 ? a : b;\n        a = (a % b) > 0 ? b : a;\n    }\n    return gcd;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjv9xyj6f.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmpjv9xyj6f.cpp:9:18: error: expression list treated\
    \ as compound expression in initializer [-fpermissive]\n    9 |     long gcd(a,\
    \ b);\n      |                  ^\n"
  stdout: ''
  timestamp: 1660103470
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return\
    \ a;\n    if (a > b)\n        return greatest_common_divisor(b, a);\n    long\
    \ gcd = 1;\n    long temp = a % b;\n    while (temp != 0) {\n        gcd = b *\
    \ gcd + temp;\n        temp = a % b;\n    }\n    return gcd;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103475
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (b == 0)\n    return a;\n  long greatest = a % b;\n  long\
    \ remainder = a % b;\n  while (1) {\n    long temp = greatest;\n    greatest =\
    \ (b / remainder) % b;\n    if (greatest == 0)\n      break;\n    remainder =\
    \ temp % b;\n  }\n  return greatest;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103475
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  assert((b > 0) && (a > 0) && (b > a));\n  long r = 0; // Initialize\
    \ r with greatest common divisor of |a| and |b|\n  while (a > 1) { //loop until\
    \ a reaches 1\n    if (b % a == 0) { //if a is a factor of b\n      r = a; //assign\
    \ a to r\n      a = a / b; //remove a from a, so b only gets smaller by 1 each\
    \ time\n      b = b / a; //remove b from b (b = b // a), so a only gets smaller\
    \ by 1 each time\n    } //if a is not a factor of b\n    else {\n      a = a /\
    \ b; //remove a from a\n      b = b / a; //remove b from b\n    } //if a reaches\
    \ 1 because either a or b has reached 1, loop back\n  } //until a reaches 1\n\
    \  return r; //return r\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103471
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n\t// Base case: a == 0\n\tif (b == 0)\n\t\treturn a;\n\t// Recursive\
    \ case: b is 1 or greater\n\telse if (b > 0) {\n\t\t// Recursive case: b is 2\
    \ or greater\n\t\tlong temp=greatest_common_divisor(b-a,b);\n\t\t// Compute the\
    \ gcd of a and b\n\t\treturn temp==b?a:temp;\n\t}\n\telse\n\t\t// Base case: a\
    \ is 1\n\t\treturn 1;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103470
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n\tif (b == 0) return a;\n\treturn greatest_common_divisor(b, a\
    \ % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103470
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long remainder;\n    do {\n        remainder = b%a;\n    \
    \    a = b;\n        b = remainder;\n    } while(a != 1);\n    return b;\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103471
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  long x = 0;\n  while (a != 0) {\n    long r = a % b;\n    x\
    \ = r > x ? r : x;\n    a = b;\n    b = x;\n  }\n  return b;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103476
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long greatest_divisor = 1;\n    while (b > 0) {\n        if\
    \ (a % b == 0)\n            greatest_divisor = b;\n        b--;\n    }\n    return\
    \ greatest_divisor;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp008f2gfu: /tmp/tmp008f2gfu.cpp:20: int main(): Assertion `candidate((10),
    (15)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660103471
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (a < b) swap(a, b);\n    if (b == 0) return a;\n    long\
    \ long a = abs(a);\n    long long b = abs(b);\n    while (true) {\n        if\
    \ (a >= b) break;\n        if (b == 0) return a;\n        long long c = a % b;\n\
    \        a = b;\n        b = c;\n    }\n    return b;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3ifwalcc.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmp3ifwalcc.cpp:9:16: error: \u2018swap\u2019 was\
    \ not declared in this scope\n    9 |     if (a < b) swap(a, b);\n      |    \
    \            ^~~~\n/tmp/tmp3ifwalcc.cpp:9:16: note: suggested alternatives:\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp3ifwalcc.cpp:2:\n/usr/include/c++/9/bits/regex.h:2029:5:\
    \ note:   \u2018std::__cxx11::swap\u2019\n 2029 |     swap(match_results<_Bi_iter,\
    \ _Alloc>& __lhs,\n      |     ^~~~\nIn file included from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp3ifwalcc.cpp:2:\n/usr/include/c++/9/bits/move.h:182:5:\
    \ note:   \u2018std::swap\u2019\n  182 |     swap(_Tp& __a, _Tp& __b)\n      |\
    \     ^~~~\n/usr/include/c++/9/bits/move.h:182:5: note:   \u2018std::swap\u2019\
    \nIn file included from /usr/include/c++/9/exception:143,\n                 from\
    \ /usr/include/c++/9/ios:39,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp3ifwalcc.cpp:2:\n/usr/include/c++/9/bits/exception_ptr.h:166:5: note:\
    \   \u2018std::__exception_ptr::swap\u2019\n  166 |     swap(exception_ptr& __lhs,\
    \ exception_ptr& __rhs)\n      |     ^~~~\nIn file included from /usr/include/c++/9/filesystem:37,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:129,\n\
    \                 from /tmp/tmp3ifwalcc.cpp:2:\n/usr/include/c++/9/bits/fs_path.h:611:15:\
    \ note:   \u2018std::filesystem::__cxx11::swap\u2019\n  611 |   inline void swap"
  stdout: ''
  timestamp: 1660103471
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103463
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b > 0) {\n        long temp = a % b;\n        a = b;\n\
    \        b = temp;\n    }\n    return a;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103471
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 1;\n    while (a != 0) {\n        if (a > b)\n\
    \            a /= b;\n        else\n            b /= a;\n        gcd = b > gcd?\
    \ b : gcd;\n    }\n    return gcd;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103476
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd;\n    while (a != 0) {\n        gcd = (a%b);\n  \
    \      a = b;\n        b = gcd;\n    }\n    return b;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660103471
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if(a == 0) return b;\n    if(a == 1) return b;\n    if(b ==\
    \ 0) return a;\n    if(b == 1) return a;\n    // Initialize m and n and gcd\n\
    \    long m = 0, n = a, g = a;\n    while(g != 0) {\n        if(n % g == 0) n\
    \ = n/g;\n        else m = m*g + 1;\n        g = g/g;\n    }\n    // Check for\
    \ greatest common divisor\n    long res = n;\n    while(m != 0) {\n        if(m\
    \ % n == 0) res = res*n + m;\n        m = m/n;\n    }\n    return res;\n}\nint\
    \ main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103476
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (b == 0)\n    return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103471
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (b == 0) return a;\n  if (a == 0) return b;\n  if (a < b)\
    \ std::swap(a, b);\n  if (a % b == 0) return b;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103471
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // code goes here\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp9v9z12w5: /tmp/tmp9v9z12w5.cpp:13: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103471
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long gcd = 0;\n    while (a % b != 0)\n    {\n        a =\
    \ a % b;\n        gcd++;\n    }\n    return gcd;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103476
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b > 0) {\n        if (a % b == 0) {\n            return\
    \ b;\n        }\n        ++b;\n    }\n    return a;\n}\nint main() {\n    auto\
    \ candidate = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n\
    \    assert(candidate((10), (15)) == (5));\n    assert(candidate((49), (14)) ==\
    \ (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103476
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // Write your code here\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp9884871k: /tmp/tmp9884871k.cpp:13: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103471
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  long long int r1, r2, rm, r;\n\n  r1 = a%b;\n  r2 = b%r1;\n\
    \  rm = r1%r2;\n  if(rm==0) return r1;\n  else return r2;\n}\nint main() {\n \
    \   auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpsit0f8k7: /tmp/tmpsit0f8k7.cpp:19: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103471
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103403
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long a = abs(a), b = abs(b);\n    long max_num = a > b ? a\
    \ : b;\n    long min_num = b > a ? b : a;\n    long gcd = 1;\n    long gcd2 =\
    \ 1;\n    long gcd3 = (max_num == min_num ? 1 : max_num);\n    long p = 1;\n \
    \   long q = max_num;\n    while(1) {\n        if(q % 2 == 1)\n            q =\
    \ (q / 2);\n        else\n            break;\n        gcd = gcd(gcd, q);\n   \
    \     p <<= 1;\n    }\n    while(1) {\n        if(p % 2 == 1)\n            p =\
    \ (p / 2);\n        else\n            break;\n        gcd = gcd(gcd, p);\n   \
    \     q >>= 1;\n    }\n    return gcd;\n}\nint main() {\n    auto candidate =\
    \ greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzty4o4rs.cpp: In function \u2018long int greatest_common_divisor(long\
    \ int, long int)\u2019:\n/tmp/tmpzty4o4rs.cpp:9:10: error: declaration of \u2018\
    long int a\u2019 shadows a parameter\n    9 |     long a = abs(a), b = abs(b);\n\
    \      |          ^\n/tmp/tmpzty4o4rs.cpp:9:22: error: declaration of \u2018long\
    \ int b\u2019 shadows a parameter\n    9 |     long a = abs(a), b = abs(b);\n\
    \      |                      ^\n/tmp/tmpzty4o4rs.cpp:22:25: error: \u2018gcd\u2019\
    \ cannot be used as a function\n   22 |         gcd = gcd(gcd, q);\n      |  \
    \                       ^\n/tmp/tmpzty4o4rs.cpp:30:25: error: \u2018gcd\u2019\
    \ cannot be used as a function\n   30 |         gcd = gcd(gcd, p);\n      |  \
    \                       ^\n"
  stdout: ''
  timestamp: 1660103471
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  long c;\n  while(a && b) {\n    c = (a%b); a = b;\n    b = c;\n\
    \  }\n  return c;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpyy1iwjp3: /tmp/tmpyy1iwjp3.cpp:18: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103471
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b != 0) {\n        long long mod = a % b;\n       \
    \ a = b;\n        b = mod;\n    }\n    return a;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103471
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return (b == 0) ? a : greatest_common_divisor(b, a % b);\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103466
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103381
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  if (a == 0 && b == 0) {\n    return 1;\n  }\n  long greatest\
    \ = a;\n  while (a % b != 0) {\n    greatest = b;\n    b--;\n  }\n  while (b %\
    \ a != 0) {\n    a = b;\n    b--;\n  }\n  return greatest;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmptznur8ja: /tmp/tmptznur8ja.cpp:25: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103472
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    if (a == 0)\n        return\
    \ b;\n    long r = a % b;\n    if (r != 0)\n        return greatest_common_divisor(b,\
    \ r);\n    else\n        return greatest_common_divisor(a, b - 1);\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpwbpo6hzz: /tmp/tmpwbpo6hzz.cpp:21: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103472
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    assert(b != 0);\n    while (b > 0) {\n        if (a % b ==\
    \ 0) {\n            return b;\n        }\n        a /= b;\n    }\n    return a;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpfzqgmf6a: /tmp/tmpfzqgmf6a.cpp:20: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103472
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n\tif (a == 0) return b;\n\tlong q = a / b;\n\ta = a % b;\n\tb\
    \ = b;\n\tif (a == 0) return b;\n\tif (b == 0) return q;\n\tlong g = greatest_common_divisor(b,\
    \ a % b);\n\treturn g * q;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpb9c2tvve: /tmp/tmpb9c2tvve.cpp:20: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103472
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (a < b) return greatest_common_divisor(b, a % b);\n   \
    \ if (a == 0) return 0;\n    if (b == 0) return a;\n    long c;\n    while (1)\
    \ {\n        c = (a * b) % b;\n        if (c <= a) return c;\n        a = b;\n\
    \        b = c;\n    }\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmp5_abm2f0: /tmp/tmp5_abm2f0.cpp:22: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103472
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    // Write your code here\n    return 0L;\n}\nint main() {\n\
    \    auto candidate = greatest_common_divisor;\n    assert(candidate((3), (7))\
    \ == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpil6l7ia1: /tmp/tmpil6l7ia1.cpp:14: int main(): Assertion `candidate((3),
    (7)) == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660103472
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (b) {\n        long temp = a % b;\n        a = b;\n\
    \        b = temp;\n    }\n    return a;\n}\nint main() {\n    auto candidate\
    \ = greatest_common_divisor;\n    assert(candidate((3), (7)) == (1));\n    assert(candidate((10),\
    \ (15)) == (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103472
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n  \
    \  assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n\
    \    assert(candidate((49), (14)) == (7));\n    assert(candidate((144), (60))\
    \ == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103403
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long p = 1;\n    long q = a / b;\n    a = a % b;\n    while\
    \ (a != 0) {\n        p = p * q;\n        a = a % b;\n    }\n    return p;\n}\n\
    int main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103477
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    long div = a / b;\n    long mod = a % b;\n    while (mod !=\
    \ 0) {\n        if (div > b) return b;\n        div = b;\n        mod = a % b;\n\
    \    }\n    return div;\n}\nint main() {\n    auto candidate = greatest_common_divisor;\n\
    \    assert(candidate((3), (7)) == (1));\n    assert(candidate((10), (15)) ==\
    \ (5));\n    assert(candidate((49), (14)) == (7));\n    assert(candidate((144),\
    \ (60)) == (12));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660103477
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n    while (a > 0 && b > 0) {\n        if (a > b) {\n         \
    \   a = a - b;\n        } else if (b > a) {\n            b = b - a;\n        }\
    \ else {\n            return b;\n        }\n    }\n    return 1;\n}\nint main()\
    \ {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660103472
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
    \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n\
    // (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
    \ a, long b) {\n  assert(b);\n  assert(a);\n  long reminder, reminder_prev;\n\
    \  long common_divisor = 1;\n  long lcm = (a * b);\n  long greatest_common_divisor\
    \ = 1;\n\n  while (true) {\n    reminder = lcm/common_divisor;\n    reminder_prev\
    \ = lcm%common_divisor;\n    if (reminder_prev != 0) {\n      common_divisor++;\n\
    \    } else {\n      greatest_common_divisor = common_divisor;\n      lcm = common_divisor\
    \ * reminder;\n      break;\n    }\n  }\n\n  return greatest_common_divisor;\n\
    }\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
    \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
    \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
  status: Exception
  stderr: 'tmpusdw09wu: /tmp/tmpusdw09wu.cpp:33: int main(): Assertion `candidate((10),
    (15)) == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660103472

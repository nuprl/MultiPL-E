name: HumanEval_23_strlen
language: humaneval_to_typescript.py
prompt: "//Return length of given string\n// >>> strlen('')\n// 0\n// >>> strlen('abc')\n\
  // 3\nfunction strlen(string: string): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n\
  \  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"\
  ),9);\n}\n\ntest();"
completions: ["  return string.length;\n}\n", "    return string.length;\n}\n", " \
    \   return string.length;\n}\n", "  return string.length;\n}\n", "    return string.length;\n\
    }\n", "  return string.length;\n}\n", "    return string.length;\n}\n", "    return\
    \ string.length;\n}\n", "  return string.length;\n}\n", "    return string.length;\n\
    }\n", "    return string.length;\n}\n", "    return string.length;\n}\n", "  return\
    \ string.length;\n}\n", "  return string.length;\n}\n", "  return string.length;\n\
    }\n", "    return string.length;\n}\n", "    return string.length;\n}\n", "  \
    \  let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        count++;\n\
    \    }\n    return count;\n}\n", "    return string.length;\n}\n", "    return\
    \ string.length;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

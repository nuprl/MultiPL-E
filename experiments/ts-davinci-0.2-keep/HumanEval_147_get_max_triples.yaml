completions:
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));\n\
  console.log(get_max_triples(15));\nconsole.log(get_max_triples(20));\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));\n\
  console.log(get_max_triples(15));\nconsole.log(get_max_triples(20));\nconsole.log(get_max_triples(25));\n\
  console.log(get_max_triples(30));\nconsole.log(get_max_triples(35));\nconsole.log(get_max_triples(40));\n\
  console.log(get_max_triples(45));\nconsole.log(get_max_triples(50));"
- "    let result = 0;\n    let arr = [];\n    for (let i = 1; i <= n; i++) {\n  \
  \      arr.push(i * i - i + 1);\n    }\n    for (let i = 0; i < arr.length; i++)\
  \ {\n        for (let j = i + 1; j < arr.length; j++) {\n            for (let k\
  \ = j + 1; k < arr.length; k++) {\n                if ((arr[i] + arr[j] + arr[k])\
  \ % 3 === 0) {\n                    result++;\n                }\n            }\n\
  \        }\n    }\n    return result;\n}\n"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let result = 0;\n    let arr = [];\n    for (let i = 1; i <= n; i++) {\n  \
  \      arr.push(i * i - i + 1);\n    }\n    for (let i = 0; i < arr.length; i++)\
  \ {\n        for (let j = i + 1; j < arr.length; j++) {\n            for (let k\
  \ = j + 1; k < arr.length; k++) {\n                if ((arr[i] + arr[j] + arr[k])\
  \ % 3 === 0) {\n                    result++;\n                }\n            }\n\
  \        }\n    }\n    return result;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));\n\
  console.log(get_max_triples(15));\nconsole.log(get_max_triples(20));\nconsole.log(get_max_triples(25));\n\
  console.log(get_max_triples(30));\nconsole.log(get_max_triples(35));\nconsole.log(get_max_triples(40));\n\
  console.log(get_max_triples(45));\nconsole.log(get_max_triples(50));\nconsole.log(get_max_triples(55));\n\
  console.log(get_max_triples(60));\nconsole.log(get_max_triples(65));\nconsole.log(get_max_triples(70));\n\
  console.log(get_max_triples(75));\nconsole.log(get_max_triples(80));\nconsole.log(get_max_triples(85));\n\
  console.log(get_max_triples(90));\nconsole.log(get_max_triples(95));\nconsole.log(get_max_triples(100));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let arr = [];\n    for (let i = 1; i <= n; i++) {\n        arr.push(i * i -\
  \ i + 1);\n    }\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n\
  \        for (let j = i + 1; j < arr.length; j++) {\n            for (let k = j\
  \ + 1; k < arr.length; k++) {\n                if ((arr[i] + arr[j] + arr[k]) %\
  \ 3 === 0) {\n                    count++;\n                }\n            }\n \
  \       }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let count = 0;\n    for (let i = 1; i < n - 1; i++) {\n        for (let j =\
  \ i + 1; j < n; j++) {\n            for (let k = j + 1; k <= n; k++) {\n       \
  \         if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 === 0) {\n   \
  \                 count++;\n                }\n            }\n        }\n    }\n\
  \    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));\n\
  console.log(get_max_triples(100));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(6));\n\
  console.log(get_max_triples(7));\nconsole.log(get_max_triples(8));\nconsole.log(get_max_triples(9));\n\
  console.log(get_max_triples(10));\nconsole.log(get_max_triples(11));\nconsole.log(get_max_triples(12));\n\
  console.log(get_max_triples(13));\nconsole.log(get_max_triples(14));\nconsole.log(get_max_triples(15));\n\
  console.log(get_max_triples(16));\nconsole.log(get_max_triples(17));\nconsole.log(get_max_triples(18));\n\
  console.log(get_max_triples(19));\nconsole.log(get_max_triples(20));\nconsole.log(get_max_triples(21));\n\
  console.log(get_max_triples(22));\nconsole.log(get_max_triples(23));\nconsole.log(get_max_triples(24));\n\
  console.log(get_max_triples(25));\nconsole.log(get_max_triples(26));\nconsole.log(get_max_triples(27));\n\
  console.log(get_max_triples(28));\nconsole.log(get_max_triples(29));\nconsole.log(get"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let count = 0;\n    for (let i = 1; i < n - 1; i++) {\n        for (let j =\
  \ i + 1; j < n; j++) {\n            for (let k = j + 1; k <= n; k++) {\n       \
  \         if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 === 0) {\n   \
  \                 count++;\n                }\n            }\n        }\n    }\n\
  \    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(100));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(6));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));\n\
  console.log(get_max_triples(15));\nconsole.log(get_max_triples(20));\nconsole.log(get_max_triples(25));\n\
  console.log(get_max_triples(30));\nconsole.log(get_max_triples(35));\nconsole.log(get_max_triples(40));\n\
  console.log(get_max_triples(45));\nconsole.log(get_max_triples(50));\nconsole.log(get_max_triples(55));\n\
  console.log(get_max_triples(60));\nconsole.log(get_max_triples(65));\nconsole.log(get_max_triples(70));\n\
  console.log(get_max_triples(75));\nconsole.log(get_max_triples(80));\nconsole.log(get_max_triples(85));\n\
  console.log(get_max_triples(90));\nconsole.log(get_max_triples(95));\nconsole.log(get_max_triples(100));\n\
  console.log(get_max_triples(105));\nconsole.log(get_max_triples(110));\nconsole.log(get_max_triples(115));\n\
  console.log(get_max_triples(120));\nconsole.log(get_max_triples(125));\nconsole.log(get"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = new Array(n);\n    let count: number = 0;\n    for (let i\
  \ = 0; i < n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    for (let i = 0;\
  \ i < n - 2; i++) {\n        for (let j = i + 1; j < n - 1; j++) {\n           \
  \ for (let k = j + 1; k < n; k++) {\n                if ((a[i] + a[j] + a[k]) %\
  \ 3 === 0) {\n                    count++;\n                }\n            }\n \
  \       }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));\n\
  console.log(get_max_triples(15));\nconsole.log(get_max_triples(20));\nconsole.log(get_max_triples(25));\n\
  console.log(get_max_triples(30));\nconsole.log(get_max_triples(35));\nconsole.log(get_max_triples(40));\n\
  console.log(get_max_triples(45));\nconsole.log(get_max_triples(50));\nconsole.log(get_max_triples(55));\n\
  console.log(get_max_triples(60));\nconsole.log(get_max_triples(65));\nconsole.log(get_max_triples(70));\n\
  console.log(get_max_triples(75));\nconsole.log(get_max_triples(80));\nconsole.log(get_max_triples(85));\n\
  console.log(get_max_triples(90));\nconsole.log(get_max_triples(95));\nconsole.log(get_max_triples(100));\n\
  console.log(get_max_triples(105));\nconsole.log(get_max_triples(110));\nconsole.log(get_max_triples(115));\n\
  console.log(get_max_triples(120));\nconsole.log(get_max_triples(125));\nconsole.log(get"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let arr = [];\n    for (let i = 1; i <= n; i++) {\n        arr.push(i * i -\
  \ i + 1);\n    }\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n\
  \        for (let j = i + 1; j < arr.length; j++) {\n            for (let k = j\
  \ + 1; k < arr.length; k++) {\n                if ((arr[i] + arr[j] + arr[k]) %\
  \ 3 === 0) {\n                    count++;\n                }\n            }\n \
  \       }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let count = 0;\n    let a = [];\n    for (let i = 1; i <= n; i++) {\n     \
  \   a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length; i++) {\n  \
  \      for (let j = i + 1; j < a.length; j++) {\n            for (let k = j + 1;\
  \ k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3 === 0) {\n\
  \                    count++;\n                }\n            }\n        }\n   \
  \ }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(6));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));\n\
  console.log(get_max_triples(20));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let count = 0;\n    for (let i = 1; i < n; i++) {\n        for (let j = i +\
  \ 1; j < n; j++) {\n            for (let k = j + 1; k < n; k++) {\n            \
  \    if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 === 0) {\n        \
  \            count++;\n                }\n            }\n        }\n    }\n    return\
  \ count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(6));\n\
  console.log(get_max_triples(7));\nconsole.log(get_max_triples(8));\nconsole.log(get_max_triples(9));\n\
  console.log(get_max_triples(10));\nconsole.log(get_max_triples(11));\nconsole.log(get_max_triples(12));\n\
  console.log(get_max_triples(13));\nconsole.log(get_max_triples(14));\nconsole.log(get_max_triples(15));\n\
  console.log(get_max_triples(16));\nconsole.log(get_max_triples(17));\nconsole.log(get_max_triples(18));\n\
  console.log(get_max_triples(19));\nconsole.log(get_max_triples(20));\nconsole.log(get_max_triples(21));\n\
  console.log(get_max_triples(22));\nconsole.log(get_max_triples(23));\nconsole.log(get_max_triples(24));\n\
  console.log(get_max_triples(25));\nconsole.log(get_max_triples(26));\nconsole.log(get_max_triples(27));\n\
  console.log(get_max_triples(28));\nconsole.log(get_max_triples(29));\nconsole.log(get"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let count = 0;\n    for (let i = 1; i < n - 1; i++) {\n        for (let j =\
  \ i + 1; j < n; j++) {\n            for (let k = j + 1; k <= n; k++) {\n       \
  \         if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 === 0) {\n   \
  \                 count++;\n                }\n            }\n        }\n    }\n\
  \    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(6));\n\
  console.log(get_max_triples(7));\nconsole.log(get_max_triples(8));\nconsole.log(get_max_triples(9));\n\
  console.log(get_max_triples(10));\nconsole.log(get_max_triples(11));\nconsole.log(get_max_triples(12));\n\
  console.log(get_max_triples(13));\nconsole.log(get_max_triples(14));\nconsole.log(get_max_triples(15));\n\
  console.log(get_max_triples(16));\nconsole.log(get_max_triples(17));\nconsole.log(get_max_triples(18));\n\
  console.log(get_max_triples(19));\nconsole.log(get_max_triples(20));\nconsole.log(get_max_triples(21));\n\
  console.log(get_max_triples(22));\nconsole.log(get_max_triples(23));\nconsole.log(get_max_triples(24));\n\
  console.log(get_max_triples(25));\nconsole.log(get_max_triples(26));\nconsole.log(get_max_triples(27));\n\
  console.log(get_max_triples(28));\nconsole.log(get_max_triples(29));\nconsole.log(get"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));\n\
  console.log(get_max_triples(100));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));\n\
  console.log(get_max_triples(15));\nconsole.log(get_max_triples(20));\nconsole.log(get_max_triples(25));\n\
  console.log(get_max_triples(30));\nconsole.log(get_max_triples(35));\nconsole.log(get_max_triples(40));\n\
  console.log(get_max_triples(45));\nconsole.log(get_max_triples(50));\nconsole.log(get_max_triples(55));\n\
  console.log(get_max_triples(60));\nconsole.log(get_max_triples(65));\nconsole.log(get_max_triples(70));\n\
  console.log(get_max_triples(75));\nconsole.log(get_max_triples(80));\nconsole.log(get_max_triples(85));\n\
  console.log(get_max_triples(90));\nconsole.log(get_max_triples(95));\nconsole.log(get_max_triples(100));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let result = 0;\n    let arr = [];\n    for (let i = 1; i <= n; i++) {\n  \
  \      arr.push(i * i - i + 1);\n    }\n    for (let i = 0; i < arr.length; i++)\
  \ {\n        for (let j = i + 1; j < arr.length; j++) {\n            for (let k\
  \ = j + 1; k < arr.length; k++) {\n                if ((arr[i] + arr[j] + arr[k])\
  \ % 3 === 0) {\n                    result++;\n                }\n            }\n\
  \        }\n    }\n    return result;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(6));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));\n\
  console.log(get_max_triples(100));\n"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let count = 0;\n    let arr = [];\n    for (let i = 1; i <= n; i++) {\n   \
  \     arr.push(i * i - i + 1);\n    }\n    for (let i = 0; i < arr.length; i++)\
  \ {\n        for (let j = i + 1; j < arr.length; j++) {\n            for (let k\
  \ = j + 1; k < arr.length; k++) {\n                if ((arr[i] + arr[j] + arr[k])\
  \ % 3 === 0) {\n                    count++;\n                }\n            }\n\
  \        }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let count = 0;\n    let arr = [];\n    for (let i = 1; i <= n; i++) {\n   \
  \     arr.push(i * i - i + 1);\n    }\n    for (let i = 0; i < arr.length; i++)\
  \ {\n        for (let j = i + 1; j < arr.length; j++) {\n            for (let k\
  \ = j + 1; k < arr.length; k++) {\n                if ((arr[i] + arr[j] + arr[k])\
  \ % 3 === 0) {\n                    count++;\n                }\n            }\n\
  \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let count = 0;\n    let a = [];\n    for (let i = 1; i <= n; i++) {\n     \
  \   a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length; i++) {\n  \
  \      for (let j = i + 1; j < a.length; j++) {\n            for (let k = j + 1;\
  \ k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3 === 0) {\n\
  \                    count++;\n                }\n            }\n        }\n   \
  \ }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let arr = [];\n    for (let i = 1; i <= n; i++) {\n        arr.push(i * i -\
  \ i + 1);\n    }\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n\
  \        for (let j = i + 1; j < arr.length; j++) {\n            for (let k = j\
  \ + 1; k < arr.length; k++) {\n                if ((arr[i] + arr[j] + arr[k]) %\
  \ 3 === 0) {\n                    count++;\n                }\n            }\n \
  \       }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));\n\
  console.log(get_max_triples(15));\nconsole.log(get_max_triples(20));\nconsole.log(get_max_triples(25));\n\
  console.log(get_max_triples(30));\nconsole.log(get_max_triples(35));\nconsole.log(get_max_triples(40));\n\
  console.log(get_max_triples(45));\nconsole.log(get_max_triples(50));\nconsole.log(get_max_triples(55));\n\
  console.log(get_max_triples(60));\nconsole.log(get_max_triples(65));\nconsole.log(get_max_triples(70));\n\
  console.log(get_max_triples(75));\nconsole.log(get_max_triples(80));\nconsole.log(get_max_triples(85));\n\
  console.log(get_max_triples(90));\nconsole.log(get_max_triples(95));\nconsole.log(get_max_triples(100));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(6));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));\n\
  console.log(get_max_triples(100));\n"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(6));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i <=\
  \ n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
- "    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
  \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
  \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
  \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3\
  \ === 0) {\n                    count++;\n                }\n            }\n   \
  \     }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));"
language: ts
name: HumanEval_147_get_max_triples
prompt: "//You are given a positive integer n. You have to create an integer array\
  \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i\
  \ - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j\
  \ < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
  \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid\
  \ triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n"
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
  \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
  }\n\ntest();"

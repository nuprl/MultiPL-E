completions:
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let character of string)\
  \ {\n        if (!distinct_characters.includes(character.toLowerCase())) {\n   \
  \         distinct_characters.push(character.toLowerCase());\n        }\n    }\n\
  \    return distinct_characters.length;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- '  return new Set(string.toLowerCase()).size;

  }

  '
- '    return new Set(string.toLowerCase()).size;

  }

  '
- "    let result = 0;\n    let newString = string.toLowerCase();\n    for (let i\
  \ = 0; i < newString.length; i++) {\n        if (newString.indexOf(newString[i])\
  \ === i) {\n            result++;\n        }\n    }\n    return result;\n}\n"
- "    let uniqueChars: string[] = [];\n    for (let i = 0; i < string.length; i++)\
  \ {\n        if (uniqueChars.indexOf(string[i].toLowerCase()) === -1) {\n      \
  \      uniqueChars.push(string[i].toLowerCase());\n        }\n    }\n    return\
  \ uniqueChars.length;\n}\n"
- "    let count = 0;\n    let chars = string.toLowerCase().split('');\n    let uniqueChars\
  \ = chars.filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n   \
  \ return uniqueChars.length;\n}\n"
- "    let result = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        char_set.add(string[i].toLowerCase());\n    }\n    result = char_set.size;\n\
  \    return result;\n}\n"
- "    let count = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (!char_set.has(string[i].toLowerCase())) {\n            char_set.add(string[i].toLowerCase());\n\
  \            count++;\n        }\n    }\n    return count;\n}\n"
- "  let distinct_characters = new Set();\n  for (let i = 0; i < string.length; i++)\
  \ {\n    distinct_characters.add(string[i].toLowerCase());\n  }\n  return distinct_characters.size;\n\
  }\n"
- "    let result: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (result.indexOf(string[i].toLowerCase()) === -1) {\n            result.push(string[i].toLowerCase());\n\
  \        }\n    }\n    return result.length;\n}\n"
- "    let chars = new Set();\n    for (let i = 0; i < string.length; i++) {\n   \
  \     chars.add(string[i].toLowerCase());\n    }\n    return chars.size;\n}\n"
- "    let result = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        char_set.add(string[i].toLowerCase());\n    }\n    result = char_set.size;\n\
  \    return result;\n}\n"
- "    let count = 0;\n    let characters = {};\n    string = string.toLowerCase();\n\
  \    for (let i = 0; i < string.length; i++) {\n        let char = string.charAt(i);\n\
  \        if (characters[char] === undefined) {\n            characters[char] = 1;\n\
  \            count++;\n        }\n    }\n    return count;\n}\n"
- "    let result: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (result.indexOf(string[i].toLowerCase()) === -1) {\n            result.push(string[i].toLowerCase());\n\
  \        }\n    }\n    return result.length;\n}\n"
- '    return new Set(string.toLowerCase()).size;

  }

  '
- '    return new Set(string.toLowerCase()).size;

  }

  '
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        let character = string[i];\n        if (distinct_characters.indexOf(character)\
  \ === -1) {\n            distinct_characters.push(character);\n        }\n    }\n\
  \    return distinct_characters.length;\n}\n"
- "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n   \
  \ return distinct_characters.size;\n}\n"
- '    return new Set(string.toLowerCase()).size;

  }

  '
- "    let set = new Set(string.toLowerCase());\n    return set.size;\n}\n"
- "    return string.toLowerCase().split('').filter((value, index, self) => {\n  \
  \      return self.indexOf(value) === index;\n    }).length;\n}\n"
- "  let count = 0;\n  let charMap = {};\n  for (let char of string) {\n    if (!charMap[char])\
  \ {\n      charMap[char] = 1;\n      count++;\n    }\n  }\n  return count;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let lowerCaseString = string.toLowerCase();\n    let distinctCharacters = new\
  \ Set(lowerCaseString);\n    return distinctCharacters.size;\n}\n"
- "    let count = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (!char_set.has(string[i].toLowerCase())) {\n            char_set.add(string[i].toLowerCase());\n\
  \            count++;\n        }\n    }\n    return count;\n}\n"
- "    let result = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        char_set.add(string[i].toLowerCase());\n    }\n    result = char_set.size;\n\
  \    return result;\n}\n"
- "    let count = 0;\n    let charMap = new Map();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (!charMap.has(string[i])) {\n            charMap.set(string[i],\
  \ 1);\n            count++;\n        }\n    }\n    return count;\n}\n"
- "    let char_set: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (char_set.indexOf(string[i].toLowerCase()) === -1) {\n            char_set.push(string[i].toLowerCase());\n\
  \        }\n    }\n    return char_set.length;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let uniqueChars = new Set();\n    for (let i = 0; i < string.length; i++) {\n\
  \        uniqueChars.add(string[i].toLowerCase());\n    }\n    return uniqueChars.size;\n\
  }\n"
- '  return new Set(string.toLowerCase()).size;

  }

  '
- "    let set = new Set(string.toLowerCase());\n    return set.size;\n}\n"
- "    let result = 0;\n    let charMap = {};\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (!charMap[string[i].toLowerCase()]) {\n            charMap[string[i].toLowerCase()]\
  \ = true;\n            result++;\n        }\n    }\n    return result;\n}\n"
- "    let result = 0;\n    let charMap = {};\n    for (let char of string) {\n  \
  \      if (!charMap[char.toLowerCase()]) {\n            charMap[char.toLowerCase()]\
  \ = true;\n            result++;\n        }\n    }\n    return result;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let count = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (!char_set.has(string[i].toLowerCase())) {\n            char_set.add(string[i].toLowerCase());\n\
  \            count++;\n        }\n    }\n    return count;\n}\n"
- "    let distinctChars = new Set();\n    for (let char of string) {\n        distinctChars.add(char.toLowerCase());\n\
  \    }\n    return distinctChars.size;\n}\n"
- "    let count = 0;\n    let chars = string.toLowerCase().split('');\n    for (let\
  \ i = 0; i < chars.length; i++) {\n        if (chars.indexOf(chars[i]) === i) {\n\
  \            count++;\n        }\n    }\n    return count;\n}\n"
- '    return new Set(string.toLowerCase()).size;

  }

  '
- "    let unique = new Set(string.toLowerCase());\n    return unique.size;\n}\n"
- "    let result: number = 0;\n    let arr: string[] = string.split('');\n    let\
  \ arr2: string[] = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr2.indexOf(arr[i].toLowerCase())\
  \ === -1) {\n            arr2.push(arr[i].toLowerCase());\n            result++;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let distinct_characters = [];\n    for (let i = 0; i < string.length; i++)\
  \ {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1) {\n\
  \            distinct_characters.push(string[i].toLowerCase());\n        }\n   \
  \ }\n    return distinct_characters.length;\n}\n"
- "  let count = 0;\n  let charMap = {};\n  for (let i = 0; i < string.length; i++)\
  \ {\n    if (!charMap[string[i].toLowerCase()]) {\n      charMap[string[i].toLowerCase()]\
  \ = 1;\n      count++;\n    }\n  }\n  return count;\n}\n"
- "    let count = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (!char_set.has(string[i].toLowerCase())) {\n            char_set.add(string[i].toLowerCase());\n\
  \            count++;\n        }\n    }\n    return count;\n}\n"
- "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n   \
  \ return distinct_characters.size;\n}\n"
- '  return [...new Set(string.toLowerCase())].length;

  }

  '
- "    let charSet = new Set();\n    for (let i = 0; i < string.length; i++) {\n \
  \       charSet.add(string[i].toLowerCase());\n    }\n    return charSet.size;\n\
  }\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let set = new Set();\n    for (let i = 0; i < string.length; i++) {\n     \
  \   set.add(string[i].toLowerCase());\n    }\n    return set.size;\n}\n"
- "  const uniqueChars = new Set(string.toLowerCase());\n  return uniqueChars.size;\n\
  }\n"
- '    return new Set(string.toLowerCase()).size;

  }

  '
- "    let set = new Set(string.toLowerCase());\n    return set.size;\n}\n"
- "    let count = 0;\n    let unique = '';\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (unique.indexOf(string[i].toLowerCase()) === -1) {\n      \
  \      unique += string[i].toLowerCase();\n            count++;\n        }\n   \
  \ }\n    return count;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- '    return string.length;

  }

  '
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- '  return new Set(string.toLowerCase()).size;

  }

  '
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let unique_chars = new Set(string.toLowerCase());\n    return unique_chars.size;\n\
  }\n"
- "    let count = 0;\n    let chars = string.toLowerCase().split('');\n    let unique\
  \ = [...new Set(chars)];\n    count = unique.length;\n    return count;\n}\n"
- "  let unique = new Set(string.toLowerCase());\n  return unique.size;\n}\n"
- "    let count = 0;\n    let char_set = new Set();\n    for (let char of string)\
  \ {\n        char_set.add(char.toLowerCase());\n    }\n    return char_set.size;\n\
  }\n"
- "  const lowerCaseString = string.toLowerCase();\n  const uniqueCharacters = new\
  \ Set(lowerCaseString);\n  return uniqueCharacters.size;\n}\n"
- "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n   \
  \ return distinct_characters.size;\n}\n"
- "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n   \
  \ return distinct_characters.size;\n}\n"
- "    let distinct_chars = new Set();\n    for (let char of string) {\n        distinct_chars.add(char.toLowerCase());\n\
  \    }\n    return distinct_chars.size;\n}\n"
- "    let chars: string[] = string.split('');\n    let distinctChars: string[] =\
  \ [];\n    for (let char of chars) {\n        if (distinctChars.indexOf(char.toLowerCase())\
  \ === -1) {\n            distinctChars.push(char.toLowerCase());\n        }\n  \
  \  }\n    return distinctChars.length;\n}\n"
- "  let result = 0;\n  let char_set = new Set();\n  for (let i = 0; i < string.length;\
  \ i++) {\n    char_set.add(string[i].toLowerCase());\n  }\n  result = char_set.size;\n\
  \  return result;\n}\n"
- "    let set = new Set(string.toLowerCase());\n    return set.size;\n}\n"
- "    let count = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (!char_set.has(string[i].toLowerCase())) {\n            char_set.add(string[i].toLowerCase());\n\
  \            count++;\n        }\n    }\n    return count;\n}\n"
- "    let result: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (result.indexOf(string[i].toLowerCase()) === -1) {\n            result.push(string[i].toLowerCase());\n\
  \        }\n    }\n    return result.length;\n}\n"
- "  let count = 0;\n  let chars = string.toLowerCase().split('');\n  let uniqueChars\
  \ = new Set(chars);\n  uniqueChars.forEach(char => {\n    count++;\n  });\n  return\
  \ count;\n}\n"
- "    let result: number = 0;\n    let chars: string[] = string.split('');\n    let\
  \ uniqueChars: string[] = [];\n    for (let char of chars) {\n        if (uniqueChars.indexOf(char.toLowerCase())\
  \ === -1) {\n            uniqueChars.push(char.toLowerCase());\n            result++;\n\
  \        }\n    }\n    return result;\n}\n"
- '    return new Set(string.toLowerCase()).size;

  }

  '
- "    let set = new Set(string.toLowerCase());\n    return set.size;\n}\n"
- "    let result = 0;\n    let charMap = {};\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (!charMap[string[i].toLowerCase()]) {\n            charMap[string[i].toLowerCase()]\
  \ = true;\n            result++;\n        }\n    }\n    return result;\n}\n"
- "    let uniqueCharacters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (uniqueCharacters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            uniqueCharacters.push(string[i].toLowerCase());\n        }\n  \
  \  }\n    return uniqueCharacters.length;\n}\n"
- "    let count = 0;\n    let unique = '';\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (unique.indexOf(string[i].toLowerCase()) === -1) {\n      \
  \      unique += string[i].toLowerCase();\n            count++;\n        }\n   \
  \ }\n    return count;\n}\n"
- "  let count = 0;\n  let charMap = {};\n  for (let i = 0; i < string.length; i++)\
  \ {\n    if (!charMap[string[i].toLowerCase()]) {\n      charMap[string[i].toLowerCase()]\
  \ = 1;\n      count++;\n    }\n  }\n  return count;\n}\n"
- "    let result: number = 0;\n    let char_set: string[] = [];\n    for (let i =\
  \ 0; i < string.length; i++) {\n        if (char_set.indexOf(string[i].toLowerCase())\
  \ === -1) {\n            char_set.push(string[i].toLowerCase());\n            result++;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let distinct_characters = [];\n    for (let i = 0; i < string.length; i++)\
  \ {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1) {\n\
  \            distinct_characters.push(string[i].toLowerCase());\n        }\n   \
  \ }\n    return distinct_characters.length;\n}\n"
- "    let set = new Set(string.toLowerCase());\n    return set.size;\n}\n"
- "    let count = 0;\n    let unique = {};\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (!unique[string[i].toLowerCase()]) {\n            unique[string[i].toLowerCase()]\
  \ = 1;\n            count++;\n        }\n    }\n    return count;\n}\n"
- '    return new Set(string.toLowerCase().split('''')).size;

  }

  '
- '    return new Set(string.toLowerCase().split('''')).size;

  }

  '
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- '    return [...new Set(string.toLowerCase())].length;

  }

  '
- '    return new Set(string.toLowerCase()).size;

  }

  '
- "    let result: number = 0;\n    let charSet: Set<string> = new Set();\n    for\
  \ (let i = 0; i < string.length; i++) {\n        charSet.add(string[i].toLowerCase());\n\
  \    }\n    result = charSet.size;\n    return result;\n}\n"
- "    let result = 0;\n    let charSet = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        charSet.add(string[i].toLowerCase());\n    }\n    result = charSet.size;\n\
  \    return result;\n}\n"
- "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n   \
  \ return distinct_characters.size;\n}\n"
- "    let result = 0;\n    let lowerCase = string.toLowerCase();\n    for (let i\
  \ = 0; i < lowerCase.length; i++) {\n        if (lowerCase.indexOf(lowerCase[i])\
  \ === i) {\n            result++;\n        }\n    }\n    return result;\n}\n"
- "    let distinct_characters = new Set();\n    for (let character of string) {\n\
  \        distinct_characters.add(character.toLowerCase());\n    }\n    return distinct_characters.size;\n\
  }\n"
- "    let count = 0;\n    let characters = {};\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (!characters[string[i].toLowerCase()]) {\n            characters[string[i].toLowerCase()]\
  \ = true;\n            count++;\n        }\n    }\n    return count;\n}\n"
- "  const characters = string.split('');\n  const uniqueCharacters = new Set(characters);\n\
  \  return uniqueCharacters.size;\n}\n"
- "    let set = new Set();\n    for (let i = 0; i < string.length; i++) {\n     \
  \   set.add(string[i].toLowerCase());\n    }\n    return set.size;\n}\n"
- '    return string.toLowerCase().split('''').filter((x, i, a) => a.indexOf(x) ===
  i).length;

  }

  '
- "    let count = 0;\n    let chars = string.toLowerCase().split('');\n    let uniqueChars\
  \ = chars.filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n   \
  \ return uniqueChars.length;\n}\n"
- "    let count = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (!char_set.has(string[i].toLowerCase())) {\n            char_set.add(string[i].toLowerCase());\n\
  \            count++;\n        }\n    }\n    return count;\n}\n"
- '    return new Set(string.toLowerCase().split('''')).size;

  }

  '
- "    let count = 0;\n    let char_set = new Set();\n    for (let char of string)\
  \ {\n        char_set.add(char.toLowerCase());\n    }\n    return char_set.size;\n\
  }\n"
- '  return new Set(string.toLowerCase()).size;

  }

  '
- "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n   \
  \ return distinct_characters.size;\n}\n"
- "  let distinct_characters: string[] = [];\n  for (let char of string) {\n    if\
  \ (!distinct_characters.includes(char.toLowerCase())) {\n      distinct_characters.push(char.toLowerCase());\n\
  \    }\n  }\n  return distinct_characters.length;\n}\n"
- "    let char_set: Set<string> = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        char_set.add(string[i]);\n    }\n    return char_set.size;\n}\n"
- '    return [...new Set(string.toLowerCase())].length;

  }

  '
- "    return string.toLowerCase().split('').filter((value, index, self) => {\n  \
  \      return self.indexOf(value) === index;\n    }).length;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let count = 0;\n    let chars = string.toLowerCase().split('');\n    let unique\
  \ = [...new Set(chars)];\n    return unique.length;\n}\n"
- "    let result: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (result.indexOf(string[i].toLowerCase()) === -1) {\n            result.push(string[i].toLowerCase());\n\
  \        }\n    }\n    return result.length;\n}\n"
- "    let count = 0;\n    let characters: string[] = [];\n    for (let i = 0; i <\
  \ string.length; i++) {\n        if (!characters.includes(string[i].toLowerCase()))\
  \ {\n            characters.push(string[i].toLowerCase());\n            count++;\n\
  \        }\n    }\n    return count;\n}\n"
- "    let count = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (!char_set.has(string[i].toLowerCase())) {\n            char_set.add(string[i].toLowerCase());\n\
  \            count++;\n        }\n    }\n    return count;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let result = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        char_set.add(string[i].toLowerCase());\n    }\n    result = char_set.size;\n\
  \    return result;\n}\n"
- "  const unique = new Set(string.toLowerCase());\n  return unique.size;\n}\n"
- "    let count = 0;\n    let chars = string.toLowerCase().split('');\n    let uniqueChars\
  \ = chars.filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n   \
  \ return uniqueChars.length;\n}\n"
- "    const set = new Set(string.toLowerCase());\n    return set.size;\n}\n"
- "    return string.toLowerCase().split('').filter((value, index, self) => {\n  \
  \      return self.indexOf(value) === index;\n    }).length;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let count = 0;\n    let characters = string.toLowerCase().split('');\n    let\
  \ uniqueCharacters = new Set(characters);\n    uniqueCharacters.forEach(() => count++);\n\
  \    return count;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let distinct_chars = new Set();\n    for (let char of string) {\n        distinct_chars.add(char.toLowerCase());\n\
  \    }\n    return distinct_chars.size;\n}\n"
- '    return Array.from(new Set(string.toLowerCase())).length;

  }

  '
- "    let count = 0;\n    let charMap = {};\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (!charMap[string[i].toLowerCase()]) {\n            charMap[string[i].toLowerCase()]\
  \ = 1;\n            count++;\n        }\n    }\n    return count;\n}\n"
- "    let chars = string.toLowerCase().split('');\n    let result = chars.filter((item,\
  \ index) => chars.indexOf(item) === index);\n    return result.length;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i: number = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "  const unique = new Set(string.toLowerCase());\n  return unique.size;\n}\n"
- "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n   \
  \ return distinct_characters.size;\n}\n"
- "  let count = 0;\n  let unique = \"\";\n  for (let i = 0; i < string.length; i++)\
  \ {\n    if (unique.indexOf(string[i].toLowerCase()) === -1) {\n      unique +=\
  \ string[i].toLowerCase();\n      count++;\n    }\n  }\n  return count;\n}\n"
- "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n   \
  \ return distinct_characters.size;\n}\n"
- "    let result = 0;\n    let chars = string.toLowerCase().split('');\n    let unique\
  \ = new Set(chars);\n    result = unique.size;\n    return result;\n}\n"
- "    let result = 0;\n    let charSet = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        let char = string[i].toLowerCase();\n        if (!charSet.has(char))\
  \ {\n            charSet.add(char);\n            result++;\n        }\n    }\n \
  \   return result;\n}\n"
- "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n   \
  \ return distinct_characters.size;\n}\n"
- "    let result: number = 0;\n    let char_set: string[] = [];\n    for (let i =\
  \ 0; i < string.length; i++) {\n        if (char_set.indexOf(string[i].toLowerCase())\
  \ === -1) {\n            char_set.push(string[i].toLowerCase());\n            result++;\n\
  \        }\n    }\n    return result;\n}\n"
- "  let count = 0;\n  const letters = string.toLowerCase().split(\"\");\n  const\
  \ uniqueLetters = new Set(letters);\n  return uniqueLetters.size;\n}\n"
- '    return new Set(string.toLowerCase()).size;

  }

  '
- "    let uniqueCharacters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (uniqueCharacters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            uniqueCharacters.push(string[i].toLowerCase());\n        }\n  \
  \  }\n    return uniqueCharacters.length;\n}\n"
- "    let unique = new Set(string.toLowerCase());\n    return unique.size;\n}\n"
- "    let chars: string[] = string.split('');\n    let uniqueChars: string[] = [];\n\
  \    for (let char of chars) {\n        if (uniqueChars.indexOf(char.toLowerCase())\
  \ === -1) {\n            uniqueChars.push(char.toLowerCase());\n        }\n    }\n\
  \    return uniqueChars.length;\n}\n"
- "    let result: number = 0;\n    let char_set: Set<string> = new Set();\n    for\
  \ (let i = 0; i < string.length; i++) {\n        char_set.add(string[i].toLowerCase());\n\
  \    }\n    result = char_set.size;\n    return result;\n}\n"
- "    let count = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (!char_set.has(string[i].toLowerCase())) {\n            char_set.add(string[i].toLowerCase());\n\
  \            count++;\n        }\n    }\n    return count;\n}\n"
- "    let distinct_characters = new Set();\n    for (let character of string) {\n\
  \        distinct_characters.add(character.toLowerCase());\n    }\n    return distinct_characters.size;\n\
  }\n"
- "    let result: number = 0;\n    let lowerCaseString: string = string.toLowerCase();\n\
  \    for (let i: number = 0; i < lowerCaseString.length; i++) {\n        if (lowerCaseString.indexOf(lowerCaseString[i])\
  \ === i) {\n            result++;\n        }\n    }\n    return result;\n}\n"
- "  let charSet = new Set();\n  for (let i = 0; i < string.length; i++) {\n    charSet.add(string[i].toLowerCase());\n\
  \  }\n  return charSet.size;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- '    return new Set(string.toLowerCase()).size;

  }

  '
- "    let uniqueChars = new Set();\n    for (let i = 0; i < string.length; i++) {\n\
  \        uniqueChars.add(string[i].toLowerCase());\n    }\n    return uniqueChars.size;\n\
  }\n"
- "    let distinct_characters = new Set();\n    for (let character of string) {\n\
  \        distinct_characters.add(character.toLowerCase());\n    }\n    return distinct_characters.size;\n\
  }\n"
- "    let charSet = new Set();\n    for (let char of string) {\n        charSet.add(char.toLowerCase());\n\
  \    }\n    return charSet.size;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let char_set: Set<string> = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        char_set.add(string[i]);\n    }\n    return char_set.size;\n}\n"
- "    let result: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (result.indexOf(string[i].toLowerCase()) === -1) {\n            result.push(string[i].toLowerCase());\n\
  \        }\n    }\n    return result.length;\n}\n"
- '    return new Set(string.toLowerCase().split('''')).size;

  }

  '
- "    let result = 0;\n    let charMap = {};\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (!charMap[string[i].toLowerCase()]) {\n            charMap[string[i].toLowerCase()]\
  \ = true;\n            result++;\n        }\n    }\n    return result;\n}\n"
- "    let count = 0;\n    let chars: string[] = string.split('');\n    let uniqueChars:\
  \ string[] = [];\n    for (let char of chars) {\n        if (uniqueChars.indexOf(char.toLowerCase())\
  \ === -1) {\n            uniqueChars.push(char.toLowerCase());\n            count++;\n\
  \        }\n    }\n    return count;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let result = 0;\n    let characters = string.toLowerCase().split('');\n   \
  \ let uniqueCharacters = new Set(characters);\n    result = uniqueCharacters.size;\n\
  \    return result;\n}\n"
- '    return new Set(string.toLowerCase().split('''')).size;

  }

  '
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- '    return new Set(string.toLowerCase().split('''')).size;

  }

  '
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    return string.toLowerCase().split('').filter((value, index, self) => {\n  \
  \      return self.indexOf(value) === index;\n    }).length;\n}\n"
- "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n   \
  \ return distinct_characters.size;\n}\n"
- "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n   \
  \ return distinct_characters.size;\n}\n"
- "    let result: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (result.indexOf(string[i].toLowerCase()) === -1) {\n            result.push(string[i].toLowerCase());\n\
  \        }\n    }\n    return result.length;\n}\n"
- "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n   \
  \ return distinct_characters.size;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let count = 0;\n    let chars: string[] = string.split('');\n    let uniqueChars:\
  \ string[] = [];\n    for (let char of chars) {\n        if (uniqueChars.indexOf(char.toLowerCase())\
  \ === -1) {\n            uniqueChars.push(char.toLowerCase());\n            count++;\n\
  \        }\n    }\n    return count;\n}\n"
- "  let count = 0;\n  const charMap = {};\n  for (let i = 0; i < string.length; i++)\
  \ {\n    const char = string[i].toLowerCase();\n    if (!charMap[char]) {\n    \
  \  charMap[char] = true;\n      count++;\n    }\n  }\n  return count;\n}\n"
- "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n   \
  \ return distinct_characters.size;\n}\n"
- "    let result = 0;\n    let charMap = new Map();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (!charMap.has(string[i].toLowerCase())) {\n            charMap.set(string[i].toLowerCase(),\
  \ 1);\n            result++;\n        }\n    }\n    return result;\n}\n"
- "    let count = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (!char_set.has(string[i].toLowerCase())) {\n            char_set.add(string[i].toLowerCase());\n\
  \            count++;\n        }\n    }\n    return count;\n}\n"
- '  return string.toLowerCase().split('''').filter((char, index, array) => array.indexOf(char)
  === index).length;

  }

  '
- "  let distinct_characters: string[] = [];\n  for (let i = 0; i < string.length;\
  \ i++) {\n    if (!distinct_characters.includes(string[i].toLowerCase())) {\n  \
  \    distinct_characters.push(string[i].toLowerCase());\n    }\n  }\n  return distinct_characters.length;\n\
  }\n"
- "    let char_set: Set<string> = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        char_set.add(string[i]);\n    }\n    return char_set.size;\n}\n"
- "    let set = new Set(string.toLowerCase());\n    return set.size;\n}\n"
- "    let result = 0;\n    let charSet = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (!charSet.has(string[i].toLowerCase())) {\n            charSet.add(string[i].toLowerCase());\n\
  \            result++;\n        }\n    }\n    return result;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "    let count = 0;\n    let chars = string.toLowerCase().split('');\n    let unique\
  \ = chars.filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n   \
  \ return unique.length;\n}\n"
- '    return new Set(string.toLowerCase()).size;

  }

  '
- '    return new Set(string.toLowerCase()).size;

  }

  '
- "  let count = 0;\n  let charMap = {};\n  for (let i = 0; i < string.length; i++)\
  \ {\n    if (!charMap[string[i].toLowerCase()]) {\n      charMap[string[i].toLowerCase()]\
  \ = 1;\n      count++;\n    }\n  }\n  return count;\n}\n"
- '    return new Set(string.toLowerCase()).size;

  }

  '
- "    let distinct = new Set<string>();\n    for (let char of string) {\n       \
  \ distinct.add(char.toLowerCase());\n    }\n    return distinct.size;\n}\n"
- "    let result: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (result.indexOf(string[i].toLowerCase()) === -1) {\n            result.push(string[i].toLowerCase());\n\
  \        }\n    }\n    return result.length;\n}\n"
- '    return new Set(string.toLowerCase()).size;

  }

  '
- "    let unique: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (unique.indexOf(string[i].toLowerCase()) === -1) {\n            unique.push(string[i].toLowerCase());\n\
  \        }\n    }\n    return unique.length;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
- "  let unique_chars = new Set();\n  for (let char of string) {\n    unique_chars.add(char.toLowerCase());\n\
  \  }\n  return unique_chars.size;\n}\n"
- "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
  \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n   \
  \ return distinct_characters.size;\n}\n"
- "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
  \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1)\
  \ {\n            distinct_characters.push(string[i].toLowerCase());\n        }\n\
  \    }\n    return distinct_characters.length;\n}\n"
language: ts
name: HumanEval_16_count_distinct_characters
prompt: '//Given a string, find out how many distinct characters (regardless of case)
  does it consist of

  // >>> count_distinct_characters(''xyzXYZ'')

  // 3

  // >>> count_distinct_characters(''Jerry'')

  // 4

  function count_distinct_characters(string: string): number {

  '
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
  \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
  abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
  Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"

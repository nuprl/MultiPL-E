name: HumanEval_16_count_distinct_characters
language: humaneval_to_typescript.py
prompt: "//Given a string, find out how many distinct characters (regardless of case)\
  \ does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n// >>> count_distinct_characters('Jerry')\n\
  // 4\nfunction count_distinct_characters(string: string): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
  \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
  abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
  Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
completions: ["    let distinct_characters: string[] = [];\n    for (let i = 0; i\
    \ < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let character of string) {\n        if (!distinct_characters.includes(character.toLowerCase()))\
    \ {\n            distinct_characters.push(character.toLowerCase());\n        }\n\
    \    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "  return new\
    \ Set(string.toLowerCase()).size;\n}\n", "    return new Set(string.toLowerCase()).size;\n\
    }\n", "    let result = 0;\n    let newString = string.toLowerCase();\n    for\
    \ (let i = 0; i < newString.length; i++) {\n        if (newString.indexOf(newString[i])\
    \ === i) {\n            result++;\n        }\n    }\n    return result;\n}\n",
  "    let uniqueChars: string[] = [];\n    for (let i = 0; i < string.length; i++)\
    \ {\n        if (uniqueChars.indexOf(string[i].toLowerCase()) === -1) {\n    \
    \        uniqueChars.push(string[i].toLowerCase());\n        }\n    }\n    return\
    \ uniqueChars.length;\n}\n", "    let count = 0;\n    let chars = string.toLowerCase().split('');\n\
    \    let uniqueChars = chars.filter(function(item, i, ar){ return ar.indexOf(item)\
    \ === i; });\n    return uniqueChars.length;\n}\n", "    let result = 0;\n   \
    \ let char_set = new Set();\n    for (let i = 0; i < string.length; i++) {\n \
    \       char_set.add(string[i].toLowerCase());\n    }\n    result = char_set.size;\n\
    \    return result;\n}\n", "    let count = 0;\n    let char_set = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (!char_set.has(string[i].toLowerCase()))\
    \ {\n            char_set.add(string[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "  let distinct_characters = new Set();\n\
    \  for (let i = 0; i < string.length; i++) {\n    distinct_characters.add(string[i].toLowerCase());\n\
    \  }\n  return distinct_characters.size;\n}\n", "    let result: string[] = [];\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (result.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            result.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return result.length;\n}\n", "    let chars = new Set();\n    for (let\
    \ i = 0; i < string.length; i++) {\n        chars.add(string[i].toLowerCase());\n\
    \    }\n    return chars.size;\n}\n", "    let result = 0;\n    let char_set =\
    \ new Set();\n    for (let i = 0; i < string.length; i++) {\n        char_set.add(string[i].toLowerCase());\n\
    \    }\n    result = char_set.size;\n    return result;\n}\n", "    let count\
    \ = 0;\n    let characters = {};\n    string = string.toLowerCase();\n    for\
    \ (let i = 0; i < string.length; i++) {\n        let char = string.charAt(i);\n\
    \        if (characters[char] === undefined) {\n            characters[char] =\
    \ 1;\n            count++;\n        }\n    }\n    return count;\n}\n", "    let\
    \ result: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n    \
    \    if (result.indexOf(string[i].toLowerCase()) === -1) {\n            result.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return result.length;\n}\n", "    return new Set(string.toLowerCase()).size;\n\
    }\n", "    return new Set(string.toLowerCase()).size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        let character\
    \ = string[i];\n        if (distinct_characters.indexOf(character) === -1) {\n\
    \            distinct_characters.push(character);\n        }\n    }\n    return\
    \ distinct_characters.length;\n}\n", "    let distinct_characters = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

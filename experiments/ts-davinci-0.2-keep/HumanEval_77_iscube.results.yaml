language: ts
name: HumanEval_77_iscube
results:
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let result = false;\n\
    \    let i = 1;\n    while (i < a) {\n        if (i * i * i === a) {\n       \
    \     result = true;\n        }\n        i++;\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp_vmifujg.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp_vmifujg.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa2neh9e7.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpa2neh9e7.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa2neh9e7.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpa2neh9e7.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0slqftri.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n  return Math.cbrt(a) % 1\
    \ === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3xfqbytm.ts(12,15): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.pow(Math.round(Math.pow(a,\
    \ 1 / 3)), 3) === a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5_mx2ofh.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp5_mx2ofh.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738413
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return a === Math.pow(Math.round(Math.pow(a,\
    \ 1 / 3)), 3);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpp5887q0m.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpp5887q0m.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738413
- exit_code: 0
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let result: boolean =\
    \ false;\n    if (a === 0) {\n        result = true;\n    } else if (a > 0) {\n\
    \        for (let i = 1; i <= a; i++) {\n            if (i * i * i === a) {\n\
    \                result = true;\n            }\n        }\n    } else {\n    \
    \    for (let i = -1; i >= a; i--) {\n            if (i * i * i === a) {\n   \
    \             result = true;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let cube = Math.cbrt(a);\n\
    \    if (cube % 1 === 0) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpz5ic82js.ts(12,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_y7slv1b.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_y7slv1b.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_y7slv1b.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_y7slv1b.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 0
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let result: boolean =\
    \ false;\n    if (a > 0) {\n        for (let i = 0; i <= a; i++) {\n         \
    \   if (i * i * i === a) {\n                result = true;\n            }\n  \
    \      }\n    } else if (a < 0) {\n        for (let i = 0; i >= a; i--) {\n  \
    \          if (i * i * i === a) {\n                result = true;\n          \
    \  }\n        }\n    } else {\n        result = true;\n    }\n    return result;\n\
    }\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    true

    true

    true

    false

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_y7slv1b.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_y7slv1b.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 0
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    if (a === 0) {\n     \
    \   return true;\n    }\n    if (a < 0) {\n        a = a * -1;\n    }\n    let\
    \ i = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n     \
    \       return true;\n        }\n        i++;\n    }\n    return false;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738414
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let result: boolean =\
    \ false;\n    let cube: number = 0;\n    let i: number = 0;\n    while (cube <\
    \ a) {\n        i++;\n        cube = i * i * i;\n        if (cube === a) {\n \
    \           result = true;\n        }\n    }\n    return result;\n}\nconsole.log(iscube(1));\n\
    console.log(iscube(2));\nconsole.log(iscube(-1));\nconsole.log(iscube(64));\n\
    console.log(iscube(0));\nconsole.log(iscube(180));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpons03o_s.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpons03o_s.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    false

    false

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let result: boolean =\
    \ false;\n    for (let i = 0; i < a; i++) {\n        if (i * i * i === a) {\n\
    \            result = true;\n        }\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpooqaw583.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpooqaw583.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_y7slv1b.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_y7slv1b.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let cube = Math.cbrt(a);\n\
    \    if (cube % 1 === 0) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpez47f4lx.ts(12,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let cube = Math.cbrt(a);\n\
    \    return cube % 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqs78hv53.ts(12,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 0
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return a === 0 ? true\
    \ : a > 0 ? Math.pow(Math.round(Math.pow(a, 1 / 3)), 3) === a : Math.pow(Math.round(Math.pow(-a,\
    \ 1 / 3)), 3) === -a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdpoyjvz_.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let result: boolean =\
    \ false;\n    for (let i = 0; i < a; i++) {\n        if (i * i * i === a) {\n\
    \            result = true;\n        }\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpooqaw583.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpooqaw583.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_y7slv1b.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_y7slv1b.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let cube = Math.cbrt(a);\n\
    \    return Number.isInteger(cube);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2n88_px_.ts(12,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    ../../../../../tmp/tmp2n88_px_.ts(13,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let cube = Math.cbrt(a);\n\
    \    return Number.isInteger(cube);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2n88_px_.ts(12,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    ../../../../../tmp/tmp2n88_px_.ts(13,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738413
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.pow(Math.round(Math.pow(a,\
    \ 1 / 3)), 3) === a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5_mx2ofh.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp5_mx2ofh.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let result: boolean =\
    \ false;\n    for (let i = 0; i <= a; i++) {\n        if (i * i * i === a) {\n\
    \            result = true;\n        }\n    }\n    return result;\n}\nconsole.log(iscube(1));\n\
    console.log(iscube(2));\nconsole.log(iscube(-1));\nconsole.log(iscube(64));\n\
    console.log(iscube(0));\nconsole.log(iscube(180));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwk6svq12.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpwk6svq12.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    true

    false

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_y7slv1b.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_y7slv1b.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.pow(Math.round(Math.pow(a,\
    \ 1 / 3)), 3) === a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5_mx2ofh.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp5_mx2ofh.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_y7slv1b.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_y7slv1b.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let cube = Math.cbrt(a);\n\
    \    return Number.isInteger(cube);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2n88_px_.ts(12,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    ../../../../../tmp/tmp2n88_px_.ts(13,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_y7slv1b.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_y7slv1b.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 0
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    if (a === 0) {\n     \
    \   return true;\n    }\n    if (a < 0) {\n        a = -a;\n    }\n    for (let\
    \ i = 1; i <= a; i++) {\n        if (i * i * i === a) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3k61q4_f.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp3k61q4_f.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.pow(Math.round(Math.pow(a,\
    \ 1 / 3)), 3) === a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5_mx2ofh.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp5_mx2ofh.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 0
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    if (a === 0) {\n     \
    \   return true;\n    }\n    else if (a < 0) {\n        a = a * -1;\n    }\n \
    \   for (let i = 1; i <= a; i++) {\n        if (i * i * i === a) {\n         \
    \   return true;\n        }\n    }\n    return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738415
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa2neh9e7.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpa2neh9e7.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.pow(Math.round(Math.pow(a,\
    \ 1 / 3)), 3) === a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5_mx2ofh.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp5_mx2ofh.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let result: boolean =\
    \ false;\n    for (let i = 1; i < a; i++) {\n        if (i * i * i === a) {\n\
    \            result = true;\n        }\n    }\n    return result;\n}\n\nconsole.log(iscube(1));\n\
    console.log(iscube(2));\nconsole.log(iscube(-1));\nconsole.log(iscube(64));\n\
    console.log(iscube(0));\nconsole.log(iscube(180));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp518fyyhu.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp518fyyhu.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'false

    false

    false

    true

    false

    false

    '
  timestamp: 1659738415
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.pow(Math.round(Math.pow(a,\
    \ 1 / 3)), 3) === a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5_mx2ofh.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp5_mx2ofh.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let result = false;\n\
    \    for (let i = 1; i <= a; i++) {\n        if (i * i * i === a) {\n        \
    \    result = true;\n        }\n    }\n    return result;\n}\n\nconsole.log(iscube(1));\n\
    console.log(iscube(2));\nconsole.log(iscube(-1));\nconsole.log(iscube(64));\n\
    console.log(iscube(0));\nconsole.log(iscube(180));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphpfvznkv.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphpfvznkv.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    false

    false

    '
  timestamp: 1659738415
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let cube = Math.cbrt(a);\n\
    \    return Number.isInteger(cube);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2n88_px_.ts(12,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    ../../../../../tmp/tmp2n88_px_.ts(13,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738413
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.pow(Math.round(Math.pow(a,\
    \ 1 / 3)), 3) === a;\n}\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpy3dkk2ag.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpy3dkk2ag.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    true

    false

    '
  timestamp: 1659738415
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 0
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    if (a === 0) {\n     \
    \   return true;\n    }\n    if (a < 0) {\n        a = -a;\n    }\n    for (let\
    \ i = 1; i <= a; i++) {\n        if (i * i * i === a) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738413
- exit_code: 0
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    if (a === 0) {\n     \
    \   return true;\n    }\n    if (a < 0) {\n        a = a * -1;\n    }\n    let\
    \ i = 1;\n    while (i * i * i <= a) {\n        if (i * i * i === a) {\n     \
    \       return true;\n        }\n        i++;\n    }\n    return false;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738414
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_y7slv1b.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_y7slv1b.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let b = Math.pow(a, 1\
    \ / 3);\n    return Number.isInteger(b);\n}\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\n\
    console.log(iscube(-1));\nconsole.log(iscube(64));\nconsole.log(iscube(0));\n\
    console.log(iscube(180));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp006mg3ag.ts(13,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738415
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.sqrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9tczwkri.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9tczwkri.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738415
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let result: boolean =\
    \ false;\n    for (let i = 0; i < a; i++) {\n        if (i * i * i === a) {\n\
    \            result = true;\n        }\n    }\n    return result;\n}\nconsole.log(iscube(1));\n\
    console.log(iscube(2));\nconsole.log(iscube(-1));\nconsole.log(iscube(64));\n\
    console.log(iscube(0));\nconsole.log(iscube(180));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpfm3o6oiw.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpfm3o6oiw.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'false

    false

    false

    true

    false

    false

    '
  timestamp: 1659738415
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa2neh9e7.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpa2neh9e7.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let cube = Math.cbrt(a);\n\
    \    return Number.isInteger(cube);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2n88_px_.ts(12,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    ../../../../../tmp/tmp2n88_px_.ts(13,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.pow(Math.round(Math.pow(a,\
    \ 1 / 3)), 3) === a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5_mx2ofh.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp5_mx2ofh.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppp70chod.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738415
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let cube = Math.cbrt(a);\n\
    \    if (cube % 1 === 0) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfavepe53.ts(12,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738415
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let result = Math.cbrt(a);\n\
    \    if (result % 1 === 0) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyfwzon_g.ts(12,23): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738415
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return (Math.cbrt(a) %\
    \ 1) === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2g4hdwug.ts(12,18): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738415
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_y7slv1b.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_y7slv1b.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa2neh9e7.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpa2neh9e7.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_y7slv1b.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_y7slv1b.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let cube = Math.cbrt(a);\n\
    \    return cube % 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqs78hv53.ts(12,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_y7slv1b.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_y7slv1b.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let cube = Math.cbrt(a);\n\
    \    return Number.isInteger(cube);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = iscube;\n\
    \  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2n88_px_.ts(12,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    ../../../../../tmp/tmp2n88_px_.ts(13,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_y7slv1b.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_y7slv1b.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 1
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    if (a < 0) {\n       \
    \ a = a * -1;\n    }\n    if (a == 0) {\n        return true;\n    }\n    for\
    \ (let i = 1; i < a; i++) {\n        if (i * i * i == a) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpexmm6huj.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpexmm6huj.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738415
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let cube = Math.cbrt(a);\n\
    \    if (cube % 1 === 0) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpez47f4lx.ts(12,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let cube = Math.pow(a,\
    \ 1 / 3);\n    return Number.isInteger(cube);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
    \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
    \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
    \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjwenj0ch.ts(13,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738415
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    let cube = Math.cbrt(a);\n\
    \    return Number.isInteger(cube);\n}\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\n\
    console.log(iscube(-1));\nconsole.log(iscube(64));\nconsole.log(iscube(0));\n\
    console.log(iscube(180));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp70zi2ab_.ts(12,21): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    ../../../../../tmp/tmp70zi2ab_.ts(13,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738415
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_y7slv1b.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_y7slv1b.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_y7slv1b.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_y7slv1b.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Number.isInteger(Math.cbrt(a));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm7_d1kr9.ts(12,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm7_d1kr9.ts(12,34): error TS2339: Property ''cbrt'' does
    not exist on type ''Math''.

    '
  timestamp: 1659738413
- exit_code: 2
  program: "//Write a function that takes an integer a and returns True \n// if this\
    \ ingeger is a cube of some integer number.\n// Note: you may assume the input\
    \ is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n\
    // iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
    \ ==> False\nfunction iscube(a: number): boolean {\n    return Math.cbrt(a) %\
    \ 1 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
    \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
    \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
    \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
    \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbtg1w4y.ts(12,17): error TS2339: Property ''cbrt''
    does not exist on type ''Math''.

    '
  timestamp: 1659738413

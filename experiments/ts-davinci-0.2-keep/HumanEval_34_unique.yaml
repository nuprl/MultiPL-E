completions:
- '    return l.sort().filter((item, index, list) => item !== list[index - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i == 0 || e != a[i - 1]);

  }

  '
- '    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);

  }

  '
- '    return [...new Set(l)];

  }

  '
- '  return l.sort().filter((item, pos, ary) => !pos || item != ary[pos - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.filter((x, i) => l.indexOf(x) === i).sort();

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => a.indexOf(v) === i);

  }

  '
- '    return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((x, i, a) => i === 0 || x !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((item, pos, ary) => !pos || item != ary[pos - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((el, i, a) => i === 0 || el !== a[i - 1]);

  }

  '
- '    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((x, i, a) => i == 0 || x != a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i == 0 || e != a[i - 1]);

  }

  '
- '    return l.sort().filter((x, i, a) => !i || x != a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i == 0 || e != a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '  return l.filter((e, i) => l.indexOf(e) === i).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((el, i, a) => i === 0 || el !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '  return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.filter((x, i) => l.indexOf(x) === i).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((el, i, a) => i === 0 || el !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => a.indexOf(v) === i);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return Array.from(new Set(l));

  }

  '
- '  return l.sort().filter((x, i, a) => !i || x != a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((x, i, a) => !i || x != a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((el, i, a) => i === 0 || el !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((item, i, l) => i == 0 || item != l[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((x, i, a) => x !== a[i - 1]);

  }

  '
- '    return l.sort().filter((item, index, array) => !index || item !== array[index
  - 1]);

  }

  '
- '    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);

  }

  '
- '    return l.filter((e, i) => l.indexOf(e) === i).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((item, pos, ary) => !pos || item != ary[pos - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- "    return l.sort().filter((item, index, array) => {\n        return !index ||\
  \ item !== array[index - 1];\n    });\n}\n"
- '    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i + 1]);

  }

  '
- '  return l.filter((v, i, a) => a.indexOf(v) === i).sort();

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => e != a[i - 1]);

  }

  '
- "    let result: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n    \
  \    if (result.indexOf(l[i]) === -1) {\n            result.push(l[i]);\n      \
  \  }\n    }\n    return result.sort();\n}\n"
- '    return l.sort().filter((el, i, a) => i === 0 || el !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i == 0 || e != a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- "    return l.sort().filter((item, index, array) => {\n        return !index ||\
  \ item !== array[index - 1];\n    });\n}\n"
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((x, i, a) => i === 0 || x !== a[i - 1]);

  }

  '
- '    return l.sort().filter((x, i, a) => !i || x != a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((x, i, a) => !i || x != a[i - 1]);

  }

  '
- '    return l.sort().filter((x, i, a) => x !== a[i - 1]);

  }

  '
- '    return l.sort().filter((el, i, a) => i === 0 || el !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i + 1]);

  }

  '
- '    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- "    return l.sort().filter((item, pos, ary) => {\n        return !pos || item !=\
  \ ary[pos - 1];\n    });\n}\n"
- '  return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => e != a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((x, i, a) => !i || x != a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);

  }

  '
- '    return l.filter((x, i) => l.indexOf(x) === i).sort((a, b) => a - b);

  }

  '
- '  return l.sort().filter((v, i, a) => v !== a[i + 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((el, i, a) => i === 0 || el !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((x, i, a) => x !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => a.indexOf(v) === i);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((x, i, a) => i === 0 || x !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((el, i, a) => i === 0 || el !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => a.indexOf(v) === i);

  }

  '
- '    return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- "    return l.sort().filter((item, index, array) => {\n        return !index ||\
  \ item !== array[index - 1];\n    });\n}\n"
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.filter((e, i) => l.indexOf(e) === i).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return Array.from(new Set(l)).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- '    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((el, i, a) => i === 0 || el !== a[i - 1]);

  }

  '
- "    return l.sort().filter((e, i, a) => {\n        return i == 0 || e != a[i -\
  \ 1];\n    });\n}\n"
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return Array.from(new Set(l));

  }

  '
- '    return l.sort().filter((x, i, a) => !i || x != a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i == 0 || e != a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => a.indexOf(v) === i);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => e != a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return Array.from(new Set(l)).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i + 1]);

  }

  '
- '    return l.sort().filter((el, i, a) => i === 0 || el !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((el, i, a) => i === 0 || el !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);

  }

  '
- '    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);

  }

  '
- '    return l.filter((e, i) => l.indexOf(e) === i).sort((a, b) => a - b);

  }

  '
- '    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i + 1]);

  }

  '
- '    return l.sort().filter((x, i, a) => !i || x != a[i - 1]);

  }

  '
- '    return l.filter((e, i) => l.indexOf(e) === i).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((el, i, a) => i === 0 || el !== a[i - 1]);

  }

  '
- '    return l.sort().filter((x, i, a) => i == 0 || x != a[i - 1]);

  }

  '
- '    return l.sort().filter((x, i, a) => x != a[i - 1]);

  }

  '
- '    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((e, i, a) => i == 0 || e != a[i - 1]);

  }

  '
- '    return l.sort().filter((a, i) => i === 0 || a !== l[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((x, i, a) => !i || x != a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => a.indexOf(v) === i);

  }

  '
- '    return l.sort().filter((v, i, a) => a.indexOf(v) === i);

  }

  '
- '    return l.sort().filter((e, i, a) => a[i - 1] !== e);

  }

  '
- '    return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- "    return l.sort().filter((item, index, array) => {\n        return !index ||\
  \ item !== array[index - 1];\n    });\n}\n"
- '    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((e, i, a) => i == 0 || e != a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => a.indexOf(v) === i);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((x, i, a) => x !== a[i - 1]);

  }

  '
- '    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);

  }

  '
- '  return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '  return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((el, i, a) => i === 0 || el !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((x, i, a) => !i || x != a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i + 1]);

  }

  '
- '    return [...new Set(l)].sort((a, b) => a - b);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);

  }

  '
- '    return l.sort().filter((v, i, a) => v !== a[i - 1]);

  }

  '
language: ts
name: HumanEval_34_unique
prompt: '//Return sorted unique elements in a list

  // >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])

  // [0, 2, 3, 5, 9, 123]

  function unique(l: number[]): number[] {

  '
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2,\
  \ 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"

name: HumanEval_155_even_odd_count
language: humaneval_to_typescript.py
prompt: "//Given an integer. return a tuple that has the number of even and odd digits\
  \ respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
  \ ==> (1, 2)\nfunction even_odd_count(num: number): [number, number] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
  \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
  \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
  \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
  \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
completions: ["  let even = 0;\n  let odd = 0;\n  let numStr = num.toString();\n \
    \ for (let i = 0; i < numStr.length; i++) {\n    if (numStr[i] % 2 === 0) {\n\
    \      even++;\n    } else {\n      odd++;\n    }\n  }\n  return [even, odd];\n\
    }\n\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "    let even: number = 0;\n    let odd: number = 0;\n    let str: string = num.toString();\n\
    \    for (let i: number = 0; i < str.length; i++) {\n        if (parseInt(str[i])\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    return [even, odd];\n}\n", "  let even = 0;\n  let odd = 0;\n\
    \  let str = num.toString();\n  for (let i = 0; i < str.length; i++) {\n    if\
    \ (str[i] % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n  }\n\
    \  return [even, odd];\n}\n", "    let even = 0;\n    let odd = 0;\n    let numStr\
    \ = num.toString();\n    for (let i = 0; i < numStr.length; i++) {\n        if\
    \ (numStr[i] % 2 === 0) {\n            even++;\n        } else {\n           \
    \ odd++;\n        }\n    }\n    return [even, odd];\n}\n", "  let even = 0;\n\
    \  let odd = 0;\n  num = Math.abs(num);\n  while (num > 0) {\n    if (num % 2\
    \ === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [even, odd];\n}\n", "    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for (let i = 0; i < str.length; i++)\
    \ {\n        if (str[i] % 2 == 0) {\n            even++;\n        } else {\n \
    \           odd++;\n        }\n    }\n    return [even, odd];\n}\n", "  let even\
    \ = 0;\n  let odd = 0;\n  let numString = num.toString();\n  for (let i = 0; i\
    \ < numString.length; i++) {\n    if (numString[i] % 2 === 0) {\n      even++;\n\
    \    } else {\n      odd++;\n    }\n  }\n  return [even, odd];\n}\n", "  let even\
    \ = 0;\n  let odd = 0;\n  let str = num.toString();\n  for (let i = 0; i < str.length;\
    \ i++) {\n    if (str[i] % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n\
    \    }\n  }\n  return [even, odd];\n}\n", "    let even = 0;\n    let odd = 0;\n\
    \    let str = num.toString();\n    for (let i = 0; i < str.length; i++) {\n \
    \       if (str[i] % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n", "    let even\
    \ = 0;\n    let odd = 0;\n    let str = num.toString();\n    for (let i = 0; i\
    \ < str.length; i++) {\n        if (str[i] % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return [even, odd];\n\
    }\n", "    let even = 0;\n    let odd = 0;\n    let numStr = num.toString();\n\
    \    for (let i = 0; i < numStr.length; i++) {\n        if (numStr[i] % 2 ===\
    \ 0) {\n            even++;\n        } else {\n            odd++;\n        }\n\
    \    }\n    return [even, odd];\n}\n", "  let even = 0;\n  let odd = 0;\n  let\
    \ str = num.toString();\n  for (let i = 0; i < str.length; i++) {\n    if (parseInt(str[i])\
    \ % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n  }\n  return\
    \ [even, odd];\n}\n", "    let even = 0;\n    let odd = 0;\n    num.toString().split('').forEach(element\
    \ => {\n        if (parseInt(element) % 2 === 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    });\n    return [even, odd];\n\
    }\n", "  let even = 0;\n  let odd = 0;\n  let numArr = num.toString().split(\"\
    \");\n  for (let i = 0; i < numArr.length; i++) {\n    if (numArr[i] % 2 === 0)\
    \ {\n      even++;\n    } else {\n      odd++;\n    }\n  }\n  return [even, odd];\n\
    }\n", "    let even = 0;\n    let odd = 0;\n    num = Math.abs(num);\n    while\
    \ (num > 0) {\n        if (num % 2 === 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num = Math.floor(num / 10);\n    }\n\
    \    return [even, odd];\n}\n", "    let even = 0;\n    let odd = 0;\n    let\
    \ str = num.toString();\n    for (let i = 0; i < str.length; i++) {\n        if\
    \ (Number(str[i]) % 2 == 0) {\n            even++;\n        } else {\n       \
    \     odd++;\n        }\n    }\n    return [even, odd];\n}\n", "    let even =\
    \ 0;\n    let odd = 0;\n    let str = num.toString();\n    for (let i = 0; i <\
    \ str.length; i++) {\n        if (parseInt(str[i]) % 2 === 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return [even, odd];\n\
    }\n", "  let even = 0;\n  let odd = 0;\n  let arr = num.toString().split(\"\"\
    );\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n  \
    \    even++;\n    } else {\n      odd++;\n    }\n  }\n  return [even, odd];\n\
    }\n\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "    let even = 0;\n    let odd = 0;\n    let numString = num.toString();\n    for\
    \ (let i = 0; i < numString.length; i++) {\n        if (parseInt(numString[i])\
    \ % 2 === 0) {\n            even++;\n        } else {\n            odd++;\n  \
    \      }\n    }\n    return [even, odd];\n}\n\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "    let even = 0;\n    let odd = 0;\n \
    \   let numStr = num.toString();\n    for (let i = 0; i < numStr.length; i++)\
    \ {\n        if (numStr[i] % 2 === 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

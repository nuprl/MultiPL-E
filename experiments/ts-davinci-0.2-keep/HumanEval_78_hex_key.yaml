name: HumanEval_78_hex_key
language: humaneval_to_typescript.py
prompt: "//You have been tasked to write a function that receives \n// a hexadecimal\
  \ number as a string and counts the number of hexadecimal \n// digits that are primes\
  \ (prime number, or a prime, is a natural number \n// greater than 1 that is not\
  \ a product of two smaller natural numbers).\n// Hexadecimal digits are 0, 1, 2,\
  \ 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers are 2, 3, 5, 7, 11, 13,\
  \ 17,...\n// So you have to determine a number of the following digits: 2, 3, 5,\
  \ 7, \n// B (=decimal 11), D (=decimal 13).\n// Note: you may assume the input is\
  \ always correct or empty string, \n// and symbols A,B,C,D,E,F are always uppercase.\n\
  // Examples:\n// For num = \"AB\" the output should be 1.\n// For num = \"1077E\"\
  \ the output should be 2.\n// For num = \"ABED1A33\" the output should be 4.\n//\
  \ For num = \"123456789ABCDEF0\" the output should be 6.\n// For num = \"2020\"\
  \ the output should be 2.\nfunction hex_key(num: string): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = hex_key;\n  assert.deepEqual(candidate(\"AB\"),1);\n\
  \  assert.deepEqual(candidate(\"1077E\"),2);\n  assert.deepEqual(candidate(\"ABED1A33\"\
  ),4);\n  assert.deepEqual(candidate(\"2020\"),2);\n  assert.deepEqual(candidate(\"\
  123456789ABCDEF0\"),6);\n  assert.deepEqual(candidate(\"112233445566778899AABBCCDDEEFF00\"\
  ),12);\n}\n\ntest();"
completions: ["    let hex_key: number = 0;\n    let hex_key_str: string = \"\";\n\
    \    let hex_key_arr: string[] = [];\n    let hex_key_arr_num: number[] = [];\n\
    \    let hex_key_arr_num_prime: number[] = [];\n    let hex_key_arr_num_prime_count:\
    \ number = 0;\n    let hex_key_arr_num_prime_count_arr: number[] = [];\n    let\
    \ hex_key_arr_num_prime_count_arr_max: number = 0;\n    let hex_key_arr_num_prime_count_arr_max_index:\
    \ number = 0;\n    let hex_key_arr_num_prime_count_arr_max_index_arr: number[]\
    \ = [];\n    let hex_key_arr_num_prime_count_arr_max_index_arr_count: number =\
    \ 0;\n    let hex_key_arr_num_prime_count_arr_max_index_arr_count_arr: number[]\
    \ = [];\n    let hex_key_arr_num_prime_count_arr_max_index_arr_count_arr_max:\
    \ number = 0;\n    let hex_key_arr_num_prime_count_arr_max_index_arr_count_arr_max_index:\
    \ number = 0;\n    let hex_key_arr_num_prime_count_arr_max_index_arr_count_arr_max_index_arr:\
    \ number[] = [];\n    let hex_key_arr_num_prime_count_arr_max_index_arr_count_arr_max_index_arr_count:\
    \ number = 0;\n    let hex_key_arr_num_prime_count_arr_max_index_arr_count_arr_max_index_arr_count_arr:\
    \ number[] = [];\n    let hex_key_arr_num_prime_count_arr_max_index_arr_count_arr_max_index_arr_count_arr_max:\
    \ number = 0;\n    let hex_key_arr_num_prime_count_arr_max_index_arr_count_arr_max_index_arr_count_arr_max_index",
  "    let count: number = 0;\n    let hex_key: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) >\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_key: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) !==\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let hex_key: number = 0;\n    for (let i: number = 0; i < num.length; i++)\
    \ {\n        switch (num[i]) {\n            case 'A':\n                hex_key\
    \ += 10;\n                break;\n            case 'B':\n                hex_key\
    \ += 11;\n                break;\n            case 'C':\n                hex_key\
    \ += 12;\n                break;\n            case 'D':\n                hex_key\
    \ += 13;\n                break;\n            case 'E':\n                hex_key\
    \ += 14;\n                break;\n            case 'F':\n                hex_key\
    \ += 15;\n                break;\n            default:\n                hex_key\
    \ += Number(num[i]);\n        }\n    }\n    return hex_key;\n}", "    let count\
    \ = 0;\n    let hex_primes = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i =\
    \ 0; i < num.length; i++) {\n        if (hex_primes.includes(num[i])) {\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_key: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) >\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let hex_key: number = 0;\n    let hex_key_arr: string[] = ['2', '3', '5', '7',\
    \ 'B', 'D'];\n    for (let i: number = 0; i < num.length; i++) {\n        if (hex_key_arr.indexOf(num[i])\
    \ !== -1) {\n            hex_key++;\n        }\n    }\n    return hex_key;\n}\n\
    console.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"\
    ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"\
    2020\"));", "    let count: number = 0;\n    let hex_array: string[] = ['2', '3',\
    \ '5', '7', 'B', 'D'];\n    for (let i: number = 0; i < num.length; i++) {\n \
    \       if (hex_array.indexOf(num[i]) > -1) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex:\
    \ string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        if (hex.indexOf(num[i]) > -1) {\n     \
    \       count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_key: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) >\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex_key: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) !==\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count = 0;\n    let hex_primes = [2, 3, 5, 7, 11, 13];\n    for (let i\
    \ = 0; i < num.length; i++) {\n        if (hex_primes.includes(parseInt(num[i],\
    \ 16))) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let hex = {\n        \"0\": 0,\n        \"1\": 1,\n        \"2\": 2,\n    \
    \    \"3\": 3,\n        \"4\": 4,\n        \"5\": 5,\n        \"6\": 6,\n    \
    \    \"7\": 7,\n        \"8\": 8,\n        \"9\": 9,\n        \"A\": 10,\n   \
    \     \"B\": 11,\n        \"C\": 12,\n        \"D\": 13,\n        \"E\": 14,\n\
    \        \"F\": 15\n    }\n    let count = 0;\n    for (let i = 0; i < num.length;\
    \ i++) {\n        if (hex[num[i]] === 2 || hex[num[i]] === 3 || hex[num[i]] ===\
    \ 5 || hex[num[i]] === 7 || hex[num[i]] === 11 || hex[num[i]] === 13) {\n    \
    \        count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_num: number = parseInt(num, 16);\n    for\
    \ (let i: number = 2; i <= hex_num; i++) {\n        if (hex_num % i == 0) {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "    let count:\
    \ number = 0;\n    let hex: string[] = ['0', '1', '2', '3', '4', '5', '6', '7',\
    \ '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let prime: string[] = ['2', '3',\
    \ '5', '7', 'B', 'D'];\n    for (let i: number = 0; i < num.length; i++) {\n \
    \       for (let j: number = 0; j < prime.length; j++) {\n            if (num[i]\
    \ === prime[j]) {\n                count++;\n            }\n        }\n    }\n\
    \    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"\
    ));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i:\
    \ number = 0; i < num.length; i++) {\n        for (let j: number = 0; j < hex.length;\
    \ j++) {\n            if (num[i] === hex[j]) {\n                count++;\n   \
    \         }\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"\
    ));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"\
    123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));", "    let count: number\
    \ = 0;\n    let hex_primes: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"\
    D\"];\n    for (let i: number = 0; i < num.length; i++) {\n        if (hex_primes.includes(num[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count = 0;\n    let hex_prime = [\"2\", \"3\", \"5\", \"7\", \"B\", \"\
    D\"];\n    for (let i = 0; i < num.length; i++) {\n        if (hex_prime.includes(num[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let hex_key: string = \"0123456789ABCDEF\";\n    let hex_value: number = 0;\n\
    \    for (let i: number = 0; i < hex_key.length; i++) {\n        if (num === hex_key[i])\
    \ {\n            hex_value = i;\n        }\n    }\n    return hex_value;\n}",
  "    let count: number = 0;\n    let hex_arr: string[] = ['0', '1', '2', '3', '4',\
    \ '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let hex_prime:\
    \ string[] = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i: number = 0; i <\
    \ num.length; i++) {\n        if (hex_prime.indexOf(num[i]) !== -1) {\n      \
    \      count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex_key: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) >\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex: string[] = [\"0\", \"1\", \"2\", \"3\"\
    , \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\"\
    , \"F\"];\n    let hex_prime: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"\
    D\"];\n    for (let i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ > -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex: string[] = [\"2\", \"3\", \"5\", \"7\"\
    , \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n       \
    \ for (let j: number = 0; j < hex.length; j++) {\n            if (num[i] === hex[j])\
    \ {\n                count++;\n            }\n        }\n    }\n    return count;\n\
    }\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"\
    ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"\
    2020\"));\n", "    let count: number = 0;\n    let hex: string[] = [\"2\", \"\
    3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex.indexOf(num[i]) !== -1) {\n            count++;\n  \
    \      }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let hex_key: string = \"0123456789ABCDEF\"\
    ;\n    let hex_value: number = 0;\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        hex_value = hex_key.indexOf(num[i]);\n        if (hex_value\
    \ > 1 && hex_value < 10) {\n            if (isPrime(hex_value)) {\n          \
    \      console.log(hex_value);\n            }\n        }\n    }\n    return 0;\n\
    }", "    let count: number = 0;\n    let hex_key: string = \"2357BDF\";\n    for\
    \ (let i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i])\
    \ > -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex: string[] = ['0', '1', '2', '3', '4', '5',\
    \ '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let primes: string[]\
    \ = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (primes.indexOf(num[i]) !== -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex_prime: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        for (let j: number = 0; j < hex_prime.length;\
    \ j++) {\n            if (num[i] === hex_prime[j]) {\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex: string[] = ['2', '3', '5', '7', 'B', 'D'];\n\
    \    for (let i: number = 0; i < num.length; i++) {\n        if (hex.indexOf(num[i])\
    \ > -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_num: string = \"0123456789ABCDEF\";\n \
    \   let prime_hex: string = \"2357BDF\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        for (let j: number = 0; j < prime_hex.length; j++) {\n     \
    \       if (num[i] == prime_hex[j]) {\n                count++;\n            }\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex_key: string = \"2357BDF\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_key.indexOf(num[i]) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex:\
    \ string[] = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C',\
    \ 'D', 'E', 'F'];\n    let primes: string[] = ['2', '3', '5', '7', 'B', 'D'];\n\
    \    for (let i: number = 0; i < num.length; i++) {\n        if (primes.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex_key: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) >\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex: string[] = [\"2\", \"3\", \"5\", \"7\"\
    , \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n       \
    \ if (hex.indexOf(num[i]) != -1) {\n            count++;\n        }\n    }\n \
    \   return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"\
    ));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex_key: string = \"2357BDF\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_key.indexOf(num[i]) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_primes:\
    \ string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        if (hex_primes.includes(num[i])) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex_arr: string[] = num.split('');\n    let\
    \ hex_num: number[] = [];\n    for (let i: number = 0; i < hex_arr.length; i++)\
    \ {\n        switch (hex_arr[i]) {\n            case 'A':\n                hex_num.push(10);\n\
    \                break;\n            case 'B':\n                hex_num.push(11);\n\
    \                break;\n            case 'C':\n                hex_num.push(12);\n\
    \                break;\n            case 'D':\n                hex_num.push(13);\n\
    \                break;\n            case 'E':\n                hex_num.push(14);\n\
    \                break;\n            case 'F':\n                hex_num.push(15);\n\
    \                break;\n            default:\n                hex_num.push(Number(hex_arr[i]));\n\
    \        }\n    }\n    for (let i: number = 0; i < hex_num.length; i++) {\n  \
    \      if (hex_num[i] === 2 || hex_num[i] === 3 || hex_num[i] === 5 || hex_num[i]\
    \ === 7 || hex_num[i] === 11 || hex_num[i] === 13) {\n            count++;\n \
    \       }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_arr:\
    \ string[] = num.split('');\n    let hex_num: number[] = [];\n    let hex_prime:\
    \ number[] = [2, 3, 5, 7, 11, 13];\n    for (let i: number = 0; i < hex_arr.length;\
    \ i++) {\n        if (hex_arr[i] == 'A') {\n            hex_num.push(10);\n  \
    \      } else if (hex_arr[i] == 'B') {\n            hex_num.push(11);\n      \
    \  } else if (hex_arr[i] == 'C') {\n            hex_num.push(12);\n        } else\
    \ if (hex_arr[i] == 'D') {\n            hex_num.push(13);\n        } else if (hex_arr[i]\
    \ == 'E') {\n            hex_num.push(14);\n        } else if (hex_arr[i] == 'F')\
    \ {\n            hex_num.push(15);\n        } else {\n            hex_num.push(parseInt(hex_arr[i]));\n\
    \        }\n    }\n    for (let j: number = 0; j < hex_num.length; j++) {\n  \
    \      for (let k: number = 0; k < hex_prime.length; k++) {\n            if (hex_num[j]\
    \ == hex_prime[k]) {\n                count++;\n            }\n        }\n   \
    \ }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_key:\
    \ string = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_key.indexOf(num[i]) !== -1) {\n            count++;\n       \
    \ }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex:\
    \ string[] = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i: number = 0; i <\
    \ num.length; i++) {\n        if (hex.indexOf(num[i]) !== -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_key:\
    \ string = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_key.indexOf(num[i]) !== -1) {\n            count++;\n       \
    \ }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_key:\
    \ string = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_key.indexOf(num[i]) !== -1) {\n            count++;\n       \
    \ }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let primes: number[] = [2, 3, 5, 7,\
    \ 11, 13];\n    let count: number = 0;\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (primes.indexOf(parseInt(num[i], 16)) > -1) {\n         \
    \   count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let hex_key: number = 0;\n    let hex_num: string = \"\";\n    for (let i:\
    \ number = 0; i < num.length; i++) {\n        if (num[i] == \"A\" || num[i] ==\
    \ \"B\" || num[i] == \"C\" || num[i] == \"D\" || num[i] == \"E\" || num[i] ==\
    \ \"F\") {\n            hex_num += num[i];\n        }\n    }\n    for (let i:\
    \ number = 0; i < hex_num.length; i++) {\n        if (hex_num[i] == \"A\") {\n\
    \            hex_key += 10;\n        }\n        if (hex_num[i] == \"B\") {\n \
    \           hex_key += 11;\n        }\n        if (hex_num[i] == \"C\") {\n  \
    \          hex_key += 12;\n        }\n        if (hex_num[i] == \"D\") {\n   \
    \         hex_key += 13;\n        }\n        if (hex_num[i] == \"E\") {\n    \
    \        hex_key += 14;\n        }\n        if (hex_num[i] == \"F\") {\n     \
    \       hex_key += 15;\n        }\n    }\n    return hex_key;\n}", "    let count:\
    \ number = 0;\n    let hex: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"\
    D\"];\n    for (let i: number = 0; i < num.length; i++) {\n        for (let j:\
    \ number = 0; j < hex.length; j++) {\n            if (num[i] === hex[j]) {\n \
    \               count++;\n            }\n        }\n    }\n    return count;\n\
    }\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"\
    ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"\
    2020\"));", "    let count: number = 0;\n    let hex_key: string = \"2357BDF\"\
    ;\n    for (let i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let hex_key: number = 0;\n    let hex_key_arr: string[] = [\"2\", \"3\", \"\
    5\", \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        for (let j: number = 0; j < hex_key_arr.length; j++) {\n            if\
    \ (num[i] === hex_key_arr[j]) {\n                hex_key++;\n            }\n \
    \       }\n    }\n    return hex_key;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_num:\
    \ string = \"0123456789ABCDEF\";\n    let hex_prime: string = \"2357BDF\";\n \
    \   for (let i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex_key: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) !=\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_digits: string[] = [\"2\", \"3\", \"5\"\
    , \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_digits.includes(num[i])) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_key:\
    \ string = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_key.indexOf(num[i]) !== -1) {\n            count++;\n       \
    \ }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex:\
    \ string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        for (let j: number = 0; j < hex.length;\
    \ j++) {\n            if (num[i] === hex[j]) {\n                count++;\n   \
    \         }\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"\
    ));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"\
    123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));", "    let count: number\
    \ = 0;\n    let hex_digits: string[] = ['0', '1', '2', '3', '4', '5', '6', '7',\
    \ '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let primes: string[] = ['2', '3',\
    \ '5', '7', 'B', 'D'];\n    for (let i: number = 0; i < num.length; i++) {\n \
    \       if (primes.indexOf(num[i]) !== -1) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let hex_key: string = \"0123456789ABCDEF\"\
    ;\n    let hex_primes: string = \"2357BDF\";\n    let count: number = 0;\n   \
    \ for (let i: number = 0; i < num.length; i++) {\n        if (hex_primes.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    console.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"\
    ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"\
    2020\"));", "    let count: number = 0;\n    let hex: string[] = ['2', '3', '5',\
    \ '7', 'B', 'D'];\n    for (let i: number = 0; i < num.length; i++) {\n      \
    \  if (hex.indexOf(num[i]) > -1) {\n            count++;\n        }\n    }\n \
    \   return count;\n}\n\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex:\
    \ string[] = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"\
    9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n    let prime: string[] = [\"\
    2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (prime.indexOf(num[i]) !== -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex_primes: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for\
    \ (let i: number = 0; i < num.length; i++) {\n        if (hex_primes.includes(num[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let hex_key: string = \"0123456789ABCDEF\";\n    let hex_prime: string = \"\
    2357BDF\";\n    let count: number = 0;\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_prime.indexOf(num[i]) !== -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex: string[] = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i: number = 0;\
    \ i < num.length; i++) {\n        if (hex.indexOf(num[i]) !== -1) {\n        \
    \    count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_primes: string[] = [\"2\", \"3\", \"5\"\
    , \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_primes.includes(num[i])) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex_num: string = \"0123456789ABCDEF\";\n    let hex_prime: string = \"2357BDF\"\
    ;\n    for (let i: number = 0; i < num.length; i++) {\n        for (let j: number\
    \ = 0; j < hex_prime.length; j++) {\n            if (num[i] === hex_prime[j])\
    \ {\n                count++;\n            }\n        }\n    }\n    return count;\n\
    }\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"\
    ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"\
    2020\"));\n", "    let count: number = 0;\n    let hex_primes: string[] = [\"\
    2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_primes.includes(num[i])) {\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let hex_key: number = 0;\n    let\
    \ hex_key_arr: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for\
    \ (let i: number = 0; i < num.length; i++) {\n        for (let j: number = 0;\
    \ j < hex_key_arr.length; j++) {\n            if (num[i] === hex_key_arr[j]) {\n\
    \                hex_key++;\n            }\n        }\n    }\n    return hex_key;\n\
    }\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"\
    ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"\
    2020\"));\n", "    let count: number = 0;\n    let hex: string[] = [\"0\", \"\
    1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"\
    C\", \"D\", \"E\", \"F\"];\n    let prime: string[] = [\"2\", \"3\", \"5\", \"\
    7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n    \
    \    if (prime.indexOf(num[i]) !== -1) {\n            count++;\n        }\n  \
    \  }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i:\
    \ number = 0; i < num.length; i++) {\n        if (hex.indexOf(num[i]) !== -1)\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_key: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) !==\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_key: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) >\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_key: string = '2357BDF';\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) !==\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_primes: string[] = [\"2\", \"3\", \"5\"\
    , \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_primes.includes(num[i])) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_primes:\
    \ string[] = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i: number = 0; i <\
    \ num.length; i++) {\n        if (hex_primes.indexOf(num[i]) > -1) {\n       \
    \     count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let hex_key: string = \"0123456789ABCDEF\";\n    let hex_value: number = 0;\n\
    \    for (let i: number = 0; i < num.length; i++) {\n        hex_value += hex_key.indexOf(num[i]);\n\
    \    }\n    return hex_value;\n}", "    let hex_key: string = \"0123456789ABCDEF\"\
    ;\n    let hex_prime: string = \"2357BDF\";\n    let count: number = 0;\n    for\
    \ (let i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex: string[] = [\"2\", \"3\", \"5\", \"7\"\
    , \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n       \
    \ for (let j: number = 0; j < hex.length; j++) {\n            if (num[i] === hex[j])\
    \ {\n                count++;\n            }\n        }\n    }\n    return count;\n\
    }\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"\
    ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"\
    2020\"));", "    let count: number = 0;\n    let hex_prime: string[] = [\"2\"\
    , \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_prime.indexOf(num[i]) !== -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_primes:\
    \ string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        if (hex_primes.includes(num[i])) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_primes: string[] = [\"2\", \"3\", \"5\"\
    , \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_primes.includes(num[i])) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_arr:\
    \ string[] = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"\
    9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n    let prime_arr: string[] =\
    \ [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i <\
    \ num.length; i++) {\n        if (prime_arr.indexOf(num[i]) > -1) {\n        \
    \    count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex_arr: string[] = num.split('');\n    let\
    \ hex_num: number[] = [];\n    for (let i: number = 0; i < hex_arr.length; i++)\
    \ {\n        switch (hex_arr[i]) {\n            case 'A':\n                hex_num.push(10);\n\
    \                break;\n            case 'B':\n                hex_num.push(11);\n\
    \                break;\n            case 'C':\n                hex_num.push(12);\n\
    \                break;\n            case 'D':\n                hex_num.push(13);\n\
    \                break;\n            case 'E':\n                hex_num.push(14);\n\
    \                break;\n            case 'F':\n                hex_num.push(15);\n\
    \                break;\n            default:\n                hex_num.push(parseInt(hex_arr[i]));\n\
    \                break;\n        }\n    }\n    for (let i: number = 0; i < hex_num.length;\
    \ i++) {\n        if (hex_num[i] === 2 || hex_num[i] === 3 || hex_num[i] === 5\
    \ || hex_num[i] === 7 || hex_num[i] === 11 || hex_num[i] === 13) {\n         \
    \   count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"\
    ));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"\
    123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number\
    \ = 0;\n    let hex: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n\
    \    for (let i: number = 0; i < num.length; i++) {\n        if (hex.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let hex_key: string = \"0123456789ABCDEF\";\n    let hex_val: number[] = [0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n    let hex_dict: object\
    \ = {};\n    for (let i: number = 0; i < hex_key.length; i++) {\n        hex_dict[hex_key[i]]\
    \ = hex_val[i];\n    }\n    return hex_dict;\n}", "    let hex_primes: number\
    \ = 0;\n    let hex_digits: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"\
    D\"];\n    for (let i: number = 0; i < num.length; i++) {\n        if (hex_digits.indexOf(num[i])\
    \ !== -1) {\n            hex_primes++;\n        }\n    }\n    return hex_primes;\n\
    }\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"\
    ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"\
    2020\"));", "    let count: number = 0;\n    let hex_num: string = \"0123456789ABCDEF\"\
    ;\n    let hex_prime: string = \"2357BDF\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_prime.indexOf(num[i]) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex_prime: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count = 0;\n    const hex_primes = [2, 3, 5, 7, 11, 13];\n    for (let\
    \ i = 0; i < num.length; i++) {\n        if (hex_primes.includes(parseInt(num[i],\
    \ 16))) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_primes: string[] = ['2', '3', '5', '7',\
    \ 'B', 'D'];\n    for (let i: number = 0; i < num.length; i++) {\n        if (hex_primes.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    console.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"\
    ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"\
    2020\"));", "    let count: number = 0;\n    let hex_key: string = \"2357BDF\"\
    ;\n    for (let i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let hex_primes: number = 0;\n    let hex_values: string[] = [\"2\", \"3\",\
    \ \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++)\
    \ {\n        if (hex_values.indexOf(num[i]) !== -1) {\n            hex_primes++;\n\
    \        }\n    }\n    return hex_primes;\n}\nconsole.log(hex_key(\"AB\"));\n\
    console.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"\
    123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number\
    \ = 0;\n    let hex_primes: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"\
    D\"];\n    for (let i: number = 0; i < num.length; i++) {\n        if (hex_primes.includes(num[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "  let count: number = 0;\n  let hex: string[] = [\"0\", \"1\", \"2\", \"3\", \"\
    4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"\
    F\"];\n  let hex_prime: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n\
    \  for (let i: number = 0; i < num.length; i++) {\n    if (hex_prime.indexOf(num[i])\
    \ !== -1) {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_arr: string[] = num.split('');\n    let\
    \ hex_num: number[] = [];\n    let hex_prime: number[] = [2, 3, 5, 7, 11, 13];\n\
    \    for (let i = 0; i < hex_arr.length; i++) {\n        switch (hex_arr[i]) {\n\
    \            case 'A':\n                hex_num.push(10);\n                break;\n\
    \            case 'B':\n                hex_num.push(11);\n                break;\n\
    \            case 'C':\n                hex_num.push(12);\n                break;\n\
    \            case 'D':\n                hex_num.push(13);\n                break;\n\
    \            case 'E':\n                hex_num.push(14);\n                break;\n\
    \            case 'F':\n                hex_num.push(15);\n                break;\n\
    \            default:\n                hex_num.push(parseInt(hex_arr[i]));\n \
    \               break;\n        }\n    }\n    for (let i = 0; i < hex_num.length;\
    \ i++) {\n        if (hex_prime.includes(hex_num[i])) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex_key: string = \"2357BDF\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_key.indexOf(num[i]) !== -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_key:\
    \ string = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_key.indexOf(num[i]) > -1) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i:\
    \ number = 0; i < num.length; i++) {\n        if (hex.indexOf(num[i]) !== -1)\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex: string[] = ['2', '3', '5', '7', 'B', 'D'];\n\
    \    for (let i: number = 0; i < num.length; i++) {\n        if (hex.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    console.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"\
    ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"\
    2020\"));", "    let hex_key: number = 0;\n    let hex_key_arr: string[] = [\"\
    2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_key_arr.indexOf(num[i]) !== -1) {\n            hex_key++;\n\
    \        }\n    }\n    return hex_key;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex:\
    \ string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        if (hex.indexOf(num[i]) > -1) {\n     \
    \       count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex_key: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) >\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex: string[] = [\"2\", \"3\", \"5\", \"7\"\
    , \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n       \
    \ if (hex.indexOf(num[i]) !== -1) {\n            count++;\n        }\n    }\n\
    \    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"\
    ));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_key:\
    \ string = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_key.indexOf(num[i]) !== -1) {\n            count++;\n       \
    \ }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_key:\
    \ string = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_key.indexOf(num[i]) !== -1) {\n            count++;\n       \
    \ }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex:\
    \ string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        if (hex.indexOf(num[i]) !== -1) {\n   \
    \         count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex_primes: string[] = [\"2\", \"3\", \"5\"\
    , \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_primes.includes(num[i])) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i:\
    \ number = 0; i < num.length; i++) {\n        if (hex.indexOf(num[i]) != -1) {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let hex_key: number = 0;\n    let hex_key_arr: string[] = [\"0\", \"1\", \"\
    2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"\
    D\", \"E\", \"F\"];\n    for (let i: number = 0; i < hex_key_arr.length; i++)\
    \ {\n        if (num == hex_key_arr[i]) {\n            hex_key = i;\n        }\n\
    \    }\n    return hex_key;\n}", "    let count: number = 0;\n    let hex_primes:\
    \ string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        if (hex_primes.includes(num[i])) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex_digits: string[] = [\"2\", \"3\", \"5\"\
    , \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_digits.includes(num[i])) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_key:\
    \ string = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_key.indexOf(num[i]) !== -1) {\n            count++;\n       \
    \ }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let hex_key: string = \"0123456789ABCDEF\"\
    ;\n    let hex_prime: string = \"2357BDF\";\n    let count: number = 0;\n    for\
    \ (let i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ > -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex: string[] = [\"2\", \"3\", \"5\", \"7\"\
    , \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n       \
    \ if (hex.indexOf(num[i]) > -1) {\n            count++;\n        }\n    }\n  \
    \  return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"\
    ));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let hex_key: number = 0;\n    let\
    \ hex_key_string: string = \"\";\n    let hex_key_array: string[] = [];\n    let\
    \ hex_key_array_length: number = 0;\n    let hex_key_array_length_string: string\
    \ = \"\";\n    let hex_key_array_length_string_length: number = 0;\n    let hex_key_array_length_string_length_string:\
    \ string = \"\";\n    let hex_key_array_length_string_length_string_length: number\
    \ = 0;\n    let hex_key_array_length_string_length_string_length_string: string\
    \ = \"\";\n    let hex_key_array_length_string_length_string_length_string_length:\
    \ number = 0;\n    let hex_key_array_length_string_length_string_length_string_length_string:\
    \ string = \"\";\n    let hex_key_array_length_string_length_string_length_string_length_string_length:\
    \ number = 0;\n    let hex_key_array_length_string_length_string_length_string_length_string_length_string:\
    \ string = \"\";\n    let hex_key_array_length_string_length_string_length_string_length_string_length_string_length:\
    \ number = 0;\n    let hex_key_array_length_string_length_string_length_string_length_string_length_string_length_string:\
    \ string = \"\";\n    let hex_key_array_length_string_length_string_length_string_length_string_length_string_length_string_length:\
    \ number = 0;\n    let hex_key_array_length_string_length_string_length_string_length_string_length_string_length_string_length_string:\
    \ string = \"\";\n    let hex_key_array_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length:\
    \ number = 0;\n    let hex_key_array_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string",
  "    let count: number = 0;\n    let hex_key: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) !==\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex: string[] = [\"2\", \"3\", \"5\", \"7\"\
    , \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n       \
    \ if (hex.indexOf(num[i]) > -1) {\n            count++;\n        }\n    }\n  \
    \  return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"\
    ));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex_primes: number[] = [2, 3, 5, 7, 11, 13];\n    let hex_digits: string[] =\
    \ ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',\
    \ 'F'];\n    let hex_digits_decimal: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15];\n    let hex_digits_primes: number[] = [];\n    for\
    \ (let i = 0; i < hex_digits.length; i++) {\n        for (let j = 0; j < hex_primes.length;\
    \ j++) {\n            if (hex_digits_decimal[i] === hex_primes[j]) {\n       \
    \         hex_digits_primes.push(hex_digits[i]);\n            }\n        }\n \
    \   }\n    for (let i = 0; i < num.length; i++) {\n        for (let j = 0; j <\
    \ hex_digits_primes.length; j++) {\n            if (num[i] === hex_digits_primes[j])\
    \ {\n                count++;\n            }\n        }\n    }\n    return count;\n\
    }\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"\
    ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"\
    2020\"));", "    let hex_key: number = 0;\n    let hex_key_array: string[] = [\"\
    2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_key_array.indexOf(num[i]) !== -1) {\n            hex_key++;\n\
    \        }\n    }\n    return hex_key;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex: string[] = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"\
    8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n    let hex_num: number[]\
    \ = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n    let prime: number[]\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,", "    let count:\
    \ number = 0;\n    let hex_key: string = \"2357BDF\";\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) > -1) {\n \
    \           count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let hex_digits: string[] = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\
    \ 'A', 'B', 'C', 'D', 'E', 'F'];\n    let primes: string[] = ['2', '3', '5', '7',\
    \ 'B', 'D'];\n    let count: number = 0;\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (primes.indexOf(num[i]) !== -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_primes:\
    \ string[] = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i: number = 0; i <\
    \ num.length; i++) {\n        if (hex_primes.indexOf(num[i]) !== -1) {\n     \
    \       count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex: string[] = [\"2\", \"3\", \"5\", \"7\"\
    , \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n       \
    \ if (hex.indexOf(num[i]) != -1) {\n            count++;\n        }\n    }\n \
    \   return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"\
    ));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count = 0;\n    let hex_key:\
    \ any = {\n        '2': true,\n        '3': true,\n        '5': true,\n      \
    \  '7': true,\n        'B': true,\n        'D': true\n    }\n    for (let i =\
    \ 0; i < num.length; i++) {\n        if (hex_key[num[i]]) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(hex_key('AB'));\nconsole.log(hex_key('1077E'));\n\
    console.log(hex_key('ABED1A33'));\nconsole.log(hex_key('123456789ABCDEF0'));\n\
    console.log(hex_key('2020'));", "    let count: number = 0;\n    let hex: string[]\
    \ = num.split('');\n    let hex_num: number[] = [];\n    for (let i: number =\
    \ 0; i < hex.length; i++) {\n        switch (hex[i]) {\n            case 'A':\n\
    \                hex_num.push(10);\n                break;\n            case 'B':\n\
    \                hex_num.push(11);\n                break;\n            case 'C':\n\
    \                hex_num.push(12);\n                break;\n            case 'D':\n\
    \                hex_num.push(13);\n                break;\n            case 'E':\n\
    \                hex_num.push(14);\n                break;\n            case 'F':\n\
    \                hex_num.push(15);\n                break;\n            default:\n\
    \                hex_num.push(Number(hex[i]));\n                break;\n     \
    \   }\n    }\n    for (let i: number = 0; i < hex_num.length; i++) {\n       \
    \ if (hex_num[i] === 2 || hex_num[i] === 3 || hex_num[i] === 5 || hex_num[i] ===\
    \ 7 || hex_num[i] === 11 || hex_num[i] === 13) {\n            count++;\n     \
    \   }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_num:\
    \ string = \"0123456789ABCDEF\";\n    let hex_prime: string = \"2357BDF\";\n \
    \   for (let i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    console.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"\
    ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"\
    2020\"));", "  let count: number = 0;\n  let hex: string[] = [\"2\", \"3\", \"\
    5\", \"7\", \"B\", \"D\"];\n  for (let i: number = 0; i < num.length; i++) {\n\
    \    if (hex.indexOf(num[i]) !== -1) {\n      count++;\n    }\n  }\n  return count;\n\
    }\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"\
    ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"\
    2020\"));", "    let count: number = 0;\n    let hex_prime: string[] = [\"2\"\
    , \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_prime.indexOf(num[i]) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex_digits: string[] = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        if (hex_digits.indexOf(num[i]) !== -1)\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex: string[] = ['2', '3', '5', '7', 'B', 'D'];\n\
    \    for (let i: number = 0; i < num.length; i++) {\n        if (hex.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    console.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"\
    ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"\
    2020\"));", "    let count: number = 0;\n    let hex: string[] = [\"0\", \"1\"\
    , \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\"\
    , \"D\", \"E\", \"F\"];\n    let prime: string[] = [\"2\", \"3\", \"5\", \"7\"\
    , \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n       \
    \ for (let j: number = 0; j < hex.length; j++) {\n            if (num[i] === hex[j])\
    \ {\n                for (let k: number = 0; k < prime.length; k++) {\n      \
    \              if (num[i] === prime[k]) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"\
    ));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_key:\
    \ string = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_key.indexOf(num[i]) > -1) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_prime:\
    \ string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i]) !== -1) {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let hex_key: number = 0;\n    for (let i: number = 0; i < num.length; i++)\
    \ {\n        if (num[i] === 'A' || num[i] === 'B' || num[i] === 'D') {\n     \
    \       hex_key++;\n        }\n    }\n    return hex_key;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let hex_key: string = \"0123456789ABCDEF\";\n    let hex_value: number = 0;\n\
    \    for (let i: number = 0; i < num.length; i++) {\n        hex_value += hex_key.indexOf(num[i]);\n\
    \    }\n    return hex_value;\n}", "    let hex_key: number = 0;\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (num[i] == \"2\" || num[i]\
    \ == \"3\" || num[i] == \"5\" || num[i] == \"7\" || num[i] == \"B\" || num[i]\
    \ == \"D\") {\n            hex_key++;\n        }\n    }\n    return hex_key;\n\
    }\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"\
    ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"\
    2020\"));\n", "    let count: number = 0;\n    let hex_key: string = \"2357BDF\"\
    ;\n    for (let i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex_array: string[] = [\"2\", \"3\", \"5\"\
    , \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_array.includes(num[i])) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_key:\
    \ string = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_key.indexOf(num[i]) > -1) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_primes:\
    \ string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        if (hex_primes.includes(num[i])) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex_arr: string[] = num.split('');\n    for\
    \ (let i: number = 0; i < hex_arr.length; i++) {\n        if (hex_arr[i] === '2'\
    \ || hex_arr[i] === '3' || hex_arr[i] === '5' || hex_arr[i] === '7' || hex_arr[i]\
    \ === 'B' || hex_arr[i] === 'D') {\n            count++;\n        }\n    }\n \
    \   return count;\n}\n\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let hex_key: string = \"0123456789ABCDEF\"\
    ;\n    let hex_val: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15];\n    let hex_obj: object = {};\n    for (let i: number = 0; i < hex_key.length;\
    \ i++) {\n        hex_obj[hex_key[i]] = hex_val[i];\n    }\n    return hex_obj;\n\
    }", "    let hex_key: { [key: string]: number } = {\n        \"0\": 0,\n     \
    \   \"1\": 1,\n        \"2\": 2,\n        \"3\": 3,\n        \"4\": 4,\n     \
    \   \"5\": 5,\n        \"6\": 6,\n        \"7\": 7,\n        \"8\": 8,\n     \
    \   \"9\": 9,\n        \"A\": 10,\n        \"B\": 11,\n        \"C\": 12,\n  \
    \      \"D\": 13,\n        \"E\": 14,\n        \"F\": 15\n    }\n    return hex_key[num];\n\
    }", "    let count: number = 0;\n    let hex_num: string = \"0123456789ABCDEF\"\
    ;\n    let hex_prime: string = \"2357BDF\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_prime.indexOf(num[i]) !== -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex_key: string = \"2357BDF\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_key.indexOf(num[i]) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_key:\
    \ string = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_key.indexOf(num[i]) > -1) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_key:\
    \ string = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_key.indexOf(num[i]) > -1) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_key:\
    \ string = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_key.indexOf(num[i]) > -1) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex_num: string = \"\";\n    let hex_arr: string[] = [\"0\", \"1\", \"2\", \"\
    3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"\
    E\", \"F\"];\n    let hex_prime: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\"\
    , \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n        hex_num\
    \ = num[i];\n        if (hex_prime.indexOf(hex_num) !== -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let hex_key: string = \"0123456789ABCDEF\"\
    ;\n    let hex_val: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15];\n    let hex_dict: { [key: string]: number } = {};\n    for (let i\
    \ = 0; i < hex_key.length; i++) {\n        hex_dict[hex_key[i]] = hex_val[i];\n\
    \    }\n    return hex_dict[num];\n}", "    let count: number = 0;\n    let hex_primes:\
    \ string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        if (hex_primes.includes(num[i])) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let hex_key: string = \"0123456789ABCDEF\";\n    let hex_value: number = 0;\n\
    \    for (let i: number = 0; i < hex_key.length; i++) {\n        if (num === hex_key[i])\
    \ {\n            hex_value = i;\n        }\n    }\n    return hex_value;\n}\n",
  "    let hex_key: number = 0;\n    let hex_key_arr: string[] = [\"2\", \"3\", \"\
    5\", \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_key_arr.indexOf(num[i]) !== -1) {\n            hex_key++;\n \
    \       }\n    }\n    return hex_key;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_key:\
    \ string = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_key.indexOf(num[i]) !== -1) {\n            count++;\n       \
    \ }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex:\
    \ string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        if (hex.indexOf(num[i]) !== -1) {\n   \
    \         count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count = 0;\n    let hex_key = ['2', '3', '5', '7', 'B', 'D'];\n    for\
    \ (let i = 0; i < num.length; i++) {\n        if (hex_key.includes(num[i])) {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let hex_key: string = \"0123456789ABCDEF\";\n    let hex_value: number = 0;\n\
    \    for (let i: number = 0; i < hex_key.length; i++) {\n        if (num === hex_key[i])\
    \ {\n            hex_value = i;\n        }\n    }\n    return hex_value;\n}",
  "    let count: number = 0;\n    let hex: string[] = [\"2\", \"3\", \"5\", \"7\"\
    , \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n       \
    \ for (let j: number = 0; j < hex.length; j++) {\n            if (num[i] === hex[j])\
    \ {\n                count++;\n            }\n        }\n    }\n    return count;\n\
    }\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"\
    ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"\
    2020\"));", "    let count: number = 0;\n    let hex_digits: string[] = ['0',\
    \ '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n\
    \    let prime_digits: string[] = ['2', '3', '5', '7', 'B', 'D'];\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (prime_digits.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    console.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"\
    ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"\
    2020\"));", "    let count: number = 0;\n    let hex_prime: string[] = [\"2\"\
    , \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_prime.indexOf(num[i]) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let hex_key: string = \"0123456789ABCDEF\"\
    ;\n    let hex_value: number = 0;\n    for (let i: number = 0; i < hex_key.length;\
    \ i++) {\n        if (num === hex_key[i]) {\n            hex_value = i;\n    \
    \    }\n    }\n    return hex_value;\n}", "    let count: number = 0;\n    let\
    \ hex_key: string = \"2357BDF\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_key.indexOf(num[i]) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_num:\
    \ string = \"\";\n    let hex_arr: string[] = [\"A\", \"B\", \"C\", \"D\", \"\
    E\", \"F\"];\n    for (let i: number = 0; i < num.length; i++) {\n        if (hex_arr.indexOf(num[i])\
    \ !== -1) {\n            hex_num += (hex_arr.indexOf(num[i]) + 10);\n        }\
    \ else {\n            hex_num += num[i];\n        }\n    }\n    let hex_num_int:\
    \ number = parseInt(hex_num, 16);\n    for (let i: number = 2; i <= hex_num_int;\
    \ i++) {\n        if (hex_num_int % i === 0) {\n            count++;\n       \
    \ }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex: string[] = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i: number = 0;\
    \ i < num.length; i++) {\n        if (hex.indexOf(num[i]) > -1) {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"\
    ));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"\
    123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number\
    \ = 0;\n    let hex: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n\
    \    for (let i: number = 0; i < num.length; i++) {\n        for (let j: number\
    \ = 0; j < hex.length; j++) {\n            if (num[i] === hex[j]) {\n        \
    \        count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex_digits: string[] = ['2', '3', '5', '7',\
    \ 'B', 'D'];\n    for (let i: number = 0; i < num.length; i++) {\n        if (hex_digits.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    console.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"\
    ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"\
    2020\"));", "    let count: number = 0;\n    let hex_primes: string[] = [\"2\"\
    , \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_primes.includes(num[i])) {\n            count++;\n \
    \       }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let hex_key: string = \"0123456789ABCDEF\"\
    ;\n    let hex_prime: string = \"2357BDF\";\n    let count: number = 0;\n    for\
    \ (let i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex_digits: string[] = [\"2\", \"3\", \"5\"\
    , \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_digits.includes(num[i])) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex_key: string = \"2357BDF\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_key.indexOf(num[i]) !== -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_array:\
    \ string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        if (hex_array.includes(num[i])) {\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_key: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) !==\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_primes: string[] = [\"2\", \"3\", \"5\"\
    , \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_primes.includes(num[i])) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex_digits: string[] = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"\
    7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n    let hex_primes:\
    \ string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        if (hex_primes.indexOf(num[i]) > -1) {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_key: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) >\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex_key: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) !==\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_num: string = \"\";\n    for (let i: number\
    \ = 0; i < num.length; i++) {\n        hex_num = num[i];\n        if (hex_num\
    \ === \"2\" || hex_num === \"3\" || hex_num === \"5\" || hex_num === \"7\" ||\
    \ hex_num === \"B\" || hex_num === \"D\") {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex_primes: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for\
    \ (let i: number = 0; i < num.length; i++) {\n        if (hex_primes.includes(num[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_num: string = \"0123456789ABCDEF\";\n \
    \   let hex_prime: string = \"2357BDF\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        for (let j: number = 0; j < hex_prime.length; j++) {\n     \
    \       if (num[i] === hex_prime[j]) {\n                count++;\n           \
    \ }\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex: string[] = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n    for (let i:\
    \ number = 0; i < num.length; i++) {\n        if (hex.indexOf(num[i]) !== -1)\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex_primes: string[] = ['2', '3', '5', '7',\
    \ 'B', 'D'];\n    for (let i: number = 0; i < num.length; i++) {\n        if (hex_primes.indexOf(num[i])\
    \ > -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_nums: string[] = ['2', '3', '5', '7', 'B',\
    \ 'D'];\n    for (let i: number = 0; i < num.length; i++) {\n        if (hex_nums.indexOf(num[i])\
    \ > -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_primes: string[] = [\"2\", \"3\", \"5\"\
    , \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_primes.includes(num[i])) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex: string[] = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"\
    8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n    let prime: string[]\
    \ = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i\
    \ < num.length; i++) {\n        for (let j: number = 0; j < hex.length; j++) {\n\
    \            if (num[i] === hex[j]) {\n                for (let k: number = 0;\
    \ k < prime.length; k++) {\n                    if (num[i] === prime[k]) {\n \
    \                       count++;\n                    }\n                }\n \
    \           }\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let hex_prime_count: number = 0;\n    let hex_prime_arr: string[] = [\"2\"\
    , \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_prime_arr.includes(num[i])) {\n            hex_prime_count++;\n\
    \        }\n    }\n    return hex_prime_count;\n}\n\nconsole.log(hex_key(\"AB\"\
    ));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"\
    123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));", "    let count: number\
    \ = 0;\n    let hex: string[] = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"\
    6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n    let\
    \ hex_prime: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        for (let j: number = 0; j < hex_prime.length;\
    \ j++) {\n            if (num[i] == hex_prime[j]) {\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_num: string = \"\";\n    let hex_arr: string[]\
    \ = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"\
    A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n    let hex_prime: string[] = [\"2\"\
    , \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        hex_num = num[i];\n        if (hex_prime.indexOf(hex_num) !==\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_key: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) !==\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let result: number = 0;\n    let hex: string[] = [\"0\", \"1\", \"2\", \"3\"\
    , \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\"\
    , \"F\"];\n    let hex_prime: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"\
    D\"];\n    for (let i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ > -1) {\n            result++;\n        }\n    }\n    return result;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_prime: string[] = ['2', '3', '5', '7',\
    \ 'B', 'D'];\n    for (let i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex_key: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) !==\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));",
  "    let count: number = 0;\n    let hex: string[] = ['0', '1', '2', '3', '4', '5',\
    \ '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let primes: string[]\
    \ = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (primes.indexOf(num[i]) !== -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex_prime: string[] = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ > -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let hex_key: number = 0;\n    let hex_key_arr: string[] = [\"0\", \"1\", \"\
    2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"\
    D\", \"E\", \"F\"];\n    let hex_key_prime: string[] = [\"2\", \"3\", \"5\", \"\
    7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n    \
    \    for (let j: number = 0; j < hex_key_prime.length; j++) {\n            if\
    \ (num[i] === hex_key_prime[j]) {\n                hex_key++;\n            }\n\
    \        }\n    }\n    return hex_key;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex:\
    \ string[] = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i: number = 0; i <\
    \ num.length; i++) {\n        for (let j: number = 0; j < hex.length; j++) {\n\
    \            if (num[i] === hex[j]) {\n                count++;\n            }\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "  let count: number = 0;\n  let hex_key:\
    \ string = \"2357BDF\";\n  for (let i: number = 0; i < num.length; i++) {\n  \
    \  if (hex_key.indexOf(num[i]) !== -1) {\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"1077E\"));\n\
    console.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let hex_primes: number = 0;\n    let\
    \ hex_digits: string[] = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A',\
    \ 'B', 'C', 'D', 'E', 'F'];\n    let hex_primes_digits: string[] = ['2', '3',\
    \ '5', '7', 'B', 'D'];\n    for (let i: number = 0; i < num.length; i++) {\n \
    \       for (let j: number = 0; j < hex_primes_digits.length; j++) {\n       \
    \     if (num[i] === hex_primes_digits[j]) {\n                hex_primes++;\n\
    \            }\n        }\n    }\n    return hex_primes;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex_prime: string[] = [\"2\", \"3\", \"5\"\
    , \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_prime.indexOf(num[i]) > -1) {\n            count++;\n       \
    \ }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count = 0;\n    let hex_prime\
    \ = ['2', '3', '5', '7', 'B', 'D'];\n    for (let i = 0; i < num.length; i++)\
    \ {\n        if (hex_prime.includes(num[i])) {\n            count++;\n       \
    \ }\n    }\n    return count;\n}\n\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_arr:\
    \ string[] = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C',\
    \ 'D', 'E', 'F'];\n    let hex_prime: string[] = ['2', '3', '5', '7', 'B', 'D'];\n\
    \    for (let i: number = 0; i < num.length; i++) {\n        if (hex_prime.indexOf(num[i])\
    \ !== -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex_key: string = \"2357BDF\";\n    for (let\
    \ i: number = 0; i < num.length; i++) {\n        if (hex_key.indexOf(num[i]) !==\
    \ -1) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"\
    AB\"));\nconsole.log(hex_key(\"1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\n\
    console.log(hex_key(\"123456789ABCDEF0\"));\nconsole.log(hex_key(\"2020\"));\n",
  "    let count: number = 0;\n    let hex_primes: string[] = [\"2\", \"3\", \"5\"\
    , \"7\", \"B\", \"D\"];\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_primes.includes(num[i])) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));", "    let count: number = 0;\n    let hex_key:\
    \ string = \"2357BDF\";\n    for (let i: number = 0; i < num.length; i++) {\n\
    \        if (hex_key.indexOf(num[i]) != -1) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n", "    let count: number = 0;\n    let\
    \ hex_key: string = \"2357BDF\";\n    for (let i: number = 0; i < num.length;\
    \ i++) {\n        if (hex_key.indexOf(num[i]) > -1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(hex_key(\"AB\"));\nconsole.log(hex_key(\"\
    1077E\"));\nconsole.log(hex_key(\"ABED1A33\"));\nconsole.log(hex_key(\"123456789ABCDEF0\"\
    ));\nconsole.log(hex_key(\"2020\"));\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

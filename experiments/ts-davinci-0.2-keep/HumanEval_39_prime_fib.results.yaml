language: ts
name: HumanEval_39_prime_fib
results:
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let a = 1;\n    let b = 1;\n    let count = 0;\n    let\
    \ fib = 0;\n    while (count < n) {\n        fib = a + b;\n        a = b;\n  \
    \      b = fib;\n        if (is_prime(fib)) {\n            count++;\n        }\n\
    \    }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpuwgyvitm.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738664
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_list: number[] = [2, 3];\n    let prime_fib_list:\
    \ number[] = [2, 3];\n    let i: number = 2;\n    while (prime_fib_list.length\
    \ < n) {\n        fib_list.push(fib_list[i - 1] + fib_list[i - 2]);\n        if\
    \ (is_prime(fib_list[i])) {\n            prime_fib_list.push(fib_list[i]);\n \
    \       }\n        i += 1;\n    }\n    return prime_fib_list[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3ueuwz9p.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738664
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let a = 1;\n    let b = 1;\n    let c = 2;\n    let i\
    \ = 3;\n    while (i < n) {\n        a = b;\n        b = c;\n        c = a + b;\n\
    \        i++;\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpasie1dti.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpasie1dti.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738664
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num = fib(n);\n    while (!is_prime(fib_num))\
    \ {\n        fib_num = fib(n);\n        n++;\n    }\n    return fib_num;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphfdpqvep.ts(13,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmphfdpqvep.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmphfdpqvep.ts(15,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738624
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_numbers(n);\n\
    \    let result = 0;\n    for (let i = 0; i < fib.length; i++) {\n        for\
    \ (let j = 0; j < prime.length; j++) {\n            if (fib[i] === prime[j]) {\n\
    \                result = fib[i];\n            }\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7rj2bx87.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp7rj2bx87.ts(14,17): error TS2304: Cannot find name ''prime_numbers''.

    '
  timestamp: 1659738627
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_numbers(n);\n\
    \    let result = 0;\n    for (let i = 0; i < fib.length; i++) {\n        for\
    \ (let j = 0; j < prime.length; j++) {\n            if (fib[i] === prime[j]) {\n\
    \                result = fib[i];\n            }\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7rj2bx87.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp7rj2bx87.ts(14,17): error TS2304: Cannot find name ''prime_numbers''.

    '
  timestamp: 1659738627
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num = fib(n);\n    while (!is_prime(fib_num))\
    \ {\n        fib_num = fib(++n);\n    }\n    return fib_num;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpepg12mpg.ts(13,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpepg12mpg.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpepg12mpg.ts(15,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_numbers(n);\n\
    \    let i = 0;\n    let j = 0;\n    while (i < fib.length && j < prime.length)\
    \ {\n        if (fib[i] === prime[j]) {\n            return fib[i];\n        }\
    \ else if (fib[i] < prime[j]) {\n            i++;\n        } else {\n        \
    \    j++;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpot90rrtm.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpot90rrtm.ts(14,17): error TS2304: Cannot find name ''prime_numbers''.

    '
  timestamp: 1659738663
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib_num = fib(n);\n  while (!is_prime(fib_num)) {\n\
    \    fib_num = fib(n);\n    n += 1;\n  }\n  return fib_num;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmvzpo90a.ts(13,17): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpmvzpo90a.ts(14,11): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpmvzpo90a.ts(15,15): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738663
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n        i++;\n\
    \    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpl8l9yu99.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl8l9yu99.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number = 1;\n    let fib_prev: number = 1;\n\
    \    let fib_prev_prev: number = 0;\n    let count: number = 0;\n    while (count\
    \ < n) {\n        if (is_prime(fib)) {\n            count++;\n        }\n    \
    \    fib_prev_prev = fib_prev;\n        fib_prev = fib;\n        fib = fib_prev\
    \ + fib_prev_prev;\n    }\n    return fib;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzw7n8k5l.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 1;\n  let fib_prev: number = 1;\n  let\
    \ counter: number = 2;\n  while (counter < n) {\n    let fib_next: number = fib\
    \ + fib_prev;\n    fib_prev = fib;\n    fib = fib_next;\n    if (is_prime(fib))\
    \ {\n      counter += 1;\n    }\n  }\n  return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp32po63ga.ts(20,9): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738664
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_nth(n);\n\
    \    if (fib === prime) {\n        return fib;\n    } else {\n        return prime_fib(n\
    \ + 1);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpf5yt2rfd.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpf5yt2rfd.ts(14,17): error TS2304: Cannot find name ''prime_nth''.

    '
  timestamp: 1659738664
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3, 5, 13, 89];\n    if\
    \ (n <= fib_numbers.length) {\n        return fib_numbers[n - 1];\n    }\n   \
    \ let i: number = fib_numbers.length;\n    let fib_number: number = fib_numbers[i\
    \ - 1];\n    while (i < n) {\n        fib_number = fib_number + fib_numbers[i\
    \ - 2];\n        if (is_prime(fib_number)) {\n            fib_numbers.push(fib_number);\n\
    \            i = i + 1;\n        }\n    }\n    return fib_number;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmph6l8nr_l.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738630
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n        i++;\n\
    \    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpl8l9yu99.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl8l9yu99.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n        i++;\n\
    \    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpl8l9yu99.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl8l9yu99.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_list: number[] = [2, 3];\n    let i: number =\
    \ 2;\n    while (i < n) {\n        fib_list.push(fib_list[i - 1] + fib_list[i\
    \ - 2]);\n        i++;\n    }\n    return fib_list[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmp049_4f_h.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp049_4f_h.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738635
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_number(n);\n\
    \    let i = 0;\n    let j = 0;\n    while (i < n) {\n        if (fib[i] === prime[j])\
    \ {\n            i++;\n            j++;\n        } else if (fib[i] < prime[j])\
    \ {\n            i++;\n        } else {\n            j++;\n        }\n    }\n\
    \    return prime[j - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp13y_hfpw.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp13y_hfpw.ts(14,17): error TS2304: Cannot find name ''prime_number''.

    '
  timestamp: 1659738627
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_number(n);\n\
    \    let i = 0;\n    let j = 0;\n    let result = 0;\n    while (i < n) {\n  \
    \      if (fib[i] == prime[j]) {\n            result = fib[i];\n            i++;\n\
    \            j++;\n        } else if (fib[i] < prime[j]) {\n            i++;\n\
    \        } else {\n            j++;\n        }\n    }\n    return result;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwuet4l7r.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpwuet4l7r.ts(14,17): error TS2304: Cannot find name ''prime_number''.

    '
  timestamp: 1659738664
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_list: number[] = [2, 3];\n    let i: number =\
    \ 2;\n    while (i < n) {\n        fib_list.push(fib_list[i - 1] + fib_list[i\
    \ - 2]);\n        i++;\n    }\n    return fib_list[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmp049_4f_h.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp049_4f_h.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738635
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num = fib(n);\n    while (!is_prime(fib_num))\
    \ {\n        fib_num = fib(++n);\n    }\n    return fib_num;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpepg12mpg.ts(13,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpepg12mpg.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpepg12mpg.ts(15,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num = fib(n);\n    while (!is_prime(fib_num))\
    \ {\n        fib_num = fib(++n);\n    }\n    return fib_num;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpepg12mpg.ts(13,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpepg12mpg.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpepg12mpg.ts(15,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3, 5, 13, 89];\n    let\
    \ i: number = fib_numbers.length;\n    let fib_number: number = fib_numbers[i\
    \ - 1];\n    while (i < n) {\n        fib_number = fib_numbers[i - 1] + fib_numbers[i\
    \ - 2];\n        if (is_prime(fib_number)) {\n            fib_numbers.push(fib_number);\n\
    \            i++;\n        }\n    }\n    return fib_number;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpr35ne90v.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738663
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_nums: number[] = [2, 3];\n    let i: number =\
    \ 2;\n    let fib_num: number = 0;\n    while (i < n) {\n        fib_num = fib_nums[i\
    \ - 1] + fib_nums[i - 2];\n        if (is_prime(fib_num)) {\n            fib_nums.push(fib_num);\n\
    \            i++;\n        }\n    }\n    return fib_nums[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpncf71143.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738664
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let f1 = 1;\n    let f2 = 1;\n    let f3 = 2;\n    let\
    \ i = 3;\n    while (i < n) {\n        f1 = f2;\n        f2 = f3;\n        f3\
    \ = f1 + f2;\n        i++;\n    }\n    return f3;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpfe4uvunp.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfe4uvunp.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738664
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    while (!is_prime(fib)) {\n\
    \        fib = fibonacci(++n);\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2cffrphy.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp2cffrphy.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmp2cffrphy.ts(15,15): error TS2304: Cannot find name ''fibonacci''.

    '
  timestamp: 1659738629
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let a = 1;\n    let b = 1;\n    let c = 0;\n    let count\
    \ = 0;\n    while (count < n) {\n        c = a + b;\n        a = b;\n        b\
    \ = c;\n        if (is_prime(c)) {\n            count++;\n        }\n    }\n \
    \   return c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpns2mbovw.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738632
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num = fib(n);\n    while (!is_prime(fib_num))\
    \ {\n        fib_num = fib(n);\n        n++;\n    }\n    return fib_num;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphfdpqvep.ts(13,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmphfdpqvep.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmphfdpqvep.ts(15,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738624
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_numbers(n);\n\
    \    let i = 0;\n    let j = 0;\n    let result = 0;\n    while (i < n) {\n  \
    \      if (fib[i] === prime[j]) {\n            result = fib[i];\n            i++;\n\
    \            j++;\n        } else if (fib[i] < prime[j]) {\n            i++;\n\
    \        } else {\n            j++;\n        }\n    }\n    return result;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxlc0j02x.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpxlc0j02x.ts(14,17): error TS2304: Cannot find name ''prime_numbers''.

    '
  timestamp: 1659738632
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_numbers(fib);\n\
    \    return prime[n - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk03haqzy.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpk03haqzy.ts(14,17): error TS2304: Cannot find name ''prime_numbers''.

    '
  timestamp: 1659738630
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number[] = [2, 3];\n    let i: number = 2;\n\
    \    let j: number = 0;\n    while (i < n) {\n        fib.push(fib[j] + fib[j\
    \ + 1]);\n        if (is_prime(fib[i])) {\n            i++;\n        }\n     \
    \   j++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp21hiu_uw.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738632
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n        i++;\n\
    \    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpl8l9yu99.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl8l9yu99.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number[] = [2, 3, 5, 13, 89];\n    if (n <=\
    \ fib.length) {\n        return fib[n - 1];\n    } else {\n        let i: number\
    \ = fib.length;\n        let fib_num: number = fib[i - 1];\n        while (i <\
    \ n) {\n            fib_num = fib_num + fib[i - 2];\n            if (is_prime(fib_num))\
    \ {\n                fib.push(fib_num);\n                i = i + 1;\n        \
    \    }\n        }\n        return fib_num;\n    }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwlgegrnm.ts(21,17): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738664
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let i = 0;\n    let j = 1;\n    let k = 0;\n    let count\
    \ = 0;\n    while (count < n) {\n        k = i + j;\n        i = j;\n        j\
    \ = k;\n        if (is_prime(k)) {\n            count++;\n        }\n    }\n \
    \   return k;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphkdfduqn.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738627
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num: number = 1;\n    let fib_num_prev: number\
    \ = 1;\n    let fib_num_prev_prev: number = 0;\n    let i: number = 1;\n    while\
    \ (i < n) {\n        fib_num = fib_num_prev + fib_num_prev_prev;\n        if (is_prime(fib_num))\
    \ {\n            i += 1;\n        }\n        fib_num_prev_prev = fib_num_prev;\n\
    \        fib_num_prev = fib_num;\n    }\n    return fib_num;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqzxhbycn.ts(19,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738664
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fibs: number[] = fibs_up_to(n);\n    let primes:\
    \ number[] = primes_up_to(fibs[fibs.length - 1]);\n    let prime_fibs: number[]\
    \ = [];\n    for (let i = 0; i < fibs.length; i++) {\n        for (let j = 0;\
    \ j < primes.length; j++) {\n            if (fibs[i] == primes[j]) {\n       \
    \         prime_fibs.push(fibs[i]);\n            }\n        }\n    }\n    return\
    \ prime_fibs[n - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpo7zb86p0.ts(13,26): error TS2304: Cannot find name
    ''fibs_up_to''.

    ../../../../../tmp/tmpo7zb86p0.ts(14,28): error TS2304: Cannot find name ''primes_up_to''.

    '
  timestamp: 1659738664
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n        i++;\n\
    \    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpl8l9yu99.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl8l9yu99.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num = fib(n);\n    let prime_num = prime(n);\n\
    \    if (fib_num == prime_num) {\n        return fib_num;\n    } else {\n    \
    \    return prime_fib(n + 1);\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptfbxtggf.ts(13,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmptfbxtggf.ts(14,21): error TS2304: Cannot find name ''prime''.

    '
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3, 5, 13, 89];\n    if\
    \ (n <= fib_numbers.length) {\n        return fib_numbers[n - 1];\n    }\n   \
    \ let i: number = fib_numbers.length;\n    let fib_number: number = fib_numbers[i\
    \ - 1];\n    while (i < n) {\n        fib_number = fib_number + fib_numbers[i\
    \ - 2];\n        if (is_prime(fib_number)) {\n            fib_numbers.push(fib_number);\n\
    \            i = i + 1;\n        }\n    }\n    return fib_number;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmph6l8nr_l.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738630
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_numbers(n);\n\
    \    let prime_fib = [];\n    for (let i = 0; i < fib.length; i++) {\n       \
    \ for (let j = 0; j < prime.length; j++) {\n            if (fib[i] == prime[j])\
    \ {\n                prime_fib.push(fib[i]);\n            }\n        }\n    }\n\
    \    return prime_fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3xaxiz9_.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp3xaxiz9_.ts(14,17): error TS2304: Cannot find name ''prime_numbers''.

    '
  timestamp: 1659738664
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let i = 0;\n    let fib = 0;\n    let prime = 0;\n  \
    \  while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib)) {\n\
    \            prime = fib;\n            i++;\n        }\n    }\n    return prime;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6tn42xq5.ts(17,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp6tn42xq5.ts(18,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1659738664
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num = fib(n);\n    while (!is_prime(fib_num))\
    \ {\n        fib_num = fib(++n);\n    }\n    return fib_num;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpepg12mpg.ts(13,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpepg12mpg.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpepg12mpg.ts(15,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci();\n    let prime = prime_gen();\n\
    \    let i = 0;\n    let fib_prime = 0;\n    while (i < n) {\n        fib_prime\
    \ = fib.next().value;\n        if (is_prime(fib_prime)) {\n            i++;\n\
    \        }\n    }\n    return fib_prime;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkbrwc2mx.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpkbrwc2mx.ts(14,17): error TS2304: Cannot find name ''prime_gen''.

    ../../../../../tmp/tmpkbrwc2mx.ts(19,13): error TS2552: Cannot find name ''is_prime''.
    Did you mean ''fib_prime''?

    '
  timestamp: 1659738664
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci();\n    let prime = prime_generator();\n\
    \    let i = 0;\n    let f = fib.next().value;\n    let p = prime.next().value;\n\
    \    while (i < n) {\n        if (f == p) {\n            i++;\n            f =\
    \ fib.next().value;\n            p = prime.next().value;\n        } else if (f\
    \ < p) {\n            f = fib.next().value;\n        } else {\n            p =\
    \ prime.next().value;\n        }\n    }\n    return f;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp06r_yaqs.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp06r_yaqs.ts(14,17): error TS2304: Cannot find name ''prime_generator''.

    '
  timestamp: 1659738664
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = [2, 3, 5];\n    let i = 3;\n    let j = 0;\n\
    \    while (i < n) {\n        fib.push(fib[j] + fib[j + 1]);\n        j++;\n \
    \       if (is_prime(fib[i])) {\n            i++;\n        }\n    }\n    return\
    \ fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzx5uqdsj.ts(19,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738664
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num = fib(n);\n    let prime_num = prime(n);\n\
    \    if (fib_num == prime_num) {\n        return fib_num;\n    } else {\n    \
    \    return prime_fib(n + 1);\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptfbxtggf.ts(13,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmptfbxtggf.ts(14,21): error TS2304: Cannot find name ''prime''.

    '
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let i = 1;\n    let fib = 1;\n    let prime_fib = 2;\n\
    \    while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib))\
    \ {\n            prime_fib = fib;\n            i++;\n        }\n    }\n    return\
    \ prime_fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpegkw4c03.ts(17,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpegkw4c03.ts(18,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1659738632
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let a: number = 1;\n    let b: number = 1;\n    let c:\
    \ number = 2;\n    let i: number = 3;\n    while (i < n) {\n        a = b;\n \
    \       b = c;\n        c = a + b;\n        i = i + 1;\n    }\n    return c;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpok5xmtxp.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpok5xmtxp.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738664
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_number(n);\n\
    \    let i = 0;\n    let j = 0;\n    while (i < fib.length && j < prime.length)\
    \ {\n        if (fib[i] == prime[j]) {\n            return fib[i];\n        }\
    \ else if (fib[i] < prime[j]) {\n            i++;\n        } else {\n        \
    \    j++;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa33mgk6t.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpa33mgk6t.ts(14,17): error TS2304: Cannot find name ''prime_number''.

    '
  timestamp: 1659738664
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_number(n);\n\
    \    let i = 0;\n    let j = 0;\n    while (i < n) {\n        if (fib[i] == prime[j])\
    \ {\n            return fib[i];\n        }\n        else if (fib[i] < prime[j])\
    \ {\n            i++;\n        }\n        else {\n            j++;\n        }\n\
    \    }\n    return 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsj3e5i67.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpsj3e5i67.ts(14,17): error TS2304: Cannot find name ''prime_number''.

    '
  timestamp: 1659738663
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_number(n);\n\
    \    return fib[prime - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpousxbm7d.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpousxbm7d.ts(14,17): error TS2304: Cannot find name ''prime_number''.

    '
  timestamp: 1659738664
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let a = 1;\n    let b = 1;\n    let c = 2;\n    let count\
    \ = 2;\n    while (count < n) {\n        c = a + b;\n        a = b;\n        b\
    \ = c;\n        if (is_prime(c)) {\n            count++;\n        }\n    }\n \
    \   return c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpu_ss936x.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let fib_index:\
    \ number = 2;\n    let prime_index: number = 1;\n    while (prime_index < n) {\n\
    \        fib_index++;\n        fib_numbers.push(fib_numbers[fib_index - 1] + fib_numbers[fib_index\
    \ - 2]);\n        if (is_prime(fib_numbers[fib_index])) {\n            prime_index++;\n\
    \        }\n    }\n    return fib_numbers[fib_index];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyc2tdqny.ts(19,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_number(n);\n\
    \    let i = 0;\n    let j = 0;\n    while (i < n) {\n        if (fib[i] === prime[j])\
    \ {\n            i++;\n            j++;\n        } else if (fib[i] < prime[j])\
    \ {\n            i++;\n        } else {\n            j++;\n        }\n    }\n\
    \    return prime[j - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp13y_hfpw.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp13y_hfpw.ts(14,17): error TS2304: Cannot find name ''prime_number''.

    '
  timestamp: 1659738627
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let i = 1;\n    let j = 1;\n    let k = 0;\n    let count\
    \ = 0;\n    while (count < n) {\n        k = i + j;\n        i = j;\n        j\
    \ = k;\n        if (is_prime(k)) {\n            count += 1;\n        }\n    }\n\
    \    return k;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpu4844v79.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738666
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i\
    \ - 2]);\n        i++;\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpzwwzzqxv.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzwwzzqxv.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fibs: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fibs.push(fibs[i - 1] + fibs[i - 2]);\n        i++;\n\
    \    }\n    return fibs[n - 1];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmp84v710ve.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp84v710ve.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738630
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_nums: number[] = [2, 3, 5];\n    let i: number\
    \ = 3;\n    while (fib_nums.length < n) {\n        let next_fib: number = fib_nums[i\
    \ - 1] + fib_nums[i - 2];\n        if (is_prime(next_fib)) {\n            fib_nums.push(next_fib);\n\
    \        }\n        i++;\n    }\n    return fib_nums[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpoyevi0_e.ts(17,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738666
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_nums: number[] = [2, 3];\n    let i: number =\
    \ 2;\n    while (i < n) {\n        fib_nums.push(fib_nums[i - 1] + fib_nums[i\
    \ - 2]);\n        i++;\n    }\n    return fib_nums[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpqx22l1r3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqx22l1r3.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738623
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i\
    \ - 2]);\n        i++;\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpzwwzzqxv.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzwwzzqxv.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let a = 0;\n  let b = 1;\n  let c = 0;\n  let count = 0;\n\
    \  while (count < n) {\n    c = a + b;\n    a = b;\n    b = c;\n    if (is_prime(c))\
    \ {\n      count++;\n    }\n  }\n  return c;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpx9u9zim0.ts(21,9): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let i = 0;\n    let fib = 0;\n    while (i < n) {\n \
    \       fib = fibonacci(i);\n        if (is_prime(fib)) {\n            i++;\n\
    \        }\n    }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplwgekl6u.ts(16,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmplwgekl6u.ts(17,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1659738634
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let i = 1;\n    let fib = 1;\n    let prime_fib = 0;\n\
    \    while (i <= n) {\n        if (is_prime(fib)) {\n            prime_fib = fib;\n\
    \            i++;\n        }\n        fib = fibonacci(fib);\n    }\n    return\
    \ prime_fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpii3uoehe.ts(17,13): error TS2304: Cannot find name
    ''is_prime''.

    ../../../../../tmp/tmpii3uoehe.ts(21,15): error TS2304: Cannot find name ''fibonacci''.

    '
  timestamp: 1659738632
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let i = 0;\n    while (i\
    \ < fib.length) {\n        if (is_prime(fib[i])) {\n            return fib[i];\n\
    \        }\n        i++;\n    }\n    return 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0e8ch9rq.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp0e8ch9rq.ts(16,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1659738627
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number = 0;\n    let fib_prev: number = 1;\n\
    \    let fib_prev_prev: number = 0;\n    let count: number = 0;\n    while (count\
    \ < n) {\n        fib = fib_prev + fib_prev_prev;\n        if (is_prime(fib))\
    \ {\n            count += 1;\n        }\n        fib_prev_prev = fib_prev;\n \
    \       fib_prev = fib;\n    }\n    return fib;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwnrj3pai.ts(19,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738666
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i\
    \ - 2]);\n        i++;\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpzwwzzqxv.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzwwzzqxv.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3, 5];\n    let i: number\
    \ = 3;\n    while (fib_numbers.length < n) {\n        let fib_number: number =\
    \ fib_numbers[i - 1] + fib_numbers[i - 2];\n        if (is_prime(fib_number))\
    \ {\n            fib_numbers.push(fib_number);\n        }\n        i++;\n    }\n\
    \    return fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1q4ej9sg.ts(17,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738627
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_list: number[] = [2, 3];\n    let fib_num: number\
    \ = 0;\n    let i: number = 2;\n    while (i <= n) {\n        fib_num = fib_list[i\
    \ - 1] + fib_list[i - 2];\n        if (is_prime(fib_num)) {\n            fib_list.push(fib_num);\n\
    \            i += 1;\n        }\n    }\n    return fib_list[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkpxyvecx.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let a = 1;\n    let b = 1;\n    let c = 0;\n    let count\
    \ = 0;\n    while (count < n) {\n        c = a + b;\n        a = b;\n        b\
    \ = c;\n        if (is_prime(c)) {\n            count++;\n        }\n    }\n \
    \   return c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpns2mbovw.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738632
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_list: number[] = [2, 3];\n    let i: number =\
    \ 2;\n    while (i < n) {\n        fib_list.push(fib_list[i - 1] + fib_list[i\
    \ - 2]);\n        i += 1;\n    }\n    return fib_list[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpd_9ruwwn.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpd_9ruwwn.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738635
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let prime_fib_numbers:\
    \ number[] = [2, 3];\n    let i: number = 2;\n    while (prime_fib_numbers.length\
    \ < n) {\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i - 2]);\n\
    \        if (is_prime(fib_numbers[i])) {\n            prime_fib_numbers.push(fib_numbers[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp607hqfc0.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738625
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fibs: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fibs.push(fibs[i - 1] + fibs[i - 2]);\n        i++;\n\
    \    }\n    return fibs[n - 1];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmp84v710ve.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp84v710ve.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738630
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_numbers(n);\n\
    \    let prime_fib = [];\n    for (let i = 0; i < fib.length; i++) {\n       \
    \ for (let j = 0; j < prime.length; j++) {\n            if (fib[i] == prime[j])\
    \ {\n                prime_fib.push(fib[i]);\n            }\n        }\n    }\n\
    \    return prime_fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3xaxiz9_.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp3xaxiz9_.ts(14,17): error TS2304: Cannot find name ''prime_numbers''.

    '
  timestamp: 1659738664
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let i = 2;\n    let j = 1;\n    let k = 0;\n    let count\
    \ = 0;\n    while (count < n) {\n        k = i + j;\n        i = j;\n        j\
    \ = k;\n        if (is_prime(k)) {\n            count++;\n        }\n    }\n \
    \   return k;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3hu51_xy.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_number(n);\n\
    \    if (fib === prime) {\n        return fib;\n    } else {\n        return prime_fib(n\
    \ + 1);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpu182rlxo.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpu182rlxo.ts(14,17): error TS2304: Cannot find name ''prime_number''.

    '
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let i = 0;\n    let j = 1;\n    let k = 0;\n    let count\
    \ = 0;\n    while (count < n) {\n        k = i + j;\n        i = j;\n        j\
    \ = k;\n        if (is_prime(k)) {\n            count++;\n        }\n    }\n \
    \   return k;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphkdfduqn.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738627
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_list: number[] = [2, 3];\n    let fib_index:\
    \ number = 2;\n    let prime_index: number = 1;\n    let prime_fib_index: number\
    \ = 1;\n    let prime_fib_number: number = 2;\n    while (prime_fib_index < n)\
    \ {\n        fib_index += 1;\n        fib_list.push(fib_list[fib_index - 1] +\
    \ fib_list[fib_index - 2]);\n        if (is_prime(fib_list[fib_index - 1])) {\n\
    \            prime_fib_index += 1;\n            prime_fib_number = fib_list[fib_index\
    \ - 1];\n        }\n    }\n    return prime_fib_number;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv53eco5l.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num: number = fib(n);\n    while (!is_prime(fib_num))\
    \ {\n        n += 1;\n        fib_num = fib(n);\n    }\n    return fib_num;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpw9btlkme.ts(13,27): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpw9btlkme.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpw9btlkme.ts(16,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number[] = [2, 3];\n    let i: number = 2;\n\
    \    let j: number = 0;\n    while (i < n) {\n        fib.push(fib[j] + fib[j\
    \ + 1]);\n        if (is_prime(fib[i])) {\n            i++;\n        }\n     \
    \   j++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp21hiu_uw.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738632
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i\
    \ - 2]);\n        i++;\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpzwwzzqxv.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzwwzzqxv.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (fib_numbers.length < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpvpcj5wkq.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvpcj5wkq.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738625
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_number(n);\n\
    \    let prime_fib = [];\n    for (let i = 0; i < fib.length; i++) {\n       \
    \ for (let j = 0; j < prime.length; j++) {\n            if (fib[i] == prime[j])\
    \ {\n                prime_fib.push(fib[i]);\n            }\n        }\n    }\n\
    \    return prime_fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_hfpezaj.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp_hfpezaj.ts(14,17): error TS2304: Cannot find name ''prime_number''.

    '
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let i = 1;\n    let j = 1;\n    let k = 0;\n    let count\
    \ = 0;\n    while (count < n) {\n        k = i + j;\n        i = j;\n        j\
    \ = k;\n        if (is_prime(k)) {\n            count++;\n        }\n    }\n \
    \   return k;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6sp3u5ui.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738622
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fibs: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fibs.push(fibs[i - 1] + fibs[i - 2]);\n        i++;\n\
    \    }\n    return fibs[n - 1];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmp84v710ve.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp84v710ve.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738630
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_number(n);\n\
    \    while (fib != prime) {\n        if (fib > prime) {\n            prime = prime_number(++n);\n\
    \        } else {\n            fib = fibonacci(++n);\n        }\n    }\n    return\
    \ fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp08ih9bu1.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp08ih9bu1.ts(14,17): error TS2304: Cannot find name ''prime_number''.

    ../../../../../tmp/tmp08ih9bu1.ts(17,21): error TS2304: Cannot find name ''prime_number''.

    ../../../../../tmp/tmp08ih9bu1.ts(19,19): error TS2304: Cannot find name ''fibonacci''.

    '
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let a = 1;\n    let b = 1;\n    let c = 0;\n    let i\
    \ = 1;\n    let j = 0;\n    while (j < n) {\n        c = a + b;\n        a = b;\n\
    \        b = c;\n        if (is_prime(c)) {\n            j++;\n        }\n   \
    \     i++;\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp14n9b54z.ts(22,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number = 0;\n    let fib_1: number = 1;\n  \
    \  let fib_2: number = 1;\n    let count: number = 0;\n    while (count < n) {\n\
    \        if (is_prime(fib)) {\n            count++;\n        }\n        fib =\
    \ fib_1 + fib_2;\n        fib_2 = fib_1;\n        fib_1 = fib;\n    }\n    return\
    \ fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprh15el_v.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3, 5, 13, 89];\n    if\
    \ (n < 1) {\n        return 0;\n    }\n    if (n > fib_numbers.length) {\n   \
    \     let i: number = fib_numbers.length;\n        while (i < n) {\n         \
    \   let last_fib: number = fib_numbers[fib_numbers.length - 1];\n            let\
    \ second_last_fib: number = fib_numbers[fib_numbers.length - 2];\n           \
    \ let next_fib: number = last_fib + second_last_fib;\n            if (is_prime(next_fib))\
    \ {\n                fib_numbers.push(next_fib);\n            }\n            i++;\n\
    \        }\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8uksjn1e.ts(23,17): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_number = fib(n);\n    while (!is_prime(fib_number))\
    \ {\n        fib_number = fib(++n);\n    }\n    return fib_number;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzod5u5ht.ts(13,22): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpzod5u5ht.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpzod5u5ht.ts(15,22): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738666
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n        i++;\n\
    \    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpl8l9yu99.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl8l9yu99.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_nums: number[] = [2, 3];\n    let i: number =\
    \ 2;\n    while (i < n) {\n        let next_fib_num: number = fib_nums[i - 1]\
    \ + fib_nums[i - 2];\n        if (is_prime(next_fib_num)) {\n            fib_nums.push(next_fib_num);\n\
    \            i += 1;\n        }\n    }\n    return fib_nums[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpz58grxv4.ts(17,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_nums: number[] = [1, 1];\n    let i: number =\
    \ 2;\n    let prime_fib_nums: number[] = [];\n    while (prime_fib_nums.length\
    \ < n) {\n        fib_nums.push(fib_nums[i - 1] + fib_nums[i - 2]);\n        if\
    \ (is_prime(fib_nums[i])) {\n            prime_fib_nums.push(fib_nums[i]);\n \
    \       }\n        i++;\n    }\n    return prime_fib_nums[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2ui3fulc.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_nums: number[] = [2, 3];\n    let i: number =\
    \ 2;\n    let fib_num: number = 0;\n    while (i < n) {\n        fib_num = fib_nums[i\
    \ - 1] + fib_nums[i - 2];\n        if (is_prime(fib_num)) {\n            fib_nums.push(fib_num);\n\
    \            i++;\n        }\n    }\n    return fib_nums[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpncf71143.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738664
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_nums: number[] = [2, 3, 5];\n    let prime_fib_nums:\
    \ number[] = [2, 3, 5];\n    let i: number = 3;\n    while (prime_fib_nums.length\
    \ < n) {\n        fib_nums.push(fib_nums[i - 1] + fib_nums[i - 2]);\n        if\
    \ (is_prime(fib_nums[i])) {\n            prime_fib_nums.push(fib_nums[i]);\n \
    \       }\n        i++;\n    }\n    return prime_fib_nums[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpftu99axh.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738625
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number = 1;\n    let fib_prev: number = 1;\n\
    \    let fib_prev_prev: number = 0;\n    let count: number = 0;\n    while (count\
    \ < n) {\n        if (is_prime(fib)) {\n            count++;\n        }\n    \
    \    fib_prev_prev = fib_prev;\n        fib_prev = fib;\n        fib = fib_prev\
    \ + fib_prev_prev;\n    }\n    return fib;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzw7n8k5l.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738622
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i\
    \ - 2]);\n        i++;\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpzwwzzqxv.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzwwzzqxv.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_list: number[] = [2, 3];\n    let i: number =\
    \ 2;\n    while (i < n) {\n        fib_list.push(fib_list[i - 1] + fib_list[i\
    \ - 2]);\n        i += 1;\n    }\n    return fib_list[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpd_9ruwwn.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpd_9ruwwn.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738635
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3, 5, 13, 89];\n    if\
    \ (n <= fib_numbers.length) {\n        return fib_numbers[n - 1];\n    }\n   \
    \ let i: number = fib_numbers.length;\n    let fib_number: number = fib_numbers[i\
    \ - 1];\n    while (i < n) {\n        fib_number = fib_number + fib_numbers[i\
    \ - 2];\n        if (is_prime(fib_number)) {\n            fib_numbers.push(fib_number);\n\
    \            i = i + 1;\n        }\n    }\n    return fib_number;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmph6l8nr_l.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738630
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fibs: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (fibs.length < n) {\n        fibs.push(fibs[i - 1] + fibs[i - 2]);\n\
    \        i++;\n    }\n    return fibs[n - 1];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpoksczodu.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpoksczodu.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_list: number[] = [2, 3];\n    let i: number =\
    \ 2;\n    let fib: number = 0;\n    while (i < n) {\n        fib = fib_list[i\
    \ - 1] + fib_list[i - 2];\n        if (is_prime(fib)) {\n            fib_list.push(fib);\n\
    \            i += 1;\n        }\n    }\n    return fib_list[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprmrfrzxl.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    let fib_number: number = 0;\n    while (i < n) {\n        fib_number\
    \ = fib_numbers[i - 1] + fib_numbers[i - 2];\n        if (is_prime(fib_number))\
    \ {\n            fib_numbers.push(fib_number);\n            i += 1;\n        }\n\
    \    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9_x6vfzl.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let a = 1;\n    let b = 1;\n    let c = 2;\n    let count\
    \ = 1;\n    while (count < n) {\n        c = a + b;\n        a = b;\n        b\
    \ = c;\n        if (is_prime(c)) {\n            count++;\n        }\n    }\n \
    \   return c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprop4ll1c.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number = 1;\n    let fib_prev: number = 1;\n\
    \    let fib_prev_prev: number = 0;\n    let i: number = 1;\n    while (i < n)\
    \ {\n        fib = fib_prev + fib_prev_prev;\n        fib_prev_prev = fib_prev;\n\
    \        fib_prev = fib;\n        if (is_prime(fib)) {\n            i++;\n   \
    \     }\n    }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9hz3z5m7.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738668
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num = fib(n);\n    while (!is_prime(fib_num))\
    \ {\n        fib_num = fib(n);\n        n++;\n    }\n    return fib_num;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphfdpqvep.ts(13,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmphfdpqvep.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmphfdpqvep.ts(15,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738624
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_list: number[] = [2, 3];\n    let i: number =\
    \ 2;\n    while (i < n) {\n        fib_list.push(fib_list[i - 1] + fib_list[i\
    \ - 2]);\n        i += 1;\n    }\n    return fib_list[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpd_9ruwwn.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpd_9ruwwn.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738635
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i\
    \ - 2]);\n        i++;\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpzwwzzqxv.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzwwzzqxv.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num = fib(n);\n    while (!is_prime(fib_num))\
    \ {\n        fib_num = fib(++n);\n    }\n    return fib_num;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpepg12mpg.ts(13,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpepg12mpg.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpepg12mpg.ts(15,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738622
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i\
    \ - 2]);\n        i++;\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpzwwzzqxv.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzwwzzqxv.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_nums: number[] = [2, 3];\n    let i: number =\
    \ 2;\n    while (i < n) {\n        fib_nums.push(fib_nums[i - 1] + fib_nums[i\
    \ - 2]);\n        i++;\n    }\n    return fib_nums[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpqx22l1r3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqx22l1r3.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738623
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    while (!is_prime(fib)) {\n\
    \        fib = fibonacci(n);\n        n++;\n    }\n    return fib;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkdpe4cr6.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpkdpe4cr6.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpkdpe4cr6.ts(15,15): error TS2304: Cannot find name ''fibonacci''.

    '
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let prime_fib_numbers:\
    \ number[] = [2, 3];\n    let i: number = 2;\n    while (prime_fib_numbers.length\
    \ < n) {\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i - 2]);\n\
    \        if (is_prime(fib_numbers[i])) {\n            prime_fib_numbers.push(fib_numbers[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp607hqfc0.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738625
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3, 5];\n    let prime_fib_numbers:\
    \ number[] = [2, 3, 5];\n    let i: number = 3;\n    while (prime_fib_numbers.length\
    \ < n) {\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i - 2]);\n\
    \        if (is_prime(fib_numbers[i])) {\n            prime_fib_numbers.push(fib_numbers[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpaj3nmsuc.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738668
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num = fib(n);\n    while (!is_prime(fib_num))\
    \ {\n        fib_num = fib(++n);\n    }\n    return fib_num;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpepg12mpg.ts(13,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpepg12mpg.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpepg12mpg.ts(15,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    let prime_fib: number = 0;\n    while (i <= n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        if (is_prime(fib_numbers[i])) {\n     \
    \       prime_fib = fib_numbers[i];\n            i++;\n        }\n    }\n    return\
    \ prime_fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpr2cbtkxz.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738668
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_number(n);\n\
    \    let i = 0;\n    let j = 0;\n    let result = 0;\n    while (i < n) {\n  \
    \      if (fib[i] === prime[j]) {\n            result = fib[i];\n            i++;\n\
    \            j++;\n        } else if (fib[i] < prime[j]) {\n            i++;\n\
    \        } else {\n            j++;\n        }\n    }\n    return result;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4w3hi140.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp4w3hi140.ts(14,17): error TS2304: Cannot find name ''prime_number''.

    '
  timestamp: 1659738668
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_number(n);\n\
    \    while (fib != prime) {\n        if (fib > prime) {\n            prime = prime_number(++n);\n\
    \        } else {\n            fib = fibonacci(++n);\n        }\n    }\n    return\
    \ fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp08ih9bu1.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp08ih9bu1.ts(14,17): error TS2304: Cannot find name ''prime_number''.

    ../../../../../tmp/tmp08ih9bu1.ts(17,21): error TS2304: Cannot find name ''prime_number''.

    ../../../../../tmp/tmp08ih9bu1.ts(19,19): error TS2304: Cannot find name ''fibonacci''.

    '
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num: number = fib(n);\n    while (!is_prime(fib_num))\
    \ {\n        n += 1;\n        fib_num = fib(n);\n    }\n    return fib_num;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpw9btlkme.ts(13,27): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpw9btlkme.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpw9btlkme.ts(16,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738666
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i\
    \ - 2]);\n        i++;\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpzwwzzqxv.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzwwzzqxv.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_list: number[] = [2, 3, 5, 13, 89];\n    if (n\
    \ <= fib_list.length) {\n        return fib_list[n - 1];\n    }\n    let i: number\
    \ = fib_list.length;\n    let fib_num: number = fib_list[i - 1];\n    while (i\
    \ < n) {\n        fib_num = fib_num + fib_list[i - 2];\n        if (is_prime(fib_num))\
    \ {\n            fib_list.push(fib_num);\n            i = i + 1;\n        }\n\
    \    }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbaz9_e37.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738668
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fibs: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fibs.push(fibs[i - 1] + fibs[i - 2]);\n        i\
    \ += 1;\n    }\n    return fibs[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmp5ffgaowp.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5ffgaowp.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738668
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let a = 2;\n    let b = 3;\n    let c = 5;\n    let i\
    \ = 3;\n    while (i < n) {\n        a = b;\n        b = c;\n        c = a + b;\n\
    \        if (is_prime(c)) {\n            i += 1;\n        }\n    }\n    return\
    \ c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvfkys7bj.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738668
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num = fib(n);\n    while (!is_prime(fib_num))\
    \ {\n        fib_num = fib(++n);\n    }\n    return fib_num;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpepg12mpg.ts(13,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpepg12mpg.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpepg12mpg.ts(15,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num = fib(n);\n    while (!is_prime(fib_num))\
    \ {\n        fib_num = fib(n);\n        n++;\n    }\n    return fib_num;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphfdpqvep.ts(13,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmphfdpqvep.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmphfdpqvep.ts(15,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738624
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [1, 2];\n    let i: number\
    \ = 2;\n    let prime_fib_numbers: number[] = [2];\n    while (prime_fib_numbers.length\
    \ < n) {\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i - 2]);\n\
    \        if (is_prime(fib_numbers[i])) {\n            prime_fib_numbers.push(fib_numbers[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5d3j750z.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738669
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i\
    \ - 2]);\n        i++;\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpzwwzzqxv.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzwwzzqxv.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3, 5];\n    let i: number\
    \ = 3;\n    let prime_fib_numbers: number[] = [2, 3, 5];\n    while (prime_fib_numbers.length\
    \ < n) {\n        let next_fib: number = fib_numbers[i - 1] + fib_numbers[i -\
    \ 2];\n        fib_numbers.push(next_fib);\n        if (is_prime(next_fib)) {\n\
    \            prime_fib_numbers.push(next_fib);\n        }\n        i++;\n    }\n\
    \    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnnyzzhu_.ts(19,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738669
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_number(n);\n\
    \    let i = 0;\n    let j = 0;\n    while (i < n) {\n        if (fib[i] == prime[j])\
    \ {\n            return fib[i];\n        }\n        else if (fib[i] < prime[j])\
    \ {\n            i++;\n        }\n        else {\n            j++;\n        }\n\
    \    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdjqp51y4.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpdjqp51y4.ts(14,17): error TS2304: Cannot find name ''prime_number''.

    '
  timestamp: 1659738625
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fibs: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (fibs.length < n) {\n        fibs.push(fibs[i - 1] + fibs[i - 2]);\n\
    \        i++;\n    }\n    return fibs[n - 1];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpoksczodu.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpoksczodu.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738666
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let i = 0;\n    while (i\
    \ < fib.length) {\n        if (is_prime(fib[i])) {\n            return fib[i];\n\
    \        }\n        i++;\n    }\n    return 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0e8ch9rq.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp0e8ch9rq.ts(16,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1659738627
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let prime_fib_numbers:\
    \ number[] = [2, 3];\n    let i: number = 2;\n    while (prime_fib_numbers.length\
    \ < n) {\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i - 2]);\n\
    \        if (is_prime(fib_numbers[i])) {\n            prime_fib_numbers.push(fib_numbers[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp607hqfc0.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738625
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n        i++;\n\
    \    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpl8l9yu99.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl8l9yu99.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fibs: number[] = [2, 3, 5, 13, 89];\n    if (n <=\
    \ fibs.length) {\n        return fibs[n - 1];\n    }\n    let i: number = fibs.length;\n\
    \    let fib: number = fibs[i - 1];\n    let fib_prev: number = fibs[i - 2];\n\
    \    while (i < n) {\n        let fib_next: number = fib + fib_prev;\n       \
    \ fib_prev = fib;\n        fib = fib_next;\n        if (is_prime(fib)) {\n   \
    \         fibs.push(fib);\n            i += 1;\n        }\n    }\n    return fib;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsb77otlz.ts(24,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738669
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_number(n);\n\
    \    let i = 0;\n    let j = 0;\n    while (i < n) {\n        while (j < n) {\n\
    \            if (fib[i] === prime[j]) {\n                return fib[i];\n    \
    \        }\n            j++;\n        }\n        i++;\n    }\n    return -1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpof1lzc2w.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpof1lzc2w.ts(14,17): error TS2304: Cannot find name ''prime_number''.

    '
  timestamp: 1659738668
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_nums: number[] = [2, 3];\n    let i: number =\
    \ 2;\n    while (i < n) {\n        fib_nums.push(fib_nums[i - 1] + fib_nums[i\
    \ - 2]);\n        i++;\n    }\n    return fib_nums[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpqx22l1r3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqx22l1r3.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738623
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let i = 0;\n    while (!is_prime(fib))\
    \ {\n        fib = fibonacci(n + i);\n        i++;\n    }\n    return fib;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbv1_w_mi.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpbv1_w_mi.ts(15,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpbv1_w_mi.ts(16,15): error TS2304: Cannot find name ''fibonacci''.

    '
  timestamp: 1659738669
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let a = 1;\n    let b = 1;\n    let c = 0;\n    let count\
    \ = 0;\n    while (count < n) {\n        c = a + b;\n        a = b;\n        b\
    \ = c;\n        if (is_prime(c)) {\n            count++;\n        }\n    }\n \
    \   return c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpns2mbovw.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738632
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_list: number[] = [2, 3];\n    let i: number =\
    \ 2;\n    while (i < n) {\n        fib_list.push(fib_list[i - 1] + fib_list[i\
    \ - 2]);\n        i += 1;\n    }\n    return fib_list[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpd_9ruwwn.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpd_9ruwwn.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738635
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_number(n);\n\
    \    return fib[prime - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpousxbm7d.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpousxbm7d.ts(14,17): error TS2304: Cannot find name ''prime_number''.

    '
  timestamp: 1659738664
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_number(n);\n\
    \    let i = 0;\n    let j = 0;\n    while (i < n) {\n        while (j < n) {\n\
    \            if (fib[i] === prime[j]) {\n                return fib[i];\n    \
    \        }\n            j++;\n        }\n        i++;\n    }\n    return -1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpof1lzc2w.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpof1lzc2w.ts(14,17): error TS2304: Cannot find name ''prime_number''.

    '
  timestamp: 1659738668
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_nums: number[] = [2, 3];\n    let prime_fib_nums:\
    \ number[] = [2, 3];\n    let i: number = 2;\n    while (prime_fib_nums.length\
    \ < n) {\n        fib_nums.push(fib_nums[i - 1] + fib_nums[i - 2]);\n        if\
    \ (is_prime(fib_nums[i])) {\n            prime_fib_nums.push(fib_nums[i]);\n \
    \       }\n        i++;\n    }\n    return prime_fib_nums[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8a67593y.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738632
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n        if (is_prime(fib[i]))\
    \ {\n            i++;\n        }\n    }\n    return fib[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpo5gyrrg2.ts(17,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738669
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fibs: number[] = [2, 3, 5, 13, 89];\n    if (n <=\
    \ 5) {\n        return fibs[n - 1];\n    } else {\n        let i: number = 5;\n\
    \        while (i < n) {\n            let fib: number = fibs[i - 1] + fibs[i -\
    \ 2];\n            if (is_prime(fib)) {\n                fibs.push(fib);\n   \
    \             i++;\n            }\n        }\n        return fibs[n - 1];\n  \
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps8e9oyyb.ts(20,17): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738669
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    let fib_number: number = 0;\n    while (i <= n) {\n        fib_number\
    \ = fib_numbers[i - 1] + fib_numbers[i - 2];\n        if (is_prime(fib_number))\
    \ {\n            fib_numbers.push(fib_number);\n            i += 1;\n        }\n\
    \    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpth_40xmo.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738669
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci();\n    let prime = prime_numbers();\n\
    \    let i = 0;\n    let result = 0;\n    while (i < n) {\n        let f = fib.next().value;\n\
    \        let p = prime.next().value;\n        if (f === p) {\n            result\
    \ = f;\n            i++;\n        }\n    }\n    return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxmt__mqr.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpxmt__mqr.ts(14,17): error TS2304: Cannot find name ''prime_numbers''.

    '
  timestamp: 1659738669
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    while (!is_prime(fib)) {\n\
    \        fib = fibonacci(n);\n        n++;\n    }\n    return fib;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkdpe4cr6.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpkdpe4cr6.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpkdpe4cr6.ts(15,15): error TS2304: Cannot find name ''fibonacci''.

    '
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let i = 0;\n    let fib = 0;\n    while (i < n) {\n \
    \       fib = fibonacci(i);\n        if (is_prime(fib)) {\n            i++;\n\
    \        }\n    }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplwgekl6u.ts(16,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmplwgekl6u.ts(17,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1659738634
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num = fib(n);\n    while (!is_prime(fib_num))\
    \ {\n        fib_num = fib(++n);\n    }\n    return fib_num;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpepg12mpg.ts(13,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpepg12mpg.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpepg12mpg.ts(15,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_list: number[] = [1, 1];\n    let prime_fib_list:\
    \ number[] = [2, 3];\n    let i: number = 2;\n    while (prime_fib_list.length\
    \ < n) {\n        fib_list.push(fib_list[i - 1] + fib_list[i - 2]);\n        if\
    \ (is_prime(fib_list[i])) {\n            prime_fib_list.push(fib_list[i]);\n \
    \       }\n        i += 1;\n    }\n    return prime_fib_list[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzew_y8jp.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738669
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i\
    \ - 2]);\n        i++;\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpzwwzzqxv.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzwwzzqxv.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    while (!is_prime(fib)) {\n\
    \        fib = fibonacci(n);\n        n++;\n    }\n    return fib;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkdpe4cr6.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpkdpe4cr6.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpkdpe4cr6.ts(15,15): error TS2304: Cannot find name ''fibonacci''.

    '
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let a = 1;\n    let b = 1;\n    let c = 2;\n    let count\
    \ = 2;\n    while (count < n) {\n        if (is_prime(c)) {\n            count++;\n\
    \        }\n        a = b;\n        b = c;\n        c = a + b;\n    }\n    return\
    \ c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqp_9lgih.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738669
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [];\n    let prime_fib_numbers:\
    \ number[] = [];\n    let i: number = 0;\n    let j: number = 0;\n    let k: number\
    \ = 0;\n    let fib_number: number = 0;\n    let prime_fib_number: number = 0;\n\
    \    fib_numbers.push(1);\n    fib_numbers.push(1);\n    while (fib_numbers.length\
    \ < n) {\n        fib_number = fib_numbers[i] + fib_numbers[i + 1];\n        fib_numbers.push(fib_number);\n\
    \        i++;\n    }\n    while (prime_fib_numbers.length < n) {\n        if (is_prime(fib_numbers[j]))\
    \ {\n            prime_fib_numbers.push(fib_numbers[j]);\n        }\n        j++;\n\
    \    }\n    prime_fib_number = prime_fib_numbers[k];\n    return prime_fib_number;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7dkq5a2j.ts(28,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738669
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    while (!is_prime(fib)) {\n\
    \        fib = fibonacci(n);\n        n++;\n    }\n    return fib;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkdpe4cr6.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpkdpe4cr6.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpkdpe4cr6.ts(15,15): error TS2304: Cannot find name ''fibonacci''.

    '
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_list: number[] = [1, 2];\n    let prime_fib_list:\
    \ number[] = [2];\n    let i: number = 1;\n    while (prime_fib_list.length <\
    \ n) {\n        fib_list.push(fib_list[i] + fib_list[i - 1]);\n        if (is_prime(fib_list[i\
    \ + 1])) {\n            prime_fib_list.push(fib_list[i + 1]);\n        }\n   \
    \     i++;\n    }\n    return prime_fib_list[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpc4e0r6y9.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738669
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (fib_numbers.length < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpvpcj5wkq.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvpcj5wkq.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738625
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let f1 = 1;\n    let f2 = 1;\n    let f3 = 2;\n    let\
    \ count = 2;\n    while (count < n) {\n        f1 = f2;\n        f2 = f3;\n  \
    \      f3 = f1 + f2;\n        if (is_prime(f3)) {\n            count++;\n    \
    \    }\n    }\n    return f3;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwan3n3qh.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738669
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number = 0;\n    let fib_prev: number = 1;\n\
    \    let fib_prev2: number = 0;\n    let i: number = 1;\n    while (i < n) {\n\
    \        fib = fib_prev + fib_prev2;\n        fib_prev2 = fib_prev;\n        fib_prev\
    \ = fib;\n        if (is_prime(fib)) {\n            i++;\n        }\n    }\n \
    \   return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplszaijr3.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738669
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = is_prime(fib);\n\
    \    if (prime) {\n        return fib;\n    } else {\n        return prime_fib(n\
    \ + 1);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1g2ydr2s.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp1g2ydr2s.ts(14,17): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1659738669
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fibs: number[] = [2, 3, 5];\n    let i: number =\
    \ 3;\n    while (fibs.length < n) {\n        let fib: number = fibs[i - 1] + fibs[i\
    \ - 2];\n        if (is_prime(fib)) {\n            fibs.push(fib);\n        }\n\
    \        i += 1;\n    }\n    return fibs[n - 1];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa3e0ocu7.ts(17,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738670
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n        i++;\n\
    \    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpl8l9yu99.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl8l9yu99.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n        i++;\n\
    \    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpl8l9yu99.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl8l9yu99.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_list: number[] = [2, 3];\n    let i: number =\
    \ 2;\n    while (i < n) {\n        fib_list.push(fib_list[i - 1] + fib_list[i\
    \ - 2]);\n        i++;\n    }\n    return fib_list[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmp049_4f_h.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp049_4f_h.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738635
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let i = 1;\n    let fib = 1;\n    let fib_prev = 1;\n\
    \    let prime_fib = 0;\n    while (i <= n) {\n        if (is_prime(fib)) {\n\
    \            prime_fib = fib;\n            i++;\n        }\n        let fib_next\
    \ = fib + fib_prev;\n        fib_prev = fib;\n        fib = fib_next;\n    }\n\
    \    return prime_fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp37nfpand.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738670
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let a = 1;\n    let b = 1;\n    let c = 2;\n    let i\
    \ = 1;\n    while (i < n) {\n        c = a + b;\n        a = b;\n        b = c;\n\
    \        if (is_prime(c)) {\n            i++;\n        }\n    }\n    return c;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpt5c9vamb.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738670
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num: number = 0;\n    let fib_num_prev: number\
    \ = 1;\n    let fib_num_prev_prev: number = 0;\n    let i: number = 1;\n    while\
    \ (i <= n) {\n        if (is_prime(fib_num)) {\n            i++;\n        }\n\
    \        fib_num_prev_prev = fib_num_prev;\n        fib_num_prev = fib_num;\n\
    \        fib_num = fib_num_prev + fib_num_prev_prev;\n    }\n    return fib_num_prev;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpveoti46_.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738670
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number = 1;\n    let fib_prev: number = 1;\n\
    \    let fib_prev_prev: number = 0;\n    let i: number = 1;\n    while (i < n)\
    \ {\n        fib = fib_prev + fib_prev_prev;\n        fib_prev_prev = fib_prev;\n\
    \        fib_prev = fib;\n        if (is_prime(fib)) {\n            i++;\n   \
    \     }\n    }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9hz3z5m7.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738668
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let i = 0;\n    let fib = 0;\n    let prime = 0;\n  \
    \  while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib)) {\n\
    \            prime = fib;\n            i++;\n        }\n    }\n    return prime;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6tn42xq5.ts(17,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp6tn42xq5.ts(18,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1659738664
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let i = 1;\n    let j = 1;\n    let k = 1;\n    while\
    \ (k < n) {\n        let t = i + j;\n        i = j;\n        j = t;\n        if\
    \ (is_prime(j)) {\n            k = k + 1;\n        }\n    }\n    return j;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpo_pv2g_q.ts(20,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738670
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3, 5, 13, 89];\n    if\
    \ (n > fib_numbers.length) {\n        for (let i = fib_numbers.length; i <= n;\
    \ i++) {\n            let next_fib = fib_numbers[i - 1] + fib_numbers[i - 2];\n\
    \            if (is_prime(next_fib)) {\n                fib_numbers.push(next_fib);\n\
    \            }\n        }\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmjone1mj.ts(17,17): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738670
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n        i++;\n\
    \    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpl8l9yu99.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl8l9yu99.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let i = 1;\n    let j = 1;\n    let k = 2;\n    let count\
    \ = 1;\n    while (count < n) {\n        if (is_prime(k)) {\n            count++;\n\
    \        }\n        let temp = i + j;\n        i = j;\n        j = temp;\n   \
    \     k = j;\n    }\n    return k;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbljrv0rx.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738670
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num = fib(n);\n    while (!is_prime(fib_num))\
    \ {\n        fib_num = fib(++n);\n    }\n    return fib_num;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpepg12mpg.ts(13,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpepg12mpg.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpepg12mpg.ts(15,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_list: number[] = [2, 3, 5, 13, 89];\n    if (n\
    \ <= fib_list.length) {\n        return fib_list[n - 1];\n    }\n    let i: number\
    \ = fib_list.length;\n    let fib_i_1: number = fib_list[i - 1];\n    let fib_i_2:\
    \ number = fib_list[i - 2];\n    let fib_i: number = fib_i_1 + fib_i_2;\n    while\
    \ (i < n) {\n        if (is_prime(fib_i)) {\n            fib_list.push(fib_i);\n\
    \            i += 1;\n        }\n        fib_i_2 = fib_i_1;\n        fib_i_1 =\
    \ fib_i;\n        fib_i = fib_i_1 + fib_i_2;\n    }\n    return fib_list[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeuj7c4xj.ts(22,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738670
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib_nums: number[] = [2, 3, 5, 13, 89];\n  if (n <=\
    \ fib_nums.length) {\n    return fib_nums[n - 1];\n  } else {\n    let i: number\
    \ = fib_nums.length;\n    let next_fib: number = fib_nums[i - 1] + fib_nums[i\
    \ - 2];\n    while (i < n) {\n      if (is_prime(next_fib)) {\n        fib_nums.push(next_fib);\n\
    \        i += 1;\n      }\n      next_fib = fib_nums[i - 1] + fib_nums[i - 2];\n\
    \    }\n    return fib_nums[n - 1];\n  }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnyy0j55u.ts(20,11): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738670
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num = fib(n);\n    while (!is_prime(fib_num))\
    \ {\n        fib_num = fib(n);\n        n += 1;\n    }\n    return fib_num;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2fawutt5.ts(13,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmp2fawutt5.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmp2fawutt5.ts(15,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n        if (is_prime(fib[i]))\
    \ {\n            i++;\n        }\n    }\n    return fib[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpo5gyrrg2.ts(17,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738669
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_number(n);\n\
    \    let i = 0;\n    let j = 0;\n    let result = 0;\n    while (i < n) {\n  \
    \      if (fib[i] === prime[j]) {\n            result = fib[i];\n            i++;\n\
    \            j++;\n        } else if (fib[i] < prime[j]) {\n            i++;\n\
    \        } else {\n            j++;\n        }\n    }\n    return result;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4w3hi140.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp4w3hi140.ts(14,17): error TS2304: Cannot find name ''prime_number''.

    '
  timestamp: 1659738668
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num: number = 0;\n    let fib_num_1: number =\
    \ 1;\n    let fib_num_2: number = 1;\n    let count: number = 0;\n    while (count\
    \ < n) {\n        fib_num = fib_num_1 + fib_num_2;\n        fib_num_2 = fib_num_1;\n\
    \        fib_num_1 = fib_num;\n        if (is_prime(fib_num)) {\n            count\
    \ += 1;\n        }\n    }\n    return fib_num;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_79xrs1k.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738627
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i\
    \ - 2]);\n        i++;\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpzwwzzqxv.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzwwzzqxv.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [1, 2];\n    let prime_fib_numbers:\
    \ number[] = [2];\n    let i: number = 0;\n    while (prime_fib_numbers.length\
    \ < n) {\n        fib_numbers.push(fib_numbers[i] + fib_numbers[i + 1]);\n   \
    \     if (is_prime(fib_numbers[i + 2])) {\n            prime_fib_numbers.push(fib_numbers[i\
    \ + 2]);\n        }\n        i += 1;\n    }\n    return prime_fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbxsqk9_.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738671
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num = fib(n);\n    while (!is_prime(fib_num))\
    \ {\n        fib_num = fib(++n);\n    }\n    return fib_num;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpepg12mpg.ts(13,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpepg12mpg.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpepg12mpg.ts(15,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3, 5];\n    let i: number\
    \ = 3;\n    let fib_number: number = 0;\n    while (i < n) {\n        fib_number\
    \ = fib_numbers[i - 1] + fib_numbers[i - 2];\n        if (is_prime(fib_number))\
    \ {\n            fib_numbers.push(fib_number);\n            i++;\n        }\n\
    \    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeypp1sv8.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738671
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let i = 1;\n    let fib = 2;\n    while (i < n) {\n \
    \       fib = fibonacci(i);\n        if (is_prime(fib)) {\n            i++;\n\
    \        }\n    }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppup11xya.ts(16,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmppup11xya.ts(17,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1659738630
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_numbers(n);\n\
    \    let i = 0;\n    let j = 0;\n    let result = 0;\n    while (i < fib.length\
    \ && j < prime.length) {\n        if (fib[i] === prime[j]) {\n            result\
    \ = fib[i];\n            i++;\n            j++;\n        } else if (fib[i] < prime[j])\
    \ {\n            i++;\n        } else {\n            j++;\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpaqd392ga.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpaqd392ga.ts(14,17): error TS2304: Cannot find name ''prime_numbers''.

    '
  timestamp: 1659738625
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n        i++;\n\
    \    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpl8l9yu99.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl8l9yu99.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3, 5];\n    let prime_fib_numbers:\
    \ number[] = [2, 3, 5];\n    let i: number = 3;\n    let j: number = 0;\n    while\
    \ (j < n) {\n        i++;\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i\
    \ - 2]);\n        if (is_prime(fib_numbers[i])) {\n            prime_fib_numbers.push(fib_numbers[i]);\n\
    \            j++;\n        }\n    }\n    return prime_fib_numbers[n - 1];\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppwclrvej.ts(20,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738671
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num = fib(n);\n    while (!is_prime(fib_num))\
    \ {\n        fib_num = fib(n);\n        n += 1;\n    }\n    return fib_num;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2fawutt5.ts(13,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmp2fawutt5.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmp2fawutt5.ts(15,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738622
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n        i++;\n\
    \    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpl8l9yu99.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl8l9yu99.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_num = fib(n);\n    while (!is_prime(fib_num))\
    \ {\n        fib_num = fib(++n);\n    }\n    return fib_num;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpepg12mpg.ts(13,19): error TS2304: Cannot find name
    ''fib''.

    ../../../../../tmp/tmpepg12mpg.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpepg12mpg.ts(15,19): error TS2304: Cannot find name ''fib''.

    '
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_nums: number[] = [1, 1];\n    let prime_fib_nums:\
    \ number[] = [2, 3];\n    let i: number = 2;\n    while (prime_fib_nums.length\
    \ < n) {\n        fib_nums.push(fib_nums[i - 1] + fib_nums[i - 2]);\n        if\
    \ (is_prime(fib_nums[i])) {\n            prime_fib_nums.push(fib_nums[i]);\n \
    \       }\n        i++;\n    }\n    return prime_fib_nums[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcexa6m11.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738671
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_nums: number[] = [2, 3, 5, 13, 89];\n    if (n\
    \ > fib_nums.length) {\n        let i: number = fib_nums.length;\n        while\
    \ (i < n) {\n            let last_num: number = fib_nums[fib_nums.length - 1];\n\
    \            let second_last_num: number = fib_nums[fib_nums.length - 2];\n  \
    \          let next_num: number = last_num + second_last_num;\n            if\
    \ (is_prime(next_num)) {\n                fib_nums.push(next_num);\n         \
    \       i++;\n            }\n        }\n    }\n    return fib_nums[n - 1];\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbvlqtsix.ts(20,17): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738671
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let prime = prime_number(n);\n\
    \    let i = 0;\n    let j = 0;\n    while (i < n && j < n) {\n        if (fib[i]\
    \ === prime[j]) {\n            return fib[i];\n        } else if (fib[i] < prime[j])\
    \ {\n            i++;\n        } else {\n            j++;\n        }\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpq9irqvhz.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpq9irqvhz.ts(14,17): error TS2304: Cannot find name ''prime_number''.

    '
  timestamp: 1659738671
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let f1 = 1;\n    let f2 = 1;\n    let f3 = 2;\n    let\
    \ count = 2;\n    while (count < n) {\n        f1 = f2;\n        f2 = f3;\n  \
    \      f3 = f1 + f2;\n        if (is_prime(f3)) {\n            count++;\n    \
    \    }\n    }\n    return f3;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwan3n3qh.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738669
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib = fibonacci(n);\n    let i = 0;\n    while (i\
    \ < fib.length) {\n        if (is_prime(fib[i])) {\n            return fib[i];\n\
    \        }\n        i++;\n    }\n    return 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0e8ch9rq.ts(13,15): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmp0e8ch9rq.ts(16,13): error TS2304: Cannot find name ''is_prime''.

    '
  timestamp: 1659738627
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_numbers: number[] = [2, 3, 5, 13, 89];\n    if\
    \ (n <= fib_numbers.length) {\n        return fib_numbers[n - 1];\n    }\n   \
    \ let i: number = fib_numbers.length;\n    let fib_number: number = fib_numbers[i\
    \ - 1];\n    while (i < n) {\n        fib_number = fib_number + fib_numbers[i\
    \ - 2];\n        if (is_prime(fib_number)) {\n            fib_numbers.push(fib_number);\n\
    \            i++;\n        }\n    }\n    return fib_number;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4ytnmtp4.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738671
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number = fibonacci(n);\n    while (!is_prime(fib))\
    \ {\n        fib = fibonacci(n);\n        n++;\n    }\n    return fib;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqk6rz9bl.ts(13,23): error TS2304: Cannot find name
    ''fibonacci''.

    ../../../../../tmp/tmpqk6rz9bl.ts(14,13): error TS2304: Cannot find name ''is_prime''.

    ../../../../../tmp/tmpqk6rz9bl.ts(15,15): error TS2304: Cannot find name ''fibonacci''.

    '
  timestamp: 1659738670
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n        i++;\n\
    \    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpl8l9yu99.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl8l9yu99.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738622
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fib_nums: number[] = [2, 3];\n    let prime_fib_nums:\
    \ number[] = [2, 3];\n    let i: number = 2;\n    while (prime_fib_nums.length\
    \ < n) {\n        fib_nums.push(fib_nums[i - 1] + fib_nums[i - 2]);\n        if\
    \ (is_prime(fib_nums[i])) {\n            prime_fib_nums.push(fib_nums[i]);\n \
    \       }\n        i++;\n    }\n    return prime_fib_nums[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8a67593y.ts(18,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738632
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let fibs: number[] = [2, 3];\n    let i: number = 2;\n\
    \    while (i < n) {\n        fibs.push(fibs[i - 1] + fibs[i - 2]);\n        i++;\n\
    \    }\n    return fibs[n - 1];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmp84v710ve.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp84v710ve.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738630
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n    let a = 1;\n    let b = 1;\n    let c = 0;\n    let count\
    \ = 0;\n    while (count < n) {\n        c = a + b;\n        a = b;\n        b\
    \ = c;\n        if (is_prime(c)) {\n            count += 1;\n        }\n    }\n\
    \    return c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_naj797y.ts(21,13): error TS2304: Cannot find name
    ''is_prime''.

    '
  timestamp: 1659738671

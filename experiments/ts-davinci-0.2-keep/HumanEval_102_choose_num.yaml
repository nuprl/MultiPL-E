name: HumanEval_102_choose_num
language: humaneval_to_typescript.py
prompt: "//This function takes two positive numbers x and y and returns the\n// biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n// there's no\
  \ such number, then the function should return -1.\n// For example:\n// choose_num(12,\
  \ 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num(x: number, y: number):\
  \ number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = choose_num;\n  assert.deepEqual(candidate(12, 15),14);\n\
  \  assert.deepEqual(candidate(13, 12),-1);\n  assert.deepEqual(candidate(33, 12354),12354);\n\
  \  assert.deepEqual(candidate(5234, 5233),-1);\n  assert.deepEqual(candidate(6,\
  \ 29),28);\n  assert.deepEqual(candidate(27, 10),-1);\n  assert.deepEqual(candidate(7,\
  \ 7),-1);\n  assert.deepEqual(candidate(546, 546),546);\n}\n\ntest();"
completions: ["    let result: number = -1;\n    for (let i: number = x; i <= y; i++)\
    \ {\n        if (i % 2 == 0) {\n            result = i;\n        }\n    }\n  \
    \  return result;\n}\n", "    if (x % 2 === 0) {\n        return x;\n    } else\
    \ if (x % 2 === 1 && y % 2 === 0) {\n        return y;\n    } else {\n       \
    \ return -1;\n    }\n}\n", "    if (x > y) {\n        return -1;\n    }\n    let\
    \ result = x;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 === 0) {\n\
    \            result = i;\n        }\n    }\n    return result;\n}\n", "    let\
    \ result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n        if\
    \ (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
    }\n", "    let result: number = -1;\n    for (let i: number = x; i <= y; i++)\
    \ {\n        if (i % 2 == 0) {\n            result = i;\n        }\n    }\n  \
    \  return result;\n}\n", "    let result: number = -1;\n    for (let i: number\
    \ = x; i <= y; i++) {\n        if (i % 2 == 0) {\n            result = i;\n  \
    \      }\n    }\n    return result;\n}\n", "    let num = -1;\n    for (let i\
    \ = x; i <= y; i++) {\n        if (i % 2 == 0) {\n            num = i;\n     \
    \   }\n    }\n    return num;\n}\n", "    if (x % 2 == 0) {\n        return x;\n\
    \    } else if (x % 2 == 1 && y % 2 == 0) {\n        return y;\n    } else {\n\
    \        return -1;\n    }\n}\n", "    if (x % 2 == 0) {\n        return x;\n\
    \    } else if (x % 2 != 0 && y % 2 == 0) {\n        return y;\n    } else {\n\
    \        return -1;\n    }\n}\n", "    let result: number = -1;\n    for (let\
    \ i: number = x; i <= y; i++) {\n        if (i % 2 == 0) {\n            result\
    \ = i;\n        }\n    }\n    return result;\n}\n", "    let result: number =\
    \ -1;\n    for (let i: number = x; i <= y; i++) {\n        if (i % 2 == 0) {\n\
    \            result = i;\n        }\n    }\n    return result;\n}\n", "    let\
    \ num: number = -1;\n    if (x % 2 == 0) {\n        num = x;\n    } else {\n \
    \       num = x + 1;\n    }\n    for (let i = num; i <= y; i += 2) {\n       \
    \ if (i % 2 == 0) {\n            num = i;\n        }\n    }\n    return num;\n\
    }\n", "    if (x % 2 == 0) {\n        return x;\n    } else if (x % 2 != 0 &&\
    \ y % 2 == 0) {\n        return y;\n    } else {\n        return -1;\n    }\n\
    }\n", "    if (x > y) {\n        return -1;\n    }\n    let maxEven = -1;\n  \
    \  for (let i = x; i <= y; i++) {\n        if (i % 2 === 0) {\n            maxEven\
    \ = i;\n        }\n    }\n    return maxEven;\n}\n", "    if (x > y) {\n     \
    \   return -1;\n    }\n    if (x % 2 === 0) {\n        return x;\n    }\n    return\
    \ choose_num(x + 1, y);\n}\n", "    if (x % 2 === 0) {\n        return x;\n  \
    \  } else if (x + 1 === y) {\n        return -1;\n    } else {\n        return\
    \ choose_num(x + 1, y);\n    }\n}\n", "    if (x > y) {\n        return -1;\n\
    \    }\n    if (x % 2 === 0) {\n        return x;\n    }\n    return choose_num(x\
    \ + 1, y);\n}\n", "    if (x % 2 == 0) {\n        return x;\n    } else if (x\
    \ % 2 != 0 && y % 2 == 0) {\n        return y;\n    } else {\n        return -1;\n\
    \    }\n}\n", "    if (x < 0 || y < 0) {\n        return -1;\n    }\n    if (x\
    \ % 2 === 0) {\n        return x;\n    }\n    if (y % 2 === 0) {\n        return\
    \ y;\n    }\n    return -1;\n}\n", "    let result = -1;\n    for (let i = x;\
    \ i <= y; i++) {\n        if (i % 2 === 0) {\n            result = i;\n      \
    \  }\n    }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

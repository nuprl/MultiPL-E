completions:
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    if (x % 2 === 0) {\n        return x;\n    } else if (x % 2 === 1 && y % 2\
  \ === 0) {\n        return y;\n    } else {\n        return -1;\n    }\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    let result = x;\n    for (let\
  \ i = x; i <= y; i++) {\n        if (i % 2 === 0) {\n            result = i;\n \
  \       }\n    }\n    return result;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let num = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 == 0)\
  \ {\n            num = i;\n        }\n    }\n    return num;\n}\n"
- "    if (x % 2 == 0) {\n        return x;\n    } else if (x % 2 == 1 && y % 2 ==\
  \ 0) {\n        return y;\n    } else {\n        return -1;\n    }\n}\n"
- "    if (x % 2 == 0) {\n        return x;\n    } else if (x % 2 != 0 && y % 2 ==\
  \ 0) {\n        return y;\n    } else {\n        return -1;\n    }\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let num: number = -1;\n    if (x % 2 == 0) {\n        num = x;\n    } else\
  \ {\n        num = x + 1;\n    }\n    for (let i = num; i <= y; i += 2) {\n    \
  \    if (i % 2 == 0) {\n            num = i;\n        }\n    }\n    return num;\n\
  }\n"
- "    if (x % 2 == 0) {\n        return x;\n    } else if (x % 2 != 0 && y % 2 ==\
  \ 0) {\n        return y;\n    } else {\n        return -1;\n    }\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    let maxEven = -1;\n    for (let\
  \ i = x; i <= y; i++) {\n        if (i % 2 === 0) {\n            maxEven = i;\n\
  \        }\n    }\n    return maxEven;\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 === 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    if (x % 2 === 0) {\n        return x;\n    } else if (x + 1 === y) {\n    \
  \    return -1;\n    } else {\n        return choose_num(x + 1, y);\n    }\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 === 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    if (x % 2 == 0) {\n        return x;\n    } else if (x % 2 != 0 && y % 2 ==\
  \ 0) {\n        return y;\n    } else {\n        return -1;\n    }\n}\n"
- "    if (x < 0 || y < 0) {\n        return -1;\n    }\n    if (x % 2 === 0) {\n\
  \        return x;\n    }\n    if (y % 2 === 0) {\n        return y;\n    }\n  \
  \  return -1;\n}\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    if (x % 2 == 0) {\n        return x;\n    } else if (x + 1 == y) {\n      \
  \  return -1;\n    } else {\n        return choose_num(x + 1, y);\n    }\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let max = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 == 0 &&\
  \ i > max) {\n            max = i;\n        }\n    }\n    return max;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let maxEven = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            maxEven = i;\n        }\n    }\n    return maxEven;\n}\n"
- "    if (x % 2 === 0) {\n        return x;\n    }\n    else if (y % 2 === 0) {\n\
  \        return y;\n    }\n    else {\n        return -1;\n    }\n}\n"
- "    if (x % 2 === 0) {\n        return x;\n    } else if (x % 2 === 1 && y % 2\
  \ === 0) {\n        return y;\n    } else {\n        return -1;\n    }\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    if (x % 2 == 0) {\n        result = x;\n    }\
  \ else {\n        result = x + 1;\n    }\n    if (result > y) {\n        result\
  \ = -1;\n    }\n    return result;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let max = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 == 0 &&\
  \ i > max) {\n            max = i;\n        }\n    }\n    return max;\n}\n"
- "    let result: number = -1;\n    if (x % 2 == 0) {\n        result = x;\n    }\
  \ else {\n        result = x + 1;\n    }\n    if (result > y) {\n        result\
  \ = -1;\n    }\n    return result;\n}\n"
- "    if (x % 2 === 0) {\n        return x;\n    } else if (x % 2 === 1 && y % 2\
  \ === 0) {\n        return y;\n    } else {\n        return -1;\n    }\n}\n"
- "    let result: number = -1;\n    if (x % 2 === 0) {\n        result = x;\n   \
  \ } else {\n        result = x + 1;\n    }\n    for (let i = result; i <= y; i +=\
  \ 2) {\n        result = i;\n    }\n    return result;\n}\n"
- "    let evenNum: number = -1;\n    for (let i = x; i <= y; i++) {\n        if (i\
  \ % 2 === 0) {\n            evenNum = i;\n        }\n    }\n    return evenNum;\n\
  }\n"
- "    let even: number = -1;\n    for (let i: number = x; i <= y; i++) {\n      \
  \  if (i % 2 == 0) {\n            even = i;\n        }\n    }\n    return even;\n\
  }\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 == 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    if (x % 2 !== 0) {\n        x++;\n    }\n    if (y % 2 !== 0) {\n        y--;\n\
  \    }\n    if (x > y) {\n        return -1;\n    }\n    return y;\n}\n"
- "    let max: number = -1;\n    for (let i: number = x; i <= y; i++) {\n       \
  \ if (i % 2 == 0 && i > max) {\n            max = i;\n        }\n    }\n    return\
  \ max;\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 == 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 == 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let max = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 == 0 &&\
  \ i > max) {\n            max = i;\n        }\n    }\n    return max;\n}\n"
- "    if (x % 2 == 0) {\n        return x;\n    }\n    else if (x % 2 != 0 && x +\
  \ 1 == y) {\n        return -1;\n    }\n    else {\n        return choose_num(x\
  \ + 1, y);\n    }\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 == 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    if (x % 2 === 0) {\n        return x;\n    } else if (x % 2 !== 0 && x + 1\
  \ <= y) {\n        return x + 1;\n    } else {\n        return -1;\n    }\n}\n"
- "    let result: number = -1;\n    if (x % 2 === 0) {\n        result = x;\n   \
  \ } else {\n        result = x + 1;\n    }\n    if (result > y) {\n        result\
  \ = -1;\n    }\n    return result;\n}\n"
- "    let num: number = -1;\n    for (let i = x; i <= y; i++) {\n        if (i %\
  \ 2 == 0) {\n            num = i;\n        }\n    }\n    return num;\n}\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 == 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    let result = y;\n    while (result\
  \ % 2 !== 0) {\n        result--;\n    }\n    return result;\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    let result = x;\n    while (result\
  \ <= y) {\n        if (result % 2 === 0) {\n            return result;\n       \
  \ }\n        result++;\n    }\n    return -1;\n}\n"
- "    let result: number = -1;\n    if (x % 2 === 0) {\n        result = x;\n   \
  \ } else {\n        result = x + 1;\n    }\n    for (let i = result; i <= y; i +=\
  \ 2) {\n        result = i;\n    }\n    return result;\n}\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "    let result: number = -1;\n    if (x > y) {\n        return result;\n    }\n\
  \    for (let i = y; i >= x; i--) {\n        if (i % 2 === 0) {\n            result\
  \ = i;\n            break;\n        }\n    }\n    return result;\n}\n"
- "    if (x % 2 === 0 && y % 2 === 0) {\n        return y;\n    } else if (x % 2\
  \ === 0 && y % 2 !== 0) {\n        return x;\n    } else if (x % 2 !== 0 && y %\
  \ 2 === 0) {\n        return y;\n    } else {\n        return -1;\n    }\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 === 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    let max: number = -1;\n    for (let i: number = x; i <= y; i++) {\n       \
  \ if (i % 2 == 0 && i > max) {\n            max = i;\n        }\n    }\n    return\
  \ max;\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    else if (x % 2 == 0) {\n     \
  \   return x;\n    }\n    else {\n        return choose_num(x + 1, y);\n    }\n\
  }\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 == 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 == 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    if (x % 2 !== 0) {\n        x += 1;\n    }\n    for (let i = x; i <= y; i +=\
  \ 2) {\n        if (i % 2 === 0) {\n            return i;\n        }\n    }\n  \
  \  return -1;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    if (x % 2 === 0) {\n        result = x;\n   \
  \ } else {\n        result = x + 1;\n    }\n    for (let i = result; i <= y; i +=\
  \ 2) {\n        result = i;\n    }\n    return result;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    if (x % 2 !== 0) {\n        x++;\n    }\n    if (y % 2 !== 0) {\n        y--;\n\
  \    }\n    if (x > y) {\n        return -1;\n    }\n    return y;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let maxEven = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            maxEven = i;\n        }\n    }\n    return maxEven;\n}\n"
- "    let result: number = -1;\n    if (x % 2 === 0) {\n        result = x;\n   \
  \ } else {\n        result = x + 1;\n    }\n    while (result < y) {\n        result\
  \ += 2;\n    }\n    if (result > y) {\n        result = -1;\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    if (x > y) {\n        return result;\n    }\n\
  \    for (let i = y; i >= x; i--) {\n        if (i % 2 === 0) {\n            result\
  \ = i;\n            break;\n        }\n    }\n    return result;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    if (x % 2 == 0) {\n        return x;\n    } else if (x + 1 == y) {\n      \
  \  return -1;\n    } else {\n        return choose_num(x + 1, y);\n    }\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 == 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    let result: number = -1;\n    if (x % 2 == 0) {\n        result = x;\n    }\
  \ else {\n        result = x + 1;\n    }\n    if (result > y) {\n        result\
  \ = -1;\n    }\n    return result;\n}\n"
- "    let num: number = -1;\n    for (let i = x; i <= y; i++) {\n        if (i %\
  \ 2 == 0) {\n            num = i;\n        }\n    }\n    return num;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 == 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    if (x % 2 === 0) {\n        return x;\n    } else if (x + 1 === y) {\n    \
  \    return -1;\n    } else {\n        return choose_num(x + 1, y);\n    }\n}\n"
- "    let maxEven = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            maxEven = i;\n        }\n    }\n    return maxEven;\n}\n"
- "    let max: number = -1;\n    for (let i: number = x; i <= y; i++) {\n       \
  \ if (i % 2 == 0 && i > max) {\n            max = i;\n        }\n    }\n    return\
  \ max;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    if (x > y) {\n        return result;\n    }\n\
  \    for (let i = y; i >= x; i--) {\n        if (i % 2 === 0) {\n            result\
  \ = i;\n            break;\n        }\n    }\n    return result;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let maxEven = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            maxEven = i;\n        }\n    }\n    return maxEven;\n}\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "    let maxEven = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            maxEven = i;\n        }\n    }\n    return maxEven;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    if (x % 2 === 0) {\n        result = x;\n   \
  \ } else {\n        result = x + 1;\n    }\n    while (result <= y) {\n        return\
  \ result;\n    }\n    return -1;\n}\n"
- "    if (x % 2 == 0 && y % 2 == 0) {\n        return y;\n    } else if (x % 2 ==\
  \ 0 && y % 2 != 0) {\n        return x;\n    } else if (x % 2 != 0 && y % 2 == 0)\
  \ {\n        return y;\n    } else {\n        return -1;\n    }\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let num: number = -1;\n    for (let i = x; i <= y; i++) {\n        if (i %\
  \ 2 == 0) {\n            num = i;\n        }\n    }\n    return num;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let maxEven: number = -1;\n    for (let i: number = x; i <= y; i++) {\n   \
  \     if (i % 2 == 0) {\n            maxEven = i;\n        }\n    }\n    return\
  \ maxEven;\n}\n"
- "    let result: number = -1;\n    if (x % 2 == 0) {\n        result = x;\n    }\
  \ else {\n        result = x + 1;\n    }\n    while (result <= y) {\n        return\
  \ result;\n    }\n    return -1;\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 === 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    if (x % 2 == 0) {\n        return x;\n    } else if (x + 1 == y) {\n      \
  \  return -1;\n    } else {\n        return choose_num(x + 1, y);\n    }\n}\n"
- "    let max = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 == 0 &&\
  \ i > max) {\n            max = i;\n        }\n    }\n    return max;\n}\n"
- "    if (x % 2 === 0) {\n        return x;\n    } else if (x + 1 === y) {\n    \
  \    return -1;\n    } else {\n        return choose_num(x + 1, y);\n    }\n}\n"
- "    if (x % 2 == 0) {\n        return x;\n    }\n    else if (x % 2 == 1 && y %\
  \ 2 == 0) {\n        return y;\n    }\n    else {\n        return -1;\n    }\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 == 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let max: number = -1;\n    for (let i: number = x; i <= y; i++) {\n       \
  \ if (i % 2 == 0 && i > max) {\n            max = i;\n        }\n    }\n    return\
  \ max;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "    let max: number = -1;\n    for (let i: number = x; i <= y; i++) {\n       \
  \ if (i % 2 == 0 && i > max) {\n            max = i;\n        }\n    }\n    return\
  \ max;\n}\n"
- "    let result: number = -1;\n    if (x > y) {\n        return result;\n    }\n\
  \    for (let i = y; i >= x; i--) {\n        if (i % 2 === 0) {\n            result\
  \ = i;\n            break;\n        }\n    }\n    return result;\n}\n"
- "    if (x % 2 === 0) {\n        return x;\n    } else if (x + 1 === y) {\n    \
  \    return -1;\n    } else {\n        return choose_num(x + 1, y);\n    }\n}\n"
- "    let max = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 == 0 &&\
  \ i > max) {\n            max = i;\n        }\n    }\n    return max;\n}\n"
- "  let result: number = -1;\n  for (let i = x; i <= y; i++) {\n    if (i % 2 ===\
  \ 0) {\n      result = i;\n    }\n  }\n  return result;\n}\n"
- "    let maxEven = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            maxEven = i;\n        }\n    }\n    return maxEven;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let maxEven = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            maxEven = i;\n        }\n    }\n    return maxEven;\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 == 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 === 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    if (x % 2 == 0) {\n        return x;\n    } else if (x + 1 == y) {\n      \
  \  return -1;\n    } else {\n        return choose_num(x + 1, y);\n    }\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let max = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 == 0 &&\
  \ i > max) {\n            max = i;\n        }\n    }\n    return max;\n}\n"
- "    let maxEven = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            maxEven = i;\n        }\n    }\n    return maxEven;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 == 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    let result: number = -1;\n    if (x < y) {\n        for (let i = y; i >= x;\
  \ i--) {\n            if (i % 2 == 0) {\n                result = i;\n         \
  \       break;\n            }\n        }\n    }\n    return result;\n}\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "  let result: number = -1;\n  for (let i = x; i <= y; i++) {\n    if (i % 2 ===\
  \ 0) {\n      result = i;\n    }\n  }\n  return result;\n}\n"
- "    let maxEven = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            maxEven = i;\n        }\n    }\n    return maxEven;\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 == 0) {\n        return\
  \ x;\n    }\n    else {\n        return choose_num(x + 1, y);\n    }\n}\n"
- "    if (x % 2 === 0) {\n        return x;\n    }\n    else if (y % 2 === 0) {\n\
  \        return y;\n    }\n    else {\n        return -1;\n    }\n}\n"
- "    if (x % 2 == 0) {\n        return x;\n    } else if (x + 1 == y) {\n      \
  \  return -1;\n    } else {\n        return choose_num(x + 1, y);\n    }\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 == 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    if (x % 2 == 0 && y % 2 == 0) {\n        return y;\n    } else if (x % 2 ==\
  \ 0 && y % 2 != 0) {\n        return x;\n    } else if (x % 2 != 0 && y % 2 == 0)\
  \ {\n        return y;\n    } else {\n        return -1;\n    }\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 == 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    if (x % 2 === 0) {\n        return x;\n    }\n    else if (y % 2 === 0) {\n\
  \        return y;\n    }\n    else {\n        return -1;\n    }\n}\n"
- "    let num = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 == 0)\
  \ {\n            num = i;\n        }\n    }\n    return num;\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 == 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "  let result: number = -1;\n  for (let i = x; i <= y; i++) {\n    if (i % 2 ===\
  \ 0) {\n      result = i;\n    }\n  }\n  return result;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    if (x > y) {\n        return -1;\n    }\n    for (let i = y; i >= x; i--) {\n\
  \        if (i % 2 === 0) {\n            return i;\n        }\n    }\n    return\
  \ -1;\n}\n"
- "    let max: number = -1;\n    for (let i: number = x; i <= y; i++) {\n       \
  \ if (i % 2 == 0 && i > max) {\n            max = i;\n        }\n    }\n    return\
  \ max;\n}\n"
- "    let result: number = -1;\n    if (x > y) {\n        return result;\n    }\n\
  \    if (x % 2 == 0) {\n        result = x;\n    } else {\n        result = x +\
  \ 1;\n    }\n    return result;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let maxEven = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            maxEven = i;\n        }\n    }\n    return maxEven;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let max: number = -1;\n    for (let i: number = x; i <= y; i++) {\n       \
  \ if (i % 2 == 0 && i > max) {\n            max = i;\n        }\n    }\n    return\
  \ max;\n}\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 === 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    let result: number = -1;\n    if (x > y) {\n        return result;\n    }\n\
  \    for (let i = y; i >= x; i--) {\n        if (i % 2 === 0) {\n            result\
  \ = i;\n            break;\n        }\n    }\n    return result;\n}\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "    if (x % 2 == 0) {\n        return x;\n    }\n    else if (x % 2 == 1 && x <\
  \ y) {\n        return choose_num(x + 1, y);\n    }\n    else {\n        return\
  \ -1;\n    }\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 === 0) {\n        return\
  \ x;\n    }\n    return choose_num(x + 1, y);\n}\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: number = -1;\n    if (x % 2 == 0) {\n        result = x;\n    }\
  \ else {\n        result = x + 1;\n    }\n    while (result <= y) {\n        return\
  \ result;\n    }\n    return -1;\n}\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    if (x > y) {\n        return -1;\n    }\n    if (x % 2 != 0) {\n        x++;\n\
  \    }\n    if (y % 2 != 0) {\n        y--;\n    }\n    return y;\n}\n"
- "    if (x % 2 !== 0) {\n        x += 1;\n    }\n    if (y % 2 !== 0) {\n      \
  \  y -= 1;\n    }\n    if (x > y) {\n        return -1;\n    }\n    return y;\n\
  }\n"
- "    let result: number = -1;\n    for (let i: number = x; i <= y; i++) {\n    \
  \    if (i % 2 == 0) {\n            result = i;\n        }\n    }\n    return result;\n\
  }\n"
- "    if (x % 2 === 0) {\n        return x;\n    } else if (x + 1 === y) {\n    \
  \    return -1;\n    } else {\n        return choose_num(x + 1, y);\n    }\n}\n"
- "    if (x % 2 == 0) {\n        return x;\n    } else if (x + 1 == y) {\n      \
  \  return -1;\n    } else {\n        return choose_num(x + 1, y);\n    }\n}\n"
- "    let result = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 ===\
  \ 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n"
- "    if (x % 2 === 0) {\n        return x;\n    } else if (x + 1 === y) {\n    \
  \    return -1;\n    } else {\n        return choose_num(x + 1, y);\n    }\n}\n"
language: ts
name: HumanEval_102_choose_num
prompt: "//This function takes two positive numbers x and y and returns the\n// biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n// there's no\
  \ such number, then the function should return -1.\n// For example:\n// choose_num(12,\
  \ 15) = 14\n// choose_num(13, 12) = -1\nfunction choose_num(x: number, y: number):\
  \ number {\n"
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = choose_num;\n  assert.deepEqual(candidate(12, 15),14);\n\
  \  assert.deepEqual(candidate(13, 12),-1);\n  assert.deepEqual(candidate(33, 12354),12354);\n\
  \  assert.deepEqual(candidate(5234, 5233),-1);\n  assert.deepEqual(candidate(6,\
  \ 29),28);\n  assert.deepEqual(candidate(27, 10),-1);\n  assert.deepEqual(candidate(7,\
  \ 7),-1);\n  assert.deepEqual(candidate(546, 546),546);\n}\n\ntest();"

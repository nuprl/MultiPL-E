completions:
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '  return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '  return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '  return (a * h) / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '  return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '  return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '  return a * h / 2;

  }

  '
- '  return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '  return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '  return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '  return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '  return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
- '  return (a * h) / 2;

  }

  '
- '    return a * h / 2;

  }

  '
language: ts
name: HumanEval_45_triangle_area
prompt: '//Given length of a side and high return area for a triangle.

  // >>> triangle_area(5, 3)

  // 7.5

  function triangle_area(a: number, h: number): number {

  '
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n\
  \  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n\
  }\n\ntest();"

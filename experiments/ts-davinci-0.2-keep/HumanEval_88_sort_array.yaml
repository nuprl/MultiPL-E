completions:
- "    if (array.length === 0) {\n        return [];\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    const sum = array[0] + array[array.length\
  \ - 1];\n    if (sum % 2 === 0) {\n        return array.sort((a, b) => b - a);\n\
  \    }\n    return array.sort((a, b) => a - b);\n}\n\nconsole.log(sort_array([]));\n\
  console.log(sort_array([5]));\nconsole.log(sort_array([2, 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]));"
- "  const sum = array[0] + array[array.length - 1];\n  const isOdd = sum % 2 ===\
  \ 1;\n  const sortedArray = array.sort((a, b) => {\n    if (isOdd) {\n      return\
  \ a - b;\n    } else {\n      return b - a;\n    }\n  });\n  return sortedArray;\n\
  }\n"
- "    if (array.length === 0) return [];\n    if (array.length === 1) return array;\n\
  \    let sum = array[0] + array[array.length - 1];\n    if (sum % 2 === 0) {\n \
  \       return array.sort((a, b) => b - a);\n    } else {\n        return array.sort((a,\
  \ b) => a - b);\n    }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "    if (array.length === 0) {\n        return [];\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n"
- "    if (array.length === 0) {\n        return [];\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  const isEven = (array[0] + array[array.length - 1]) % 2 === 0;\n  return isEven\
  \ ? array.sort((a, b) => b - a) : array.sort((a, b) => a - b);\n}\n"
- "    if (array.length === 0) return [];\n    if (array.length === 1) return array;\n\
  \    if ((array[0] + array[array.length - 1]) % 2 === 0) {\n        return array.sort((a,\
  \ b) => b - a);\n    } else {\n        return array.sort((a, b) => a - b);\n   \
  \ }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  } else if (array.length === 1) {\n\
  \    return array;\n  } else {\n    let sum = array[0] + array[array.length - 1];\n\
  \    if (sum % 2 === 0) {\n      return array.sort((a, b) => b - a);\n    } else\
  \ {\n      return array.sort((a, b) => a - b);\n    }\n  }\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  return sum % 2 === 0 ? array.sort((a,\
  \ b) => b - a) : array.sort((a, b) => a - b);\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if (array.length % 2 === 0) {\n  \
  \      return array.sort((a, b) => b - a);\n    } else {\n        return array.sort((a,\
  \ b) => a - b);\n    }\n}\n\nconsole.log(sort_array([]));\nconsole.log(sort_array([5]));\n\
  console.log(sort_array([2, 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2, 4, 3, 0,\
  \ 1, 5, 6]));"
- "    const sum = array[0] + array[array.length - 1];\n    const sorted = array.sort((a,\
  \ b) => sum % 2 === 0 ? b - a : a - b);\n    return sorted;\n}\n\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]));\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n"
- "  return array.length % 2 === 0\n    ? array.sort((a, b) => b - a)\n    : array.sort((a,\
  \ b) => a - b);\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  const sortedArray = array.sort((a,\
  \ b) => (sum % 2 === 0 ? b - a : a - b));\n  return sortedArray;\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  const sorted = array.sort((a,\
  \ b) => (sum % 2 === 0 ? b - a : a - b));\n  return sorted;\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "    if (array.length === 0) {\n        return [];\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n"
- "  return array.sort((a, b) => {\n    if (a + b % 2 === 0) {\n      return a - b;\n\
  \    } else {\n      return b - a;\n    }\n  });\n}\n"
- "    if (array.length === 0) {\n        return [];\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n\nconsole.log(sort_array([]));\n\
  console.log(sort_array([5]));\nconsole.log(sort_array([2, 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]));\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if (array.length % 2 === 0) {\n  \
  \      return array.sort((a, b) => b - a);\n    } else {\n        return array.sort((a,\
  \ b) => a - b);\n    }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  const sorted = array.sort((a,\
  \ b) => (sum % 2 === 0 ? b - a : a - b));\n  return sorted;\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  const isOdd = sum % 2 ===\
  \ 1;\n  const sorted = array.sort((a, b) => (isOdd ? a - b : b - a));\n  return\
  \ sorted;\n}\n"
- "  return array.length % 2\n    ? array.sort((a, b) => a - b)\n    : array.sort((a,\
  \ b) => b - a);\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  return sum % 2 === 0 ? array.sort((a,\
  \ b) => b - a) : array.sort((a, b) => a - b);\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n\nexport default sort_array;"
- "  if (array.length === 0) {\n    return [];\n  } else if (array.length === 1) {\n\
  \    return array;\n  } else {\n    let sum: number = array[0] + array[array.length\
  \ - 1];\n    if (sum % 2 === 0) {\n      return array.sort((a, b) => b - a);\n \
  \   } else {\n      return array.sort((a, b) => a - b);\n    }\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  } else if (array.length === 1) {\n\
  \    return array;\n  } else {\n    const sum = array[0] + array[array.length -\
  \ 1];\n    if (sum % 2 === 0) {\n      return array.sort((a, b) => b - a);\n   \
  \ } else {\n      return array.sort((a, b) => a - b);\n    }\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  const sum = array[0] + array[array.length - 1];\n  if\
  \ (sum % 2 === 0) {\n    return array.sort((a, b) => b - a);\n  } else {\n    return\
  \ array.sort((a, b) => a - b);\n  }\n}\n"
- "    if (array.length === 0) {\n        return [];\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n\nconsole.log(sort_array([]));\n\
  console.log(sort_array([5]));\nconsole.log(sort_array([2, 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]));"
- "    let sum = array[0] + array[array.length - 1];\n    if (sum % 2 === 0) {\n \
  \       array.sort((a, b) => b - a);\n    } else {\n        array.sort((a, b) =>\
  \ a - b);\n    }\n    return array;\n}\n\nconsole.log(sort_array([2, 4, 3, 0, 1,\
  \ 5]));\nconsole.log(sort_array([2, 4, 3, 0, 1, 5, 6]));"
- "  if (array.length === 0) {\n    return [];\n  }\n  const sum = array[0] + array[array.length\
  \ - 1];\n  const isOdd = sum % 2 === 1;\n  const sortedArray = array.sort((a, b)\
  \ => {\n    if (isOdd) {\n      return a - b;\n    }\n    return b - a;\n  });\n\
  \  return sortedArray;\n}\n"
- "    if (array.length === 0) return array;\n    if (array.length === 1) return array;\n\
  \    if (array.length === 2) {\n        if ((array[0] + array[array.length - 1])\
  \ % 2 === 0) {\n            return [array[array.length - 1], array[0]];\n      \
  \  } else {\n            return array;\n        }\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "    if (array.length === 0) return array;\n    if (array.length === 1) return array;\n\
  \    if (array.length % 2 === 0) {\n        return array.sort((a, b) => b - a);\n\
  \    } else {\n        return array.sort((a, b) => a - b);\n    }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  const sorted = array.sort((a,\
  \ b) => (sum % 2 === 0 ? b - a : a - b));\n  return sorted;\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  return sum % 2 === 0 ? array.sort((a,\
  \ b) => b - a) : array.sort((a, b) => a - b);\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  const sum = array[0] + array[array.length - 1];\n  if\
  \ (sum % 2 === 0) {\n    return array.sort((a, b) => b - a);\n  } else {\n    return\
  \ array.sort((a, b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  let sum = array[0] + array[array.length - 1];\n  let sortedArray = array.sort((a,\
  \ b) => a - b);\n  if (sum % 2 === 0) {\n    return sortedArray.reverse();\n  }\
  \ else {\n    return sortedArray;\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  } else if (array.length === 1) {\n\
  \    return array;\n  } else {\n    let sum = array[0] + array[array.length - 1];\n\
  \    if (sum % 2 === 0) {\n      return array.sort((a, b) => b - a);\n    } else\
  \ {\n      return array.sort((a, b) => a - b);\n    }\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "    if (array.length === 0) return [];\n    if (array.length === 1) return array;\n\
  \    let sum = array[0] + array[array.length - 1];\n    if (sum % 2 === 0) {\n \
  \       return array.sort((a, b) => b - a);\n    } else {\n        return array.sort((a,\
  \ b) => a - b);\n    }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  const sum = array[0] + array[array.length - 1];\n  if\
  \ (sum % 2 === 0) {\n    return array.sort((a, b) => b - a);\n  } else {\n    return\
  \ array.sort((a, b) => a - b);\n  }\n}\n"
- "    if (array.length === 0) {\n        return [];\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  const sorted = array.sort((a,\
  \ b) => (sum % 2 === 0 ? b - a : a - b));\n  return sorted;\n}\n"
- "    let sum = array[0] + array[array.length - 1];\n    if (sum % 2 == 0) {\n  \
  \      return array.sort((a, b) => b - a);\n    } else {\n        return array.sort((a,\
  \ b) => a - b);\n    }\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n"
- "    let sum = array[0] + array[array.length - 1];\n    let sortedArray = array.sort((a,\
  \ b) => a - b);\n    if (sum % 2 !== 0) {\n        return sortedArray;\n    } else\
  \ {\n        return sortedArray.reverse();\n    }\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  return sum % 2 === 0 ? array.sort((a,\
  \ b) => b - a) : array.sort((a, b) => a - b);\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if (array.length % 2 === 0) {\n  \
  \      return array.sort((a, b) => b - a);\n    } else {\n        return array.sort((a,\
  \ b) => a - b);\n    }\n}\n\nconsole.log(sort_array([2, 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]));\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if (array.length % 2 === 0) {\n  \
  \      return array.sort((a, b) => b - a);\n    } else {\n        return array.sort((a,\
  \ b) => a - b);\n    }\n}\n"
- "    const sum = array[0] + array[array.length - 1];\n    const sortedArray = array.sort((a,\
  \ b) => {\n        if (sum % 2 === 0) {\n            return b - a;\n        } else\
  \ {\n            return a - b;\n        }\n    });\n    return sortedArray;\n}\n\
  \nconsole.log(sort_array([2, 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2, 4, 3,\
  \ 0, 1, 5, 6]));\n"
- "    if (array.length === 0) return array;\n    if (array.length === 1) return array;\n\
  \    if (array.length > 1) {\n        if ((array[0] + array[array.length - 1]) %\
  \ 2 === 0) {\n            return array.sort((a, b) => b - a);\n        } else {\n\
  \            return array.sort((a, b) => a - b);\n        }\n    }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  const sum = array[0] + array[array.length\
  \ - 1];\n  const isEven = sum % 2 === 0;\n  if (isEven) {\n    return array.sort((a,\
  \ b) => b - a);\n  }\n  return array.sort((a, b) => a - b);\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  const isEven = sum % 2 ===\
  \ 0;\n  const sorted = array.sort((a, b) => {\n    if (isEven) {\n      return b\
  \ - a;\n    }\n    return a - b;\n  });\n  return sorted;\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  return sum % 2 === 0 ? array.sort((a,\
  \ b) => b - a) : array.sort((a, b) => a - b);\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  return sum % 2 === 0 ? array.sort((a,\
  \ b) => b - a) : array.sort((a, b) => a - b);\n}\n"
- "  if (array.length === 0) {\n    return [];\n  } else if (array.length === 1) {\n\
  \    return array;\n  } else {\n    const sum = array[0] + array[array.length -\
  \ 1];\n    if (sum % 2 === 0) {\n      return array.sort((a, b) => b - a);\n   \
  \ } else {\n      return array.sort((a, b) => a - b);\n    }\n  }\n}\n\nconsole.log(sort_array([]));\n\
  console.log(sort_array([5]));\nconsole.log(sort_array([2, 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]));"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 !== 0) {\n\
  \    return array.sort((a, b) => a - b);\n  } else {\n    return array.sort((a,\
  \ b) => b - a);\n  }\n}\n"
- "    let sum: number = array[0] + array[array.length - 1];\n    if (sum % 2 ===\
  \ 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n        return\
  \ array.sort((a, b) => a - b);\n    }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  let sum = array[0] + array[array.length - 1];\n  let sorted = array.sort((a,\
  \ b) => {\n    if (sum % 2 === 0) {\n      return b - a;\n    } else {\n      return\
  \ a - b;\n    }\n  });\n  return sorted;\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  const isEven = (array[0] +\
  \ array[array.length - 1]) % 2 === 0;\n  return array.sort((a, b) => (isEven ? b\
  \ - a : a - b));\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if (array.length === 2) {\n      \
  \  if (array[0] > array[1]) {\n            return [array[1], array[0]];\n      \
  \  }\n        return array;\n    }\n    if ((array[0] + array[array.length - 1])\
  \ % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    }\n    return array.sort((a,\
  \ b) => a - b);\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  return sum % 2 === 0 ? array.sort((a,\
  \ b) => b - a) : array.sort((a, b) => a - b);\n}\n\nconsole.log(sort_array([2, 4,\
  \ 3, 0, 1, 5]));\nconsole.log(sort_array([2, 4, 3, 0, 1, 5, 6]));\n"
- "  const sum = array[0] + array[array.length - 1];\n  const sorted = array.sort((a,\
  \ b) => (sum % 2 === 0 ? b - a : a - b));\n  return sorted;\n}\n"
- "  let sum = array[0] + array[array.length - 1];\n  return sum % 2 === 0 ? array.sort((a,\
  \ b) => b - a) : array.sort((a, b) => a - b);\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  return sum % 2 === 0 ? array.sort((a,\
  \ b) => b - a) : array.sort((a, b) => a - b);\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  const sortedArray = array.sort((a,\
  \ b) => (sum % 2 === 0 ? b - a : a - b));\n  return sortedArray;\n}\n"
- "    const sum = array[0] + array[array.length - 1];\n    return sum % 2 === 0 ?\
  \ array.sort((a, b) => b - a) : array.sort((a, b) => a - b);\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "    let sum = array[0] + array[array.length - 1];\n    if (sum % 2 === 0) {\n \
  \       return array.sort((a, b) => b - a);\n    } else {\n        return array.sort((a,\
  \ b) => a - b);\n    }\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if (array.length % 2 === 0) {\n  \
  \      return array.sort((a, b) => b - a);\n    } else {\n        return array.sort((a,\
  \ b) => a - b);\n    }\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  const sorted = array.sort((a,\
  \ b) => (sum % 2 === 0 ? b - a : a - b));\n  return sorted;\n}\n"
- "  let sum = array[0] + array[array.length - 1];\n  if (sum % 2 === 0) {\n    return\
  \ array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a, b) => a -\
  \ b);\n  }\n}\n\nconsole.log(sort_array([2, 4, 3, 0, 1, 5, 6]));\n"
- "  return array.length % 2 === 0\n    ? array.sort((a, b) => b - a)\n    : array.sort((a,\
  \ b) => a - b);\n}\n"
- "    if (array.length === 0) {\n        return [];\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n"
- "    let sum = array[0] + array[array.length - 1];\n    if (sum % 2 === 0) {\n \
  \       return array.sort((a, b) => b - a);\n    } else {\n        return array.sort((a,\
  \ b) => a - b);\n    }\n}\n\nconsole.log(sort_array([2, 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]));"
- "  return array.length % 2 === 0\n    ? array.sort((a, b) => b - a)\n    : array.sort((a,\
  \ b) => a - b);\n}\n"
- "    if (array.length === 0) {\n        return [];\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2, 4, 3, 0, 1, 5, 6]));\n"
- "  let sum = array[0] + array[array.length - 1];\n  let sortedArray = array.sort((a,\
  \ b) => {\n    if (sum % 2 === 0) {\n      return b - a;\n    } else {\n      return\
  \ a - b;\n    }\n  });\n  return sortedArray;\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  const isOdd = sum % 2 ===\
  \ 1;\n  return array.sort((a, b) => (isOdd ? a - b : b - a));\n}\n"
- "  return array.sort((a, b) => {\n    if ((a + b) % 2 === 0) {\n      return b -\
  \ a;\n    } else {\n      return a - b;\n    }\n  });\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    let sum = array[0]\
  \ + array[array.length - 1];\n    let sortedArray = array.sort((a, b) => {\n   \
  \     if (sum % 2 === 0) {\n            return b - a;\n        } else {\n      \
  \      return a - b;\n        }\n    });\n    return sortedArray;\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  const sorted = array.sort((a,\
  \ b) => (sum % 2 === 0 ? b - a : a - b));\n  return sorted;\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  let sum = array[0] + array[array.length - 1];\n  return sum % 2 === 0 ? array.sort((a,\
  \ b) => b - a) : array.sort((a, b) => a - b);\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  const sorted = array.sort((a,\
  \ b) => {\n    if (sum % 2 === 0) {\n      return b - a;\n    } else {\n      return\
  \ a - b;\n    }\n  });\n  return sorted;\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if (array.length % 2 === 0) {\n  \
  \      array.sort((a, b) => b - a);\n    } else {\n        array.sort((a, b) =>\
  \ a - b);\n    }\n    return array;\n}\n"
- "  let sum = array[0] + array[array.length - 1];\n  if (sum % 2 === 0) {\n    return\
  \ array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a, b) => a -\
  \ b);\n  }\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  const sorted = array.sort((a,\
  \ b) => (sum % 2 === 0 ? b - a : a - b));\n  return sorted;\n}\n\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]));\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n"
- "  let sum = array[0] + array[array.length - 1];\n  let sortedArray = array.sort((a,\
  \ b) => {\n    if (sum % 2 === 0) {\n      return b - a;\n    } else {\n      return\
  \ a - b;\n    }\n  });\n  return sortedArray;\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  const sortedArray = array.sort((a,\
  \ b) => a - b);\n  return sum % 2 === 0 ? sortedArray.reverse() : sortedArray;\n\
  }\n\nconsole.log(sort_array([2, 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2, 4,\
  \ 3, 0, 1, 5, 6]));"
- "  const sum = array[0] + array[array.length - 1];\n  return sum % 2 === 0 ? array.sort((a,\
  \ b) => b - a) : array.sort((a, b) => a - b);\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  const sorted = array.sort((a,\
  \ b) => (sum % 2 === 0 ? b - a : a - b));\n  return sorted;\n}\n\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2, 4, 3, 0, 1, 5, 6]));"
- "    const sum = array[0] + array[array.length - 1];\n    const isOdd = sum % 2\
  \ === 1;\n    return array.sort((a, b) => isOdd ? a - b : b - a);\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  return sum % 2 === 0 ? array.sort((a,\
  \ b) => b - a) : array.sort((a, b) => a - b);\n}\n\nconsole.log(sort_array([2, 4,\
  \ 3, 0, 1, 5]));\nconsole.log(sort_array([2, 4, 3, 0, 1, 5, 6]));\n"
- "    let sum: number = array[0] + array[array.length - 1];\n    if (sum % 2 ===\
  \ 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n        return\
  \ array.sort((a, b) => a - b);\n    }\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n"
- "    let sum = array[0] + array[array.length - 1];\n    if (sum % 2 === 0) {\n \
  \       return array.sort((a, b) => b - a);\n    } else {\n        return array.sort((a,\
  \ b) => a - b);\n    }\n}\n\nconsole.log(sort_array([2, 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]));\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if (array.length % 2 === 0) {\n  \
  \      return array.sort((a, b) => b - a);\n    } else {\n        return array.sort((a,\
  \ b) => a - b);\n    }\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if (array.length % 2 === 0) {\n  \
  \      return array.sort((a, b) => b - a);\n    } else {\n        return array.sort((a,\
  \ b) => a - b);\n    }\n}\n\nconsole.log(sort_array([2, 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]));\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  return array.length % 2 === 0\n    ? array.sort((a, b) => b - a)\n    : array.sort((a,\
  \ b) => a - b);\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "    if (array.length === 0) {\n        return [];\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n\nconsole.log(sort_array([2, 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]));\n"
- "  return array.sort((a, b) => {\n    if (a + b % 2 === 0) {\n      return a - b;\n\
  \    } else {\n      return b - a;\n    }\n  });\n}\n"
- "  return array.length % 2 === 0\n    ? array.sort((a, b) => b - a)\n    : array.sort((a,\
  \ b) => a - b);\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "    if (array.length === 0) {\n        return [];\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n"
- '  return array.sort((a, b) => (a + b) % 2 ? a - b : b - a);

  }


  console.log(sort_array([2, 4, 3, 0, 1, 5, 6]));

  '
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "    return array.sort((a, b) => {\n        if (a + b % 2 === 0) {\n           \
  \ return b - a;\n        } else {\n            return a - b;\n        }\n    });\n\
  }\n\nconsole.log(sort_array([2, 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2, 4,\
  \ 3, 0, 1, 5, 6]));"
- "  const sum = array[0] + array[array.length - 1];\n  return sum % 2 === 0 ? array.sort((a,\
  \ b) => b - a) : array.sort((a, b) => a - b);\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if (array.length === 2) {\n      \
  \  if (array[0] + array[array.length - 1] % 2 === 0) {\n            return array.reverse();\n\
  \        } else {\n            return array;\n        }\n    }\n    if (array[0]\
  \ + array[array.length - 1] % 2 === 0) {\n        return array.sort((a, b) => b\
  \ - a);\n    } else {\n        return array.sort((a, b) => a - b);\n    }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  const sum = array[0] + array[array.length - 1];\n  if\
  \ (sum % 2 === 0) {\n    return array.sort((a, b) => b - a);\n  } else {\n    return\
  \ array.sort((a, b) => a - b);\n  }\n}\n\nconsole.log(sort_array([2, 4, 3, 0, 1,\
  \ 5]));\nconsole.log(sort_array([2, 4, 3, 0, 1, 5, 6]));\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    let sum = array[0]\
  \ + array[array.length - 1];\n    if (sum % 2 === 0) {\n        return array.sort((a,\
  \ b) => b - a);\n    } else {\n        return array.sort((a, b) => a - b);\n   \
  \ }\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n"
- "    if (array.length === 0) {\n        return [];\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    const sum = array[0] + array[array.length\
  \ - 1];\n    if (sum % 2 === 0) {\n        return array.sort((a, b) => b - a);\n\
  \    }\n    return array.sort((a, b) => a - b);\n}\n\nconsole.log(sort_array([]));\n\
  console.log(sort_array([5]));\nconsole.log(sort_array([2, 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]));"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2, 4, 3, 0, 1, 5, 6]));\n"
- "  const sum = array[0] + array[array.length - 1];\n  const sorted = array.sort((a,\
  \ b) => (sum % 2 === 0 ? b - a : a - b));\n  return sorted;\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  if (sum % 2 === 0) {\n   \
  \ return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a, b)\
  \ => a - b);\n  }\n}\n\nconsole.log(sort_array([2, 4, 3, 0, 1, 5, 6]));\n"
- "  const sum = array[0] + array[array.length - 1];\n  const sorted = array.sort((a,\
  \ b) => (sum % 2 === 0 ? b - a : a - b));\n  return sorted;\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  return sum % 2 === 0 ? array.sort((a,\
  \ b) => b - a) : array.sort((a, b) => a - b);\n}\n\nexport default sort_array;"
- "    let sum = array[0] + array[array.length - 1];\n    if (sum % 2 === 0) {\n \
  \       return array.sort((a, b) => b - a);\n    } else {\n        return array.sort((a,\
  \ b) => a - b);\n    }\n}\n\nconsole.log(sort_array([2, 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]));\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n\nconsole.log(sort_array([2, 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]));\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  const sum = array[0] + array[array.length\
  \ - 1];\n  const isOdd = sum % 2 === 1;\n  return isOdd ? array.sort((a, b) => a\
  \ - b) : array.sort((a, b) => b - a);\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  const sum = array[0] + array[array.length\
  \ - 1];\n  const isOdd = sum % 2 === 1;\n  return isOdd ? array.sort((a, b) => a\
  \ - b) : array.sort((a, b) => b - a);\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    const sum = array[0]\
  \ + array[array.length - 1];\n    if (sum % 2 === 0) {\n        return array.sort((a,\
  \ b) => b - a);\n    }\n    return array.sort((a, b) => a - b);\n}\n\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2, 4, 3, 0, 1, 5, 6]));"
- "  let sum = array[0] + array[array.length - 1];\n  if (sum % 2 === 0) {\n    return\
  \ array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a, b) => a -\
  \ b);\n  }\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2, 4, 3, 0, 1, 5, 6]));"
- "  let sum = array[0] + array[array.length - 1];\n  let sorted = array.sort((a,\
  \ b) => (sum % 2 === 0 ? b - a : a - b));\n  return sorted;\n}\n\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2, 4, 3, 0, 1, 5, 6]));\n"
- "    let sum: number = array[0] + array[array.length - 1];\n    if (sum % 2 ===\
  \ 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n        return\
  \ array.sort((a, b) => a - b);\n    }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  const sum = array[0] + array[array.length - 1];\n  if (sum % 2 === 0) {\n   \
  \ return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a, b)\
  \ => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  const sum = array[0] + array[array.length - 1];\n  if\
  \ (sum % 2 === 0) {\n    return array.sort((a, b) => b - a);\n  } else {\n    return\
  \ array.sort((a, b) => a - b);\n  }\n}\n"
- "    if (array.length === 0) {\n        return array;\n    }\n    const sum = array[0]\
  \ + array[array.length - 1];\n    const isOdd = sum % 2 === 1;\n    const sortedArray\
  \ = array.sort((a, b) => isOdd ? a - b : b - a);\n    return sortedArray;\n}\n\n\
  console.log(sort_array([2, 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2, 4, 3, 0,\
  \ 1, 5, 6]));\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "    if (array.length === 0) {\n        return [];\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    if ((array[0] + array[array.length\
  \ - 1]) % 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n\
  \        return array.sort((a, b) => a - b);\n    }\n}\n"
- "    let sum = array[0] + array[array.length - 1];\n    let sortedArray = array.sort((a,\
  \ b) => {\n        if (sum % 2 === 0) {\n            return b - a;\n        } else\
  \ {\n            return a - b;\n        }\n    });\n    return sortedArray;\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n\nconsole.log(sort_array([2, 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]));\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "    if (array.length === 0) return [];\n    if (array.length === 1) return array;\n\
  \    if ((array[0] + array[array.length - 1]) % 2 === 0) {\n        return array.sort((a,\
  \ b) => b - a);\n    } else {\n        return array.sort((a, b) => a - b);\n   \
  \ }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  return array.length % 2 === 0\n    ? array.sort((a, b) => b - a)\n    : array.sort((a,\
  \ b) => a - b);\n}\n\nconsole.log(sort_array([2, 4, 3, 0, 1, 5]));\nconsole.log(sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]));\n"
- "  const sum = array[0] + array[array.length - 1];\n  return sum % 2 === 0 ? array.sort((a,\
  \ b) => b - a) : array.sort((a, b) => a - b);\n}\n\nconsole.log(sort_array([2, 4,\
  \ 3, 0, 1, 5]));\nconsole.log(sort_array([2, 4, 3, 0, 1, 5, 6]));\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
  \    return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
  \    return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a,\
  \ b) => a - b);\n  }\n}\n"
- "    if (array.length === 0) {\n        return [];\n    }\n    if (array.length\
  \ === 1) {\n        return array;\n    }\n    let first = array[0];\n    let last\
  \ = array[array.length - 1];\n    let sum = first + last;\n    if (sum % 2 === 0)\
  \ {\n        return array.sort((a, b) => b - a);\n    } else {\n        return array.sort((a,\
  \ b) => a - b);\n    }\n}\n"
language: ts
name: HumanEval_88_sort_array
prompt: '//Given an array of non-negative integers, return a copy of the given array
  after sorting,

  // you will sort the given array in ascending order if the sum( first index value,
  last index value) is odd,

  // or sort it in descending order if the sum( first index value, last index value)
  is even.

  // Note:

  // * don''t change the given array.

  // Examples:

  // * sort_array([]) => []

  // * sort_array([5]) => [5]

  // * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]

  // * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]

  function sort_array(array: number[]): number[] {

  '
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
  \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4, 3,\
  \ 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5,\
  \ 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1, 2]);\n \
  \ assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32, 42, 87]);\n\
  \  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n}\n\ntest();"

name: HumanEval_84_solve
language: humaneval_to_typescript.py
prompt: "//Given a positive integer N, return the total sum of its digits in binary.\n\
  // Example\n// For N = 1000, the sum of digits will be 1 the output should be \"\
  1\".\n// For N = 150, the sum of digits will be 6 the output should be \"110\".\n\
  // For N = 147, the sum of digits will be 12 the output should be \"1100\".\n//\
  \ Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n// Output:\n\
  // a string of binary number\nfunction solve(N: number): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n\
  \  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
  1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
  10010\");\n}\n\ntest();"
completions: []
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

language: ts
name: HumanEval_92_any_int
results:
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(3,\
    \ -2, 1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpe04cpzep.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe04cpzep.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x === y + z || y === x + z || z === x + y) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpy7825o82.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpy7825o82.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1kvp2_16.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1kvp2_16.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y == z || x + z == y || y + z == x) && (Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z));\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpc1orfl7y.ts(10,64): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpc1orfl7y.ts(10,87): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpc1orfl7y.ts(10,110): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738364
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1kvp2_16.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1kvp2_16.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return (\n    (x === y + z || y === x + z || z === x +\
    \ y) &&\n    Number.isInteger(x) &&\n    Number.isInteger(y) &&\n    Number.isInteger(z)\n\
    \  );\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeggu2sdt.ts(12,12): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpeggu2sdt.ts(13,12): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpeggu2sdt.ts(14,12): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738364
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0kbh1gg8.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738364
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0kbh1gg8.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738364
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0kbh1gg8.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738364
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(3,\
    \ -2, 1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp9ulz0tb1.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9ulz0tb1.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxkt73qoz.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpxkt73qoz.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpxkt73qoz.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x + y === z || x + z === y || y + z === x) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp2d8mjtod.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2d8mjtod.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxkt73qoz.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpxkt73qoz.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpxkt73qoz.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpb7disq5d.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpb7disq5d.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpb7disq5d.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxkt73qoz.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpxkt73qoz.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpxkt73qoz.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x + y === z || x + z === y || y + z === x) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(3, -2, 1));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpffd3w_bs.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpffd3w_bs.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1kvp2_16.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1kvp2_16.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x === y + z || y === x + z || z === x + y) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpswoq9tct.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpswoq9tct.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(3,\
    \ -2, 1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5y0qug__.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp5y0qug__.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp5y0qug__.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738364
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z))\
    \ {\n    if (x + y === z || x + z === y || y + z === x) {\n      return true;\n\
    \    }\n  }\n  return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyx4byeao.ts(10,14): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpyx4byeao.ts(10,37): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpyx4byeao.ts(10,60): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x + y === z || x + z === y || y + z === x) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp27d2vv2e.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp27d2vv2e.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpb7disq5d.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpb7disq5d.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpb7disq5d.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z))\
    \ {\n        if (x === y + z || y === x + z || z === x + y) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\n\
    console.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpighzfmqh.ts(10,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpighzfmqh.ts(10,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpighzfmqh.ts(10,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x + y === z || x + z === y || y + z === x) {\n   \
    \ return true;\n  } else {\n    return false;\n  }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmppi7riroj.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppi7riroj.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x === y + z || y === x + z || z === x + y) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpy7825o82.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpy7825o82.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0kbh1gg8.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738364
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ x % 1 === 0 && y % 1 === 0 && z % 1 === 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpjb7j9cic.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpjb7j9cic.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0kbh1gg8.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738364
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z))\
    \ {\n        if (x === y + z || y === x + z || z === x + y) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\n\
    console.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpighzfmqh.ts(10,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpighzfmqh.ts(10,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpighzfmqh.ts(10,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x === y + z || y === x + z || z === x + y) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpswoq9tct.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpswoq9tct.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z))\
    \ {\n        if (x === y + z || y === x + z || z === x + y) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\n\
    console.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpighzfmqh.ts(10,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpighzfmqh.ts(10,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpighzfmqh.ts(10,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1kvp2_16.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1kvp2_16.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1kvp2_16.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1kvp2_16.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1kvp2_16.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1kvp2_16.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x + y === z || x + z === y || y + z === x) {\n   \
    \ return true;\n  } else {\n    return false;\n  }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmppi7riroj.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppi7riroj.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxkt73qoz.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpxkt73qoz.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpxkt73qoz.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x + y === z || x + z === y || y + z === x) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp2d8mjtod.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2d8mjtod.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\n\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpmkom4eze.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpmkom4eze.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x + y === z || x + z === y || y + z === x) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp2d8mjtod.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2d8mjtod.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0kbh1gg8.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738364
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1hi8thrp.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1hi8thrp.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp4t_0nrn3.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4t_0nrn3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y == z || x + z == y || y + z == x) && (Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5, 2,\
    \ 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpox7dep9i.ts(10,64): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpox7dep9i.ts(10,87): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpox7dep9i.ts(10,110): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1kvp2_16.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1kvp2_16.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp4t_0nrn3.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4t_0nrn3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp4t_0nrn3.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4t_0nrn3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738369
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0kbh1gg8.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738364
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpietn2oec.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpietn2oec.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp4t_0nrn3.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4t_0nrn3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\n\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp801wkue1.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp801wkue1.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x === y + z || y === x + z || z === x + y) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp5q1u1ofl.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp5q1u1ofl.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'false

    true

    false

    '
  timestamp: 1659738369
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z))\
    \ {\n        return x + y === z || x + z === y || y + z === x;\n    }\n    return\
    \ false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\n\
    console.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprdj8e130.ts(10,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmprdj8e130.ts(10,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmprdj8e130.ts(10,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738369
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x === y + z || y === x + z || z === x + y) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpswoq9tct.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpswoq9tct.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) {\n    \
    \    if (x == y + z || y == x + z || z == x + y) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp2qrho_yo.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2qrho_yo.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738369
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return (x + y === z || x + z === y || y + z === x) &&\n\
    \    Number.isInteger(x) &&\n    Number.isInteger(y) &&\n    Number.isInteger(z)\n\
    \    ? true\n    : false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbwblq6jj.ts(11,12): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpbwblq6jj.ts(12,12): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpbwblq6jj.ts(13,12): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\n\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp801wkue1.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp801wkue1.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z))\
    \ {\n        if (x === y + z || y === x + z || z === x + y) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\n\
    console.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpighzfmqh.ts(10,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpighzfmqh.ts(10,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpighzfmqh.ts(10,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxkt73qoz.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpxkt73qoz.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpxkt73qoz.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z))\
    \ {\n    if (x + y === z || x + z === y || y + z === x) {\n      return true;\n\
    \    }\n  }\n  return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyx4byeao.ts(10,14): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpyx4byeao.ts(10,37): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpyx4byeao.ts(10,60): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z))\
    \ {\n        if (x === y + z || y === x + z || z === x + y) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\n\
    console.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpighzfmqh.ts(10,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpighzfmqh.ts(10,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpighzfmqh.ts(10,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(3,\
    \ -2, 1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpe04cpzep.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe04cpzep.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxkt73qoz.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpxkt73qoz.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpxkt73qoz.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(3,\
    \ -2, 1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpe04cpzep.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe04cpzep.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x === y + z || y === x + z || z === x + y) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpswoq9tct.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpswoq9tct.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z) && (x + y === z || x + z === y || y + z === x);\n}\n\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp31h9280c.ts(10,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp31h9280c.ts(10,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp31h9280c.ts(10,65): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 !== 0 || y % 1 !== 0 || z % 1 !== 0) {\n \
    \       return false;\n    }\n    return x + y === z || x + z === y || y + z ===\
    \ x;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpvb65oesn.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvb65oesn.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y == z || x + z == y || y + z == x) && Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z);\n}\nconsole.log(any_int(5, 2,\
    \ 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpli_fbdzo.ts(10,63): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpli_fbdzo.ts(10,86): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpli_fbdzo.ts(10,109): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpietn2oec.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpietn2oec.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x + y === z || x + z === y || y + z === x) {\n   \
    \ return true;\n  } else {\n    return false;\n  }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmppi7riroj.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppi7riroj.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x === y + z || y === x + z || z === x + y) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpswoq9tct.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpswoq9tct.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z))\
    \ {\n        if (x === y + z || y === x + z || z === x + y) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\n\
    console.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpighzfmqh.ts(10,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpighzfmqh.ts(10,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpighzfmqh.ts(10,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpb7disq5d.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpb7disq5d.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpb7disq5d.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return x + y === z || x + z === y || y + z === x;\n}\n\
    console.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmph9x1z9fo.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmph9x1z9fo.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738369
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z))\
    \ {\n        if (x === y + z || y === x + z || z === x + y) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(any_int(3, -2, 1));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_l_b7wno.ts(10,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_l_b7wno.ts(10,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_l_b7wno.ts(10,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x + y === z || x + z === y || y + z === x) {\n   \
    \ return true;\n  } else {\n    return false;\n  }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmppi7riroj.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppi7riroj.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x === y + z || y === x + z || z === x + y) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpswoq9tct.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpswoq9tct.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z))\
    \ {\n        if (x === y + z || y === x + z || z === x + y) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\n\
    console.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpighzfmqh.ts(10,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpighzfmqh.ts(10,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpighzfmqh.ts(10,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpb7disq5d.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpb7disq5d.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpb7disq5d.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y == z || x + z == y || y + z == x) && (Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5, 2,\
    \ 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpox7dep9i.ts(10,64): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpox7dep9i.ts(10,87): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpox7dep9i.ts(10,110): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738369
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return (\n    (x === y + z || y === x + z || z === x +\
    \ y) &&\n    Number.isInteger(x) &&\n    Number.isInteger(y) &&\n    Number.isInteger(z)\n\
    \  );\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0kp31olj.ts(12,12): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kp31olj.ts(13,12): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kp31olj.ts(14,12): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738369
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x === y + z || y === x + z || z === x + y) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpswoq9tct.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpswoq9tct.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0kbh1gg8.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738364
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return (\n    (x === y + z || y === x + z || z === x +\
    \ y) &&\n    Number.isInteger(x) &&\n    Number.isInteger(y) &&\n    Number.isInteger(z)\n\
    \  );\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeggu2sdt.ts(12,12): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpeggu2sdt.ts(13,12): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpeggu2sdt.ts(14,12): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738364
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ x % 1 === 0 && y % 1 === 0 && z % 1 === 0;\n}\nconsole.log(any_int(5, 2, 7));\n\
    console.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpo8xheq7u.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpo8xheq7u.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738369
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxx2tpihd.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxx2tpihd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x + y === z || x + z === y || y + z === x) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp2d8mjtod.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2d8mjtod.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y == z || x + z == y || y + z == x) && (Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5, 2,\
    \ 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpox7dep9i.ts(10,64): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpox7dep9i.ts(10,87): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpox7dep9i.ts(10,110): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1kvp2_16.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1kvp2_16.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\n\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp801wkue1.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp801wkue1.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738369
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpb7disq5d.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpb7disq5d.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpb7disq5d.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x + y === z || x + z === y || y + z === x) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp27d2vv2e.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp27d2vv2e.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0kbh1gg8.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738364
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpb7disq5d.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpb7disq5d.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpb7disq5d.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x + y === z || x + z === y || y + z === x) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp2d8mjtod.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2d8mjtod.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1kvp2_16.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1kvp2_16.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x + y === z || x + z === y || y + z === x) {\n   \
    \ return true;\n  } else {\n    return false;\n  }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmppi7riroj.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppi7riroj.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\n\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmhz5_u8c.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpmhz5_u8c.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpmhz5_u8c.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738369
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0kbh1gg8.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738364
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x === y + z || y === x + z || z === x + y) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpswoq9tct.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpswoq9tct.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x + y === z || x + z === y || y + z === x) {\n   \
    \ return true;\n  } else {\n    return false;\n  }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmppi7riroj.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppi7riroj.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y == z || x + z == y || y + z == x) && (Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5, 2,\
    \ 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpox7dep9i.ts(10,64): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpox7dep9i.ts(10,87): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpox7dep9i.ts(10,110): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  if (x + y === z || x + z === y || y + z === x) {\n   \
    \ return true;\n  } else {\n    return false;\n  }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmppi7riroj.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppi7riroj.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y == z || x + z == y || y + z == x) && Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z);\n}\nconsole.log(any_int(5, 2,\
    \ 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv8wjms3l.ts(10,63): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpv8wjms3l.ts(10,86): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpv8wjms3l.ts(10,109): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x === y + z || y === x + z || z === x + y) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpswoq9tct.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpswoq9tct.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpb7disq5d.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpb7disq5d.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpb7disq5d.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1kvp2_16.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1kvp2_16.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpb7disq5d.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpb7disq5d.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpb7disq5d.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x === y + z || y === x + z || z === x + y) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpswoq9tct.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpswoq9tct.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n  return (\n    (x === y + z || y === x + z || z === x +\
    \ y) &&\n    Number.isInteger(x) &&\n    Number.isInteger(y) &&\n    Number.isInteger(z)\n\
    \  );\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeggu2sdt.ts(12,12): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpeggu2sdt.ts(13,12): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpeggu2sdt.ts(14,12): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738364
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z) || (x + z === y) || (y + z ===\
    \ x);\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpfv__l43r.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpfv__l43r.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (x % 1 === 0 && y % 1 === 0 && z % 1 === 0);\n}\nconsole.log(any_int(5, 2, 7));\n\
    console.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpjare5nou.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpjare5nou.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x === y + z || y === x + z || z === x + y) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpswoq9tct.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpswoq9tct.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7z5oy3pr.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp7z5oy3pr.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp7z5oy3pr.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1kvp2_16.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1kvp2_16.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1kvp2_16.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1kvp2_16.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0kbh1gg8.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738364
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n \
    \       if (x === y + z || y === x + z || z === x + y) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpswoq9tct.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpswoq9tct.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0kbh1gg8.ts(10,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0kbh1gg8.ts(10,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738364
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\n\n\
    console.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpevnlq384.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpevnlq384.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpevnlq384.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738369
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpydd4p7w7.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpydd4p7w7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659738365
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u279E\
    \ True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E True\n//\
    \ any_int(3.6, -2.2, 2) \u279E False\nfunction any_int(x: number, y: number, z:\
    \ number): boolean {\n    return (x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk4y6zkmi.ts(10,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpk4y6zkmi.ts(10,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659738365

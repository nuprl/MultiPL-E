name: HumanEval_27_flip_case
language: humaneval_to_typescript.py
prompt: "//For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string:\
  \ string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\"\
  );\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
  These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
  \ ENDS\");\n}\n\ntest();"
completions: ["    return string.split('').map(function(char) {\n        return char\
    \ === char.toUpperCase() ? char.toLowerCase() : char.toUpperCase();\n    }).join('');\n\
    }\n", "    let result: string = '';\n    for (let i = 0; i < string.length; i++)\
    \ {\n        if (string[i] === string[i].toUpperCase()) {\n            result\
    \ += string[i].toLowerCase();\n        } else {\n            result += string[i].toUpperCase();\n\
    \        }\n    }\n    return result;\n}\n", "    let result: string = \"\";\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (string[i] === string[i].toUpperCase())\
    \ {\n            result += string[i].toLowerCase();\n        } else {\n      \
    \      result += string[i].toUpperCase();\n        }\n    }\n    return result;\n\
    }\n", "    return string.split('').map(char => {\n        if (char.toLowerCase()\
    \ === char) {\n            return char.toUpperCase();\n        } else {\n    \
    \        return char.toLowerCase();\n        }\n    }).join('');\n}\n", "    let\
    \ result: string = '';\n    for (let i = 0; i < string.length; i++) {\n      \
    \  if (string[i] === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n", "    let result = '';\n    for (let i = 0; i\
    \ < string.length; i++) {\n        if (string[i] === string[i].toUpperCase())\
    \ {\n            result += string[i].toLowerCase();\n        } else {\n      \
    \      result += string[i].toUpperCase();\n        }\n    }\n    return result;\n\
    }\n", "    let result = '';\n    for (let i = 0; i < string.length; i++) {\n \
    \       if (string[i] === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n", "  return string.split('').map(char => {\n \
    \   if (char === char.toUpperCase()) {\n      return char.toLowerCase();\n   \
    \ } else {\n      return char.toUpperCase();\n    }\n  }).join('');\n}\n", " \
    \   return string.split('').map(function(char: string) {\n        return char\
    \ === char.toUpperCase() ? char.toLowerCase() : char.toUpperCase();\n    }).join('');\n\
    }\n", "    let newString = '';\n    for (let i = 0; i < string.length; i++) {\n\
    \        if (string[i] === string[i].toUpperCase()) {\n            newString +=\
    \ string[i].toLowerCase();\n        } else {\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n", "    let result = '';\n    for\
    \ (let i = 0; i < string.length; i++) {\n        if (string[i] === string[i].toUpperCase())\
    \ {\n            result += string[i].toLowerCase();\n        } else {\n      \
    \      result += string[i].toUpperCase();\n        }\n    }\n    return result;\n\
    }\n", "    let result = '';\n    for (let i = 0; i < string.length; i++) {\n \
    \       if (string[i] === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n", "  return string.split('').map(char => {\n \
    \   if (char.toLowerCase() === char) {\n      return char.toUpperCase();\n   \
    \ } else {\n      return char.toLowerCase();\n    }\n  }).join('');\n}\n", " \
    \   return string.split('').map(char => {\n        if (char.toLowerCase() ===\
    \ char) {\n            return char.toUpperCase();\n        } else {\n        \
    \    return char.toLowerCase();\n        }\n    }).join('');\n}\n", "    return\
    \ string.split('').map(char => {\n        if (char === char.toUpperCase()) {\n\
    \            return char.toLowerCase();\n        } else {\n            return\
    \ char.toUpperCase();\n        }\n    }).join('');\n}\n", "    return string.split('').map(char\
    \ => {\n        if (char.toLowerCase() === char) {\n            return char.toUpperCase();\n\
    \        } else {\n            return char.toLowerCase();\n        }\n    }).join('');\n\
    }\n", "    return string.split('').map(function(char) {\n        if (char.toLowerCase()\
    \ === char) {\n            return char.toUpperCase();\n        } else {\n    \
    \        return char.toLowerCase();\n        }\n    }).join('');\n}\n", "    return\
    \ string.split('').map(char => {\n        if (char === char.toUpperCase()) {\n\
    \            return char.toLowerCase();\n        } else {\n            return\
    \ char.toUpperCase();\n        }\n    }).join('');\n}\n", "    let result: string\
    \ = '';\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === string[i].toUpperCase()) {\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n", "  return string.split('').map(char => {\n \
    \   if (char.toUpperCase() === char) {\n      return char.toLowerCase();\n   \
    \ } else {\n      return char.toUpperCase();\n    }\n  }).join('');\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

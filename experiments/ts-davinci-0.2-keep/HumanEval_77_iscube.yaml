name: HumanEval_77_iscube
language: humaneval_to_typescript.py
prompt: "//Write a function that takes an integer a and returns True \n// if this\
  \ ingeger is a cube of some integer number.\n// Note: you may assume the input is\
  \ always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n//\
  \ iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180)\
  \ ==> False\nfunction iscube(a: number): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
  \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
  \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
  \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
  \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
completions: ["    return Number.isInteger(Math.cbrt(a));\n}\n", "    return Math.cbrt(a)\
    \ % 1 === 0;\n}\n", "    return Math.cbrt(a) % 1 === 0;\n}\n", "    let result\
    \ = false;\n    let i = 1;\n    while (i < a) {\n        if (i * i * i === a)\
    \ {\n            result = true;\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    return Number.isInteger(Math.cbrt(a));\n}\n\nconsole.log(iscube(1));\n\
    console.log(iscube(2));\nconsole.log(iscube(-1));\nconsole.log(iscube(64));\n\
    console.log(iscube(0));\nconsole.log(iscube(180));\n", "    return Number.isInteger(Math.cbrt(a));\n\
    }\n", "    return Number.isInteger(Math.cbrt(a));\n}\n", "    return Number.isInteger(Math.cbrt(a));\n\
    }\n", "    return Number.isInteger(Math.cbrt(a));\n}\n", "    return Math.cbrt(a)\
    \ % 1 === 0;\n}\n", "    return Math.cbrt(a) % 1 === 0;\n}\n", "    return Number.isInteger(Math.cbrt(a));\n\
    }\n", "    return Number.isInteger(Math.cbrt(a));\n}\n", "    return Number.isInteger(Math.cbrt(a));\n\
    }\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n",
  "    return Number.isInteger(Math.cbrt(a));\n}\n", "    return Math.cbrt(a) % 1\
    \ === 0;\n}\n\nconsole.log(iscube(1));\nconsole.log(iscube(2));\nconsole.log(iscube(-1));\n\
    console.log(iscube(64));\nconsole.log(iscube(0));\nconsole.log(iscube(180));\n",
  "    return Number.isInteger(Math.cbrt(a));\n}\n", "    return Number.isInteger(Math.cbrt(a));\n\
    }\n", "  return Math.cbrt(a) % 1 === 0;\n}\n", "    return Math.cbrt(a) % 1 ===\
    \ 0;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

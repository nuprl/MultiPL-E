completions:
- "    let min = undefined;\n    let max = undefined;\n    for (let i = 0; i < lst.length;\
  \ i++) {\n        if (lst[i] > 0) {\n            if (min === undefined || lst[i]\
  \ < min) {\n                min = lst[i];\n            }\n        } else if (lst[i]\
  \ < 0) {\n            if (max === undefined || lst[i] > max) {\n               \
  \ max = lst[i];\n            }\n        }\n    }\n    return [max, min];\n}\n"
- "    let min: number | undefined = undefined;\n    let max: number | undefined =\
  \ undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0)\
  \ {\n            if (min === undefined || lst[i] < min) {\n                min =\
  \ lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (max\
  \ === undefined || lst[i] > max) {\n                max = lst[i];\n            }\n\
  \        }\n    }\n    return [max, min];\n}\n"
- "    let min = undefined;\n    let max = undefined;\n    for (let i = 0; i < lst.length;\
  \ i++) {\n        if (lst[i] > 0) {\n            if (min === undefined || lst[i]\
  \ < min) {\n                min = lst[i];\n            }\n        } else if (lst[i]\
  \ < 0) {\n            if (max === undefined || lst[i] > max) {\n               \
  \ max = lst[i];\n            }\n        }\n    }\n    return [max, min];\n}\n"
- "    let min: number | undefined = undefined;\n    let max: number | undefined =\
  \ undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0)\
  \ {\n            if (min === undefined || lst[i] < min) {\n                min =\
  \ lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (max\
  \ === undefined || lst[i] > max) {\n                max = lst[i];\n            }\n\
  \        }\n    }\n    return [max, min];\n}\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined || lst[i] < smallest) {\n       \
  \         smallest = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
  \            if (largest === undefined || lst[i] > largest) {\n                largest\
  \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
  }\n"
- "    let negative: number | undefined = undefined;\n    let positive: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (negative === undefined) {\n                negative = lst[i];\n\
  \            } else if (lst[i] > negative) {\n                negative = lst[i];\n\
  \            }\n        } else if (lst[i] > 0) {\n            if (positive === undefined)\
  \ {\n                positive = lst[i];\n            } else if (lst[i] < positive)\
  \ {\n                positive = lst[i];\n            }\n        }\n    }\n    return\
  \ [negative, positive];\n}\n"
- "    const positives = lst.filter(x => x > 0);\n    const negatives = lst.filter(x\
  \ => x < 0);\n    return [negatives.length > 0 ? Math.max(...negatives) : undefined,\
  \ positives.length > 0 ? Math.min(...positives) : undefined];\n}\n"
- "  let largestNegative: number | undefined;\n  let smallestPositive: number | undefined;\n\
  \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative\
  \ === undefined || lst[i] > largestNegative) {\n        largestNegative = lst[i];\n\
  \      }\n    } else if (lst[i] > 0) {\n      if (smallestPositive === undefined\
  \ || lst[i] < smallestPositive) {\n        smallestPositive = lst[i];\n      }\n\
  \    }\n  }\n  return [largestNegative, smallestPositive];\n}\n"
- "    let neg: number | undefined = undefined;\n    let pos: number | undefined =\
  \ undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0)\
  \ {\n            if (neg === undefined) {\n                neg = lst[i];\n     \
  \       } else if (lst[i] > neg) {\n                neg = lst[i];\n            }\n\
  \        } else if (lst[i] > 0) {\n            if (pos === undefined) {\n      \
  \          pos = lst[i];\n            } else if (lst[i] < pos) {\n             \
  \   pos = lst[i];\n            }\n        }\n    }\n    return [neg, pos];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let min: number | undefined = undefined;\n    let max: number | undefined =\
  \ undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0)\
  \ {\n            if (min === undefined || lst[i] < min) {\n                min =\
  \ lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (max\
  \ === undefined || lst[i] > max) {\n                max = lst[i];\n            }\n\
  \        }\n    }\n    return [max, min];\n}\n"
- "    let neg: number | undefined = undefined;\n    let pos: number | undefined =\
  \ undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0)\
  \ {\n            if (neg == undefined) {\n                neg = lst[i];\n      \
  \      } else if (lst[i] > neg) {\n                neg = lst[i];\n            }\n\
  \        } else if (lst[i] > 0) {\n            if (pos == undefined) {\n       \
  \         pos = lst[i];\n            } else if (lst[i] < pos) {\n              \
  \  pos = lst[i];\n            }\n        }\n    }\n    return [neg, pos];\n}\n"
- "    let neg = undefined;\n    let pos = undefined;\n    for (let i = 0; i < lst.length;\
  \ i++) {\n        if (lst[i] < 0) {\n            if (neg === undefined || lst[i]\
  \ > neg) {\n                neg = lst[i];\n            }\n        } else if (lst[i]\
  \ > 0) {\n            if (pos === undefined || lst[i] < pos) {\n               \
  \ pos = lst[i];\n            }\n        }\n    }\n    return [neg, pos];\n}\n"
- "    let largest_negative = undefined;\n    let smallest_positive = undefined;\n\
  \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n       \
  \     if (largest_negative === undefined || lst[i] > largest_negative) {\n     \
  \           largest_negative = lst[i];\n            }\n        } else if (lst[i]\
  \ > 0) {\n            if (smallest_positive === undefined || lst[i] < smallest_positive)\
  \ {\n                smallest_positive = lst[i];\n            }\n        }\n   \
  \ }\n    return [largest_negative, smallest_positive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let negs: number[] = [];\n    let poss: number[] = [];\n    for (let i = 0;\
  \ i < lst.length; i++) {\n        if (lst[i] < 0) {\n            negs.push(lst[i]);\n\
  \        } else if (lst[i] > 0) {\n            poss.push(lst[i]);\n        }\n \
  \   }\n    if (negs.length === 0) {\n        negs.push(undefined);\n    }\n    if\
  \ (poss.length === 0) {\n        poss.push(undefined);\n    }\n    return [Math.max(...negs),\
  \ Math.min(...poss)];\n}\n"
- "    let smallest_positive: number | undefined = undefined;\n    let largest_negative:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n\
  \                smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
  \ {\n                smallest_positive = lst[i];\n            }\n        } else\
  \ if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n       \
  \         largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
  \ {\n                largest_negative = lst[i];\n            }\n        }\n    }\n\
  \    return [largest_negative, smallest_positive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined) {\n                smallest = lst[i];\n\
  \            } else if (lst[i] < smallest) {\n                smallest = lst[i];\n\
  \            }\n        } else if (lst[i] < 0) {\n            if (largest === undefined)\
  \ {\n                largest = lst[i];\n            } else if (lst[i] > largest)\
  \ {\n                largest = lst[i];\n            }\n        }\n    }\n    return\
  \ [largest, smallest];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative = undefined;\n    let smallestPositive = undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n        \
  \    if (largestNegative === undefined || lst[i] > largestNegative) {\n        \
  \        largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
  \ {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "  let a: number | undefined = undefined;\n  let b: number | undefined = undefined;\n\
  \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (a ===\
  \ undefined) {\n        a = lst[i];\n      } else if (lst[i] > a) {\n        a =\
  \ lst[i];\n      }\n    } else if (lst[i] > 0) {\n      if (b === undefined) {\n\
  \        b = lst[i];\n      } else if (lst[i] < b) {\n        b = lst[i];\n    \
  \  }\n    }\n  }\n  return [a, b];\n}\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined || lst[i] < smallest) {\n       \
  \         smallest = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
  \            if (largest === undefined || lst[i] > largest) {\n                largest\
  \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
  }\n"
- "  let largestNegative: number | undefined;\n  let smallestPositive: number | undefined;\n\
  \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative\
  \ === undefined || lst[i] > largestNegative) {\n        largestNegative = lst[i];\n\
  \      }\n    } else if (lst[i] > 0) {\n      if (smallestPositive === undefined\
  \ || lst[i] < smallestPositive) {\n        smallestPositive = lst[i];\n      }\n\
  \    }\n  }\n  return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative = undefined;\n    let smallestPositive = undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n        \
  \    if (largestNegative === undefined || lst[i] > largestNegative) {\n        \
  \        largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
  \ {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let min: number | undefined = undefined;\n    let max: number | undefined =\
  \ undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0)\
  \ {\n            if (min === undefined || lst[i] < min) {\n                min =\
  \ lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (max\
  \ === undefined || lst[i] > max) {\n                max = lst[i];\n            }\n\
  \        }\n    }\n    return [max, min];\n}\n"
- "    let smallest: number | undefined;\n    let largest: number | undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n        \
  \    if (smallest === undefined || lst[i] < smallest) {\n                smallest\
  \ = lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest\
  \ === undefined || lst[i] > largest) {\n                largest = lst[i];\n    \
  \        }\n        }\n    }\n    return [largest, smallest];\n}\n"
- "    let largestNegative = undefined;\n    let smallestPositive = undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n        \
  \    if (largestNegative === undefined || lst[i] > largestNegative) {\n        \
  \        largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
  \ {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let neg = lst.filter(x => x < 0).sort((a, b) => a - b);\n    let pos = lst.filter(x\
  \ => x > 0).sort((a, b) => a - b);\n    return [neg[0], pos[0]];\n}\n"
- "    let negative: number[] = [];\n    let positive: number[] = [];\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            negative.push(lst[i]);\n\
  \        } else if (lst[i] > 0) {\n            positive.push(lst[i]);\n        }\n\
  \    }\n    if (negative.length === 0) {\n        negative.push(undefined);\n  \
  \  }\n    if (positive.length === 0) {\n        positive.push(undefined);\n    }\n\
  \    return [Math.max(...negative), Math.min(...positive)];\n}\n"
- "    let largest = undefined;\n    let smallest = undefined;\n    for (let i = 0;\
  \ i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (largest ===\
  \ undefined || lst[i] > largest) {\n                largest = lst[i];\n        \
  \    }\n        } else if (lst[i] > 0) {\n            if (smallest === undefined\
  \ || lst[i] < smallest) {\n                smallest = lst[i];\n            }\n \
  \       }\n    }\n    return [largest, smallest];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largest_negative: number | undefined = undefined;\n    let smallest_positive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
  \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
  \ {\n                largest_negative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n         \
  \       smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
  \ {\n                smallest_positive = lst[i];\n            }\n        }\n   \
  \ }\n    return [largest_negative, smallest_positive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let neg: number[] = [];\n    let pos: number[] = [];\n    for (let i = 0; i\
  \ < lst.length; i++) {\n        if (lst[i] < 0) {\n            neg.push(lst[i]);\n\
  \        } else if (lst[i] > 0) {\n            pos.push(lst[i]);\n        }\n  \
  \  }\n    if (neg.length == 0) {\n        neg.push(undefined);\n    }\n    if (pos.length\
  \ == 0) {\n        pos.push(undefined);\n    }\n    return [Math.max(...neg), Math.min(...pos)];\n\
  }\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "  let largestNegative = undefined;\n  let smallestPositive = undefined;\n  for\
  \ (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative\
  \ === undefined || lst[i] > largestNegative) {\n        largestNegative = lst[i];\n\
  \      }\n    } else if (lst[i] > 0) {\n      if (smallestPositive === undefined\
  \ || lst[i] < smallestPositive) {\n        smallestPositive = lst[i];\n      }\n\
  \    }\n  }\n  return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative == undefined) {\n                largestNegative\
  \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n              \
  \  largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0) {\n\
  \            if (smallestPositive == undefined) {\n                smallestPositive\
  \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n             \
  \   smallestPositive = lst[i];\n            }\n        }\n    }\n    return [largestNegative,\
  \ smallestPositive];\n}\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined || lst[i] < smallest) {\n       \
  \         smallest = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
  \            if (largest === undefined || lst[i] > largest) {\n                largest\
  \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
  }\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined || lst[i] < smallest) {\n       \
  \         smallest = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
  \            if (largest === undefined || lst[i] > largest) {\n                largest\
  \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
  }\n"
- "    let neg: number[] = [];\n    let pos: number[] = [];\n    for (let i = 0; i\
  \ < lst.length; i++) {\n        if (lst[i] < 0) {\n            neg.push(lst[i]);\n\
  \        } else if (lst[i] > 0) {\n            pos.push(lst[i]);\n        }\n  \
  \  }\n    if (neg.length == 0) {\n        neg.push(undefined);\n    }\n    if (pos.length\
  \ == 0) {\n        pos.push(undefined);\n    }\n    return [Math.max(...neg), Math.min(...pos)];\n\
  }\n"
- "    let neg: number[] = [];\n    let pos: number[] = [];\n    for (let i = 0; i\
  \ < lst.length; i++) {\n        if (lst[i] < 0) {\n            neg.push(lst[i]);\n\
  \        } else if (lst[i] > 0) {\n            pos.push(lst[i]);\n        }\n  \
  \  }\n    if (neg.length === 0) {\n        neg.push(undefined);\n    }\n    if (pos.length\
  \ === 0) {\n        pos.push(undefined);\n    }\n    return [Math.max(...neg), Math.min(...pos)];\n\
  }\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined || lst[i] < smallest) {\n       \
  \         smallest = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
  \            if (largest === undefined || lst[i] > largest) {\n                largest\
  \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
  }\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largest === undefined || lst[i] > largest) {\n         \
  \       largest = lst[i];\n            }\n        } else if (lst[i] > 0) {\n   \
  \         if (smallest === undefined || lst[i] < smallest) {\n                smallest\
  \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
  }\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largest === undefined || lst[i] > largest) {\n         \
  \       largest = lst[i];\n            }\n        } else if (lst[i] > 0) {\n   \
  \         if (smallest === undefined || lst[i] < smallest) {\n                smallest\
  \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
  }\n"
- "    let min = undefined;\n    let max = undefined;\n    for (let i = 0; i < lst.length;\
  \ i++) {\n        if (lst[i] > 0) {\n            if (min === undefined || lst[i]\
  \ < min) {\n                min = lst[i];\n            }\n        } else if (lst[i]\
  \ < 0) {\n            if (max === undefined || lst[i] > max) {\n               \
  \ max = lst[i];\n            }\n        }\n    }\n    return [max, min];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let neg: number | undefined = undefined;\n    let pos: number | undefined =\
  \ undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0)\
  \ {\n            if (neg === undefined) {\n                neg = lst[i];\n     \
  \       } else if (lst[i] > neg) {\n                neg = lst[i];\n            }\n\
  \        } else if (lst[i] > 0) {\n            if (pos === undefined) {\n      \
  \          pos = lst[i];\n            } else if (lst[i] < pos) {\n             \
  \   pos = lst[i];\n            }\n        }\n    }\n    return [neg, pos];\n}\n"
- "    let smallest: number | undefined;\n    let largest: number | undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n        \
  \    if (smallest == undefined) {\n                smallest = lst[i];\n        \
  \    } else if (lst[i] < smallest) {\n                smallest = lst[i];\n     \
  \       }\n        } else if (lst[i] < 0) {\n            if (largest == undefined)\
  \ {\n                largest = lst[i];\n            } else if (lst[i] > largest)\
  \ {\n                largest = lst[i];\n            }\n        }\n    }\n    return\
  \ [largest, smallest];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let pos = lst.filter(x => x > 0);\n    let neg = lst.filter(x => x < 0);\n\
  \    return [neg.length > 0 ? Math.max(...neg) : undefined, pos.length > 0 ? Math.min(...pos)\
  \ : undefined];\n}\n"
- "    let largest: number | undefined;\n    let smallest: number | undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n        \
  \    if (largest === undefined || lst[i] > largest) {\n                largest =\
  \ lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (smallest\
  \ === undefined || lst[i] < smallest) {\n                smallest = lst[i];\n  \
  \          }\n        }\n    }\n    return [largest, smallest];\n}\n"
- "    let min = undefined;\n    let max = undefined;\n    for (let i = 0; i < lst.length;\
  \ i++) {\n        if (lst[i] < 0) {\n            if (max === undefined || lst[i]\
  \ > max) {\n                max = lst[i];\n            }\n        } else if (lst[i]\
  \ > 0) {\n            if (min === undefined || lst[i] < min) {\n               \
  \ min = lst[i];\n            }\n        }\n    }\n    return [max, min];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let smallest: number | undefined;\n    let largest: number | undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n        \
  \    if (smallest === undefined || lst[i] < smallest) {\n                smallest\
  \ = lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest\
  \ === undefined || lst[i] > largest) {\n                largest = lst[i];\n    \
  \        }\n        }\n    }\n    return [largest, smallest];\n}\n"
- "    let min = undefined;\n    let max = undefined;\n    for (let i = 0; i < lst.length;\
  \ i++) {\n        if (lst[i] < 0) {\n            if (max === undefined || lst[i]\
  \ > max) {\n                max = lst[i];\n            }\n        } else if (lst[i]\
  \ > 0) {\n            if (min === undefined || lst[i] < min) {\n               \
  \ min = lst[i];\n            }\n        }\n    }\n    return [max, min];\n}\n"
- "    if (lst.length === 0) {\n        return [undefined, undefined];\n    }\n  \
  \  let min = lst[0];\n    let max = lst[0];\n    for (let i = 1; i < lst.length;\
  \ i++) {\n        if (lst[i] < min) {\n            min = lst[i];\n        }\n  \
  \      if (lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    if\
  \ (min >= 0) {\n        min = undefined;\n    }\n    if (max <= 0) {\n        max\
  \ = undefined;\n    }\n    return [max, min];\n}\n"
- "    let smallest: number | undefined;\n    let largest: number | undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n        \
  \    if (largest === undefined || lst[i] > largest) {\n                largest =\
  \ lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (smallest\
  \ === undefined || lst[i] < smallest) {\n                smallest = lst[i];\n  \
  \          }\n        }\n    }\n    return [largest, smallest];\n}\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined || lst[i] < smallest) {\n       \
  \         smallest = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
  \            if (largest === undefined || lst[i] > largest) {\n                largest\
  \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
  }\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined || lst[i] < smallest) {\n       \
  \         smallest = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
  \            if (largest === undefined || lst[i] > largest) {\n                largest\
  \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
  }\n"
- "    let largest: number | undefined = undefined;\n    let smallest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largest === undefined) {\n                largest = lst[i];\n\
  \            } else if (lst[i] > largest) {\n                largest = lst[i];\n\
  \            }\n        } else if (lst[i] > 0) {\n            if (smallest === undefined)\
  \ {\n                smallest = lst[i];\n            } else if (lst[i] < smallest)\
  \ {\n                smallest = lst[i];\n            }\n        }\n    }\n    return\
  \ [largest, smallest];\n}\n"
- "    if (lst.length === 0) {\n        return [undefined, undefined];\n    }\n  \
  \  let largestNegative = undefined;\n    let smallestPositive = undefined;\n   \
  \ for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n          \
  \  if (largestNegative === undefined || lst[i] > largestNegative) {\n          \
  \      largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
  \ {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let min = undefined;\n    let max = undefined;\n    for (let i = 0; i < lst.length;\
  \ i++) {\n        if (lst[i] > 0) {\n            if (min === undefined || lst[i]\
  \ < min) {\n                min = lst[i];\n            }\n        } else if (lst[i]\
  \ < 0) {\n            if (max === undefined || lst[i] > max) {\n               \
  \ max = lst[i];\n            }\n        }\n    }\n    return [max, min];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined || lst[i] < smallest) {\n       \
  \         smallest = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
  \            if (largest === undefined || lst[i] > largest) {\n                largest\
  \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
  }\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative = undefined;\n    let smallestPositive = undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n        \
  \    if (largestNegative === undefined || lst[i] > largestNegative) {\n        \
  \        largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
  \ {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "  let largestNegative: number | undefined = undefined;\n  let smallestPositive:\
  \ number | undefined = undefined;\n  for (let i = 0; i < lst.length; i++) {\n  \
  \  if (lst[i] < 0) {\n      if (largestNegative === undefined) {\n        largestNegative\
  \ = lst[i];\n      } else if (lst[i] > largestNegative) {\n        largestNegative\
  \ = lst[i];\n      }\n    } else if (lst[i] > 0) {\n      if (smallestPositive ===\
  \ undefined) {\n        smallestPositive = lst[i];\n      } else if (lst[i] < smallestPositive)\
  \ {\n        smallestPositive = lst[i];\n      }\n    }\n  }\n  return [largestNegative,\
  \ smallestPositive];\n}\n"
- "    let smallest = undefined;\n    let largest = undefined;\n    for (let i = 0;\
  \ i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest ===\
  \ undefined || lst[i] < smallest) {\n                smallest = lst[i];\n      \
  \      }\n        } else if (lst[i] < 0) {\n            if (largest === undefined\
  \ || lst[i] > largest) {\n                largest = lst[i];\n            }\n   \
  \     }\n    }\n    return [largest, smallest];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let smallestPositive: number | undefined = undefined;\n    let largestNegative:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n\
  \                smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        } else if\
  \ (lst[i] < 0) {\n            if (largestNegative === undefined) {\n           \
  \     largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined || lst[i] < smallest) {\n       \
  \         smallest = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
  \            if (largest === undefined || lst[i] > largest) {\n                largest\
  \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
  }\n"
- "    let smallest: number | undefined;\n    let largest: number | undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n        \
  \    if (smallest === undefined || lst[i] < smallest) {\n                smallest\
  \ = lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest\
  \ === undefined || lst[i] > largest) {\n                largest = lst[i];\n    \
  \        }\n        }\n    }\n    return [largest, smallest];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let min: number | undefined = undefined;\n    let max: number | undefined =\
  \ undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0)\
  \ {\n            if (max === undefined || lst[i] > max) {\n                max =\
  \ lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (min\
  \ === undefined || lst[i] < min) {\n                min = lst[i];\n            }\n\
  \        }\n    }\n    return [max, min];\n}\n"
- "    let a: number | undefined;\n    let b: number | undefined;\n    for (let i\
  \ = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (b ===\
  \ undefined) {\n                b = lst[i];\n            } else if (lst[i] < b)\
  \ {\n                b = lst[i];\n            }\n        } else if (lst[i] < 0)\
  \ {\n            if (a === undefined) {\n                a = lst[i];\n         \
  \   } else if (lst[i] > a) {\n                a = lst[i];\n            }\n     \
  \   }\n    }\n    return [a, b];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined) {\n                smallest = lst[i];\n\
  \            } else if (lst[i] < smallest) {\n                smallest = lst[i];\n\
  \            }\n        } else if (lst[i] < 0) {\n            if (largest === undefined)\
  \ {\n                largest = lst[i];\n            } else if (lst[i] > largest)\
  \ {\n                largest = lst[i];\n            }\n        }\n    }\n    return\
  \ [largest, smallest];\n}\n"
- "    let largest: number | undefined;\n    let smallest: number | undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n        \
  \    if (smallest === undefined || lst[i] < smallest) {\n                smallest\
  \ = lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest\
  \ === undefined || lst[i] > largest) {\n                largest = lst[i];\n    \
  \        }\n        }\n    }\n    return [largest, smallest];\n}\n"
- "    let smallest: number | undefined;\n    let largest: number | undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n        \
  \    if (smallest === undefined || lst[i] < smallest) {\n                smallest\
  \ = lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest\
  \ === undefined || lst[i] > largest) {\n                largest = lst[i];\n    \
  \        }\n        }\n    }\n    return [largest, smallest];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let smallest: number | undefined;\n    let largest: number | undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n        \
  \    if (largest === undefined || lst[i] > largest) {\n                largest =\
  \ lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (smallest\
  \ === undefined || lst[i] < smallest) {\n                smallest = lst[i];\n  \
  \          }\n        }\n    }\n    return [largest, smallest];\n}\n"
- "    let largest_negative: number | undefined = undefined;\n    let smallest_positive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
  \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
  \ {\n                largest_negative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n         \
  \       smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
  \ {\n                smallest_positive = lst[i];\n            }\n        }\n   \
  \ }\n    return [largest_negative, smallest_positive];\n}\n"
- "    let a: number | undefined = undefined;\n    let b: number | undefined = undefined;\n\
  \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n       \
  \     if (a === undefined) {\n                a = lst[i];\n            } else if\
  \ (lst[i] > a) {\n                a = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (b === undefined) {\n                b = lst[i];\n\
  \            } else if (lst[i] < b) {\n                b = lst[i];\n           \
  \ }\n        }\n    }\n    return [a, b];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined || lst[i] < smallest) {\n       \
  \         smallest = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
  \            if (largest === undefined || lst[i] > largest) {\n                largest\
  \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
  }\n"
- "  let smallest: number | undefined;\n  let largest: number | undefined;\n  for\
  \ (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largest ===\
  \ undefined || lst[i] > largest) {\n        largest = lst[i];\n      }\n    } else\
  \ {\n      if (smallest === undefined || lst[i] < smallest) {\n        smallest\
  \ = lst[i];\n      }\n    }\n  }\n  return [largest, smallest];\n}\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined || lst[i] < smallest) {\n       \
  \         smallest = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
  \            if (largest === undefined || lst[i] > largest) {\n                largest\
  \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
  }\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative = undefined;\n    let smallestPositive = undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n        \
  \    if (largestNegative === undefined || lst[i] > largestNegative) {\n        \
  \        largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
  \ {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    if (lst.length === 0) {\n        return [undefined, undefined];\n    }\n  \
  \  let negative: number[] = [];\n    let positive: number[] = [];\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            negative.push(lst[i]);\n\
  \        } else if (lst[i] > 0) {\n            positive.push(lst[i]);\n        }\n\
  \    }\n    if (negative.length === 0) {\n        return [undefined, Math.min(...positive)];\n\
  \    } else if (positive.length === 0) {\n        return [Math.max(...negative),\
  \ undefined];\n    } else {\n        return [Math.max(...negative), Math.min(...positive)];\n\
  \    }\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let smallestPositive = undefined;\n    let largestNegative = undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n        \
  \    if (smallestPositive === undefined || lst[i] < smallestPositive) {\n      \
  \          smallestPositive = lst[i];\n            }\n        } else if (lst[i]\
  \ < 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let min = undefined;\n    let max = undefined;\n    for (let i = 0; i < lst.length;\
  \ i++) {\n        if (lst[i] > 0) {\n            if (min === undefined || lst[i]\
  \ < min) {\n                min = lst[i];\n            }\n        } else if (lst[i]\
  \ < 0) {\n            if (max === undefined || lst[i] > max) {\n               \
  \ max = lst[i];\n            }\n        }\n    }\n    return [max, min];\n}\n"
- "  let largestNegative = undefined;\n  let smallestPositive = undefined;\n  for\
  \ (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative\
  \ === undefined || lst[i] > largestNegative) {\n        largestNegative = lst[i];\n\
  \      }\n    } else if (lst[i] > 0) {\n      if (smallestPositive === undefined\
  \ || lst[i] < smallestPositive) {\n        smallestPositive = lst[i];\n      }\n\
  \    }\n  }\n  return [largestNegative, smallestPositive];\n}\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined || lst[i] < smallest) {\n       \
  \         smallest = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
  \            if (largest === undefined || lst[i] > largest) {\n                largest\
  \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
  }\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined) {\n                smallest = lst[i];\n\
  \            } else if (lst[i] < smallest) {\n                smallest = lst[i];\n\
  \            }\n        } else if (lst[i] < 0) {\n            if (largest === undefined)\
  \ {\n                largest = lst[i];\n            } else if (lst[i] > largest)\
  \ {\n                largest = lst[i];\n            }\n        }\n    }\n    return\
  \ [largest, smallest];\n}\n"
- "    let min = undefined;\n    let max = undefined;\n    for (let i = 0; i < lst.length;\
  \ i++) {\n        if (lst[i] > 0) {\n            if (min === undefined || lst[i]\
  \ < min) {\n                min = lst[i];\n            }\n        } else if (lst[i]\
  \ < 0) {\n            if (max === undefined || lst[i] > max) {\n               \
  \ max = lst[i];\n            }\n        }\n    }\n    return [max, min];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largest === undefined || lst[i] > largest) {\n         \
  \       largest = lst[i];\n            }\n        } else if (lst[i] > 0) {\n   \
  \         if (smallest === undefined || lst[i] < smallest) {\n                smallest\
  \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
  }\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined || lst[i] < smallest) {\n       \
  \         smallest = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
  \            if (largest === undefined || lst[i] > largest) {\n                largest\
  \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
  }\n"
- "    let a: number | undefined = undefined;\n    let b: number | undefined = undefined;\n\
  \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n       \
  \     if (a === undefined) {\n                a = lst[i];\n            } else if\
  \ (lst[i] > a) {\n                a = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (b === undefined) {\n                b = lst[i];\n\
  \            } else if (lst[i] < b) {\n                b = lst[i];\n           \
  \ }\n        }\n    }\n    return [a, b];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let smallestPositive = undefined;\n    let largestNegative = undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n        \
  \    if (smallestPositive === undefined || lst[i] < smallestPositive) {\n      \
  \          smallestPositive = lst[i];\n            }\n        } else if (lst[i]\
  \ < 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largest = undefined;\n    let smallest = undefined;\n    for (let i = 0;\
  \ i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (largest ===\
  \ undefined || lst[i] > largest) {\n                largest = lst[i];\n        \
  \    }\n        } else if (lst[i] > 0) {\n            if (smallest === undefined\
  \ || lst[i] < smallest) {\n                smallest = lst[i];\n            }\n \
  \       }\n    }\n    return [largest, smallest];\n}\n"
- "    let largest: number | undefined;\n    let smallest: number | undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n        \
  \    if (largest === undefined || lst[i] > largest) {\n                largest =\
  \ lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (smallest\
  \ === undefined || lst[i] < smallest) {\n                smallest = lst[i];\n  \
  \          }\n        }\n    }\n    return [largest, smallest];\n}\n"
- "    let a: number | undefined = undefined;\n    let b: number | undefined = undefined;\n\
  \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n       \
  \     if (a === undefined) {\n                a = lst[i];\n            } else if\
  \ (lst[i] > a) {\n                a = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (b === undefined) {\n                b = lst[i];\n\
  \            } else if (lst[i] < b) {\n                b = lst[i];\n           \
  \ }\n        }\n    }\n    return [a, b];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n\
  \                smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        } else if\
  \ (lst[i] < 0) {\n            if (largestNegative === undefined) {\n           \
  \     largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let min = undefined;\n    let max = undefined;\n    for (let i = 0; i < lst.length;\
  \ i++) {\n        if (lst[i] > 0) {\n            if (min === undefined || lst[i]\
  \ < min) {\n                min = lst[i];\n            }\n        } else if (lst[i]\
  \ < 0) {\n            if (max === undefined || lst[i] > max) {\n               \
  \ max = lst[i];\n            }\n        }\n    }\n    return [max, min];\n}\n"
- "    let min = undefined;\n    let max = undefined;\n    for (let i = 0; i < lst.length;\
  \ i++) {\n        if (lst[i] > 0) {\n            if (min === undefined || lst[i]\
  \ < min) {\n                min = lst[i];\n            }\n        } else if (lst[i]\
  \ < 0) {\n            if (max === undefined || lst[i] > max) {\n               \
  \ max = lst[i];\n            }\n        }\n    }\n    return [max, min];\n}\n"
- "    let min: number | undefined = undefined;\n    let max: number | undefined =\
  \ undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0)\
  \ {\n            if (min === undefined || lst[i] < min) {\n                min =\
  \ lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (max\
  \ === undefined || lst[i] > max) {\n                max = lst[i];\n            }\n\
  \        }\n    }\n    return [max, min];\n}\n"
- "    let smallest: number | undefined;\n    let largest: number | undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n        \
  \    if (largest === undefined || lst[i] > largest) {\n                largest =\
  \ lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (smallest\
  \ === undefined || lst[i] < smallest) {\n                smallest = lst[i];\n  \
  \          }\n        }\n    }\n    return [largest, smallest];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largest: number | undefined;\n    let smallest: number | undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n        \
  \    if (smallest === undefined || lst[i] < smallest) {\n                smallest\
  \ = lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest\
  \ === undefined || lst[i] > largest) {\n                largest = lst[i];\n    \
  \        }\n        }\n    }\n    return [largest, smallest];\n}\n"
- "    let largestNegative = undefined;\n    let smallestPositive = undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n        \
  \    if (largestNegative === undefined || lst[i] > largestNegative) {\n        \
  \        largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
  \ {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined) {\n                smallest = lst[i];\n\
  \            } else if (lst[i] < smallest) {\n                smallest = lst[i];\n\
  \            }\n        } else if (lst[i] < 0) {\n            if (largest === undefined)\
  \ {\n                largest = lst[i];\n            } else if (lst[i] > largest)\
  \ {\n                largest = lst[i];\n            }\n        }\n    }\n    return\
  \ [largest, smallest];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let maxNegative: number | undefined = undefined;\n    let minPositive: number\
  \ | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n       \
  \ if (lst[i] < 0) {\n            if (maxNegative === undefined || lst[i] > maxNegative)\
  \ {\n                maxNegative = lst[i];\n            }\n        } else if (lst[i]\
  \ > 0) {\n            if (minPositive === undefined || lst[i] < minPositive) {\n\
  \                minPositive = lst[i];\n            }\n        }\n    }\n    return\
  \ [maxNegative, minPositive];\n}\n"
- "    let maxNegative = undefined;\n    let minPositive = undefined;\n    for (let\
  \ i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (maxNegative\
  \ === undefined || lst[i] > maxNegative) {\n                maxNegative = lst[i];\n\
  \            }\n        } else if (lst[i] > 0) {\n            if (minPositive ===\
  \ undefined || lst[i] < minPositive) {\n                minPositive = lst[i];\n\
  \            }\n        }\n    }\n    return [maxNegative, minPositive];\n}\n"
- "    let min: number | undefined = undefined;\n    let max: number | undefined =\
  \ undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0)\
  \ {\n            if (max === undefined || lst[i] > max) {\n                max =\
  \ lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (min\
  \ === undefined || lst[i] < min) {\n                min = lst[i];\n            }\n\
  \        }\n    }\n    return [max, min];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative = undefined;\n    let smallestPositive = undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n        \
  \    if (largestNegative === undefined || lst[i] > largestNegative) {\n        \
  \        largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
  \ {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let maxNeg = undefined;\n    let minPos = undefined;\n    for (let i = 0; i\
  \ < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (maxNeg === undefined\
  \ || lst[i] > maxNeg) {\n                maxNeg = lst[i];\n            }\n     \
  \   } else if (lst[i] > 0) {\n            if (minPos === undefined || lst[i] < minPos)\
  \ {\n                minPos = lst[i];\n            }\n        }\n    }\n    return\
  \ [maxNeg, minPos];\n}\n"
- "    let min: number | undefined = undefined;\n    let max: number | undefined =\
  \ undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0)\
  \ {\n            if (min === undefined || lst[i] < min) {\n                min =\
  \ lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (max\
  \ === undefined || lst[i] > max) {\n                max = lst[i];\n            }\n\
  \        }\n    }\n    return [max, min];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "  let largestNegative: number | undefined;\n  let smallestPositive: number | undefined;\n\
  \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative\
  \ === undefined || lst[i] > largestNegative) {\n        largestNegative = lst[i];\n\
  \      }\n    } else if (lst[i] > 0) {\n      if (smallestPositive === undefined\
  \ || lst[i] < smallestPositive) {\n        smallestPositive = lst[i];\n      }\n\
  \    }\n  }\n  return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let maxNeg = undefined;\n    let minPos = undefined;\n    for (let i = 0; i\
  \ < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (maxNeg === undefined\
  \ || lst[i] > maxNeg) {\n                maxNeg = lst[i];\n            }\n     \
  \   } else if (lst[i] > 0) {\n            if (minPos === undefined || lst[i] < minPos)\
  \ {\n                minPos = lst[i];\n            }\n        }\n    }\n    return\
  \ [maxNeg, minPos];\n}\n"
- "    let smallest: number | undefined;\n    let largest: number | undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n        \
  \    if (largest === undefined || lst[i] > largest) {\n                largest =\
  \ lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (smallest\
  \ === undefined || lst[i] < smallest) {\n                smallest = lst[i];\n  \
  \          }\n        }\n    }\n    return [largest, smallest];\n}\n"
- "    let smallest = undefined;\n    let largest = undefined;\n    for (let i = 0;\
  \ i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest ===\
  \ undefined || lst[i] < smallest) {\n                smallest = lst[i];\n      \
  \      }\n        } else if (lst[i] < 0) {\n            if (largest === undefined\
  \ || lst[i] > largest) {\n                largest = lst[i];\n            }\n   \
  \     }\n    }\n    return [largest, smallest];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let maxNeg = undefined;\n    let minPos = undefined;\n    for (let i = 0; i\
  \ < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (maxNeg === undefined\
  \ || lst[i] > maxNeg) {\n                maxNeg = lst[i];\n            }\n     \
  \   } else if (lst[i] > 0) {\n            if (minPos === undefined || lst[i] < minPos)\
  \ {\n                minPos = lst[i];\n            }\n        }\n    }\n    return\
  \ [maxNeg, minPos];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let neg: number | undefined = undefined;\n    let pos: number | undefined =\
  \ undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0)\
  \ {\n            if (neg === undefined) {\n                neg = lst[i];\n     \
  \       } else if (lst[i] > neg) {\n                neg = lst[i];\n            }\n\
  \        } else if (lst[i] > 0) {\n            if (pos === undefined) {\n      \
  \          pos = lst[i];\n            } else if (lst[i] < pos) {\n             \
  \   pos = lst[i];\n            }\n        }\n    }\n    return [neg, pos];\n}\n"
- "    let largestNegative = undefined;\n    let smallestPositive = undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n        \
  \    if (largestNegative === undefined || lst[i] > largestNegative) {\n        \
  \        largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
  \ {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined) {\n                smallest = lst[i];\n\
  \            } else if (lst[i] < smallest) {\n                smallest = lst[i];\n\
  \            }\n        } else if (lst[i] < 0) {\n            if (largest === undefined)\
  \ {\n                largest = lst[i];\n            } else if (lst[i] > largest)\
  \ {\n                largest = lst[i];\n            }\n        }\n    }\n    return\
  \ [largest, smallest];\n}\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined || lst[i] < smallest) {\n       \
  \         smallest = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
  \            if (largest === undefined || lst[i] > largest) {\n                largest\
  \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
  }\n"
- "    let min: number | undefined = undefined;\n    let max: number | undefined =\
  \ undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0)\
  \ {\n            if (max === undefined || lst[i] > max) {\n                max =\
  \ lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (min\
  \ === undefined || lst[i] < min) {\n                min = lst[i];\n            }\n\
  \        }\n    }\n    return [max, min];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined) {\n                smallest = lst[i];\n\
  \            } else if (lst[i] < smallest) {\n                smallest = lst[i];\n\
  \            }\n        } else if (lst[i] < 0) {\n            if (largest === undefined)\
  \ {\n                largest = lst[i];\n            } else if (lst[i] > largest)\
  \ {\n                largest = lst[i];\n            }\n        }\n    }\n    return\
  \ [largest, smallest];\n}\n"
- "    let negative: number | undefined = undefined;\n    let positive: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (negative === undefined) {\n                negative = lst[i];\n\
  \            } else if (lst[i] > negative) {\n                negative = lst[i];\n\
  \            }\n        } else if (lst[i] > 0) {\n            if (positive === undefined)\
  \ {\n                positive = lst[i];\n            } else if (lst[i] < positive)\
  \ {\n                positive = lst[i];\n            }\n        }\n    }\n    return\
  \ [negative, positive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let smallest: number | undefined = undefined;\n    let largest: number | undefined\
  \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
  \ 0) {\n            if (smallest === undefined || lst[i] < smallest) {\n       \
  \         smallest = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
  \            if (largest === undefined || lst[i] > largest) {\n                largest\
  \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
  }\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let a: number | undefined = undefined;\n    let b: number | undefined = undefined;\n\
  \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n       \
  \     if (a === undefined) {\n                a = lst[i];\n            } else if\
  \ (lst[i] > a) {\n                a = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (b === undefined) {\n                b = lst[i];\n\
  \            } else if (lst[i] < b) {\n                b = lst[i];\n           \
  \ }\n        }\n    }\n    return [a, b];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let min: number | undefined = undefined;\n    let max: number | undefined =\
  \ undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0)\
  \ {\n            if (max === undefined || lst[i] > max) {\n                max =\
  \ lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (min\
  \ === undefined || lst[i] < min) {\n                min = lst[i];\n            }\n\
  \        }\n    }\n    return [max, min];\n}\n"
- "    let largestNegative = undefined;\n    let smallestPositive = undefined;\n \
  \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n        \
  \    if (largestNegative === undefined || lst[i] > largestNegative) {\n        \
  \        largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
  \ {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let min = undefined;\n    let max = undefined;\n    for (let i = 0; i < lst.length;\
  \ i++) {\n        if (lst[i] > 0) {\n            if (min === undefined || lst[i]\
  \ < min) {\n                min = lst[i];\n            }\n        } else if (lst[i]\
  \ < 0) {\n            if (max === undefined || lst[i] > max) {\n               \
  \ max = lst[i];\n            }\n        }\n    }\n    return [max, min];\n}\n"
- "    let largest_neg: number | undefined = undefined;\n    let smallest_pos: number\
  \ | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n       \
  \ if (lst[i] < 0) {\n            if (largest_neg === undefined) {\n            \
  \    largest_neg = lst[i];\n            } else if (lst[i] > largest_neg) {\n   \
  \             largest_neg = lst[i];\n            }\n        } else if (lst[i] >\
  \ 0) {\n            if (smallest_pos === undefined) {\n                smallest_pos\
  \ = lst[i];\n            } else if (lst[i] < smallest_pos) {\n                smallest_pos\
  \ = lst[i];\n            }\n        }\n    }\n    return [largest_neg, smallest_pos];\n\
  }\n"
- "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
  \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
  \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n \
  \               largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n          \
  \      smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
- "    let largestNegative: number | undefined;\n    let smallestPositive: number\
  \ | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <\
  \ 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
  \ {\n                largestNegative = lst[i];\n            }\n        } else if\
  \ (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
  \ {\n                smallestPositive = lst[i];\n            }\n        }\n    }\n\
  \    return [largestNegative, smallestPositive];\n}\n"
language: ts
name: HumanEval_136_largest_smallest_integers
prompt: '//Create a function that returns a tuple (a, b), where ''a'' is

  // the largest of negative integers, and ''b'' is the smallest

  // of positive integers in a list.

  // If there is no negative or positive integers, return them as None.

  // Examples:

  // largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (None, 1)

  // largest_smallest_integers([]) == (None, None)

  // largest_smallest_integers([0]) == (None, None)

  function largest_smallest_integers(lst: number[]): [number | undefined, number |
  undefined] {

  '
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = largest_smallest_integers;\n  assert.deepEqual(candidate([2,\
  \ 4, 1, 3, 5, 7]),[undefined, 1]);\n  assert.deepEqual(candidate([2, 4, 1, 3, 5,\
  \ 7, 0]),[undefined, 1]);\n  assert.deepEqual(candidate([1, 3, 2, 4, 5, 6, -2]),[-2,\
  \ 1]);\n  assert.deepEqual(candidate([4, 5, 3, 6, 2, 7, -7]),[-7, 2]);\n  assert.deepEqual(candidate([7,\
  \ 3, 8, 4, 9, 2, 5, -9]),[-9, 2]);\n  assert.deepEqual(candidate([]),[undefined,\
  \ undefined]);\n  assert.deepEqual(candidate([0]),[undefined, undefined]);\n  assert.deepEqual(candidate([-1,\
  \ -3, -5, -6]),[-1, undefined]);\n  assert.deepEqual(candidate([-1, -3, -5, -6,\
  \ 0]),[-1, undefined]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, 1]),[-3,\
  \ 1]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, -100, 1]),[-3, 1]);\n}\n\n\
  test();"

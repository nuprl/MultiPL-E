name: HumanEval_93_encode
language: humaneval_to_typescript.py
prompt: "//Write a function that takes a message, and encodes in such a \n// way that\
  \ it swaps case of all letters, replaces all vowels in \n// the message with the\
  \ letter that appears 2 places ahead of that \n// vowel in the english alphabet.\
  \ \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n//\
  \ >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction encode(message:\
  \ string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = encode;\n  assert.deepEqual(candidate(\"TEST\"),\"\
  tgst\");\n  assert.deepEqual(candidate(\"Mudasir\"),\"mWDCSKR\");\n  assert.deepEqual(candidate(\"\
  YES\"),\"ygs\");\n  assert.deepEqual(candidate(\"This is a message\"),\"tHKS KS\
  \ C MGSSCGG\");\n  assert.deepEqual(candidate(\"I DoNt KnOw WhAt tO WrItE\"),\"\
  k dQnT kNqW wHcT Tq wRkTg\");\n}\n\ntest();"
completions: ["    let encodedMessage = '';\n    for (let i = 0; i < message.length;\
    \ i++) {\n        const char = message[i];\n        if (char === char.toUpperCase())\
    \ {\n            encodedMessage += char.toLowerCase();\n        } else {\n   \
    \         encodedMessage += char.toUpperCase();\n        }\n    }\n    return\
    \ encodedMessage;\n}\n", "    let encodedMessage = '';\n    let alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    for (let i = 0; i < message.length; i++) {\n        let char = message[i];\n\
    \        if (char === char.toUpperCase()) {\n            encodedMessage += char.toLowerCase();\n\
    \        } else {\n            encodedMessage += char.toUpperCase();\n       \
    \ }\n        if (alphabet.indexOf(char) !== -1) {\n            let index = alphabet.indexOf(char)\
    \ + 2;\n            if (index > alphabet.length - 1) {\n                index\
    \ = index - alphabet.length;\n            }\n            encodedMessage += alphabet[index];\n\
    \        }\n    }\n    return encodedMessage;\n}\n", "    let encodedMessage =\
    \ '';\n    for (let i = 0; i < message.length; i++) {\n        let char = message[i];\n\
    \        if (char.match(/[a-z]/i)) {\n            if (char.match(/[a-z]/)) {\n\
    \                char = char.toUpperCase();\n            } else {\n          \
    \      char = char.toLowerCase();\n            }\n            if (char.match(/[aeiou]/i))\
    \ {\n                char = String.fromCharCode(char.charCodeAt(0) + 2);\n   \
    \         }\n        }\n        encodedMessage += char;\n    }\n    return encodedMessage;\n\
    }\n", "    const vowels = ['a', 'e', 'i', 'o', 'u'];\n    let encodedMessage =\
    \ '';\n    for (let i = 0; i < message.length; i++) {\n        const char = message[i];\n\
    \        if (char === char.toUpperCase()) {\n            encodedMessage += char.toLowerCase();\n\
    \        } else {\n            encodedMessage += char.toUpperCase();\n       \
    \ }\n        if (vowels.includes(char)) {\n            encodedMessage = encodedMessage.slice(0,\
    \ -1) + vowels[(vowels.indexOf(char) + 2) % vowels.length];\n        }\n    }\n\
    \    return encodedMessage;\n}\n", "    let encodedMessage = '';\n    for (let\
    \ i = 0; i < message.length; i++) {\n        let char = message[i];\n        if\
    \ (char === char.toUpperCase()) {\n            char = char.toLowerCase();\n  \
    \      } else {\n            char = char.toUpperCase();\n        }\n        if\
    \ (char === 'a') {\n            char = 'c';\n        } else if (char === 'e')\
    \ {\n            char = 'g';\n        } else if (char === 'i') {\n           \
    \ char = 'k';\n        } else if (char === 'o') {\n            char = 'q';\n \
    \       } else if (char === 'u') {\n            char = 'y';\n        }\n     \
    \   encodedMessage += char;\n    }\n    return encodedMessage;\n}\n", "    const\
    \ vowels = ['a', 'e', 'i', 'o', 'u'];\n    const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    let encoded = '';\n    for (let i = 0; i < message.length; i++) {\n     \
    \   let char = message[i];\n        if (vowels.includes(char.toLowerCase())) {\n\
    \            let index = alphabet.indexOf(char.toLowerCase());\n            index\
    \ += 2;\n            if (index > 25) {\n                index -= 26;\n       \
    \     }\n            char = alphabet[index];\n        }\n        if (char ===\
    \ char.toUpperCase()) {\n            char = char.toLowerCase();\n        } else\
    \ {\n            char = char.toUpperCase();\n        }\n        encoded += char;\n\
    \    }\n    return encoded;\n}\n", "    const vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    let encodedMessage = '';\n    for (let i = 0; i < message.length; i++) {\n\
    \        let char = message[i];\n        if (vowels.includes(char.toLowerCase()))\
    \ {\n            let index = vowels.indexOf(char.toLowerCase());\n           \
    \ let newIndex = index + 2;\n            if (newIndex > 4) {\n               \
    \ newIndex = newIndex - 5;\n            }\n            char = vowels[newIndex];\n\
    \        }\n        if (char === char.toUpperCase()) {\n            char = char.toLowerCase();\n\
    \        } else {\n            char = char.toUpperCase();\n        }\n       \
    \ encodedMessage += char;\n    }\n    return encodedMessage;\n}\n", "    let encodedMessage\
    \ = '';\n    for (let i = 0; i < message.length; i++) {\n        let char = message[i];\n\
    \        if (char === char.toUpperCase()) {\n            encodedMessage += char.toLowerCase();\n\
    \        } else {\n            encodedMessage += char.toUpperCase();\n       \
    \ }\n    }\n    return encodedMessage;\n}\n\nconsole.log(encode('test'));\nconsole.log(encode('This\
    \ is a message'));", "    let encodedMessage = '';\n    const vowels = 'aeiou';\n\
    \    for (let i = 0; i < message.length; i++) {\n        const currentLetter =\
    \ message[i];\n        if (vowels.includes(currentLetter.toLowerCase())) {\n \
    \           const indexOfVowel = vowels.indexOf(currentLetter.toLowerCase());\n\
    \            const nextVowel = vowels[(indexOfVowel + 2) % vowels.length];\n \
    \           encodedMessage += currentLetter.toUpperCase() === currentLetter ?\
    \ nextVowel.toUpperCase() : nextVowel;\n        } else {\n            encodedMessage\
    \ += currentLetter.toUpperCase() === currentLetter ? currentLetter.toLowerCase()\
    \ : currentLetter.toUpperCase();\n        }\n    }\n    return encodedMessage;\n\
    }\n", "    let encodedMessage = '';\n    for (let i = 0; i < message.length; i++)\
    \ {\n        let char = message[i];\n        if (char === char.toUpperCase())\
    \ {\n            char = char.toLowerCase();\n        } else {\n            char\
    \ = char.toUpperCase();\n        }\n        if (char === 'a') {\n            char\
    \ = 'c';\n        } else if (char === 'e') {\n            char = 'g';\n      \
    \  } else if (char === 'i') {\n            char = 'k';\n        } else if (char\
    \ === 'o') {\n            char = 'q';\n        } else if (char === 'u') {\n  \
    \          char = 'y';\n        }\n        encodedMessage += char;\n    }\n  \
    \  return encodedMessage;\n}\n", "    let result: string = '';\n    let vowels:\
    \ string = 'aeiou';\n    let alphabet: string = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    for (let i: number = 0; i < message.length; i++) {\n        let letter: string\
    \ = message[i];\n        if (vowels.indexOf(letter) !== -1) {\n            let\
    \ index: number = alphabet.indexOf(letter);\n            let newIndex: number\
    \ = index + 2;\n            if (newIndex > 25) {\n                newIndex = newIndex\
    \ - 26;\n            }\n            letter = alphabet[newIndex];\n        }\n\
    \        if (letter === letter.toUpperCase()) {\n            letter = letter.toLowerCase();\n\
    \        } else {\n            letter = letter.toUpperCase();\n        }\n   \
    \     result += letter;\n    }\n    return result;\n}\n", "    let encodedMessage\
    \ = '';\n    for (let i = 0; i < message.length; i++) {\n        let char = message[i];\n\
    \        if (char === char.toUpperCase()) {\n            encodedMessage += char.toLowerCase();\n\
    \        } else {\n            encodedMessage += char.toUpperCase();\n       \
    \ }\n    }\n    return encodedMessage;\n}\n", "    let vowels = 'aeiou';\n   \
    \ let encoded = '';\n    for (let i = 0; i < message.length; i++) {\n        let\
    \ letter = message[i];\n        if (vowels.includes(letter)) {\n            let\
    \ index = vowels.indexOf(letter);\n            encoded += vowels[(index + 2) %\
    \ 5];\n        } else if (letter === letter.toUpperCase()) {\n            encoded\
    \ += letter.toLowerCase();\n        } else {\n            encoded += letter.toUpperCase();\n\
    \        }\n    }\n    return encoded;\n}\n", "    let encodedMessage = '';\n\
    \    for (let i = 0; i < message.length; i++) {\n        let char = message[i];\n\
    \        if (char === char.toUpperCase()) {\n            encodedMessage += char.toLowerCase();\n\
    \        } else {\n            encodedMessage += char.toUpperCase();\n       \
    \ }\n    }\n    return encodedMessage;\n}\n", "    let result: string = '';\n\
    \    let alphabet: string = 'abcdefghijklmnopqrstuvwxyz';\n    for (let i: number\
    \ = 0; i < message.length; i++) {\n        let letter: string = message[i];\n\
    \        let index: number = alphabet.indexOf(letter.toLowerCase());\n       \
    \ if (index === -1) {\n            result += letter;\n        } else {\n     \
    \       let newIndex: number = (index + 2) % alphabet.length;\n            if\
    \ (letter === letter.toUpperCase()) {\n                result += alphabet[newIndex].toUpperCase();\n\
    \            } else {\n                result += alphabet[newIndex];\n       \
    \     }\n        }\n    }\n    return result;\n}\n", "    let encodedMessage =\
    \ '';\n    for (let i = 0; i < message.length; i++) {\n        let char = message[i];\n\
    \        if (char === char.toUpperCase()) {\n            char = char.toLowerCase();\n\
    \        } else {\n            char = char.toUpperCase();\n        }\n       \
    \ if (char === 'a') {\n            char = 'c';\n        } else if (char === 'e')\
    \ {\n            char = 'g';\n        } else if (char === 'i') {\n           \
    \ char = 'k';\n        } else if (char === 'o') {\n            char = 'q';\n \
    \       } else if (char === 'u') {\n            char = 'y';\n        }\n     \
    \   encodedMessage += char;\n    }\n    return encodedMessage;\n}\n", "    let\
    \ result = '';\n    for (let i = 0; i < message.length; i++) {\n        let char\
    \ = message[i];\n        if (char === char.toUpperCase()) {\n            char\
    \ = char.toLowerCase();\n        } else {\n            char = char.toUpperCase();\n\
    \        }\n        if (char === 'a') {\n            char = 'c';\n        } else\
    \ if (char === 'e') {\n            char = 'g';\n        } else if (char === 'i')\
    \ {\n            char = 'k';\n        } else if (char === 'o') {\n           \
    \ char = 'q';\n        } else if (char === 'u') {\n            char = 'y';\n \
    \       }\n        result += char;\n    }\n    return result;\n}\n\nconsole.log(encode('test'));\n\
    console.log(encode('This is a message'));\n", "    let result: string = '';\n\
    \    let vowels: string = 'aeiou';\n    let alphabet: string = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    for (let i: number = 0; i < message.length; i++) {\n        let letter: string\
    \ = message[i];\n        if (vowels.indexOf(letter) !== -1) {\n            let\
    \ index: number = alphabet.indexOf(letter);\n            result += alphabet[index\
    \ + 2];\n        } else {\n            result += letter;\n        }\n    }\n \
    \   return result;\n}\n", "    let encodedMessage = '';\n    const vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    for (let i = 0; i < message.length; i++) {\n     \
    \   let currentLetter = message[i];\n        if (vowels.includes(currentLetter.toLowerCase()))\
    \ {\n            let index = vowels.indexOf(currentLetter.toLowerCase());\n  \
    \          let newIndex = (index + 2) % 5;\n            currentLetter = vowels[newIndex];\n\
    \        }\n        if (currentLetter === currentLetter.toUpperCase()) {\n   \
    \         currentLetter = currentLetter.toLowerCase();\n        } else {\n   \
    \         currentLetter = currentLetter.toUpperCase();\n        }\n        encodedMessage\
    \ += currentLetter;\n    }\n    return encodedMessage;\n}\n", "    let result:\
    \ string = '';\n    for (let i = 0; i < message.length; i++) {\n        let char\
    \ = message[i];\n        if (char === char.toUpperCase()) {\n            result\
    \ += char.toLowerCase();\n        } else {\n            result += char.toUpperCase();\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(encode('test'));\nconsole.log(encode('This\
    \ is a message'));"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

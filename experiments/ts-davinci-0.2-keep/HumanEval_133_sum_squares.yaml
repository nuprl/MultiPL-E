completions:
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ * Math.ceil(lst[i]);\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1,\
  \ 2, 3]));\nconsole.log(sum_squares([1, 4, 9]));\nconsole.log(sum_squares([1, 3,\
  \ 5, 7]));\nconsole.log(sum_squares([1.4, 4.2, 0]));\nconsole.log(sum_squares([-2.4,\
  \ 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(Math.ceil).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- '  return lst.map(Math.ceil).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ * Math.ceil(lst[i]);\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1,\
  \ 2, 3]));\nconsole.log(sum_squares([1, 4, 9]));\nconsole.log(sum_squares([1, 3,\
  \ 5, 7]));\nconsole.log(sum_squares([1.4, 4.2, 0]));\nconsole.log(sum_squares([-2.4,\
  \ 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(Math.ceil).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ * Math.ceil(lst[i]);\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1,\
  \ 2, 3]));\nconsole.log(sum_squares([1, 4, 9]));\nconsole.log(sum_squares([1, 3,\
  \ 5, 7]));\nconsole.log(sum_squares([1.4, 4.2, 0]));\nconsole.log(sum_squares([-2.4,\
  \ 1, 1]));\n"
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(Math.ceil).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(Math.ceil).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ * Math.ceil(lst[i]);\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1,\
  \ 2, 3]));\nconsole.log(sum_squares([1, 4, 9]));\nconsole.log(sum_squares([1, 3,\
  \ 5, 7]));\nconsole.log(sum_squares([1.4, 4.2, 0]));\nconsole.log(sum_squares([-2.4,\
  \ 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- '  return lst.map(Math.ceil).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- '  return lst.map(Math.ceil).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum\
  \ += Math.ceil(lst[i]) * Math.ceil(lst[i]);\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1,\
  \ 2, 3]));\nconsole.log(sum_squares([1, 4, 9]));\nconsole.log(sum_squares([1, 3,\
  \ 5, 7]));\nconsole.log(sum_squares([1.4, 4.2, 0]));\nconsole.log(sum_squares([-2.4,\
  \ 1, 1]));"
- '  return lst.map(Math.ceil).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        sum += Math.ceil(lst[i]) * Math.ceil(lst[i]);\n    }\n    return sum;\n\
  }\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1, 4, 9]));\n\
  console.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4, 4.2, 0]));\n\
  console.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ * Math.ceil(lst[i]);\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1,\
  \ 2, 3]));\nconsole.log(sum_squares([1, 4, 9]));\nconsole.log(sum_squares([1, 3,\
  \ 5, 7]));\nconsole.log(sum_squares([1.4, 4.2, 0]));\nconsole.log(sum_squares([-2.4,\
  \ 1, 1]));"
- "    let sum = 0;\n    lst.forEach(element => {\n        sum += Math.ceil(element)\
  \ * Math.ceil(element);\n    });\n    return sum;\n}\n\nconsole.log(sum_squares([1,\
  \ 2, 3]));\nconsole.log(sum_squares([1, 4, 9]));\nconsole.log(sum_squares([1, 3,\
  \ 5, 7]));\nconsole.log(sum_squares([1.4, 4.2, 0]));\nconsole.log(sum_squares([-2.4,\
  \ 1, 1]));"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ * Math.ceil(lst[i]);\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1,\
  \ 2, 3]));\nconsole.log(sum_squares([1, 4, 9]));\nconsole.log(sum_squares([1, 3,\
  \ 5, 7]));\nconsole.log(sum_squares([1.4, 4.2, 0]));\nconsole.log(sum_squares([-2.4,\
  \ 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1,\
  \ 2, 3]));\nconsole.log(sum_squares([1, 4, 9]));\nconsole.log(sum_squares([1, 3,\
  \ 5, 7]));\nconsole.log(sum_squares([1.4, 4.2, 0]));\nconsole.log(sum_squares([-2.4,\
  \ 1, 1]));"
- '    return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- '  return lst.map(Math.ceil).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ * Math.ceil(lst[i]);\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1,\
  \ 2, 3]));\nconsole.log(sum_squares([1, 4, 9]));\nconsole.log(sum_squares([1, 3,\
  \ 5, 7]));\nconsole.log(sum_squares([1.4, 4.2, 0]));\nconsole.log(sum_squares([-2.4,\
  \ 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '    return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let result = 0;\n    for (let i = 0; i < lst.length; i++) {\n        result\
  \ += Math.ceil(lst[i]) ** 2;\n    }\n    return result;\n}\n\nconsole.log(sum_squares([1,\
  \ 2, 3]));\nconsole.log(sum_squares([1, 4, 9]));\nconsole.log(sum_squares([1, 3,\
  \ 5, 7]));\nconsole.log(sum_squares([1.4, 4.2, 0]));\nconsole.log(sum_squares([-2.4,\
  \ 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- '  return lst.map(Math.ceil).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '    return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '    return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let result = 0;\n  for (let i = 0; i < lst.length; i++) {\n    result += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return result;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- '  return lst.map(Math.ceil).reduce((acc, curr) => acc + curr ** 2, 0);

  }

  '
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1,\
  \ 2, 3]));\nconsole.log(sum_squares([1, 4, 9]));\nconsole.log(sum_squares([1, 3,\
  \ 5, 7]));\nconsole.log(sum_squares([1.4, 4.2, 0]));\nconsole.log(sum_squares([-2.4,\
  \ 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(Math.ceil).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '    return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((x, y) => x + y * y, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ * Math.ceil(lst[i]);\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1,\
  \ 2, 3]));\nconsole.log(sum_squares([1, 4, 9]));\nconsole.log(sum_squares([1, 3,\
  \ 5, 7]));\nconsole.log(sum_squares([1.4, 4.2, 0]));\nconsole.log(sum_squares([-2.4,\
  \ 1, 1]));"
- "  let result = 0;\n  for (let i = 0; i < lst.length; i++) {\n    result += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return result;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "    let result = 0;\n    lst.forEach(element => {\n        result += Math.pow(Math.ceil(element),\
  \ 2);\n    });\n    return result;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\n\
  console.log(sum_squares([1, 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\n\
  console.log(sum_squares([1.4, 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((acc, x) => acc + x * x, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ * Math.ceil(lst[i]);\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1,\
  \ 2, 3]));\nconsole.log(sum_squares([1, 4, 9]));\nconsole.log(sum_squares([1, 3,\
  \ 5, 7]));\nconsole.log(sum_squares([1.4, 4.2, 0]));\nconsole.log(sum_squares([-2.4,\
  \ 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- '  return lst.map(Math.ceil).reduce((acc, curr) => acc + curr ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- '  return lst.map(Math.ceil).reduce((acc, curr) => acc + curr ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- '  return lst.map(x => Math.ceil(x)).reduce((acc, curr) => acc + curr ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(x => Math.ceil(x)).reduce((acc, x) => acc + x * x, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '    return lst.map(x => Math.ceil(x)).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '    return lst.map(Math.ceil).reduce((a, b) => a + b * b, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(Math.ceil).reduce((acc, curr) => acc + curr ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let result = 0;\n  for (let i = 0; i < lst.length; i++) {\n    result += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return result;\n}\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    lst.forEach(function (element) {\n        sum += Math.ceil(element)\
  \ * Math.ceil(element);\n    });\n    return sum;\n}\n\nconsole.log(sum_squares([1,\
  \ 2, 3]));\nconsole.log(sum_squares([1, 4, 9]));\nconsole.log(sum_squares([1, 3,\
  \ 5, 7]));\nconsole.log(sum_squares([1.4, 4.2, 0]));\nconsole.log(sum_squares([-2.4,\
  \ 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- '  return lst.map(Math.ceil).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- '  return lst.map(Math.ceil).reduce((acc, curr) => acc + curr ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  lst.forEach(num => {\n    sum += Math.ceil(num) ** 2;\n  });\n\
  \  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.pow(Math.ceil(lst[i]),\
  \ 2);\n  }\n  return sum;\n}\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += Math.ceil(lst[i])\
  \ ** 2;\n  }\n  return sum;\n}\n\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        sum += Math.ceil(lst[i]) ** 2;\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1,\
  \ 2, 3]));\nconsole.log(sum_squares([1, 4, 9]));\nconsole.log(sum_squares([1, 3,\
  \ 5, 7]));\nconsole.log(sum_squares([1.4, 4.2, 0]));\nconsole.log(sum_squares([-2.4,\
  \ 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ * Math.ceil(lst[i]);\n    }\n    return sum;\n}\n\nconsole.log(sum_squares([1,\
  \ 2, 3]));\nconsole.log(sum_squares([1, 4, 9]));\nconsole.log(sum_squares([1, 3,\
  \ 5, 7]));\nconsole.log(sum_squares([1.4, 4.2, 0]));\nconsole.log(sum_squares([-2.4,\
  \ 1, 1]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        sum += Math.ceil(lst[i])\
  \ ** 2;\n    }\n    return sum;\n}\nconsole.log(sum_squares([1, 2, 3]));\nconsole.log(sum_squares([1,\
  \ 4, 9]));\nconsole.log(sum_squares([1, 3, 5, 7]));\nconsole.log(sum_squares([1.4,\
  \ 4.2, 0]));\nconsole.log(sum_squares([-2.4, 1, 1]));"
- "  let sum: number = 0;\n  for (let i: number = 0; i < lst.length; i++) {\n    sum\
  \ += Math.ceil(lst[i]) ** 2;\n  }\n  return sum;\n}\nconsole.log(sum_squares([1,\
  \ 2, 3]));\nconsole.log(sum_squares([1, 4, 9]));\nconsole.log(sum_squares([1, 3,\
  \ 5, 7]));\nconsole.log(sum_squares([1.4, 4.2, 0]));\nconsole.log(sum_squares([-2.4,\
  \ 1, 1]));\n"
- '  return lst.map(Math.ceil).reduce((a, b) => a + b ** 2, 0);

  }


  console.log(sum_squares([1, 2, 3]));

  console.log(sum_squares([1, 4, 9]));

  console.log(sum_squares([1, 3, 5, 7]));

  console.log(sum_squares([1.4, 4.2, 0]));

  console.log(sum_squares([-2.4, 1, 1]));'
language: ts
name: HumanEval_133_sum_squares
prompt: '//You are given a list of numbers.

  // You need to return the sum of squared numbers in the given list,

  // round each element in the list to the upper int(Ceiling) first.

  // Examples:

  // For lst = [1,2,3] the output should be 14

  // For lst = [1,4,9] the output should be 98

  // For lst = [1,3,5,7] the output should be 84

  // For lst = [1.4,4.2,0] the output should be 29

  // For lst = [-2.4,1,1] the output should be 6

  function sum_squares(lst: number[]): number {

  '
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = sum_squares;\n  assert.deepEqual(candidate([1.0, 2.0,\
  \ 3.0]),14);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0]),14);\n  assert.deepEqual(candidate([1.0,\
  \ 3.0, 5.0, 7.0]),84);\n  assert.deepEqual(candidate([1.4, 4.2, 0.0]),29);\n  assert.deepEqual(candidate([-2.4,\
  \ 1.0, 1.0]),6);\n  assert.deepEqual(candidate([100.0, 1.0, 15.0, 2.0]),10230);\n\
  \  assert.deepEqual(candidate([10000.0, 10000.0]),200000000);\n  assert.deepEqual(candidate([-1.4,\
  \ 4.6, 6.3]),75);\n  assert.deepEqual(candidate([-1.4, 17.9, 18.9, 19.9]),1086);\n\
  \  assert.deepEqual(candidate([0.0]),0);\n  assert.deepEqual(candidate([-1.0]),1);\n\
  \  assert.deepEqual(candidate([-1.0, 1.0, 0.0]),2);\n}\n\ntest();"

name: HumanEval_128_prod_signs
language: humaneval_to_typescript.py
prompt: "//You are given an array arr of integers and you need to return\n// sum of\
  \ magnitudes of integers multiplied by product of all signs\n// of each number in\
  \ the array, represented by 1, -1 or 0.\n// Note: return None for empty arr.\n//\
  \ Example:\n// >>> prod_signs([1, 2, 2, -4]) == -9\n// >>> prod_signs([0, 1]) ==\
  \ 0\n// >>> prod_signs([]) == None\nfunction prod_signs(arr: number[]): number |\
  \ undefined {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = prod_signs;\n  assert.deepEqual(candidate([1, 2, 2,\
  \ -4]),-9);\n  assert.deepEqual(candidate([0, 1]),0);\n  assert.deepEqual(candidate([1,\
  \ 1, 1, 2, 3, -1, 1]),-10);\n  assert.deepEqual(candidate([]),undefined);\n  assert.deepEqual(candidate([2,\
  \ 4, 1, 2, -1, -1, 9]),20);\n  assert.deepEqual(candidate([-1, 1, -1, 1]),4);\n\
  \  assert.deepEqual(candidate([-1, 1, 1, 1]),-4);\n  assert.deepEqual(candidate([-1,\
  \ 1, 1, 0]),0);\n}\n\ntest();"
completions: ["    if (arr.length === 0) {\n        return undefined;\n    }\n   \
    \ let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n\
    \        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n\
    \    return sum * prod;\n}\n", "    if (arr.length == 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length == 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let product = 1;\n    for (let i =\
    \ 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            product *= 1;\n        } else if (arr[i] < 0) {\n            sum\
    \ += arr[i] * -1;\n            product *= -1;\n        } else {\n            product\
    \ *= 0;\n        }\n    }\n    return sum * product;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  \
    \  if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ === 0) {\n            continue;\n        }\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  \
    \  if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ < 0) {\n            prod *= -1;\n        } else if (arr[i] > 0) {\n        \
    \    prod *= 1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += Math.abs(arr[i]);\n    }\n    return sum * prod;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  if\
    \ (arr.length === 0) {\n    return undefined;\n  }\n  let sum = 0;\n  let prod\
    \ = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n    \
    \  sum += arr[i];\n    } else if (arr[i] < 0) {\n      sum += -arr[i];\n     \
    \ prod *= -1;\n    }\n  }\n  return sum * prod;\n}\n", "  if (arr.length === 0)\
    \ {\n    return undefined;\n  }\n  let sum = 0;\n  let prod = 1;\n  for (let i\
    \ = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      sum += arr[i];\n \
    \     prod *= 1;\n    } else if (arr[i] < 0) {\n      sum += arr[i] * -1;\n  \
    \    prod *= -1;\n    } else {\n      prod *= 0;\n    }\n  }\n  return sum * prod;\n\
    }\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n    let\
    \ sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n  \
    \      sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n \
    \   return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n            prod\
    \ *= 1;\n        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n \
    \           prod *= -1;\n        } else {\n            prod *= 0;\n        }\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let product = 1;\n    for (let i =\
    \ 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            product *= 1;\n        } else if (arr[i] < 0) {\n            sum\
    \ += arr[i] * -1;\n            product *= -1;\n        } else {\n            product\
    \ *= 0;\n        }\n    }\n    return sum * product;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  \
    \  if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ < 0) {\n            prod *= -1;\n        } else if (arr[i] > 0) {\n        \
    \    prod *= 1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += Math.abs(arr[i]);\n    }\n    return sum * prod;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === 0) {\n\
    \            continue;\n        }\n        sum += Math.abs(arr[i]);\n        prod\
    \ *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === 0) {\n\
    \            continue;\n        }\n        sum += Math.abs(arr[i]);\n        prod\
    \ *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  if (arr.length\
    \ === 0) {\n    return undefined;\n  }\n  let sum = 0;\n  let prod = 1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      sum += arr[i];\n\
    \      prod *= 1;\n    } else if (arr[i] < 0) {\n      sum += arr[i] * -1;\n \
    \     prod *= -1;\n    } else {\n      prod *= 0;\n    }\n  }\n  return sum *\
    \ prod;\n}\n", "    if (arr.length === 0) return undefined;\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n\
    }\n", "  if (arr.length === 0) {\n    return undefined;\n  }\n  let sum = 0;\n\
    \  let prod = 1;\n  for (let i = 0; i < arr.length; i++) {\n    sum += Math.abs(arr[i]);\n\
    \    prod *= Math.sign(arr[i]);\n  }\n  return sum * prod;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n\
    \            sum += arr[i];\n            prod *= 1;\n        } else if (arr[i]\
    \ < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n        }\
    \ else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n",
  "  if (arr.length === 0) {\n    return undefined;\n  }\n  let sum = 0;\n  let prod\
    \ = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n    \
    \  sum += arr[i];\n      prod *= 1;\n    } else if (arr[i] < 0) {\n      sum +=\
    \ arr[i] * -1;\n      prod *= -1;\n    } else {\n      prod *= 0;\n    }\n  }\n\
    \  return sum * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n\
    \  }\n  let prod = 1;\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] > 0) {\n      prod *= 1;\n      sum += arr[i];\n    } else\
    \ if (arr[i] < 0) {\n      prod *= -1;\n      sum += arr[i] * -1;\n    } else\
    \ {\n      prod *= 0;\n    }\n  }\n  return prod * sum;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n\
    \            sum += arr[i];\n            prod *= 1;\n        } else if (arr[i]\
    \ < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n        }\
    \ else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n\
    }\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n    let\
    \ sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n  \
    \      sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n \
    \   return sum * prod;\n}\n", "    if (arr.length == 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n            prod\
    \ *= 1;\n        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n \
    \           prod *= -1;\n        } else {\n            prod *= 0;\n        }\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n            prod *= -1;\n        } else {\n            prod *=\
    \ 0;\n        }\n    }\n    return sum * prod;\n}\n", "    if (arr.length ===\
    \ 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  \
    \  if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n\
    }\n", "    if (arr.length === 0) return undefined;\n    let sum = 0;\n    let\
    \ prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] >\
    \ 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n\
    }\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n    let\
    \ sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n  \
    \      if (arr[i] > 0) {\n            sum += arr[i];\n            prod *= 1;\n\
    \        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n    }\n\
    \    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] < 0) {\n            prod *= -1;\n        } else if\
    \ (arr[i] === 0) {\n            prod = 0;\n        }\n        sum += Math.abs(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n\
    \  }\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] > 0) {\n      sum += arr[i];\n      prod *= 1;\n    } else\
    \ if (arr[i] < 0) {\n      sum += arr[i] * -1;\n      prod *= -1;\n    } else\
    \ {\n      prod *= 0;\n    }\n  }\n  return sum * prod;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === 0) {\n\
    \            continue;\n        }\n        sum += Math.abs(arr[i]);\n        prod\
    \ *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let prod = 1;\n    let sum =\
    \ 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === 0) {\n\
    \            continue;\n        }\n        prod *= Math.sign(arr[i]);\n      \
    \  sum += Math.abs(arr[i]);\n    }\n    return prod * sum;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n\
    \            sum += arr[i];\n            prod *= 1;\n        } else if (arr[i]\
    \ < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n        }\
    \ else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n\
    }\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n    let\
    \ sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n  \
    \      sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n \
    \   return sum * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n\
    \  }\n  let prod = 1;\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] > 0) {\n      prod *= 1;\n      sum += arr[i];\n    } else\
    \ if (arr[i] < 0) {\n      prod *= -1;\n      sum += arr[i] * -1;\n    } else\
    \ {\n      prod *= 0;\n    }\n  }\n  return prod * sum;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sign = 1;\n    let sum =\
    \ 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n\
    \            sum += arr[i];\n        } else if (arr[i] < 0) {\n            sum\
    \ += -arr[i];\n            sign *= -1;\n        }\n    }\n    return sum * sign;\n\
    }\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n    let\
    \ sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n  \
    \      if (arr[i] > 0) {\n            sum += arr[i];\n            prod *= 1;\n\
    \        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n    }\n\
    \    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum: number = 0;\n    let prod: number = 1;\n    for (let i: number\
    \ = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n            prod *= -1;\n        } else {\n            prod *=\
    \ 0;\n        }\n    }\n    return sum * prod;\n}\n", "  if (arr.length === 0)\
    \ {\n    return undefined;\n  }\n  let sum = 0;\n  let prod = 1;\n  for (let i\
    \ = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      sum += arr[i];\n \
    \   } else if (arr[i] < 0) {\n      sum += -arr[i];\n      prod *= -1;\n    }\n\
    \  }\n  return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n            prod *= -1;\n        } else {\n            prod *=\
    \ 0;\n        }\n    }\n    return sum * prod;\n}\n", "    if (arr.length ===\
    \ 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  \
    \  if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n\
    }\n", "  if (arr.length === 0) {\n    return undefined;\n  }\n  let sum = 0;\n\
    \  let prod = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0)\
    \ {\n      sum += arr[i];\n      prod *= 1;\n    } else if (arr[i] < 0) {\n  \
    \    sum += arr[i] * -1;\n      prod *= -1;\n    } else {\n      prod *= 0;\n\
    \    }\n  }\n  return sum * prod;\n}\n", "    if (arr.length === 0) {\n      \
    \  return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum +=\
    \ arr[i];\n            prod *= 1;\n        } else if (arr[i] < 0) {\n        \
    \    sum += arr[i] * -1;\n            prod *= -1;\n        } else {\n        \
    \    prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n", "  if (arr.length\
    \ === 0) {\n    return undefined;\n  }\n  let sum = 0;\n  let prod = 1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      sum += arr[i];\n\
    \      prod *= 1;\n    } else if (arr[i] < 0) {\n      sum += arr[i] * -1;\n \
    \     prod *= -1;\n    } else {\n      prod *= 0;\n    }\n  }\n  return sum *\
    \ prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n\
    \    let prod = 1;\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        if (arr[i] > 0) {\n            prod *= 1;\n            sum += arr[i];\n\
    \        } else if (arr[i] < 0) {\n            prod *= -1;\n            sum +=\
    \ Math.abs(arr[i]);\n        } else {\n            prod *= 0;\n        }\n   \
    \ }\n    return prod * sum;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] < 0) {\n            prod *= -1;\n\
    \        } else if (arr[i] > 0) {\n            prod *= 1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += Math.abs(arr[i]);\n    }\n\
    \    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n\
    \  }\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] > 0) {\n      sum += arr[i];\n      prod *= 1;\n    } else\
    \ if (arr[i] < 0) {\n      sum += arr[i] * -1;\n      prod *= -1;\n    } else\
    \ {\n      prod *= 0;\n    }\n  }\n  return sum * prod;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  \
    \  if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n  }\n  let\
    \ sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] > 0) {\n      sum += arr[i];\n    } else if (arr[i] < 0) {\n      sum\
    \ += Math.abs(arr[i]);\n      prod *= -1;\n    }\n  }\n  return sum * prod;\n\
    }\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n    let\
    \ sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n  \
    \      if (arr[i] > 0) {\n            sum += arr[i];\n            prod *= 1;\n\
    \        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n    }\n\
    \    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n            prod\
    \ *= 1;\n        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n \
    \           prod *= -1;\n        } else {\n            prod *= 0;\n        }\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n\
    \  }\n  let prod = 1;\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] > 0) {\n      prod *= 1;\n      sum += arr[i];\n    } else\
    \ if (arr[i] < 0) {\n      prod *= -1;\n      sum += arr[i] * -1;\n    } else\
    \ {\n      prod *= 0;\n    }\n  }\n  return prod * sum;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n\
    \            sum += arr[i];\n            prod *= 1;\n        } else if (arr[i]\
    \ < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n        }\
    \ else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n",
  "  if (arr.length === 0) {\n    return undefined;\n  }\n  let sum = 0;\n  let prod\
    \ = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n    \
    \  sum += arr[i];\n      prod *= 1;\n    } else if (arr[i] < 0) {\n      sum +=\
    \ arr[i] * -1;\n      prod *= -1;\n    } else {\n      prod *= 0;\n    }\n  }\n\
    \  return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n            prod\
    \ *= 1;\n        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n \
    \           prod *= -1;\n        } else {\n            prod *= 0;\n        }\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let product = 1;\n    for (let i =\
    \ 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            product *= 1;\n        } else if (arr[i] < 0) {\n            sum\
    \ += arr[i] * -1;\n            product *= -1;\n        } else {\n            product\
    \ *= 0;\n        }\n    }\n    return sum * product;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n\
    \            sum += arr[i];\n            prod *= 1;\n        } else if (arr[i]\
    \ < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n        }\
    \ else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n", "    if (arr.length === 0) return undefined;\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n\
    }\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n    const\
    \ signs = arr.map(x => Math.sign(x));\n    const magnitudes = arr.map(x => Math.abs(x));\n\
    \    const prod = signs.reduce((a, b) => a * b);\n    const sum = magnitudes.reduce((a,\
    \ b) => a + b);\n    return prod * sum;\n}\n", "    if (arr.length === 0) {\n\
    \        return undefined;\n    }\n    let prod = 1;\n    let sum = 0;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            prod\
    \ *= 1;\n            sum += arr[i];\n        } else if (arr[i] < 0) {\n      \
    \      prod *= -1;\n            sum += arr[i] * -1;\n        } else {\n      \
    \      prod *= 0;\n        }\n    }\n    return prod * sum;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  if\
    \ (arr.length === 0) {\n    return undefined;\n  }\n  let sum = 0;\n  let prod\
    \ = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < 0) {\n    \
    \  prod *= -1;\n    } else if (arr[i] === 0) {\n      prod = 0;\n    }\n    sum\
    \ += Math.abs(arr[i]);\n  }\n  return sum * prod;\n}\n", "    if (arr.length ===\
    \ 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  \
    \  if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n   \
    \ }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n            prod\
    \ *= 1;\n        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n \
    \           prod *= -1;\n        } else {\n            prod *= 0;\n        }\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n            prod *= -1;\n        } else {\n            prod *=\
    \ 0;\n        }\n    }\n    return sum * prod;\n}\n", "    if (arr.length ===\
    \ 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n     \
    \       sum += arr[i];\n            prod *= 1;\n        } else if (arr[i] < 0)\
    \ {\n            sum += arr[i] * -1;\n            prod *= -1;\n        } else\
    \ {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n", " \
    \ if (arr.length === 0) {\n    return undefined;\n  }\n  let prod = 1;\n  let\
    \ sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n\
    \      prod *= 1;\n      sum += arr[i];\n    } else if (arr[i] < 0) {\n      prod\
    \ *= -1;\n      sum += arr[i] * -1;\n    } else {\n      prod *= 0;\n    }\n \
    \ }\n  return prod * sum;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n            prod *= -1;\n        } else {\n            prod *=\
    \ 0;\n        }\n    }\n    return sum * prod;\n}\n", "    if (arr.length ===\
    \ 0) {\n        return undefined;\n    }\n    const signs = arr.map(x => Math.sign(x));\n\
    \    const magnitudes = arr.map(x => Math.abs(x));\n    const product = signs.reduce((a,\
    \ b) => a * b);\n    const sum = magnitudes.reduce((a, b) => a + b);\n    return\
    \ product * sum;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n            prod *= -1;\n        } else {\n            prod *=\
    \ 0;\n        }\n    }\n    return sum * prod;\n}\n", "  if (arr.length === 0)\
    \ {\n    return undefined;\n  }\n  let prod = 1;\n  let sum = 0;\n  for (let i\
    \ = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      prod *= 1;\n     \
    \ sum += arr[i];\n    } else if (arr[i] < 0) {\n      prod *= -1;\n      sum +=\
    \ arr[i] * -1;\n    } else {\n      prod *= 0;\n    }\n  }\n  return prod * sum;\n\
    }\n", "  if (arr.length === 0) {\n    return undefined;\n  }\n  let sum = 0;\n\
    \  let prod = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] !==\
    \ 0) {\n      sum += Math.abs(arr[i]);\n      prod *= Math.sign(arr[i]);\n   \
    \ }\n  }\n  return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n            prod *= -1;\n        } else {\n            prod *=\
    \ 0;\n        }\n    }\n    return sum * prod;\n}\n", "    if (arr.length == 0)\
    \ return undefined;\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let prod = 1;\n    let sum = 0;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            prod *= 1;\n\
    \            sum += arr[i];\n        } else if (arr[i] < 0) {\n            prod\
    \ *= -1;\n            sum += Math.abs(arr[i]);\n        } else {\n           \
    \ prod *= 0;\n        }\n    }\n    return prod * sum;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  \
    \  if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n   \
    \ }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n\
    \  }\n  let prod = 1;\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] < 0) {\n      prod *= -1;\n    } else if (arr[i] > 0) {\n\
    \      prod *= 1;\n    } else {\n      prod *= 0;\n    }\n    sum += Math.abs(arr[i]);\n\
    \  }\n  return prod * sum;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n            prod *= -1;\n        } else {\n            prod *=\
    \ 0;\n        }\n    }\n    return sum * prod;\n}\n", "    if (arr.length ===\
    \ 0) {\n        return undefined;\n    }\n    let prod = 1;\n    let sum = 0;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n     \
    \       prod *= 1;\n            sum += arr[i];\n        } else if (arr[i] < 0)\
    \ {\n            prod *= -1;\n            sum += arr[i] * -1;\n        } else\
    \ {\n            prod *= 0;\n        }\n    }\n    return prod * sum;\n}\n", " \
    \   if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n  }\n  let\
    \ prod = 1;\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] > 0) {\n      prod *= 1;\n      sum += arr[i];\n    } else if (arr[i]\
    \ < 0) {\n      prod *= -1;\n      sum += arr[i] * -1;\n    } else {\n      prod\
    \ *= 0;\n    }\n  }\n  return prod * sum;\n}\n", "    if (arr.length === 0) {\n\
    \        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n     \
    \   prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    return arr.reduce((acc, cur)\
    \ => acc * Math.sign(cur), 1) * arr.reduce((acc, cur) => acc + Math.abs(cur),\
    \ 0);\n}\n", "  if (arr.length === 0) {\n    return undefined;\n  }\n  let sum\
    \ = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ > 0) {\n      sum += arr[i];\n      prod *= 1;\n    } else if (arr[i] < 0) {\n\
    \      sum += arr[i] * -1;\n      prod *= -1;\n    } else {\n      prod *= 0;\n\
    \    }\n  }\n  return sum * prod;\n}\n", "    if (arr.length === 0) {\n      \
    \  return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n        prod\
    \ *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  if (arr.length\
    \ === 0) {\n    return undefined;\n  }\n  let sum = 0;\n  let prod = 1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      sum += arr[i];\n\
    \      prod *= 1;\n    } else if (arr[i] < 0) {\n      sum += arr[i] * -1;\n \
    \     prod *= -1;\n    } else {\n      prod *= 0;\n    }\n  }\n  return sum *\
    \ prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n\
    \    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        if (arr[i] > 0) {\n            sum += arr[i];\n            prod *=\
    \ 1;\n        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n    \
    \        prod *= -1;\n        } else {\n            prod *= 0;\n        }\n  \
    \  }\n    return sum * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n\
    \  }\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    sum += Math.abs(arr[i]);\n    prod *= Math.sign(arr[i]);\n  }\n  return\
    \ sum * prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] !== 0) {\n            sum += Math.abs(arr[i]);\n\
    \            prod *= Math.sign(arr[i]);\n        }\n    }\n    return sum * prod;\n\
    }\n", "  if (arr.length === 0) {\n    return undefined;\n  }\n  let prod = 1;\n\
    \  let sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0)\
    \ {\n      prod *= 1;\n      sum += arr[i];\n    } else if (arr[i] < 0) {\n  \
    \    prod *= -1;\n      sum += arr[i] * -1;\n    } else {\n      prod *= 0;\n\
    \    }\n  }\n  return prod * sum;\n}\n", "    if (arr.length === 0) {\n      \
    \  return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum +=\
    \ arr[i];\n            prod *= 1;\n        } else if (arr[i] < 0) {\n        \
    \    sum += arr[i] * -1;\n            prod *= -1;\n        } else {\n        \
    \    prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n", "  if (arr.length\
    \ === 0) {\n    return undefined;\n  }\n  const prod = arr.reduce((acc, curr)\
    \ => {\n    if (curr === 0) {\n      return acc;\n    }\n    return acc * Math.sign(curr);\n\
    \  }, 1);\n  const sum = arr.reduce((acc, curr) => {\n    return acc + Math.abs(curr);\n\
    \  }, 0);\n  return prod * sum;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let prod = 1;\n    let sum = 0;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            prod *= 1;\n\
    \            sum += arr[i];\n        } else if (arr[i] < 0) {\n            prod\
    \ *= -1;\n            sum += Math.abs(arr[i]);\n        } else {\n           \
    \ prod *= 0;\n        }\n    }\n    return prod * sum;\n}\n", "  if (arr.length\
    \ === 0) {\n    return undefined;\n  }\n  let sum = 0;\n  let prod = 1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] === 0) {\n      continue;\n\
    \    }\n    sum += Math.abs(arr[i]);\n    prod *= Math.sign(arr[i]);\n  }\n  return\
    \ sum * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n  }\n\
    \  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++) {\n \
    \   if (arr[i] < 0) {\n      prod *= -1;\n    } else if (arr[i] > 0) {\n     \
    \ prod *= 1;\n    } else {\n      prod *= 0;\n    }\n    sum += Math.abs(arr[i]);\n\
    \  }\n  return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n            prod *= -1;\n        } else {\n            prod *=\
    \ 0;\n        }\n    }\n    return sum * prod;\n}\n", "  if (arr.length === 0)\
    \ {\n    return undefined;\n  }\n  let prod = 1;\n  let sum = 0;\n  for (let i\
    \ = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      prod *= 1;\n     \
    \ sum += arr[i];\n    } else if (arr[i] < 0) {\n      prod *= -1;\n      sum +=\
    \ arr[i] * -1;\n    } else {\n      prod *= 0;\n    }\n  }\n  return prod * sum;\n\
    }\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n    let\
    \ sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n  \
    \      sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n \
    \   return sum * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n\
    \  }\n  let prod = 1;\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] === 0) {\n      continue;\n    }\n    prod *= Math.sign(arr[i]);\n\
    \    sum += Math.abs(arr[i]);\n  }\n  return prod * sum;\n}\n", "    if (arr.length\
    \ == 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n\
    \            sum += arr[i];\n            prod *= 1;\n        } else if (arr[i]\
    \ < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n        }\
    \ else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ === 0) {\n            continue;\n        }\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  \
    \  if (arr.length === 0) {\n        return undefined;\n    }\n    let prod = 1;\n\
    \    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            prod *= 1;\n            sum += arr[i];\n        } else if\
    \ (arr[i] < 0) {\n            prod *= -1;\n            sum += arr[i] * -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return prod *\
    \ sum;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n\
    \    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n  \
    \  }\n    return sum * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n\
    \  }\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] > 0) {\n      sum += arr[i];\n      prod *= 1;\n    } else\
    \ if (arr[i] < 0) {\n      sum += arr[i] * -1;\n      prod *= -1;\n    } else\
    \ {\n      prod *= 0;\n    }\n  }\n  return sum * prod;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n\
    \            sum += arr[i];\n            prod *= 1;\n        } else if (arr[i]\
    \ < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n        }\
    \ else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n\
    }\n", "  if (arr.length === 0) {\n    return undefined;\n  }\n  let sum = 0;\n\
    \  let prod = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0)\
    \ {\n      sum += arr[i];\n    } else if (arr[i] < 0) {\n      sum += -arr[i];\n\
    \      prod *= -1;\n    }\n  }\n  return sum * prod;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n\
    \            sum += arr[i];\n            prod *= 1;\n        } else if (arr[i]\
    \ < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n        }\
    \ else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n\
    }\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n    let\
    \ sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n  \
    \      if (arr[i] > 0) {\n            sum += arr[i];\n            prod *= 1;\n\
    \        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n    }\n\
    \    return sum * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n\
    \  }\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] < 0) {\n      prod *= -1;\n    } else if (arr[i] > 0) {\n\
    \      prod *= 1;\n    } else {\n      prod *= 0;\n    }\n    sum += Math.abs(arr[i]);\n\
    \  }\n  return sum * prod;\n}\n", "    if (arr.length == 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let sign = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \        } else if (arr[i] < 0) {\n            sum += -arr[i];\n            sign\
    \ *= -1;\n        } else {\n            sign = 0;\n        }\n    }\n    return\
    \ sum * sign;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n            prod\
    \ *= 1;\n        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n \
    \           prod *= -1;\n        } else {\n            prod *= 0;\n        }\n\
    \    }\n    return sum * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n\
    \  }\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] > 0) {\n      sum += arr[i];\n    } else if (arr[i] < 0) {\n\
    \      sum += Math.abs(arr[i]);\n      prod *= -1;\n    }\n  }\n  return sum *\
    \ prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n\
    \    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n  \
    \  }\n    return sum * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n\
    \  }\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] > 0) {\n      sum += arr[i];\n      prod *= 1;\n    } else\
    \ if (arr[i] < 0) {\n      sum += arr[i] * -1;\n      prod *= -1;\n    } else\
    \ {\n      prod *= 0;\n    }\n  }\n  return sum * prod;\n}\n", "  if (arr.length\
    \ === 0) {\n    return undefined;\n  }\n  let sum = 0;\n  let prod = 1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      sum += arr[i];\n\
    \    } else if (arr[i] < 0) {\n      sum += -arr[i];\n      prod *= -1;\n    }\n\
    \  }\n  return sum * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n\
    \  }\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    sum += Math.abs(arr[i]);\n    prod *= Math.sign(arr[i]);\n  }\n  return\
    \ sum * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n  }\n\
    \  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++) {\n \
    \   if (arr[i] > 0) {\n      sum += arr[i];\n      prod *= 1;\n    } else if (arr[i]\
    \ < 0) {\n      sum += arr[i] * -1;\n      prod *= -1;\n    } else {\n      prod\
    \ *= 0;\n    }\n  }\n  return sum * prod;\n}\n", "    if (arr.length === 0) {\n\
    \        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        if (arr[i] === 0) {\n          \
    \  continue;\n        }\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n            prod *= -1;\n        } else {\n            prod *=\
    \ 0;\n        }\n    }\n    return sum * prod;\n}\n", "    if (arr.length ===\
    \ 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  if\
    \ (arr.length === 0) {\n    return undefined;\n  }\n  let sum = 0;\n  let prod\
    \ = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n    \
    \  sum += arr[i];\n      prod *= 1;\n    } else if (arr[i] < 0) {\n      sum +=\
    \ arr[i] * -1;\n      prod *= -1;\n    } else {\n      prod *= 0;\n    }\n  }\n\
    \  return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n            prod\
    \ *= 1;\n        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n \
    \           prod *= -1;\n        } else {\n            prod *= 0;\n        }\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length == 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n            prod *= -1;\n        } else {\n            prod *=\
    \ 0;\n        }\n    }\n    return sum * prod;\n}\n", "    if (arr.length ===\
    \ 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < 0) {\n     \
    \       prod *= -1;\n        } else if (arr[i] === 0) {\n            prod = 0;\n\
    \        }\n        sum += Math.abs(arr[i]);\n    }\n    return sum * prod;\n\
    }\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n    let\
    \ sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n  \
    \      if (arr[i] > 0) {\n            sum += arr[i];\n            prod *= 1;\n\
    \        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n    }\n\
    \    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n            prod\
    \ *= 1;\n        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n \
    \           prod *= -1;\n        } else {\n            prod *= 0;\n        }\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let prod = 1;\n    let sum = 0;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            prod *= 1;\n\
    \            sum += arr[i];\n        } else if (arr[i] < 0) {\n            prod\
    \ *= -1;\n            sum += Math.abs(arr[i]);\n        } else {\n           \
    \ prod *= 0;\n        }\n    }\n    return prod * sum;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  \
    \  if (arr.length === 0) {\n        return undefined;\n    }\n    let prod = 1;\n\
    \    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            prod *= 1;\n            sum += arr[i];\n        } else if\
    \ (arr[i] < 0) {\n            prod *= -1;\n            sum += arr[i] * -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return prod *\
    \ sum;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n\
    \    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        if (arr[i] < 0) {\n            prod *= -1;\n        } else if (arr[i]\
    \ === 0) {\n            prod = 0;\n        }\n        sum += Math.abs(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n            prod *= -1;\n        } else {\n            prod *=\
    \ 0;\n        }\n    }\n    return sum * prod;\n}\n", "    if (arr.length ===\
    \ 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n     \
    \       sum += arr[i];\n            prod *= 1;\n        } else if (arr[i] < 0)\
    \ {\n            sum += arr[i] * -1;\n            prod *= -1;\n        } else\
    \ {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n", " \
    \   if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ === 0) {\n            continue;\n        }\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  \
    \  if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ === 0) {\n            continue;\n        }\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  \
    \  if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n  }\n  let\
    \ sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] > 0) {\n      sum += arr[i];\n      prod *= 1;\n    } else if (arr[i]\
    \ < 0) {\n      sum += arr[i] * -1;\n      prod *= -1;\n    } else {\n      prod\
    \ *= 0;\n    }\n  }\n  return sum * prod;\n}\n", "    if (arr.length === 0) {\n\
    \        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum\
    \ += arr[i];\n            prod *= 1;\n        } else if (arr[i] < 0) {\n     \
    \       sum += arr[i] * -1;\n            prod *= -1;\n        } else {\n     \
    \       prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  \
    \  if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if\
    \ (arr[i] > 0) {\n            sum += arr[i];\n            product *= 1;\n    \
    \    } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n            product\
    \ *= -1;\n        } else {\n            product *= 0;\n        }\n    }\n    return\
    \ sum * product;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n            prod\
    \ *= 1;\n        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n \
    \           prod *= -1;\n        } else {\n            prod *= 0;\n        }\n\
    \    }\n    return sum * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n\
    \  }\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] > 0) {\n      sum += arr[i];\n      prod *= 1;\n    } else\
    \ if (arr[i] < 0) {\n      sum += arr[i] * -1;\n      prod *= -1;\n    } else\
    \ {\n      prod *= 0;\n    }\n  }\n  return sum * prod;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === 0) {\n\
    \            continue;\n        }\n        sum += Math.abs(arr[i]);\n        prod\
    \ *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    return arr.reduce((acc, curr)\
    \ => acc * Math.sign(curr), 1) * arr.reduce((acc, curr) => acc + Math.abs(curr),\
    \ 0);\n}\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n\
    \    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        sum += Math.abs(arr[i]);\n        if (arr[i] !== 0) {\n         \
    \   prod *= Math.sign(arr[i]);\n        }\n    }\n    return sum * prod;\n}\n",
  "  if (arr.length === 0) {\n    return undefined;\n  }\n  let sum = 0;\n  let prod\
    \ = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n    \
    \  sum += arr[i];\n      prod *= 1;\n    } else if (arr[i] < 0) {\n      sum +=\
    \ arr[i] * -1;\n      prod *= -1;\n    } else {\n      prod *= 0;\n    }\n  }\n\
    \  return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n            prod\
    \ *= 1;\n        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n \
    \           prod *= -1;\n        } else {\n            prod *= 0;\n        }\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n            prod *= -1;\n        } else {\n            prod *=\
    \ 0;\n        }\n    }\n    return sum * prod;\n}\n", "    if (arr.length ===\
    \ 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  \
    \  if (arr.length == 0) return undefined;\n    let sum = 0;\n    let prod = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] == 0) continue;\n\
    \        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n\
    \    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n            prod\
    \ *= 1;\n        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n \
    \           prod *= -1;\n        } else {\n            prod *= 0;\n        }\n\
    \    }\n    return sum * prod;\n}\n", "  if (arr.length === 0) {\n    return undefined;\n\
    \  }\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] > 0) {\n      sum += arr[i];\n      prod *= 1;\n    } else\
    \ if (arr[i] < 0) {\n      sum += arr[i] * -1;\n      prod *= -1;\n    } else\
    \ {\n      prod *= 0;\n    }\n  }\n  return sum * prod;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n\
    \            sum += arr[i];\n            prod *= 1;\n        } else if (arr[i]\
    \ < 0) {\n            sum += Math.abs(arr[i]);\n            prod *= -1;\n    \
    \    } else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n\
    }\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n    let\
    \ sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n  \
    \      if (arr[i] > 0) {\n            sum += arr[i];\n            prod *= 1;\n\
    \        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n    }\n\
    \    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] < 0) {\n            prod *= -1;\n        } else if\
    \ (arr[i] > 0) {\n            prod *= 1;\n        } else {\n            prod *=\
    \ 0;\n        }\n        sum += Math.abs(arr[i]);\n    }\n    return sum * prod;\n\
    }\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n    let\
    \ prod = 1;\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n  \
    \      if (arr[i] > 0) {\n            prod *= 1;\n            sum += arr[i];\n\
    \        } else if (arr[i] < 0) {\n            prod *= -1;\n            sum +=\
    \ arr[i] * -1;\n        } else {\n            prod *= 0;\n        }\n    }\n \
    \   return prod * sum;\n}\n", "    if (arr.length == 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            sum += arr[i];\n\
    \            prod *= 1;\n        } else if (arr[i] < 0) {\n            sum +=\
    \ arr[i] * -1;\n            prod *= -1;\n        } else {\n            prod *=\
    \ 0;\n        }\n    }\n    return sum * prod;\n}\n", "    if (arr.length ===\
    \ 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n     \
    \       sum += arr[i];\n            prod *= 1;\n        } else if (arr[i] < 0)\
    \ {\n            sum += arr[i] * -1;\n            prod *= -1;\n        } else\
    \ {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n", " \
    \   if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n\
    }\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n    let\
    \ sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n  \
    \      if (arr[i] === 0) {\n            continue;\n        }\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  if\
    \ (arr.length === 0) {\n    return undefined;\n  }\n  let sum = 0;\n  let prod\
    \ = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n    \
    \  sum += arr[i];\n    } else if (arr[i] < 0) {\n      sum += Math.abs(arr[i]);\n\
    \      prod *= -1;\n    }\n  }\n  return sum * prod;\n}\n", "  if (arr.length\
    \ === 0) {\n    return undefined;\n  }\n  let sum = 0;\n  let prod = 1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    const el = arr[i];\n    if (el > 0)\
    \ {\n      sum += el;\n      prod *= 1;\n    } else if (el < 0) {\n      sum +=\
    \ Math.abs(el);\n      prod *= -1;\n    } else {\n      prod *= 0;\n    }\n  }\n\
    \  return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let product = 1;\n    let sum = 0;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] > 0) {\n            product *= 1;\n            sum\
    \ += arr[i];\n        } else if (arr[i] < 0) {\n            product *= -1;\n \
    \           sum += Math.abs(arr[i]);\n        } else {\n            product *=\
    \ 0;\n        }\n    }\n    return product * sum;\n}\n", "    if (arr.length ===\
    \ 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n\
    \        prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "  \
    \  if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n\
    }\n", "    if (arr.length === 0) {\n        return undefined;\n    }\n    let\
    \ sum = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n\
    \        if (arr[i] > 0) {\n            sum += arr[i];\n            product *=\
    \ 1;\n        } else if (arr[i] < 0) {\n            sum += arr[i] * -1;\n    \
    \        product *= -1;\n        } else {\n            product *= 0;\n       \
    \ }\n    }\n    return sum * product;\n}\n", "    if (arr.length === 0) {\n  \
    \      return undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n     \
    \   prod *= Math.sign(arr[i]);\n    }\n    return sum * prod;\n}\n", "    if (arr.length\
    \ === 0) {\n        return undefined;\n    }\n    let sum = 0;\n    let prod =\
    \ 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n\
    \            sum += arr[i];\n            prod *= 1;\n        } else if (arr[i]\
    \ < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n        }\
    \ else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n}\n",
  "    if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        sum +=\
    \ Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n    }\n    return sum\
    \ * prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n   \
    \ }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let prod = 1;\n    let sum = 0;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] === 0) {\n            continue;\n\
    \        }\n        prod *= Math.sign(arr[i]);\n        sum += Math.abs(arr[i]);\n\
    \    }\n    return prod * sum;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let prod = 1;\n    let sum = 0;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            prod *= 1;\n\
    \            sum += arr[i];\n        } else if (arr[i] < 0) {\n            prod\
    \ *= -1;\n            sum += arr[i] * -1;\n        } else {\n            prod\
    \ *= 0;\n        }\n    }\n    return prod * sum;\n}\n", "  if (arr.length ===\
    \ 0) {\n    return undefined;\n  }\n  let sum = 0;\n  let prod = 1;\n  for (let\
    \ i = 0; i < arr.length; i++) {\n    if (arr[i] !== 0) {\n      sum += Math.abs(arr[i]);\n\
    \      prod *= Math.sign(arr[i]);\n    }\n  }\n  return sum * prod;\n}\n", " \
    \   if (arr.length === 0) {\n        return undefined;\n    }\n    let sum = 0;\n\
    \    let prod = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            sum += arr[i];\n            prod *= 1;\n        } else if\
    \ (arr[i] < 0) {\n            sum += arr[i] * -1;\n            prod *= -1;\n \
    \       } else {\n            prod *= 0;\n        }\n    }\n    return sum * prod;\n\
    }\n", "  if (arr.length === 0) {\n    return undefined;\n  }\n  let sum = 0;\n\
    \  let prod = 1;\n  for (let i = 0; i < arr.length; i++) {\n    sum += Math.abs(arr[i]);\n\
    \    prod *= Math.sign(arr[i]);\n  }\n  return sum * prod;\n}\n", "  if (arr.length\
    \ === 0) {\n    return undefined;\n  }\n  let sum = 0;\n  let prod = 1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      sum += arr[i];\n\
    \    } else if (arr[i] < 0) {\n      sum += Math.abs(arr[i]);\n      prod *= -1;\n\
    \    }\n  }\n  return sum * prod;\n}\n", "  if (arr.length === 0) {\n    return\
    \ undefined;\n  }\n  let sum = 0;\n  let prod = 1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    sum += Math.abs(arr[i]);\n    prod *= Math.sign(arr[i]);\n  }\n\
    \  return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return undefined;\n\
    \    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n", "    if (arr.length === 0) {\n        return\
    \ undefined;\n    }\n    let sum = 0;\n    let prod = 1;\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        sum += Math.abs(arr[i]);\n        prod *= Math.sign(arr[i]);\n\
    \    }\n    return sum * prod;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

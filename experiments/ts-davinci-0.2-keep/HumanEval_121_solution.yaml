completions:
- '  return lst.filter((el, i) => i % 2 === 0 && el % 2 !== 0).reduce((a, b) => a
  + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((num, index) => index % 2 !== 0 && num % 2 !== 0).reduce((a,
  b) => a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 === 1) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((x, i) => i % 2 === 1 && x % 2 === 1).reduce((a, b) => a +
  b, 0);

  }

  '
- '  return lst.filter((num, i) => i % 2 === 0 && num % 2 !== 0).reduce((a, b) =>
  a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((x, i) => i % 2 === 1 && x % 2 === 1).reduce((a, b) => a +
  b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- '  return lst.filter((num, index) => index % 2 === 1 && num % 2 === 1).reduce((a,
  b) => a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- '  return lst.filter((x, i) => i % 2 === 1 && x % 2 === 1).reduce((a, b) => a +
  b, 0);

  }

  '
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ == 0 && lst[i] % 2 != 0) {\n            sum += lst[i];\n        }\n    }\n   \
  \ return sum;\n}\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- '  return lst.filter((num, i) => i % 2 === 1 && num % 2 === 1).reduce((a, b) =>
  a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((num, index) => index % 2 === 1 && num % 2 === 1).reduce((a,
  b) => a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (i % 2 === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n \
  \   }\n    return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((x, i) => i % 2 === 1 && x % 2 === 1).reduce((a, b) => a +
  b, 0);

  }

  '
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((_, i) => i % 2 !== 0).filter(n => n % 2 !== 0).reduce((a,
  b) => a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 == 0 &&\
  \ lst[i] % 2 != 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ == 0 && lst[i] % 2 != 0) {\n            sum += lst[i];\n        }\n    }\n   \
  \ return sum;\n}\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((num, i) => i % 2 === 1 && num % 2 === 1).reduce((a, b) =>
  a + b, 0);

  }


  export default solution;'
- '  return lst.filter((e, i) => i % 2 === 0 && e % 2 !== 0).reduce((a, b) => a +
  b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- '  return lst.filter((e, i) => e % 2 === 1 && i % 2 === 0).reduce((a, b) => a +
  b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- '  return lst.filter((e, i) => i % 2 === 0 && e % 2 !== 0).reduce((a, b) => a +
  b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- '  return lst.filter((num, index) => index % 2 === 1 && num % 2 === 1).reduce((a,
  b) => a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((num, index) => index % 2 === 1 && num % 2 === 1).reduce((acc,
  curr) => acc + curr, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 !== 0 &&\
  \ lst[i] % 2 === 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ == 0 && lst[i] % 2 != 0) {\n            sum += lst[i];\n        }\n    }\n   \
  \ return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- '  return lst.filter((x, i) => i % 2 === 1 && x % 2 === 1).reduce((a, b) => a +
  b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 !== 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((num, index) => index % 2 === 1 && num % 2 === 1).reduce((a,
  b) => a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '    return lst.filter((num, index) => index % 2 === 0 && num % 2 !== 0).reduce((acc,
  curr) => acc + curr, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((num, i) => i % 2 === 0 && num % 2 !== 0).reduce((a, b) =>
  a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((num, index) => index % 2 === 1 && num % 2 === 1).reduce((a,
  b) => a + b, 0);

  }


  export default solution;'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((x, i) => x % 2 === 1 && i % 2 === 0).reduce((a, b) => a +
  b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 !== 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((x, i) => i % 2 === 1 && x % 2 === 1).reduce((a, b) => a +
  b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- '  return lst.filter((num, i) => i % 2 === 1 && num % 2 === 1).reduce((a, b) =>
  a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- '  return lst.filter((e, i) => i % 2 === 0 && e % 2 !== 0).reduce((a, b) => a +
  b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- '  return lst.filter((v, i) => i % 2 === 1 && v % 2 === 1).reduce((a, b) => a +
  b, 0);

  }

  '
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((num, i) => i % 2 === 0 && num % 2 !== 0).reduce((a, b) =>
  a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 !== 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '    return lst.filter((x, i) => i % 2 === 1 && x % 2 === 1).reduce((a, b) => a
  + b, 0);

  }

  '
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- '  return lst.filter((_, i) => i % 2 === 1).reduce((a, b) => a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- '  return lst.filter((x, i) => i % 2 === 1 && x % 2 === 1).reduce((a, b) => a +
  b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- '  return lst.filter((x, i) => i % 2 === 1 && x % 2 === 1).reduce((a, b) => a +
  b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- '  return lst.filter((num, i) => i % 2 === 1 && num % 2 === 1).reduce((a, b) =>
  a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((_, i) => i % 2 === 1).reduce((a, b) => a + b, 0);

  }


  export default solution;'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((num, index) => index % 2 === 1 && num % 2 === 1).reduce((a,
  b) => a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- '  return lst.filter((v, i) => i % 2 === 0 && v % 2 === 1).reduce((a, b) => a +
  b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- '  return lst.filter((x, i) => i % 2 === 1 && x % 2 === 1).reduce((a, b) => a +
  b, 0);

  }

  '
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((num, index) => index % 2 === 1 && num % 2 === 1).reduce((a,
  b) => a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 !== 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- '  return lst.filter((v, i) => i % 2 === 1 && v % 2 === 1).reduce((a, b) => a +
  b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- '  return lst.filter((num, i) => i % 2 === 0 && num % 2 !== 0).reduce((a, b) =>
  a + b, 0);

  }

  '
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- '  return lst.filter((_, i) => i % 2 === 1).reduce((a, b) => a + b, 0);

  }

  '
- '  return lst.filter((x, i) => i % 2 === 1 && x % 2 === 1).reduce((a, b) => a +
  b, 0);

  }

  '
- '  return lst.filter((num, i) => i % 2 === 0 && num % 2 !== 0).reduce((a, b) =>
  a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '    return lst.filter((e, i) => i % 2 === 0 && e % 2 !== 0).reduce((a, b) => a
  + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- '  return lst.filter((x, i) => x % 2 !== 0 && i % 2 === 0).reduce((a, b) => a +
  b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- '    return lst.filter((x, i) => i % 2 === 1 && x % 2 === 1).reduce((a, b) => a
  + b, 0);

  }

  '
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((_, i) => i % 2 === 1).reduce((a, b) => a + b, 0);

  }

  '
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- '  return lst.filter((x, i) => x % 2 === 1 && i % 2 === 0).reduce((a, b) => a +
  b, 0);

  }

  '
- '  return lst.filter((_, i) => i % 2 === 1).reduce((a, b) => a + b, 0);

  }

  '
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 !== 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((_, i) => i % 2 === 1).reduce((a, b) => a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((x, i) => i % 2 === 1 && x % 2 === 1).reduce((a, b) => a +
  b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ !== 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((num, index) => index % 2 === 1 && num % 2 === 1).reduce((a,
  b) => a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- '  return lst.filter((v, i) => v % 2 === 1 && i % 2 === 0).reduce((a, b) => a +
  b, 0);

  }


  export default solution;'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- '  return lst.filter((x, i) => x % 2 === 1 && i % 2 === 0).reduce((a, b) => a +
  b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- '  return lst.filter((n, i) => i % 2 === 1 && n % 2 === 1).reduce((a, b) => a +
  b, 0);

  }

  '
- '  return lst.filter((num, i) => i % 2 === 1 && num % 2 === 1).reduce((a, b) =>
  a + b, 0);

  }

  '
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((v, i) => v % 2 === 1 && i % 2 === 0).reduce((a, b) => a +
  b, 0);

  }


  export default solution;'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((x, i) => i % 2 === 1 && x % 2 === 1).reduce((a, b) => a +
  b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- '  return lst.filter((num, index) => index % 2 === 1 && num % 2 === 1).reduce((a,
  b) => a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((num, index) => index % 2 !== 0 && num % 2 !== 0).reduce((a,
  b) => a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- '  return lst.filter((num, i) => num % 2 === 1 && i % 2 === 0).reduce((a, b) =>
  a + b, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (i % 2\
  \ === 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n \
  \   return sum;\n}\n\nconsole.log(solution([5, 8, 7, 1]));\nconsole.log(solution([3,\
  \ 3, 3, 3, 3]));\nconsole.log(solution([30, 13, 24, 321]));"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 !== 0 &&\
  \ lst[i] % 2 === 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
- '  return lst.filter((x, i) => i % 2 === 1 && x % 2 === 1).reduce((a, b) => a +
  b, 0);

  }

  '
- '  return lst.filter((num, index) => index % 2 === 1 && num % 2 === 1).reduce((acc,
  curr) => acc + curr, 0);

  }


  console.log(solution([5, 8, 7, 1]));

  console.log(solution([3, 3, 3, 3, 3]));

  console.log(solution([30, 13, 24, 321]));'
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0 &&\
  \ lst[i] % 2 !== 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nconsole.log(solution([5,\
  \ 8, 7, 1]));\nconsole.log(solution([3, 3, 3, 3, 3]));\nconsole.log(solution([30,\
  \ 13, 24, 321]));"
language: ts
name: HumanEval_121_solution
prompt: '//Given a non-empty list of integers, return the sum of all of the odd elements
  that are in even positions.

  // Examples

  // solution([5, 8, 7, 1]) ==> 12

  // solution([3, 3, 3, 3, 3]) ==> 9

  // solution([30, 13, 24, 321]) ==>0

  function solution(lst: number[]): number {

  '
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = solution;\n  assert.deepEqual(candidate([5, 8, 7,\
  \ 1]),12);\n  assert.deepEqual(candidate([3, 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30,\
  \ 13, 24, 321]),0);\n  assert.deepEqual(candidate([5, 9]),5);\n  assert.deepEqual(candidate([2,\
  \ 4, 8]),0);\n  assert.deepEqual(candidate([30, 13, 23, 32]),23);\n  assert.deepEqual(candidate([3,\
  \ 13, 2, 9]),3);\n}\n\ntest();"

name: HumanEval_75_is_multiply_prime
language: humaneval_to_typescript.py
prompt: "//Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n// and false otherwise.\n// Knowing that (a) is less then\
  \ 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nfunction\
  \ is_multiply_prime(a: number): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = is_multiply_prime;\n  assert.deepEqual(candidate(5),false);\n\
  \  assert.deepEqual(candidate(30),true);\n  assert.deepEqual(candidate(8),true);\n\
  \  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(125),true);\n\
  \  assert.deepEqual(candidate(105),true);\n  assert.deepEqual(candidate(126),false);\n\
  \  assert.deepEqual(candidate(729),false);\n  assert.deepEqual(candidate(891),false);\n\
  \  assert.deepEqual(candidate(1001),true);\n}\n\ntest();"
completions: ["    let primes: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let count: number\
    \ = 0;\n    for (let i: number = 0; i < primes.length; i++) {\n        if (a %\
    \ primes[i] == 0) {\n            count++;\n        }\n    }\n    if (count ==\
    \ 3) {\n        return true;\n    }\n    else {\n        return false;\n    }\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    for (let i = 2; i < a; i++) {\n\
    \        if (a % i === 0) {\n            for (let j = 2; j < a; j++) {\n     \
    \           if (a % j === 0) {\n                    for (let k = 2; k < a; k++)\
    \ {\n                        if (a % k === 0) {\n                            return\
    \ true;\n                        }\n                    }\n                }\n\
    \            }\n        }\n    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n",
  "  let primeNumbers: number[] = [];\n  for (let i = 2; i < a; i++) {\n    if (is_prime(i))\
    \ {\n      primeNumbers.push(i);\n    }\n  }\n  for (let i = 0; i < primeNumbers.length;\
    \ i++) {\n    for (let j = 0; j < primeNumbers.length; j++) {\n      for (let\
    \ k = 0; k < primeNumbers.length; k++) {\n        if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] === a) {\n          return true;\n        }\n      }\n   \
    \ }\n  }\n  return false;\n}\n\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ result: boolean = false;\n    let primes: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primes.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primes.length; i++) {\n   \
    \     for (let j: number = 0; j < primes.length; j++) {\n            for (let\
    \ k: number = 0; k < primes.length; k++) {\n                if (primes[i] * primes[j]\
    \ * primes[k] == a) {\n                    result = true;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    let result: boolean\
    \ = false;\n    let prime_numbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let prime_numbers_length:\
    \ number = prime_numbers.length;\n    let prime_numbers_counter: number = 0;\n\
    \    let prime_numbers_multiplication: number = 1;\n    while (prime_numbers_counter\
    \ < prime_numbers_length) {\n        if (a % prime_numbers[prime_numbers_counter]\
    \ == 0) {\n            prime_numbers_multiplication *= prime_numbers[prime_numbers_counter];\n\
    \            if (prime_numbers_multiplication == a) {\n                result\
    \ = true;\n                break;\n            }\n        }\n        prime_numbers_counter++;\n\
    \    }\n    return result;\n}\n\nconsole.log(is_multiply_prime(30));\nconsole.log(is_multiply_prime(31));\n\
    console.log(is_multiply_prime(32));\nconsole.log(is_multiply_prime(33));\nconsole.log(is_multiply_prime(34));\n\
    console.log(is_multiply_prime(35));\nconsole.log(is_multiply_prime(36));\nconsole.log(is_multiply_prime(37));\n\
    console.log(is_multiply_prime(38));\nconsole.log(is_multiply_prime(39));\nconsole.log(is_multiply_prime(40));\n\
    console.log(is_multiply_prime(41));\nconsole.log(is_multiply_prime(42));\nconsole.log(is_multiply_prime(43));\n\
    console.log(is_multiply_prime(44));\nconsole.log(is_multiply_prime(45));\nconsole.log(is_multiply_prime(46));\n\
    console.log(is_multiply_prime(47));\nconsole.log(is_mult", "    let prime_numbers\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    let prime_numbers_length = prime_numbers.length;\n\
    \    let is_multiply_prime = false;\n    for (let i = 0; i < prime_numbers_length;\
    \ i++) {\n        for (let j = 0; j < prime_numbers_length; j++) {\n         \
    \   for (let k = 0; k < prime_numbers_length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] == a) {\n                    is_multiply_prime\
    \ = true;\n                }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }\n", "    let isPrime: boolean = true;\n    let isMultiplyPrime: boolean = false;\n\
    \    let counter: number = 0;\n    let primeNumbers: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n\
    \            if (i % j == 0) {\n                isPrime = false;\n           \
    \ }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n  \
    \      }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] == a) {\n    \
    \                counter++;\n                }\n            }\n        }\n   \
    \ }\n    if (counter > 0) {\n        isMultiplyPrime = true;\n    }\n    return\
    \ isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] == a) {\n             \
    \       result = true;\n                }\n            }\n        }\n    }\n \
    \   return result;\n}\n", "    let result: boolean = false;\n    let primeNumbers:\
    \ number[] = [];\n    let primeNumbersMultiplied: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                primeNumbersMultiplied.push(primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k]);\n            }\n        }\n    }\n   \
    \ for (let i: number = 0; i < primeNumbersMultiplied.length; i++) {\n        if\
    \ (primeNumbersMultiplied[i] === a) {\n            result = true;\n        }\n\
    \    }\n    return result;\n}\n\nconsole.log(is_multiply_prime(30));\n", "   \
    \ let primeNumbers: number[] = [];\n    let isPrime: boolean = true;\n    for\
    \ (let i = 2; i < a; i++) {\n        for (let j = 2; j < i; j++) {\n         \
    \   if (i % j == 0) {\n                isPrime = false;\n                break;\n\
    \            }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    for (let i = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j = 0; j < primeNumbers.length; j++) {\n          \
    \  for (let k = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] == a) {\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primes: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primes.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primes.length; i++) {\n   \
    \     for (let j: number = 0; j < primes.length; j++) {\n            for (let\
    \ k: number = 0; k < primes.length; k++) {\n                if (primes[i] * primes[j]\
    \ * primes[k] == a) {\n                    result = true;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    let result: boolean\
    \ = false;\n    let primeNumbers: number[] = [];\n    for (let i: number = 2;\
    \ i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] == a) {\n             \
    \       result = true;\n                }\n            }\n        }\n    }\n \
    \   return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime:\
    \ boolean = true;\n    for (let i: number = 2; i < a; i++) {\n        if (a %\
    \ i == 0) {\n            isPrime = false;\n        }\n    }\n    return isPrime;\n\
    }\n", "  let result = false;\n  let primeNumbers = [];\n  for (let i = 2; i <\
    \ a; i++) {\n    if (isPrime(i)) {\n      primeNumbers.push(i);\n    }\n  }\n\
    \  for (let i = 0; i < primeNumbers.length; i++) {\n    for (let j = 0; j < primeNumbers.length;\
    \ j++) {\n      for (let k = 0; k < primeNumbers.length; k++) {\n        if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n          result = true;\n   \
    \     }\n      }\n    }\n  }\n  return result;\n}\n\nconsole.log(is_multiply_prime(30));\n",
  "    let primes: number[] = [];\n    for (let i = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            primes.push(i);\n        }\n    }\n    for (let i = 0; i < primes.length;\
    \ i++) {\n        for (let j = 0; j < primes.length; j++) {\n            for (let\
    \ k = 0; k < primes.length; k++) {\n                if (primes[i] * primes[j]\
    \ * primes[k] == a) {\n                    return true;\n                }\n \
    \           }\n        }\n    }\n    return false;\n}\n", "    let result: boolean\
    \ = false;\n    let primeNumbers: number[] = [];\n    for (let i: number = 2;\
    \ i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] == a) {\n             \
    \       result = true;\n                }\n            }\n        }\n    }\n \
    \   return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n \
    \   let counter: number = 0;\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        if (a % primeNumbers[i] == 0) {\n            counter++;\n  \
    \      }\n    }\n    if (counter == 3) {\n        result = true;\n    }\n    return\
    \ result;\n}\nconsole.log(is_multiply_prime(30));\n", "  let isPrime = true;\n\
    \  for (let i = 2; i < a; i++) {\n    if (a % i === 0) {\n      isPrime = false;\n\
    \    }\n  }\n  return isPrime;\n}\n", "    let isPrime = true;\n    for (let i\
    \ = 2; i < a; i++) {\n        if (a % i === 0) {\n            isPrime = false;\n\
    \            break;\n        }\n    }\n    return isPrime;\n}\n", "    let primeNumbers:\
    \ number[] = [];\n    for (let i = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i = 0;\
    \ i < primeNumbers.length; i++) {\n        for (let j = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k = 0; k < primeNumbers.length; k++) {\n      \
    \          if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] == a) {\n \
    \                   return true;\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_76_is_simple_power
language: humaneval_to_typescript.py
prompt: "//Your task is to write a function that returns true if a number x is a simple\n\
  // power of n and false in other cases.\n// x is a simple power of n if n**int=x\n\
  // For example:\n// is_simple_power(1, 4) => true\n// is_simple_power(2, 2) => true\n\
  // is_simple_power(8, 2) => true\n// is_simple_power(3, 2) => false\n// is_simple_power(3,\
  \ 1) => false\n// is_simple_power(5, 3) => false\nfunction is_simple_power(x: number,\
  \ n: number): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = is_simple_power;\n  assert.deepEqual(candidate(16,\
  \ 2),true);\n  assert.deepEqual(candidate(143214, 16),false);\n  assert.deepEqual(candidate(4,\
  \ 2),true);\n  assert.deepEqual(candidate(9, 3),true);\n  assert.deepEqual(candidate(16,\
  \ 4),true);\n  assert.deepEqual(candidate(24, 2),false);\n  assert.deepEqual(candidate(128,\
  \ 4),false);\n  assert.deepEqual(candidate(12, 6),false);\n  assert.deepEqual(candidate(1,\
  \ 1),true);\n  assert.deepEqual(candidate(1, 12),true);\n}\n\ntest();"
completions: ["  let result = false;\n  for (let i = 0; i < x; i++) {\n    if (Math.pow(n,\
    \ i) === x) {\n      result = true;\n    }\n  }\n  return result;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));", "  let power = 1;\n  while (power < x) {\n    power *= n;\n  }\n  return\
    \ power === x;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));", " \
    \   return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));", "    let result = false;\n    let power = 1;\n    while (power < x) {\n\
    \        power *= n;\n    }\n    if (power === x) {\n        result = true;\n\
    \    }\n    return result;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\n", " \
    \ let i = 1;\n  while (Math.pow(n, i) <= x) {\n    if (Math.pow(n, i) === x) {\n\
    \      return true;\n    }\n    i++;\n  }\n  return false;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));", "  let result = false;\n  let i = 0;\n  while (Math.pow(n, i) <= x) {\n\
    \    if (Math.pow(n, i) === x) {\n      result = true;\n    }\n    i++;\n  }\n\
    \  return result;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));", " \
    \   let result = Math.log(x) / Math.log(n);\n    return result % 1 === 0;\n}\n\
    \nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8,\
    \ 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\n\
    console.log(is_simple_power(5, 3));", "  return Math.log(x) / Math.log(n) % 1\
    \ === 0;\n}\n", "    let result = false;\n    let i = 0;\n    while (Math.pow(n,\
    \ i) <= x) {\n        if (Math.pow(n, i) === x) {\n            result = true;\n\
    \        }\n        i++;\n    }\n    return result;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));", "    let result = Math.log(x) / Math.log(n);\n    if (result % 1 ===\
    \ 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n\
    console.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8,\
    \ 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\n\
    console.log(is_simple_power(5, 3));", "  let result = Math.log(x) / Math.log(n);\n\
    \  return result % 1 === 0;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));", " \
    \ let result = false;\n  let i = 1;\n  while (n ** i <= x) {\n    if (n ** i ===\
    \ x) {\n      result = true;\n    }\n    i++;\n  }\n  return result;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));", "  return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));", "    let result = false;\n    for (let i = 0; i < x; i++) {\n       \
    \ if (Math.pow(n, i) === x) {\n            result = true;\n        }\n    }\n\
    \    return result;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));", " \
    \ let result = Math.log(x) / Math.log(n);\n  return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));", "    return Math.log(x) / Math.log(n)\
    \ % 1 === 0;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));\n", " \
    \   let i = 1;\n    while (Math.pow(n, i) <= x) {\n        if (Math.pow(n, i)\
    \ === x) {\n            return true;\n        }\n        i++;\n    }\n    return\
    \ false;\n}\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2,\
    \ 2));\nconsole.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\n\
    console.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5, 3));", " \
    \ return Math.log(x) / Math.log(n) % 1 === 0;\n}\n\nconsole.log(is_simple_power(1,\
    \ 4));\nconsole.log(is_simple_power(2, 2));\nconsole.log(is_simple_power(8, 2));\n\
    console.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3, 1));\nconsole.log(is_simple_power(5,\
    \ 3));", "    let result = Math.log(x) / Math.log(n);\n    return Number.isInteger(result);\n\
    }\n\nconsole.log(is_simple_power(1, 4));\nconsole.log(is_simple_power(2, 2));\n\
    console.log(is_simple_power(8, 2));\nconsole.log(is_simple_power(3, 2));\nconsole.log(is_simple_power(3,\
    \ 1));\nconsole.log(is_simple_power(5, 3));", "  let power = 1;\n  while (power\
    \ < x) {\n    power *= n;\n  }\n  return power === x;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

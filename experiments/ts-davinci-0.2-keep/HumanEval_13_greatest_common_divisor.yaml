completions:
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        let tmp = a;\n        a = b;\n        b = tmp;\n    }\n\
  \    if (a % b === 0) {\n        return b;\n    } else {\n        return greatest_common_divisor(b,\
  \ a % b);\n    }\n}\n"
- "  if (a === 0) {\n    return b;\n  }\n  if (b === 0) {\n    return a;\n  }\n  if\
  \ (a === b) {\n    return a;\n  }\n  if (a > b) {\n    return greatest_common_divisor(a\
  \ - b, b);\n  }\n  return greatest_common_divisor(a, b - a);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        let tmp = a;\n        a = b;\n        b = tmp;\n    }\n\
  \    let r = a % b;\n    while (r !== 0) {\n        a = b;\n        b = r;\n   \
  \     r = a % b;\n    }\n    return b;\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (a % b === 0) {\n        return b;\n    }\n    return greatest_common_divisor(b,\
  \ a % b);\n}\n"
- "  if (a < b) {\n    return greatest_common_divisor(b, a);\n  }\n  if (b === 0)\
  \ {\n    return a;\n  }\n  return greatest_common_divisor(b, a % b);\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    while (b !== 0) {\n        let temp = a % b;\n        a = b;\n       \
  \ b = temp;\n    }\n    return a;\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    while (b !== 0) {\n        let t = b;\n        b = a % b;\n        a = t;\n\
  \    }\n    return a;\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < 0) {\n        a = -a;\n    }\n    if (b < 0) {\n        b = -b;\n \
  \   }\n    while (a !== b) {\n        if (a > b) {\n            a = a - b;\n   \
  \     } else {\n            b = b - a;\n        }\n    }\n    return a;\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a === 0 || b === 0) {\n        return 0;\n    }\n    if (a === b) {\n \
  \       return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
  \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    } else if\
  \ (b === 0) {\n        return a;\n    } else {\n        return greatest_common_divisor(b,\
  \ a % b);\n    }\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    while (b !== 0) {\n        let temp = a % b;\n        a = b;\n       \
  \ b = temp;\n    }\n    return a;\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    if (a % b === 0) {\n        return b;\n    } else {\n        return greatest_common_divisor(b,\
  \ a % b);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    while (b !== 0) {\n        let temp = a % b;\n        a = b;\n       \
  \ b = temp;\n    }\n    return a;\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    if (a % b === 0) {\n        return b;\n    } else {\n        return greatest_common_divisor(b,\
  \ a % b);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "  if (a === 0) {\n    return b;\n  }\n  if (b === 0) {\n    return a;\n  }\n  if\
  \ (a === b) {\n    return a;\n  }\n  if (a > b) {\n    return greatest_common_divisor(a\
  \ - b, b);\n  }\n  return greatest_common_divisor(a, b - a);\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    if (a % b === 0) {\n        return b;\n    } else {\n        return greatest_common_divisor(b,\
  \ a % b);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "  if (a === 0) {\n    return b;\n  }\n  if (b === 0) {\n    return a;\n  }\n  if\
  \ (a > b) {\n    return greatest_common_divisor(a % b, b);\n  } else {\n    return\
  \ greatest_common_divisor(a, b % a);\n  }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (a % b === 0) {\n        return b;\n    }\n    return greatest_common_divisor(b,\
  \ a % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    if (a % b === 0) {\n        return b;\n    } else {\n        return greatest_common_divisor(b,\
  \ a % b);\n    }\n}\n"
- "  if (a < b) {\n    return greatest_common_divisor(b, a);\n  }\n  if (b === 0)\
  \ {\n    return a;\n  }\n  return greatest_common_divisor(b, a % b);\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    while (b !== 0) {\n        let temp = a % b;\n        a = b;\n       \
  \ b = temp;\n    }\n    return a;\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "  if (a === 0) {\n    return b;\n  }\n  if (b === 0) {\n    return a;\n  }\n  if\
  \ (a === b) {\n    return a;\n  }\n  if (a > b) {\n    return greatest_common_divisor(a\
  \ - b, b);\n  }\n  return greatest_common_divisor(a, b - a);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0 || b === 0) {\n        return 0;\n    }\n    if (a === b) {\n \
  \       return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
  \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    if (a % b === 0) {\n        return b;\n    } else {\n        return greatest_common_divisor(b,\
  \ a % b);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        [a, b] = [b, a];\n    }\n    while (b > 0) {\n      \
  \  [a, b] = [b, a % b];\n    }\n    return a;\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a % b === 0) {\n        return b;\n    } else {\n        return greatest_common_divisor(b,\
  \ a % b);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    if (a % b == 0) {\n        return b;\n    } else {\n        return greatest_common_divisor(b,\
  \ a % b);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    while (b !== 0) {\n        let temp = a % b;\n        a = b;\n       \
  \ b = temp;\n    }\n    return a;\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        let tmp = a;\n        a = b;\n        b = tmp;\n    }\n\
  \    while (b != 0) {\n        let tmp = a % b;\n        a = b;\n        b = tmp;\n\
  \    }\n    return a;\n}\n"
- "    if (a === 0) {\n        return b;\n    } else if (b === 0) {\n        return\
  \ a;\n    } else {\n        return greatest_common_divisor(b, a % b);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    while (b !== 0) {\n        let temp = a % b;\n        a = b;\n       \
  \ b = temp;\n    }\n    return a;\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    if (a % b === 0) {\n        return b;\n    } else {\n        return greatest_common_divisor(b,\
  \ a % b);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        let tmp = a;\n        a = b;\n        b = tmp;\n    }\n\
  \    if (a % b == 0) {\n        return b;\n    } else {\n        return greatest_common_divisor(b,\
  \ a % b);\n    }\n}\n"
- "    if (a < b) {\n        let tmp = a;\n        a = b;\n        b = tmp;\n    }\n\
  \    while (b !== 0) {\n        let tmp = a % b;\n        a = b;\n        b = tmp;\n\
  \    }\n    return a;\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        let tmp = a;\n        a = b;\n        b = tmp;\n    }\n\
  \    while (b !== 0) {\n        let tmp = a % b;\n        a = b;\n        b = tmp;\n\
  \    }\n    return a;\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    while (b !== 0) {\n        let temp = a % b;\n        a = b;\n       \
  \ b = temp;\n    }\n    return a;\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (a % b === 0) {\n        return b;\n    }\n    return greatest_common_divisor(b,\
  \ a % b);\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    let r = a % b;\n    while (r !== 0) {\n        a = b;\n        b = r;\n\
  \        r = a % b;\n    }\n    return b;\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    while (b !== 0) {\n        let temp = a % b;\n        a = b;\n       \
  \ b = temp;\n    }\n    return a;\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "  if (a < b) {\n    return greatest_common_divisor(b, a);\n  }\n  if (b === 0)\
  \ {\n    return a;\n  }\n  return greatest_common_divisor(b, a % b);\n}\n"
- "    if (a === 0 || b === 0) {\n        return 0;\n    }\n    if (a === b) {\n \
  \       return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
  \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "  if (a === 0) {\n    return b;\n  }\n  if (b === 0) {\n    return a;\n  }\n  if\
  \ (a > b) {\n    return greatest_common_divisor(a % b, b);\n  } else {\n    return\
  \ greatest_common_divisor(a, b % a);\n  }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    while (b !== 0) {\n        let temp = a % b;\n        a = b;\n       \
  \ b = temp;\n    }\n    return a;\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    if (a % b === 0) {\n        return b;\n    } else {\n        return greatest_common_divisor(b,\
  \ a % b);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        let tmp = a;\n        a = b;\n        b = tmp;\n    }\n\
  \    let r = a % b;\n    while (r !== 0) {\n        a = b;\n        b = r;\n   \
  \     r = a % b;\n    }\n    return b;\n}\n"
- "  if (a < b) {\n    return greatest_common_divisor(b, a);\n  }\n  if (b === 0)\
  \ {\n    return a;\n  }\n  return greatest_common_divisor(b, a % b);\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    while (b !== 0) {\n        let temp = a % b;\n        a = b;\n       \
  \ b = temp;\n    }\n    return a;\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    while (b !== 0) {\n        let temp = a % b;\n        a = b;\n       \
  \ b = temp;\n    }\n    return a;\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "  if (a === 0) {\n    return b;\n  }\n  if (b === 0) {\n    return a;\n  }\n  if\
  \ (a > b) {\n    return greatest_common_divisor(a % b, b);\n  } else {\n    return\
  \ greatest_common_divisor(a, b % a);\n  }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "  if (a === 0) {\n    return b;\n  }\n  if (b === 0) {\n    return a;\n  }\n  if\
  \ (a > b) {\n    return greatest_common_divisor(a % b, b);\n  } else {\n    return\
  \ greatest_common_divisor(a, b % a);\n  }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "  if (a < b) {\n    return greatest_common_divisor(b, a);\n  }\n  if (b === 0)\
  \ {\n    return a;\n  }\n  return greatest_common_divisor(b, a % b);\n}\n"
- "    let divisor = 2;\n    let greatestDivisor = 1;\n\n    if (a < 2 || b < 2) {\n\
  \        return 1;\n    }\n\n    while (a >= divisor && b >= divisor) {\n      \
  \  if (a % divisor === 0 && b % divisor === 0) {\n            greatestDivisor =\
  \ divisor;\n        }\n        divisor++;\n    }\n    return greatestDivisor;\n\
  }\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        let tmp = a;\n        a = b;\n        b = tmp;\n    }\n\
  \    if (a % b == 0) {\n        return b;\n    } else {\n        return greatest_common_divisor(b,\
  \ a % b);\n    }\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    if (a % b === 0) {\n        return b;\n    } else {\n        return greatest_common_divisor(b,\
  \ a % b);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a > b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (a === 0) {\n        return b;\n    }\n    return greatest_common_divisor(b %\
  \ a, a);\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    while (b !== 0) {\n        let temp = a % b;\n        a = b;\n       \
  \ b = temp;\n    }\n    return a;\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    if (a % b === 0) {\n        return b;\n    } else {\n        return greatest_common_divisor(b,\
  \ a % b);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a == 0) {\n        return b;\n    }\n    if (b == 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "  if (a === 0) {\n    return b;\n  }\n  if (b === 0) {\n    return a;\n  }\n  if\
  \ (a > b) {\n    return greatest_common_divisor(a % b, b);\n  } else {\n    return\
  \ greatest_common_divisor(a, b % a);\n  }\n}\n"
- "    if (a < b) {\n        let tmp = a;\n        a = b;\n        b = tmp;\n    }\n\
  \    while (b > 0) {\n        let tmp = a % b;\n        a = b;\n        b = tmp;\n\
  \    }\n    return a;\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n  \
  \      return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
  \ b - a);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (a % b === 0) {\n        return b;\n    }\n    return greatest_common_divisor(b,\
  \ a % b);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    if (a % b === 0) {\n        return b;\n    } else {\n        return greatest_common_divisor(b,\
  \ a % b);\n    }\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    while (b !== 0) {\n        let r = a % b;\n        a = b;\n        b =\
  \ r;\n    }\n    return a;\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    if (a % b === 0) {\n        return b;\n    } else {\n        return greatest_common_divisor(b,\
  \ a % b);\n    }\n}\n"
- "    if (a < b) {\n        let temp = a;\n        a = b;\n        b = temp;\n  \
  \  }\n    while (b !== 0) {\n        let temp = a % b;\n        a = b;\n       \
  \ b = temp;\n    }\n    return a;\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "  if (a === 0) {\n    return b;\n  }\n  if (b === 0) {\n    return a;\n  }\n  if\
  \ (a > b) {\n    return greatest_common_divisor(a % b, b);\n  } else {\n    return\
  \ greatest_common_divisor(a, b % a);\n  }\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
- "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
  \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
  \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n"
- "    if (a === 0 || b === 0) {\n        return 0;\n    }\n\n    if (a === b) {\n\
  \        return a;\n    }\n\n    if (a > b) {\n        return greatest_common_divisor(a\
  \ - b, b);\n    }\n\n    return greatest_common_divisor(a, b - a);\n}\n"
- "    if (a < b) {\n        return greatest_common_divisor(b, a);\n    }\n    if\
  \ (b === 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a\
  \ % b);\n}\n"
language: ts
name: HumanEval_13_greatest_common_divisor
prompt: '//Return a greatest common divisor of two integers a and b

  // >>> greatest_common_divisor(3, 5)

  // 1

  // >>> greatest_common_divisor(25, 15)

  // 5

  function greatest_common_divisor(a: number, b: number): number {

  '
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
  \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
  \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"

completions:
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ > 0 && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += Math.pow(lst[i], 2);\n        }\n\
  \    }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n    \
  \    }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        if (lst[i] % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
  \        }\n    }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        if (lst[i] % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
  \        }\n    }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n    \
  \    }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
  \ sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
  \        }\n    }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
  \        }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] % 2 ===\
  \ 1 && lst[i] > 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n\
  }\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] % 2 ===\
  \ 1 && lst[i] > 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n\
  }\n"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
  \        }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        if (lst[i] % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
  \        }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        if (lst[i] % 2 == 1 && lst[i] > 0) {\n            sum += Math.pow(lst[i],\
  \ 2);\n        }\n    }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] % 2 !==\
  \ 0 && lst[i] > 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n\
  }\n"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
  \        }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    return lst.reduce((acc, curr) => {\n        if (curr % 2 === 1 && curr > 0)\
  \ {\n            return acc + Math.pow(curr, 2);\n        }\n        return acc;\n\
  \    }, 0);\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- '    return 0;

  }

  '
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ > 0 && lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
  \        }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- '    return 0;

  }

  '
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        if (lst[i] % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
  \        }\n    }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
  \        }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n \
  \   return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += Math.pow(lst[i], 2);\n        }\n\
  \    }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n    \
  \    }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "  return lst.reduce((acc, curr) => {\n    if (curr % 2 !== 0 && curr > 0) {\n \
  \     acc += curr ** 2;\n    }\n    return acc;\n  }, 0);\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
  \ sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
  \ sum;\n}\n"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
  \        }\n    }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- '    return 0;

  }

  '
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        if (lst[i] % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
  \        }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
  \ sum;\n}\n"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
  \        }\n    }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
  \ sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- '    return 0;

  }

  '
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
  \        }\n    }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    return lst.reduce((acc, cur) => {\n        if (cur % 2 == 1 && cur >= 0) {\n\
  \            return acc + Math.pow(cur, 2);\n        }\n        return acc;\n  \
  \  }, 0);\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
  \        }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] % 2 ==\
  \ 1 && lst[i] > 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n\
  }\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n\
  \        if (lst[i] % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
  \        }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if\
  \ (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n     \
  \   }\n    }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
  \  }\n    return sum;\n}\n"
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
  \ sum;\n}\n"
- '    return lst.filter(x => x % 2 == 1 && x > 0).map(x => x * x).reduce((x, y) =>
  x + y, 0);

  }

  '
- "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
  \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n \
  \   }\n    return sum;\n}\n"
language: ts
name: HumanEval_151_double_the_difference
prompt: "//Given a list of numbers, return the sum of squares of the numbers\n// in\
  \ the list that are odd. Ignore numbers that are negative or not integers.\n// double_the_difference([1,\
  \ 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n// double_the_difference([-1, -2, 0]) == 0\n\
  // double_the_difference([9, -2]) == 81\n// double_the_difference([0]) == 0  \n\
  // If the input list is empty, return 0.\nfunction double_the_difference(lst: number[]):\
  \ number {\n"
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
  \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
  \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
  \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
  \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"

language: ts
name: HumanEval_51_remove_vowels
results:
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i]\
    \ != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I'\
    \ && text[i] != 'O' && text[i] != 'U') {\n            result += text[i];\n   \
    \     }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'];\n    let result = '';\n    for (let i = 0; i < text.length; i++)\
    \ {\n        if (vowels.indexOf(text[i]) === -1) {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i]\
    \ != 'o' && text[i] != 'u') {\n            result += text[i];\n        }\n   \
    \ }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpc0avnzhj.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpc0avnzhj.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i: number = 0;\
    \ i < text.length; i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i]\
    \ !== 'i' && text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpxnkjwib9.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxnkjwib9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpquowoayb.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpquowoayb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/ig, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpquowoayb.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpquowoayb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i]\
    \ != 'o' && text[i] != 'u') {\n            result += text[i];\n        }\n   \
    \ }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpc0avnzhj.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpc0avnzhj.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpquowoayb.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpquowoayb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 2
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (!is_vowel(text[i])) {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxiqbwoo3.ts(15,14): error TS2304: Cannot find name
    ''is_vowel''.

    '
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i]\
    \ != 'o' && text[i] != 'u') {\n            result += text[i];\n        }\n   \
    \ }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpc0avnzhj.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpc0avnzhj.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let vowels = 'aeiouAEIOU';\n    let new_text = '';\n\
    \    for (let i = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ === -1) {\n            new_text += text[i];\n        }\n    }\n    return new_text;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  let result = '';\n  for (let i = 0; i < text.length; i++)\
    \ {\n    if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' && text[i]\
    \ !== 'o' && text[i] !== 'u') {\n      result += text[i];\n    }\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpyjwj5xxr.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpyjwj5xxr.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpquowoayb.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpquowoayb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i]\
    \ != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I'\
    \ && text[i] != 'O' && text[i] != 'U') {\n            result += text[i];\n   \
    \     }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmp95gipj4c.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp95gipj4c.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i: number = 0;\
    \ i < text.length; i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i]\
    \ !== 'i' && text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpxnkjwib9.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxnkjwib9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 2
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    const vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    for (let i = 0; i < text.length; i++) {\n        if (!vowels.includes(text[i].toLowerCase()))\
    \ {\n            result += text[i];\n        }\n    }\n    return result;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9qsz92yb.ts(16,21): error TS2339: Property ''includes''
    does not exist on type ''string[]''.

    '
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'];\n    let result = '';\n    for (let i = 0; i < text.length; i++)\
    \ {\n        if (vowels.indexOf(text[i]) === -1) {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmp95gipj4c.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp95gipj4c.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmp95gipj4c.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp95gipj4c.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    for (let i = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i].toLowerCase())\
    \ === -1) {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'];\n    let result = '';\n    for (let i = 0; i < text.length; i++)\
    \ {\n        if (vowels.indexOf(text[i]) === -1) {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpquowoayb.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpquowoayb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let result: string\
    \ = '';\n    for (let i: number = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ == -1) {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpquowoayb.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpquowoayb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpquowoayb.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpquowoayb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpquowoayb.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpquowoayb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 2
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (!is_vowel(text[i])) {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfmm9a6pm.ts(15,14): error TS2304: Cannot find name
    ''is_vowel''.

    '
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpquowoayb.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpquowoayb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpquowoayb.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpquowoayb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpquowoayb.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpquowoayb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmp95gipj4c.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp95gipj4c.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmp95gipj4c.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp95gipj4c.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmp95gipj4c.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp95gipj4c.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let result: string\
    \ = '';\n    for (let i: number = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ === -1) {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i: number = 0;\
    \ i < text.length; i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i]\
    \ !== 'i' && text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpxnkjwib9.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxnkjwib9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i: number = 0;\
    \ i < text.length; i++) {\n        if (text[i] != 'a' && text[i] != 'e' && text[i]\
    \ != 'i' && text[i] != 'o' && text[i] != 'u') {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpkhliiqco.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpkhliiqco.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'];\n    let result = '';\n    for (let i = 0; i < text.length; i++)\
    \ {\n        if (vowels.indexOf(text[i]) === -1) {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmp95gipj4c.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp95gipj4c.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i]\
    \ != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I'\
    \ && text[i] != 'O' && text[i] != 'U') {\n            result += text[i];\n   \
    \     }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let result: string\
    \ = '';\n    for (let i: number = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ === -1) {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpquowoayb.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpquowoayb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'];\n    let result = '';\n    for (let i = 0; i < text.length; i++)\
    \ {\n        if (vowels.indexOf(text[i]) === -1) {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpquowoayb.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpquowoayb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i: number = 0;\
    \ i < text.length; i++) {\n        if (text[i] != 'a' && text[i] != 'e' && text[i]\
    \ != 'i' && text[i] != 'o' && text[i] != 'u') {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpkhliiqco.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpkhliiqco.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpquowoayb.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpquowoayb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpquowoayb.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpquowoayb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmp95gipj4c.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp95gipj4c.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i: number = 0;\
    \ i < text.length; i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i]\
    \ !== 'i' && text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpxnkjwib9.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxnkjwib9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpquowoayb.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpquowoayb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i: number = 0;\
    \ i < text.length; i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i]\
    \ !== 'i' && text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpxnkjwib9.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxnkjwib9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let vowels = 'aeiouAEIOU';\n    let result = '';\n  \
    \  for (let i = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ === -1) {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let vowels: string = 'aeiou';\n    let result: string\
    \ = '';\n    for (let i = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ == -1) {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpdabnbidg.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdabnbidg.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i]\
    \ != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I'\
    \ && text[i] != 'O' && text[i] != 'U') {\n            result += text[i];\n   \
    \     }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i: number = 0;\
    \ i < text.length; i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i]\
    \ !== 'i' && text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpxnkjwib9.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxnkjwib9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpquowoayb.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpquowoayb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmp95gipj4c.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp95gipj4c.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i: number = 0;\
    \ i < text.length; i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i]\
    \ !== 'i' && text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpxnkjwib9.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxnkjwib9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmp95gipj4c.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp95gipj4c.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmp95gipj4c.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp95gipj4c.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'];\n    let result = '';\n    for (let i = 0; i < text.length; i++)\
    \ {\n        if (vowels.indexOf(text[i]) === -1) {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = \"\";\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] != \"a\" && text[i] != \"e\" && text[i] != \"i\"\
    \ && text[i] != \"o\" && text[i] != \"u\") {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpu2v_a1fj.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu2v_a1fj.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpquowoayb.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpquowoayb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = \"\";\n    for (let i: number =\
    \ 0; i < text.length; i++) {\n        if (text[i] != \"a\" && text[i] != \"e\"\
    \ && text[i] != \"i\" && text[i] != \"o\" && text[i] != \"u\") {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"\
    ),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpbux7w1wo.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbux7w1wo.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i: number = 0;\
    \ i < text.length; i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i]\
    \ !== 'i' && text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpxnkjwib9.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxnkjwib9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpquowoayb.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpquowoayb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'];\n    let newText = '';\n    for (let i = 0; i < text.length; i++)\
    \ {\n        if (vowels.indexOf(text[i]) === -1) {\n            newText += text[i];\n\
    \        }\n    }\n    return newText;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 2
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    const vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'];\n    let result = '';\n    for (let i = 0; i < text.length; i++)\
    \ {\n        if (!vowels.includes(text[i])) {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpamfgynde.ts(16,21): error TS2339: Property ''includes''
    does not exist on type ''string[]''.

    '
  timestamp: 1659738287
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result\
    \ = '';\n    for (let i = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i].toLowerCase())\
    \ === -1) {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'];\n    let result = '';\n    for (let i = 0; i < text.length; i++)\
    \ {\n        if (vowels.indexOf(text[i]) === -1) {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U'];\n    let result = '';\n    for (let i = 0; i < text.length; i++)\
    \ {\n        if (vowels.indexOf(text[i]) === -1) {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let new_text:\
    \ string = '';\n    for (let i = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ === -1) {\n            new_text += text[i];\n        }\n    }\n    return new_text;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738287
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i]\
    \ != 'o' && text[i] != 'u') {\n            result += text[i];\n        }\n   \
    \ }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpc0avnzhj.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpc0avnzhj.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738286
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text:\
    \ string): string {\n    let result: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (text[i] !== 'a' && text[i] !== 'e' && text[i] !== 'i' &&\
    \ text[i] !== 'o' && text[i] !== 'u') {\n            result += text[i];\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmp95gipj4c.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp95gipj4c.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738286

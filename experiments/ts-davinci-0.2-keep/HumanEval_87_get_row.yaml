completions:
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  const result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let res: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                res.push([i, j]);\n            }\n        }\n    }\n\
  \    return res.sort((a, b) => {\n        if (a[0] === b[0]) {\n            return\
  \ b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => a[0] - b[0] || b[1] - a[1]);\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  const result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  return lst\n    .map((row, rowIndex) =>\n      row\n        .map((col, colIndex)\
  \ => (col === x ? [rowIndex, colIndex] : null))\n        .filter(Boolean)\n    )\n\
  \    .flat()\n    .sort((a, b) => {\n      if (a[0] === b[0]) {\n        return\
  \ b[1] - a[1];\n      }\n      return a[0] - b[0];\n    });\n}\n"
- "    return lst.reduce((acc, row, i) => {\n        row.forEach((el, j) => {\n  \
  \          if (el === x) {\n                acc.push([i, j]);\n            }\n \
  \       });\n        return acc;\n    }, []).sort((a, b) => {\n        if (a[0]\
  \ === b[0]) {\n            return b[1] - a[1];\n        }\n        return a[0] -\
  \ b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  const result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  return lst\n    .map((row, i) => row.map((col, j) => [i, j]))\n    .reduce((acc,\
  \ cur) => acc.concat(cur), [])\n    .filter(([i, j]) => lst[i][j] === x)\n    .sort(([i1,\
  \ j1], [i2, j2]) => {\n      if (i1 < i2) return -1;\n      if (i1 > i2) return\
  \ 1;\n      if (j1 > j2) return -1;\n      if (j1 < j2) return 1;\n      return\
  \ 0;\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let res: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                res.push([i, j]);\n            }\n        }\n    }\n\
  \    return res.sort((a, b) => {\n        if (a[0] === b[0]) {\n            return\
  \ b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    const result: [number, number][] = [];\n    for (let i = 0; i < lst.length;\
  \ i++) {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let res: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                res.push([i, j]);\n            }\n        }\n    }\n\
  \    return res.sort((a, b) => {\n        if (a[0] === b[0]) {\n            return\
  \ b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let res: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++) {\n\
  \    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n \
  \       res.push([i, j]);\n      }\n    }\n  }\n  res.sort((a, b) => a[0] - b[0]);\n\
  \  for (let i = 0; i < res.length; i++) {\n    if (res[i][0] === res[i + 1][0])\
  \ {\n      res.sort((a, b) => b[1] - a[1]);\n    }\n  }\n  return res;\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let res: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++) {\n\
  \    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n \
  \       res.push([i, j]);\n      }\n    }\n  }\n  return res.sort((a, b) => {\n\
  \    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0] - b[0];\n\
  \  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let res: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                res.push([i, j]);\n            }\n        }\n    }\n\
  \    return res.sort((a, b) => {\n        if (a[0] > b[0]) {\n            return\
  \ 1;\n        } else if (a[0] < b[0]) {\n            return -1;\n        } else\
  \ {\n            if (a[1] > b[1]) {\n                return -1;\n            } else\
  \ if (a[1] < b[1]) {\n                return 1;\n            } else {\n        \
  \        return 0;\n            }\n        }\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  lst.forEach((row, rowIndex) => {\n  \
  \  row.forEach((item, itemIndex) => {\n      if (item === x) {\n        result.push([rowIndex,\
  \ itemIndex]);\n      }\n    });\n  });\n  return result.sort((a, b) => {\n    if\
  \ (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0] - b[0];\n\
  \  });\n}\n"
- "  const result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] > b[0]) {\n      return 1;\n    } else if (a[0] < b[0]) {\n\
  \      return -1;\n    } else {\n      if (a[1] > b[1]) {\n        return -1;\n\
  \      } else if (a[1] < b[1]) {\n        return 1;\n      } else {\n        return\
  \ 0;\n      }\n    }\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let res: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++) {\n\
  \    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n \
  \       res.push([i, j]);\n      }\n    }\n  }\n  return res.sort((a, b) => {\n\
  \    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0] - b[0];\n\
  \  });\n}\n"
- "    let result: [number, number][] = [];\n    lst.forEach((row, i) => {\n     \
  \   row.forEach((el, j) => {\n            if (el === x) {\n                result.push([i,\
  \ j]);\n            }\n        });\n    });\n    return result.sort((a, b) => {\n\
  \        if (a[0] === b[0]) {\n            return b[1] - a[1];\n        }\n    \
  \    return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  const result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  return lst\n    .map((row, i) => row.map((el, j) => [i, j]).filter(([, j]) =>\
  \ el === x))\n    .reduce((acc, cur) => acc.concat(cur), [])\n    .sort(([a, b],\
  \ [c, d]) => (a === c ? d - b : a - c));\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let res: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                res.push([i, j]);\n            }\n        }\n    }\n\
  \    res.sort((a, b) => {\n        if (a[0] === b[0]) {\n            return b[1]\
  \ - a[1];\n        }\n        return a[0] - b[0];\n    });\n    return res;\n}\n"
- "    let res: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                res.push([i, j]);\n            }\n        }\n    }\n\
  \    return res.sort((a, b) => {\n        if (a[0] === b[0]) {\n            return\
  \ b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  const result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] < b[0]) {\n      return -1;\n    } else if (a[0] > b[0]) {\n\
  \      return 1;\n    } else {\n      if (a[1] > b[1]) {\n        return -1;\n \
  \     } else if (a[1] < b[1]) {\n        return 1;\n      } else {\n        return\
  \ 0;\n      }\n    }\n  });\n}\n"
- "  const result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  return lst\n    .map((row, i) => row.map((val, j) => [i, j]))\n    .reduce((a,\
  \ b) => a.concat(b), [])\n    .filter(([i, j]) => lst[i][j] === x)\n    .sort(([i1,\
  \ j1], [i2, j2]) => {\n      if (i1 === i2) {\n        return j2 - j1;\n      }\n\
  \      return i1 - i2;\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => a[0] - b[0] || b[1] - a[1]);\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] > b[0]) {\n      return 1;\n    } else if (a[0] < b[0]) {\n\
  \      return -1;\n    } else {\n      if (a[1] > b[1]) {\n        return -1;\n\
  \      } else if (a[1] < b[1]) {\n        return 1;\n      } else {\n        return\
  \ 0;\n      }\n    }\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let res: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                res.push([i, j]);\n            }\n        }\n    }\n\
  \    return res.sort((a, b) => {\n        if (a[0] === b[0]) {\n            return\
  \ b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  lst.forEach((row, i) => {\n    row.forEach((col,\
  \ j) => {\n      if (col === x) {\n        result.push([i, j]);\n      }\n    });\n\
  \  });\n  return result.sort((a, b) => {\n    if (a[0] === b[0]) {\n      return\
  \ b[1] - a[1];\n    }\n    return a[0] - b[0];\n  });\n}\n"
- "  const result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] > b[0]) {\n      return 1;\n    } else if (a[0] < b[0]) {\n\
  \      return -1;\n    } else {\n      if (a[1] > b[1]) {\n        return -1;\n\
  \      } else if (a[1] < b[1]) {\n        return 1;\n      } else {\n        return\
  \ 0;\n      }\n    }\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    const result: [number, number][] = [];\n    for (let i = 0; i < lst.length;\
  \ i++) {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  const result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  const result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  const res: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++) {\n\
  \    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n \
  \       res.push([i, j]);\n      }\n    }\n  }\n  return res.sort((a, b) => {\n\
  \    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0] - b[0];\n\
  \  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    const result: [number, number][] = [];\n    for (let i = 0; i < lst.length;\
  \ i++) {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let res: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                res.push([i, j]);\n            }\n        }\n    }\n\
  \    return res.sort((a, b) => {\n        if (a[0] === b[0]) {\n            return\
  \ b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  const result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] < b[0]) {\n          \
  \  return -1;\n        } else if (a[0] > b[0]) {\n            return 1;\n      \
  \  } else {\n            if (a[1] > b[1]) {\n                return -1;\n      \
  \      } else if (a[1] < b[1]) {\n                return 1;\n            } else\
  \ {\n                return 0;\n            }\n        }\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let res: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                res.push([i, j]);\n            }\n        }\n    }\n\
  \    res.sort((a, b) => {\n        if (a[0] === b[0]) {\n            return b[1]\
  \ - a[1];\n        }\n        return a[0] - b[0];\n    });\n    return res;\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let res: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                res.push([i, j]);\n            }\n        }\n    }\n\
  \    return res.sort((a, b) => {\n        if (a[0] === b[0]) {\n            return\
  \ b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let res: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                res.push([i, j]);\n            }\n        }\n    }\n\
  \    return res.sort((a, b) => {\n        if (a[0] === b[0]) {\n            return\
  \ b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => a[0] - b[0] || b[1] - a[1]);\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] > b[0]) {\n          \
  \  return 1;\n        } else if (a[0] < b[0]) {\n            return -1;\n      \
  \  } else {\n            if (a[1] > b[1]) {\n                return -1;\n      \
  \      } else if (a[1] < b[1]) {\n                return 1;\n            } else\
  \ {\n                return 0;\n            }\n        }\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let res: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                res.push([i, j]);\n            }\n        }\n    }\n\
  \    return res.sort((a, b) => {\n        if (a[0] === b[0]) {\n            return\
  \ b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] > b[0]) {\n          \
  \  return 1;\n        } else if (a[0] < b[0]) {\n            return -1;\n      \
  \  } else {\n            if (a[1] > b[1]) {\n                return -1;\n      \
  \      } else if (a[1] < b[1]) {\n                return 1;\n            } else\
  \ {\n                return 0;\n            }\n        }\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n\n\
  console.log(get_row([\n    [1, 2, 3, 4, 5, 6],\n    [1, 2, 3, 4, 1, 6],\n    [1,\
  \ 2, 3, 4, 5, 1]\n], 1));\nconsole.log(get_row([], 1));\nconsole.log(get_row([[],\
  \ [1], [1, 2, 3]], 3));\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let res: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++) {\n\
  \    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n \
  \       res.push([i, j]);\n      }\n    }\n  }\n  return res.sort((a, b) => {\n\
  \    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0] - b[0];\n\
  \  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  const result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => a[0] - b[0] || b[1] - a[1]);\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] !== b[0]) {\n        \
  \    return a[0] - b[0];\n        } else {\n            return b[1] - a[1];\n  \
  \      }\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] !== b[0]) {\n        \
  \    return a[0] - b[0];\n        } else {\n            return b[1] - a[1];\n  \
  \      }\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  const res: [number, number][] = [];\n  lst.forEach((row, i) => {\n    row.forEach((el,\
  \ j) => {\n      if (el === x) {\n        res.push([i, j]);\n      }\n    });\n\
  \  });\n  return res.sort((a, b) => {\n    if (a[0] === b[0]) {\n      return b[1]\
  \ - a[1];\n    }\n    return a[0] - b[0];\n  });\n}\n"
- "  const result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  return lst\n    .map((row, i) => row.map((col, j) => [i, j]).filter(([, j]) =>\
  \ lst[i][j] === x))\n    .reduce((acc, cur) => acc.concat(cur), [])\n    .sort(([i1,\
  \ j1], [i2, j2]) => i1 - i2 || j2 - j1);\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  const result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let res: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                res.push([i, j]);\n            }\n        }\n    }\n\
  \    return res.sort((a, b) => {\n        if (a[0] === b[0]) {\n            return\
  \ b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let res: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                res.push([i, j]);\n            }\n        }\n    }\n\
  \    return res.sort((a, b) => {\n        if (a[0] === b[0]) {\n            return\
  \ b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  const result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let res: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                res.push([i, j]);\n            }\n        }\n    }\n\
  \    return res.sort((a, b) => {\n        if (a[0] === b[0]) {\n            return\
  \ b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let res: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++) {\n\
  \    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n \
  \       res.push([i, j]);\n      }\n    }\n  }\n  res.sort((a, b) => {\n    if (a[0]\
  \ < b[0]) {\n      return -1;\n    } else if (a[0] > b[0]) {\n      return 1;\n\
  \    } else {\n      if (a[1] > b[1]) {\n        return -1;\n      } else if (a[1]\
  \ < b[1]) {\n        return 1;\n      } else {\n        return 0;\n      }\n   \
  \ }\n  });\n  return res;\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] !== b[0]) {\n        \
  \    return a[0] - b[0];\n        } else {\n            return b[1] - a[1];\n  \
  \      }\n    });\n}\n"
- "    let res: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                res.push([i, j]);\n            }\n        }\n    }\n\
  \    return res.sort((a, b) => {\n        if (a[0] === b[0]) {\n            return\
  \ b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "    return lst.reduce((acc: [number, number][], row: number[], rowIndex: number)\
  \ => {\n        row.forEach((item: number, columnIndex: number) => {\n         \
  \   if (item === x) {\n                acc.push([rowIndex, columnIndex]);\n    \
  \        }\n        });\n        return acc;\n    }, []).sort((a: [number, number],\
  \ b: [number, number]) => {\n        if (a[0] === b[0]) {\n            return b[1]\
  \ - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    let result: [number, number][] = [];\n    for (let i = 0; i < lst.length; i++)\
  \ {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    return lst.reduce((acc: [number, number][], row: number[], i: number) => {\n\
  \        return acc.concat(row.reduce((acc: [number, number][], el: number, j: number)\
  \ => {\n            if (el === x) {\n                acc.push([i, j]);\n       \
  \     }\n            return acc;\n        }, []));\n    }, []).sort((a: [number,\
  \ number], b: [number, number]) => {\n        if (a[0] === b[0]) {\n           \
  \ return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "    const result: [number, number][] = [];\n    for (let i = 0; i < lst.length;\
  \ i++) {\n        for (let j = 0; j < lst[i].length; j++) {\n            if (lst[i][j]\
  \ === x) {\n                result.push([i, j]);\n            }\n        }\n   \
  \ }\n    return result.sort((a, b) => {\n        if (a[0] === b[0]) {\n        \
  \    return b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
- "  let result: [number, number][] = [];\n  for (let i = 0; i < lst.length; i++)\
  \ {\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === x) {\n\
  \        result.push([i, j]);\n      }\n    }\n  }\n  return result.sort((a, b)\
  \ => {\n    if (a[0] === b[0]) {\n      return b[1] - a[1];\n    }\n    return a[0]\
  \ - b[0];\n  });\n}\n"
language: ts
name: HumanEval_87_get_row
prompt: '//You are given a 2 dimensional data, as a nested lists,

  // which is similar to matrix, however, unlike matrices,

  // each row may contain a different number of columns.

  // Given lst, and integer x, find integers x in the list,

  // and return list of tuples, [(x1, y1), (x2, y2) ...] such that

  // each tuple is a coordinate - (row, columns), starting with 0.

  // Sort coordinates initially by rows in ascending order.

  // Also, sort coordinates of the row by columns in descending order.

  // Examples:

  // get_row([

  // [1,2,3,4,5,6],

  // [1,2,3,4,1,6],

  // [1,2,3,4,5,1]

  // ], 1) == [(0, 0), (1, 4), (1, 0), (2, 5), (2, 0)]

  // get_row([], 1) == []

  // get_row([[], [1], [1, 2, 3]], 3) == [(2, 2)]

  function get_row(lst: number[][], x: number): [number, number][] {

  '
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = get_row;\n  assert.deepEqual(candidate([[1, 2, 3,\
  \ 4, 5, 6], [1, 2, 3, 4, 1, 6], [1, 2, 3, 4, 5, 1]], 1),[[0, 0], [1, 4], [1, 0],\
  \ [2, 5], [2, 0]]);\n  assert.deepEqual(candidate([[1, 2, 3, 4, 5, 6], [1, 2, 3,\
  \ 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3,\
  \ 4, 5, 6]], 2),[[0, 1], [1, 1], [2, 1], [3, 1], [4, 1], [5, 1]]);\n  assert.deepEqual(candidate([[1,\
  \ 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 1, 3, 4, 5, 6], [1, 2, 1, 4, 5, 6], [1,\
  \ 2, 3, 1, 5, 6], [1, 2, 3, 4, 1, 6], [1, 2, 3, 4, 5, 1]], 1),[[0, 0], [1, 0], [2,\
  \ 1], [2, 0], [3, 2], [3, 0], [4, 3], [4, 0], [5, 4], [5, 0], [6, 5], [6, 0]]);\n\
  \  assert.deepEqual(candidate([], 1),[]);\n  assert.deepEqual(candidate([[1]], 2),[]);\n\
  \  assert.deepEqual(candidate([[], [1], [1, 2, 3]], 3),[[2, 2]]);\n}\n\ntest();"

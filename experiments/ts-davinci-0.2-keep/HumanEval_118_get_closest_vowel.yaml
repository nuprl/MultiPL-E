completions:
- "    const vowels = \"aeiou\";\n    const consonants = \"bcdfghjklmnpqrstvwxyz\"\
  ;\n    let closestVowel = \"\";\n    let closestIndex = -1;\n    for (let i = word.length\
  \ - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i]) > -1) {\n       \
  \     for (let j = i + 1; j < word.length; j++) {\n                if (vowels.indexOf(word[j])\
  \ > -1) {\n                    if (closestIndex === -1 || j < closestIndex) {\n\
  \                        closestIndex = j;\n                        closestVowel\
  \ = word[j];\n                    }\n                }\n            }\n        \
  \    break;\n        }\n    }\n    return closestVowel;\n}\n"
- "    let vowels = \"aeiouAEIOU\";\n    let cons = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n  \
  \      if (cons.indexOf(word[i]) >= 0) {\n            for (let j = i + 1; j < word.length;\
  \ j++) {\n                if (vowels.indexOf(word[j]) >= 0) {\n                \
  \    result = word[j];\n                    break;\n                }\n        \
  \    }\n            break;\n        }\n    }\n    return result;\n}\n"
- "    const vowels = ['a', 'e', 'i', 'o', 'u'];\n    const wordArr = word.split('');\n\
  \    let vowel = '';\n    let vowelIndex = 0;\n    let consonantIndex = 0;\n   \
  \ let consonant = '';\n    let closestVowel = '';\n    let closestVowelIndex = 0;\n\
  \    let closestConsonantIndex = 0;\n    let closestConsonant = '';\n    let closestDistance\
  \ = 0;\n    let distance = 0;\n    for (let i = wordArr.length - 1; i >= 0; i--)\
  \ {\n        if (vowels.includes(wordArr[i])) {\n            vowel = wordArr[i];\n\
  \            vowelIndex = i;\n            for (let j = vowelIndex - 1; j >= 0; j--)\
  \ {\n                if (!vowels.includes(wordArr[j])) {\n                    consonant\
  \ = wordArr[j];\n                    consonantIndex = j;\n                    distance\
  \ = vowelIndex - consonantIndex;\n                    if (distance > closestDistance)\
  \ {\n                        closestVowel = vowel;\n                        closestVowelIndex\
  \ = vowelIndex;\n                        closestConsonant = consonant;\n       \
  \                 closestConsonantIndex = consonantIndex;\n                    \
  \    closestDistance = distance;\n                    }\n                    break;\n\
  \                }\n            }\n        }\n    }\n    return closestVowel;\n\
  }\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));"
- "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestDistance\
  \ = word.length;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            if (i < closestDistance) {\n                closestDistance\
  \ = i;\n                closestVowel = word[i];\n            }\n        }\n    }\n\
  \    return closestVowel;\n}\n"
- "    const vowels = \"aeiou\";\n    const consonants = \"bcdfghjklmnpqrstvwxyz\"\
  ;\n    let closestVowel = \"\";\n    for (let i = word.length - 1; i >= 0; i--)\
  \ {\n        if (vowels.includes(word[i])) {\n            closestVowel = word[i];\n\
  \            break;\n        }\n    }\n    for (let i = word.length - 1; i >= 0;\
  \ i--) {\n        if (consonants.includes(word[i])) {\n            if (vowels.includes(word[i\
  \ - 1])) {\n                if (word[i - 1] === closestVowel) {\n              \
  \      return closestVowel;\n                }\n            }\n        }\n    }\n\
  \    return \"\";\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    let vowels = \"aeiouAEIOU\";\n    let cons = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let result = \"\";\n    let index = word.length - 1;\n    while (index >=\
  \ 0) {\n        if (cons.indexOf(word[index]) !== -1) {\n            if (vowels.indexOf(word[index\
  \ - 1]) !== -1) {\n                result = word[index - 1];\n                break;\n\
  \            }\n        }\n        index--;\n    }\n    return result;\n}\n"
- "    const vowels = \"aeiou\";\n    const wordArr = word.split(\"\");\n    const\
  \ wordArrRev = wordArr.reverse();\n    let vowelIndex = -1;\n    let consonantIndex\
  \ = -1;\n    for (let i = 0; i < wordArrRev.length; i++) {\n        if (vowels.includes(wordArrRev[i]))\
  \ {\n            vowelIndex = i;\n            break;\n        }\n    }\n    for\
  \ (let i = vowelIndex + 1; i < wordArrRev.length; i++) {\n        if (!vowels.includes(wordArrRev[i]))\
  \ {\n            consonantIndex = i;\n            break;\n        }\n    }\n   \
  \ if (vowelIndex === -1 || consonantIndex === -1) {\n        return \"\";\n    }\n\
  \    return wordArrRev[vowelIndex];\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"\
  ));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));\n"
- "  const vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n  const consonants = [\"\
  b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
  , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n  let closestVowel\
  \ = \"\";\n  let closestVowelIndex = word.length;\n  for (let i = word.length -\
  \ 1; i >= 0; i--) {\n    if (vowels.includes(word[i])) {\n      if (consonants.includes(word[i\
  \ - 1]) && consonants.includes(word[i + 1])) {\n        if (i < closestVowelIndex)\
  \ {\n          closestVowel = word[i];\n          closestVowelIndex = i;\n     \
  \   }\n      }\n    }\n  }\n  return closestVowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let cons = \"bcdfghjklmnpqrstvwxyz\";\n    let\
  \ result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (cons.indexOf(word[i])\
  \ != -1) {\n            for (let j = i + 1; j < word.length; j++) {\n          \
  \      if (vowels.indexOf(word[j]) != -1) {\n                    result = word[j];\n\
  \                    break;\n                }\n            }\n            break;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants = ['b', 'c', 'd',\
  \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
  \ 'y', 'z'];\n    let arr = word.split('');\n    let vowel = '';\n    let consonant\
  \ = '';\n    let result = '';\n    for (let i = arr.length - 1; i >= 0; i--) {\n\
  \        if (vowels.indexOf(arr[i]) !== -1) {\n            vowel = arr[i];\n   \
  \         break;\n        }\n    }\n    for (let i = arr.length - 1; i >= 0; i--)\
  \ {\n        if (consonants.indexOf(arr[i]) !== -1) {\n            consonant = arr[i];\n\
  \            break;\n        }\n    }\n    if (vowel === '' || consonant === '')\
  \ {\n        return result;\n    }\n    for (let i = arr.length - 1; i >= 0; i--)\
  \ {\n        if (arr[i] === vowel) {\n            result = vowel;\n            break;\n\
  \        }\n        if (arr[i] === consonant) {\n            result = vowel;\n \
  \           break;\n        }\n    }\n    return result;\n}\n"
- "    let vowels = \"aeiou\";\n    let cons = \"bcdfghjklmnpqrstvwxyz\";\n    let\
  \ result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (cons.indexOf(word[i])\
  \ > -1) {\n            for (let j = i + 1; j < word.length; j++) {\n           \
  \     if (vowels.indexOf(word[j]) > -1) {\n                    result = word[j];\n\
  \                    break;\n                }\n            }\n            break;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let closestVowel = \"\";\n    let closestDistance = word.length;\n    for\
  \ (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) >= 0)\
  \ {\n            for (let j = i + 1; j < word.length; j++) {\n                if\
  \ (consonants.indexOf(word[j]) >= 0) {\n                    if (j - i < closestDistance)\
  \ {\n                        closestDistance = j - i;\n                        closestVowel\
  \ = word[i];\n                    }\n                    break;\n              \
  \  }\n            }\n        }\n    }\n    return closestVowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let closest = \"\";\n    let closest_distance\
  \ = word.length;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            let distance = word.length - i;\n            if (distance\
  \ < closest_distance) {\n                closest_distance = distance;\n        \
  \        closest = word[i];\n            }\n        }\n    }\n    return closest;\n\
  }\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n    \
  \    if (consonants.indexOf(word[i]) > -1) {\n            for (let j = i + 1; j\
  \ < word.length; j++) {\n                if (vowels.indexOf(word[j]) > -1) {\n \
  \                   result = word[j];\n                    break;\n            \
  \    }\n            }\n            break;\n        }\n    }\n    return result;\n\
  }\n"
- "    let vowels = \"aeiouAEIOU\";\n    let result = \"\";\n    let index = word.length\
  \ - 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index]) !== -1)\
  \ {\n            result = word[index];\n            break;\n        }\n        index--;\n\
  \    }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n    \
  \    if (consonants.indexOf(word[i]) > -1) {\n            for (let j = i + 1; j\
  \ < word.length; j++) {\n                if (vowels.indexOf(word[j]) > -1) {\n \
  \                   result = word[j];\n                    break;\n            \
  \    }\n            }\n            break;\n        }\n    }\n    return result;\n\
  }\n"
- "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let wordArr = word.split(\"\
  \");\n    let result = \"\";\n    for (let i = wordArr.length - 1; i >= 0; i--)\
  \ {\n        if (vowels.indexOf(wordArr[i]) !== -1) {\n            result = wordArr[i];\n\
  \            break;\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"\
  yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));\n"
- "    let vowels = \"aeiou\";\n    let cons = \"bcdfghjklmnpqrstvwxyz\";\n    let\
  \ result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (cons.indexOf(word[i])\
  \ != -1) {\n            for (let j = i; j >= 0; j--) {\n                if (vowels.indexOf(word[j])\
  \ != -1) {\n                    result = word[j];\n                    break;\n\
  \                }\n            }\n            break;\n        }\n    }\n    return\
  \ result;\n}\n"
- "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestDistance\
  \ = word.length;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            if (i < closestDistance) {\n                closestDistance\
  \ = i;\n                closestVowel = word[i];\n            }\n        }\n    }\n\
  \    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));"
- "    let vowels = \"aeiou\";\n    let cons = \"bcdfghjklmnpqrstvwxyz\";\n    let\
  \ result = \"\";\n    let index = word.length - 1;\n    while (index >= 0) {\n \
  \       if (cons.indexOf(word[index]) != -1) {\n            if (index == word.length\
  \ - 1) {\n                return result;\n            }\n            else {\n  \
  \              if (vowels.indexOf(word[index + 1]) != -1) {\n                  \
  \  return word[index + 1];\n                }\n                else {\n        \
  \            return result;\n                }\n            }\n        }\n     \
  \   index--;\n    }\n    return result;\n}\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let closestVowel = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n\
  \        if (consonants.indexOf(word[i]) === -1) {\n            continue;\n    \
  \    }\n        for (let j = i - 1; j >= 0; j--) {\n            if (vowels.indexOf(word[j])\
  \ !== -1) {\n                closestVowel = word[j];\n                break;\n \
  \           }\n        }\n        break;\n    }\n    return closestVowel;\n}\n\n\
  console.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"\
  ));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let closestVowel = \"\";\n    let closestVowelIndex = word.length;\n    for\
  \ (let i = word.length - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i])\
  \ > -1) {\n            for (let j = i + 1; j < word.length; j++) {\n           \
  \     if (vowels.indexOf(word[j]) > -1) {\n                    if (j < closestVowelIndex)\
  \ {\n                        closestVowelIndex = j;\n                        closestVowel\
  \ = word[j];\n                    }\n                }\n            }\n        }\n\
  \    }\n    return closestVowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let closestVowel = \"\";\n    let closestIndex = word.length;\n    for (let\
  \ i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1)\
  \ {\n            for (let j = i - 1; j >= 0; j--) {\n                if (consonants.indexOf(word[j])\
  \ !== -1) {\n                    if (i - j < closestIndex) {\n                 \
  \       closestIndex = i - j;\n                        closestVowel = word[i];\n\
  \                    }\n                    break;\n                }\n        \
  \    }\n        }\n    }\n    return closestVowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let result = \"\";\n    let index = word.length\
  \ - 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index]) >= 0)\
  \ {\n            result = word[index];\n            break;\n        }\n        index--;\n\
  \    }\n    return result;\n}\n"
- "    let vowels = \"aeiou\";\n    let cons = \"bcdfghjklmnpqrstvwxyz\";\n    let\
  \ result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (cons.indexOf(word[i])\
  \ > -1) {\n            for (let j = i + 1; j < word.length; j++) {\n           \
  \     if (vowels.indexOf(word[j]) > -1) {\n                    result = word[j];\n\
  \                    break;\n                }\n            }\n            break;\n\
  \        }\n    }\n    return result;\n}\n"
- "    const vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestIndex\
  \ = word.length;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            if (i < closestIndex) {\n                closestIndex =\
  \ i;\n                closestVowel = word[i];\n            }\n        }\n    }\n\
  \    return closestVowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let wordArr = word.split(\"\");\n    let result\
  \ = \"\";\n    for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
  \ >= 0) {\n            result = wordArr[i];\n            break;\n        }\n   \
  \ }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants = ['b', 'c', 'd',\
  \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
  \ 'y', 'z'];\n    let wordArr = word.split('');\n    let vowelIndex = 0;\n    let\
  \ consonantIndex = 0;\n    let closestVowel = '';\n    let closestVowelIndex = 0;\n\
  \    let closestConsonantIndex = 0;\n    let closestConsonant = '';\n    let closestVowelDistance\
  \ = 0;\n    let closestConsonantDistance = 0;\n    let vowelDistance = 0;\n    let\
  \ consonantDistance = 0;\n    for (let i = 0; i < wordArr.length; i++) {\n     \
  \   if (vowels.includes(wordArr[i])) {\n            vowelIndex = i;\n          \
  \  for (let j = 0; j < wordArr.length; j++) {\n                if (consonants.includes(wordArr[j]))\
  \ {\n                    consonantIndex = j;\n                    vowelDistance\
  \ = Math.abs(vowelIndex - consonantIndex);\n                    if (vowelDistance\
  \ > closestVowelDistance) {\n                        closestVowelDistance = vowelDistance;\n\
  \                        closestVowel = wordArr[i];\n                        closestVowelIndex\
  \ = vowelIndex;\n                        closestConsonantIndex = consonantIndex;\n\
  \                        closestConsonant = wordArr[j];\n                    }\n\
  \                }\n            }\n        }\n    }\n    if (closestVowelIndex <\
  \ closestConsonantIndex) {\n        return closestVowel;\n    } else {\n       \
  \ return '';\n    }\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_clos"
- "    let vowels = \"aeiouAEIOU\";\n    let cons = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let closest = \"\";\n    let distance = word.length;\n    for (let i = 0;\
  \ i < word.length; i++) {\n        if (vowels.indexOf(word[i]) > -1) {\n       \
  \     if (cons.indexOf(word[i - 1]) > -1 && cons.indexOf(word[i + 1]) > -1) {\n\
  \                if (i < distance) {\n                    distance = i;\n      \
  \              closest = word[i];\n                }\n            }\n        }\n\
  \    }\n    return closest;\n}\n"
- "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    for (let i = word.length\
  \ - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n         \
  \   closestVowel = word[i];\n            break;\n        }\n    }\n    return closestVowel;\n\
  }\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));"
- "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestIndex\
  \ = 0;\n    let wordArray = word.split(\"\");\n    let vowelIndex = 0;\n    let\
  \ consonantIndex = 0;\n    let consonantCount = 0;\n    let vowelCount = 0;\n  \
  \  for (let i = wordArray.length - 1; i >= 0; i--) {\n        if (vowels.includes(wordArray[i]))\
  \ {\n            vowelCount++;\n            vowelIndex = i;\n        }\n       \
  \ if (!vowels.includes(wordArray[i])) {\n            consonantCount++;\n       \
  \     consonantIndex = i;\n        }\n        if (vowelCount === 1 && consonantCount\
  \ === 2) {\n            closestVowel = wordArray[vowelIndex];\n            closestIndex\
  \ = vowelIndex;\n            break;\n        }\n    }\n    if (closestVowel ===\
  \ \"\") {\n        return \"\";\n    }\n    for (let i = closestIndex - 1; i >=\
  \ 0; i--) {\n        if (vowels.includes(wordArray[i])) {\n            closestVowel\
  \ = wordArray[i];\n            break;\n        }\n    }\n    return closestVowel;\n\
  }\n"
- "    let vowels = \"aeiouAEIOU\";\n    let cons = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n  \
  \      if (cons.indexOf(word[i]) > -1) {\n            for (let j = i + 1; j < word.length;\
  \ j++) {\n                if (vowels.indexOf(word[j]) > -1) {\n                \
  \    result = word[j];\n                    break;\n                }\n        \
  \    }\n            break;\n        }\n    }\n    return result;\n}\n"
- "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"\
  b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
  , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let wordArr\
  \ = word.split(\"\");\n    let result = \"\";\n    for (let i = wordArr.length -\
  \ 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i]) > -1) {\n          \
  \  if (consonants.indexOf(wordArr[i - 1]) > -1 && consonants.indexOf(wordArr[i +\
  \ 1]) > -1) {\n                result = wordArr[i];\n                break;\n  \
  \          }\n        }\n    }\n    return result;\n}\n"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr = word.split('');\n\
  \    let result = '';\n    for (let i = wordArr.length - 1; i >= 0; i--) {\n   \
  \     if (vowels.indexOf(wordArr[i]) !== -1) {\n            result = wordArr[i];\n\
  \            break;\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"\
  yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));"
- "    const vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    const wordArr = word.split(\"\
  \");\n    let closestVowel = \"\";\n    let closestVowelIndex = word.length;\n \
  \   let prevConsonant = false;\n    wordArr.forEach((letter, index) => {\n     \
  \   if (vowels.includes(letter)) {\n            if (prevConsonant) {\n         \
  \       if (index < closestVowelIndex) {\n                    closestVowel = letter;\n\
  \                    closestVowelIndex = index;\n                }\n           \
  \ }\n            prevConsonant = false;\n        } else {\n            prevConsonant\
  \ = true;\n        }\n    });\n    return closestVowel;\n}\n"
- "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let wordArr = word.split(\"\
  \");\n    let result = \"\";\n    for (let i = wordArr.length - 1; i >= 0; i--)\
  \ {\n        if (vowels.indexOf(wordArr[i]) !== -1) {\n            result = wordArr[i];\n\
  \            break;\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"\
  yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));"
- "    let vowels = \"aeiou\";\n    let wordArr = word.split(\"\");\n    let result\
  \ = \"\";\n    for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
  \ != -1) {\n            result = wordArr[i];\n            break;\n        }\n  \
  \  }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    let vowels = \"aeiou\";\n    let cons = \"bcdfghjklmnpqrstvwxyz\";\n    let\
  \ result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (cons.indexOf(word[i])\
  \ != -1) {\n            for (let j = i; j >= 0; j--) {\n                if (vowels.indexOf(word[j])\
  \ != -1) {\n                    result = word[j];\n                    break;\n\
  \                }\n            }\n            break;\n        }\n    }\n    return\
  \ result;\n}\n"
- "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"\
  b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
  , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let wordArr\
  \ = word.split(\"\");\n    let result = \"\";\n    for (let i = wordArr.length -\
  \ 1; i >= 0; i--) {\n        if (consonants.indexOf(wordArr[i]) > -1) {\n      \
  \      for (let j = i; j >= 0; j--) {\n                if (vowels.indexOf(wordArr[j])\
  \ > -1) {\n                    result = wordArr[j];\n                    break;\n\
  \                }\n            }\n            break;\n        }\n    }\n    return\
  \ result;\n}\n"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants = ['b', 'c', 'd',\
  \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
  \ 'y', 'z'];\n    let result = '';\n    let wordArr = word.split('');\n    let vowelIndex\
  \ = 0;\n    let consonantIndex = 0;\n    let vowelFound = false;\n    let consonantFound\
  \ = false;\n    for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
  \ > -1) {\n            vowelFound = true;\n            vowelIndex = i;\n       \
  \ }\n        if (consonants.indexOf(wordArr[i]) > -1) {\n            consonantFound\
  \ = true;\n            consonantIndex = i;\n        }\n        if (vowelFound &&\
  \ consonantFound) {\n            result = wordArr[vowelIndex];\n            break;\n\
  \        }\n    }\n    return result;\n}\n"
- "    const vowels = ['a', 'e', 'i', 'o', 'u'];\n    const consonants = ['b', 'c',\
  \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
  \ 'x', 'y', 'z'];\n    let closestVowel = '';\n    let closestDistance = 0;\n  \
  \  for (let i = 0; i < word.length; i++) {\n        if (vowels.includes(word[i]))\
  \ {\n            let distance = 0;\n            for (let j = i; j < word.length;\
  \ j++) {\n                if (consonants.includes(word[j])) {\n                \
  \    distance = j - i;\n                    break;\n                }\n        \
  \    }\n            if (distance > 0 && (distance < closestDistance || closestDistance\
  \ === 0)) {\n                closestDistance = distance;\n                closestVowel\
  \ = word[i];\n            }\n        }\n    }\n    return closestVowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let wordArr = word.split(\"\");\n    let result\
  \ = \"\";\n    for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
  \ !== -1) {\n            result = wordArr[i];\n            break;\n        }\n \
  \   }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));"
- "    const vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestIndex\
  \ = -1;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            closestVowel = word[i];\n            closestIndex = i;\n\
  \            break;\n        }\n    }\n    if (closestIndex === -1) {\n        return\
  \ \"\";\n    }\n    for (let i = closestIndex - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ === -1) {\n            return closestVowel;\n        }\n    }\n    return \"\"\
  ;\n}\n"
- "    let vowels = 'aeiou';\n    let index = word.length - 1;\n    while (index >=\
  \ 0) {\n        if (vowels.indexOf(word[index]) >= 0) {\n            if (index >\
  \ 0 && vowels.indexOf(word[index - 1]) < 0) {\n                return word[index];\n\
  \            }\n            if (index < word.length - 1 && vowels.indexOf(word[index\
  \ + 1]) < 0) {\n                return word[index];\n            }\n        }\n\
  \        index--;\n    }\n    return '';\n}\n"
- "    let vowels = \"aeiou\";\n    let wordArr = word.split(\"\");\n    let vowelIndex\
  \ = 0;\n    for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
  \ > -1) {\n            vowelIndex = i;\n            break;\n        }\n    }\n \
  \   for (let i = vowelIndex; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
  \ === -1) {\n            return wordArr[vowelIndex];\n        }\n    }\n    return\
  \ \"\";\n}\n"
- "    let vowels = \"aeiou\";\n    let result = \"\";\n    for (let i = word.length\
  \ - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n         \
  \   result = word[i];\n            break;\n        }\n    }\n    return result;\n\
  }\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n    \
  \    if (consonants.indexOf(word[i]) > -1) {\n            for (let j = i + 1; j\
  \ < word.length; j++) {\n                if (vowels.indexOf(word[j]) > -1) {\n \
  \                   result = word[j];\n                    break;\n            \
  \    }\n            }\n            break;\n        }\n    }\n    return result;\n\
  }\n"
- "    const vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    const wordArr = word.split(\"\
  \");\n    let vowelIndex = 0;\n    let closestVowel = \"\";\n    for (let i = wordArr.length\
  \ - 1; i >= 0; i--) {\n        if (vowels.includes(wordArr[i])) {\n            vowelIndex\
  \ = i;\n            break;\n        }\n    }\n    for (let i = vowelIndex; i >=\
  \ 0; i--) {\n        if (!vowels.includes(wordArr[i])) {\n            closestVowel\
  \ = wordArr[vowelIndex];\n            break;\n        }\n    }\n    return closestVowel;\n\
  }\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let result = \"\";\n    let index = word.length - 1;\n    while (index > 0)\
  \ {\n        if (consonants.indexOf(word[index]) > -1) {\n            if (vowels.indexOf(word[index\
  \ - 1]) > -1) {\n                result = word[index - 1];\n                break;\n\
  \            }\n        }\n        index--;\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"\
  yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));\n"
- "    let vowels = \"aeiou\";\n    let cons = \"bcdfghjklmnpqrstvwxyz\";\n    let\
  \ result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (cons.indexOf(word[i])\
  \ !== -1) {\n            for (let j = i + 1; j < word.length; j++) {\n         \
  \       if (vowels.indexOf(word[j]) !== -1) {\n                    result = word[j];\n\
  \                    break;\n                }\n            }\n            break;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let result = \"\";\n    let vowelIndex = 0;\n    let consonantIndex = 0;\n\
  \    for (let i = word.length - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i])\
  \ !== -1) {\n            consonantIndex = i;\n            break;\n        }\n  \
  \  }\n    for (let i = consonantIndex - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            vowelIndex = i;\n            break;\n        }\n    }\n\
  \    if (vowelIndex !== 0) {\n        result = word[vowelIndex];\n    }\n    return\
  \ result;\n}\n"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants = ['b', 'c', 'd',\
  \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
  \ 'y', 'z'];\n    let wordArray = word.split('');\n    let vowelIndex = 0;\n   \
  \ let consonantIndex = 0;\n    let vowel = '';\n    let consonant = '';\n    let\
  \ closestVowel = '';\n    let closestVowelIndex = 0;\n    let closestConsonantIndex\
  \ = 0;\n    let closestConsonant = '';\n    let closestVowelDistance = 0;\n    let\
  \ closestConsonantDistance = 0;\n    let distance = 0;\n    for (let i = 0; i <\
  \ wordArray.length; i++) {\n        if (vowels.indexOf(wordArray[i]) !== -1) {\n\
  \            vowel = wordArray[i];\n            vowelIndex = i;\n            for\
  \ (let j = vowelIndex + 1; j < wordArray.length; j++) {\n                if (consonants.indexOf(wordArray[j])\
  \ !== -1) {\n                    consonant = wordArray[j];\n                   \
  \ consonantIndex = j;\n                    distance = consonantIndex - vowelIndex;\n\
  \                    if (closestVowelDistance === 0) {\n                       \
  \ closestVowelDistance = distance;\n                        closestVowel = vowel;\n\
  \                        closestVowelIndex = vowelIndex;\n                     \
  \   closestConsonant = consonant;\n                        closestConsonantIndex\
  \ = consonantIndex;\n                    } else if (distance < closestVowelDistance)\
  \ {\n                        closestVowelDistance = distance;\n                \
  \        closestVowel = vowel;\n                        closestVowelIndex = vowelIndex;\n\
  \                        closestConsonant = consonant;\n                       \
  \ closestConsonantIndex = consonantIndex;\n                    }\n             \
  \   }\n            }\n        }\n    }\n    return closestVowel;\n}\n"
- "    const vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let closestVowel =\
  \ \"\";\n    let closestDistance = word.length;\n    for (let i = word.length -\
  \ 1; i >= 0; i--) {\n        if (vowels.includes(word[i])) {\n            if (i\
  \ === word.length - 1) {\n                closestVowel = word[i];\n            \
  \    break;\n            }\n            else if (i === 0) {\n                break;\n\
  \            }\n            else if (vowels.includes(word[i - 1]) || vowels.includes(word[i\
  \ + 1])) {\n                continue;\n            }\n            else {\n     \
  \           if (word.length - i < closestDistance) {\n                    closestVowel\
  \ = word[i];\n                    closestDistance = word.length - i;\n         \
  \       }\n            }\n        }\n    }\n    return closestVowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let result = \"\";\n    for (let i = word.length\
  \ - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n         \
  \   result = word[i];\n            break;\n        }\n    }\n    return result;\n\
  }\n"
- "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let closestVowel = \"\";\n    let closestIndex = word.length;\n    for (let\
  \ i = word.length - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i]) >\
  \ -1) {\n            for (let j = i + 1; j < word.length; j++) {\n             \
  \   if (vowels.indexOf(word[j]) > -1) {\n                    if (j < closestIndex)\
  \ {\n                        closestIndex = j;\n                        closestVowel\
  \ = word[j];\n                    }\n                }\n            }\n        }\n\
  \    }\n    return closestVowel;\n}\n"
- "    const vowels = \"aeiou\";\n    const consonants = \"bcdfghjklmnpqrstvwxyz\"\
  ;\n    let result = \"\";\n    let vowelIndex = -1;\n    let consonantIndex = -1;\n\
  \    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            vowelIndex = i;\n        }\n        if (consonants.indexOf(word[i])\
  \ !== -1) {\n            consonantIndex = i;\n            break;\n        }\n  \
  \  }\n    if (vowelIndex !== -1 && consonantIndex !== -1 && vowelIndex > consonantIndex)\
  \ {\n        result = word[vowelIndex];\n    }\n    return result;\n}\n"
- "    let vowels = \"aeiouAEIOU\";\n    let wordArr = word.split(\"\");\n    let\
  \ result = \"\";\n    for (let i = wordArr.length - 1; i >= 0; i--) {\n        if\
  \ (vowels.indexOf(wordArr[i]) !== -1) {\n            result = wordArr[i];\n    \
  \        break;\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"\
  yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));\n"
- "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestIndex\
  \ = word.length;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            closestVowel = word[i];\n            closestIndex = i;\n\
  \            break;\n        }\n    }\n    for (let i = closestIndex - 1; i >= 0;\
  \ i--) {\n        if (vowels.indexOf(word[i]) === -1) {\n            return closestVowel;\n\
  \        }\n    }\n    return \"\";\n}\n"
- "    const vowels = \"aeiouAEIOU\";\n    const consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let closestVowel = \"\";\n    let closestVowelIndex = -1;\n    let closestConsonantIndex\
  \ = -1;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i])\
  \ !== -1) {\n            closestConsonantIndex = i;\n            break;\n      \
  \  }\n    }\n    for (let i = closestConsonantIndex - 1; i >= 0; i--) {\n      \
  \  if (vowels.indexOf(word[i]) !== -1) {\n            closestVowel = word[i];\n\
  \            closestVowelIndex = i;\n            break;\n        }\n    }\n    if\
  \ (closestVowelIndex === -1) {\n        return \"\";\n    }\n    for (let i = closestVowelIndex\
  \ - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i]) !== -1) {\n     \
  \       return closestVowel;\n        }\n    }\n    return \"\";\n}\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let closest = \"\";\n    let closestIndex = word.length;\n    for (let i =\
  \ 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n  \
  \          if (consonants.indexOf(word[i - 1]) !== -1 && consonants.indexOf(word[i\
  \ + 1]) !== -1) {\n                if (i < closestIndex) {\n                   \
  \ closest = word[i];\n                    closestIndex = i;\n                }\n\
  \            }\n        }\n    }\n    return closest;\n}\n"
- "    let vowels = \"aeiou\";\n    let wordArr = word.split(\"\");\n    let result\
  \ = \"\";\n    for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
  \ === -1) {\n            for (let j = i; j >= 0; j--) {\n                if (vowels.indexOf(wordArr[j])\
  \ !== -1) {\n                    result = wordArr[j];\n                    break;\n\
  \                }\n            }\n            break;\n        }\n    }\n    return\
  \ result;\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let result = \"\";\n    let index = word.length - 1;\n    while (index >= 0)\
  \ {\n        if (vowels.indexOf(word[index]) >= 0) {\n            result = word[index];\n\
  \            break;\n        }\n        index--;\n    }\n    return result;\n}\n\
  \nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let closestVowel = \"\";\n    let wordArray = word.split(\"\");\n    for\
  \ (let i = wordArray.length - 1; i >= 0; i--) {\n        if (consonants.indexOf(wordArray[i])\
  \ !== -1) {\n            if (vowels.indexOf(wordArray[i + 1]) !== -1) {\n      \
  \          closestVowel = wordArray[i + 1];\n                break;\n          \
  \  }\n        }\n    }\n    return closestVowel;\n}\n"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result = '';\n    let wordArray\
  \ = word.split('');\n    for (let i = wordArray.length - 1; i >= 0; i--) {\n   \
  \     if (vowels.indexOf(wordArray[i]) !== -1) {\n            if (i === wordArray.length\
  \ - 1) {\n                return result;\n            }\n            if (vowels.indexOf(wordArray[i\
  \ + 1]) === -1) {\n                result = wordArray[i];\n                return\
  \ result;\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"\
  yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));\n"
- "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestDistance\
  \ = word.length;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ != -1) {\n            if (i < closestDistance) {\n                closestDistance\
  \ = i;\n                closestVowel = word[i];\n            }\n        }\n    }\n\
  \    return closestVowel;\n}\n"
- "    const vowels = \"aeiou\";\n    let result = \"\";\n    let min = word.length;\n\
  \    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ >= 0) {\n            if (i > 0 && vowels.indexOf(word[i - 1]) < 0) {\n       \
  \         if (i < min) {\n                    min = i;\n                    result\
  \ = word[i];\n                }\n            }\n        }\n    }\n    return result;\n\
  }\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let closestVowel = \"\";\n    let closestVowelIndex = word.length;\n    for\
  \ (let i = word.length - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i])\
  \ >= 0) {\n            for (let j = i; j >= 0; j--) {\n                if (vowels.indexOf(word[j])\
  \ >= 0) {\n                    if (i - j < closestVowelIndex) {\n              \
  \          closestVowelIndex = i - j;\n                        closestVowel = word[j];\n\
  \                    }\n                    break;\n                }\n        \
  \    }\n        }\n    }\n    return closestVowel;\n}\n"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants = ['b', 'c', 'd',\
  \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
  \ 'y', 'z'];\n    let wordArray = word.split('');\n    let closestVowel = '';\n\
  \    let closestVowelIndex = 0;\n    let closestConsonantIndex = 0;\n    let closestConsonant\
  \ = '';\n    let closestVowelDistance = 0;\n    let closestConsonantDistance = 0;\n\
  \    let distance = 0;\n    let vowelIndex = 0;\n    let consonantIndex = 0;\n \
  \   for (let i = 0; i < wordArray.length; i++) {\n        if (vowels.indexOf(wordArray[i])\
  \ > -1) {\n            vowelIndex = i;\n            for (let j = vowelIndex; j <\
  \ wordArray.length; j++) {\n                if (consonants.indexOf(wordArray[j])\
  \ > -1) {\n                    consonantIndex = j;\n                    distance\
  \ = consonantIndex - vowelIndex;\n                    if (closestVowelDistance ===\
  \ 0 || distance < closestVowelDistance) {\n                        closestVowelDistance\
  \ = distance;\n                        closestVowel = wordArray[vowelIndex];\n \
  \                       closestVowelIndex = vowelIndex;\n                      \
  \  closestConsonant = wordArray[consonantIndex];\n                        closestConsonantIndex\
  \ = consonantIndex;\n                    }\n                }\n            }\n \
  \       }\n    }\n    return closestVowel;\n}\n"
- "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"\
  b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
  , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let wordArray\
  \ = word.split(\"\");\n    let vowelIndex = 0;\n    let consonantIndex = 0;\n  \
  \  for (let i = wordArray.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArray[i])\
  \ != -1) {\n            vowelIndex = i;\n            break;\n        }\n    }\n\
  \    for (let i = vowelIndex - 1; i >= 0; i--) {\n        if (consonants.indexOf(wordArray[i])\
  \ != -1) {\n            consonantIndex = i;\n            break;\n        }\n   \
  \ }\n    if (consonantIndex == 0) {\n        return \"\";\n    }\n    return wordArray[vowelIndex];\n\
  }\n"
- "    let vowels = \"aeiou\";\n    let wordArr = word.split(\"\");\n    let result\
  \ = \"\";\n    for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
  \ > -1) {\n            result = wordArr[i];\n            break;\n        }\n   \
  \ }\n    return result;\n}\n"
- "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let closestVowel = \"\";\n    let closestVowelIndex = -1;\n    let closestConsonantIndex\
  \ = -1;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            closestVowel = word[i];\n            closestVowelIndex\
  \ = i;\n            break;\n        }\n    }\n    for (let i = closestVowelIndex\
  \ - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i]) !== -1) {\n     \
  \       closestConsonantIndex = i;\n            break;\n        }\n    }\n    if\
  \ (closestVowelIndex !== -1 && closestConsonantIndex !== -1) {\n        return closestVowel;\n\
  \    }\n    return \"\";\n}\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let result = \"\";\n\
  \    let index = word.length - 1;\n    while (index > 0) {\n        if (vowels.indexOf(word[index])\
  \ > -1) {\n            if (vowels.indexOf(word[index - 1]) > -1) {\n           \
  \     index--;\n            } else {\n                result = word[index];\n  \
  \              break;\n            }\n        }\n        index--;\n    }\n    return\
  \ result;\n}\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    let vowels = \"aeiouAEIOU\";\n    let lastConsonantIndex = -1;\n    let closestVowelIndex\
  \ = -1;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ == -1) {\n            lastConsonantIndex = i;\n            break;\n        }\n\
  \    }\n    for (let i = lastConsonantIndex - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ != -1) {\n            closestVowelIndex = i;\n            break;\n        }\n\
  \    }\n    return closestVowelIndex == -1 ? \"\" : word[closestVowelIndex];\n}\n"
- "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let wordArr = word.split(\"\
  \");\n    let vowelArr = [];\n    for (let i = 0; i < wordArr.length; i++) {\n \
  \       if (vowels.includes(wordArr[i])) {\n            vowelArr.push(wordArr[i]);\n\
  \        }\n    }\n    if (vowelArr.length === 0) {\n        return \"\";\n    }\n\
  \    let vowelIndex = vowelArr.length - 1;\n    let vowel = vowelArr[vowelIndex];\n\
  \    let index = word.lastIndexOf(vowel);\n    if (index === 0) {\n        return\
  \ \"\";\n    }\n    if (index === word.length - 1) {\n        return \"\";\n   \
  \ }\n    if (vowels.includes(word[index - 1]) || vowels.includes(word[index + 1]))\
  \ {\n        return \"\";\n    }\n    return vowel;\n}\n"
- "    const vowels = \"aeiou\";\n    const consonants = \"bcdfghjklmnpqrstvwxyz\"\
  ;\n    let closestVowel = \"\";\n    let closestVowelIndex = word.length;\n    for\
  \ (let i = word.length - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i])\
  \ === -1) {\n            continue;\n        }\n        for (let j = i - 1; j >=\
  \ 0; j--) {\n            if (vowels.indexOf(word[j]) === -1) {\n               \
  \ continue;\n            }\n            if (i - j < closestVowelIndex) {\n     \
  \           closestVowelIndex = i - j;\n                closestVowel = word[j];\n\
  \            }\n            break;\n        }\n    }\n    return closestVowel;\n\
  }\n"
- "    let vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    let wordArr\
  \ = word.split('');\n    let closestVowel = '';\n    let closestVowelIndex = wordArr.length;\n\
  \    for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
  \ !== -1) {\n            if (i < closestVowelIndex) {\n                closestVowel\
  \ = wordArr[i];\n                closestVowelIndex = i;\n            }\n       \
  \ }\n    }\n    return closestVowel;\n}\n"
- "    const vowels = \"aeiou\";\n    let closest = \"\";\n    let closestIndex =\
  \ word.length;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
  \ > -1) {\n            if (i > 0 && i < word.length - 1) {\n                if (vowels.indexOf(word[i\
  \ - 1]) === -1 && vowels.indexOf(word[i + 1]) === -1) {\n                    if\
  \ (i < closestIndex) {\n                        closest = word[i];\n           \
  \             closestIndex = i;\n                    }\n                }\n    \
  \        }\n        }\n    }\n    return closest;\n}\n"
- "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let closest_vowel = \"\";\n    for (let i = word.length - 1; i >= 0; i--)\
  \ {\n        if (consonants.indexOf(word[i]) !== -1) {\n            for (let j =\
  \ i + 1; j < word.length; j++) {\n                if (vowels.indexOf(word[j]) !==\
  \ -1) {\n                    closest_vowel = word[j];\n                    break;\n\
  \                }\n            }\n            break;\n        }\n    }\n    return\
  \ closest_vowel;\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    const vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestVowelIndex\
  \ = word.length;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            if (i < closestVowelIndex) {\n                closestVowel\
  \ = word[i];\n                closestVowelIndex = i;\n            }\n        }\n\
  \    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"\
  ));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let result = \"\";\n    let lastConsonant = \"\";\n    let lastVowel = \"\"\
  ;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i])\
  \ >= 0) {\n            lastConsonant = word[i];\n            if (lastVowel) {\n\
  \                result = lastVowel;\n                break;\n            }\n  \
  \      }\n        if (vowels.indexOf(word[i]) >= 0) {\n            lastVowel = word[i];\n\
  \            if (lastConsonant) {\n                result = lastVowel;\n       \
  \         break;\n            }\n        }\n    }\n    return result;\n}\n"
- "    let vowels = \"aeiou\";\n    let result = \"\";\n    for (let i = word.length\
  \ - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n         \
  \   result = word[i];\n            break;\n        }\n    }\n    return result;\n\
  }\n"
- "  const vowels = ['a', 'e', 'i', 'o', 'u'];\n  const consonants = ['b', 'c', 'd',\
  \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
  \ 'y', 'z'];\n  const wordArr = word.split('');\n  let vowelIndex = 0;\n  let consonantIndex\
  \ = 0;\n  let closestVowel = '';\n  for (let i = wordArr.length - 1; i >= 0; i--)\
  \ {\n    if (vowels.includes(wordArr[i])) {\n      vowelIndex = i;\n      break;\n\
  \    }\n  }\n  for (let i = vowelIndex - 1; i >= 0; i--) {\n    if (consonants.includes(wordArr[i]))\
  \ {\n      consonantIndex = i;\n      break;\n    }\n  }\n  if (vowelIndex > consonantIndex)\
  \ {\n    closestVowel = wordArr[vowelIndex];\n  }\n  return closestVowel;\n}\n\n\
  console.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"\
  ));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));"
- "    let vowels = \"aeiou\";\n    let result = \"\";\n    let index = word.length\
  \ - 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index]) >= 0)\
  \ {\n            result = word[index];\n            break;\n        }\n        index--;\n\
  \    }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));"
- "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestDistance\
  \ = word.length;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ >= 0) {\n            let distance = word.length - i;\n            if (distance\
  \ < closestDistance) {\n                closestDistance = distance;\n          \
  \      closestVowel = word[i];\n            }\n        }\n    }\n    return closestVowel;\n\
  }\n"
- "    let vowels = \"aeiou\";\n    let cons = \"bcdfghjklmnpqrstvwxyz\";\n    let\
  \ result = \"\";\n    let last_cons = \"\";\n    let last_vowel = \"\";\n    for\
  \ (let i = word.length - 1; i >= 0; i--) {\n        if (cons.indexOf(word[i]) >=\
  \ 0) {\n            last_cons = word[i];\n            if (last_vowel) {\n      \
  \          result = last_vowel;\n                break;\n            }\n       \
  \ }\n        if (vowels.indexOf(word[i]) >= 0) {\n            last_vowel = word[i];\n\
  \        }\n    }\n    return result;\n}\n"
- "    let vowels = \"aeiou\";\n    let cons = \"bcdfghjklmnpqrstvwxyz\";\n    let\
  \ closest = \"\";\n    let distance = word.length;\n    for (let i = 0; i < word.length;\
  \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            if (cons.indexOf(word[i\
  \ - 1]) !== -1 && cons.indexOf(word[i + 1]) !== -1) {\n                if (i < distance)\
  \ {\n                    distance = i;\n                    closest = word[i];\n\
  \                }\n            }\n        }\n    }\n    return closest;\n}\n"
- "    let vowels = \"aeiou\";\n    let index = word.length - 1;\n    let result =\
  \ \"\";\n    while (index >= 0) {\n        if (vowels.indexOf(word[index]) !== -1)\
  \ {\n            result = word[index];\n            break;\n        }\n        index--;\n\
  \    }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));"
- "    let vowels = \"aeiou\";\n    let result = \"\";\n    let index = word.length\
  \ - 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index]) != -1)\
  \ {\n            result = word[index];\n            break;\n        }\n        index--;\n\
  \    }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let closestVowel = \"\";\n    let closestVowelIndex = word.length;\n    for\
  \ (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            for (let j = i - 1; j >= 0; j--) {\n                if\
  \ (consonants.indexOf(word[j]) !== -1) {\n                    if (i - j < closestVowelIndex)\
  \ {\n                        closestVowelIndex = i - j;\n                      \
  \  closestVowel = word[i];\n                    }\n                    break;\n\
  \                }\n            }\n        }\n    }\n    return closestVowel;\n\
  }\n"
- "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let result = \"\";\n    let i = word.length - 1;\n    while (i > 0) {\n \
  \       if (consonants.indexOf(word[i]) != -1) {\n            if (vowels.indexOf(word[i\
  \ - 1]) != -1) {\n                result = word[i - 1];\n                break;\n\
  \            }\n        }\n        i--;\n    }\n    return result;\n}\n"
- "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestDistance\
  \ = word.length;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ >= 0) {\n            if (i < closestDistance) {\n                closestDistance\
  \ = i;\n                closestVowel = word[i];\n            }\n        }\n    }\n\
  \    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    let vowels = \"aeiou\";\n    let result = \"\";\n    for (let i = word.length\
  \ - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n         \
  \   result = word[i];\n            break;\n        }\n    }\n    return result;\n\
  }\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"\
  b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
  , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let wordArr\
  \ = word.split(\"\");\n    let vowelIndex = 0;\n    let consonantIndex = 0;\n  \
  \  let vowel = \"\";\n    let consonant = \"\";\n    let result = \"\";\n    for\
  \ (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
  \ > -1) {\n            vowelIndex = i;\n            vowel = wordArr[i];\n      \
  \      break;\n        }\n    }\n    for (let i = vowelIndex - 1; i >= 0; i--) {\n\
  \        if (consonants.indexOf(wordArr[i]) > -1) {\n            consonantIndex\
  \ = i;\n            consonant = wordArr[i];\n            break;\n        }\n   \
  \ }\n    if (consonantIndex > 0) {\n        result = vowel;\n    }\n    return result;\n\
  }\n"
- "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let result = \"\";\n    let vowelIndex = -1;\n    let consonantIndex = -1;\n\
  \    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            vowelIndex = i;\n            break;\n        }\n    }\n\
  \    for (let i = vowelIndex - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i])\
  \ !== -1) {\n            consonantIndex = i;\n            break;\n        }\n  \
  \  }\n    if (vowelIndex !== -1 && consonantIndex !== -1) {\n        result = word[vowelIndex];\n\
  \    }\n    return result;\n}\n"
- "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestDistance\
  \ = word.length;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            if (i === word.length - 1) {\n                return \"\
  \";\n            }\n            if (vowels.indexOf(word[i + 1]) === -1) {\n    \
  \            if (i < closestDistance) {\n                    closestDistance = i;\n\
  \                    closestVowel = word[i];\n                }\n            }\n\
  \        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"\
  yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let closest = \"\";\n    let closestIndex = word.length;\n    for (let i =\
  \ 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n  \
  \          if (consonants.indexOf(word[i - 1]) !== -1 && consonants.indexOf(word[i\
  \ + 1]) !== -1) {\n                if (i < closestIndex) {\n                   \
  \ closest = word[i];\n                    closestIndex = i;\n                }\n\
  \            }\n        }\n    }\n    return closest;\n}\n"
- "    const vowels = \"aeiou\";\n    let closest = \"\";\n    let closestIndex =\
  \ word.length;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            if (i > 0 && i < word.length - 1) {\n                if\
  \ (vowels.indexOf(word[i - 1]) === -1 && vowels.indexOf(word[i + 1]) === -1) {\n\
  \                    if (i < closestIndex) {\n                        closest =\
  \ word[i];\n                        closestIndex = i;\n                    }\n \
  \               }\n            }\n        }\n    }\n    return closest;\n}\n"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result = '';\n    let lastConsonant\
  \ = '';\n    let lastVowel = '';\n    for (let i = word.length - 1; i >= 0; i--)\
  \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            lastVowel = word[i];\n\
  \            if (lastConsonant !== '') {\n                result = lastVowel;\n\
  \                break;\n            }\n        } else {\n            lastConsonant\
  \ = word[i];\n        }\n    }\n    return result;\n}\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let closestVowel = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n\
  \        if (vowels.includes(word[i])) {\n            closestVowel = word[i];\n\
  \            break;\n        }\n    }\n    for (let i = word.length - 1; i >= 0;\
  \ i--) {\n        if (consonants.includes(word[i])) {\n            if (vowels.includes(word[i\
  \ - 1])) {\n                if (word[i - 1] === closestVowel) {\n              \
  \      return closestVowel;\n                }\n            }\n        }\n    }\n\
  \    return \"\";\n}\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants = ['b', 'c', 'd',\
  \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
  \ 'y', 'z'];\n    let result = '';\n    let wordArr = word.split('');\n    let lastConsonantIndex\
  \ = -1;\n    let firstVowelIndex = -1;\n    for (let i = wordArr.length - 1; i >=\
  \ 0; i--) {\n        if (consonants.indexOf(wordArr[i]) > -1) {\n            lastConsonantIndex\
  \ = i;\n            break;\n        }\n    }\n    for (let i = lastConsonantIndex;\
  \ i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i]) > -1) {\n            firstVowelIndex\
  \ = i;\n            break;\n        }\n    }\n    if (firstVowelIndex > -1 && lastConsonantIndex\
  \ > -1) {\n        result = wordArr[firstVowelIndex];\n    }\n    return result;\n\
  }\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let closestVowel = \"\";\n    let closestDistance = word.length;\n    for (let\
  \ i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n\
  \            for (let j = i + 1; j < word.length; j++) {\n                if (consonants.indexOf(word[j])\
  \ !== -1) {\n                    if (j - i < closestDistance) {\n              \
  \          closestDistance = j - i;\n                        closestVowel = word[i];\n\
  \                    }\n                    break;\n                }\n        \
  \    }\n        }\n    }\n    return closestVowel;\n}\n"
- "    const vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestIndex\
  \ = word.length;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ >= 0) {\n            if (i < closestIndex) {\n                closestIndex = i;\n\
  \                closestVowel = word[i];\n            }\n        }\n    }\n    return\
  \ closestVowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let wordArr = word.split(\"\");\n    let result\
  \ = \"\";\n    for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
  \ != -1) {\n            result = wordArr[i];\n            break;\n        }\n  \
  \  }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));"
- "    let vowels = \"aeiou\";\n    let index = word.length - 1;\n    let result =\
  \ \"\";\n    while (index > 0) {\n        if (vowels.indexOf(word[index]) > -1)\
  \ {\n            if (vowels.indexOf(word[index - 1]) == -1) {\n                result\
  \ = word[index];\n                break;\n            }\n        }\n        index--;\n\
  \    }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));"
- "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let wordArr = word.split(\"\
  \");\n    let vowelIndex = 0;\n    let vowel = \"\";\n    for (let i = wordArr.length\
  \ - 1; i >= 0; i--) {\n        if (vowels.includes(wordArr[i])) {\n            vowelIndex\
  \ = i;\n            vowel = wordArr[i];\n            break;\n        }\n    }\n\
  \    if (vowelIndex === 0) {\n        return \"\";\n    }\n    for (let i = vowelIndex\
  \ - 1; i >= 0; i--) {\n        if (!vowels.includes(wordArr[i])) {\n           \
  \ return vowel;\n        }\n    }\n    return \"\";\n}\n\nconsole.log(get_closest_vowel(\"\
  yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));"
- "    const vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestVowelIndex\
  \ = word.length;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            if (i < closestVowelIndex) {\n                closestVowel\
  \ = word[i];\n                closestVowelIndex = i;\n            }\n        }\n\
  \    }\n    return closestVowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let result = \"\";\n    let closest = word.length;\n    for (let i = 0; i <\
  \ word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n         \
  \   for (let j = i + 1; j < word.length; j++) {\n                if (consonants.indexOf(word[j])\
  \ !== -1) {\n                    for (let k = j + 1; k < word.length; k++) {\n \
  \                       if (vowels.indexOf(word[k]) !== -1) {\n                \
  \            if (k - i < closest) {\n                                closest = k\
  \ - i;\n                                result = word[k];\n                    \
  \        }\n                        }\n                    }\n                }\n\
  \            }\n        }\n    }\n    return result;\n}\n"
- "    const vowels = \"aeiou\";\n    const consonants = \"bcdfghjklmnpqrstvwxyz\"\
  ;\n    let closestVowel = \"\";\n    let closestVowelIndex = -1;\n    for (let i\
  \ = word.length - 1; i >= 0; i--) {\n        if (vowels.includes(word[i])) {\n \
  \           closestVowel = word[i];\n            closestVowelIndex = i;\n      \
  \      break;\n        }\n    }\n    if (closestVowelIndex === -1) {\n        return\
  \ \"\";\n    }\n    for (let i = closestVowelIndex - 1; i >= 0; i--) {\n       \
  \ if (consonants.includes(word[i])) {\n            return closestVowel;\n      \
  \  }\n    }\n    return \"\";\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\n\
  console.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"quick\"\
  ));\nconsole.log(get_closest_vowel(\"ab\"));\n"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants = ['b', 'c', 'd',\
  \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
  \ 'y', 'z'];\n    let wordArr = word.split('');\n    let vowelIndex = 0;\n    let\
  \ consonantIndex = 0;\n    let vowel = '';\n    let consonant = '';\n    let closestVowel\
  \ = '';\n    let closestVowelIndex = 0;\n    let closestConsonantIndex = 0;\n  \
  \  let closestConsonant = '';\n    for (let i = 0; i < wordArr.length; i++) {\n\
  \        if (vowels.indexOf(wordArr[i]) > -1) {\n            vowel = wordArr[i];\n\
  \            vowelIndex = i;\n            for (let j = vowelIndex; j < wordArr.length;\
  \ j++) {\n                if (consonants.indexOf(wordArr[j]) > -1) {\n         \
  \           consonant = wordArr[j];\n                    consonantIndex = j;\n \
  \                   if (vowelIndex > closestVowelIndex && consonantIndex > closestConsonantIndex)\
  \ {\n                        closestVowel = vowel;\n                        closestVowelIndex\
  \ = vowelIndex;\n                        closestConsonantIndex = consonantIndex;\n\
  \                        closestConsonant = consonant;\n                    }\n\
  \                }\n            }\n        }\n    }\n    if (closestVowelIndex >\
  \ 0 && closestConsonantIndex > 0) {\n        return closestVowel;\n    } else {\n\
  \        return '';\n    }\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n    \
  \    if (consonants.indexOf(word[i]) > -1) {\n            for (let j = i + 1; j\
  \ < word.length; j++) {\n                if (vowels.indexOf(word[j]) > -1) {\n \
  \                   result = word[j];\n                    break;\n            \
  \    }\n            }\n            break;\n        }\n    }\n    return result;\n\
  }\n"
- "    let vowels = \"aeiou\";\n    let index = word.length - 1;\n    let vowel =\
  \ \"\";\n    while (index >= 0) {\n        if (vowels.indexOf(word[index]) >= 0)\
  \ {\n            vowel = word[index];\n            break;\n        }\n        index--;\n\
  \    }\n    return vowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let cons = \"bcdfghjklmnpqrstvwxyz\";\n    let\
  \ result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (cons.indexOf(word[i])\
  \ != -1) {\n            for (let j = i + 1; j < word.length; j++) {\n          \
  \      if (vowels.indexOf(word[j]) != -1) {\n                    result = word[j];\n\
  \                    break;\n                }\n            }\n            break;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let closestVowel = \"\";\n    let closestDistance = 0;\n    for (let i = word.length\
  \ - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i]) > -1) {\n       \
  \     for (let j = i - 1; j >= 0; j--) {\n                if (vowels.indexOf(word[j])\
  \ > -1) {\n                    if (i - j < closestDistance || closestDistance ===\
  \ 0) {\n                        closestDistance = i - j;\n                     \
  \   closestVowel = word[j];\n                    }\n                    break;\n\
  \                }\n            }\n        }\n    }\n    return closestVowel;\n\
  }\n"
- "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestDistance\
  \ = 0;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ >= 0) {\n            closestVowel = word[i];\n            closestDistance = word.length\
  \ - 1 - i;\n            break;\n        }\n    }\n    for (let i = word.length -\
  \ 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) >= 0) {\n            if\
  \ (word.length - 1 - i < closestDistance) {\n                closestVowel = word[i];\n\
  \                closestDistance = word.length - 1 - i;\n            }\n       \
  \ }\n    }\n    return closestVowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let closestVowel = \"\";\n    let closestIndex = 0;\n    let wordArray = word.split(\"\
  \");\n    for (let i = wordArray.length - 1; i >= 0; i--) {\n        if (vowels.includes(wordArray[i]))\
  \ {\n            if (consonants.includes(wordArray[i - 1]) && consonants.includes(wordArray[i\
  \ + 1])) {\n                closestVowel = wordArray[i];\n                closestIndex\
  \ = i;\n                break;\n            }\n        }\n    }\n    return closestVowel;\n\
  }\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    let vowels = \"aeiou\";\n    let cons = \"bcdfghjklmnpqrstvwxyz\";\n    let\
  \ result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (cons.indexOf(word[i])\
  \ != -1) {\n            for (let j = i + 1; j < word.length; j++) {\n          \
  \      if (vowels.indexOf(word[j]) != -1) {\n                    result = word[j];\n\
  \                    break;\n                }\n            }\n            break;\n\
  \        }\n    }\n    return result;\n}\nconsole.log(get_closest_vowel(\"yogurt\"\
  ));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));\n"
- "    let vowels = \"aeiou\";\n    let wordArr = word.split(\"\");\n    let result\
  \ = \"\";\n    for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
  \ === -1) {\n            for (let j = i; j >= 0; j--) {\n                if (vowels.indexOf(wordArr[j])\
  \ !== -1) {\n                    result = wordArr[j];\n                    break;\n\
  \                }\n            }\n            break;\n        }\n    }\n    return\
  \ result;\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));"
- "    let vowels = \"aeiou\";\n    let cons = \"bcdfghjklmnpqrstvwxyz\";\n    let\
  \ closest = \"\";\n    let distance = word.length;\n    for (let i = word.length\
  \ - 1; i >= 0; i--) {\n        if (cons.indexOf(word[i]) !== -1) {\n           \
  \ for (let j = i + 1; j < word.length; j++) {\n                if (vowels.indexOf(word[j])\
  \ !== -1) {\n                    if (j - i < distance) {\n                     \
  \   distance = j - i;\n                        closest = word[j];\n            \
  \        }\n                }\n            }\n        }\n    }\n    return closest;\n\
  }\n"
- "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestDistance\
  \ = word.length;\n    for (let i = word.length - 1; i >= 0; i--) {\n        let\
  \ letter = word[i];\n        if (vowels.indexOf(letter) > -1) {\n            if\
  \ (i < closestDistance) {\n                closestDistance = i;\n              \
  \  closestVowel = letter;\n            }\n        }\n    }\n    return closestVowel;\n\
  }\n"
- "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let wordArr = word.split(\"\
  \");\n    let closestVowel = \"\";\n    for (let i = wordArr.length - 1; i >= 0;\
  \ i--) {\n        if (vowels.includes(wordArr[i])) {\n            closestVowel =\
  \ wordArr[i];\n            break;\n        }\n    }\n    return closestVowel;\n\
  }\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let closestVowel = \"\";\n    let closestVowelIndex = -1;\n    let closestConsonantIndex\
  \ = -1;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ > -1) {\n            closestVowel = word[i];\n            closestVowelIndex =\
  \ i;\n            break;\n        }\n    }\n    for (let i = closestVowelIndex -\
  \ 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i]) > -1) {\n         \
  \   closestConsonantIndex = i;\n            break;\n        }\n    }\n    if (closestVowelIndex\
  \ > -1 && closestConsonantIndex > -1) {\n        return closestVowel;\n    }\n \
  \   return \"\";\n}\n"
- "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let closestVowel = \"\";\n    for (let i = word.length - 1; i >= 0; i--)\
  \ {\n        if (consonants.indexOf(word[i]) > -1) {\n            for (let j = i\
  \ + 1; j < word.length; j++) {\n                if (vowels.indexOf(word[j]) > -1)\
  \ {\n                    closestVowel = word[j];\n                    break;\n \
  \               }\n            }\n            break;\n        }\n    }\n    return\
  \ closestVowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let result = \"\";\n    let lastConsonant = -1;\n\
  \    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ === -1) {\n            lastConsonant = i;\n            break;\n        }\n   \
  \ }\n    if (lastConsonant === -1) {\n        return result;\n    }\n    for (let\
  \ i = lastConsonant - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !==\
  \ -1) {\n            result = word[i];\n            break;\n        }\n    }\n \
  \   return result;\n}\n"
- "    const vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestDistance\
  \ = word.length;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
  \ >= 0) {\n            if (i > 0 && i < word.length - 1) {\n                if (vowels.indexOf(word[i\
  \ - 1]) < 0 && vowels.indexOf(word[i + 1]) < 0) {\n                    if (i < closestDistance)\
  \ {\n                        closestDistance = i;\n                        closestVowel\
  \ = word[i];\n                    }\n                }\n            }\n        }\n\
  \    }\n    return closestVowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let result = \"\";\n    let index = word.length\
  \ - 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index]) >= 0)\
  \ {\n            result = word[index];\n            break;\n        }\n        index--;\n\
  \    }\n    return result;\n}\n"
- "    let vowels = \"aeiouAEIOU\";\n    let index = word.length - 1;\n    let vowel\
  \ = \"\";\n    let consonant = \"\";\n    while (index >= 0) {\n        if (vowels.indexOf(word[index])\
  \ !== -1) {\n            vowel = word[index];\n            break;\n        }\n \
  \       index--;\n    }\n    index = word.length - 1;\n    while (index >= 0) {\n\
  \        if (vowels.indexOf(word[index]) === -1) {\n            consonant = word[index];\n\
  \            break;\n        }\n        index--;\n    }\n    if (vowel === \"\"\
  \ || consonant === \"\") {\n        return \"\";\n    }\n    return vowel;\n}\n"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result = '';\n    let distance\
  \ = 0;\n    let index = word.length - 1;\n    while (index >= 0) {\n        if (vowels.indexOf(word[index])\
  \ !== -1) {\n            if (distance > 0) {\n                return word[index];\n\
  \            }\n            distance = 0;\n        } else {\n            distance++;\n\
  \        }\n        index--;\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"\
  yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));\n"
- "  let vowels = \"aeiou\";\n  let index = word.length - 1;\n  let result = \"\"\
  ;\n  while (index >= 0) {\n    if (vowels.includes(word[index])) {\n      result\
  \ = word[index];\n      break;\n    }\n    index--;\n  }\n  return result;\n}\n\n\
  console.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"\
  ));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));"
- "    const vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    const consonants =\
  \ [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\",\
  \ \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let\
  \ closestVowel = \"\";\n    let closestVowelIndex = -1;\n    let closestConsonantIndex\
  \ = -1;\n    let closestConsonant = \"\";\n    for (let i = word.length - 1; i >=\
  \ 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            closestVowel\
  \ = word[i];\n            closestVowelIndex = i;\n            break;\n        }\n\
  \    }\n    for (let i = closestVowelIndex - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i])\
  \ !== -1) {\n            closestConsonant = word[i];\n            closestConsonantIndex\
  \ = i;\n            break;\n        }\n    }\n    if (closestVowelIndex === -1 ||\
  \ closestConsonantIndex === -1) {\n        return \"\";\n    }\n    return closestVowel;\n\
  }\n"
- "    let vowels = \"aeiou\";\n    let result = \"\";\n    for (let i = word.length\
  \ - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n         \
  \   result = word[i];\n            break;\n        }\n    }\n    return result;\n\
  }\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestDistance\
  \ = word.length;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ > -1) {\n            if (i < closestDistance) {\n                closestDistance\
  \ = i;\n                closestVowel = word[i];\n            }\n        }\n    }\n\
  \    return closestVowel;\n}\n"
- "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let closestVowel = \"\";\n    let closestDistance = word.length;\n    for\
  \ (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) != -1)\
  \ {\n            let distance = word.length - i;\n            if (distance < closestDistance)\
  \ {\n                closestDistance = distance;\n                closestVowel =\
  \ word[i];\n            }\n        }\n    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"\
  yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));\n"
- "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestDistance\
  \ = word.length;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ > -1) {\n            let distance = word.length - i;\n            if (distance\
  \ < closestDistance) {\n                closestDistance = distance;\n          \
  \      closestVowel = word[i];\n            }\n        }\n    }\n    return closestVowel;\n\
  }\n"
- "    let vowels = \"aeiou\";\n    let vowels_index = [];\n    let consonants_index\
  \ = [];\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            vowels_index.push(i);\n        } else {\n            consonants_index.push(i);\n\
  \        }\n    }\n    for (let i = 0; i < vowels_index.length; i++) {\n       \
  \ for (let j = 0; j < consonants_index.length; j++) {\n            if (vowels_index[i]\
  \ > consonants_index[j]) {\n                return word[vowels_index[i]];\n    \
  \        }\n        }\n    }\n    return \"\";\n}\n\nconsole.log(get_closest_vowel(\"\
  yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));\n"
- "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n  \
  \      if (consonants.indexOf(word[i]) > -1) {\n            for (let j = i + 1;\
  \ j < word.length; j++) {\n                if (vowels.indexOf(word[j]) > -1) {\n\
  \                    result = word[j];\n                    break;\n           \
  \     }\n            }\n            break;\n        }\n    }\n    return result;\n\
  }\n"
- "    let vowels = \"aeiou\";\n    let wordArr = word.split(\"\");\n    let result\
  \ = \"\";\n    let vowelIndex = 0;\n    let vowelCount = 0;\n    for (let i = wordArr.length\
  \ - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i]) >= 0) {\n        \
  \    vowelIndex = i;\n            vowelCount++;\n        }\n        if (vowelCount\
  \ === 2) {\n            result = wordArr[vowelIndex];\n            break;\n    \
  \    }\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"\
  ));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));\n"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants = ['b', 'c', 'd',\
  \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
  \ 'y', 'z'];\n    let wordArr = word.split('');\n    let vowelIndex = 0;\n    let\
  \ consonantIndex = 0;\n    let vowel = '';\n    let consonant = '';\n    let closestVowel\
  \ = '';\n    let closestVowelIndex = 0;\n    let closestConsonantIndex = 0;\n  \
  \  for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
  \ !== -1) {\n            vowel = wordArr[i];\n            vowelIndex = i;\n    \
  \        for (let j = vowelIndex - 1; j >= 0; j--) {\n                if (consonants.indexOf(wordArr[j])\
  \ !== -1) {\n                    consonant = wordArr[j];\n                    consonantIndex\
  \ = j;\n                    if (vowelIndex - consonantIndex < closestVowelIndex\
  \ - closestConsonantIndex) {\n                        closestVowel = vowel;\n  \
  \                      closestVowelIndex = vowelIndex;\n                       \
  \ closestConsonantIndex = consonantIndex;\n                    }\n             \
  \       break;\n                }\n            }\n        }\n    }\n    return closestVowel;\n\
  }\n"
- "    let vowels = \"aeiouAEIOU\";\n    let index = word.length - 1;\n    while (index\
  \ > 0) {\n        if (vowels.indexOf(word[index]) > -1) {\n            if (vowels.indexOf(word[index\
  \ - 1]) > -1) {\n                index--;\n            } else {\n              \
  \  return word[index];\n            }\n        }\n        index--;\n    }\n    return\
  \ \"\";\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let closestVowel = \"\";\n    let closestVowelIndex = word.length;\n    for\
  \ (let i = word.length - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i])\
  \ !== -1) {\n            for (let j = i + 1; j < word.length; j++) {\n         \
  \       if (vowels.indexOf(word[j]) !== -1) {\n                    if (j < closestVowelIndex)\
  \ {\n                        closestVowelIndex = j;\n                        closestVowel\
  \ = word[j];\n                    }\n                }\n            }\n        }\n\
  \    }\n    return closestVowel;\n}\n"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants = ['b', 'c', 'd',\
  \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
  \ 'y', 'z'];\n    let result = '';\n    let index = 0;\n    for (let i = word.length\
  \ - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n         \
  \   index = i;\n            break;\n        }\n    }\n    if (index === 0) {\n \
  \       return result;\n    }\n    for (let i = index - 1; i >= 0; i--) {\n    \
  \    if (consonants.indexOf(word[i]) !== -1) {\n            result = word[index];\n\
  \            break;\n        }\n    }\n    return result;\n}\n"
- "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let distance = 0;\n\
  \    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            if (distance === 0) {\n                closestVowel = word[i];\n\
  \                distance = 1;\n            } else {\n                if (distance\
  \ === 1) {\n                    return closestVowel;\n                }\n      \
  \          distance++;\n            }\n        } else {\n            distance++;\n\
  \        }\n    }\n    return \"\";\n}\n"
- "    let vowels = \"aeiouAEIOU\";\n    let cons = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let closestVowel = \"\";\n    let closestVowelIndex = 0;\n    let closestConsIndex\
  \ = 0;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            closestVowel = word[i];\n            closestVowelIndex\
  \ = i;\n            break;\n        }\n    }\n    for (let i = closestVowelIndex\
  \ - 1; i >= 0; i--) {\n        if (cons.indexOf(word[i]) !== -1) {\n           \
  \ closestConsIndex = i;\n            break;\n        }\n    }\n    if (closestVowelIndex\
  \ - closestConsIndex === 1) {\n        return closestVowel;\n    } else {\n    \
  \    return \"\";\n    }\n}\n"
- "    let vowels = \"aeiouAEIOU\";\n    let index = word.length - 1;\n    while (index\
  \ > 0) {\n        if (vowels.indexOf(word[index]) !== -1) {\n            if (vowels.indexOf(word[index\
  \ - 1]) === -1) {\n                return word[index];\n            }\n        }\n\
  \        index--;\n    }\n    return \"\";\n}\n"
- "    let vowels = \"aeiou\";\n    let cons = \"bcdfghjklmnpqrstvwxyz\";\n    let\
  \ result = \"\";\n    let closest = word.length;\n    for (let i = 0; i < word.length;\
  \ i++) {\n        if (vowels.indexOf(word[i]) >= 0) {\n            if (cons.indexOf(word[i\
  \ - 1]) >= 0 && cons.indexOf(word[i + 1]) >= 0) {\n                if (i < closest)\
  \ {\n                    closest = i;\n                    result = word[i];\n \
  \               }\n            }\n        }\n    }\n    return result;\n}\n"
- "    let vowels = \"aeiouAEIOU\";\n    let cons = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let closestVowel = \"\";\n    let closestDistance = word.length;\n    for\
  \ (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1)\
  \ {\n            for (let j = i + 1; j < word.length; j++) {\n                if\
  \ (cons.indexOf(word[j]) !== -1) {\n                    if (j - i < closestDistance)\
  \ {\n                        closestDistance = j - i;\n                        closestVowel\
  \ = word[i];\n                    }\n                    break;\n              \
  \  }\n            }\n        }\n    }\n    return closestVowel;\n}\n"
- "    let vowels = \"aeiouAEIOU\";\n    let cons = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n  \
  \      if (cons.indexOf(word[i]) !== -1) {\n            for (let j = i + 1; j <\
  \ word.length; j++) {\n                if (vowels.indexOf(word[j]) !== -1) {\n \
  \                   result = word[j];\n                    break;\n            \
  \    }\n            }\n            break;\n        }\n    }\n    return result;\n\
  }\n"
- "    let vowels = \"aeiou\";\n    let result = \"\";\n    let lastConsonant = -1;\n\
  \    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ === -1) {\n            lastConsonant = i;\n            break;\n        }\n   \
  \ }\n    if (lastConsonant === -1) {\n        return result;\n    }\n    for (let\
  \ i = lastConsonant - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !==\
  \ -1) {\n            result = word[i];\n            break;\n        }\n    }\n \
  \   return result;\n}\n"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants = ['b', 'c', 'd',\
  \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
  \ 'y', 'z'];\n    let result = '';\n    let wordArr = word.split('');\n    for (let\
  \ i = wordArr.length - 1; i >= 0; i--) {\n        if (consonants.indexOf(wordArr[i])\
  \ > -1) {\n            for (let j = i; j >= 0; j--) {\n                if (vowels.indexOf(wordArr[j])\
  \ > -1) {\n                    result = wordArr[j];\n                    break;\n\
  \                }\n            }\n            break;\n        }\n    }\n    return\
  \ result;\n}\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let closestVowel = \"\";\n    let closestIndex = word.length;\n    for (let\
  \ i = word.length - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i]) >\
  \ -1) {\n            for (let j = i; j >= 0; j--) {\n                if (vowels.indexOf(word[j])\
  \ > -1) {\n                    if (i - j < closestIndex) {\n                   \
  \     closestIndex = i - j;\n                        closestVowel = word[j];\n \
  \                   }\n                    break;\n                }\n         \
  \   }\n        }\n    }\n    return closestVowel;\n}\n"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let result = '';\n    let distance\
  \ = word.length;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            if (i > 0 && vowels.indexOf(word[i - 1]) === -1) {\n  \
  \              if (i < distance) {\n                    distance = i;\n        \
  \            result = word[i];\n                }\n            }\n        }\n  \
  \  }\n    return result;\n}\n"
- "    let vowels = \"aeiou\";\n    let cons = \"bcdfghjklmnpqrstvwxyz\";\n    let\
  \ result = \"\";\n    let lastCons = -1;\n    let firstVowel = -1;\n    for (let\
  \ i = word.length - 1; i >= 0; i--) {\n        if (cons.indexOf(word[i]) > -1) {\n\
  \            lastCons = i;\n            break;\n        }\n    }\n    for (let i\
  \ = lastCons - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) > -1) {\n\
  \            firstVowel = i;\n            break;\n        }\n    }\n    if (firstVowel\
  \ > -1) {\n        result = word[firstVowel];\n    }\n    return result;\n}\n"
- "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n  \
  \      if (consonants.indexOf(word[i]) != -1) {\n            for (let j = i - 1;\
  \ j >= 0; j--) {\n                if (vowels.indexOf(word[j]) != -1) {\n       \
  \             result = word[j];\n                    break;\n                }\n\
  \            }\n            break;\n        }\n    }\n    return result;\n}\n"
- "    let vowels = \"aeiou\";\n    let cons = \"bcdfghjklmnpqrstvwxyz\";\n    let\
  \ wordArr = word.split(\"\");\n    let vowelIndex = -1;\n    let consIndex = -1;\n\
  \    for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
  \ > -1) {\n            vowelIndex = i;\n        }\n        if (cons.indexOf(wordArr[i])\
  \ > -1) {\n            consIndex = i;\n        }\n        if (vowelIndex > -1 &&\
  \ consIndex > -1) {\n            return wordArr[vowelIndex];\n        }\n    }\n\
  \    return \"\";\n}\n"
- "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestDistance\
  \ = word.length;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            if (i < closestDistance) {\n                closestDistance\
  \ = i;\n                closestVowel = word[i];\n            }\n        }\n    }\n\
  \    return closestVowel;\n}\n"
- "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"\
  b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
  , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let wordArr\
  \ = word.split(\"\");\n    let vowelIndex = 0;\n    for (let i = wordArr.length\
  \ - 1; i >= 0; i--) {\n        if (consonants.indexOf(wordArr[i]) > -1) {\n    \
  \        vowelIndex = i;\n            break;\n        }\n    }\n    for (let i =\
  \ vowelIndex; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i]) > -1) {\n \
  \           return wordArr[i];\n        }\n    }\n    return \"\";\n}\n"
- "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"\
  b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
  , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let wordArray\
  \ = word.split(\"\");\n    let result = \"\";\n    for (let i = wordArray.length\
  \ - 1; i >= 0; i--) {\n        if (consonants.indexOf(wordArray[i]) !== -1) {\n\
  \            for (let j = i; j >= 0; j--) {\n                if (vowels.indexOf(wordArray[j])\
  \ !== -1) {\n                    result = wordArray[j];\n                    break;\n\
  \                }\n            }\n            break;\n        }\n    }\n    return\
  \ result;\n}\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let result = \"\";\n    let index = word.length - 1;\n    while (index >= 0)\
  \ {\n        if (consonants.indexOf(word[index]) >= 0) {\n            if (index\
  \ > 0 && vowels.indexOf(word[index - 1]) >= 0) {\n                result = word[index\
  \ - 1];\n                break;\n            }\n            else if (index > 1 &&\
  \ vowels.indexOf(word[index - 2]) >= 0) {\n                result = word[index -\
  \ 2];\n                break;\n            }\n        }\n        index--;\n    }\n\
  \    return result;\n}\n"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants = ['b', 'c', 'd',\
  \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
  \ 'y', 'z'];\n    let wordArr = word.split('');\n    let vowelIndex = 0;\n    let\
  \ consonantIndex = 0;\n    let closestVowel = '';\n    let closestVowelIndex = 0;\n\
  \    let closestConsonantIndex = 0;\n    for (let i = wordArr.length - 1; i >= 0;\
  \ i--) {\n        if (vowels.indexOf(wordArr[i]) !== -1) {\n            vowelIndex\
  \ = i;\n            for (let j = vowelIndex - 1; j >= 0; j--) {\n              \
  \  if (consonants.indexOf(wordArr[j]) !== -1) {\n                    consonantIndex\
  \ = j;\n                    if (vowelIndex - consonantIndex < closestVowelIndex\
  \ - closestConsonantIndex || closestVowelIndex === 0) {\n                      \
  \  closestVowelIndex = vowelIndex;\n                        closestConsonantIndex\
  \ = consonantIndex;\n                        closestVowel = wordArr[vowelIndex];\n\
  \                    }\n                    break;\n                }\n        \
  \    }\n        }\n    }\n    return closestVowel;\n}\n"
- "    const vowels = \"aeiou\";\n    const consonants = \"bcdfghjklmnpqrstvwxyz\"\
  ;\n    let closest = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n \
  \       if (consonants.includes(word[i])) {\n            for (let j = i + 1; j <\
  \ word.length; j++) {\n                if (vowels.includes(word[j])) {\n       \
  \             closest = word[j];\n                    break;\n                }\n\
  \            }\n            break;\n        }\n    }\n    return closest;\n}\n"
- "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let closestVowel = \"\";\n    let lastConsonant = \"\";\n    let lastVowel\
  \ = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i])\
  \ !== -1) {\n            lastConsonant = word[i];\n            if (lastVowel !==\
  \ \"\") {\n                closestVowel = lastVowel;\n                break;\n \
  \           }\n        }\n        if (vowels.indexOf(word[i]) !== -1) {\n      \
  \      lastVowel = word[i];\n        }\n    }\n    return closestVowel;\n}\n"
- "    let vowels = 'aeiouAEIOU';\n    let cons = 'bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ';\n\
  \    let result = '';\n    let min = word.length;\n    for (let i = 0; i < word.length;\
  \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            let j = i -\
  \ 1;\n            let k = i + 1;\n            while (j >= 0 && cons.indexOf(word[j])\
  \ !== -1) {\n                j--;\n            }\n            while (k < word.length\
  \ && cons.indexOf(word[k]) !== -1) {\n                k++;\n            }\n    \
  \        if (k - j - 1 < min) {\n                min = k - j - 1;\n            \
  \    result = word[i];\n            }\n        }\n    }\n    return result;\n}\n\
  console.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"\
  ));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let closestVowel = \"\";\n    let closestIndex = word.length;\n    for (let\
  \ i = word.length - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i]) >\
  \ -1) {\n            for (let j = i; j >= 0; j--) {\n                if (vowels.indexOf(word[j])\
  \ > -1) {\n                    if (i - j < closestIndex) {\n                   \
  \     closestIndex = i - j;\n                        closestVowel = word[j];\n \
  \                   }\n                    break;\n                }\n         \
  \   }\n        }\n    }\n    return closestVowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let index = word.length - 1;\n    let result =\
  \ \"\";\n    while (index >= 0) {\n        if (vowels.indexOf(word[index]) >= 0)\
  \ {\n            result = word[index];\n            break;\n        }\n        index--;\n\
  \    }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    let vowels = \"aeiouAEIOU\";\n    let cons = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n  \
  \      if (cons.indexOf(word[i]) != -1) {\n            for (let j = i + 1; j < word.length;\
  \ j++) {\n                if (vowels.indexOf(word[j]) != -1) {\n               \
  \     result = word[j];\n                    break;\n                }\n       \
  \     }\n            break;\n        }\n    }\n    return result;\n}\n"
- "    let vowels = 'aeiou';\n    let index = word.length - 1;\n    let result = '';\n\
  \    while (index > 0) {\n        if (vowels.indexOf(word[index]) >= 0) {\n    \
  \        if (vowels.indexOf(word[index - 1]) < 0) {\n                result = word[index];\n\
  \                break;\n            }\n        }\n        index--;\n    }\n   \
  \ return result;\n}\n"
- "    let vowels = \"aeiou\";\n    let result = \"\";\n    for (let i = word.length\
  \ - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) >= 0) {\n           \
  \ result = word[i];\n            break;\n        }\n    }\n    return result;\n\
  }\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    const vowels = \"aeiou\";\n    let result = \"\";\n    let min = word.length;\n\
  \    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            if (i < min) {\n                min = i;\n            \
  \    result = word[i];\n            }\n        }\n    }\n    return result;\n}\n"
- "  let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n  let wordArr = word.split(\"\
  \");\n  let closestVowel = \"\";\n  let vowelIndex = 0;\n  let vowelDistance = 0;\n\
  \  let closestVowelDistance = 0;\n  for (let i = wordArr.length - 1; i >= 0; i--)\
  \ {\n    if (vowels.includes(wordArr[i])) {\n      vowelIndex = i;\n      vowelDistance\
  \ = wordArr.length - 1 - vowelIndex;\n      if (vowelDistance > closestVowelDistance)\
  \ {\n        closestVowelDistance = vowelDistance;\n        closestVowel = wordArr[i];\n\
  \      }\n    }\n  }\n  return closestVowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let result = \"\";\n    let closest = word.length;\n\
  \    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            if (i > 0 && i < word.length - 1) {\n                if\
  \ (vowels.indexOf(word[i - 1]) === -1 && vowels.indexOf(word[i + 1]) === -1) {\n\
  \                    if (i < closest) {\n                        closest = i;\n\
  \                        result = word[i];\n                    }\n            \
  \    }\n            }\n        }\n    }\n    return result;\n}\n"
- "    const vowels = \"aeiouAEIOU\";\n    const consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let closestVowel = \"\";\n    let closestIndex = word.length;\n    for (let\
  \ i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1)\
  \ {\n            if (consonants.indexOf(word[i - 1]) !== -1 && consonants.indexOf(word[i\
  \ + 1]) !== -1) {\n                if (i < closestIndex) {\n                   \
  \ closestIndex = i;\n                    closestVowel = word[i];\n             \
  \   }\n            }\n        }\n    }\n    return closestVowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestDistance\
  \ = word.length;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ >= 0) {\n            if (i > 0 && vowels.indexOf(word[i - 1]) < 0) {\n       \
  \         if (i < closestDistance) {\n                    closestDistance = i;\n\
  \                    closestVowel = word[i];\n                }\n            }\n\
  \        }\n    }\n    return closestVowel;\n}\n"
- "    let vowels = \"aeiouAEIOU\";\n    let cons = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let closest = \"\";\n    let closest_distance = word.length;\n    for (let\
  \ i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) != -1) {\n\
  \            if (cons.indexOf(word[i - 1]) != -1 && cons.indexOf(word[i + 1]) !=\
  \ -1) {\n                if (i < closest_distance) {\n                    closest_distance\
  \ = i;\n                    closest = word[i];\n                }\n            }\n\
  \        }\n    }\n    return closest;\n}\n"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let cons = ['b', 'c', 'd', 'f',\
  \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
  \ 'z'];\n    let result = '';\n    for (let i = word.length - 1; i >= 0; i--) {\n\
  \        if (vowels.indexOf(word[i]) !== -1) {\n            result = word[i];\n\
  \            break;\n        }\n    }\n    if (result === '') {\n        return\
  \ result;\n    }\n    for (let i = word.indexOf(result) - 1; i >= 0; i--) {\n  \
  \      if (cons.indexOf(word[i]) !== -1) {\n            return result;\n       \
  \ }\n    }\n    return '';\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
  FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    let vowels = \"aeiou\";\n    let index = word.length - 1;\n    while (index\
  \ > 0) {\n        if (vowels.indexOf(word[index]) !== -1) {\n            if (vowels.indexOf(word[index\
  \ - 1]) === -1) {\n                return word[index];\n            }\n        }\n\
  \        index--;\n    }\n    return \"\";\n}\n\nconsole.log(get_closest_vowel(\"\
  yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));\n"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants = ['b', 'c', 'd',\
  \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
  \ 'y', 'z'];\n    let wordArr = word.split('');\n    let result = '';\n    for (let\
  \ i = wordArr.length - 1; i >= 0; i--) {\n        if (consonants.indexOf(wordArr[i])\
  \ > -1) {\n            for (let j = i - 1; j >= 0; j--) {\n                if (vowels.indexOf(wordArr[j])\
  \ > -1) {\n                    result = wordArr[j];\n                    break;\n\
  \                }\n            }\n            break;\n        }\n    }\n    return\
  \ result;\n}\n"
- "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"\
  b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
  , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let wordArr\
  \ = word.split(\"\");\n    let vowelIndex = -1;\n    let consonantIndex = -1;\n\
  \    for (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
  \ !== -1) {\n            vowelIndex = i;\n        }\n        if (consonants.indexOf(wordArr[i])\
  \ !== -1) {\n            consonantIndex = i;\n            break;\n        }\n  \
  \  }\n    if (vowelIndex === -1 || consonantIndex === -1) {\n        return \"\"\
  ;\n    }\n    return wordArr[vowelIndex];\n}\n\nconsole.log(get_closest_vowel(\"\
  yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants = ['b', 'c', 'd',\
  \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
  \ 'y', 'z'];\n    let wordArr = word.split('');\n    let result = '';\n    let vowelIndex\
  \ = 0;\n    let consonantIndex = 0;\n    for (let i = wordArr.length - 1; i >= 0;\
  \ i--) {\n        if (vowels.indexOf(wordArr[i]) !== -1) {\n            vowelIndex\
  \ = i;\n            break;\n        }\n    }\n    for (let i = vowelIndex - 1; i\
  \ >= 0; i--) {\n        if (consonants.indexOf(wordArr[i]) !== -1) {\n         \
  \   consonantIndex = i;\n            break;\n        }\n    }\n    if (consonantIndex\
  \ === 0) {\n        return result;\n    }\n    return wordArr[vowelIndex];\n}\n\n\
  console.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"\
  ));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));"
- "    let vowels = \"aeiou\";\n    let wordArr = word.split(\"\");\n    let vowelIndex\
  \ = -1;\n    let vowel = \"\";\n    for (let i = wordArr.length - 1; i >= 0; i--)\
  \ {\n        if (vowels.indexOf(wordArr[i]) > -1) {\n            vowelIndex = i;\n\
  \            vowel = wordArr[i];\n            break;\n        }\n    }\n    if (vowelIndex\
  \ === -1) {\n        return \"\";\n    }\n    for (let i = vowelIndex - 1; i >=\
  \ 0; i--) {\n        if (vowels.indexOf(wordArr[i]) === -1) {\n            return\
  \ vowel;\n        }\n    }\n    return \"\";\n}\n\nconsole.log(get_closest_vowel(\"\
  yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));\n"
- "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestDistance\
  \ = word.length;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            if (i > 0 && vowels.indexOf(word[i - 1]) === -1) {\n  \
  \              if (word.length - i < closestDistance) {\n                    closestDistance\
  \ = word.length - i;\n                    closestVowel = word[i];\n            \
  \    }\n            }\n        }\n    }\n    return closestVowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let closestVowel = \"\";\n    let closestDistance = word.length;\n    for (let\
  \ i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) > -1) {\n\
  \            let distance = 0;\n            let j = i;\n            while (j < word.length\
  \ && consonants.indexOf(word[j]) > -1) {\n                distance++;\n        \
  \        j++;\n            }\n            if (distance < closestDistance) {\n  \
  \              closestDistance = distance;\n                closestVowel = word[i];\n\
  \            }\n        }\n    }\n    return closestVowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let cons = \"bcdfghjklmnpqrstvwxyz\";\n    let\
  \ result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (cons.indexOf(word[i])\
  \ >= 0) {\n            for (let j = i + 1; j < word.length; j++) {\n           \
  \     if (vowels.indexOf(word[j]) >= 0) {\n                    result = word[j];\n\
  \                    break;\n                }\n            }\n            break;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let vowels = \"aeiou\";\n    let index = word.length - 1;\n    while (index\
  \ >= 0) {\n        if (vowels.indexOf(word[index]) >= 0) {\n            if (index\
  \ > 0 && vowels.indexOf(word[index - 1]) < 0) {\n                return word[index];\n\
  \            }\n            if (index < word.length - 1 && vowels.indexOf(word[index\
  \ + 1]) < 0) {\n                return word[index];\n            }\n        }\n\
  \        index--;\n    }\n    return \"\";\n}\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let result = \"\";\n    let index = word.length - 1;\n    while (index >= 0)\
  \ {\n        if (consonants.indexOf(word[index]) > -1) {\n            if (index\
  \ > 0 && vowels.indexOf(word[index - 1]) > -1) {\n                result = word[index\
  \ - 1];\n                break;\n            }\n            else if (index > 1 &&\
  \ vowels.indexOf(word[index - 2]) > -1) {\n                result = word[index -\
  \ 2];\n                break;\n            }\n        }\n        index--;\n    }\n\
  \    return result;\n}\n"
- "    let vowels = \"aeiou\";\n    let result = \"\";\n    let closest = word.length;\n\
  \    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
  \ !== -1) {\n            if (i > 0 && i < word.length - 1) {\n                if\
  \ (vowels.indexOf(word[i - 1]) === -1 && vowels.indexOf(word[i + 1]) === -1) {\n\
  \                    if (i < closest) {\n                        closest = i;\n\
  \                        result = word[i];\n                    }\n            \
  \    }\n            }\n        }\n    }\n    return result;\n}\n"
- "    let vowels = \"aeiou\";\n    let closest = \"\";\n    let min = Number.MAX_VALUE;\n\
  \    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
  \ != -1) {\n            let distance = word.length - i;\n            if (distance\
  \ < min) {\n                min = distance;\n                closest = word[i];\n\
  \            }\n        }\n    }\n    return closest;\n}\n"
- "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"\
  b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
  , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let wordArray\
  \ = word.split(\"\");\n    let vowelIndex = -1;\n    let consonantIndex = -1;\n\
  \    let closestVowel = \"\";\n    for (let i = wordArray.length - 1; i >= 0; i--)\
  \ {\n        if (vowels.indexOf(wordArray[i]) > -1) {\n            vowelIndex =\
  \ i;\n        }\n        if (consonants.indexOf(wordArray[i]) > -1) {\n        \
  \    consonantIndex = i;\n            break;\n        }\n    }\n    if (vowelIndex\
  \ > -1 && consonantIndex > -1 && vowelIndex > consonantIndex) {\n        closestVowel\
  \ = wordArray[vowelIndex];\n    }\n    return closestVowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let index = -1;\n    for (let i = word.length\
  \ - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) > -1) {\n           \
  \ index = i;\n            break;\n        }\n    }\n    if (index === -1) {\n  \
  \      return \"\";\n    }\n    for (let i = index - 1; i >= 0; i--) {\n       \
  \ if (vowels.indexOf(word[i]) === -1) {\n            return word[index];\n     \
  \   }\n    }\n    return \"\";\n}\n"
- "    const vowels = \"aeiou\";\n    const consonants = \"bcdfghjklmnpqrstvwxyz\"\
  ;\n    let closestVowel = \"\";\n    let closestVowelIndex = 0;\n    let closestConsonantIndex\
  \ = 0;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.includes(word[i]))\
  \ {\n            closestVowel = word[i];\n            closestVowelIndex = i;\n \
  \           break;\n        }\n    }\n    for (let i = closestVowelIndex - 1; i\
  \ >= 0; i--) {\n        if (consonants.includes(word[i])) {\n            closestConsonantIndex\
  \ = i;\n            break;\n        }\n    }\n    return closestConsonantIndex >\
  \ 0 ? closestVowel : \"\";\n}\n"
- "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let wordArr = word.split(\"\
  \");\n    let vowelIndex = -1;\n    let vowel = \"\";\n    for (let i = wordArr.length\
  \ - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i]) !== -1) {\n      \
  \      vowelIndex = i;\n            vowel = wordArr[i];\n            break;\n  \
  \      }\n    }\n    if (vowelIndex === -1) {\n        return \"\";\n    }\n   \
  \ for (let i = vowelIndex - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
  \ === -1) {\n            return vowel;\n        }\n    }\n    return \"\";\n}\n\n\
  console.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"\
  ));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
  ab\"));\n"
- "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
  \    let result = \"\";\n    let index = word.length - 1;\n    while (index > 0)\
  \ {\n        if (consonants.indexOf(word[index]) > -1) {\n            if (vowels.indexOf(word[index\
  \ - 1]) > -1) {\n                result = word[index - 1];\n                break;\n\
  \            }\n        }\n        index--;\n    }\n    return result;\n}\n\nconsole.log(get_closest_vowel(\"\
  yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));\n"
- "    let vowels = \"aeiou\";\n    let wordArr = word.split(\"\");\n    let vowelIndex\
  \ = -1;\n    let vowel = \"\";\n    for (let i = wordArr.length - 1; i >= 0; i--)\
  \ {\n        if (vowels.indexOf(wordArr[i]) >= 0) {\n            vowelIndex = i;\n\
  \            vowel = wordArr[i];\n            break;\n        }\n    }\n    if (vowelIndex\
  \ === -1) {\n        return \"\";\n    }\n    for (let i = vowelIndex - 1; i >=\
  \ 0; i--) {\n        if (vowels.indexOf(wordArr[i]) === -1) {\n            return\
  \ vowel;\n        }\n    }\n    return \"\";\n}\n\nconsole.log(get_closest_vowel(\"\
  yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));"
- "    const vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestDistance\
  \ = word.length;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
  \ >= 0) {\n            let distance = word.length - i;\n            if (distance\
  \ < closestDistance) {\n                closestDistance = distance;\n          \
  \      closestVowel = word[i];\n            }\n        }\n    }\n    return closestVowel;\n\
  }\n"
- "    let vowels = \"aeiouAEIOU\";\n    let closestVowel = \"\";\n    let closestDistance\
  \ = word.length;\n    for (let i = 0; i < word.length; i++) {\n        let currentVowel\
  \ = word[i];\n        if (vowels.indexOf(currentVowel) != -1) {\n            let\
  \ distance = word.length - i;\n            if (distance < closestDistance) {\n \
  \               closestDistance = distance;\n                closestVowel = currentVowel;\n\
  \            }\n        }\n    }\n    return closestVowel;\n}\n"
- "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestVowelIndex\
  \ = word.length;\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
  \ > -1) {\n            closestVowel = word[i];\n            closestVowelIndex =\
  \ i;\n            break;\n        }\n    }\n    for (let i = closestVowelIndex -\
  \ 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) > -1) {\n            return\
  \ \"\";\n        }\n    }\n    return closestVowel;\n}\n"
- "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let result = \"\";\n\
  \    let wordArr = word.split(\"\");\n    let wordArrReverse = wordArr.reverse();\n\
  \    let wordReverse = wordArrReverse.join(\"\");\n    let wordReverseArr = wordReverse.split(\"\
  \");\n    for (let i = 0; i < wordReverseArr.length; i++) {\n        if (vowels.includes(wordReverseArr[i]))\
  \ {\n            if (vowels.includes(wordReverseArr[i + 1]) || vowels.includes(wordReverseArr[i\
  \ - 1])) {\n                continue;\n            } else {\n                result\
  \ = wordReverseArr[i];\n                break;\n            }\n        }\n    }\n\
  \    return result;\n}\n"
- "    const vowels = \"aeiou\";\n    const consonants = \"bcdfghjklmnpqrstvwxyz\"\
  ;\n    let closestVowel = \"\";\n    let closestVowelIndex = word.length;\n    for\
  \ (let i = word.length - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i])\
  \ > -1) {\n            for (let j = i + 1; j < word.length; j++) {\n           \
  \     if (vowels.indexOf(word[j]) > -1) {\n                    if (j < closestVowelIndex)\
  \ {\n                        closestVowelIndex = j;\n                        closestVowel\
  \ = word[j];\n                    }\n                }\n            }\n        }\n\
  \    }\n    return closestVowel;\n}\n\nconsole.log(get_closest_vowel(\"yogurt\"\
  ));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));"
- "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"\
  b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
  , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let result\
  \ = \"\";\n    let wordArray = word.split(\"\");\n    for (let i = wordArray.length\
  \ - 1; i >= 0; i--) {\n        if (consonants.indexOf(wordArray[i]) > -1) {\n  \
  \          for (let j = i - 1; j >= 0; j--) {\n                if (vowels.indexOf(wordArray[j])\
  \ > -1) {\n                    result = wordArray[j];\n                    break;\n\
  \                }\n            }\n            break;\n        }\n    }\n    return\
  \ result;\n}\n"
- "    let vowels = \"aeiou\";\n    let index = word.length - 1;\n    while (index\
  \ >= 0) {\n        if (vowels.indexOf(word[index]) !== -1) {\n            if (index\
  \ === 0) {\n                return \"\";\n            }\n            if (vowels.indexOf(word[index\
  \ - 1]) === -1) {\n                return word[index];\n            }\n        }\n\
  \        index--;\n    }\n    return \"\";\n}\n\nconsole.log(get_closest_vowel(\"\
  yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));\n"
- "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let wordArr = word.split('');\n\
  \    let result = '';\n    let vowelIndex = 0;\n    let vowelCount = 0;\n    for\
  \ (let i = wordArr.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i])\
  \ !== -1) {\n            vowelIndex = i;\n            vowelCount++;\n        }\n\
  \        if (vowelCount === 2) {\n            result = wordArr[vowelIndex];\n  \
  \          break;\n        }\n    }\n    return result;\n}\n"
- "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
  ;\n    let closestVowel = \"\";\n    let vowelIndex = 0;\n    let consonantIndex\
  \ = 0;\n    let wordLength = word.length;\n    for (let i = wordLength - 1; i >=\
  \ 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            vowelIndex\
  \ = i;\n            break;\n        }\n    }\n    for (let i = vowelIndex - 1; i\
  \ >= 0; i--) {\n        if (consonants.indexOf(word[i]) !== -1) {\n            consonantIndex\
  \ = i;\n            break;\n        }\n    }\n    if (consonantIndex === 0) {\n\
  \        return \"\";\n    }\n    return word[vowelIndex];\n}\n\nconsole.log(get_closest_vowel(\"\
  yogurt\"));\nconsole.log(get_closest_vowel(\"FULL\"));\nconsole.log(get_closest_vowel(\"\
  quick\"));\nconsole.log(get_closest_vowel(\"ab\"));"
language: ts
name: HumanEval_118_get_closest_vowel
prompt: "//You are given a word. Your task is to find the closest vowel that stands\
  \ between \n// two consonants from the right side of the word (case sensitive).\n\
  // Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n// find any vowel met the above condition. \n// You may assume that the\
  \ given string contains English letter only.\n// Example:\n// get_closest_vowel(\"\
  yogurt\") ==> \"u\"\n// get_closest_vowel(\"FULL\") ==> \"U\"\n// get_closest_vowel(\"\
  quick\") ==> \"\"\n// get_closest_vowel(\"ab\") ==> \"\"\nfunction get_closest_vowel(word:\
  \ string): string {\n"
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
  yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
  easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
  ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
  most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
  ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
  anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
  Above\"),\"o\");\n}\n\ntest();"

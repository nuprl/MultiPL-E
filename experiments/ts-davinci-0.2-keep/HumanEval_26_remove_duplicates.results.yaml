language: ts
name: HumanEval_26_remove_duplicates
results:
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, self) => self.indexOf(value) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp9acczg7_.js:13:12)\n    at Object.<anonymous> (/tmp/tmp9acczg7_.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcqiqgu4i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcqiqgu4i.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const uniqueNumbers: number[] = [];\n    numbers.forEach(function (number)\
    \ {\n        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfg1pfp3v.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfg1pfp3v.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    numbers.forEach(function (number) {\n\
    \        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp0yyxm3lv.js:19:12)\n    at Object.<anonymous> (/tmp/tmp0yyxm3lv.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcqiqgu4i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcqiqgu4i.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg11rp_sl.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg11rp_sl.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp_i6rblem.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_i6rblem.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp_i6rblem.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_i6rblem.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp_i6rblem.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_i6rblem.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((number, index) => numbers.indexOf(number) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmph36p03dg.js:13:12)\n    at Object.<anonymous> (/tmp/tmph36p03dg.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcqiqgu4i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcqiqgu4i.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg11rp_sl.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg11rp_sl.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const uniqueNumbers: number[] = [];\n    numbers.forEach(function (number)\
    \ {\n        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfg1pfp3v.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfg1pfp3v.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg11rp_sl.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg11rp_sl.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    numbers.forEach(function (number)\
    \ {\n        if (unique_numbers.indexOf(number) === -1) {\n            unique_numbers.push(number);\n\
    \        }\n    });\n    return unique_numbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpp18qqu6o.js:19:12)\n    at Object.<anonymous> (/tmp/tmpp18qqu6o.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    numbers.forEach(function (number) {\n\
    \        if (result.indexOf(number) === -1) {\n            result.push(number);\n\
    \        }\n    });\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpw5dvydhx.js:19:12)\n    at Object.<anonymous> (/tmp/tmpw5dvydhx.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 2
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    let uniqueNumbersMap: Map<number,\
    \ number> = new Map();\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   if (uniqueNumbersMap.has(numbers[i])) {\n            uniqueNumbersMap.set(numbers[i],\
    \ uniqueNumbersMap.get(numbers[i]) + 1);\n        } else {\n            uniqueNumbersMap.set(numbers[i],\
    \ 1);\n        }\n    }\n    uniqueNumbersMap.forEach((value, key) => {\n    \
    \    if (value === 1) {\n            uniqueNumbers.push(key);\n        }\n   \
    \ });\n    return uniqueNumbers;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplsy0b1d8.ts(7,27): error TS2583: Cannot find name
    ''Map''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmplsy0b1d8.ts(7,53): error TS2583: Cannot find name ''Map''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp_i6rblem.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_i6rblem.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(number => {\n\
    \        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmptsy87j1m.js:19:12)\n    at Object.<anonymous> (/tmp/tmptsy87j1m.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpbqwscghu.js:20:12)\n    at Object.<anonymous> (/tmp/tmpbqwscghu.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    numbers.forEach(function (value) {\n\
    \        if (unique.indexOf(value) === -1) {\n            unique.push(value);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp48juavew.js:19:12)\n    at Object.<anonymous> (/tmp/tmp48juavew.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg11rp_sl.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg11rp_sl.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    let unique: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpt0rnt0fb.js:21:12)\n    at Object.<anonymous> (/tmp/tmpt0rnt0fb.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, array) => array.indexOf(value) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp215maf2j.js:13:12)\n    at Object.<anonymous> (/tmp/tmp215maf2j.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    numbers.forEach(function (number) {\n\
    \        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp0yyxm3lv.js:19:12)\n    at Object.<anonymous> (/tmp/tmp0yyxm3lv.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    let unique: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpt0rnt0fb.js:21:12)\n    at Object.<anonymous> (/tmp/tmpt0rnt0fb.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp_i6rblem.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_i6rblem.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const uniqueNumbers: number[] = [];\n    numbers.forEach(function (number)\
    \ {\n        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfg1pfp3v.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfg1pfp3v.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const unique_numbers: number[] = [];\n    for (let i: number = 0; i <\
    \ numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1)\
    \ {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n    return\
    \ unique_numbers;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp7rn63ioa.js:19:12)\n    at Object.<anonymous> (/tmp/tmp7rn63ioa.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp_i6rblem.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_i6rblem.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        let found = false;\n        for (let j = 0; j < result.length; j++)\
    \ {\n            if (numbers[i] === result[j]) {\n                found = true;\n\
    \                break;\n            }\n        }\n        if (!found) {\n   \
    \         result.push(numbers[i]);\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpnn9h2sb3.js:26:12)\n    at Object.<anonymous> (/tmp/tmpnn9h2sb3.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 0
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (numbers.indexOf(numbers[i]) === numbers.lastIndexOf(numbers[i]))\
    \ {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 3, 4 ]

    '
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg11rp_sl.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg11rp_sl.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((v, i) => numbers.indexOf(v) === i);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp2dle4333.js:13:12)\n    at Object.<anonymous> (/tmp/tmp2dle4333.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcqiqgu4i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcqiqgu4i.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let number of numbers) {\n\
    \        if (unique_numbers.indexOf(number) === -1) {\n            unique_numbers.push(number);\n\
    \        }\n    }\n    return unique_numbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp68iqdxax.js:20:12)\n    at Object.<anonymous> (/tmp/tmp68iqdxax.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        let found = false;\n        for (let j = 0; j < result.length; j++)\
    \ {\n            if (numbers[i] === result[j]) {\n                found = true;\n\
    \                break;\n            }\n        }\n        if (!found) {\n   \
    \         result.push(numbers[i]);\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpnn9h2sb3.js:26:12)\n    at Object.<anonymous> (/tmp/tmpnn9h2sb3.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcqiqgu4i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcqiqgu4i.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpmbtesa5v.js:20:12)\n    at Object.<anonymous> (/tmp/tmpmbtesa5v.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 2
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    let unique_numbers_set: Set<number>\
    \ = new Set();\n    for (let number of numbers) {\n        if (!unique_numbers_set.has(number))\
    \ {\n            unique_numbers_set.add(number);\n            unique_numbers.push(number);\n\
    \        }\n    }\n    return unique_numbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfmqe_qf2.ts(7,29): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpfmqe_qf2.ts(7,47): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function (number)\
    \ {\n        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpjv53j7ru.js:19:12)\n    at Object.<anonymous> (/tmp/tmpjv53j7ru.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp_i6rblem.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_i6rblem.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcqiqgu4i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcqiqgu4i.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    let temp: number[] = [];\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        if (temp.indexOf(numbers[i]) ===\
    \ -1) {\n            temp.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp3e4esm26.js:21:12)\n    at Object.<anonymous> (/tmp/tmp3e4esm26.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    numbers.forEach(function (value) {\n\
    \        if (unique.indexOf(value) === -1) {\n            unique.push(value);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp48juavew.js:19:12)\n    at Object.<anonymous> (/tmp/tmp48juavew.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp_i6rblem.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_i6rblem.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 2
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(number => {\n\
    \        if (!uniqueNumbers.includes(number)) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg3bs8xag.ts(8,28): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg11rp_sl.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg11rp_sl.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, self) => {\n        return self.indexOf(value)\
    \ === index;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmptt376x0q.js:15:12)\n    at Object.<anonymous> (/tmp/tmptt376x0q.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp_i6rblem.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_i6rblem.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp_i6rblem.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_i6rblem.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 0
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        let count = 0;\n        for (let j = 0; j < numbers.length; j++)\
    \ {\n            if (numbers[i] === numbers[j]) {\n                count++;\n\
    \            }\n        }\n        if (count === 1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    numbers.forEach(function (value) {\n\
    \        if (unique.indexOf(value) === -1) {\n            unique.push(value);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp48juavew.js:19:12)\n    at Object.<anonymous> (/tmp/tmp48juavew.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, self) => {\n        return self.indexOf(value)\
    \ === index;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmptt376x0q.js:15:12)\n    at Object.<anonymous> (/tmp/tmptt376x0q.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, self) => self.indexOf(value) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp9acczg7_.js:13:12)\n    at Object.<anonymous> (/tmp/tmp9acczg7_.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcqiqgu4i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcqiqgu4i.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    numbers.forEach(function (value) {\n\
    \        if (result.indexOf(value) === -1) {\n            result.push(value);\n\
    \        }\n    });\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpktdzz95m.js:19:12)\n    at Object.<anonymous> (/tmp/tmpktdzz95m.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((number, index) => numbers.indexOf(number) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmph36p03dg.js:13:12)\n    at Object.<anonymous> (/tmp/tmph36p03dg.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, self) => {\n        return self.indexOf(value)\
    \ === index;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmptt376x0q.js:15:12)\n    at Object.<anonymous> (/tmp/tmptt376x0q.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg11rp_sl.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg11rp_sl.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    numbers.forEach(function (number) {\n\
    \        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp0yyxm3lv.js:19:12)\n    at Object.<anonymous> (/tmp/tmp0yyxm3lv.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcqiqgu4i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcqiqgu4i.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const uniqueNumbers: number[] = [];\n    numbers.forEach(function (number)\
    \ {\n        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfg1pfp3v.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfg1pfp3v.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpbqwscghu.js:20:12)\n    at Object.<anonymous> (/tmp/tmpbqwscghu.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpjkn6e_d2.js:20:12)\n    at Object.<anonymous> (/tmp/tmpjkn6e_d2.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function (number)\
    \ {\n        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpjv53j7ru.js:19:12)\n    at Object.<anonymous> (/tmp/tmpjv53j7ru.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n  \
    \      if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpolcvcm2r.js:19:12)\n    at Object.<anonymous> (/tmp/tmpolcvcm2r.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcqiqgu4i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcqiqgu4i.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpjkn6e_d2.js:20:12)\n    at Object.<anonymous> (/tmp/tmpjkn6e_d2.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    let unique: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpt0rnt0fb.js:21:12)\n    at Object.<anonymous> (/tmp/tmpt0rnt0fb.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) == -1) {\n          \
    \  unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpjjmqsm2l.js:19:12)\n    at Object.<anonymous> (/tmp/tmpjjmqsm2l.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738418
- exit_code: 0
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (numbers.indexOf(numbers[i]) === numbers.lastIndexOf(numbers[i]))\
    \ {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcqiqgu4i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcqiqgu4i.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    numbers.forEach(function (value) {\n\
    \        if (unique.indexOf(value) === -1) {\n            unique.push(value);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp48juavew.js:19:12)\n    at Object.<anonymous> (/tmp/tmp48juavew.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    let unique: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpt0rnt0fb.js:21:12)\n    at Object.<anonymous> (/tmp/tmpt0rnt0fb.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 0
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        let is_duplicate: boolean = false;\n        for (let j = 0; j < numbers.length;\
    \ j++) {\n            if (numbers[i] === numbers[j] && i !== j) {\n          \
    \      is_duplicate = true;\n            }\n        }\n        if (!is_duplicate)\
    \ {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    numbers.forEach(function (value) {\n\
    \        if (unique.indexOf(value) === -1) {\n            unique.push(value);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp48juavew.js:19:12)\n    at Object.<anonymous> (/tmp/tmp48juavew.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg11rp_sl.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg11rp_sl.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, self) => self.indexOf(value) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp9acczg7_.js:13:12)\n    at Object.<anonymous> (/tmp/tmp9acczg7_.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcqiqgu4i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcqiqgu4i.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpbqwscghu.js:20:12)\n    at Object.<anonymous> (/tmp/tmpbqwscghu.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpbqwscghu.js:20:12)\n    at Object.<anonymous> (/tmp/tmpbqwscghu.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcqiqgu4i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcqiqgu4i.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp_i6rblem.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_i6rblem.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, array) => array.indexOf(value) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp215maf2j.js:13:12)\n    at Object.<anonymous> (/tmp/tmp215maf2j.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg11rp_sl.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg11rp_sl.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) == -1) {\n          \
    \  unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpjjmqsm2l.js:19:12)\n    at Object.<anonymous> (/tmp/tmpjjmqsm2l.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcqiqgu4i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcqiqgu4i.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg11rp_sl.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg11rp_sl.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg11rp_sl.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg11rp_sl.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg11rp_sl.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg11rp_sl.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcqiqgu4i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcqiqgu4i.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp_i6rblem.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_i6rblem.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) == -1) {\n          \
    \  unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp05qlybwx.js:19:12)\n    at Object.<anonymous> (/tmp/tmp05qlybwx.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp_i6rblem.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_i6rblem.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, self) => self.indexOf(value) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp9acczg7_.js:13:12)\n    at Object.<anonymous> (/tmp/tmp9acczg7_.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    numbers.forEach(function (number)\
    \ {\n        if (unique_numbers.indexOf(number) === -1) {\n            unique_numbers.push(number);\n\
    \        }\n    });\n    return unique_numbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpp18qqu6o.js:19:12)\n    at Object.<anonymous> (/tmp/tmpp18qqu6o.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    let unique: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpt0rnt0fb.js:21:12)\n    at Object.<anonymous> (/tmp/tmpt0rnt0fb.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    numbers.forEach(function (number) {\n\
    \        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp0yyxm3lv.js:19:12)\n    at Object.<anonymous> (/tmp/tmp0yyxm3lv.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg11rp_sl.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg11rp_sl.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    let unique: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpt0rnt0fb.js:21:12)\n    at Object.<anonymous> (/tmp/tmpt0rnt0fb.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp_i6rblem.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_i6rblem.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg11rp_sl.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg11rp_sl.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg11rp_sl.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg11rp_sl.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp58spuzh4.js:20:12)\n    at Object.<anonymous> (/tmp/tmp58spuzh4.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659738418
- exit_code: 0
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (numbers.indexOf(numbers[i]) === numbers.lastIndexOf(numbers[i]))\
    \ {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, self) => self.indexOf(value) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp9acczg7_.js:13:12)\n    at Object.<anonymous> (/tmp/tmp9acczg7_.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp_i6rblem.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_i6rblem.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) == -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp0oypf5n8.js:19:12)\n    at Object.<anonymous> (/tmp/tmp0oypf5n8.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    numbers.forEach(function (value) {\n\
    \        if (unique.indexOf(value) === -1) {\n            unique.push(value);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp48juavew.js:19:12)\n    at Object.<anonymous> (/tmp/tmp48juavew.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    numbers.forEach(function (number) {\n\
    \        if (result.indexOf(number) === -1) {\n            result.push(number);\n\
    \        }\n    });\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpw5dvydhx.js:19:12)\n    at Object.<anonymous> (/tmp/tmpw5dvydhx.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcqiqgu4i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcqiqgu4i.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpbqwscghu.js:20:12)\n    at Object.<anonymous> (/tmp/tmpbqwscghu.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcqiqgu4i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcqiqgu4i.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg11rp_sl.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg11rp_sl.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(number => {\n\
    \        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmptsy87j1m.js:19:12)\n    at Object.<anonymous> (/tmp/tmptsy87j1m.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcqiqgu4i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcqiqgu4i.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    numbers.forEach(function (value) {\n\
    \        if (result.indexOf(value) === -1) {\n            result.push(value);\n\
    \        }\n    });\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpktdzz95m.js:19:12)\n    at Object.<anonymous> (/tmp/tmpktdzz95m.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    numbers.forEach(function (value) {\n\
    \        if (result.indexOf(value) === -1) {\n            result.push(value);\n\
    \        }\n    });\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpktdzz95m.js:19:12)\n    at Object.<anonymous> (/tmp/tmpktdzz95m.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg11rp_sl.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg11rp_sl.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, self) => self.indexOf(value) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp9acczg7_.js:13:12)\n    at Object.<anonymous> (/tmp/tmp9acczg7_.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, array) => array.indexOf(value) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp215maf2j.js:13:12)\n    at Object.<anonymous> (/tmp/tmp215maf2j.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp_i6rblem.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_i6rblem.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcqiqgu4i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcqiqgu4i.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    numbers.forEach(function (number) {\n\
    \        if (result.indexOf(number) === -1) {\n            result.push(number);\n\
    \        }\n    });\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpw5dvydhx.js:19:12)\n    at Object.<anonymous> (/tmp/tmpw5dvydhx.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfihx42jd.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfihx42jd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp_i6rblem.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_i6rblem.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4b7y2jgo.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4b7y2jgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpuj2xoipo.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuj2xoipo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    numbers.forEach(function (value) {\n\
    \        if (unique.indexOf(value) === -1) {\n            unique.push(value);\n\
    \        }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp48juavew.js:19:12)\n    at Object.<anonymous> (/tmp/tmp48juavew.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const result: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpk6c8zuc3.js:19:12)\n    at Object.<anonymous> (/tmp/tmpk6c8zuc3.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738418
- exit_code: 1
  program: "//From a list of integers, remove all elements that occur more than once.\n\
    // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcqiqgu4i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcqiqgu4i.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738416

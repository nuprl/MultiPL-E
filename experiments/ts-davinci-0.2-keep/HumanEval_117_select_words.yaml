name: HumanEval_117_select_words
language: humaneval_to_typescript.py
prompt: "//Given a string s and a natural number n, you have been tasked to implement\
  \ \n// a function that returns a list of all words from string s that contain exactly\
  \ \n// n consonants, in order these words appear in the string s.\n// If the string\
  \ s is empty then the function should return an empty list.\n// Note: you may assume\
  \ the input string contains only letters and spaces.\n// Examples:\n// select_words(\"\
  Mary had a little lamb\", 4) ==> [\"little\"]\n// select_words(\"Mary had a little\
  \ lamb\", 3) ==> [\"Mary\", \"lamb\"]\n// select_words(\"simple white space\", 2)\
  \ ==> []\n// select_words(\"Hello world\", 4) ==> [\"world\"]\n// select_words(\"\
  Uncle sam\", 3) ==> [\"Uncle\"]\nfunction select_words(s: string, n: number): string[]\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = select_words;\n  assert.deepEqual(candidate(\"Mary\
  \ had a little lamb\", 4),[\"little\"]);\n  assert.deepEqual(candidate(\"Mary had\
  \ a little lamb\", 3),[\"Mary\", \"lamb\"]);\n  assert.deepEqual(candidate(\"simple\
  \ white space\", 2),[]);\n  assert.deepEqual(candidate(\"Hello world\", 4),[\"world\"\
  ]);\n  assert.deepEqual(candidate(\"Uncle sam\", 3),[\"Uncle\"]);\n  assert.deepEqual(candidate(\"\
  \", 4),[]);\n  assert.deepEqual(candidate(\"a b c d e f\", 1),[\"b\", \"c\", \"\
  d\", \"f\"]);\n}\n\ntest();"
completions: ["    let words = s.split(' ');\n    let result = [];\n    for (let i\
    \ = 0; i < words.length; i++) {\n        let word = words[i];\n        let count\
    \ = 0;\n        for (let j = 0; j < word.length; j++) {\n            if (isConsonant(word[j]))\
    \ {\n                count++;\n            }\n        }\n        if (count ===\
    \ n) {\n            result.push(word);\n        }\n    }\n    return result;\n\
    }\n", "    let result: string[] = [];\n    let words: string[] = s.split(\" \"\
    );\n    for (let word of words) {\n        let consonants: number = 0;\n     \
    \   for (let i: number = 0; i < word.length; i++) {\n            if (word[i] !=\
    \ \"a\" && word[i] != \"e\" && word[i] != \"i\" && word[i] != \"o\" && word[i]\
    \ != \"u\") {\n                consonants++;\n            }\n        }\n     \
    \   if (consonants == n) {\n            result.push(word);\n        }\n    }\n\
    \    return result;\n}\n\nconsole.log(select_words(\"Mary had a little lamb\"\
    , 4));\nconsole.log(select_words(\"Mary had a little lamb\", 3));\nconsole.log(select_words(\"\
    simple white space\", 2));\nconsole.log(select_words(\"Hello world\", 4));\nconsole.log(select_words(\"\
    Uncle sam\", 3));", "    let words = s.split(\" \");\n    let result = [];\n \
    \   for (let i = 0; i < words.length; i++) {\n        if (count_consonants(words[i])\
    \ === n) {\n            result.push(words[i]);\n        }\n    }\n    return result;\n\
    }\n", "    let words = s.split(' ');\n    let result = [];\n    for (let word\
    \ of words) {\n        let consonants = 0;\n        for (let i = 0; i < word.length;\
    \ i++) {\n            if (isConsonant(word[i])) {\n                consonants++;\n\
    \            }\n        }\n        if (consonants === n) {\n            result.push(word);\n\
    \        }\n    }\n    return result;\n}\n", "    let words = s.split(\" \");\n\
    \    let result = [];\n    for (let word of words) {\n        let consonants =\
    \ 0;\n        for (let letter of word) {\n            if (isConsonant(letter))\
    \ {\n                consonants++;\n            }\n        }\n        if (consonants\
    \ === n) {\n            result.push(word);\n        }\n    }\n    return result;\n\
    }\n", "    let words = s.split(\" \");\n    let result = [];\n    for (let word\
    \ of words) {\n        let consonants = 0;\n        for (let i = 0; i < word.length;\
    \ i++) {\n            if (word[i] != \"a\" && word[i] != \"e\" && word[i] != \"\
    i\" && word[i] != \"o\" && word[i] != \"u\") {\n                consonants++;\n\
    \            }\n        }\n        if (consonants == n) {\n            result.push(word);\n\
    \        }\n    }\n    return result;\n}\n", "    let words = s.split(\" \");\n\
    \    let result = [];\n    for (let word of words) {\n        let consonants =\
    \ 0;\n        for (let letter of word) {\n            if (isConsonant(letter))\
    \ {\n                consonants++;\n            }\n        }\n        if (consonants\
    \ === n) {\n            result.push(word);\n        }\n    }\n    return result;\n\
    }\n", "    let result: string[] = [];\n    let words = s.split(\" \");\n    for\
    \ (let i = 0; i < words.length; i++) {\n        let word = words[i];\n       \
    \ let consonants = 0;\n        for (let j = 0; j < word.length; j++) {\n     \
    \       if (isConsonant(word[j])) {\n                consonants++;\n         \
    \   }\n        }\n        if (consonants === n) {\n            result.push(word);\n\
    \        }\n    }\n    return result;\n}\n", "    let words = s.split(' ');\n\
    \    let result = [];\n    for (let word of words) {\n        let consonants =\
    \ 0;\n        for (let letter of word) {\n            if (letter.toLowerCase()\
    \ != 'a' && letter.toLowerCase() != 'e' && letter.toLowerCase() != 'i' && letter.toLowerCase()\
    \ != 'o' && letter.toLowerCase() != 'u') {\n                consonants++;\n  \
    \          }\n        }\n        if (consonants == n) {\n            result.push(word);\n\
    \        }\n    }\n    return result;\n}\n", "    let words = s.split(\" \");\n\
    \    let result = [];\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\
    \    for (let i = 0; i < words.length; i++) {\n        let count = 0;\n      \
    \  for (let j = 0; j < words[i].length; j++) {\n            if (!vowels.includes(words[i][j]))\
    \ {\n                count++;\n            }\n        }\n        if (count ===\
    \ n) {\n            result.push(words[i]);\n        }\n    }\n    return result;\n\
    }\n", "    let words = s.split(' ');\n    let result = [];\n    for (let word\
    \ of words) {\n        let consonants = 0;\n        for (let letter of word) {\n\
    \            if (letter.toLowerCase() != 'a' && letter.toLowerCase() != 'e' &&\
    \ letter.toLowerCase() != 'i' && letter.toLowerCase() != 'o' && letter.toLowerCase()\
    \ != 'u') {\n                consonants++;\n            }\n        }\n       \
    \ if (consonants == n) {\n            result.push(word);\n        }\n    }\n \
    \   return result;\n}\n\nconsole.log(select_words(\"Mary had a little lamb\",\
    \ 4));\nconsole.log(select_words(\"Mary had a little lamb\", 3));\nconsole.log(select_words(\"\
    simple white space\", 2));\nconsole.log(select_words(\"Hello world\", 4));\nconsole.log(select_words(\"\
    Uncle sam\", 3));", "    let words = s.split(\" \");\n    let result = [];\n \
    \   for (let word of words) {\n        let consonants = 0;\n        for (let i\
    \ = 0; i < word.length; i++) {\n            if (word[i] !== \"a\" && word[i] !==\
    \ \"e\" && word[i] !== \"i\" && word[i] !== \"o\" && word[i] !== \"u\") {\n  \
    \              consonants++;\n            }\n        }\n        if (consonants\
    \ === n) {\n            result.push(word);\n        }\n    }\n    return result;\n\
    }\n", "    let words = s.split(' ');\n    let result = [];\n    for (let i = 0;\
    \ i < words.length; i++) {\n        let word = words[i];\n        let count =\
    \ 0;\n        for (let j = 0; j < word.length; j++) {\n            if (isConsonant(word[j]))\
    \ {\n                count++;\n            }\n        }\n        if (count ===\
    \ n) {\n            result.push(word);\n        }\n    }\n    return result;\n\
    }\n", "    let words = s.split(' ');\n    let result = [];\n    for (let i = 0;\
    \ i < words.length; i++) {\n        let word = words[i];\n        let consonants\
    \ = 0;\n        for (let j = 0; j < word.length; j++) {\n            if (!isVowel(word[j]))\
    \ {\n                consonants++;\n            }\n        }\n        if (consonants\
    \ === n) {\n            result.push(word);\n        }\n    }\n    return result;\n\
    }\n", "    let words = s.split(' ');\n    let result = [];\n    for (let word\
    \ of words) {\n        let count = 0;\n        for (let char of word) {\n    \
    \        if (isConsonant(char)) {\n                count++;\n            }\n \
    \       }\n        if (count === n) {\n            result.push(word);\n      \
    \  }\n    }\n    return result;\n}\n", "    let words = s.split(\" \");\n    let\
    \ result = [];\n    for (let word of words) {\n        let count = 0;\n      \
    \  for (let char of word) {\n            if (char.match(/[^aeiou]/i)) {\n    \
    \            count++;\n            }\n        }\n        if (count === n) {\n\
    \            result.push(word);\n        }\n    }\n    return result;\n}\n", " \
    \   let words = s.split(\" \");\n    let result = [];\n    for (let word of words)\
    \ {\n        let count = 0;\n        for (let i = 0; i < word.length; i++) {\n\
    \            if (isConsonant(word[i])) {\n                count++;\n         \
    \   }\n        }\n        if (count === n) {\n            result.push(word);\n\
    \        }\n    }\n    return result;\n}\n", "    const vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    let words = s.split(' ');\n    let result = [];\n    for (let\
    \ i = 0; i < words.length; i++) {\n        let count = 0;\n        for (let j\
    \ = 0; j < words[i].length; j++) {\n            if (!vowels.includes(words[i][j]))\
    \ {\n                count++;\n            }\n        }\n        if (count ===\
    \ n) {\n            result.push(words[i]);\n        }\n    }\n    return result;\n\
    }\n", "    let arr = s.split(' ');\n    let result = [];\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (countConsonants(arr[i]) === n) {\n     \
    \       result.push(arr[i]);\n        }\n    }\n    return result;\n}\n", "  \
    \  let words = s.split(' ');\n    let result = [];\n    for (let i = 0; i < words.length;\
    \ i++) {\n        let word = words[i];\n        let consonants = 0;\n        for\
    \ (let j = 0; j < word.length; j++) {\n            let char = word[j];\n     \
    \       if (char != 'a' && char != 'e' && char != 'i' && char != 'o' && char !=\
    \ 'u') {\n                consonants++;\n            }\n        }\n        if\
    \ (consonants == n) {\n            result.push(word);\n        }\n    }\n    return\
    \ result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

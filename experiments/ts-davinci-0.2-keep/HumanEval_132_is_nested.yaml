completions:
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
  \ === '[') {\n            count++;\n        } else if (string[i] === ']') {\n  \
  \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
  \        }\n    }\n    return count === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));\n"
- "    let stack = [];\n    for (let i = 0; i < string.length; i++) {\n        if\
  \ (string[i] === '[') {\n            stack.push(string[i]);\n        } else {\n\
  \            if (stack.length === 0) {\n                return false;\n        \
  \    } else {\n                stack.pop();\n            }\n        }\n    }\n \
  \   return stack.length === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let count: number = 0;\n    for (let i: number = 0; i < string.length; i++)\
  \ {\n        if (string[i] === \"[\") {\n            count++;\n        } else if\
  \ (string[i] === \"]\") {\n            count--;\n        }\n        if (count <\
  \ 0) {\n            return false;\n        }\n    }\n    return count === 0;\n}\n"
- "    let stack = [];\n    for (let i = 0; i < string.length; i++) {\n        if\
  \ (string[i] === '[') {\n            stack.push(string[i]);\n        } else {\n\
  \            if (stack.length === 0) {\n                return false;\n        \
  \    } else {\n                stack.pop();\n            }\n        }\n    }\n \
  \   return stack.length === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let counter: number = 0;\n    for (let i: number = 0; i < string.length; i++)\
  \ {\n        if (string[i] === '[') {\n            counter++;\n        } else if\
  \ (string[i] === ']') {\n            counter--;\n        }\n        if (counter\
  \ < 0) {\n            return false;\n        }\n    }\n    return counter === 0;\n\
  }\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === \"[\") {\n            stack.push(string[i]);\n      \
  \  } else {\n            if (stack.length === 0) {\n                return false;\n\
  \            } else {\n                stack.pop();\n            }\n        }\n\
  \    }\n    return stack.length === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    let result: boolean = false;\n    for (let i:\
  \ number = 0; i < string.length; i++) {\n        if (string[i] === '[') {\n    \
  \        stack.push(string[i]);\n        } else if (string[i] === ']') {\n     \
  \       if (stack.length > 0) {\n                stack.pop();\n                result\
  \ = true;\n            } else {\n                result = false;\n            }\n\
  \        }\n    }\n    return result;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));\n"
- "    let stack = [];\n    for (let i = 0; i < string.length; i++) {\n        if\
  \ (string[i] === '[') {\n            stack.push(string[i]);\n        } else {\n\
  \            if (stack.length > 0) {\n                stack.pop();\n           \
  \ } else {\n                return false;\n            }\n        }\n    }\n   \
  \ return stack.length === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i: number = 0; i < string.length; i++)\
  \ {\n        if (string[i] === '[') {\n            stack.push(string[i]);\n    \
  \    } else if (string[i] === ']') {\n            if (stack.length === 0) {\n  \
  \              return false;\n            } else {\n                stack.pop();\n\
  \            }\n        }\n    }\n    return stack.length === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack = [];\n    for (let i = 0; i < string.length; i++) {\n        if\
  \ (string[i] === '[') {\n            stack.push(string[i]);\n        } else {\n\
  \            if (stack.length === 0) {\n                return false;\n        \
  \    } else {\n                stack.pop();\n            }\n        }\n    }\n \
  \   return stack.length === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let count: number = 0;\n    for (let i: number = 0; i < string.length; i++)\
  \ {\n        if (string[i] === '[') {\n            count++;\n        } else if (string[i]\
  \ === ']') {\n            count--;\n        }\n        if (count < 0) {\n      \
  \      return false;\n        }\n    }\n    return count === 0;\n}\n\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let counter: number = 0;\n    for (let i = 0; i < string.length; i++) {\n \
  \       if (string[i] === \"[\") {\n            counter++;\n        } else if (string[i]\
  \ === \"]\") {\n            counter--;\n        }\n        if (counter < 0) {\n\
  \            return false;\n        }\n    }\n    return counter === 0;\n}\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === \"[\") {\n            stack.push(string[i]);\n      \
  \  } else {\n            if (stack.length === 0) {\n                return false;\n\
  \            } else {\n                stack.pop();\n            }\n        }\n\
  \    }\n    return stack.length === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack = [];\n    for (let i = 0; i < string.length; i++) {\n        if\
  \ (string[i] === '[') {\n            stack.push(string[i]);\n        } else {\n\
  \            if (stack.length === 0) {\n                return false;\n        \
  \    } else {\n                stack.pop();\n            }\n        }\n    }\n \
  \   return stack.length === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
  \ === '[') {\n            count++;\n        } else if (string[i] === ']') {\n  \
  \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
  \        }\n    }\n    return count === 0;\n}\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === \"[\") {\n            stack.push(string[i]);\n      \
  \  } else {\n            if (stack.length === 0) {\n                return false;\n\
  \            } else {\n                stack.pop();\n            }\n        }\n\
  \    }\n    return stack.length === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
  \ === '[') {\n            count++;\n        } else if (string[i] === ']') {\n  \
  \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
  \        }\n    }\n    return count === 0;\n}\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
  \ === '[') {\n            count++;\n        } else if (string[i] === ']') {\n  \
  \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
  \        }\n    }\n    return count === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length > 0) {\n                stack.pop();\n  \
  \          } else {\n                return false;\n            }\n        }\n \
  \   }\n    return stack.length === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let isNested: boolean = false;\n    let bracketStack: string[] = [];\n    for\
  \ (let i = 0; i < string.length; i++) {\n        if (string[i] === '[') {\n    \
  \        bracketStack.push(string[i]);\n        } else if (string[i] === ']') {\n\
  \            if (bracketStack.length > 0) {\n                bracketStack.pop();\n\
  \                isNested = true;\n            } else {\n                isNested\
  \ = false;\n                break;\n            }\n        }\n    }\n    return\
  \ isNested;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
  \ === '[') {\n            count++;\n        } else if (string[i] === ']') {\n  \
  \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
  \        }\n    }\n    return count === 0;\n}\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack = [];\n    for (let i = 0; i < string.length; i++) {\n        if\
  \ (string[i] === '[') {\n            stack.push(string[i]);\n        } else {\n\
  \            if (stack.length === 0) {\n                return false;\n        \
  \    } else {\n                stack.pop();\n            }\n        }\n    }\n \
  \   return stack.length === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === \"[\") {\n            stack.push(string[i]);\n      \
  \  } else {\n            if (stack.length === 0) {\n                return false;\n\
  \            } else {\n                stack.pop();\n            }\n        }\n\
  \    }\n    return stack.length === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack = [];\n    for (let i = 0; i < string.length; i++) {\n        if\
  \ (string[i] === '[') {\n            stack.push(string[i]);\n        } else {\n\
  \            if (stack.length === 0) {\n                return false;\n        \
  \    } else {\n                stack.pop();\n            }\n        }\n    }\n \
  \   return stack.length === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));\n"
- "    let count: number = 0;\n    for (let i = 0; i < string.length; i++) {\n   \
  \     if (string[i] === '[') {\n            count++;\n        } else if (string[i]\
  \ === ']') {\n            count--;\n        }\n        if (count < 0) {\n      \
  \      return false;\n        }\n    }\n    return count === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let count: number = 0;\n    for (let i: number = 0; i < string.length; i++)\
  \ {\n        if (string[i] === '[') {\n            count++;\n        } else if (string[i]\
  \ === ']') {\n            count--;\n        }\n        if (count < 0) {\n      \
  \      return false;\n        }\n    }\n    return count === 0;\n}\n\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let counter: number = 0;\n    for (let i = 0; i < string.length; i++) {\n \
  \       if (string[i] === '[') {\n            counter++;\n        } else if (string[i]\
  \ === ']') {\n            counter--;\n        }\n        if (counter < 0) {\n  \
  \          return false;\n        }\n    }\n    return counter === 0;\n}\n\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));"
- "    let count: number = 0;\n    for (let i: number = 0; i < string.length; i++)\
  \ {\n        if (string[i] === '[') {\n            count++;\n        } else if (string[i]\
  \ === ']') {\n            count--;\n        }\n        if (count < 0) {\n      \
  \      return false;\n        }\n    }\n    return count === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
  \ === '[') {\n            count++;\n        } else if (string[i] === ']') {\n  \
  \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
  \        }\n    }\n    return count === 0;\n}\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack = [];\n    for (let i = 0; i < string.length; i++) {\n        if\
  \ (string[i] === '[') {\n            stack.push(string[i]);\n        } else {\n\
  \            if (stack.length === 0) {\n                return false;\n        \
  \    } else {\n                stack.pop();\n            }\n        }\n    }\n \
  \   return stack.length === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let count: number = 0;\n    for (let i = 0; i < string.length; i++) {\n   \
  \     if (string[i] === '[') {\n            count++;\n        } else if (string[i]\
  \ === ']') {\n            count--;\n        }\n        if (count < 0) {\n      \
  \      return false;\n        }\n    }\n    return count === 0;\n}\n\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    let isNested: boolean = false;\n    for (let\
  \ i = 0; i < string.length; i++) {\n        if (string[i] === '[') {\n         \
  \   stack.push(string[i]);\n        } else if (string[i] === ']') {\n          \
  \  if (stack.length > 0) {\n                stack.pop();\n                isNested\
  \ = true;\n            } else {\n                return false;\n            }\n\
  \        }\n    }\n    return isNested;\n}\n"
- "    let counter: number = 0;\n    for (let i: number = 0; i < string.length; i++)\
  \ {\n        if (string[i] === '[') {\n            counter++;\n        } else if\
  \ (string[i] === ']') {\n            counter--;\n        }\n        if (counter\
  \ < 0) {\n            return false;\n        }\n    }\n    return counter === 0;\n\
  }\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let count: number = 0;\n    for (let i = 0; i < string.length; i++) {\n   \
  \     if (string[i] === '[') {\n            count++;\n        } else if (string[i]\
  \ === ']') {\n            count--;\n        }\n        if (count < 0) {\n      \
  \      return false;\n        }\n    }\n    return count === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack = [];\n    for (let i = 0; i < string.length; i++) {\n        if\
  \ (string[i] === '[') {\n            stack.push(string[i]);\n        } else {\n\
  \            if (stack.length === 0) {\n                return false;\n        \
  \    } else {\n                stack.pop();\n            }\n        }\n    }\n \
  \   return stack.length === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let count: number = 0;\n    for (let i = 0; i < string.length; i++) {\n   \
  \     if (string[i] === '[') {\n            count++;\n        } else if (string[i]\
  \ === ']') {\n            count--;\n        }\n        if (count < 0) {\n      \
  \      return false;\n        }\n    }\n    return count === 0;\n}\n\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));"
- "    let count: number = 0;\n    for (let i: number = 0; i < string.length; i++)\
  \ {\n        if (string[i] === '[') {\n            count++;\n        } else if (string[i]\
  \ === ']') {\n            count--;\n        }\n        if (count < 0) {\n      \
  \      return false;\n        }\n    }\n    return count === 0;\n}\n\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === \"[\") {\n            stack.push(string[i]);\n      \
  \  } else {\n            if (stack.length === 0) {\n                return false;\n\
  \            } else {\n                stack.pop();\n            }\n        }\n\
  \    }\n    return stack.length === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let counter: number = 0;\n    for (let i: number = 0; i < string.length; i++)\
  \ {\n        if (string[i] === '[') {\n            counter++;\n        } else if\
  \ (string[i] === ']') {\n            counter--;\n        }\n        if (counter\
  \ < 0) {\n            return false;\n        }\n    }\n    return counter === 0;\n\
  }\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i: number = 0; i < string.length; i++)\
  \ {\n        if (string[i] === '[') {\n            stack.push(string[i]);\n    \
  \    } else {\n            if (stack.length === 0) {\n                return false;\n\
  \            } else {\n                stack.pop();\n            }\n        }\n\
  \    }\n    return stack.length === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let count: number = 0;\n    for (let i = 0; i < string.length; i++) {\n   \
  \     if (string[i] === \"[\") {\n            count++;\n        } else if (string[i]\
  \ === \"]\") {\n            count--;\n        }\n        if (count < 0) {\n    \
  \        return false;\n        }\n    }\n    return count === 0;\n}\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack = [];\n    for (let i = 0; i < string.length; i++) {\n        if\
  \ (string[i] === '[') {\n            stack.push(string[i]);\n        } else {\n\
  \            if (stack.length === 0) {\n                return false;\n        \
  \    } else {\n                stack.pop();\n            }\n        }\n    }\n \
  \   return stack.length === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let counter: number = 0;\n    for (let i: number = 0; i < string.length; i++)\
  \ {\n        if (string[i] === '[') {\n            counter++;\n        } else if\
  \ (string[i] === ']') {\n            counter--;\n        }\n        if (counter\
  \ < 0) {\n            return false;\n        }\n    }\n    return counter === 0;\n\
  }\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack = [];\n    for (let i = 0; i < string.length; i++) {\n        if\
  \ (string[i] === '[') {\n            stack.push(string[i]);\n        } else {\n\
  \            if (stack.length === 0) {\n                return false;\n        \
  \    } else {\n                stack.pop();\n            }\n        }\n    }\n \
  \   return stack.length === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let count: number = 0;\n    for (let i: number = 0; i < string.length; i++)\
  \ {\n        if (string[i] === '[') {\n            count++;\n        } else if (string[i]\
  \ === ']') {\n            count--;\n        }\n        if (count < 0) {\n      \
  \      return false;\n        }\n    }\n    return count === 0;\n}\n\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
  \ === '[') {\n            count++;\n        } else if (string[i] === ']') {\n  \
  \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
  \        }\n    }\n    return count === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
  \ === '[') {\n            count++;\n        } else if (string[i] === ']') {\n  \
  \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
  \        }\n    }\n    return count === 0;\n}\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));\n"
- "    let counter = 0;\n    for (let i = 0; i < string.length; i++) {\n        if\
  \ (string[i] === '[') {\n            counter++;\n        } else {\n            counter--;\n\
  \        }\n        if (counter < 0) {\n            return false;\n        }\n \
  \   }\n    return counter === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let openBrackets: number = 0;\n    let closeBrackets: number = 0;\n    for\
  \ (let i = 0; i < string.length; i++) {\n        if (string[i] === '[') {\n    \
  \        openBrackets++;\n        } else {\n            closeBrackets++;\n     \
  \   }\n        if (closeBrackets > openBrackets) {\n            return false;\n\
  \        }\n    }\n    return openBrackets === closeBrackets;\n}\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack = [];\n    for (let i = 0; i < string.length; i++) {\n        if\
  \ (string[i] === '[') {\n            stack.push(string[i]);\n        } else {\n\
  \            if (stack.length === 0) {\n                return false;\n        \
  \    } else {\n                stack.pop();\n            }\n        }\n    }\n \
  \   return stack.length === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let count: number = 0;\n    for (let i: number = 0; i < string.length; i++)\
  \ {\n        if (string[i] === '[') {\n            count++;\n        } else if (string[i]\
  \ === ']') {\n            count--;\n        }\n        if (count < 0) {\n      \
  \      return false;\n        }\n    }\n    return count === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
  \ === '[') {\n            count++;\n        } else if (string[i] === ']') {\n  \
  \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
  \        }\n    }\n    return count === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    const brackets = string.split('');\n    const stack: string[] = [];\n    for\
  \ (let i = 0; i < brackets.length; i++) {\n        if (brackets[i] === '[') {\n\
  \            stack.push(brackets[i]);\n        } else {\n            if (stack.length\
  \ === 0) {\n                return false;\n            }\n            stack.pop();\n\
  \        }\n    }\n    return true;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let counter: number = 0;\n    for (let i: number = 0; i < string.length; i++)\
  \ {\n        if (string[i] === '[') {\n            counter++;\n        } else if\
  \ (string[i] === ']') {\n            counter--;\n        }\n        if (counter\
  \ < 0) {\n            return false;\n        }\n    }\n    return counter === 0;\n\
  }\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === \"[\") {\n            stack.push(string[i]);\n      \
  \  } else {\n            if (stack.length === 0) {\n                return false;\n\
  \            } else {\n                stack.pop();\n            }\n        }\n\
  \    }\n    return stack.length === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let open = 0;\n    let close = 0;\n    for (let i = 0; i < string.length; i++)\
  \ {\n        if (string[i] === '[') {\n            open++;\n        } else {\n \
  \           close++;\n        }\n        if (close > open) {\n            return\
  \ false;\n        }\n    }\n    return true;\n}\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));\n"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
  \ === '[') {\n            count++;\n        } else if (string[i] === ']') {\n  \
  \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
  \        }\n    }\n    return count === 0;\n}\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === \"[\") {\n            stack.push(string[i]);\n      \
  \  } else {\n            if (stack.length === 0) {\n                return false;\n\
  \            } else {\n                stack.pop();\n            }\n        }\n\
  \    }\n    return stack.length === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
  \ === '[') {\n            count++;\n        } else if (string[i] === ']') {\n  \
  \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
  \        }\n    }\n    return count === 0;\n}\n"
- "    let count: number = 0;\n    for (let i = 0; i < string.length; i++) {\n   \
  \     if (string[i] === '[') {\n            count++;\n        } else if (string[i]\
  \ === ']') {\n            count--;\n        }\n        if (count < 0) {\n      \
  \      return false;\n        }\n    }\n    return count === 0;\n}\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let counter: number = 0;\n    for (let i = 0; i < string.length; i++) {\n \
  \       if (string[i] === '[') {\n            counter++;\n        } else if (string[i]\
  \ === ']') {\n            counter--;\n        }\n        if (counter < 0) {\n  \
  \          return false;\n        }\n    }\n    return counter === 0;\n}\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "  const stack: string[] = [];\n  for (let i = 0; i < string.length; i++) {\n  \
  \  if (string[i] === '[') {\n      stack.push(string[i]);\n    } else {\n      if\
  \ (stack.length === 0) {\n        return false;\n      }\n      stack.pop();\n \
  \   }\n  }\n  return stack.length === 0;\n}\n\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack = [];\n    for (let i = 0; i < string.length; i++) {\n        if\
  \ (string[i] === '[') {\n            stack.push(string[i]);\n        } else {\n\
  \            if (stack.length === 0) {\n                return false;\n        \
  \    } else {\n                stack.pop();\n            }\n        }\n    }\n \
  \   return stack.length === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i]\
  \ === \"[\") {\n      count++;\n    } else if (string[i] === \"]\") {\n      count--;\n\
  \    }\n    if (count < 0) {\n      return false;\n    }\n  }\n  return count ===\
  \ 0;\n}\nconsole.log(is_nested(\"[[]]\"));\nconsole.log(is_nested(\"[]]]]]]][[[[[]\"\
  ));\nconsole.log(is_nested(\"[][]\"));\nconsole.log(is_nested(\"[]\"));\nconsole.log(is_nested(\"\
  [[][]]\"));\nconsole.log(is_nested(\"[[]][[\"));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack = [];\n    for (let i = 0; i < string.length; i++) {\n        if\
  \ (string[i] === '[') {\n            stack.push(string[i]);\n        } else {\n\
  \            if (stack.length === 0) {\n                return false;\n        \
  \    } else {\n                stack.pop();\n            }\n        }\n    }\n \
  \   return stack.length === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));\n"
- "    let stack = [];\n    for (let i = 0; i < string.length; i++) {\n        if\
  \ (string[i] === '[') {\n            stack.push(string[i]);\n        } else {\n\
  \            if (stack.length === 0) {\n                return false;\n        \
  \    } else {\n                stack.pop();\n            }\n        }\n    }\n \
  \   return stack.length === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === \"[\") {\n            stack.push(string[i]);\n      \
  \  } else {\n            if (stack.length === 0) {\n                return false;\n\
  \            } else {\n                stack.pop();\n            }\n        }\n\
  \    }\n    return stack.length === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === \"[\") {\n            stack.push(string[i]);\n      \
  \  } else {\n            if (stack.length === 0) {\n                return false;\n\
  \            } else {\n                stack.pop();\n            }\n        }\n\
  \    }\n    return stack.length === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
  \ === '[') {\n            count++;\n        } else if (string[i] === ']') {\n  \
  \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
  \        }\n    }\n    return count === 0;\n}\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));"
- "    let count: number = 0;\n    for (let i = 0; i < string.length; i++) {\n   \
  \     if (string[i] === '[') {\n            count++;\n        } else if (string[i]\
  \ === ']') {\n            count--;\n        }\n        if (count < 0) {\n      \
  \      return false;\n        }\n    }\n    return count === 0;\n}\n\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
  \ === '[') {\n            count++;\n        } else if (string[i] === ']') {\n  \
  \          count--;\n        }\n        if (count < 0) {\n            return false;\n\
  \        }\n    }\n    return count === 0;\n}\nconsole.log(is_nested('[[]]'));\n\
  console.log(is_nested('[]]]]]]][[[[[]'));\nconsole.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\n\
  console.log(is_nested('[[][]]'));\nconsole.log(is_nested('[[]][['));\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === \"[\") {\n            stack.push(string[i]);\n      \
  \  } else {\n            if (stack.length === 0) {\n                return false;\n\
  \            } else {\n                stack.pop();\n            }\n        }\n\
  \    }\n    return stack.length === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
- "    let stack = [];\n    for (let i = 0; i < string.length; i++) {\n        if\
  \ (string[i] === '[') {\n            stack.push(string[i]);\n        } else {\n\
  \            if (stack.length === 0) {\n                return false;\n        \
  \    } else {\n                stack.pop();\n            }\n        }\n    }\n \
  \   return stack.length === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i: number = 0; i < string.length; i++)\
  \ {\n        if (string[i] === '[') {\n            stack.push(string[i]);\n    \
  \    } else {\n            if (stack.length === 0) {\n                return false;\n\
  \            } else {\n                stack.pop();\n            }\n        }\n\
  \    }\n    return stack.length === 0;\n}\n\nconsole.log(is_nested('[[]]'));\nconsole.log(is_nested('[]]]]]]][[[[[]'));\n\
  console.log(is_nested('[][]'));\nconsole.log(is_nested('[]'));\nconsole.log(is_nested('[[][]]'));\n\
  console.log(is_nested('[[]][['));"
- "    let stack: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
  \        if (string[i] === '[') {\n            stack.push(string[i]);\n        }\
  \ else {\n            if (stack.length === 0) {\n                return false;\n\
  \            }\n            stack.pop();\n        }\n    }\n    return stack.length\
  \ === 0;\n}\n"
language: ts
name: HumanEval_132_is_nested
prompt: "//Create a function that takes a string as input which contains only square\
  \ brackets.\n// The function should return True if and only if there is a valid\
  \ subsequence of brackets \n// where at least one bracket in the subsequence is\
  \ nested.\n// is_nested('[[]]') \u279E True\n// is_nested('[]]]]]]][[[[[]') \u279E\
  \ False\n// is_nested('[][]') \u279E False\n// is_nested('[]') \u279E False\n//\
  \ is_nested('[[][]]') \u279E True\n// is_nested('[[]][[') \u279E True\nfunction\
  \ is_nested(string: string): boolean {\n"
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = is_nested;\n  assert.deepEqual(candidate(\"[[]]\"\
  ),true);\n  assert.deepEqual(candidate(\"[]]]]]]][[[[[]\"),false);\n  assert.deepEqual(candidate(\"\
  [][]\"),false);\n  assert.deepEqual(candidate(\"[]\"),false);\n  assert.deepEqual(candidate(\"\
  [[[[]]]]\"),true);\n  assert.deepEqual(candidate(\"[]]]]]]]]]]\"),false);\n  assert.deepEqual(candidate(\"\
  [][][[]]\"),true);\n  assert.deepEqual(candidate(\"[[]\"),false);\n  assert.deepEqual(candidate(\"\
  []]\"),false);\n  assert.deepEqual(candidate(\"[[]][[\"),true);\n  assert.deepEqual(candidate(\"\
  [[][]]\"),true);\n  assert.deepEqual(candidate(\"\"),false);\n  assert.deepEqual(candidate(\"\
  [[[[[[[[\"),false);\n  assert.deepEqual(candidate(\"]]]]]]]]\"),false);\n}\n\ntest();"

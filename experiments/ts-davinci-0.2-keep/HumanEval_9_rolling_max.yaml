completions:
- "    const maxes: number[] = [];\n    let max = numbers[0];\n    for (let i = 0;\
  \ i < numbers.length; i++) {\n        max = Math.max(max, numbers[i]);\n       \
  \ maxes.push(max);\n    }\n    return maxes;\n}\n"
- "    let result: number[] = [];\n    let max: number = 0;\n    for (let i = 0; i\
  \ < numbers.length; i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n\
  \        }\n        result.push(max);\n    }\n    return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max = numbers[0];\n    let result = [max];\n    for (let i = 1; i < numbers.length;\
  \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n     \
  \   }\n        result.push(max);\n    }\n    return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = 0;\n    for (let i = 0; i\
  \ < numbers.length; i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n\
  \        }\n        result.push(max);\n    }\n    return result;\n}\n"
- '    return numbers.map((_, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max = numbers[0];\n    return numbers.map(n => {\n        if (n > max)\
  \ {\n            max = n;\n        }\n        return max;\n    });\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max: number = numbers[0];\n    let result: number[] = [];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- '    return numbers.map((n, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- "    let result: number[] = [];\n    let max: number = -Infinity;\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        max = Math.max(max, numbers[i]);\n\
  \        result.push(max);\n    }\n    return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- '    return numbers.map((_, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- "    let result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- '    return numbers.map((n, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
  \ i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n\
  \        result.push(max_so_far);\n    }\n    return result;\n}\n"
- "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
  \ i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n\
  \        result.push(max_so_far);\n    }\n    return result;\n}\n"
- "  let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
  \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
  \  }\n  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max = numbers[0];\n    let result = [max];\n    for (let i = 1; i < numbers.length;\
  \ i++) {\n        max = Math.max(max, numbers[i]);\n        result.push(max);\n\
  \    }\n    return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    for (let i = 0;\
  \ i < numbers.length; i++) {\n        if (numbers[i] > max) {\n            max =\
  \ numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max = numbers[0];\n    let result = [max];\n    for (let i = 1; i < numbers.length;\
  \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n     \
  \   }\n        result.push(max);\n    }\n    return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = 0;\n    for (let i = 0; i\
  \ < numbers.length; i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n\
  \        }\n        result.push(max);\n    }\n    return result;\n}\n"
- "    let max = numbers[0];\n    let result = [max];\n    for (let i = 1; i < numbers.length;\
  \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n     \
  \   }\n        result.push(max);\n    }\n    return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
  \ i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n\
  \        result.push(max_so_far);\n    }\n    return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    for (let i = 0;\
  \ i < numbers.length; i++) {\n        max = Math.max(max, numbers[i]);\n       \
  \ result.push(max);\n    }\n    return result;\n}\n"
- "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
  \ i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n\
  \        result.push(max_so_far);\n    }\n    return result;\n}\n"
- "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
  \ i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n\
  \        result.push(max_so_far);\n    }\n    return result;\n}\n"
- "    let max: number = numbers[0];\n    let result: number[] = [];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
  \ i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n\
  \        result.push(max_so_far);\n    }\n    return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
  \ i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n\
  \        result.push(max_so_far);\n    }\n    return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    for (let i = 0;\
  \ i < numbers.length; i++) {\n        if (numbers[i] > max) {\n            max =\
  \ numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    return numbers.map((value, index, array) => {\n        return Math.max(...array.slice(0,\
  \ index + 1));\n    });\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
  \ i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max_so_far) {\n  \
  \          max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
  \    }\n    return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let max_so_far = numbers[0];\n    let max_so_far_index = 0;\n    let result\
  \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i]\
  \ >= max_so_far) {\n            max_so_far = numbers[i];\n            max_so_far_index\
  \ = i;\n        }\n        result.push(max_so_far);\n    }\n    return result;\n\
  }\n"
- "    let max = numbers[0];\n    return numbers.map(n => {\n        if (n > max)\
  \ {\n            max = n;\n        }\n        return max;\n    });\n}\n"
- '    return numbers.map((_, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i: number = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n \
  \           max = numbers[i];\n        }\n        result.push(max);\n    }\n   \
  \ return result;\n}\n"
- "    let max: number = numbers[0];\n    let result: number[] = [];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max = numbers[0];\n    let result = [max];\n    for (let i = 1; i < numbers.length;\
  \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n     \
  \   }\n        result.push(max);\n    }\n    return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max: number[] = [];\n    let currentMax: number = numbers[0];\n    max.push(currentMax);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > currentMax)\
  \ {\n            currentMax = numbers[i];\n        }\n        max.push(currentMax);\n\
  \    }\n    return max;\n}\n"
- '  return numbers.map((_, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        max = Math.max(max, numbers[i]);\n\
  \        result.push(max);\n    }\n    return result;\n}\n"
- '    return numbers.map((_, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    const result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- '    return numbers.map((_, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- '    return numbers.map((n, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max = numbers[0];\n    return numbers.map(n => {\n        if (n > max)\
  \ {\n            max = n;\n        }\n        return max;\n    });\n}\n"
- "    let max = numbers[0];\n    let result = [max];\n    for (let i = 1; i < numbers.length;\
  \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n     \
  \   }\n        result.push(max);\n    }\n    return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    const result: number[] = [];\n    let max = -Infinity;\n    for (const number\
  \ of numbers) {\n        max = Math.max(max, number);\n        result.push(max);\n\
  \    }\n    return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- '    return numbers.map((_, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "  return numbers.reduce((acc, curr, i) => {\n    if (i === 0) {\n      acc.push(curr);\n\
  \    } else {\n      acc.push(Math.max(acc[i - 1], curr));\n    }\n    return acc;\n\
  \  }, []);\n}\n"
- '    return numbers.map((_, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- "    let result: number[] = [];\n    let max: number = 0;\n    for (let i = 0; i\
  \ < numbers.length; i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n\
  \        }\n        result.push(max);\n    }\n    return result;\n}\n"
- "    let max = numbers[0];\n    return numbers.map(n => {\n        if (n > max)\
  \ {\n            max = n;\n        }\n        return max;\n    });\n}\n"
- "    let max = numbers[0];\n    let result = [max];\n    for (let i = 1; i < numbers.length;\
  \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n     \
  \   }\n        result.push(max);\n    }\n    return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max_numbers: number[] = [];\n    let max_number: number = numbers[0];\n\
  \    max_numbers.push(max_number);\n    for (let i = 1; i < numbers.length; i++)\
  \ {\n        if (numbers[i] > max_number) {\n            max_number = numbers[i];\n\
  \        }\n        max_numbers.push(max_number);\n    }\n    return max_numbers;\n\
  }\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
  \ i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n\
  \        result.push(max_so_far);\n    }\n    return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max = numbers[0];\n    let result = [max];\n    for (let i = 1; i < numbers.length;\
  \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n     \
  \   }\n        result.push(max);\n    }\n    return result;\n}\n"
- "    const result: number[] = [];\n    let max = 0;\n    for (let i = 0; i < numbers.length;\
  \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n     \
  \   }\n        result.push(max);\n    }\n    return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max: number = numbers[0];\n    let result: number[] = [];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max = numbers[0];\n    return numbers.map(n => {\n        if (n > max)\
  \ {\n            max = n;\n        }\n        return max;\n    });\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i: number = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n \
  \           max = numbers[i];\n        }\n        result.push(max);\n    }\n   \
  \ return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
  \ i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n\
  \        result.push(max_so_far);\n    }\n    return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    for (let i = 0;\
  \ i < numbers.length; i++) {\n        const number = numbers[i];\n        max =\
  \ Math.max(max, number);\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let max: number = numbers[0];\n    let result: number[] = [];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- '    return numbers.map((_, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
  \ i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max_so_far) {\n  \
  \          max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
  \    }\n    return result;\n}\n"
- "    let max: number = numbers[0];\n    let result: number[] = [];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i: number = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n \
  \           max = numbers[i];\n        }\n        result.push(max);\n    }\n   \
  \ return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- '    return numbers.map((_, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max: number = numbers[0];\n    let result: number[] = [];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = 0;\n    for (let i = 0; i\
  \ < numbers.length; i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n\
  \        }\n        result.push(max);\n    }\n    return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- '  return numbers.map((_, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- '    return numbers.map((_, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- "    const result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let max = numbers[0];\n    let result = [max];\n    for (let i = 1; i < numbers.length;\
  \ i++) {\n        max = Math.max(max, numbers[i]);\n        result.push(max);\n\
  \    }\n    return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max: number[] = [];\n    let currentMax: number = numbers[0];\n    for\
  \ (let i: number = 0; i < numbers.length; i++) {\n        if (numbers[i] > currentMax)\
  \ {\n            currentMax = numbers[i];\n        }\n        max.push(currentMax);\n\
  \    }\n    return max;\n}\n"
- '    return numbers.map((_, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
  \ i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n\
  \        result.push(max_so_far);\n    }\n    return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    for (let i = 0;\
  \ i < numbers.length; i++) {\n        max = Math.max(max, numbers[i]);\n       \
  \ result.push(max);\n    }\n    return result;\n}\n"
- "  const result: number[] = [];\n  let max = numbers[0];\n  result.push(max);\n\
  \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n   \
  \   max = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max = numbers[0];\n    let result = [max];\n    for (let i = 1; i < numbers.length;\
  \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n     \
  \   }\n        result.push(max);\n    }\n    return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = 0;\n    for (let i = 0; i\
  \ < numbers.length; i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n\
  \        }\n        result.push(max);\n    }\n    return result;\n}\n"
- "    let max = numbers[0];\n    let maxes = [max];\n    for (let i = 1; i < numbers.length;\
  \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n     \
  \   }\n        maxes.push(max);\n    }\n    return maxes;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    if (numbers.length === 0) {\n        return [];\n    }\n    let max = numbers[0];\n\
  \    let result = [max];\n    for (let i = 1; i < numbers.length; i++) {\n     \
  \   if (numbers[i] > max) {\n            max = numbers[i];\n        }\n        result.push(max);\n\
  \    }\n    return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "  const result: number[] = [];\n  let max = -Infinity;\n  for (const number of\
  \ numbers) {\n    max = Math.max(max, number);\n    result.push(max);\n  }\n  return\
  \ result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max = numbers[0];\n    return numbers.map(n => {\n        if (n > max)\
  \ {\n            max = n;\n        }\n        return max;\n    });\n}\n"
- "    let max: number = numbers[0];\n    let result: number[] = [];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- '    return numbers.map((_, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- "    let max_so_far = numbers[0];\n    return numbers.map(function (number) {\n\
  \        if (number > max_so_far) {\n            max_so_far = number;\n        }\n\
  \        return max_so_far;\n    });\n}\n"
- '    return numbers.map((_, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max = numbers[0];\n    let result = [max];\n    for (let i = 1; i < numbers.length;\
  \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n     \
  \   }\n        result.push(max);\n    }\n    return result;\n}\n"
- "    const result: number[] = [];\n    let max = 0;\n    for (let i = 0; i < numbers.length;\
  \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n     \
  \   }\n        result.push(max);\n    }\n    return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    for (let i = 0;\
  \ i < numbers.length; i++) {\n        if (numbers[i] > max) {\n            max =\
  \ numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    for (let i = 0;\
  \ i < numbers.length; i++) {\n        if (numbers[i] > max) {\n            max =\
  \ numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    for (let i = 0;\
  \ i < numbers.length; i++) {\n        if (numbers[i] > max) {\n            max =\
  \ numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- '    return numbers.map((n, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- "    let max = numbers[0];\n    let result = [max];\n    for (let i = 1; i < numbers.length;\
  \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n     \
  \   }\n        result.push(max);\n    }\n    return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let currentMax: number = 0;\n    for (let i\
  \ = 0; i < numbers.length; i++) {\n        if (numbers[i] > currentMax) {\n    \
  \        currentMax = numbers[i];\n        }\n        result.push(currentMax);\n\
  \    }\n    return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max = numbers[0];\n    let result = [max];\n    for (let i = 1; i < numbers.length;\
  \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n     \
  \   }\n        result.push(max);\n    }\n    return result;\n}\n"
- "  let max = numbers[0];\n  let result = [];\n  for (let i = 0; i < numbers.length;\
  \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
  \  }\n  return result;\n}\n"
- "    let max: number = numbers[0];\n    let maxes: number[] = [];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        maxes.push(max);\n    }\n    return maxes;\n\
  }\n"
- '    return numbers.map((n, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max = numbers[0];\n    let result = [max];\n    for (let i = 1; i < numbers.length;\
  \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n     \
  \   }\n        result.push(max);\n    }\n    return result;\n}\n"
- '    return numbers.map((n, i) => Math.max(...numbers.slice(0, i + 1)));

  }

  '
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    for (let i = 0;\
  \ i < numbers.length; i++) {\n        if (numbers[i] > max) {\n            max =\
  \ numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max: number = numbers[0];\n    let result: number[] = [];\n    for (let\
  \ i: number = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n \
  \           max = numbers[i];\n        }\n        result.push(max);\n    }\n   \
  \ return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    for (let\
  \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n         \
  \   max = numbers[i];\n        }\n        result.push(max);\n    }\n    return result;\n\
  }\n"
- "    let result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let result: number[] = [];\n    let max: number = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max = numbers[0];\n    let result = [max];\n    for (let i = 1; i < numbers.length;\
  \ i++) {\n        if (numbers[i] > max) {\n            max = numbers[i];\n     \
  \   }\n        result.push(max);\n    }\n    return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
  \ i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max_so_far) {\n  \
  \          max_so_far = numbers[i];\n        }\n        result.push(max_so_far);\n\
  \    }\n    return result;\n}\n"
- "    const result: number[] = [];\n    let max = numbers[0];\n    result.push(max);\n\
  \    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max) {\n\
  \            max = numbers[i];\n        }\n        result.push(max);\n    }\n  \
  \  return result;\n}\n"
- "    let max_so_far = numbers[0];\n    let result = [max_so_far];\n    for (let\
  \ i = 1; i < numbers.length; i++) {\n        max_so_far = Math.max(max_so_far, numbers[i]);\n\
  \        result.push(max_so_far);\n    }\n    return result;\n}\n"
language: ts
name: HumanEval_9_rolling_max
prompt: '//From a given list of integers, generate a list of rolling maximum element
  found until given moment

  // in the sequence.

  // >>> rolling_max([1, 2, 3, 2, 3, 4, 2])

  // [1, 2, 3, 3, 3, 4, 4]

  function rolling_max(numbers: number[]): number[] {

  '
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
  \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
  \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
  \ 3, 3, 100, 100]);\n}\n\ntest();"

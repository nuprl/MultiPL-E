completions:
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    const hist: {[key: string]: number} = {};\n    test.split(' ').forEach(letter\
  \ => {\n        if (hist[letter]) {\n            hist[letter]++;\n        } else\
  \ {\n            hist[letter] = 1;\n        }\n    });\n    const max = Math.max(...Object.values(hist));\n\
  \    const result: {[key: string]: number} = {};\n    Object.keys(hist).forEach(key\
  \ => {\n        if (hist[key] === max) {\n            result[key] = hist[key];\n\
  \        }\n    });\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter]++;\n        } else {\n            result[letter] = 1;\n  \
  \      }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < letters.length;\
  \ i++) {\n        if (result[letters[i]]) {\n            result[letters[i]]++;\n\
  \        } else {\n            result[letters[i]] = 1;\n        }\n        if (result[letters[i]]\
  \ > max) {\n            max = result[letters[i]];\n        }\n    }\n    for (let\
  \ key in result) {\n        if (result[key] < max) {\n            delete result[key];\n\
  \        }\n    }\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter]++;\n        } else {\n            result[letter] = 1;\n  \
  \      }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let array = test.split(' ');\n\
  \    let max = 0;\n    for (let i = 0; i < array.length; i++) {\n        if (result[array[i]])\
  \ {\n            result[array[i]]++;\n        } else {\n            result[array[i]]\
  \ = 1;\n        }\n        if (result[array[i]] > max) {\n            max = result[array[i]];\n\
  \        }\n    }\n    for (let key in result) {\n        if (result[key] < max)\
  \ {\n            delete result[key];\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    letters.forEach(letter => {\n        if (result[letter]) {\n        \
  \    result[letter]++;\n        } else {\n            result[letter] = 1;\n    \
  \    }\n    });\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let testArray: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i = 0; i < testArray.length; i++)\
  \ {\n        if (result[testArray[i]]) {\n            result[testArray[i]]++;\n\
  \        } else {\n            result[testArray[i]] = 1;\n        }\n        if\
  \ (result[testArray[i]] > max) {\n            max = result[testArray[i]];\n    \
  \    }\n    }\n    for (let key in result) {\n        if (result[key] !== max) {\n\
  \            delete result[key];\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    if (test.length > 0) {\n   \
  \     let arr: string[] = test.split(' ');\n        let max: number = 0;\n     \
  \   for (let i: number = 0; i < arr.length; i++) {\n            if (result[arr[i]])\
  \ {\n                result[arr[i]]++;\n            } else {\n                result[arr[i]]\
  \ = 1;\n            }\n            if (result[arr[i]] > max) {\n               \
  \ max = result[arr[i]];\n            }\n        }\n        for (let key in result)\
  \ {\n            if (result[key] < max) {\n                delete result[key];\n\
  \            }\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr: string[] = test.split('\
  \ ');\n    for (let i: number = 0; i < arr.length; i++) {\n        if (result[arr[i]]\
  \ === undefined) {\n            result[arr[i]] = 1;\n        } else {\n        \
  \    result[arr[i]]++;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let letter of letters) {\n        if (result[letter]\
  \ === undefined) {\n            result[letter] = 1;\n        } else {\n        \
  \    result[letter]++;\n        }\n        if (result[letter] > max) {\n       \
  \     max = result[letter];\n        }\n    }\n    for (let letter in result) {\n\
  \        if (result[letter] !== max) {\n            delete result[letter];\n   \
  \     }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr: string[] = test.split('\
  \ ');\n    for (let i: number = 0; i < arr.length; i++) {\n        if (result[arr[i]])\
  \ {\n            result[arr[i]]++;\n        } else {\n            result[arr[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "  let result: {[key: string]: number} = {};\n  let testArr = test.split(' ');\n\
  \  let max = 0;\n  for (let i = 0; i < testArr.length; i++) {\n    if (result[testArr[i]])\
  \ {\n      result[testArr[i]]++;\n    } else {\n      result[testArr[i]] = 1;\n\
  \    }\n    if (result[testArr[i]] > max) {\n      max = result[testArr[i]];\n \
  \   }\n  }\n  for (let key in result) {\n    if (result[key] < max) {\n      delete\
  \ result[key];\n    }\n  }\n  return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter]++;\n        } else {\n            result[letter] = 1;\n  \
  \      }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < letters.length;\
  \ i++) {\n        if (result[letters[i]]) {\n            result[letters[i]]++;\n\
  \        } else {\n            result[letters[i]] = 1;\n        }\n        if (result[letters[i]]\
  \ > max) {\n            max = result[letters[i]];\n        }\n    }\n    for (let\
  \ key in result) {\n        if (result[key] < max) {\n            delete result[key];\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let letter of letters) {\n        if (result[letter]\
  \ === undefined) {\n            result[letter] = 1;\n        } else {\n        \
  \    result[letter]++;\n        }\n        if (result[letter] > max) {\n       \
  \     max = result[letter];\n        }\n    }\n    for (let key in result) {\n \
  \       if (result[key] !== max) {\n            delete result[key];\n        }\n\
  \    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n   \
  \         result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result = {};\n    let arr = test.split(' ');\n    let max = 0;\n    for\
  \ (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n          \
  \  result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n      \
  \  }\n        if (result[arr[i]] > max) {\n            max = result[arr[i]];\n \
  \       }\n    }\n    for (let key in result) {\n        if (result[key] < max)\
  \ {\n            delete result[key];\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let i = 0; i < letters.length; i++) {\n        if (result[letters[i]])\
  \ {\n            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter]++;\n        } else {\n            result[letter] = 1;\n  \
  \      }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < letters.length;\
  \ i++) {\n        if (result[letters[i]]) {\n            result[letters[i]]++;\n\
  \        } else {\n            result[letters[i]] = 1;\n        }\n        if (result[letters[i]]\
  \ > max) {\n            max = result[letters[i]];\n        }\n    }\n    for (let\
  \ key in result) {\n        if (result[key] < max) {\n            delete result[key];\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i = 0; i < letters.length; i++) {\n\
  \        if (letters[i] in result) {\n            result[letters[i]] += 1;\n   \
  \     } else {\n            result[letters[i]] = 1;\n        }\n        if (result[letters[i]]\
  \ > max) {\n            max = result[letters[i]];\n        }\n    }\n    for (let\
  \ key in result) {\n        if (result[key] < max) {\n            delete result[key];\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let i = 0; i < letters.length; i++) {\n        if (result[letters[i]])\
  \ {\n            result[letters[i]] += 1;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let i = 0; i < letters.length; i++) {\n        if (result[letters[i]])\
  \ {\n            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter]++;\n        } else {\n            result[letter] = 1;\n  \
  \      }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n   \
  \         result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr: string[] = test.split('\
  \ ');\n    arr.forEach(function(item: string) {\n        if (result[item] === undefined)\
  \ {\n            result[item] = 1;\n        } else {\n            result[item]++;\n\
  \        }\n    });\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter]++;\n        } else {\n            result[letter] = 1;\n  \
  \      }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let i = 0; i < letters.length; i++) {\n        if (result[letters[i]])\
  \ {\n            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < letters.length;\
  \ i++) {\n        if (result[letters[i]] === undefined) {\n            result[letters[i]]\
  \ = 1;\n        } else {\n            result[letters[i]]++;\n        }\n       \
  \ if (result[letters[i]] > max) {\n            max = result[letters[i]];\n     \
  \   }\n    }\n    for (let key in result) {\n        if (result[key] < max) {\n\
  \            delete result[key];\n        }\n    }\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    test.split(' ').forEach(letter\
  \ => {\n        if (result[letter]) {\n            result[letter]++;\n        }\
  \ else {\n            result[letter] = 1;\n        }\n    });\n    return result;\n\
  }\n"
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let letters: string[] = test.split(' ');\n    let counts: {[key: string]: number}\
  \ = {};\n    for (let letter of letters) {\n        if (counts[letter]) {\n    \
  \        counts[letter]++;\n        } else {\n            counts[letter] = 1;\n\
  \        }\n    }\n    return counts;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let i: number = 0; i < letters.length; i++) {\n        if (result[letters[i]])\
  \ {\n            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    test.split(' ').forEach(function(letter:\
  \ string) {\n        if (result[letter]) {\n            result[letter]++;\n    \
  \    } else {\n            result[letter] = 1;\n        }\n    });\n    return result;\n\
  }\n"
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters = test.split(' ');\n\
  \    for (let i = 0; i < letters.length; i++) {\n        if (result[letters[i]])\
  \ {\n            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    test.split(' ').forEach(letter\
  \ => {\n        if (result[letter]) {\n            result[letter]++;\n        }\
  \ else {\n            result[letter] = 1;\n        }\n    });\n    return result;\n\
  }\n"
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < letters.length;\
  \ i++) {\n        if (result[letters[i]]) {\n            result[letters[i]]++;\n\
  \        } else {\n            result[letters[i]] = 1;\n        }\n        if (result[letters[i]]\
  \ > max) {\n            max = result[letters[i]];\n        }\n    }\n    for (let\
  \ key in result) {\n        if (result[key] < max) {\n            delete result[key];\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr: string[] = test.split('\
  \ ');\n    for (let i: number = 0; i < arr.length; i++) {\n        if (result[arr[i]]\
  \ === undefined) {\n            result[arr[i]] = 1;\n        } else {\n        \
  \    result[arr[i]]++;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters = test.split(' ');\n\
  \    let max = 0;\n    for (let i = 0; i < letters.length; i++) {\n        if (result[letters[i]]\
  \ === undefined) {\n            result[letters[i]] = 1;\n        } else {\n    \
  \        result[letters[i]]++;\n        }\n        if (result[letters[i]] > max)\
  \ {\n            max = result[letters[i]];\n        }\n    }\n    for (let key in\
  \ result) {\n        if (result[key] !== max) {\n            delete result[key];\n\
  \        }\n    }\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let i: number = 0; i < letters.length; i++) {\n        if (result[letters[i]])\
  \ {\n            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split(\"\
  \ \");\n    for (let letter of letters) {\n        if (result[letter] === undefined)\
  \ {\n            result[letter] = 1;\n        } else {\n            result[letter]++;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    test.split(' ').forEach(function(letter)\
  \ {\n        if (result[letter]) {\n            result[letter]++;\n        } else\
  \ {\n            result[letter] = 1;\n        }\n    });\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    let max = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]])\
  \ {\n            result[arr[i]]++;\n        } else {\n            result[arr[i]]\
  \ = 1;\n        }\n        if (result[arr[i]] > max) {\n            max = result[arr[i]];\n\
  \        }\n    }\n    for (let key in result) {\n        if (result[key] < max)\
  \ {\n            delete result[key];\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let i = 0; i < letters.length; i++) {\n        if (result[letters[i]])\
  \ {\n            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter]++;\n        } else {\n            result[letter] = 1;\n  \
  \      }\n    }\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    const arr = test.split(' ');\n\
  \    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n   \
  \         result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    let max = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]])\
  \ {\n            result[arr[i]]++;\n        } else {\n            result[arr[i]]\
  \ = 1;\n        }\n        if (result[arr[i]] > max) {\n            max = result[arr[i]];\n\
  \        }\n    }\n    let finalResult: {[key: string]: number} = {};\n    for (let\
  \ key in result) {\n        if (result[key] === max) {\n            finalResult[key]\
  \ = result[key];\n        }\n    }\n    return finalResult;\n}\n"
- "    let letterCount: {[key: string]: number} = {};\n    let letters: string[] =\
  \ test.split(' ');\n    for (let letter of letters) {\n        if (letterCount[letter])\
  \ {\n            letterCount[letter]++;\n        } else {\n            letterCount[letter]\
  \ = 1;\n        }\n    }\n    return letterCount;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n   \
  \         result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter]++;\n        } else {\n            result[letter] = 1;\n  \
  \      }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < letters.length;\
  \ i++) {\n        if (result[letters[i]]) {\n            result[letters[i]]++;\n\
  \        } else {\n            result[letters[i]] = 1;\n        }\n        if (result[letters[i]]\
  \ > max) {\n            max = result[letters[i]];\n        }\n    }\n    for (let\
  \ key in result) {\n        if (result[key] < max) {\n            delete result[key];\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter]++;\n        } else {\n            result[letter] = 1;\n  \
  \      }\n    }\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    test.split(' ').forEach(letter\
  \ => {\n        if (result[letter]) {\n            result[letter]++;\n        }\
  \ else {\n            result[letter] = 1;\n        }\n    });\n    return result;\n\
  }\n"
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "  const result: {[key: string]: number} = {};\n  const letters = test.split(' ');\n\
  \  for (const letter of letters) {\n    if (result[letter]) {\n      result[letter]++;\n\
  \    } else {\n      result[letter] = 1;\n    }\n  }\n  return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n   \
  \         result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let i = 0; i < letters.length; i++) {\n        if (result[letters[i]])\
  \ {\n            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n   \
  \         result[arr[i]] += 1;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr: string[] = test.split('\
  \ ');\n    for (let i: number = 0; i < arr.length; i++) {\n        if (result[arr[i]])\
  \ {\n            result[arr[i]]++;\n        } else {\n            result[arr[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let letter of letters) {\n        if (result[letter]\
  \ === undefined) {\n            result[letter] = 1;\n        } else {\n        \
  \    result[letter]++;\n        }\n        if (result[letter] > max) {\n       \
  \     max = result[letter];\n        }\n    }\n    for (let key in result) {\n \
  \       if (result[key] < max) {\n            delete result[key];\n        }\n \
  \   }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters = test.split(' ');\n\
  \    for (let letter of letters) {\n        if (result[letter]) {\n            result[letter]\
  \ += 1;\n        } else {\n            result[letter] = 1;\n        }\n    }\n \
  \   return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < letters.length;\
  \ i++) {\n        if (result[letters[i]]) {\n            result[letters[i]]++;\n\
  \        } else {\n            result[letters[i]] = 1;\n        }\n        if (result[letters[i]]\
  \ > max) {\n            max = result[letters[i]];\n        }\n    }\n    for (let\
  \ key in result) {\n        if (result[key] !== max) {\n            delete result[key];\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr: string[] = test.split('\
  \ ');\n    for (let i: number = 0; i < arr.length; i++) {\n        if (result[arr[i]]\
  \ === undefined) {\n            result[arr[i]] = 1;\n        } else {\n        \
  \    result[arr[i]]++;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    let max = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]])\
  \ {\n            result[arr[i]]++;\n        } else {\n            result[arr[i]]\
  \ = 1;\n        }\n        if (result[arr[i]] > max) {\n            max = result[arr[i]];\n\
  \        }\n    }\n    let keys = Object.keys(result);\n    for (let i = 0; i <\
  \ keys.length; i++) {\n        if (result[keys[i]] !== max) {\n            delete\
  \ result[keys[i]];\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    let maxLetters: string[] = [];\n    for (let\
  \ i: number = 0; i < letters.length; i++) {\n        if (result[letters[i]]) {\n\
  \            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n        if (result[letters[i]] > max) {\n            max = result[letters[i]];\n\
  \            maxLetters = [letters[i]];\n        } else if (result[letters[i]] ===\
  \ max) {\n            maxLetters.push(letters[i]);\n        }\n    }\n    for (let\
  \ i: number = 0; i < maxLetters.length; i++) {\n        result[maxLetters[i]] =\
  \ max;\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n   \
  \         result[arr[i]] += 1;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n   \
  \         result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let letters = test.split(' ');\n    let result = {};\n    for (let letter of\
  \ letters) {\n        if (result[letter]) {\n            result[letter] += 1;\n\
  \        } else {\n            result[letter] = 1;\n        }\n    }\n    return\
  \ result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters = test.split(' ');\n\
  \    for (let i = 0; i < letters.length; i++) {\n        if (result[letters[i]])\
  \ {\n            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result = {};\n    let arr = test.split(' ');\n    for (let i = 0; i < arr.length;\
  \ i++) {\n        if (result[arr[i]]) {\n            result[arr[i]]++;\n       \
  \ } else {\n            result[arr[i]] = 1;\n        }\n    }\n    return result;\n\
  }\n"
- "    const result: {[key: string]: number} = {};\n    const words = test.split('\
  \ ');\n    for (const word of words) {\n        if (result[word]) {\n          \
  \  result[word]++;\n        } else {\n            result[word] = 1;\n        }\n\
  \    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters = test.split(' ');\n\
  \    let maxCount = 0;\n    for (let i = 0; i < letters.length; i++) {\n       \
  \ if (result[letters[i]]) {\n            result[letters[i]] += 1;\n        } else\
  \ {\n            result[letters[i]] = 1;\n        }\n        if (result[letters[i]]\
  \ > maxCount) {\n            maxCount = result[letters[i]];\n        }\n    }\n\
  \    let maxLetters: string[] = [];\n    for (let letter in result) {\n        if\
  \ (result[letter] === maxCount) {\n            maxLetters.push(letter);\n      \
  \  }\n    }\n    let finalResult: {[key: string]: number} = {};\n    for (let i\
  \ = 0; i < maxLetters.length; i++) {\n        finalResult[maxLetters[i]] = maxCount;\n\
  \    }\n    return finalResult;\n}\n"
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    let max = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]])\
  \ {\n            result[arr[i]]++;\n        } else {\n            result[arr[i]]\
  \ = 1;\n        }\n        if (result[arr[i]] > max) {\n            max = result[arr[i]];\n\
  \        }\n    }\n    for (let key in result) {\n        if (result[key] !== max)\
  \ {\n            delete result[key];\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n   \
  \         result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < arr.length; i++)\
  \ {\n        if (result[arr[i]]) {\n            result[arr[i]]++;\n        } else\
  \ {\n            result[arr[i]] = 1;\n        }\n        if (result[arr[i]] > max)\
  \ {\n            max = result[arr[i]];\n        }\n    }\n    for (let key in result)\
  \ {\n        if (result[key] < max) {\n            delete result[key];\n       \
  \ }\n    }\n    return result;\n}\nconsole.log(histogram('a b c'));\nconsole.log(histogram('a\
  \ b b a'));\nconsole.log(histogram('a b c a b'));\nconsole.log(histogram('b b b\
  \ b a'));\nconsole.log(histogram(''));"
- "    const hist: {[key: string]: number} = {};\n    test.split(' ').forEach(letter\
  \ => {\n        if (hist[letter]) {\n            hist[letter]++;\n        } else\
  \ {\n            hist[letter] = 1;\n        }\n    });\n    return hist;\n}\n"
- "    const histogram: {[key: string]: number} = {};\n    test.split(' ').forEach(letter\
  \ => {\n        if (histogram[letter]) {\n            histogram[letter]++;\n   \
  \     } else {\n            histogram[letter] = 1;\n        }\n    });\n    return\
  \ histogram;\n}\n"
- "    const result: {[key: string]: number} = {};\n    test.split(' ').forEach(letter\
  \ => {\n        if (result[letter]) {\n            result[letter]++;\n        }\
  \ else {\n            result[letter] = 1;\n        }\n    });\n    return result;\n\
  }\n"
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let dict: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
  \ maxLetter: string = '';\n    let maxLetters: string[] = [];\n    let letters:\
  \ string[] = test.split(' ');\n    for (let letter of letters) {\n        if (dict[letter]\
  \ === undefined) {\n            dict[letter] = 1;\n        } else {\n          \
  \  dict[letter]++;\n        }\n        if (dict[letter] > max) {\n            max\
  \ = dict[letter];\n            maxLetter = letter;\n        }\n    }\n    for (let\
  \ letter in dict) {\n        if (dict[letter] === max) {\n            maxLetters.push(letter);\n\
  \        }\n    }\n    return {[maxLetter]: max};\n}\n"
- "    let result: {[key: string]: number} = {};\n    test.split(' ').forEach(letter\
  \ => {\n        if (result[letter]) {\n            result[letter]++;\n        }\
  \ else {\n            result[letter] = 1;\n        }\n    });\n    return result;\n\
  }\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n   \
  \         result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters = test.split(' ');\n\
  \    let max = 0;\n    for (let i = 0; i < letters.length; i++) {\n        if (letters[i]\
  \ in result) {\n            result[letters[i]]++;\n        } else {\n          \
  \  result[letters[i]] = 1;\n        }\n        if (result[letters[i]] > max) {\n\
  \            max = result[letters[i]];\n        }\n    }\n    for (let key in result)\
  \ {\n        if (result[key] < max) {\n            delete result[key];\n       \
  \ }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let i = 0; i < letters.length; i++) {\n        if (result[letters[i]])\
  \ {\n            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n   \
  \         result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let letter of letters) {\n        if (result[letter]\
  \ === undefined) {\n            result[letter] = 1;\n        } else {\n        \
  \    result[letter]++;\n        }\n        if (result[letter] > max) {\n       \
  \     max = result[letter];\n        }\n    }\n    for (let letter in result) {\n\
  \        if (result[letter] !== max) {\n            delete result[letter];\n   \
  \     }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    test.split(' ').forEach(function(letter)\
  \ {\n        if (result[letter]) {\n            result[letter]++;\n        } else\
  \ {\n            result[letter] = 1;\n        }\n    });\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    let max = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]])\
  \ {\n            result[arr[i]]++;\n        } else {\n            result[arr[i]]\
  \ = 1;\n        }\n        if (result[arr[i]] > max) {\n            max = result[arr[i]];\n\
  \        }\n    }\n    for (let key in result) {\n        if (result[key] < max)\
  \ {\n            delete result[key];\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < arr.length; i++)\
  \ {\n        if (result[arr[i]]) {\n            result[arr[i]]++;\n        } else\
  \ {\n            result[arr[i]] = 1;\n        }\n        if (result[arr[i]] > max)\
  \ {\n            max = result[arr[i]];\n        }\n    }\n    for (let key in result)\
  \ {\n        if (result[key] < max) {\n            delete result[key];\n       \
  \ }\n    }\n    return result;\n}\n"
- "  const hist: {[key: string]: number} = {};\n  test.split(' ').forEach(letter =>\
  \ {\n    if (hist[letter]) {\n      hist[letter]++;\n    } else {\n      hist[letter]\
  \ = 1;\n    }\n  });\n  return hist;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr: string[] = test.split('\
  \ ');\n    for (let i: number = 0; i < arr.length; i++) {\n        if (result[arr[i]])\
  \ {\n            result[arr[i]]++;\n        } else {\n            result[arr[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let letter of letters) {\n        if (result[letter]\
  \ === undefined) {\n            result[letter] = 1;\n        } else {\n        \
  \    result[letter]++;\n        }\n        if (result[letter] > max) {\n       \
  \     max = result[letter];\n        }\n    }\n    for (let key in result) {\n \
  \       if (result[key] !== max) {\n            delete result[key];\n        }\n\
  \    }\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let testArray: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < testArray.length;\
  \ i++) {\n        if (result[testArray[i]]) {\n            result[testArray[i]]++;\n\
  \        } else {\n            result[testArray[i]] = 1;\n        }\n        if\
  \ (result[testArray[i]] > max) {\n            max = result[testArray[i]];\n    \
  \    }\n    }\n    let maxKeys: string[] = [];\n    for (let key in result) {\n\
  \        if (result[key] === max) {\n            maxKeys.push(key);\n        }\n\
  \    }\n    for (let key in result) {\n        if (maxKeys.indexOf(key) === -1)\
  \ {\n            delete result[key];\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let i: number = 0; i < letters.length; i++) {\n        if (result[letters[i]])\
  \ {\n            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i = 0; i < letters.length; i++) {\n\
  \        if (result[letters[i]]) {\n            result[letters[i]]++;\n        }\
  \ else {\n            result[letters[i]] = 1;\n        }\n        if (result[letters[i]]\
  \ > max) {\n            max = result[letters[i]];\n        }\n    }\n    for (let\
  \ key in result) {\n        if (result[key] < max) {\n            delete result[key];\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let i: number = 0; i < letters.length; i++) {\n        if (result[letters[i]])\
  \ {\n            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter]++;\n        } else {\n            result[letter] = 1;\n  \
  \      }\n    }\n    return result;\n}\n"
- "    const histogram: {[key: string]: number} = {};\n    test.split(' ').forEach(letter\
  \ => {\n        if (histogram[letter]) {\n            histogram[letter]++;\n   \
  \     } else {\n            histogram[letter] = 1;\n        }\n    });\n    return\
  \ histogram;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < letters.length;\
  \ i++) {\n        if (result[letters[i]]) {\n            result[letters[i]]++;\n\
  \        } else {\n            result[letters[i]] = 1;\n        }\n        if (result[letters[i]]\
  \ > max) {\n            max = result[letters[i]];\n        }\n    }\n    for (let\
  \ key in result) {\n        if (result[key] < max) {\n            delete result[key];\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    for (let i = 0; i < test.length;\
  \ i++) {\n        if (test[i] !== ' ') {\n            if (result[test[i]]) {\n \
  \               result[test[i]]++;\n            } else {\n                result[test[i]]\
  \ = 1;\n            }\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < arr.length; i++)\
  \ {\n        if (result[arr[i]]) {\n            result[arr[i]]++;\n        } else\
  \ {\n            result[arr[i]] = 1;\n        }\n        if (result[arr[i]] > max)\
  \ {\n            max = result[arr[i]];\n        }\n    }\n    for (let key in result)\
  \ {\n        if (result[key] !== max) {\n            delete result[key];\n     \
  \   }\n    }\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "  const result: {[key: string]: number} = {};\n  test.split(' ').forEach((letter)\
  \ => {\n    if (result[letter]) {\n      result[letter] += 1;\n    } else {\n  \
  \    result[letter] = 1;\n    }\n  });\n  return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < letters.length;\
  \ i++) {\n        if (result[letters[i]] === undefined) {\n            result[letters[i]]\
  \ = 1;\n        } else {\n            result[letters[i]]++;\n        }\n       \
  \ if (result[letters[i]] > max) {\n            max = result[letters[i]];\n     \
  \   }\n    }\n    for (let key in result) {\n        if (result[key] !== max) {\n\
  \            delete result[key];\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    let max = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count\
  \ = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] ===\
  \ arr[j]) {\n                count++;\n            }\n        }\n        if (count\
  \ > max) {\n            max = count;\n        }\n        result[arr[i]] = count;\n\
  \    }\n    for (let key in result) {\n        if (result[key] !== max) {\n    \
  \        delete result[key];\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter]++;\n        } else {\n            result[letter] = 1;\n  \
  \      }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n   \
  \         result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let testArray: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < testArray.length;\
  \ i++) {\n        if (result[testArray[i]]) {\n            result[testArray[i]]++;\n\
  \        } else {\n            result[testArray[i]] = 1;\n        }\n        if\
  \ (result[testArray[i]] > max) {\n            max = result[testArray[i]];\n    \
  \    }\n    }\n    for (let key in result) {\n        if (result[key] < max) {\n\
  \            delete result[key];\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter]++;\n        } else {\n            result[letter] = 1;\n  \
  \      }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let i = 0; i < letters.length; i++) {\n        if (result[letters[i]])\
  \ {\n            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    let maxLetter: string[] = [];\n    for (let\
  \ i: number = 0; i < letters.length; i++) {\n        if (result[letters[i]] ===\
  \ undefined) {\n            result[letters[i]] = 1;\n        } else {\n        \
  \    result[letters[i]]++;\n        }\n        if (result[letters[i]] > max) {\n\
  \            max = result[letters[i]];\n            maxLetter = [];\n          \
  \  maxLetter.push(letters[i]);\n        } else if (result[letters[i]] === max) {\n\
  \            maxLetter.push(letters[i]);\n        }\n    }\n    for (let i: number\
  \ = 0; i < maxLetter.length; i++) {\n        result[maxLetter[i]] = max;\n    }\n\
  \    return result;\n}\nconsole.log(histogram('a b c'));\nconsole.log(histogram('a\
  \ b b a'));\nconsole.log(histogram('a b c a b'));\nconsole.log(histogram('b b b\
  \ b a'));\nconsole.log(histogram(''));\n"
- "    const letters = test.split(' ');\n    const result: {[key: string]: number}\
  \ = {};\n    for (const letter of letters) {\n        if (result[letter]) {\n  \
  \          result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result = {};\n    let max = 0;\n    let maxKeys = [];\n    test.split('\
  \ ').forEach(function(key) {\n        if (result[key]) {\n            result[key]++;\n\
  \        } else {\n            result[key] = 1;\n        }\n        if (result[key]\
  \ > max) {\n            max = result[key];\n            maxKeys = [key];\n     \
  \   } else if (result[key] === max) {\n            maxKeys.push(key);\n        }\n\
  \    });\n    return maxKeys.reduce(function(acc, key) {\n        acc[key] = max;\n\
  \        return acc;\n    }, {});\n}\n"
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr: string[] = test.split('\
  \ ');\n    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n\
  \            result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    test.split(' ').forEach(letter\
  \ => {\n        if (letter in result) {\n            result[letter]++;\n       \
  \ } else {\n            result[letter] = 1;\n        }\n    });\n    return result;\n\
  }\n"
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let i = 0; i < letters.length; i++) {\n        if (result[letters[i]])\
  \ {\n            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < letters.length;\
  \ i++) {\n        if (result[letters[i]]) {\n            result[letters[i]]++;\n\
  \        } else {\n            result[letters[i]] = 1;\n        }\n        if (result[letters[i]]\
  \ > max) {\n            max = result[letters[i]];\n        }\n    }\n    for (let\
  \ key in result) {\n        if (result[key] < max) {\n            delete result[key];\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < letters.length;\
  \ i++) {\n        if (result[letters[i]] === undefined) {\n            result[letters[i]]\
  \ = 1;\n        } else {\n            result[letters[i]]++;\n        }\n       \
  \ if (result[letters[i]] > max) {\n            max = result[letters[i]];\n     \
  \   }\n    }\n    for (let key in result) {\n        if (result[key] < max) {\n\
  \            delete result[key];\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter]++;\n        } else {\n            result[letter] = 1;\n  \
  \      }\n    }\n    return result;\n}\n"
- "    let result = {};\n    let arr = test.split(' ');\n    let max = 0;\n    for\
  \ (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n          \
  \  result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n      \
  \  }\n        if (result[arr[i]] > max) {\n            max = result[arr[i]];\n \
  \       }\n    }\n    for (let key in result) {\n        if (result[key] < max)\
  \ {\n            delete result[key];\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n   \
  \         result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    test.split(' ').forEach(letter\
  \ => {\n        if (result[letter]) {\n            result[letter]++;\n        }\
  \ else {\n            result[letter] = 1;\n        }\n    });\n    return result;\n\
  }\n"
- "    let letters: string[] = test.split(' ');\n    let result: {[key: string]: number}\
  \ = {};\n    let max: number = 0;\n    for (let i: number = 0; i < letters.length;\
  \ i++) {\n        if (result[letters[i]] === undefined) {\n            result[letters[i]]\
  \ = 1;\n        } else {\n            result[letters[i]]++;\n        }\n       \
  \ if (result[letters[i]] > max) {\n            max = result[letters[i]];\n     \
  \   }\n    }\n    for (let key in result) {\n        if (result[key] !== max) {\n\
  \            delete result[key];\n        }\n    }\n    return result;\n}\n"
- "    let dict: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
  \ maxKeys: string[] = [];\n    test.split(' ').forEach(function(item: string) {\n\
  \        if (dict[item] === undefined) {\n            dict[item] = 1;\n        }\
  \ else {\n            dict[item]++;\n        }\n        if (dict[item] > max) {\n\
  \            max = dict[item];\n            maxKeys = [item];\n        } else if\
  \ (dict[item] === max) {\n            maxKeys.push(item);\n        }\n    });\n\
  \    return maxKeys.reduce(function(obj: {[key: string]: number}, key: string) {\n\
  \        obj[key] = max;\n        return obj;\n    }, {});\n}\n"
- "    const result: {[key: string]: number} = {};\n    const testArray = test.split('\
  \ ');\n    for (let i = 0; i < testArray.length; i++) {\n        if (result[testArray[i]])\
  \ {\n            result[testArray[i]]++;\n        } else {\n            result[testArray[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let letter of letters) {\n        if (result[letter]\
  \ === undefined) {\n            result[letter] = 1;\n        } else {\n        \
  \    result[letter]++;\n        }\n        if (result[letter] > max) {\n       \
  \     max = result[letter];\n        }\n    }\n    for (let key in result) {\n \
  \       if (result[key] < max) {\n            delete result[key];\n        }\n \
  \   }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter]++;\n        } else {\n            result[letter] = 1;\n  \
  \      }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr: string[] = test.split(\"\
  \ \");\n    let max: number = 0;\n    for (let i: number = 0; i < arr.length; i++)\
  \ {\n        if (result[arr[i]]) {\n            result[arr[i]]++;\n        } else\
  \ {\n            result[arr[i]] = 1;\n        }\n        if (result[arr[i]] > max)\
  \ {\n            max = result[arr[i]];\n        }\n    }\n    for (let key in result)\
  \ {\n        if (result[key] < max) {\n            delete result[key];\n       \
  \ }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    test.split(' ').forEach(function(letter)\
  \ {\n        if (result[letter]) {\n            result[letter]++;\n        } else\
  \ {\n            result[letter] = 1;\n        }\n    });\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let letter of letters) {\n        if (result[letter]\
  \ === undefined) {\n            result[letter] = 1;\n        } else {\n        \
  \    result[letter]++;\n        }\n        if (result[letter] > max) {\n       \
  \     max = result[letter];\n        }\n    }\n    for (let letter in result) {\n\
  \        if (result[letter] < max) {\n            delete result[letter];\n     \
  \   }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter]++;\n        } else {\n            result[letter] = 1;\n  \
  \      }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let i: number = 0; i < letters.length; i++) {\n        if (result[letters[i]])\
  \ {\n            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n   \
  \         result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter]++;\n        } else {\n            result[letter] = 1;\n  \
  \      }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    letters.forEach(letter => {\n        if (result[letter]) {\n        \
  \    result[letter]++;\n        } else {\n            result[letter] = 1;\n    \
  \    }\n    });\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter]++;\n        } else {\n            result[letter] = 1;\n  \
  \      }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters = test.split(' ');\n\
  \    let max = 0;\n    for (let i = 0; i < letters.length; i++) {\n        if (letters[i]\
  \ in result) {\n            result[letters[i]]++;\n        } else {\n          \
  \  result[letters[i]] = 1;\n        }\n        if (result[letters[i]] > max) {\n\
  \            max = result[letters[i]];\n        }\n    }\n    for (let key in result)\
  \ {\n        if (result[key] < max) {\n            delete result[key];\n       \
  \ }\n    }\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    const arr = test.split(' ');\n\
  \    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n   \
  \         result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "  let result: {[key: string]: number} = {};\n  let letters: string[] = test.split('\
  \ ');\n  let max: number = 0;\n  for (let letter of letters) {\n    if (result[letter]\
  \ === undefined) {\n      result[letter] = 1;\n    } else {\n      result[letter]++;\n\
  \    }\n    if (result[letter] > max) {\n      max = result[letter];\n    }\n  }\n\
  \  for (let key in result) {\n    if (result[key] < max) {\n      delete result[key];\n\
  \    }\n  }\n  return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr: string[] = test.split('\
  \ ');\n    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n\
  \            result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result = {};\n    let letters = test.split(' ');\n    for (let i = 0; i\
  \ < letters.length; i++) {\n        if (result[letters[i]]) {\n            result[letters[i]]++;\n\
  \        } else {\n            result[letters[i]] = 1;\n        }\n    }\n    return\
  \ result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < letters.length;\
  \ i++) {\n        if (result[letters[i]]) {\n            result[letters[i]]++;\n\
  \        } else {\n            result[letters[i]] = 1;\n        }\n        if (result[letters[i]]\
  \ > max) {\n            max = result[letters[i]];\n        }\n    }\n    for (let\
  \ key in result) {\n        if (result[key] < max) {\n            delete result[key];\n\
  \        }\n    }\n    return result;\n}\n"
- "  const result: {[key: string]: number} = {};\n  const letters = test.split(' ');\n\
  \  for (const letter of letters) {\n    if (result[letter]) {\n      result[letter]++;\n\
  \    } else {\n      result[letter] = 1;\n    }\n  }\n  return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let letter of letters) {\n        if (result[letter]\
  \ === undefined) {\n            result[letter] = 1;\n        } else {\n        \
  \    result[letter]++;\n        }\n        if (result[letter] > max) {\n       \
  \     max = result[letter];\n        }\n    }\n    for (let key in result) {\n \
  \       if (result[key] < max) {\n            delete result[key];\n        }\n \
  \   }\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    let max = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]])\
  \ {\n            result[arr[i]]++;\n        } else {\n            result[arr[i]]\
  \ = 1;\n        }\n        if (result[arr[i]] > max) {\n            max = result[arr[i]];\n\
  \        }\n    }\n    for (let key in result) {\n        if (result[key] < max)\
  \ {\n            delete result[key];\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < letters.length;\
  \ i++) {\n        if (result[letters[i]]) {\n            result[letters[i]]++;\n\
  \        } else {\n            result[letters[i]] = 1;\n        }\n        if (result[letters[i]]\
  \ > max) {\n            max = result[letters[i]];\n        }\n    }\n    for (let\
  \ key in result) {\n        if (result[key] < max) {\n            delete result[key];\n\
  \        }\n    }\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    test.split(' ').forEach(letter\
  \ => {\n        if (result[letter]) {\n            result[letter]++;\n        }\
  \ else {\n            result[letter] = 1;\n        }\n    });\n    return result;\n\
  }\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter]++;\n        } else {\n            result[letter] = 1;\n  \
  \      }\n    }\n    return result;\n}\n"
- "    let result = {};\n    let arr = test.split(' ');\n    arr.forEach(function(item)\
  \ {\n        if (result[item]) {\n            result[item]++;\n        } else {\n\
  \            result[item] = 1;\n        }\n    });\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    test.split(' ').forEach(letter\
  \ => {\n        if (result[letter]) {\n            result[letter]++;\n        }\
  \ else {\n            result[letter] = 1;\n        }\n    });\n    return result;\n\
  }\n"
- "    let result: {[key: string]: number} = {};\n    let arr: string[] = test.split('\
  \ ');\n    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n\
  \            result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    let max = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]])\
  \ {\n            result[arr[i]]++;\n        } else {\n            result[arr[i]]\
  \ = 1;\n        }\n        if (result[arr[i]] > max) {\n            max = result[arr[i]];\n\
  \        }\n    }\n    for (let key in result) {\n        if (result[key] !== max)\
  \ {\n            delete result[key];\n        }\n    }\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    test.split(' ').forEach(letter\
  \ => {\n        if (result[letter]) {\n            result[letter]++;\n        }\
  \ else {\n            result[letter] = 1;\n        }\n    });\n    return result;\n\
  }\n"
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "  const result: {[key: string]: number} = {};\n  test.split(' ').forEach((letter)\
  \ => {\n    if (result[letter]) {\n      result[letter]++;\n    } else {\n     \
  \ result[letter] = 1;\n    }\n  });\n  return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(\" \");\n\
  \    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n   \
  \         result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(\" \");\n\
  \    let max = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]])\
  \ {\n            result[arr[i]]++;\n        } else {\n            result[arr[i]]\
  \ = 1;\n        }\n        if (result[arr[i]] > max) {\n            max = result[arr[i]];\n\
  \        }\n    }\n    let finalResult: {[key: string]: number} = {};\n    for (let\
  \ key in result) {\n        if (result[key] === max) {\n            finalResult[key]\
  \ = result[key];\n        }\n    }\n    return finalResult;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n   \
  \         result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let splittedTest = test.split('\
  \ ');\n    for (let i = 0; i < splittedTest.length; i++) {\n        if (result[splittedTest[i]])\
  \ {\n            result[splittedTest[i]]++;\n        } else {\n            result[splittedTest[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result = {};\n    let letters = test.split(' ');\n    let max = 0;\n  \
  \  for (let i = 0; i < letters.length; i++) {\n        if (result[letters[i]]) {\n\
  \            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n        if (result[letters[i]] > max) {\n            max = result[letters[i]];\n\
  \        }\n    }\n    let maxLetters = [];\n    for (let key in result) {\n   \
  \     if (result[key] === max) {\n            maxLetters.push(key);\n        }\n\
  \    }\n    let finalResult = {};\n    for (let i = 0; i < maxLetters.length; i++)\
  \ {\n        finalResult[maxLetters[i]] = max;\n    }\n    return finalResult;\n\
  }\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let i = 0; i < letters.length; i++) {\n        if (result[letters[i]])\
  \ {\n            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let dict: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
  \ maxKeys: string[] = [];\n    test.split(' ').forEach(function(key: string) {\n\
  \        if (key in dict) {\n            dict[key] += 1;\n        } else {\n   \
  \         dict[key] = 1;\n        }\n        if (dict[key] > max) {\n          \
  \  max = dict[key];\n            maxKeys = [key];\n        } else if (dict[key]\
  \ === max) {\n            maxKeys.push(key);\n        }\n    });\n    let result:\
  \ {[key: string]: number} = {};\n    maxKeys.forEach(function(key: string) {\n \
  \       result[key] = max;\n    });\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < letters.length;\
  \ i++) {\n        if (result[letters[i]] === undefined) {\n            result[letters[i]]\
  \ = 1;\n        } else {\n            result[letters[i]]++;\n        }\n       \
  \ if (result[letters[i]] > max) {\n            max = result[letters[i]];\n     \
  \   }\n    }\n    for (let key in result) {\n        if (result[key] < max) {\n\
  \            delete result[key];\n        }\n    }\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    const array = test.split('\
  \ ');\n    for (let i = 0; i < array.length; i++) {\n        if (result[array[i]])\
  \ {\n            result[array[i]]++;\n        } else {\n            result[array[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter]++;\n        } else {\n            result[letter] = 1;\n  \
  \      }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < letters.length;\
  \ i++) {\n        if (result[letters[i]]) {\n            result[letters[i]]++;\n\
  \        } else {\n            result[letters[i]] = 1;\n        }\n        if (result[letters[i]]\
  \ > max) {\n            max = result[letters[i]];\n        }\n    }\n    for (let\
  \ key in result) {\n        if (result[key] < max) {\n            delete result[key];\n\
  \        }\n    }\n    return result;\n}\n"
- "  const result: {[key: string]: number} = {};\n  const letters = test.split(' ');\n\
  \  letters.forEach((letter) => {\n    if (result[letter]) {\n      result[letter]++;\n\
  \    } else {\n      result[letter] = 1;\n    }\n  });\n  return result;\n}\n"
- "    let hist: {[key: string]: number} = {};\n    let max: number = 0;\n    let\
  \ maxKeys: string[] = [];\n    test.split(' ').forEach(function(letter) {\n    \
  \    if (hist[letter] === undefined) {\n            hist[letter] = 1;\n        }\
  \ else {\n            hist[letter]++;\n        }\n        if (hist[letter] > max)\
  \ {\n            max = hist[letter];\n            maxKeys = [letter];\n        }\
  \ else if (hist[letter] === max) {\n            maxKeys.push(letter);\n        }\n\
  \    });\n    let result: {[key: string]: number} = {};\n    maxKeys.forEach(function(key)\
  \ {\n        result[key] = max;\n    });\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let words = test.split(' ');\n\
  \    for (let i = 0; i < words.length; i++) {\n        if (result[words[i]]) {\n\
  \            result[words[i]]++;\n        } else {\n            result[words[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let words = test.split(' ');\n\
  \    for (let word of words) {\n        if (result[word]) {\n            result[word]++;\n\
  \        } else {\n            result[word] = 1;\n        }\n    }\n    return result;\n\
  }\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let letter of letters) {\n        if (result[letter]) {\n      \
  \      result[letter] += 1;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < letters.length;\
  \ i++) {\n        if (result[letters[i]]) {\n            result[letters[i]]++;\n\
  \        } else {\n            result[letters[i]] = 1;\n        }\n        if (result[letters[i]]\
  \ > max) {\n            max = result[letters[i]];\n        }\n    }\n    for (let\
  \ key in result) {\n        if (result[key] < max) {\n            delete result[key];\n\
  \        }\n    }\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    const letters: string[] =\
  \ test.split(' ');\n    letters.forEach((letter: string) => {\n        if (result[letter])\
  \ {\n            result[letter]++;\n        } else {\n            result[letter]\
  \ = 1;\n        }\n    });\n    return result;\n}\n"
- "    const result: {[key: string]: number} = {};\n    const letters = test.split('\
  \ ');\n    for (const letter of letters) {\n        if (result[letter]) {\n    \
  \        result[letter]++;\n        } else {\n            result[letter] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < letters.length;\
  \ i++) {\n        if (result[letters[i]]) {\n            result[letters[i]]++;\n\
  \        } else {\n            result[letters[i]] = 1;\n        }\n        if (result[letters[i]]\
  \ > max) {\n            max = result[letters[i]];\n        }\n    }\n    for (let\
  \ key in result) {\n        if (result[key] < max) {\n            delete result[key];\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let words = test.split(' ');\n\
  \    for (let i = 0; i < words.length; i++) {\n        if (result[words[i]]) {\n\
  \            result[words[i]]++;\n        } else {\n            result[words[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    for (let i: number = 0; i < letters.length; i++) {\n        if (result[letters[i]])\
  \ {\n            result[letters[i]]++;\n        } else {\n            result[letters[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr: string[] = test.split('\
  \ ');\n    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n\
  \            result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "  const result: {[key: string]: number} = {};\n  const letters: string[] = test.split('\
  \ ');\n  for (const letter of letters) {\n    if (result[letter]) {\n      result[letter]++;\n\
  \    } else {\n      result[letter] = 1;\n    }\n  }\n  return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i = 0; i < letters.length; i++) {\n\
  \        if (result[letters[i]]) {\n            result[letters[i]]++;\n        }\
  \ else {\n            result[letters[i]] = 1;\n        }\n        if (result[letters[i]]\
  \ > max) {\n            max = result[letters[i]];\n        }\n    }\n    for (let\
  \ key in result) {\n        if (result[key] < max) {\n            delete result[key];\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let i: number = 0; i < letters.length;\
  \ i++) {\n        if (result[letters[i]]) {\n            result[letters[i]]++;\n\
  \        } else {\n            result[letters[i]] = 1;\n        }\n        if (result[letters[i]]\
  \ > max) {\n            max = result[letters[i]];\n        }\n    }\n    for (let\
  \ key in result) {\n        if (result[key] < max) {\n            delete result[key];\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr: string[] = test.split('\
  \ ');\n    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n\
  \            result[arr[i]] += 1;\n        } else {\n            result[arr[i]]\
  \ = 1;\n        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr: string[] = test.split('\
  \ ');\n    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n\
  \            result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let letters: string[] = test.split('\
  \ ');\n    let max: number = 0;\n    for (let letter of letters) {\n        if (result[letter]\
  \ === undefined) {\n            result[letter] = 1;\n        } else {\n        \
  \    result[letter]++;\n        }\n        if (result[letter] > max) {\n       \
  \     max = result[letter];\n        }\n    }\n    for (let key in result) {\n \
  \       if (result[key] < max) {\n            delete result[key];\n        }\n \
  \   }\n    return result;\n}\n"
- "    const dict: {[key: string]: number} = {};\n    test.split(' ').forEach(letter\
  \ => {\n        if (dict[letter]) {\n            dict[letter]++;\n        } else\
  \ {\n            dict[letter] = 1;\n        }\n    });\n    return dict;\n}\n"
- "    let result: {[key: string]: number} = {};\n    let arr = test.split(' ');\n\
  \    for (let i = 0; i < arr.length; i++) {\n        if (result[arr[i]]) {\n   \
  \         result[arr[i]]++;\n        } else {\n            result[arr[i]] = 1;\n\
  \        }\n    }\n    return result;\n}\n"
language: ts
name: HumanEval_111_histogram
prompt: '//Given a string representing a space separated lowercase letters, return
  a dictionary

  // of the letter with the most repetition and containing the corresponding count.

  // If several letters have the same occurrence, return all of them.

  // Example:

  // histogram(''a b c'') == {''a'': 1, ''b'': 1, ''c'': 1}

  // histogram(''a b b a'') == {''a'': 2, ''b'': 2}

  // histogram(''a b c a b'') == {''a'': 2, ''b'': 2}

  // histogram(''b b b b a'') == {''b'': 4}

  // histogram('''') == {}

  function histogram(test: string): {[key: string]: number} {

  '
stop_tokens:
- '

  function '
- '

  /*'
- '

  //'
- '

  class'
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = histogram;\n  assert.deepEqual(candidate(\"a b b a\"\
  ),{\"a\": 2, \"b\": 2});\n  assert.deepEqual(candidate(\"a b c a b\"),{\"a\": 2,\
  \ \"b\": 2});\n  assert.deepEqual(candidate(\"a b c d g\"),{\"a\": 1, \"b\": 1,\
  \ \"c\": 1, \"d\": 1, \"g\": 1});\n  assert.deepEqual(candidate(\"r t g\"),{\"r\"\
  : 1, \"t\": 1, \"g\": 1});\n  assert.deepEqual(candidate(\"b b b b a\"),{\"b\":\
  \ 4});\n  assert.deepEqual(candidate(\"r t g\"),{\"r\": 1, \"t\": 1, \"g\": 1});\n\
  \  assert.deepEqual(candidate(\"\"),{});\n  assert.deepEqual(candidate(\"a\"),{\"\
  a\": 1});\n}\n\ntest();"

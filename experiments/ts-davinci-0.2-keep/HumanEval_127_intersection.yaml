name: HumanEval_127_intersection
language: humaneval_to_typescript.py
prompt: "//You are given two intervals,\n// where each interval is a pair of integers.\
  \ For example, interval = (start, end) = (1, 2).\n// The given intervals are closed\
  \ which means that the interval (start, end)\n// includes both start and end.\n\
  // For each given interval, it is assumed that its start is less or equal its end.\n\
  // Your task is to determine whether the length of intersection of these two \n\
  // intervals is a prime number.\n// Example, the intersection of the intervals (1,\
  \ 3), (2, 4) is (2, 3)\n// which its length is 1, which not a prime number.\n//\
  \ If the length of the intersection is a prime number, return \"YES\",\n// otherwise,\
  \ return \"NO\".\n// If the two intervals don't intersect, return \"NO\".\n// [input/output]\
  \ samples:\n// intersection((1, 2), (2, 3)) ==> \"NO\"\n// intersection((-1, 1),\
  \ (0, 4)) ==> \"NO\"\n// intersection((-3, -1), (-5, 5)) ==> \"YES\"\nfunction intersection(interval1:\
  \ [number, number], interval2: [number, number]): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = intersection;\n  assert.deepEqual(candidate([1, 2],\
  \ [2, 3]),\"NO\");\n  assert.deepEqual(candidate([-1, 1], [0, 4]),\"NO\");\n  assert.deepEqual(candidate([-3,\
  \ -1], [-5, 5]),\"YES\");\n  assert.deepEqual(candidate([-2, 2], [-4, 0]),\"YES\"\
  );\n  assert.deepEqual(candidate([-11, 2], [-1, -1]),\"NO\");\n  assert.deepEqual(candidate([1,\
  \ 2], [3, 5]),\"NO\");\n  assert.deepEqual(candidate([1, 2], [1, 2]),\"NO\");\n\
  \  assert.deepEqual(candidate([-2, -2], [-3, -2]),\"NO\");\n}\n\ntest();"
completions: ["    const [start1, end1] = interval1;\n    const [start2, end2] = interval2;\n\
    \    const start = Math.max(start1, start2);\n    const end = Math.min(end1, end2);\n\
    \    if (start > end) {\n        return \"NO\";\n    }\n    const length = end\
    \ - start + 1;\n    const primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    return primes.includes(length)\
    \ ? \"YES\" : \"NO\";\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1,\
    \ 1], [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let start\
    \ = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ length = end - start + 1;\n    if (length < 2) {\n        return \"NO\";\n \
    \   }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0) {\n\
    \            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    const start = Math.max(interval1[0], interval2[0]);\n\
    \    const end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n\
    \        return \"NO\";\n    }\n    return isPrime(end - start + 1) ? \"YES\"\
    \ : \"NO\";\n}\n", "    const [start1, end1] = interval1;\n    const [start2,\
    \ end2] = interval2;\n    const start = Math.max(start1, start2);\n    const end\
    \ = Math.min(end1, end2);\n    if (start > end) {\n        return \"NO\";\n  \
    \  }\n    const length = end - start + 1;\n    if (length === 1) {\n        return\
    \ \"NO\";\n    }\n    for (let i = 2; i < length; i++) {\n        if (length %\
    \ i === 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\"\
    ;\n}\n", "    let [start1, end1] = interval1;\n    let [start2, end2] = interval2;\n\
    \    let start = Math.max(start1, start2);\n    let end = Math.min(end1, end2);\n\
    \    if (start > end) return \"NO\";\n    let len = end - start + 1;\n    if (len\
    \ < 2) return \"NO\";\n    for (let i = 2; i < len; i++) {\n        if (len %\
    \ i === 0) return \"NO\";\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    let start = Math.max(interval1[0], interval2[0]);\n \
    \   let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n\
    \        return \"NO\";\n    }\n    let length = end - start + 1;\n    if (length\
    \ === 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\n\
    console.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3, -1],\
    \ [-5, 5]));", "    let start = Math.max(interval1[0], interval2[0]);\n    let\
    \ end = Math.min(interval1[1], interval2[1]);\n    if (start > end) return \"\
    NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}\n", "    let\
    \ start = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    let length = end - start;\n    if (length < 0) {\n     \
    \   return \"NO\";\n    }\n    if (length === 1) {\n        return \"NO\";\n \
    \   }\n    if (length === 2) {\n        return \"YES\";\n    }\n    if (length\
    \ % 2 === 0) {\n        return \"NO\";\n    }\n    for (let i = 3; i < length;\
    \ i += 2) {\n        if (length % i === 0) {\n            return \"NO\";\n   \
    \     }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1, 2], [2,\
    \ 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    let start = Math.max(interval1[0], interval2[0]);\n \
    \   let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n\
    \        return \"NO\";\n    }\n    let length = end - start + 1;\n    let prime\
    \ = true;\n    for (let i = 2; i < length; i++) {\n        if (length % i ===\
    \ 0) {\n            prime = false;\n            break;\n        }\n    }\n   \
    \ return prime ? \"YES\" : \"NO\";\n}\n", "    const start = Math.max(interval1[0],\
    \ interval2[0]);\n    const end = Math.min(interval1[1], interval2[1]);\n    if\
    \ (start > end) {\n        return \"NO\";\n    }\n    const diff = end - start;\n\
    \    if (diff === 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i <\
    \ diff; i++) {\n        if (diff % i === 0) {\n            return \"NO\";\n  \
    \      }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1, 2], [2,\
    \ 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    let start = Math.max(interval1[0], interval2[0]);\n \
    \   let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n\
    \        return \"NO\";\n    }\n    let length = end - start + 1;\n    if (length\
    \ < 2) {\n        return \"NO\";\n    }\n    if (length === 2) {\n        return\
    \ \"YES\";\n    }\n    if (length % 2 === 0) {\n        return \"NO\";\n    }\n\
    \    for (let i = 3; i < length; i += 2) {\n        if (length % i === 0) {\n\
    \            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n", "  \
    \  let start = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ length = end - start + 1;\n    if (length === 1) {\n        return \"NO\";\n\
    \    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n",
  "    const start = Math.max(interval1[0], interval2[0]);\n    const end = Math.min(interval1[1],\
    \ interval2[1]);\n    const length = end - start;\n    if (length < 0) {\n   \
    \     return \"NO\";\n    }\n    if (length === 1) {\n        return \"NO\";\n\
    \    }\n    if (length === 2) {\n        return \"YES\";\n    }\n    for (let\
    \ i = 2; i < length; i++) {\n        if (length % i === 0) {\n            return\
    \ \"NO\";\n        }\n    }\n    return \"YES\";\n}\n", "    const [start1, end1]\
    \ = interval1;\n    const [start2, end2] = interval2;\n    if (start1 > end2 ||\
    \ start2 > end1) {\n        return \"NO\";\n    }\n    const start = Math.max(start1,\
    \ start2);\n    const end = Math.min(end1, end2);\n    const length = end - start\
    \ + 1;\n    return isPrime(length) ? \"YES\" : \"NO\";\n}\n", "    let start =\
    \ Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ len = end - start + 1;\n    return isPrime(len) ? \"YES\" : \"NO\";\n}\n", " \
    \   const start = Math.max(interval1[0], interval2[0]);\n    const end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    return\
    \ isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}\n", "    let [start1, end1]\
    \ = interval1;\n    let [start2, end2] = interval2;\n    let intersection: [number,\
    \ number] = [Math.max(start1, start2), Math.min(end1, end2)];\n    if (intersection[0]\
    \ > intersection[1]) {\n        return \"NO\";\n    }\n    let length = intersection[1]\
    \ - intersection[0] + 1;\n    if (length === 1) {\n        return \"NO\";\n  \
    \  }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0) {\n\
    \            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n", "  \
    \  let start = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ length = end - start + 1;\n    return isPrime(length) ? \"YES\" : \"NO\";\n\
    }\n", "    let [start1, end1] = interval1;\n    let [start2, end2] = interval2;\n\
    \    let start = Math.max(start1, start2);\n    let end = Math.min(end1, end2);\n\
    \    if (start > end) {\n        return \"NO\";\n    }\n    let len = end - start\
    \ + 1;\n    if (len < 2) {\n        return \"NO\";\n    }\n    for (let i = 2;\
    \ i < len; i++) {\n        if (len % i === 0) {\n            return \"NO\";\n\
    \        }\n    }\n    return \"YES\";\n}\n", "  const [start1, end1] = interval1;\n\
    \  const [start2, end2] = interval2;\n  const start = Math.max(start1, start2);\n\
    \  const end = Math.min(end1, end2);\n  if (start > end) {\n    return \"NO\"\
    ;\n  }\n  const length = end - start + 1;\n  return isPrime(length) ? \"YES\"\
    \ : \"NO\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n  \
    \  let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n \
    \       return \"NO\";\n    }\n    let length = end - start + 1;\n    if (length\
    \ === 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n\
    \    let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n\
    \        return \"NO\";\n    }\n    let length = end - start + 1;\n    if (length\
    \ < 2) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\n\
    console.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3, -1],\
    \ [-5, 5]));", "    let start = Math.max(interval1[0], interval2[0]);\n    let\
    \ end = Math.min(interval1[1], interval2[1]);\n    if (start > end) return \"\
    NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}\n", "    const\
    \ [start1, end1] = interval1;\n    const [start2, end2] = interval2;\n    const\
    \ start = Math.max(start1, start2);\n    const end = Math.min(end1, end2);\n \
    \   if (start > end) {\n        return \"NO\";\n    }\n    return isPrime(end\
    \ - start + 1) ? \"YES\" : \"NO\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    let\
    \ length = end - start;\n    return isPrime(length) ? \"YES\" : \"NO\";\n}\n",
  "    let start = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ length = end - start + 1;\n    if (length === 1) {\n        return \"NO\";\n\
    \    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n",
  "    let start = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    let length = end - start;\n    if (length < 0) {\n     \
    \   return \"NO\";\n    }\n    return isPrime(length) ? \"YES\" : \"NO\";\n}\n",
  "    const [start1, end1] = interval1;\n    const [start2, end2] = interval2;\n\
    \    const start = Math.max(start1, start2);\n    const end = Math.min(end1, end2);\n\
    \    if (start > end) {\n        return \"NO\";\n    }\n    return isPrime(end\
    \ - start + 1) ? \"YES\" : \"NO\";\n}\n", "    const [start1, end1] = interval1;\n\
    \    const [start2, end2] = interval2;\n    const start = Math.max(start1, start2);\n\
    \    const end = Math.min(end1, end2);\n    if (start > end) {\n        return\
    \ \"NO\";\n    }\n    const length = end - start + 1;\n    if (length === 1) {\n\
    \        return \"NO\";\n    }\n    for (let i = 2; i < length; i++) {\n     \
    \   if (length % i === 0) {\n            return \"NO\";\n        }\n    }\n  \
    \  return \"YES\";\n}\n", "  const [start1, end1] = interval1;\n  const [start2,\
    \ end2] = interval2;\n  const start = Math.max(start1, start2);\n  const end =\
    \ Math.min(end1, end2);\n  if (start > end) {\n    return \"NO\";\n  }\n  const\
    \ length = end - start + 1;\n  if (length === 1) {\n    return \"NO\";\n  }\n\
    \  for (let i = 2; i < length; i++) {\n    if (length % i === 0) {\n      return\
    \ \"NO\";\n    }\n  }\n  return \"YES\";\n}\n\nconsole.log(intersection([1, 2],\
    \ [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "  const [start1, end1] = interval1;\n  const [start2, end2]\
    \ = interval2;\n  if (start1 > end2 || start2 > end1) {\n    return \"NO\";\n\
    \  }\n  const start = Math.max(start1, start2);\n  const end = Math.min(end1,\
    \ end2);\n  const length = end - start + 1;\n  if (length < 2) {\n    return \"\
    NO\";\n  }\n  for (let i = 2; i < length; i++) {\n    if (length % i === 0) {\n\
    \      return \"NO\";\n    }\n  }\n  return \"YES\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    let start = Math.max(interval1[0], interval2[0]);\n \
    \   let end = Math.min(interval1[1], interval2[1]);\n    let length = end - start;\n\
    \    if (length < 0) {\n        return \"NO\";\n    }\n    if (length === 1) {\n\
    \        return \"NO\";\n    }\n    if (length === 2) {\n        return \"YES\"\
    ;\n    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\n\
    console.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1, 1],\
    \ [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    const [start1,\
    \ end1] = interval1;\n    const [start2, end2] = interval2;\n    const start =\
    \ Math.max(start1, start2);\n    const end = Math.min(end1, end2);\n    if (start\
    \ > end) {\n        return \"NO\";\n    }\n    return isPrime(end - start + 1)\
    \ ? \"YES\" : \"NO\";\n}\n", "    const [start1, end1] = interval1;\n    const\
    \ [start2, end2] = interval2;\n    const start = Math.max(start1, start2);\n \
    \   const end = Math.min(end1, end2);\n    if (start > end) return \"NO\";\n \
    \   const length = end - start + 1;\n    if (length < 2) return \"NO\";\n    if\
    \ (length === 2) return \"YES\";\n    for (let i = 2; i < length; i++) {\n   \
    \     if (length % i === 0) return \"NO\";\n    }\n    return \"YES\";\n}\n",
  "    const start = Math.max(interval1[0], interval2[0]);\n    const end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    const\
    \ length = end - start + 1;\n    if (length === 1) {\n        return \"NO\";\n\
    \    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\n\
    console.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1, 1],\
    \ [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    const [start1,\
    \ end1] = interval1;\n    const [start2, end2] = interval2;\n    const start =\
    \ Math.max(start1, start2);\n    const end = Math.min(end1, end2);\n    if (start\
    \ > end) {\n        return \"NO\";\n    }\n    return isPrime(end - start + 1)\
    \ ? \"YES\" : \"NO\";\n}\n", "    const [start1, end1] = interval1;\n    const\
    \ [start2, end2] = interval2;\n    const start = Math.max(start1, start2);\n \
    \   const end = Math.min(end1, end2);\n    if (start > end) {\n        return\
    \ \"NO\";\n    }\n    const length = end - start + 1;\n    if (length === 1) {\n\
    \        return \"NO\";\n    }\n    for (let i = 2; i < length; i++) {\n     \
    \   if (length % i === 0) {\n            return \"NO\";\n        }\n    }\n  \
    \  return \"YES\";\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1,\
    \ 1], [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let start\
    \ = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ length = end - start + 1;\n    if (length < 2) {\n        return \"NO\";\n \
    \   }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0) {\n\
    \            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n", "  \
    \  const intersection = [Math.max(interval1[0], interval2[0]), Math.min(interval1[1],\
    \ interval2[1])];\n    if (intersection[0] > intersection[1]) return \"NO\";\n\
    \    const length = intersection[1] - intersection[0] + 1;\n    return isPrime(length)\
    \ ? \"YES\" : \"NO\";\n}\n", "    const start = Math.max(interval1[0], interval2[0]);\n\
    \    const end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n\
    \        return \"NO\";\n    }\n    const length = end - start + 1;\n    return\
    \ isPrime(length) ? \"YES\" : \"NO\";\n}\n", "    const [start1, end1] = interval1;\n\
    \    const [start2, end2] = interval2;\n    const start = Math.max(start1, start2);\n\
    \    const end = Math.min(end1, end2);\n    if (start > end) {\n        return\
    \ \"NO\";\n    }\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}\n",
  "    let start = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    let length = end - start;\n    return isPrime(length) ?\
    \ \"YES\" : \"NO\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n\
    \    let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) return\
    \ \"NO\";\n    let length = end - start + 1;\n    return isPrime(length) ? \"\
    YES\" : \"NO\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n\
    \    let end = Math.min(interval1[1], interval2[1]);\n    let length = end - start;\n\
    \    if (length < 0) {\n        return \"NO\";\n    }\n    if (length === 1) {\n\
    \        return \"NO\";\n    }\n    if (length === 2) {\n        return \"YES\"\
    ;\n    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n",
  "    const [start1, end1] = interval1;\n    const [start2, end2] = interval2;\n\
    \    const start = Math.max(start1, start2);\n    const end = Math.min(end1, end2);\n\
    \    if (start > end) {\n        return \"NO\";\n    }\n    const length = end\
    \ - start + 1;\n    return isPrime(length) ? \"YES\" : \"NO\";\n}\n", "    let\
    \ [start1, end1] = interval1;\n    let [start2, end2] = interval2;\n    let start\
    \ = Math.max(start1, start2);\n    let end = Math.min(end1, end2);\n    if (start\
    \ > end) {\n        return \"NO\";\n    }\n    let length = end - start + 1;\n\
    \    if (length === 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i\
    \ < length; i++) {\n        if (length % i === 0) {\n            return \"NO\"\
    ;\n        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1, 2],\
    \ [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    const [start1, end1] = interval1;\n    const [start2,\
    \ end2] = interval2;\n    const start = Math.max(start1, start2);\n    const end\
    \ = Math.min(end1, end2);\n    const length = end - start;\n    if (length < 0)\
    \ {\n        return \"NO\";\n    }\n    if (length === 0) {\n        return \"\
    YES\";\n    }\n    if (length === 1) {\n        return \"NO\";\n    }\n    for\
    \ (let i = 2; i < length; i++) {\n        if (length % i === 0) {\n          \
    \  return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n", "    let start\
    \ = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    let length = end - start;\n    if (length < 0) {\n     \
    \   return \"NO\";\n    }\n    if (length === 0) {\n        return \"YES\";\n\
    \    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\n\
    console.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1, 1],\
    \ [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let start =\
    \ Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    let length = end - start;\n    if (length < 0) {\n     \
    \   return \"NO\";\n    }\n    if (length === 1) {\n        return \"NO\";\n \
    \   }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0) {\n\
    \            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    let start = Math.max(interval1[0], interval2[0]);\n \
    \   let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) return\
    \ \"NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}\n", "  \
    \  const [start1, end1] = interval1;\n    const [start2, end2] = interval2;\n\
    \    const start = Math.max(start1, start2);\n    const end = Math.min(end1, end2);\n\
    \    if (start > end) {\n        return \"NO\";\n    }\n    const length = end\
    \ - start + 1;\n    return isPrime(length) ? \"YES\" : \"NO\";\n}\n", "    let\
    \ start = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ length = end - start + 1;\n    if (length === 1) {\n        return \"NO\";\n\
    \    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\n\
    console.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1, 1],\
    \ [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let start =\
    \ Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ length = end - start + 1;\n    if (length === 1) {\n        return \"NO\";\n\
    \    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\n\
    console.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1, 1],\
    \ [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let start =\
    \ Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ len = end - start + 1;\n    if (len < 2) {\n        return \"NO\";\n    }\n\
    \    for (let i = 2; i < len; i++) {\n        if (len % i === 0) {\n         \
    \   return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n", "    let start\
    \ = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ length = end - start + 1;\n    return isPrime(length) ? \"YES\" : \"NO\";\n\
    }\n", "    let start = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    return\
    \ isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    if\
    \ (start > end) {\n        return \"NO\";\n    }\n    let len = end - start +\
    \ 1;\n    if (len === 1) {\n        return \"NO\";\n    }\n    for (let i = 2;\
    \ i < len; i++) {\n        if (len % i === 0) {\n            return \"NO\";\n\
    \        }\n    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    if\
    \ (start > end) {\n        return \"NO\";\n    }\n    let len = end - start +\
    \ 1;\n    if (len <= 1) {\n        return \"NO\";\n    }\n    for (let i = 2;\
    \ i < len; i++) {\n        if (len % i === 0) {\n            return \"NO\";\n\
    \        }\n    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    let\
    \ length = end - start;\n    if (length < 0) {\n        return \"NO\";\n    }\n\
    \    return isPrime(length) ? \"YES\" : \"NO\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    if\
    \ (start > end) {\n        return \"NO\";\n    }\n    let len = end - start +\
    \ 1;\n    if (len === 1) {\n        return \"NO\";\n    }\n    for (let i = 2;\
    \ i < len; i++) {\n        if (len % i === 0) {\n            return \"NO\";\n\
    \        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1, 2],\
    \ [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    const [start1, end1] = interval1;\n    const [start2,\
    \ end2] = interval2;\n    const start = Math.max(start1, start2);\n    const end\
    \ = Math.min(end1, end2);\n    if (start > end) {\n        return \"NO\";\n  \
    \  }\n    const length = end - start + 1;\n    return isPrime(length) ? \"YES\"\
    \ : \"NO\";\n}\n", "    const [start1, end1] = interval1;\n    const [start2,\
    \ end2] = interval2;\n    const start = Math.max(start1, start2);\n    const end\
    \ = Math.min(end1, end2);\n    if (start > end) {\n        return \"NO\";\n  \
    \  }\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}\n", "    const\
    \ start = Math.max(interval1[0], interval2[0]);\n    const end = Math.min(interval1[1],\
    \ interval2[1]);\n    const length = end - start;\n    return length < 0 ? \"\
    NO\" : isPrime(length) ? \"YES\" : \"NO\";\n}\n", "    const [start1, end1] =\
    \ interval1;\n    const [start2, end2] = interval2;\n    const start = Math.max(start1,\
    \ start2);\n    const end = Math.min(end1, end2);\n    if (start > end) {\n  \
    \      return \"NO\";\n    }\n    const length = end - start + 1;\n    return\
    \ isPrime(length) ? \"YES\" : \"NO\";\n}\n", "    const [start1, end1] = interval1;\n\
    \    const [start2, end2] = interval2;\n    const start = Math.max(start1, start2);\n\
    \    const end = Math.min(end1, end2);\n    if (start > end) return \"NO\";\n\
    \    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}\n", "    const [start1,\
    \ end1] = interval1;\n    const [start2, end2] = interval2;\n    const start =\
    \ Math.max(start1, start2);\n    const end = Math.min(end1, end2);\n    if (start\
    \ > end) {\n        return \"NO\";\n    }\n    const length = end - start + 1;\n\
    \    if (length === 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i\
    \ < length; i++) {\n        if (length % i === 0) {\n            return \"NO\"\
    ;\n        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1, 2],\
    \ [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    let start = Math.max(interval1[0], interval2[0]);\n \
    \   let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n\
    \        return \"NO\";\n    }\n    return isPrime(end - start + 1) ? \"YES\"\
    \ : \"NO\";\n}\n", "    let [start1, end1] = interval1;\n    let [start2, end2]\
    \ = interval2;\n    let start = Math.max(start1, start2);\n    let end = Math.min(end1,\
    \ end2);\n    if (start > end) return \"NO\";\n    let length = end - start +\
    \ 1;\n    if (length < 2) return \"NO\";\n    if (length === 2) return \"YES\"\
    ;\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0) return\
    \ \"NO\";\n    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    let\
    \ length = end - start;\n    if (length < 0) {\n        return \"NO\";\n    }\n\
    \    if (length === 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i\
    \ < length; i++) {\n        if (length % i === 0) {\n            return \"NO\"\
    ;\n        }\n    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    let\
    \ length = end - start;\n    if (length < 0) {\n        return \"NO\";\n    }\n\
    \    if (length === 1) {\n        return \"NO\";\n    }\n    if (length === 2)\
    \ {\n        return \"YES\";\n    }\n    for (let i = 2; i < length; i++) {\n\
    \        if (length % i === 0) {\n            return \"NO\";\n        }\n    }\n\
    \    return \"YES\";\n}\n", "    const [start1, end1] = interval1;\n    const\
    \ [start2, end2] = interval2;\n    const start = Math.max(start1, start2);\n \
    \   const end = Math.min(end1, end2);\n    if (start > end) {\n        return\
    \ \"NO\";\n    }\n    const length = end - start + 1;\n    if (length < 2) {\n\
    \        return \"NO\";\n    }\n    if (length === 2) {\n        return \"YES\"\
    ;\n    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\n\
    console.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1, 1],\
    \ [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let [start1,\
    \ end1] = interval1;\n    let [start2, end2] = interval2;\n    let start = Math.max(start1,\
    \ start2);\n    let end = Math.min(end1, end2);\n    if (start > end) return \"\
    NO\";\n    let len = end - start + 1;\n    if (len < 2) return \"NO\";\n    for\
    \ (let i = 2; i <= Math.sqrt(len); i++) {\n        if (len % i === 0) return \"\
    NO\";\n    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    if\
    \ (start > end) {\n        return \"NO\";\n    }\n    let length = end - start\
    \ + 1;\n    if (length <= 1) {\n        return \"NO\";\n    }\n    for (let i\
    \ = 2; i < length; i++) {\n        if (length % i === 0) {\n            return\
    \ \"NO\";\n        }\n    }\n    return \"YES\";\n}\n", "    let [start1, end1]\
    \ = interval1;\n    let [start2, end2] = interval2;\n    let start = Math.max(start1,\
    \ start2);\n    let end = Math.min(end1, end2);\n    if (start > end) {\n    \
    \    return \"NO\";\n    }\n    let length = end - start + 1;\n    if (length\
    \ <= 1) {\n        return \"NO\";\n    }\n    if (length === 2) {\n        return\
    \ \"YES\";\n    }\n    for (let i = 2; i < length; i++) {\n        if (length\
    \ % i === 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\"\
    ;\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n    let end =\
    \ Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n        return\
    \ \"NO\";\n    }\n    let len = end - start + 1;\n    if (len < 2) {\n       \
    \ return \"NO\";\n    }\n    for (let i = 2; i < len; i++) {\n        if (len\
    \ % i === 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\"\
    ;\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1,\
    \ 1], [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let start\
    \ = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ len = end - start + 1;\n    return isPrime(len) ? \"YES\" : \"NO\";\n}\n", " \
    \   let start = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) return \"NO\";\n    return isPrime(end\
    \ - start + 1) ? \"YES\" : \"NO\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    if\
    \ (start > end) {\n        return \"NO\";\n    }\n    let length = end - start\
    \ + 1;\n    if (length < 2) {\n        return \"NO\";\n    }\n    for (let i =\
    \ 2; i < length; i++) {\n        if (length % i === 0) {\n            return \"\
    NO\";\n        }\n    }\n    return \"YES\";\n}\n", "  const [start1, end1] =\
    \ interval1;\n  const [start2, end2] = interval2;\n  const start = Math.max(start1,\
    \ start2);\n  const end = Math.min(end1, end2);\n  if (start > end) {\n    return\
    \ \"NO\";\n  }\n  const length = end - start + 1;\n  return isPrime(length) ?\
    \ \"YES\" : \"NO\";\n}\n", "    const [start1, end1] = interval1;\n    const [start2,\
    \ end2] = interval2;\n    const start = Math.max(start1, start2);\n    const end\
    \ = Math.min(end1, end2);\n    if (start > end) {\n        return \"NO\";\n  \
    \  }\n    const length = end - start + 1;\n    if (length === 1) {\n        return\
    \ \"NO\";\n    }\n    if (length === 2) {\n        return \"YES\";\n    }\n  \
    \  for (let i = 2; i < length; i++) {\n        if (length % i === 0) {\n     \
    \       return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    let start = Math.max(interval1[0], interval2[0]);\n \
    \   let end = Math.min(interval1[1], interval2[1]);\n    let len = end - start;\n\
    \    if (len <= 0) {\n        return \"NO\";\n    }\n    if (len === 1) {\n  \
    \      return \"NO\";\n    }\n    if (len === 2) {\n        return \"YES\";\n\
    \    }\n    for (let i = 2; i < len; i++) {\n        if (len % i === 0) {\n  \
    \          return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    let start = Math.max(interval1[0], interval2[0]);\n \
    \   let end = Math.min(interval1[1], interval2[1]);\n    let length = end - start;\n\
    \    if (length < 0) {\n        return \"NO\";\n    }\n    if (length === 0) {\n\
    \        return \"YES\";\n    }\n    if (length === 1) {\n        return \"NO\"\
    ;\n    }\n    if (length === 2) {\n        return \"YES\";\n    }\n    for (let\
    \ i = 2; i < length; i++) {\n        if (length % i === 0) {\n            return\
    \ \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    const start = Math.max(interval1[0], interval2[0]);\n\
    \    const end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n\
    \        return \"NO\";\n    }\n    const length = end - start + 1;\n    if (length\
    \ === 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\n\
    console.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3, -1],\
    \ [-5, 5]));", "    let start = Math.max(interval1[0], interval2[0]);\n    let\
    \ end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n      \
    \  return \"NO\";\n    }\n    let length = end - start + 1;\n    if (length ===\
    \ 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length; i++) {\n\
    \        if (length % i === 0) {\n            return \"NO\";\n        }\n    }\n\
    \    return \"YES\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n\
    \    let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n\
    \        return \"NO\";\n    }\n    let length = end - start + 1;\n    if (length\
    \ === 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\n\
    console.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3, -1],\
    \ [-5, 5]));", "    const start = Math.max(interval1[0], interval2[0]);\n    const\
    \ end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n      \
    \  return \"NO\";\n    }\n    const length = end - start + 1;\n    if (length\
    \ < 2) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";\n}\n", "    const [start1, end1] = interval1;\n  \
    \  const [start2, end2] = interval2;\n    const start = Math.max(start1, start2);\n\
    \    const end = Math.min(end1, end2);\n    if (start > end) {\n        return\
    \ \"NO\";\n    }\n    const length = end - start + 1;\n    if (length < 2) {\n\
    \        return \"NO\";\n    }\n    if (length === 2) {\n        return \"YES\"\
    ;\n    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\n\
    console.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1, 1],\
    \ [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let start =\
    \ Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    let length = end - start;\n    if (length < 0) {\n     \
    \   return \"NO\";\n    }\n    if (length === 0) {\n        return \"YES\";\n\
    \    }\n    if (length === 1) {\n        return \"NO\";\n    }\n    for (let i\
    \ = 2; i < length; i++) {\n        if (length % i === 0) {\n            return\
    \ \"NO\";\n        }\n    }\n    return \"YES\";\n}\n", "    const [start1, end1]\
    \ = interval1;\n    const [start2, end2] = interval2;\n    const start = Math.max(start1,\
    \ start2);\n    const end = Math.min(end1, end2);\n    if (start > end) {\n  \
    \      return \"NO\";\n    }\n    const length = end - start + 1;\n    if (length\
    \ === 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";\n}\n", "    const [start1, end1] = interval1;\n  \
    \  const [start2, end2] = interval2;\n    const start = Math.max(start1, start2);\n\
    \    const end = Math.min(end1, end2);\n    if (start > end) {\n        return\
    \ \"NO\";\n    }\n    const length = end - start + 1;\n    if (length === 1) {\n\
    \        return \"NO\";\n    }\n    for (let i = 2; i < length; i++) {\n     \
    \   if (length % i === 0) {\n            return \"NO\";\n        }\n    }\n  \
    \  return \"YES\";\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1,\
    \ 1], [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    const start\
    \ = Math.max(interval1[0], interval2[0]);\n    const end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    const\
    \ length = end - start + 1;\n    return isPrime(length) ? \"YES\" : \"NO\";\n\
    }\n", "    let start = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    let length = end - start;\n    if (length < 0) {\n     \
    \   return \"NO\";\n    }\n    if (length === 1) {\n        return \"NO\";\n \
    \   }\n    if (length === 2) {\n        return \"YES\";\n    }\n    for (let i\
    \ = 2; i < length; i++) {\n        if (length % i === 0) {\n            return\
    \ \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));\n", "    const [start1, end1] = interval1;\n    const [start2,\
    \ end2] = interval2;\n    const start = Math.max(start1, start2);\n    const end\
    \ = Math.min(end1, end2);\n    const length = end - start;\n    if (length <=\
    \ 0) {\n        return \"NO\";\n    }\n    if (length === 1) {\n        return\
    \ \"NO\";\n    }\n    for (let i = 2; i < length; i++) {\n        if (length %\
    \ i === 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\"\
    ;\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n    let end =\
    \ Math.min(interval1[1], interval2[1]);\n    let length = end - start;\n    if\
    \ (length < 0) {\n        return \"NO\";\n    }\n    if (length === 1) {\n   \
    \     return \"NO\";\n    }\n    if (length === 2) {\n        return \"YES\";\n\
    \    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\n\
    console.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1, 1],\
    \ [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let start =\
    \ Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    let length = end - start;\n    if (length < 0) {\n     \
    \   return \"NO\";\n    }\n    if (length === 1) {\n        return \"NO\";\n \
    \   }\n    if (length === 2) {\n        return \"YES\";\n    }\n    if (length\
    \ % 2 === 0) {\n        return \"NO\";\n    }\n    for (let i = 3; i <= Math.sqrt(length);\
    \ i += 2) {\n        if (length % i === 0) {\n            return \"NO\";\n   \
    \     }\n    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    let\
    \ length = end - start;\n    if (length < 0) {\n        return \"NO\";\n    }\n\
    \    if (length === 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i\
    \ < length; i++) {\n        if (length % i === 0) {\n            return \"NO\"\
    ;\n        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1, 2],\
    \ [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    const [start1, end1] = interval1;\n    const [start2,\
    \ end2] = interval2;\n    const start = Math.max(start1, start2);\n    const end\
    \ = Math.min(end1, end2);\n    if (start > end) {\n        return \"NO\";\n  \
    \  }\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}\n", "    const\
    \ [start1, end1] = interval1;\n    const [start2, end2] = interval2;\n    const\
    \ start = Math.max(start1, start2);\n    const end = Math.min(end1, end2);\n \
    \   if (start > end) {\n        return \"NO\";\n    }\n    const length = end\
    \ - start + 1;\n    if (length === 1) {\n        return \"NO\";\n    }\n    for\
    \ (let i = 2; i < length; i++) {\n        if (length % i === 0) {\n          \
    \  return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    const start = Math.max(interval1[0], interval2[0]);\n\
    \    const end = Math.min(interval1[1], interval2[1]);\n    const length = end\
    \ - start;\n    if (length < 0) {\n        return \"NO\";\n    }\n    if (length\
    \ === 0) {\n        return \"YES\";\n    }\n    if (length === 1) {\n        return\
    \ \"NO\";\n    }\n    if (length === 2) {\n        return \"YES\";\n    }\n  \
    \  if (length % 2 === 0) {\n        return \"NO\";\n    }\n    for (let i = 3;\
    \ i < length; i += 2) {\n        if (length % i === 0) {\n            return \"\
    NO\";\n        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    let [start1, end1] = interval1;\n    let [start2, end2]\
    \ = interval2;\n    let start = Math.max(start1, start2);\n    let end = Math.min(end1,\
    \ end2);\n    let length = end - start;\n    if (length < 0) {\n        return\
    \ \"NO\";\n    }\n    if (length < 2) {\n        return \"YES\";\n    }\n    for\
    \ (let i = 2; i < length; i++) {\n        if (length % i === 0) {\n          \
    \  return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    const [start1, end1] = interval1;\n    const [start2,\
    \ end2] = interval2;\n    const start = Math.max(start1, start2);\n    const end\
    \ = Math.min(end1, end2);\n    if (start > end) {\n        return \"NO\";\n  \
    \  }\n    const length = end - start + 1;\n    if (length < 2) {\n        return\
    \ \"NO\";\n    }\n    for (let i = 2; i < length; i++) {\n        if (length %\
    \ i === 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\"\
    ;\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1,\
    \ 1], [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let start\
    \ = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ length = end - start + 1;\n    if (length === 1) {\n        return \"NO\";\n\
    \    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\n\
    console.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1, 1],\
    \ [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    const intersection\
    \ = [Math.max(interval1[0], interval2[0]), Math.min(interval1[1], interval2[1])];\n\
    \    if (intersection[0] > intersection[1]) {\n        return \"NO\";\n    }\n\
    \    return isPrime(intersection[1] - intersection[0] + 1) ? \"YES\" : \"NO\"\
    ;\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n    let end =\
    \ Math.min(interval1[1], interval2[1]);\n    let length = end - start;\n    if\
    \ (length < 0) {\n        return \"NO\";\n    }\n    if (length === 1) {\n   \
    \     return \"NO\";\n    }\n    if (length === 2) {\n        return \"YES\";\n\
    \    }\n    if (length % 2 === 0) {\n        return \"NO\";\n    }\n    for (let\
    \ i = 3; i <= Math.sqrt(length); i += 2) {\n        if (length % i === 0) {\n\
    \            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n", "  \
    \  const start = Math.max(interval1[0], interval2[0]);\n    const end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) return \"NO\";\n    const length = end\
    \ - start + 1;\n    if (length === 1) return \"NO\";\n    if (length === 2) return\
    \ \"YES\";\n    for (let i = 2; i < length; i++) {\n        if (length % i ===\
    \ 0) return \"NO\";\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    const [start1, end1] = interval1;\n    const [start2,\
    \ end2] = interval2;\n    const start = Math.max(start1, start2);\n    const end\
    \ = Math.min(end1, end2);\n    if (start > end) {\n        return \"NO\";\n  \
    \  }\n    const length = end - start + 1;\n    return isPrime(length) ? \"YES\"\
    \ : \"NO\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n  \
    \  let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n \
    \       return \"NO\";\n    }\n    let len = end - start + 1;\n    if (len ===\
    \ 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i < len; i++) {\n \
    \       if (len % i === 0) {\n            return \"NO\";\n        }\n    }\n \
    \   return \"YES\";\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1,\
    \ 1], [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let start\
    \ = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    return\
    \ isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}\n", "    const [start1, end1]\
    \ = interval1;\n    const [start2, end2] = interval2;\n    const start = Math.max(start1,\
    \ start2);\n    const end = Math.min(end1, end2);\n    if (start > end) {\n  \
    \      return \"NO\";\n    }\n    const length = end - start + 1;\n    if (length\
    \ < 2) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\n\
    console.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3, -1],\
    \ [-5, 5]));", "    const [start1, end1] = interval1;\n    const [start2, end2]\
    \ = interval2;\n    const start = Math.max(start1, start2);\n    const end = Math.min(end1,\
    \ end2);\n    if (start > end) {\n        return \"NO\";\n    }\n    const length\
    \ = end - start + 1;\n    return isPrime(length) ? \"YES\" : \"NO\";\n}\n", " \
    \   let [start1, end1] = interval1;\n    let [start2, end2] = interval2;\n   \
    \ let start = Math.max(start1, start2);\n    let end = Math.min(end1, end2);\n\
    \    let length = end - start;\n    if (length < 0) {\n        return \"NO\";\n\
    \    }\n    return isPrime(length) ? \"YES\" : \"NO\";\n}\n", "    let start =\
    \ Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ length = end - start + 1;\n    if (length === 1) {\n        return \"NO\";\n\
    \    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\n\
    console.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1, 1],\
    \ [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let start =\
    \ Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    let length = end - start;\n    if (length < 0) {\n     \
    \   return \"NO\";\n    }\n    if (length === 0) {\n        return \"YES\";\n\
    \    }\n    if (length === 1) {\n        return \"NO\";\n    }\n    if (length\
    \ === 2) {\n        return \"YES\";\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\n\
    console.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3, -1],\
    \ [-5, 5]));", "    let start = Math.max(interval1[0], interval2[0]);\n    let\
    \ end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n      \
    \  return \"NO\";\n    }\n    let length = end - start + 1;\n    if (length ===\
    \ 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length; i++) {\n\
    \        if (length % i === 0) {\n            return \"NO\";\n        }\n    }\n\
    \    return \"YES\";\n}\n", "    const [start1, end1] = interval1;\n    const\
    \ [start2, end2] = interval2;\n    const start = Math.max(start1, start2);\n \
    \   const end = Math.min(end1, end2);\n    if (start > end) {\n        return\
    \ \"NO\";\n    }\n    const length = end - start + 1;\n    return isPrime(length)\
    \ ? \"YES\" : \"NO\";\n}\n", "    let start: number = Math.max(interval1[0], interval2[0]);\n\
    \    let end: number = Math.min(interval1[1], interval2[1]);\n    let length:\
    \ number = end - start;\n    if (length < 0) {\n        return \"NO\";\n    }\n\
    \    if (length === 0) {\n        return \"YES\";\n    }\n    if (length === 1)\
    \ {\n        return \"NO\";\n    }\n    if (length === 2) {\n        return \"\
    YES\";\n    }\n    for (let i: number = 2; i < length; i++) {\n        if (length\
    \ % i === 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\"\
    ;\n}\n", "    const [start1, end1] = interval1;\n    const [start2, end2] = interval2;\n\
    \    const start = Math.max(start1, start2);\n    const end = Math.min(end1, end2);\n\
    \    if (start > end) return \"NO\";\n    return isPrime(end - start + 1) ? \"\
    YES\" : \"NO\";\n}\n", "    const [start1, end1] = interval1;\n    const [start2,\
    \ end2] = interval2;\n    const start = Math.max(start1, start2);\n    const end\
    \ = Math.min(end1, end2);\n    const length = end - start;\n    if (length < 0)\
    \ {\n        return \"NO\";\n    }\n    const isPrime = (num: number) => {\n \
    \       for (let i = 2; i < num; i++) {\n            if (num % i === 0) {\n  \
    \              return false;\n            }\n        }\n        return num > 1;\n\
    \    }\n    return isPrime(length) ? \"YES\" : \"NO\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    const start = Math.max(interval1[0], interval2[0]);\n\
    \    const end = Math.min(interval1[1], interval2[1]);\n    if (start > end) return\
    \ \"NO\";\n    const length = end - start + 1;\n    if (length < 2) return \"\
    NO\";\n    if (length === 2) return \"YES\";\n    for (let i = 2; i < length;\
    \ i++) {\n        if (length % i === 0) return \"NO\";\n    }\n    return \"YES\"\
    ;\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1,\
    \ 1], [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let start\
    \ = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    let length = end - start;\n    return isPrime(length) ?\
    \ \"YES\" : \"NO\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n\
    \    let end = Math.min(interval1[1], interval2[1]);\n    let length = end - start;\n\
    \    if (length < 0) {\n        return \"NO\";\n    }\n    if (length === 1) {\n\
    \        return \"NO\";\n    }\n    if (length === 2) {\n        return \"YES\"\
    ;\n    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n",
  "    let [start1, end1] = interval1;\n    let [start2, end2] = interval2;\n    let\
    \ start = Math.max(start1, start2);\n    let end = Math.min(end1, end2);\n   \
    \ if (start > end) {\n        return \"NO\";\n    }\n    let length = end - start\
    \ + 1;\n    if (length < 2) {\n        return \"NO\";\n    }\n    for (let i =\
    \ 2; i < length; i++) {\n        if (length % i === 0) {\n            return \"\
    NO\";\n        }\n    }\n    return \"YES\";\n}\n", "    let intersectionLength\
    \ = Math.min(interval1[1], interval2[1]) - Math.max(interval1[0], interval2[0]);\n\
    \    if (intersectionLength <= 0) {\n        return \"NO\";\n    }\n    for (let\
    \ i = 2; i < intersectionLength; i++) {\n        if (intersectionLength % i ===\
    \ 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n",
  "    let start = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    return\
    \ isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    let\
    \ length = end - start;\n    if (length < 0) {\n        return \"NO\";\n    }\n\
    \    if (length === 1) {\n        return \"NO\";\n    }\n    if (length === 2)\
    \ {\n        return \"YES\";\n    }\n    for (let i = 2; i < length; i++) {\n\
    \        if (length % i === 0) {\n            return \"NO\";\n        }\n    }\n\
    \    return \"YES\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n\
    \    let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) return\
    \ \"NO\";\n    let length = end - start + 1;\n    if (length < 2) return \"NO\"\
    ;\n    if (length == 2) return \"YES\";\n    if (length % 2 == 0) return \"NO\"\
    ;\n    for (let i = 3; i <= Math.sqrt(length); i += 2) {\n        if (length %\
    \ i == 0) return \"NO\";\n    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    if\
    \ (start > end) return \"NO\";\n    let length = end - start + 1;\n    if (length\
    \ < 2) return \"NO\";\n    if (length === 2) return \"YES\";\n    for (let i =\
    \ 2; i < length; i++) {\n        if (length % i === 0) return \"NO\";\n    }\n\
    \    return \"YES\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n\
    \    let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) return\
    \ \"NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}\n", "  \
    \  let start = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    let length = end - start;\n    if (length < 0) {\n     \
    \   return \"NO\";\n    }\n    if (length === 1) {\n        return \"NO\";\n \
    \   }\n    if (length === 2) {\n        return \"YES\";\n    }\n    for (let i\
    \ = 2; i < length; i++) {\n        if (length % i === 0) {\n            return\
    \ \"NO\";\n        }\n    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    let\
    \ length = end - start;\n    if (length <= 0) {\n        return \"NO\";\n    }\n\
    \    if (length === 1) {\n        return \"NO\";\n    }\n    if (length === 2)\
    \ {\n        return \"YES\";\n    }\n    for (let i = 2; i < length; i++) {\n\
    \        if (length % i === 0) {\n            return \"NO\";\n        }\n    }\n\
    \    return \"YES\";\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1,\
    \ 1], [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    // your\
    \ code here\n    let start = Math.max(interval1[0], interval2[0]);\n    let end\
    \ = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n        return\
    \ \"NO\";\n    }\n    let length = end - start + 1;\n    if (length < 2) {\n \
    \       return \"NO\";\n    }\n    if (length === 2) {\n        return \"YES\"\
    ;\n    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n",
  "    let start = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    let length = end - start;\n    if (length < 0) {\n     \
    \   return \"NO\";\n    }\n    return isPrime(length) ? \"YES\" : \"NO\";\n}\n",
  "    let [start1, end1] = interval1;\n    let [start2, end2] = interval2;\n    let\
    \ start = Math.max(start1, start2);\n    let end = Math.min(end1, end2);\n   \
    \ if (start > end) {\n        return \"NO\";\n    }\n    let len = end - start\
    \ + 1;\n    if (len < 2) {\n        return \"NO\";\n    }\n    for (let i = 2;\
    \ i < len; i++) {\n        if (len % i === 0) {\n            return \"NO\";\n\
    \        }\n    }\n    return \"YES\";\n}\n", "    const start = Math.max(interval1[0],\
    \ interval2[0]);\n    const end = Math.min(interval1[1], interval2[1]);\n    if\
    \ (start > end) {\n        return \"NO\";\n    }\n    const length = end - start\
    \ + 1;\n    return isPrime(length) ? \"YES\" : \"NO\";\n}\n", "    let start =\
    \ Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    let length = end - start;\n    if (length < 0) {\n     \
    \   return \"NO\";\n    }\n    if (length === 1) {\n        return \"NO\";\n \
    \   }\n    if (length === 2) {\n        return \"YES\";\n    }\n    for (let i\
    \ = 2; i < length; i++) {\n        if (length % i === 0) {\n            return\
    \ \"NO\";\n        }\n    }\n    return \"YES\";\n}\n", "  const [start1, end1]\
    \ = interval1;\n  const [start2, end2] = interval2;\n  const start = Math.max(start1,\
    \ start2);\n  const end = Math.min(end1, end2);\n  if (start > end) {\n    return\
    \ \"NO\";\n  }\n  const length = end - start + 1;\n  if (length < 2) {\n    return\
    \ \"NO\";\n  }\n  for (let i = 2; i < length; i++) {\n    if (length % i === 0)\
    \ {\n      return \"NO\";\n    }\n  }\n  return \"YES\";\n}\n", "    let [start1,\
    \ end1] = interval1;\n    let [start2, end2] = interval2;\n    let start = Math.max(start1,\
    \ start2);\n    let end = Math.min(end1, end2);\n    let length = end - start;\n\
    \    if (length < 0) return \"NO\";\n    if (length === 0) return \"YES\";\n \
    \   if (length === 1) return \"NO\";\n    if (length === 2) return \"YES\";\n\
    \    if (length % 2 === 0) return \"NO\";\n    for (let i = 3; i <= Math.sqrt(length);\
    \ i += 2) {\n        if (length % i === 0) return \"NO\";\n    }\n    return \"\
    YES\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n    let\
    \ end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n      \
    \  return \"NO\";\n    }\n    let length = end - start + 1;\n    if (length ===\
    \ 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length; i++) {\n\
    \        if (length % i === 0) {\n            return \"NO\";\n        }\n    }\n\
    \    return \"YES\";\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1,\
    \ 1], [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let start\
    \ = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    let length = end - start;\n    return isPrime(length) ?\
    \ \"YES\" : \"NO\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n\
    \    let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n\
    \        return \"NO\";\n    }\n    let length = end - start + 1;\n    if (length\
    \ === 1) {\n        return \"NO\";\n    }\n    if (length === 2) {\n        return\
    \ \"YES\";\n    }\n    for (let i = 2; i < length; i++) {\n        if (length\
    \ % i === 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\"\
    ;\n}\n", "    const [start1, end1] = interval1;\n    const [start2, end2] = interval2;\n\
    \    const start = Math.max(start1, start2);\n    const end = Math.min(end1, end2);\n\
    \    if (start > end) {\n        return \"NO\";\n    }\n    const length = end\
    \ - start + 1;\n    if (length < 2) {\n        return \"NO\";\n    }\n    for\
    \ (let i = 2; i < length; i++) {\n        if (length % i === 0) {\n          \
    \  return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    let start = Math.max(interval1[0], interval2[0]);\n \
    \   let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) return\
    \ \"NO\";\n    let length = end - start + 1;\n    return isPrime(length) ? \"\
    YES\" : \"NO\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n\
    \    let end = Math.min(interval1[1], interval2[1]);\n    let length = end - start;\n\
    \    return isPrime(length) ? \"YES\" : \"NO\";\n}\n", "    let start: number\
    \ = Math.max(interval1[0], interval2[0]);\n    let end: number = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ length: number = end - start + 1;\n    if (length < 2) {\n        return \"\
    NO\";\n    }\n    for (let i: number = 2; i < length; i++) {\n        if (length\
    \ % i === 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\"\
    ;\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1,\
    \ 1], [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let [start1,\
    \ end1] = interval1;\n    let [start2, end2] = interval2;\n    let start = Math.max(start1,\
    \ start2);\n    let end = Math.min(end1, end2);\n    let length = end - start;\n\
    \    if (length < 0) {\n        return \"NO\";\n    }\n    if (length === 1) {\n\
    \        return \"NO\";\n    }\n    for (let i = 2; i < length; i++) {\n     \
    \   if (length % i === 0) {\n            return \"NO\";\n        }\n    }\n  \
    \  return \"YES\";\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1,\
    \ 1], [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let [start1,\
    \ end1] = interval1;\n    let [start2, end2] = interval2;\n    let start = Math.max(start1,\
    \ start2);\n    let end = Math.min(end1, end2);\n    let length = end - start;\n\
    \    if (length < 0) return \"NO\";\n    if (length < 2) return \"YES\";\n   \
    \ for (let i = 2; i < length; i++) {\n        if (length % i === 0) return \"\
    NO\";\n    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    if\
    \ (start > end) {\n        return \"NO\";\n    }\n    let length = end - start\
    \ + 1;\n    if (length === 1) {\n        return \"NO\";\n    }\n    for (let i\
    \ = 2; i <= Math.sqrt(length); i++) {\n        if (length % i === 0) {\n     \
    \       return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    let start = Math.max(interval1[0], interval2[0]);\n \
    \   let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n\
    \        return \"NO\";\n    }\n    return isPrime(end - start + 1) ? \"YES\"\
    \ : \"NO\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n  \
    \  let end = Math.min(interval1[1], interval2[1]);\n    let length = end - start;\n\
    \    if (length < 0) {\n        return \"NO\";\n    }\n    if (length === 0) {\n\
    \        return \"YES\";\n    }\n    if (length === 1) {\n        return \"NO\"\
    ;\n    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n",
  "    let start = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ length = end - start + 1;\n    if (length === 1) {\n        return \"NO\";\n\
    \    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n",
  "    let start = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) return \"NO\";\n    let length = end -\
    \ start + 1;\n    return isPrime(length) ? \"YES\" : \"NO\";\n}\n", "    let start\
    \ = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    return\
    \ isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}\n", "    let [start1, end1]\
    \ = interval1;\n    let [start2, end2] = interval2;\n    let start = Math.max(start1,\
    \ start2);\n    let end = Math.min(end1, end2);\n    let len = end - start;\n\
    \    if (len < 0) {\n        return \"NO\";\n    }\n    if (len === 1) {\n   \
    \     return \"NO\";\n    }\n    if (len === 2) {\n        return \"YES\";\n \
    \   }\n    if (len % 2 === 0) {\n        return \"NO\";\n    }\n    for (let i\
    \ = 3; i < len; i += 2) {\n        if (len % i === 0) {\n            return \"\
    NO\";\n        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    const [start1, end1] = interval1;\n    const [start2,\
    \ end2] = interval2;\n    const start = Math.max(start1, start2);\n    const end\
    \ = Math.min(end1, end2);\n    if (start > end) {\n        return \"NO\";\n  \
    \  }\n    const length = end - start + 1;\n    if (length === 1) {\n        return\
    \ \"NO\";\n    }\n    for (let i = 2; i < length; i++) {\n        if (length %\
    \ i === 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\"\
    ;\n}\n", "    let [start1, end1] = interval1;\n    let [start2, end2] = interval2;\n\
    \    let start = Math.max(start1, start2);\n    let end = Math.min(end1, end2);\n\
    \    if (start > end) {\n        return \"NO\";\n    }\n    let length = end -\
    \ start + 1;\n    if (length < 2) {\n        return \"NO\";\n    }\n    for (let\
    \ i = 2; i < length; i++) {\n        if (length % i === 0) {\n            return\
    \ \"NO\";\n        }\n    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    if\
    \ (start > end) {\n        return \"NO\";\n    }\n    let length = end - start\
    \ + 1;\n    if (length === 1) {\n        return \"NO\";\n    }\n    for (let i\
    \ = 2; i < length; i++) {\n        if (length % i === 0) {\n            return\
    \ \"NO\";\n        }\n    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    let\
    \ length = end - start;\n    if (length < 0) {\n        return \"NO\";\n    }\n\
    \    if (length === 0) {\n        return \"YES\";\n    }\n    for (let i = 2;\
    \ i < length; i++) {\n        if (length % i === 0) {\n            return \"NO\"\
    ;\n        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1, 2],\
    \ [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    const start = Math.max(interval1[0], interval2[0]);\n\
    \    const end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n\
    \        return \"NO\";\n    }\n    const length = end - start + 1;\n    if (length\
    \ === 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\n\
    console.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3, -1],\
    \ [-5, 5]));", "    let start = Math.max(interval1[0], interval2[0]);\n    let\
    \ end = Math.min(interval1[1], interval2[1]);\n    let length = end - start;\n\
    \    if (length < 0) {\n        return \"NO\";\n    }\n    if (length === 0) {\n\
    \        return \"YES\";\n    }\n    if (length === 1) {\n        return \"NO\"\
    ;\n    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n",
  "    const [start1, end1] = interval1;\n    const [start2, end2] = interval2;\n\
    \    const start = Math.max(start1, start2);\n    const end = Math.min(end1, end2);\n\
    \    if (start > end) {\n        return \"NO\";\n    }\n    return isPrime(end\
    \ - start + 1) ? \"YES\" : \"NO\";\n}\n", "    let [start1, end1] = interval1;\n\
    \    let [start2, end2] = interval2;\n    let start = Math.max(start1, start2);\n\
    \    let end = Math.min(end1, end2);\n    if (start > end) return \"NO\";\n  \
    \  let length = end - start + 1;\n    if (length === 1) return \"NO\";\n    for\
    \ (let i = 2; i < length; i++) {\n        if (length % i === 0) return \"NO\"\
    ;\n    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n\
    \    let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n\
    \        return \"NO\";\n    }\n    let length = end - start + 1;\n    if (length\
    \ < 2) {\n        return \"NO\";\n    }\n    if (length === 2) {\n        return\
    \ \"YES\";\n    }\n    for (let i = 2; i < length; i++) {\n        if (length\
    \ % i === 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\"\
    ;\n}\n", "    const [start1, end1] = interval1;\n    const [start2, end2] = interval2;\n\
    \    const start = Math.max(start1, start2);\n    const end = Math.min(end1, end2);\n\
    \    if (start > end) {\n        return \"NO\";\n    }\n    const length = end\
    \ - start + 1;\n    if (length < 2) {\n        return \"NO\";\n    }\n    for\
    \ (let i = 2; i < length; i++) {\n        if (length % i === 0) {\n          \
    \  return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n", "    let start\
    \ = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    let length = end - start;\n    if (length < 0) {\n     \
    \   return \"NO\";\n    }\n    if (length === 0) {\n        return \"YES\";\n\
    \    }\n    if (length === 1) {\n        return \"NO\";\n    }\n    if (length\
    \ === 2) {\n        return \"YES\";\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n\
    \    let end = Math.min(interval1[1], interval2[1]);\n    let length = end - start;\n\
    \    if (length <= 0) {\n        return \"NO\";\n    }\n    let isPrime = true;\n\
    \    for (let i = 2; i < length; i++) {\n        if (length % i === 0) {\n   \
    \         isPrime = false;\n            break;\n        }\n    }\n    return isPrime\
    \ ? \"YES\" : \"NO\";\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1,\
    \ 1], [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let start\
    \ = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    let length = end - start;\n    if (length < 0) {\n     \
    \   return \"NO\";\n    }\n    if (length === 1) {\n        return \"NO\";\n \
    \   }\n    if (length === 2) {\n        return \"YES\";\n    }\n    for (let i\
    \ = 2; i < length; i++) {\n        if (length % i === 0) {\n            return\
    \ \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    const [start1, end1] = interval1;\n    const [start2,\
    \ end2] = interval2;\n    const start = Math.max(start1, start2);\n    const end\
    \ = Math.min(end1, end2);\n    if (start > end) return \"NO\";\n    const len\
    \ = end - start + 1;\n    return isPrime(len) ? \"YES\" : \"NO\";\n}\n", "   \
    \ let start = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ length = end - start + 1;\n    if (length < 2) {\n        return \"NO\";\n \
    \   }\n    if (length === 2) {\n        return \"YES\";\n    }\n    for (let i\
    \ = 2; i < length; i++) {\n        if (length % i === 0) {\n            return\
    \ \"NO\";\n        }\n    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    let\
    \ length = end - start;\n    if (length < 0) {\n        return \"NO\";\n    }\n\
    \    if (length === 1) {\n        return \"NO\";\n    }\n    if (length === 2)\
    \ {\n        return \"YES\";\n    }\n    for (let i = 2; i < length; i++) {\n\
    \        if (length % i === 0) {\n            return \"NO\";\n        }\n    }\n\
    \    return \"YES\";\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1,\
    \ 1], [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    const [start1,\
    \ end1] = interval1;\n    const [start2, end2] = interval2;\n    const start =\
    \ Math.max(start1, start2);\n    const end = Math.min(end1, end2);\n    if (start\
    \ > end) {\n        return \"NO\";\n    }\n    const length = end - start + 1;\n\
    \    if (length < 2) {\n        return \"NO\";\n    }\n    for (let i = 2; i <\
    \ length; i++) {\n        if (length % i === 0) {\n            return \"NO\";\n\
    \        }\n    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    if\
    \ (start > end) {\n        return \"NO\";\n    }\n    let length = end - start\
    \ + 1;\n    if (length === 1) {\n        return \"NO\";\n    }\n    for (let i\
    \ = 2; i < length; i++) {\n        if (length % i === 0) {\n            return\
    \ \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    let start = Math.max(interval1[0], interval2[0]);\n \
    \   let end = Math.min(interval1[1], interval2[1]);\n    let length = end - start;\n\
    \    if (length < 0) {\n        return \"NO\";\n    }\n    for (let i = 2; i <\
    \ length; i++) {\n        if (length % i === 0) {\n            return \"NO\";\n\
    \        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1, 2],\
    \ [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    let start = Math.max(interval1[0], interval2[0]);\n \
    \   let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n\
    \        return \"NO\";\n    }\n    let length = end - start + 1;\n    if (length\
    \ === 1) {\n        return \"NO\";\n    }\n    if (length === 2) {\n        return\
    \ \"YES\";\n    }\n    for (let i = 2; i < length; i++) {\n        if (length\
    \ % i === 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\"\
    ;\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1,\
    \ 1], [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let start\
    \ = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    let len = end - start;\n    if (len < 0) return \"NO\";\n\
    \    if (len === 0) return \"YES\";\n    if (len === 1) return \"NO\";\n    if\
    \ (len === 2) return \"YES\";\n    if (len % 2 === 0) return \"NO\";\n    for\
    \ (let i = 3; i <= Math.sqrt(len); i += 2) {\n        if (len % i === 0) return\
    \ \"NO\";\n    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    let\
    \ length = end - start;\n    if (length < 0) {\n        return \"NO\";\n    }\n\
    \    return isPrime(length) ? \"YES\" : \"NO\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    if\
    \ (start > end) {\n        return \"NO\";\n    }\n    let length = end - start\
    \ + 1;\n    if (length === 1) {\n        return \"NO\";\n    }\n    for (let i\
    \ = 2; i < length; i++) {\n        if (length % i === 0) {\n            return\
    \ \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    let start = Math.max(interval1[0], interval2[0]);\n \
    \   let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n\
    \        return \"NO\";\n    }\n    let length = end - start + 1;\n    if (length\
    \ === 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";\n}\n", "    const [start1, end1] = interval1;\n  \
    \  const [start2, end2] = interval2;\n    const start = Math.max(start1, start2);\n\
    \    const end = Math.min(end1, end2);\n    if (start > end) {\n        return\
    \ \"NO\";\n    }\n    const length = end - start + 1;\n    return isPrime(length)\
    \ ? \"YES\" : \"NO\";\n}\n", "    const [start1, end1] = interval1;\n    const\
    \ [start2, end2] = interval2;\n    const start = Math.max(start1, start2);\n \
    \   const end = Math.min(end1, end2);\n    const length = end - start;\n    if\
    \ (length <= 0) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length;\
    \ i++) {\n        if (length % i === 0) {\n            return \"NO\";\n      \
    \  }\n    }\n    return \"YES\";\n}\n", "    const [start1, end1] = interval1;\n\
    \    const [start2, end2] = interval2;\n    const start = Math.max(start1, start2);\n\
    \    const end = Math.min(end1, end2);\n    if (start > end) {\n        return\
    \ \"NO\";\n    }\n    const length = end - start + 1;\n    if (length === 1) {\n\
    \        return \"NO\";\n    }\n    if (length === 2) {\n        return \"YES\"\
    ;\n    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\n\
    console.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1, 1],\
    \ [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let start =\
    \ Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ length = end - start + 1;\n    if (length < 2) {\n        return \"NO\";\n \
    \   }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0) {\n\
    \            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n", "  const\
    \ [start1, end1] = interval1;\n  const [start2, end2] = interval2;\n  const start\
    \ = Math.max(start1, start2);\n  const end = Math.min(end1, end2);\n  if (start\
    \ > end) {\n    return \"NO\";\n  }\n  const length = end - start + 1;\n  if (length\
    \ === 1) {\n    return \"NO\";\n  }\n  for (let i = 2; i < length; i++) {\n  \
    \  if (length % i === 0) {\n      return \"NO\";\n    }\n  }\n  return \"YES\"\
    ;\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1,\
    \ 1], [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "    let start\
    \ = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ length = end - start + 1;\n    return isPrime(length) ? \"YES\" : \"NO\";\n\
    }\n", "    let start = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    let\
    \ length = end - start + 1;\n    if (length === 1) {\n        return \"NO\";\n\
    \    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n",
  "    let start = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) return \"NO\";\n    let len = end - start\
    \ + 1;\n    if (len < 2) return \"NO\";\n    if (len == 2) return \"YES\";\n \
    \   if (len % 2 == 0) return \"NO\";\n    for (let i = 3; i <= Math.sqrt(len);\
    \ i += 2) {\n        if (len % i == 0) return \"NO\";\n    }\n    return \"YES\"\
    ;\n}\n", "    const [start1, end1] = interval1;\n    const [start2, end2] = interval2;\n\
    \    const start = Math.max(start1, start2);\n    const end = Math.min(end1, end2);\n\
    \    if (start > end) {\n        return \"NO\";\n    }\n    const length = end\
    \ - start + 1;\n    return isPrime(length) ? \"YES\" : \"NO\";\n}\n", "    const\
    \ start = Math.max(interval1[0], interval2[0]);\n    const end = Math.min(interval1[1],\
    \ interval2[1]);\n    if (start > end) {\n        return \"NO\";\n    }\n    const\
    \ length = end - start + 1;\n    return isPrime(length) ? \"YES\" : \"NO\";\n\
    }\n", "    const start = Math.max(interval1[0], interval2[0]);\n    const end\
    \ = Math.min(interval1[1], interval2[1]);\n    if (start > end) return \"NO\"\
    ;\n    const length = end - start + 1;\n    return isPrime(length) ? \"YES\" :\
    \ \"NO\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n    let\
    \ end = Math.min(interval1[1], interval2[1]);\n    let length = end - start;\n\
    \    if (length < 0) {\n        return \"NO\";\n    }\n    if (length === 0) {\n\
    \        return \"YES\";\n    }\n    if (length === 1) {\n        return \"NO\"\
    ;\n    }\n    for (let i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n\n\
    console.log(intersection([1, 2], [2, 3]));\nconsole.log(intersection([-1, 1],\
    \ [0, 4]));\nconsole.log(intersection([-3, -1], [-5, 5]));", "  let [start1, end1]\
    \ = interval1;\n  let [start2, end2] = interval2;\n  let start = Math.max(start1,\
    \ start2);\n  let end = Math.min(end1, end2);\n  let length = end - start;\n \
    \ if (length < 0) return \"NO\";\n  if (length === 1) return \"NO\";\n  if (length\
    \ === 2) return \"YES\";\n  for (let i = 2; i < length; i++) {\n    if (length\
    \ % i === 0) return \"NO\";\n  }\n  return \"YES\";\n}\n\nconsole.log(intersection([1,\
    \ 2], [2, 3]));\nconsole.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3,\
    \ -1], [-5, 5]));", "    const [start1, end1] = interval1;\n    const [start2,\
    \ end2] = interval2;\n    const intersectionStart = Math.max(start1, start2);\n\
    \    const intersectionEnd = Math.min(end1, end2);\n    const intersectionLength\
    \ = intersectionEnd - intersectionStart;\n    if (intersectionLength <= 0) {\n\
    \        return \"NO\";\n    }\n    if (isPrime(intersectionLength)) {\n     \
    \   return \"YES\";\n    }\n    return \"NO\";\n}\n", "    const [start1, end1]\
    \ = interval1;\n    const [start2, end2] = interval2;\n    const start = Math.max(start1,\
    \ start2);\n    const end = Math.min(end1, end2);\n    if (start > end) {\n  \
    \      return \"NO\";\n    }\n    const length = end - start + 1;\n    if (length\
    \ === 1) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";\n}\n", "    const [start1, end1] = interval1;\n  \
    \  const [start2, end2] = interval2;\n    const start = Math.max(start1, start2);\n\
    \    const end = Math.min(end1, end2);\n    const length = end - start;\n    if\
    \ (length <= 0) {\n        return \"NO\";\n    }\n    for (let i = 2; i < length;\
    \ i++) {\n        if (length % i === 0) {\n            return \"NO\";\n      \
    \  }\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\n\
    console.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3, -1],\
    \ [-5, 5]));", "    let start = Math.max(interval1[0], interval2[0]);\n    let\
    \ end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n      \
    \  return \"NO\";\n    }\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\"\
    ;\n}\n", "    let [start1, end1] = interval1;\n    let [start2, end2] = interval2;\n\
    \    let start = Math.max(start1, start2);\n    let end = Math.min(end1, end2);\n\
    \    let length = end - start;\n    if (length < 0) {\n        return \"NO\";\n\
    \    }\n    if (length === 1) {\n        return \"NO\";\n    }\n    if (length\
    \ === 2) {\n        return \"YES\";\n    }\n    for (let i = 2; i < length; i++)\
    \ {\n        if (length % i === 0) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n\
    \    let end = Math.min(interval1[1], interval2[1]);\n    let length = end - start;\n\
    \    if (length < 0) {\n        return \"NO\";\n    }\n    if (length === 0) {\n\
    \        return \"YES\";\n    }\n    for (let i = 2; i < length; i++) {\n    \
    \    if (length % i === 0) {\n            return \"NO\";\n        }\n    }\n \
    \   return \"YES\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n\
    \    let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) {\n\
    \        return \"NO\";\n    }\n    let length = end - start + 1;\n    return\
    \ isPrime(length) ? \"YES\" : \"NO\";\n}\n", "    let start = Math.max(interval1[0],\
    \ interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    let\
    \ len = end - start;\n    if (len < 0) return \"NO\";\n    if (len === 0) return\
    \ \"YES\";\n    for (let i = 2; i < len; i++) {\n        if (len % i === 0) return\
    \ \"NO\";\n    }\n    return \"YES\";\n}\n", "    let [start1, end1] = interval1;\n\
    \    let [start2, end2] = interval2;\n    let start = Math.max(start1, start2);\n\
    \    let end = Math.min(end1, end2);\n    if (start > end) {\n        return \"\
    NO\";\n    }\n    let length = end - start + 1;\n    if (length === 1) {\n   \
    \     return \"NO\";\n    }\n    for (let i = 2; i < length; i++) {\n        if\
    \ (length % i === 0) {\n            return \"NO\";\n        }\n    }\n    return\
    \ \"YES\";\n}\n", "    let start = Math.max(interval1[0], interval2[0]);\n   \
    \ let end = Math.min(interval1[1], interval2[1]);\n    if (start > end) return\
    \ \"NO\";\n    let len = end - start + 1;\n    if (len < 2) return \"NO\";\n \
    \   for (let i = 2; i < len; i++) {\n        if (len % i === 0) return \"NO\"\
    ;\n    }\n    return \"YES\";\n}\n\nconsole.log(intersection([1, 2], [2, 3]));\n\
    console.log(intersection([-1, 1], [0, 4]));\nconsole.log(intersection([-3, -1],\
    \ [-5, 5]));\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

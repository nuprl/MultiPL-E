name: HumanEval_99_closest_integer
language: humaneval_to_typescript.py
prompt: "//Create a function that takes a value (string) representing a number\n//\
  \ and returns the closest integer to it. If the number is equidistant\n// from two\
  \ integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"10\"\
  )\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away from\
  \ zero means that if the given number is equidistant\n// from two integers, the\
  \ one you should return is the one that is the\n// farthest from zero. For example\
  \ closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"-14.5\")\
  \ should return -15.\nfunction closest_integer(value: string): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
  10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
  -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
  0\"),0);\n}\n\ntest();"
completions: ["  const number = Number(value);\n  const floor = Math.floor(number);\n\
    \  const ceil = Math.ceil(number);\n  const diffFloor = Math.abs(number - floor);\n\
    \  const diffCeil = Math.abs(number - ceil);\n  return diffFloor < diffCeil ?\
    \ floor : ceil;\n}\n", "  return Math.round(Number(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "    return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Math.round(parseFloat(value));\n\
    }\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\n", "    return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "    let num: number = parseFloat(value);\n\
    \    let num2: number = Math.round(num);\n    return num2;\n}\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  const num = Number(value);\n\
    \  const floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  const diff1\
    \ = Math.abs(num - floor);\n  const diff2 = Math.abs(num - ceil);\n  if (diff1\
    \ < diff2) {\n    return floor;\n  } else {\n    return ceil;\n  }\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

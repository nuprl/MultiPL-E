language: ts
name: HumanEval_147_get_max_triples
results:
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\nconsole.log(get_max_triples(15));\nconsole.log(get_max_triples(20));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    130

    321

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\nconsole.log(get_max_triples(15));\nconsole.log(get_max_triples(20));\n\
    console.log(get_max_triples(25));\nconsole.log(get_max_triples(30));\nconsole.log(get_max_triples(35));\n\
    console.log(get_max_triples(40));\nconsole.log(get_max_triples(45));\nconsole.log(get_max_triples(50));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    130

    321

    736

    1260

    1991

    3211

    4515

    6136

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let result = 0;\n    let arr = [];\n    for (let i = 1; i <= n; i++) {\n\
    \        arr.push(i * i - i + 1);\n    }\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            for\
    \ (let k = j + 1; k < arr.length; k++) {\n                if ((arr[i] + arr[j]\
    \ + arr[k]) % 3 === 0) {\n                    result++;\n                }\n \
    \           }\n        }\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let result = 0;\n    let arr = [];\n    for (let i = 1; i <= n; i++) {\n\
    \        arr.push(i * i - i + 1);\n    }\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            for\
    \ (let k = j + 1; k < arr.length; k++) {\n                if ((arr[i] + arr[j]\
    \ + arr[k]) % 3 === 0) {\n                    result++;\n                }\n \
    \           }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\nconsole.log(get_max_triples(15));\nconsole.log(get_max_triples(20));\n\
    console.log(get_max_triples(25));\nconsole.log(get_max_triples(30));\nconsole.log(get_max_triples(35));\n\
    console.log(get_max_triples(40));\nconsole.log(get_max_triples(45));\nconsole.log(get_max_triples(50));\n\
    console.log(get_max_triples(55));\nconsole.log(get_max_triples(60));\nconsole.log(get_max_triples(65));\n\
    console.log(get_max_triples(70));\nconsole.log(get_max_triples(75));\nconsole.log(get_max_triples(80));\n\
    console.log(get_max_triples(85));\nconsole.log(get_max_triples(90));\nconsole.log(get_max_triples(95));\n\
    console.log(get_max_triples(100));\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    130

    321

    736

    1260

    1991

    3211

    4515

    6136

    8586

    11020

    13881

    17986

    21900

    26351

    32536

    38280

    44671

    53361

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let arr = [];\n    for (let i = 1; i <= n; i++) {\n        arr.push(i * i\
    \ - i + 1);\n    }\n    let count = 0;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        for (let j = i + 1; j < arr.length; j++) {\n            for (let\
    \ k = j + 1; k < arr.length; k++) {\n                if ((arr[i] + arr[j] + arr[k])\
    \ % 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let count = 0;\n    for (let i = 1; i < n - 1; i++) {\n        for (let j\
    \ = i + 1; j < n; j++) {\n            for (let k = j + 1; k <= n; k++) {\n   \
    \             if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 === 0) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\nconsole.log(get_max_triples(100));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    53361

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 2
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(6));\nconsole.log(get_max_triples(7));\nconsole.log(get_max_triples(8));\n\
    console.log(get_max_triples(9));\nconsole.log(get_max_triples(10));\nconsole.log(get_max_triples(11));\n\
    console.log(get_max_triples(12));\nconsole.log(get_max_triples(13));\nconsole.log(get_max_triples(14));\n\
    console.log(get_max_triples(15));\nconsole.log(get_max_triples(16));\nconsole.log(get_max_triples(17));\n\
    console.log(get_max_triples(18));\nconsole.log(get_max_triples(19));\nconsole.log(get_max_triples(20));\n\
    console.log(get_max_triples(21));\nconsole.log(get_max_triples(22));\nconsole.log(get_max_triples(23));\n\
    console.log(get_max_triples(24));\nconsole.log(get_max_triples(25));\nconsole.log(get_max_triples(26));\n\
    console.log(get_max_triples(27));\nconsole.log(get_max_triples(28));\nconsole.log(get_max_triples(29));\n\
    console.log(get\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy8jqhrfb.ts(54,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpy8jqhrfb.ts(54,9): error TS1005: '','' expected.

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let count = 0;\n    for (let i = 1; i < n - 1; i++) {\n        for (let j\
    \ = i + 1; j < n; j++) {\n            for (let k = j + 1; k <= n; k++) {\n   \
    \             if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 === 0) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(100));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    53361

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(6));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    4

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 2
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\nconsole.log(get_max_triples(15));\nconsole.log(get_max_triples(20));\n\
    console.log(get_max_triples(25));\nconsole.log(get_max_triples(30));\nconsole.log(get_max_triples(35));\n\
    console.log(get_max_triples(40));\nconsole.log(get_max_triples(45));\nconsole.log(get_max_triples(50));\n\
    console.log(get_max_triples(55));\nconsole.log(get_max_triples(60));\nconsole.log(get_max_triples(65));\n\
    console.log(get_max_triples(70));\nconsole.log(get_max_triples(75));\nconsole.log(get_max_triples(80));\n\
    console.log(get_max_triples(85));\nconsole.log(get_max_triples(90));\nconsole.log(get_max_triples(95));\n\
    console.log(get_max_triples(100));\nconsole.log(get_max_triples(105));\nconsole.log(get_max_triples(110));\n\
    console.log(get_max_triples(115));\nconsole.log(get_max_triples(120));\nconsole.log(get_max_triples(125));\n\
    console.log(get\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9ztw6b7h.ts(54,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp9ztw6b7h.ts(54,9): error TS1005: '','' expected.

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 1
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = new Array(n);\n    let count: number = 0;\n    for (let\
    \ i = 0; i < n; i++) {\n        a[i] = i * i - i + 1;\n    }\n    for (let i =\
    \ 0; i < n - 2; i++) {\n        for (let j = i + 1; j < n - 1; j++) {\n      \
    \      for (let k = j + 1; k < n; k++) {\n                if ((a[i] + a[j] + a[k])\
    \ % 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpcv5usixu.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcv5usixu.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738530
- exit_code: 2
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\nconsole.log(get_max_triples(15));\nconsole.log(get_max_triples(20));\n\
    console.log(get_max_triples(25));\nconsole.log(get_max_triples(30));\nconsole.log(get_max_triples(35));\n\
    console.log(get_max_triples(40));\nconsole.log(get_max_triples(45));\nconsole.log(get_max_triples(50));\n\
    console.log(get_max_triples(55));\nconsole.log(get_max_triples(60));\nconsole.log(get_max_triples(65));\n\
    console.log(get_max_triples(70));\nconsole.log(get_max_triples(75));\nconsole.log(get_max_triples(80));\n\
    console.log(get_max_triples(85));\nconsole.log(get_max_triples(90));\nconsole.log(get_max_triples(95));\n\
    console.log(get_max_triples(100));\nconsole.log(get_max_triples(105));\nconsole.log(get_max_triples(110));\n\
    console.log(get_max_triples(115));\nconsole.log(get_max_triples(120));\nconsole.log(get_max_triples(125));\n\
    console.log(get\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9ztw6b7h.ts(54,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp9ztw6b7h.ts(54,9): error TS1005: '','' expected.

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let arr = [];\n    for (let i = 1; i <= n; i++) {\n        arr.push(i * i\
    \ - i + 1);\n    }\n    let count = 0;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        for (let j = i + 1; j < arr.length; j++) {\n            for (let\
    \ k = j + 1; k < arr.length; k++) {\n                if ((arr[i] + arr[j] + arr[k])\
    \ % 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let count = 0;\n    let a = [];\n    for (let i = 1; i <= n; i++) {\n   \
    \     a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length; i++) {\n\
    \        for (let j = i + 1; j < a.length; j++) {\n            for (let k = j\
    \ + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3 ===\
    \ 0) {\n                    count++;\n                }\n            }\n     \
    \   }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(6));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    4

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\nconsole.log(get_max_triples(20));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    321

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 1
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let count = 0;\n    for (let i = 1; i < n; i++) {\n        for (let j = i\
    \ + 1; j < n; j++) {\n            for (let k = j + 1; k < n; k++) {\n        \
    \        if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 === 0) {\n  \
    \                  count++;\n                }\n            }\n        }\n   \
    \ }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmprmvq36yb.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprmvq36yb.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    21

    '
  timestamp: 1659738532
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 2
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(6));\nconsole.log(get_max_triples(7));\nconsole.log(get_max_triples(8));\n\
    console.log(get_max_triples(9));\nconsole.log(get_max_triples(10));\nconsole.log(get_max_triples(11));\n\
    console.log(get_max_triples(12));\nconsole.log(get_max_triples(13));\nconsole.log(get_max_triples(14));\n\
    console.log(get_max_triples(15));\nconsole.log(get_max_triples(16));\nconsole.log(get_max_triples(17));\n\
    console.log(get_max_triples(18));\nconsole.log(get_max_triples(19));\nconsole.log(get_max_triples(20));\n\
    console.log(get_max_triples(21));\nconsole.log(get_max_triples(22));\nconsole.log(get_max_triples(23));\n\
    console.log(get_max_triples(24));\nconsole.log(get_max_triples(25));\nconsole.log(get_max_triples(26));\n\
    console.log(get_max_triples(27));\nconsole.log(get_max_triples(28));\nconsole.log(get_max_triples(29));\n\
    console.log(get\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy8jqhrfb.ts(54,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpy8jqhrfb.ts(54,9): error TS1005: '','' expected.

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let count = 0;\n    for (let i = 1; i < n - 1; i++) {\n        for (let j\
    \ = i + 1; j < n; j++) {\n            for (let k = j + 1; k <= n; k++) {\n   \
    \             if ((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 === 0) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 2
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(6));\nconsole.log(get_max_triples(7));\nconsole.log(get_max_triples(8));\n\
    console.log(get_max_triples(9));\nconsole.log(get_max_triples(10));\nconsole.log(get_max_triples(11));\n\
    console.log(get_max_triples(12));\nconsole.log(get_max_triples(13));\nconsole.log(get_max_triples(14));\n\
    console.log(get_max_triples(15));\nconsole.log(get_max_triples(16));\nconsole.log(get_max_triples(17));\n\
    console.log(get_max_triples(18));\nconsole.log(get_max_triples(19));\nconsole.log(get_max_triples(20));\n\
    console.log(get_max_triples(21));\nconsole.log(get_max_triples(22));\nconsole.log(get_max_triples(23));\n\
    console.log(get_max_triples(24));\nconsole.log(get_max_triples(25));\nconsole.log(get_max_triples(26));\n\
    console.log(get_max_triples(27));\nconsole.log(get_max_triples(28));\nconsole.log(get_max_triples(29));\n\
    console.log(get\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy8jqhrfb.ts(54,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpy8jqhrfb.ts(54,9): error TS1005: '','' expected.

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\nconsole.log(get_max_triples(100));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    53361

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\nconsole.log(get_max_triples(15));\nconsole.log(get_max_triples(20));\n\
    console.log(get_max_triples(25));\nconsole.log(get_max_triples(30));\nconsole.log(get_max_triples(35));\n\
    console.log(get_max_triples(40));\nconsole.log(get_max_triples(45));\nconsole.log(get_max_triples(50));\n\
    console.log(get_max_triples(55));\nconsole.log(get_max_triples(60));\nconsole.log(get_max_triples(65));\n\
    console.log(get_max_triples(70));\nconsole.log(get_max_triples(75));\nconsole.log(get_max_triples(80));\n\
    console.log(get_max_triples(85));\nconsole.log(get_max_triples(90));\nconsole.log(get_max_triples(95));\n\
    console.log(get_max_triples(100));\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    130

    321

    736

    1260

    1991

    3211

    4515

    6136

    8586

    11020

    13881

    17986

    21900

    26351

    32536

    38280

    44671

    53361

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let result = 0;\n    let arr = [];\n    for (let i = 1; i <= n; i++) {\n\
    \        arr.push(i * i - i + 1);\n    }\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            for\
    \ (let k = j + 1; k < arr.length; k++) {\n                if ((arr[i] + arr[j]\
    \ + arr[k]) % 3 === 0) {\n                    result++;\n                }\n \
    \           }\n        }\n    }\n    return result;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(6));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    4

    '
  timestamp: 1659738532
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\nconsole.log(get_max_triples(100));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    53361

    '
  timestamp: 1659738532
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let count = 0;\n    let arr = [];\n    for (let i = 1; i <= n; i++) {\n \
    \       arr.push(i * i - i + 1);\n    }\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        for (let j = i + 1; j < arr.length; j++) {\n            for (let\
    \ k = j + 1; k < arr.length; k++) {\n                if ((arr[i] + arr[j] + arr[k])\
    \ % 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\nconsole.log(get_max_triples(10));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738532
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let count = 0;\n    let arr = [];\n    for (let i = 1; i <= n; i++) {\n \
    \       arr.push(i * i - i + 1);\n    }\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        for (let j = i + 1; j < arr.length; j++) {\n            for (let\
    \ k = j + 1; k < arr.length; k++) {\n                if ((arr[i] + arr[j] + arr[k])\
    \ % 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738532
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let count = 0;\n    let a = [];\n    for (let i = 1; i <= n; i++) {\n   \
    \     a.push(i * i - i + 1);\n    }\n    for (let i = 0; i < a.length; i++) {\n\
    \        for (let j = i + 1; j < a.length; j++) {\n            for (let k = j\
    \ + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) % 3 ===\
    \ 0) {\n                    count++;\n                }\n            }\n     \
    \   }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738532
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let arr = [];\n    for (let i = 1; i <= n; i++) {\n        arr.push(i * i\
    \ - i + 1);\n    }\n    let count = 0;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        for (let j = i + 1; j < arr.length; j++) {\n            for (let\
    \ k = j + 1; k < arr.length; k++) {\n                if ((arr[i] + arr[j] + arr[k])\
    \ % 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\nconsole.log(get_max_triples(15));\nconsole.log(get_max_triples(20));\n\
    console.log(get_max_triples(25));\nconsole.log(get_max_triples(30));\nconsole.log(get_max_triples(35));\n\
    console.log(get_max_triples(40));\nconsole.log(get_max_triples(45));\nconsole.log(get_max_triples(50));\n\
    console.log(get_max_triples(55));\nconsole.log(get_max_triples(60));\nconsole.log(get_max_triples(65));\n\
    console.log(get_max_triples(70));\nconsole.log(get_max_triples(75));\nconsole.log(get_max_triples(80));\n\
    console.log(get_max_triples(85));\nconsole.log(get_max_triples(90));\nconsole.log(get_max_triples(95));\n\
    console.log(get_max_triples(100));\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    130

    321

    736

    1260

    1991

    3211

    4515

    6136

    8586

    11020

    13881

    17986

    21900

    26351

    32536

    38280

    44671

    53361

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(6));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    4

    '
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\nconsole.log(get_max_triples(100));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    53361

    '
  timestamp: 1659738532
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(6));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    4

    '
  timestamp: 1659738532
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738530
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    let count: number = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        a.push(i * i - i + 1);\n    }\n    for (let i = 0; i <\
    \ a.length; i++) {\n        for (let j = i + 1; j < a.length; j++) {\n       \
    \     for (let k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j]\
    \ + a[k]) % 3 === 0) {\n                    count++;\n                }\n    \
    \        }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531
- exit_code: 0
  program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
    \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
    \ valid triple is (1, 7, 13).\nfunction get_max_triples(n: number): number {\n\
    \    let a: number[] = [];\n    for (let i = 1; i <= n; i++) {\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count: number = 0;\n    for (let i = 0; i < a.length;\
    \ i++) {\n        for (let j = i + 1; j < a.length; j++) {\n            for (let\
    \ k = j + 1; k < a.length; k++) {\n                if ((a[i] + a[j] + a[k]) %\
    \ 3 === 0) {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(get_max_triples(5));\n\
    console.log(get_max_triples(10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    36

    '
  timestamp: 1659738531

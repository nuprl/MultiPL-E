{
  "name": "HumanEval_44_change_base",
  "language": "rb",
  "prompt": "# Change numerical base of input number x to base.\n# return string representation after the conversion.\n# base numbers are less than 10.\n# >>> change_base.call(8, 3)\n# \"22\"\n# >>> change_base.call(8, 2)\n# \"1000\"\n# >>> change_base.call(7, 2)\n# \"111\"\ndef change_base(x, base)\n",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_change_base\n    candidate = method(:change_base)\n    assert_equal(\"22\", candidate.call(8, 3))\n    assert_equal(\"100\", candidate.call(9, 3))\n    assert_equal(\"11101010\", candidate.call(234, 2))\n    assert_equal(\"10000\", candidate.call(16, 2))\n    assert_equal(\"1000\", candidate.call(8, 2))\n    assert_equal(\"111\", candidate.call(7, 2))\n    assert_equal(\"2\", candidate.call(2, 3))\n    assert_equal(\"3\", candidate.call(3, 4))\n    assert_equal(\"4\", candidate.call(4, 5))\n    assert_equal(\"5\", candidate.call(5, 6))\n    assert_equal(\"6\", candidate.call(6, 7))\n    assert_equal(\"7\", candidate.call(7, 8))\n  end\nend\n",
  "completions": [
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x / base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if base < 10:\n        return str(x)\n    else:\n        return str(x)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x / base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < 0:\n        return \"-\" + change_base(-x, base)\n    if x == 0:\n        return \"0\"\n    if base == 10:\n        return str(x)\n    if base == 2:\n        return \"\".join([\"1\" if i else \"0\" for i in xrange(x)])\n    if base == 3:\n        return \"\".join([\"1\" if i else \"0\" for i in xrange(x)])\n    if base == 4:\n        return \"\".join([\"1\" if i else \"0\" for i in xrange(x)])\n    if base == 5:\n        return \"\".join([\"1\" if i else \"0\" for i in xrange(x)])\n    if base == 6:\n        return \"\".join([\"1\" if i else \"0\" for i in xrange(x)])\n    if base == 7:\n        return \"\".join([\"1\" if i else \"0\" for i in xrange(x)])\n    if base == 8:\n        return \"\".join([\"1\" if i else \"0\" for i in xrange(x)])\n    if base == 9:\n        return \"\".join([\"1\" if i else \"0\" for i in xrange(x)])\n    if base == 11:\n        return \"\".join([\"1\" if i else \"0\" for i in xrange(x)])\n    if base == 12:\n        return \"\".join([\"1\" if i else \"0\" for i in xrange(x)])\n    if base == 13:\n        return \"\".join([\"1\" if i else \"0\" for i in xrange(x)])\n    if base == 14:\n        return \"\".join([\"1\" if i else \"0\" for i in xrange(x)])\n    if base == 15:\n        return \"\".join([\"1\" if i else \"0\" for i in xrange(x)])\n    if base == 16:\n        return \"\".join([\"1\" if i else \"0\" for i in xrange(x)])\n    if base == 17:\n        return \"\".join([\"1\"",
    "    if x < 0:\n        return \"-\" + change_base(-x, base)\n    if x == 0:\n        return \"0\"\n    if base == 10:\n        return str(x)\n    if base == 2:\n        return \"\".join([\"1\"] * x)\n    if base == 3:\n        return \"\".join([\"1\"] * (x - 1) + [\"10\"])\n    if base == 4:\n        return \"\".join([\"1\"] * (x - 1) + [\"100\"])\n    if base == 5:\n        return \"\".join([\"1\"] * (x - 1) + [\"1000\"])\n    if base == 6:\n        return \"\".join([\"1\"] * (x - 1) + [\"10000\"])\n    if base == 7:\n        return \"\".join([\"1\"] * (x - 1) + [\"11111\"])\n    if base == 8:\n        return \"\".join([\"1\"] * (x - 1) + [\"110000\"])\n    if base == 9:\n        return \"\".join([\"1\"] * (x - 1) + [\"11100000\"])\n    if base == 10:\n        return \"\".join([\"1\"] * (x - 1) + [\"1100000000\"])\n    if base == 11:\n        return \"\".join([\"1\"] * (x - 1) + [\"11111000000\"])\n    if base == 12:\n        return \"\".join([\"1\"] * (x - 1) + [\"110000000000\"])\n    if base == 13:\n        return \"\".join([\"1\"] * (x - 1) + [\"1100000000000\"])\n    if base == 14:\n        return \"\".join([\"1\"] * (x - 1) + [\"11000000000000\"])\n    if base == 15:\n        return \"\".join([\"1\"] * (x - 1) + [\"110000000000000\"])\n    if base == 16:\n        return \"\".join([\"1\"] * (x - 1) + [\"1100000000000000\"])\n    if base == 17:\n        return \"\".join([\"1\"] * (x - 1) + [\"11000000000000000\"])\n    if base == 18",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x / base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < 0:\n        return '-' + change_base(-x, base)\n    if base == 10:\n        return str(x)\n    if base == 2:\n        return ''.join(['1']*x)\n    if base == 3:\n        return ''.join(['1']*x)\n    if base == 4:\n        return ''.join(['1']*x)\n    if base == 5:\n        return ''.join(['1']*x)\n    if base == 6:\n        return ''.join(['1']*x)\n    if base == 7:\n        return ''.join(['1']*x)\n    if base == 8:\n        return ''.join(['1']*x)\n    if base == 9:\n        return ''.join(['1']*x)\n    if base == 11:\n        return ''.join(['1']*x)\n    if base == 12:\n        return ''.join(['1']*x)\n    if base == 13:\n        return ''.join(['1']*x)\n    if base == 14:\n        return ''.join(['1']*x)\n    if base == 15:\n        return ''.join(['1']*x)\n    if base == 16:\n        return ''.join(['1']*x)\n    if base == 17:\n        return ''.join(['1']*x)\n    if base == 18:\n        return ''.join(['1']*x)\n    if base == 19:\n        return ''.join(['1']*x)\n    if base == 20:\n        return ''.join(['1']*x)\n    if base == 21:\n        return ''.join(['1']*x)\n    if base == 22:\n        return ''.join(['1']*x)\n    if base == 23:\n        return ''.join(['1']*x)\n    if base == 24:\n        return ''.join(['1']*x)\n    if base == 25:\n        return ''.join(['1']*x)\n    if base == 26:\n        return ''.join(['1']*",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < 0:\n        return \"-\" + change_base(-x, base)\n    if x == 0:\n        return \"0\"\n    if base == 10:\n        return str(x)\n    if base == 2:\n        return \"\".join([\"1\"] * x)\n    if base == 3:\n        return \"\".join([\"1\"] * (x - 1) + [\"10\"])\n    if base == 4:\n        return \"\".join([\"1\"] * (x - 1) + [\"100\"])\n    if base == 5:\n        return \"\".join([\"1\"] * (x - 1) + [\"1000\"])\n    if base == 6:\n        return \"\".join([\"1\"] * (x - 1) + [\"10000\"])\n    if base == 7:\n        return \"\".join([\"1\"] * (x - 1) + [\"100000\"])\n    if base == 8:\n        return \"\".join([\"1\"] * (x - 1) + [\"1000000\"])\n    if base == 9:\n        return \"\".join([\"1\"] * (x - 1) + [\"10000000\"])\n    if base == 10:\n        return \"\".join([\"1\"] * (x - 1) + [\"100000000\"])\n    if base == 11:\n        return \"\".join([\"1\"] * (x - 1) + [\"1000000000\"])\n    if base == 12:\n        return \"\".join([\"1\"] * (x - 1) + [\"10000000000\"])\n    if base == 13:\n        return \"\".join([\"1\"] * (x - 1) + [\"100000000000\"])\n    if base == 14:\n        return \"\".join([\"1\"] * (x - 1) + [\"1000000000000\"])\n    if base == 15:\n        return \"\".join([\"1\"] * (x - 1) + [\"10000000000000\"])\n    if base == 16:\n        return \"\".join([\"1\"] * (x - 1) + [\"100000000000000\"])\n    if base == 17:\n        return \"\".join([\"1\"] * (x - 1) + [\"1000000000000000\"])\n    if base == 18:",
    "    if x < 0:\n        return '-' + change_base(-x, base)\n    if x == 0:\n        return '0'\n    if base == 10:\n        return str(x)\n    if base == 2:\n        return ''.join(['1'] * x)\n    if base == 3:\n        return ''.join(['1'] * (x - 1) + ['11'])\n    if base == 4:\n        return ''.join(['1'] * (x - 1) + ['11', '1'])\n    if base == 5:\n        return ''.join(['1'] * (x - 1) + ['11', '1', '1'])\n    if base == 6:\n        return ''.join(['1'] * (x - 1) + ['11', '1', '1', '1'])\n    if base == 7:\n        return ''.join(['1'] * (x - 1) + ['11', '1', '1', '1', '1'])\n    if base == 8:\n        return ''.join(['1'] * (x - 1) + ['11', '1', '1', '1', '1', '1'])\n    if base == 9:\n        return ''.join(['1'] * (x - 1) + ['11', '1', '1', '1', '1', '1', '1'])\n    if base == 10:\n        return ''.join(['1'] * (x - 1) + ['11', '1', '1', '1', '1', '1', '1', '1'])\n    if base == 11:\n        return ''.join(['1'] * (x - 1) + ['11', '1', '1', '1', '1', '1', '1', '1', '1'])\n    if base == 12:\n        return ''.join(['1'] * (x - 1) + ['11', '1', '1', '1', '1', '1', '1', '1', '1', '1'])\n    if base == 13:\n        return ''.join(['1'] * (x - 1) + ['11', '1',",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x / base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x / base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x / base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x / base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x / base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < 0:\n        return \"-\" + change_base(-x, base)\n    if base == 10:\n        return str(x)\n    if base == 2:\n        return \"\".join([\"1\"] * x)\n    if base == 3:\n        return \"\".join([\"1\"] * x)\n    if base == 4:\n        return \"\".join([\"1\"] * x)\n    if base == 5:\n        return \"\".join([\"1\"] * x)\n    if base == 6:\n        return \"\".join([\"1\"] * x)\n    if base == 7:\n        return \"\".join([\"1\"] * x)\n    if base == 8:\n        return \"\".join([\"1\"] * x)\n    if base == 9:\n        return \"\".join([\"1\"] * x)\n    if base == 11:\n        return \"\".join([\"1\"] * x)\n    if base == 12:\n        return \"\".join([\"1\"] * x)\n    if base == 13:\n        return \"\".join([\"1\"] * x)\n    if base == 14:\n        return \"\".join([\"1\"] * x)\n    if base == 15:\n        return \"\".join([\"1\"] * x)\n    if base == 16:\n        return \"\".join([\"1\"] * x)\n    if base == 17:\n        return \"\".join([\"1\"] * x)\n    if base == 18:\n        return \"\".join([\"1\"] * x)\n    if base == 19:\n        return \"\".join([\"1\"] * x)\n    if base == 20:\n        return \"\".join([\"1\"] * x)\n    if base == 21:\n        return \"\".join([\"1\"] * x)\n    if base == 22:\n        return \"\".join([\"1\"] * x)\n    if base == 23:\n        return \"\".join([\"1\"] * x)\n    if base == 24:\n        return \"\".join([\"1\"] * x)\n    if base == 25:\n        return \"\".join([\"1\"] * x)\n    if base == 26:\n        return \"\".join([\"1\"] *",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < 0:\n        return '-' + change_base(-x, base)\n    if x == 0:\n        return '0'\n    if base == 10:\n        return str(x)\n    if base == 2:\n        return ''.join(['1'] * x)\n    if base == 3:\n        return ''.join(['1'] * x)\n    if base == 4:\n        return ''.join(['1'] * x)\n    if base == 5:\n        return ''.join(['1'] * x)\n    if base == 6:\n        return ''.join(['1'] * x)\n    if base == 7:\n        return ''.join(['1'] * x)\n    if base == 8:\n        return ''.join(['1'] * x)\n    if base == 9:\n        return ''.join(['1'] * x)\n    if base == 11:\n        return ''.join(['1'] * x)\n    if base == 12:\n        return ''.join(['1'] * x)\n    if base == 13:\n        return ''.join(['1'] * x)\n    if base == 14:\n        return ''.join(['1'] * x)\n    if base == 15:\n        return ''.join(['1'] * x)\n    if base == 16:\n        return ''.join(['1'] * x)\n    if base == 17:\n        return ''.join(['1'] * x)\n    if base == 18:\n        return ''.join(['1'] * x)\n    if base == 19:\n        return ''.join(['1'] * x)\n    if base == 20:\n        return ''.join(['1'] * x)\n    if base == 21:\n        return ''.join(['1'] * x)\n    if base == 22:\n        return ''.join(['1'] * x)\n    if base == 23:\n        return ''.join(['1'] * x)\n    if base == 24:\n        return ''.join(['1'] * x)\n    if base == 25:\n        return ''.join(['1'] * x)\n    if base ==",
    "    if x < 0:\n        return \"-\" + change_base(-x, base)\n    if x == 0:\n        return \"0\"\n    if base < 2 or base > 36:\n        return \"invalid base\"\n    if x < base:\n        return \"0\"\n    if x == base:\n        return \"1\"\n    if x % base == 0:\n        return str(x // base)\n    result = \"\"\n    while x > 0:\n        result = str(x % base) + result\n        x = x // base\n    return result",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < 0:\n        return '-' + change_base(-x, base)\n    if x == 0:\n        return '0'\n    if base == 10:\n        return str(x)\n    if base == 2:\n        return ''.join(['1'] * x)\n    if base == 3:\n        return ''.join(['1'] * (x - 1) + ['11', '10'])\n    if base == 4:\n        return ''.join(['1'] * (x - 1) + ['11', '100', '10'])\n    if base == 5:\n        return ''.join(['1'] * (x - 1) + ['11', '100', '10', '1'])\n    if base == 6:\n        return ''.join(['1'] * (x - 1) + ['11', '100', '10', '11', '1'])\n    if base == 7:\n        return ''.join(['1'] * (x - 1) + ['11', '100', '10', '11', '10', '1'])\n    if base == 8:\n        return ''.join(['1'] * (x - 1) + ['11', '100', '10', '11', '100', '1'])\n    if base == 9:\n        return ''.join(['1'] * (x - 1) + ['11', '100', '10', '11', '100', '10', '1'])\n    if base == 10:\n        return ''.join(['1'] * (x - 1) + ['11', '100', '10', '11', '100', '10', '11', '1'])\n    if base == 11:\n        return ''.join(['1'] * (x - 1) + ['11', '100', '10', '11', '100', '10', '11', '10', '1'])\n    if base == 12:\n        return ''.join(['1'] * (x - 1) + ['11', '100', '10', '11', '100', '10', '11', '100', '10', '11', '1'])\n    if base == 13:\n        return ''.",
    "    if x < 0:\n        return \"-\" + change_base(-x, base)\n    if x == 0:\n        return \"0\"\n    if base == 10:\n        return str(x)\n    if base == 2:\n        return \"\".join([\"1\"] * x)\n    if base == 3:\n        return \"\".join([\"1\"] * (x - 1) + [\"10\"])\n    if base == 4:\n        return \"\".join([\"1\"] * (x - 1) + [\"100\"])\n    if base == 5:\n        return \"\".join([\"1\"] * (x - 1) + [\"1000\"])\n    if base == 6:\n        return \"\".join([\"1\"] * (x - 1) + [\"10000\"])\n    if base == 7:\n        return \"\".join([\"1\"] * (x - 1) + [\"11000\"])\n    if base == 8:\n        return \"\".join([\"1\"] * (x - 1) + [\"11100\"])\n    if base == 9:\n        return \"\".join([\"1\"] * (x - 1) + [\"11110\"])\n    if base == 10:\n        return \"\".join([\"1\"] * (x - 1) + [\"11111\"])\n    if base == 11:\n        return \"\".join([\"1\"] * (x - 1) + [\"11111\"])\n    if base == 12:\n        return \"\".join([\"1\"] * (x - 1) + [\"11111\"])\n    if base == 13:\n        return \"\".join([\"1\"] * (x - 1) + [\"11111\"])\n    if base == 14:\n        return \"\".join([\"1\"] * (x - 1) + [\"11111\"])\n    if base == 15:\n        return \"\".join([\"1\"] * (x - 1) + [\"11111\"])\n    if base == 16:\n        return \"\".join([\"1\"] * (x - 1) + [\"11111\"])\n    if base == 17:\n        return \"\".join([\"1\"] * (x - 1) + [\"11111\"])\n    if base == 18:\n        return \"\".join(",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x / base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if base < 2 or base > 10:\n        raise ValueError(\"Invalid base\")\n    if x < 0:\n        return \"-\" + change_base(-x, base)\n    if x == 0:\n        return \"0\"\n    if x < base:\n        return \"0\" + change_base(x, base)\n    else:\n        return change_base(x // base, base) + change_base(x % base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x / base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x / base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x).zfill(base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if base < 2:\n        return \"Error\"\n    if base == 2:\n        return str(x)\n    if base == 10:\n        return str(x)\n    if x < 0:\n        return \"Error\"\n    if x == 0:\n        return \"0\"\n    if base == 3:\n        return str(x)\n    if base == 5:\n        return str(x)\n    if base == 8:\n        return str(x)\n    if base == 16:\n        return str(x)\n    if base == 7:\n        return str(x)\n    if base == 11:\n        return str(x)\n    if base == 13:\n        return str(x)\n    if base == 14:\n        return str(x)\n    if base == 15:\n        return str(x)\n    if base == 17:\n        return str(x)\n    if base == 18:\n        return str(x)\n    if base == 19:\n        return str(x)\n    if base == 20:\n        return str(x)\n    if base == 21:\n        return str(x)\n    if base == 22:\n        return str(x)\n    if base == 23:\n        return str(x)\n    if base == 24:\n        return str(x)\n    if base == 25:\n        return str(x)\n    if base == 26:\n        return str(x)\n    if base == 27:\n        return str(x)\n    if base == 28:\n        return str(x)\n    if base == 29:\n        return str(x)\n    if base == 30:\n        return str(x)\n    if base == 31:\n        return str(x)\n    if base == 32:\n        return str(x)\n    if base == 33:\n        return str(x)\n    if base == 34:\n        return str(x)\n    if base == 35:\n        return str(x)\n    if base == 36:\n        return str(x)\n    if base == 37:\n        return str(x)\n    if base == 38:\n        return str(x)\n    if base == 39:\n        return str(",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x).zfill(base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x / base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x / base, base)",
    "    if x < 0:\n        return '-' + change_base(-x, base)\n    if base < 2:\n        return '0'\n    if base > 36:\n        return '0'\n    if x == 0:\n        return '0'\n    if x < 10:\n        return str(x)\n    if x < 36:\n        return chr(x + 87)\n    return chr(x + 55)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x / base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x / base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < 0:\n        return \"-\" + change_base(-x, base)\n    if base == 10:\n        return str(x)\n    if base == 2:\n        return \"\".join([\"1\"] * x)\n    if base == 3:\n        return \"\".join([\"1\"] * x)\n    if base == 4:\n        return \"\".join([\"0\"] * x)\n    if base == 5:\n        return \"\".join([\"0\"] * x)\n    if base == 6:\n        return \"\".join([\"0\"] * x)\n    if base == 7:\n        return \"\".join([\"1\"] * x)\n    if base == 8:\n        return \"\".join([\"0\"] * x)\n    if base == 9:\n        return \"\".join([\"1\"] * x)\n    if base == 11:\n        return \"\".join([\"1\"] * x)\n    if base == 12:\n        return \"\".join([\"0\"] * x)\n    if base == 13:\n        return \"\".join([\"1\"] * x)\n    if base == 14:\n        return \"\".join([\"0\"] * x)\n    if base == 15:\n        return \"\".join([\"1\"] * x)\n    if base == 16:\n        return \"\".join([\"0\"] * x)\n    if base == 17:\n        return \"\".join([\"1\"] * x)\n    if base == 18:\n        return \"\".join([\"0\"] * x)\n    if base == 19:\n        return \"\".join([\"1\"] * x)\n    if base == 20:\n        return \"\".join([\"0\"] * x)\n    if base == 21:\n        return \"\".join([\"1\"] * x)\n    if base == 22:\n        return \"\".join([\"0\"] * x)\n    if base == 23:\n        return \"\".join([\"1\"] * x)\n    if base == 24:\n        return \"\".join([\"0\"] * x)\n    if base == 25:\n        return \"\".join([\"1\"] * x)\n    if base == 26:\n        return \"\".join([\"0\"] *",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < 0:\n        return '-' + change_base(-x, base)\n    if x == 0:\n        return '0'\n    if base == 10:\n        return str(x)\n    if base == 2:\n        return '{0:b}'.format(x)\n    if base == 3:\n        return '{0:b}'.format(x)\n    if base == 4:\n        return '{0:b}'.format(x)\n    if base == 5:\n        return '{0:b}'.format(x)\n    if base == 6:\n        return '{0:b}'.format(x)\n    if base == 7:\n        return '{0:b}'.format(x)\n    if base == 8:\n        return '{0:b}'.format(x)\n    if base == 9:\n        return '{0:b}'.format(x)\n    if base == 16:\n        return '{0:x}'.format(x)\n    if base == 17:\n        return '{0:x}'.format(x)\n    if base == 18:\n        return '{0:x}'.format(x)\n    if base == 19:\n        return '{0:x}'.format(x)\n    if base == 20:\n        return '{0:x}'.format(x)\n    if base == 21:\n        return '{0:x}'.format(x)\n    if base == 22:\n        return '{0:x}'.format(x)\n    if base == 23:\n        return '{0:x}'.format(x)\n    if base == 24:\n        return '{0:x}'.format(x)\n    if base == 25:\n        return '{0:x}'.format(x)\n    if base == 26:\n        return '{0:x}'.format(x)\n    if base == 27:\n        return '{0:x}'.format(x)\n    if base == 28:\n        return '{0:x}'.format(x)\n    if base == 29:\n        return '{0:x}'.format(x)\n    if",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < 0:\n        return \"-\" + change_base(-x, base)\n    if x == 0:\n        return \"0\"\n    if base == 10:\n        return str(x)\n    if base == 2:\n        return \"\".join([\"1\"] * x)\n    if base == 3:\n        return \"\".join([\"1\"] * (x - 1) + [\"10\"])\n    if base == 4:\n        return \"\".join([\"1\"] * (x - 1) + [\"100\"])\n    if base == 5:\n        return \"\".join([\"1\"] * (x - 1) + [\"1000\"])\n    if base == 6:\n        return \"\".join([\"1\"] * (x - 1) + [\"10000\"])\n    if base == 7:\n        return \"\".join([\"1\"] * (x - 1) + [\"100000\"])\n    if base == 8:\n        return \"\".join([\"1\"] * (x - 1) + [\"1000000\"])\n    if base == 9:\n        return \"\".join([\"1\"] * (x - 1) + [\"10000000\"])\n    if base == 10:\n        return \"\".join([\"1\"] * (x - 1) + [\"100000000\"])\n    if base == 11:\n        return \"\".join([\"1\"] * (x - 1) + [\"1000000000\"])\n    if base == 12:\n        return \"\".join([\"1\"] * (x - 1) + [\"10000000000\"])\n    if base == 13:\n        return \"\".join([\"1\"] * (x - 1) + [\"100000000000\"])\n    if base == 14:\n        return \"\".join([\"1\"] * (x - 1) + [\"1000000000000\"])\n    if base == 15:\n        return \"\".join([\"1\"] * (x - 1) + [\"10000000000000\"])\n    if base == 16:\n        return \"\".join([\"1\"] * (x - 1) + [\"100000000000000\"])\n    if base == 17:\n        return \"\".join([\"1\"] * (x - 1) + [\"1000000000000000\"])\n    if base == 18:",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x / base, base)",
    "    if x < 0:\n        return \"-\" + change_base(-x, base)\n    if x == 0:\n        return \"0\"\n    if base == 10:\n        return str(x)\n    if base == 2:\n        return \"\".join([\"1\" if i % 2 == 0 else \"0\" for i in range(x)])\n    if base == 3:\n        return \"\".join([\"1\" if i % 3 == 0 else \"0\" for i in range(x)])\n    if base == 4:\n        return \"\".join([\"1\" if i % 4 == 0 else \"0\" for i in range(x)])\n    if base == 5:\n        return \"\".join([\"1\" if i % 5 == 0 else \"0\" for i in range(x)])\n    if base == 6:\n        return \"\".join([\"1\" if i % 6 == 0 else \"0\" for i in range(x)])\n    if base == 7:\n        return \"\".join([\"1\" if i % 7 == 0 else \"0\" for i in range(x)])\n    if base == 8:\n        return \"\".join([\"1\" if i % 8 == 0 else \"0\" for i in range(x)])\n    if base == 9:\n        return \"\".join([\"1\" if i % 9 == 0 else \"0\" for i in range(x)])\n    if base == 11:\n        return \"\".join([\"1\" if i % 11 == 0 else \"0\" for i in range(x)])\n    if base == 12:\n        return \"\".join([\"1\" if i % 12 == 0 else \"0\" for i in range(x)])\n    if base == 13:\n        return \"\".join([\"1\" if i % 13 == 0 else \"0\" for i in range(x)])\n    if base == 14:\n        return \"\".join([\"1\" if i % 14 == 0 else \"0\" for i in range(x)])\n    if base == 15:\n        return \"\".join([\"1\" if i % 15 == 0 else \"0\" for i in range(x)])\n    if base == 16:\n        return",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < 0:\n        return '-' + change_base(-x, base)\n    if x == 0:\n        return '0'\n    if base == 10:\n        return str(x)\n    if base == 2:\n        return ''.join(['1'] * x)\n    if base == 3:\n        return ''.join(['1'] * x)\n    if base == 4:\n        return ''.join(['1'] * x)\n    if base == 5:\n        return ''.join(['1'] * x)\n    if base == 6:\n        return ''.join(['1'] * x)\n    if base == 7:\n        return ''.join(['1'] * x)\n    if base == 8:\n        return ''.join(['1'] * x)\n    if base == 9:\n        return ''.join(['1'] * x)\n    if base == 11:\n        return ''.join(['1'] * x)\n    if base == 12:\n        return ''.join(['1'] * x)\n    if base == 13:\n        return ''.join(['1'] * x)\n    if base == 14:\n        return ''.join(['1'] * x)\n    if base == 15:\n        return ''.join(['1'] * x)\n    if base == 16:\n        return ''.join(['1'] * x)\n    if base == 17:\n        return ''.join(['1'] * x)\n    if base == 18:\n        return ''.join(['1'] * x)\n    if base == 19:\n        return ''.join(['1'] * x)\n    if base == 20:\n        return ''.join(['1'] * x)\n    if base == 21:\n        return ''.join(['1'] * x)\n    if base == 22:\n        return ''.join(['1'] * x)\n    if base == 23:\n        return ''.join(['1'] * x)\n    if base == 24:\n        return ''.join(['1'] * x)\n    if base == 25:\n        return ''.join(['1'] * x)\n    if base ==",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x).zfill(base)",
    "    if base < 2 or base > 10:\n        return \"Invalid base\"\n    if x < 0:\n        return \"Negative numbers are not supported\"\n    if x == 0:\n        return \"0\"\n    result = \"\"\n    while x > 0:\n        remainder = x % base\n        result = remainder + result\n        x = x / base\n    return result",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x).zfill(base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if base < 10:\n        return str(x)\n    else:\n        return str(x)",
    "    if x < 0:\n        return '-' + change_base(-x, base)\n    if base == 10:\n        return str(x)\n    if x == 0:\n        return '0'\n    if base < 2 or base > 36:\n        return 'Error'\n    if base == 2:\n        return '0b' + ''.join(['1' if i == 1 else '0' for i in bin(x)[2:]])\n    if base == 16:\n        return '0x' + ''.join(['1' if i == 1 else '0' for i in hex(x)[2:]])\n    if base == 8:\n        return '0' + ''.join(['1' if i == 1 else '0' for i in oct(x)[2:]])\n    if base == 3:\n        return '0b' + ''.join(['1' if i == 1 else '0' for i in bin(x)[2:]])\n    return 'Error'",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if base < 10:\n        return str(x)\n    else:\n        return str(x)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < 0:\n        return \"-\" + change_base(-x, base)\n    if base == 10:\n        return str(x)\n    if x == 0:\n        return \"0\"\n    if base < 2 or base > 36:\n        return \"ERROR: base must be 2 to 36\"\n    if base == 2:\n        return \"0\" + change_base(x - 1, 36)\n    if base == 36:\n        return change_base(x - 1, 2)\n    if base == 10:\n        return str(x)\n    if base == 16:\n        return \"0x\" + change_base(x - 1, 2)\n    if base == 8:\n        return \"0\" + change_base(x - 1, 36)\n    if base == 2:\n        return change_base(x - 1, 36)\n    if base == 3:\n        return \"0\" + change_base(x - 1, 36)\n    if base == 4:\n        return \"0\" + change_base(x - 1, 36)\n    if base == 5:\n        return \"0\" + change_base(x - 1, 36)\n    if base == 6:\n        return \"0\" + change_base(x - 1, 36)\n    if base == 7:\n        return \"0\" + change_base(x - 1, 36)\n    if base == 8:\n        return \"0\" + change_base(x - 1, 36)\n    if base == 9:\n        return \"0\" + change_base(x - 1, 36)\n    if base == 10:\n        return \"0\" + change_base(x - 1, 36)\n    if base == 11:\n        return \"0\" + change_base(x - 1, 36)\n    if base == 12:\n        return \"0\" + change_base(x - 1, 36)\n    if base == 13:\n        return \"0\" + change_base(x - 1, 36)\n    if base == 14:\n        return \"0\" + change_base(x - 1, 36)\n    if base == 15:\n        return \"0\" + change_base(x - 1, 36)\n    ",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x).zfill(base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < 0:\n        return \"-\" + change_base(-x, base)\n    if x == 0:\n        return \"0\"\n    if base == 10:\n        return str(x)\n    if base == 2:\n        return \"\".join([\"1\"] * x)\n    if base == 3:\n        return \"\".join([\"1\"] * (x - 1)) + \"11\"\n    if base == 4:\n        return \"\".join([\"1\"] * (x - 1)) + \"11\"\n    if base == 5:\n        return \"\".join([\"1\"] * (x - 1)) + \"11\"\n    if base == 6:\n        return \"\".join([\"1\"] * (x - 1)) + \"11\"\n    if base == 7:\n        return \"\".join([\"1\"] * (x - 1)) + \"11\"\n    if base == 8:\n        return \"\".join([\"1\"] * (x - 1)) + \"11\"\n    if base == 9:\n        return \"\".join([\"1\"] * (x - 1)) + \"11\"",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x / base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x//base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x / base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)",
    "    if x < base:\n        return str(x)\n    else:\n        return str(x) + change_base(x // base, base)"
  ],
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ]
}
{
  "name": "HumanEval_94_skjkasdkd",
  "language": "rb",
  "prompt": "# You are given an array of integers.\n# You need to find the largest prime value and return the sum of its digits.\n# Examples:\n# >>> skjkasdkd.call([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n# 10\n# >>> skjkasdkd.call([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n# 25\n# >>> skjkasdkd.call([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3])\n# 13\n# >>> skjkasdkd.call([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n# 11\n# >>> skjkasdkd.call([0, 81, 12, 3, 1, 21])\n# 3\n# >>> skjkasdkd.call([0, 8, 1, 2, 1, 7])\n# 7\ndef skjkasdkd(lst)\n",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_skjkasdkd\n    candidate = method(:skjkasdkd)\n    assert_equal(10, candidate.call([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]))\n    assert_equal(25, candidate.call([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]))\n    assert_equal(13, candidate.call([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]))\n    assert_equal(11, candidate.call([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]))\n    assert_equal(3, candidate.call([0, 81, 12, 3, 1, 21]))\n    assert_equal(7, candidate.call([0, 8, 1, 2, 1, 7]))\n    assert_equal(19, candidate.call([8191]))\n    assert_equal(19, candidate.call([8191, 123456, 127, 7]))\n    assert_equal(10, candidate.call([127, 97, 8192]))\n  end\nend\n",
  "completions": [
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    if len(lst) == 0:\n        return 0\n    else:\n        return max(skjkasdkd(lst[1:]), lst[0])",
    "    if len(lst) == 0:\n        return 0\n    else:\n        return max(skjkasdkd(lst[1:]), lst[0])",
    "    if len(lst) == 0:\n        return 0\n    else:\n        return max(skjkasdkd(lst[1:]), lst[0]) + 1",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(map(int, str(max)))",
    "    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]\n    if len(lst) == 2:\n        return lst[0] + lst[1]\n    if len(lst) == 3:\n        return lst[0] + lst[1] + lst[2]\n    if len(lst) == 4:\n        return lst[0] + lst[1] + lst[2] + lst[3]\n    if len(lst) == 5:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4]\n    if len(lst) == 6:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5]\n    if len(lst) == 7:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6]\n    if len(lst) == 8:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7]\n    if len(lst) == 9:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8]\n    if len(lst) == 10:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8] + lst[9]\n    if len(lst) == 11:\n        return lst[0] + lst[1] + lst[2] + lst[3] +",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    while max > 0:\n        s += max % 10\n        max /= 10\n    return s",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    s = 0\n    for i in lst:\n        s += i\n        if isprime(s):\n            return s",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(int(i) for i in str(max))",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    if len(lst) == 0:\n        return 0\n    else:\n        lst.sort()\n        return sum(lst[0] * 10 + lst[1])",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s",
    "    if len(lst) == 0:\n        return 0\n    else:\n        lst.sort()\n        return sum(lst[-1] - lst[0] + 1)",
    "    if len(lst) == 0:\n        return 0\n    else:\n        return max(skjkasdkd(lst[1:]), lst[0])",
    "    lst.sort()\n    for i in range(len(lst)):\n        if lst[i] % 2 == 0:\n            lst[i] = lst[i] / 2\n        else:\n            lst[i] = lst[i] * 3 + 1\n    return sum(lst)",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = i\n            break\n    return sum(map(int, str(max)))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    # print lst\n    # print len(lst)\n    # print lst[0]\n    # print lst[1]\n    # print lst[2]\n    # print lst[3]\n    # print lst[4]\n    # print lst[5]\n    # print lst[6]\n    # print lst[7]\n    # print lst[8]\n    # print lst[9]\n    # print lst[10]\n    # print lst[11]\n    # print lst[12]\n    # print lst[13]\n    # print lst[14]\n    # print lst[15]\n    # print lst[16]\n    # print lst[17]\n    # print lst[18]\n    # print lst[19]\n    # print lst[20]\n    # print lst[21]\n    # print lst[22]\n    # print lst[23]\n    # print lst[24]\n    # print lst[25]\n    # print lst[26]\n    # print lst[27]\n    # print lst[28]\n    # print lst[29]\n    # print lst[30]\n    # print lst[31]\n    # print lst[32]\n    # print lst[33]\n    # print lst[34]\n    # print lst[35]\n    # print lst[36]\n    # print lst[37]\n    # print lst[38]\n    # print lst[39]\n    # print lst[40]\n    # print lst[41]\n    # print lst[42]\n    # print lst[43]\n    # print lst[44]\n    # print lst[45]\n    # print lst[46]\n    # print lst[47]\n    # print lst[48]\n    # print lst[49]\n    # print lst[50]\n    # print lst[51]\n    # print lst[52]\n    # print lst[53]\n    # print lst[54]\n    #",
    "    s = 0\n    for i in lst:\n        s += i\n        if s % 2 == 0:\n            s /= 2\n        else:\n            s = (s * 3) + 1\n    return s",
    "    s = 0\n    for i in lst:\n        s += i\n        while s % 10 == 0:\n            s /= 10\n        while s % 2 == 0:\n            s /= 2\n    return s",
    "    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]\n    if len(lst) == 2:\n        return lst[0] + lst[1]\n    if len(lst) == 3:\n        return lst[0] + lst[1] + lst[2]\n    if len(lst) == 4:\n        return lst[0] + lst[1] + lst[2] + lst[3]\n    if len(lst) == 5:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4]\n    if len(lst) == 6:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5]\n    if len(lst) == 7:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6]\n    if len(lst) == 8:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7]\n    if len(lst) == 9:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8]\n    if len(lst) == 10:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8] + lst[9]\n    if len(lst) == 11:\n        return lst[0] + lst[1] + lst[2] + lst[3] +",
    "    s = 0\n    for i in lst:\n        s += i\n        while s % 10 == 0:\n            s /= 10\n        while s % 2 == 0:\n            s /= 2\n    return s",
    "    if len(lst) == 0:\n        return 0\n    else:\n        lst.sort()\n        return lst[-1]",
    "    s = 0\n    for i in lst:\n        s += i\n        if s % 2 == 0:\n            s /= 2\n        else:\n            s = (s * 3) + 1\n    return s",
    "    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]\n    if len(lst) == 2:\n        return lst[0] + lst[1]\n    if len(lst) == 3:\n        return lst[0] + lst[1] + lst[2]\n    if len(lst) == 4:\n        return lst[0] + lst[1] + lst[2] + lst[3]\n    if len(lst) == 5:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4]\n    if len(lst) == 6:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5]\n    if len(lst) == 7:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6]\n    if len(lst) == 8:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7]\n    if len(lst) == 9:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8]\n    if len(lst) == 10:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8] + lst[9]\n    if len(lst) == 11:\n        return lst[0] + lst[1] + lst[2] + lst[3] +",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(map(int, str(max)))",
    "    s = 0\n    for i in lst:\n        s += i\n        while s % 10 == 0:\n            s /= 10\n        while s % 2 == 0:\n            s /= 2\n    return s",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    while max > 0:\n        s += max % 10\n        max /= 10\n    return s",
    "    if len(lst) == 0:\n        return 0\n    max_prime = 0\n    for i in range(len(lst)):\n        if lst[i] > max_prime:\n            max_prime = lst[i]\n    sum_digits = 0\n    for i in range(max_prime):\n        sum_digits += lst[i]\n    return sum_digits",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s",
    "    max = 0\n    for i in lst:\n        if is_prime(i):\n            max = i\n    return sum(int(i) for i in str(max))",
    "    # lst = [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]\n    # lst = [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]\n    # lst = [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]\n    # lst = [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]\n    # lst = [0, 81, 12, 3, 1, 21]\n    # lst = [0, 8, 1, 2, 1, 7]\n    # lst = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147",
    "    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]\n    if len(lst) == 2:\n        return lst[0] + lst[1]\n    if len(lst) == 3:\n        return lst[0] + lst[1] + lst[2]\n    if len(lst) == 4:\n        return lst[0] + lst[1] + lst[2] + lst[3]\n    if len(lst) == 5:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4]\n    if len(lst) == 6:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5]\n    if len(lst) == 7:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6]\n    if len(lst) == 8:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7]\n    if len(lst) == 9:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8]\n    if len(lst) == 10:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8] + lst[9]\n    if len(lst) == 11:\n        return lst[0] + lst[1] + lst[2] + lst[3] +",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = i\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(int(i) for i in str(max_prime))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(int(i) for i in str(max))",
    "    if len(lst) == 0:\n        return 0\n    max_prime = 0\n    for i in range(len(lst)):\n        if lst[i] > max_prime:\n            max_prime = lst[i]\n    total = 0\n    for i in range(max_prime):\n        total += lst[i]\n    return total",
    "    if len(lst) == 0:\n        return 0\n    else:\n        return max(skjkasdkd(lst[1:]), lst[0])",
    "    s = 0\n    for i in lst:\n        s += i\n        while s % 10 == 0:\n            s /= 10\n        while s % 2 == 0:\n            s /= 2\n    return s",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = max + i\n    return max",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(int(i) for i in str(max_prime))",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = i\n            break\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = i\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n        if s > max:\n            s = i\n    return s",
    "    s = 0\n    for i in lst:\n        s += i\n        if s % 2 == 0:\n            s /= 2\n        else:\n            s = (s * 3) + 1\n    return s",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    for i in lst:\n        if i == max:\n            sum = 0\n            for j in str(i):\n                sum += int(j)\n            if sum > max:\n                max = sum\n    return max",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    if len(lst) == 0:\n        return 0\n    else:\n        return max(skjkasdkd(lst[1:]), lst[0]) + 1",
    "    s = 0\n    for i in lst:\n        s += i\n        while s % 10 == 0:\n            s /= 10\n        while s % 2 == 0:\n            s /= 2\n    return s",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    while max > 0:\n        s += max % 10\n        max /= 10\n    return s",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = i\n            break\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(int(i) for i in str(max))",
    "    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]\n    if len(lst) == 2:\n        return lst[0] + lst[1]\n    if len(lst) == 3:\n        return lst[0] + lst[1] + lst[2]\n    if len(lst) == 4:\n        return lst[0] + lst[1] + lst[2] + lst[3]\n    if len(lst) == 5:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4]\n    if len(lst) == 6:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5]\n    if len(lst) == 7:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6]\n    if len(lst) == 8:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7]\n    if len(lst) == 9:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8]\n    if len(lst) == 10:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8] + lst[9]\n    if len(lst) == 11:\n        return lst[0] + lst[1] + lst[2] + lst[3] +",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = i\n            break\n    return sum(int(i) for i in str(max))",
    "    s = 0\n    for i in lst:\n        s += i\n        if s >= 10 ** 9:\n            return s\n        for j in range(2, int(math.sqrt(s)) + 1):\n            if s % j == 0:\n                break\n        else:\n            return s\n",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(int(i) for i in str(max))",
    "    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]\n    if len(lst) == 2:\n        return lst[0] + lst[1]\n    if len(lst) == 3:\n        return lst[0] + lst[1] + lst[2]\n    if len(lst) == 4:\n        return lst[0] + lst[1] + lst[2] + lst[3]\n    if len(lst) == 5:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4]\n    if len(lst) == 6:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5]\n    if len(lst) == 7:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6]\n    if len(lst) == 8:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7]\n    if len(lst) == 9:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8]\n    if len(lst) == 10:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8] + lst[9]\n    if len(lst) == 11:\n        return lst[0] + lst[1] + lst[2] + lst[3] +",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = i\n    return sum(map(int, str(max)))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s",
    "    # print lst\n    # print len(lst)\n    # print lst[0]\n    # print lst[1]\n    # print lst[2]\n    # print lst[3]\n    # print lst[4]\n    # print lst[5]\n    # print lst[6]\n    # print lst[7]\n    # print lst[8]\n    # print lst[9]\n    # print lst[10]\n    # print lst[11]\n    # print lst[12]\n    # print lst[13]\n    # print lst[14]\n    # print lst[15]\n    # print lst[16]\n    # print lst[17]\n    # print lst[18]\n    # print lst[19]\n    # print lst[20]\n    # print lst[21]\n    # print lst[22]\n    # print lst[23]\n    # print lst[24]\n    # print lst[25]\n    # print lst[26]\n    # print lst[27]\n    # print lst[28]\n    # print lst[29]\n    # print lst[30]\n    # print lst[31]\n    # print lst[32]\n    # print lst[33]\n    # print lst[34]\n    # print lst[35]\n    # print lst[36]\n    # print lst[37]\n    # print lst[38]\n    # print lst[39]\n    # print lst[40]\n    # print lst[41]\n    # print lst[42]\n    # print lst[43]\n    # print lst[44]\n    # print lst[45]\n    # print lst[46]\n    # print lst[47]\n    # print lst[48]\n    # print lst[49]\n    # print lst[50]\n    # print lst[51]\n    # print lst[52]\n    # print lst[53]\n    # print lst[54]\n    #",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(int(i) for i in str(max))\n",
    "    s = 0\n    for i in lst:\n        s += i\n        if s % 2 == 0:\n            s /= 2\n        else:\n            s = (s * 3) + 1\n    return s",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = i\n            break\n    return sum(map(int, str(max)))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    sum = 0\n    for i in lst:\n        sum += i\n    return sum",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = i\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s",
    "    if len(lst) == 0:\n        return 0\n    else:\n        return max(skjkasdkd(lst[1:]), lst[0])",
    "    if len(lst) == 0:\n        return 0\n    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    if len(lst) == 0:\n        return 0\n    else:\n        return max(skjkasdkd(lst[1:]), lst[0])",
    "    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]\n    if len(lst) == 2:\n        return lst[0] + lst[1]\n    if len(lst) == 3:\n        return lst[0] + lst[1] + lst[2]\n    if len(lst) == 4:\n        return lst[0] + lst[1] + lst[2] + lst[3]\n    if len(lst) == 5:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4]\n    if len(lst) == 6:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5]\n    if len(lst) == 7:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6]\n    if len(lst) == 8:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7]\n    if len(lst) == 9:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8]\n    if len(lst) == 10:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8] + lst[9]\n    if len(lst) == 11:\n        return lst[0] + lst[1] + lst[2] + lst[3] +",
    "    if len(lst) == 0:\n        return 0\n    else:\n        return max(skjkasdkd(lst[1:]), lst[0])",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(map(int, str(max)))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(map(int, str(max)))",
    "    if len(lst) == 0:\n        return 0\n    else:\n        return max(skjkasdkd(lst[1:]), lst[0])",
    "    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]\n    if len(lst) == 2:\n        return lst[0] + lst[1]\n    if len(lst) == 3:\n        return lst[0] + lst[1] + lst[2]\n    if len(lst) == 4:\n        return lst[0] + lst[1] + lst[2] + lst[3]\n    if len(lst) == 5:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4]\n    if len(lst) == 6:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5]\n    if len(lst) == 7:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6]\n    if len(lst) == 8:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7]\n    if len(lst) == 9:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8]\n    if len(lst) == 10:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8] + lst[9]\n    if len(lst) == 11:\n        return lst[0] + lst[1] + lst[2] + lst[3] +",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = i\n    return sum(map(int, str(max)))",
    "    #print lst\n    #print lst[0]\n    #print lst[1]\n    #print lst[2]\n    #print lst[3]\n    #print lst[4]\n    #print lst[5]\n    #print lst[6]\n    #print lst[7]\n    #print lst[8]\n    #print lst[9]\n    #print lst[10]\n    #print lst[11]\n    #print lst[12]\n    #print lst[13]\n    #print lst[14]\n    #print lst[15]\n    #print lst[16]\n    #print lst[17]\n    #print lst[18]\n    #print lst[19]\n    #print lst[20]\n    #print lst[21]\n    #print lst[22]\n    #print lst[23]\n    #print lst[24]\n    #print lst[25]\n    #print lst[26]\n    #print lst[27]\n    #print lst[28]\n    #print lst[29]\n    #print lst[30]\n    #print lst[31]\n    #print lst[32]\n    #print lst[33]\n    #print lst[34]\n    #print lst[35]\n    #print lst[36]\n    #print lst[37]\n    #print lst[38]\n    #print lst[39]\n    #print lst[40]\n    #print lst[41]\n    #print lst[42]\n    #print lst[43]\n    #print lst[44]\n    #print lst[45]\n    #print lst[46]\n    #print lst[47]\n    #print lst[48]\n    #print lst[49]\n    #print lst[50]\n    #print lst[51]\n    #print lst[52]\n    #print lst[53]\n    #print lst[54]\n    #print lst[55]\n    #",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = i\n    return sum(map(int, str(max)))",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    if len(lst) == 0:\n        return 0\n    else:\n        return max(skjkasdkd(lst[1:]), lst[0]) + 1",
    "    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]\n    if len(lst) == 2:\n        return lst[0] + lst[1]\n    if len(lst) == 3:\n        return lst[0] + lst[1] + lst[2]\n    if len(lst) == 4:\n        return lst[0] + lst[1] + lst[2] + lst[3]\n    if len(lst) == 5:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4]\n    if len(lst) == 6:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5]\n    if len(lst) == 7:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6]\n    if len(lst) == 8:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7]\n    if len(lst) == 9:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8]\n    if len(lst) == 10:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8] + lst[9]\n    if len(lst) == 11:\n        return lst[0] + lst[1] + lst[2] + lst[3] +",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    for i in lst:\n        if i == max:\n            sum = 0\n            for j in str(i):\n                sum += int(j)\n            if sum > max:\n                max = sum\n    return max",
    "    max = 0\n    for i in lst:\n        if is_prime(i):\n            max = i\n            break\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = i\n            break\n    return sum(int(i) for i in str(max))",
    "    s = 0\n    for i in lst:\n        s += i\n        if s % 2 == 0:\n            s /= 2\n        else:\n            s = (s * 3) + 1\n    return s",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = max + i\n    return max",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    while max > 0:\n        s += max % 10\n        max /= 10\n    return s",
    "    s = 0\n    for i in lst:\n        s += i\n        while s % 10 == 0:\n            s /= 10\n        while s % 2 == 0:\n            s /= 2\n    return s",
    "    #print lst\n    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]\n    if len(lst) == 2:\n        return lst[0] + lst[1]\n    if len(lst) == 3:\n        return lst[0] + lst[1] + lst[2]\n    if len(lst) == 4:\n        return lst[0] + lst[1] + lst[2] + lst[3]\n    if len(lst) == 5:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4]\n    if len(lst) == 6:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5]\n    if len(lst) == 7:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6]\n    if len(lst) == 8:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7]\n    if len(lst) == 9:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8]\n    if len(lst) == 10:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8] + lst[9]\n    if len(lst) == 11:\n        return lst[0] + lst[1] + lst[2] +",
    "    max = 0\n    for i in lst:\n        if is_prime(i):\n            max = i\n            break\n    return sum(int(i) for i in str(max))",
    "    if len(lst) == 0:\n        return 0\n    else:\n        lst.sort()\n        lst.reverse()\n        return lst[0]",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    while max > 0:\n        s += max % 10\n        max /= 10\n    return s",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = max + i\n    return max",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(map(int, str(max)))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(int(i) for i in str(max))",
    "    if len(lst) == 0:\n        return 0\n    else:\n        return max(skjkasdkd(lst[1:]), lst[0])",
    "    s = 0\n    for i in lst:\n        s += i\n        while s % 10 == 0:\n            s /= 10\n        while s % 2 == 0:\n            s /= 2\n    return s",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = max + i\n    return max",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(map(int, str(max)))",
    "    s = 0\n    for i in lst:\n        s += i\n        while s % 10 == 0:\n            s /= 10\n        while s % 2 == 0:\n            s /= 2\n    return s",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = i\n            break\n    return sum(map(int, str(max)))",
    "    if len(lst) == 0:\n        return 0\n    else:\n        return max(skjkasdkd(lst[1:]), lst[0])",
    "    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]\n    if len(lst) == 2:\n        return lst[0] + lst[1]\n    if len(lst) == 3:\n        return lst[0] + lst[1] + lst[2]\n    if len(lst) == 4:\n        return lst[0] + lst[1] + lst[2] + lst[3]\n    if len(lst) == 5:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4]\n    if len(lst) == 6:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5]\n    if len(lst) == 7:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6]\n    if len(lst) == 8:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7]\n    if len(lst) == 9:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8]\n    if len(lst) == 10:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8] + lst[9]\n    if len(lst) == 11:\n        return lst[0] + lst[1] + lst[2] + lst[3] +",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = i\n            break\n    return sum(int(i) for i in str(max))",
    "    if len(lst) == 0:\n        return 0\n    else:\n        return max(skjkasdkd(lst[1:]), lst[0]) + 1",
    "    s = 0\n    for i in lst:\n        s += i\n        if isprime(s):\n            return s\n        s = 0",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    sum = 0\n    while max > 0:\n        sum += max % 10\n        max /= 10\n    return sum",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    sum = 0\n    while max > 0:\n        sum += max % 10\n        max /= 10\n    return sum",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    while max > 0:\n        s += max % 10\n        max /= 10\n    return s",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = max + i\n    return max",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = max + i\n    return max",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    sum = 0\n    while max > 0:\n        sum += max % 10\n        max /= 10\n    return sum",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    if len(lst) == 0:\n        return 0\n    else:\n        max_prime = 0\n        for i in lst:\n            if is_prime(i):\n                max_prime = i\n        return sum(map(int, str(max_prime)))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(map(int, str(max)))",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = i\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    sum = 0\n    while max > 0:\n        sum += max % 10\n        max /= 10\n    return sum",
    "    s = 0\n    for i in lst:\n        s += i\n        if s % 2 == 0:\n            s /= 2\n        else:\n            s = (s * 3) + 1\n    return s",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(int(i) for i in str(max_prime))",
    "    max = 0\n    for i in lst:\n        if is_prime(i):\n            max = max + i\n    return max",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = max + i\n    return max",
    "    s = 0\n    for i in lst:\n        s += i\n        while s % 10 == 0:\n            s /= 10\n    return s",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(map(int, str(max)))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(map(int, str(max)))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(map(int, str(max)))",
    "    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]\n    if len(lst) == 2:\n        return lst[0] + lst[1]\n    if len(lst) == 3:\n        return lst[0] + lst[1] + lst[2]\n    if len(lst) == 4:\n        return lst[0] + lst[1] + lst[2] + lst[3]\n    if len(lst) == 5:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4]\n    if len(lst) == 6:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5]\n    if len(lst) == 7:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6]\n    if len(lst) == 8:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7]\n    if len(lst) == 9:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8]\n    if len(lst) == 10:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8] + lst[9]\n    if len(lst) == 11:\n        return lst[0] + lst[1] + lst[2] + lst[3] +",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(int(i) for i in str(max_prime))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(int(i) for i in str(max))",
    "    #print lst\n    #print len(lst)\n    if len(lst) == 0:\n        return 0\n    else:\n        #print lst[0]\n        #print lst[1]\n        #print lst[2]\n        #print lst[3]\n        #print lst[4]\n        #print lst[5]\n        #print lst[6]\n        #print lst[7]\n        #print lst[8]\n        #print lst[9]\n        #print lst[10]\n        #print lst[11]\n        #print lst[12]\n        #print lst[13]\n        #print lst[14]\n        #print lst[15]\n        #print lst[16]\n        #print lst[17]\n        #print lst[18]\n        #print lst[19]\n        #print lst[20]\n        #print lst[21]\n        #print lst[22]\n        #print lst[23]\n        #print lst[24]\n        #print lst[25]\n        #print lst[26]\n        #print lst[27]\n        #print lst[28]\n        #print lst[29]\n        #print lst[30]\n        #print lst[31]\n        #print lst[32]\n        #print lst[33]\n        #print lst[34]\n        #print lst[35]\n        #print lst[36]\n        #print lst[37]\n        #print lst[38]\n        #print lst[39]\n        #print lst[40]\n        #print lst[41]\n        #print lst[42]\n        #print lst[43]\n        #print lst[44]\n        #print lst[45]\n        #print lst[46]\n        #print lst[47]\n        #print lst[48]\n        #print lst[49]\n        #print lst[50]\n        #print lst[51]\n        #print lst[52]\n        ",
    "    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]\n    if len(lst) == 2:\n        return lst[0] + lst[1]\n    if len(lst) == 3:\n        return lst[0] + lst[1] + lst[2]\n    if len(lst) == 4:\n        return lst[0] + lst[1] + lst[2] + lst[3]\n    if len(lst) == 5:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4]\n    if len(lst) == 6:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5]\n    if len(lst) == 7:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6]\n    if len(lst) == 8:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7]\n    if len(lst) == 9:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8]\n    if len(lst) == 10:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8] + lst[9]\n    if len(lst) == 11:\n        return lst[0] + lst[1] + lst[2] + lst[3] +",
    "    # print lst\n    # print len(lst)\n    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]\n    if len(lst) == 2:\n        return lst[0] + lst[1]\n    if len(lst) == 3:\n        return lst[0] + lst[1] + lst[2]\n    if len(lst) == 4:\n        return lst[0] + lst[1] + lst[2] + lst[3]\n    if len(lst) == 5:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4]\n    if len(lst) == 6:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5]\n    if len(lst) == 7:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6]\n    if len(lst) == 8:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7]\n    if len(lst) == 9:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8]\n    if len(lst) == 10:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8] + lst[9]\n    if len(lst) == 11:\n        return lst[0] + lst[",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s\n",
    "    max_prime = 0\n    for i in lst:\n        if is_prime(i):\n            max_prime = i\n    return sum(map(int, str(max_prime)))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = i\n            break\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if is_prime(i):\n            max = i\n    return sum(map(int, str(max)))",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = i\n            break\n    return sum(map(int, str(max)))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    sum = 0\n    while max > 0:\n        sum += max % 10\n        max /= 10\n    return sum",
    "    if len(lst) == 0:\n        return 0\n    else:\n        return max(skjkasdkd(lst[1:]), lst[0])",
    "    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]\n    if len(lst) == 2:\n        return lst[0] + lst[1]\n    if len(lst) == 3:\n        return lst[0] + lst[1] + lst[2]\n    if len(lst) == 4:\n        return lst[0] + lst[1] + lst[2] + lst[3]\n    if len(lst) == 5:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4]\n    if len(lst) == 6:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5]\n    if len(lst) == 7:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6]\n    if len(lst) == 8:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7]\n    if len(lst) == 9:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8]\n    if len(lst) == 10:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8] + lst[9]\n    if len(lst) == 11:\n        return lst[0] + lst[1] + lst[2] + lst[3] +",
    "    s = 0\n    for i in lst:\n        s += i\n        if s >= 10:\n            s = s % 10\n        if s == 2:\n            return s\n        if s == 3:\n            return s\n        if s == 5:\n            return s\n        if s == 6:\n            return s\n        if s == 7:\n            return s\n        if s == 8:\n            return s\n        if s == 9:\n            return s\n        if s == 10:\n            return s\n        if s == 11:\n            return s\n        if s == 12:\n            return s\n        if s == 13:\n            return s\n        if s == 14:\n            return s\n        if s == 15:\n            return s\n        if s == 16:\n            return s\n        if s == 17:\n            return s\n        if s == 18:\n            return s\n        if s == 19:\n            return s\n        if s == 20:\n            return s\n        if s == 21:\n            return s\n        if s == 22:\n            return s\n        if s == 23:\n            return s\n        if s == 24:\n            return s\n        if s == 25:\n            return s\n        if s == 26:\n            return s\n        if s == 27:\n            return s\n        if s == 28:\n            return s\n        if s == 29:\n            return s\n        if s == 30:\n            return s\n        if s == 31:\n            return s\n        if s == 32:\n            return s\n        if s == 33:\n            return s\n        if s == 34:\n            return s\n        if s == 35:\n            return s\n        if s == 36:\n            return s\n        if s == 37:\n            return s\n        if s == 38:\n            return s\n        if s == 39:\n            return s\n        if s == 40:\n            return s\n        if s == 41:\n            return s\n        if s == 42:\n            return s\n        if s == 43:\n            return s\n        if s == 44:\n            return s\n        if s == 45:\n            return s\n        if s == 46:\n",
    "    s = 0\n    for i in lst:\n        s += i\n        while s % 10 == 0:\n            s /= 10\n        while s % 2 == 0:\n            s /= 2\n    return s",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = max + i\n    return max",
    "    s = 0\n    for i in lst:\n        s += i\n        while s % 10 == 0:\n            s /= 10\n        while s % 2 == 0:\n            s /= 2\n    return s",
    "    s = 0\n    for i in lst:\n        s += i\n        if s % 2 == 0:\n            s /= 2\n        else:\n            s = 3 * s + 1\n    return s",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    for i in lst:\n        if i == max:\n            sum = 0\n            for j in str(i):\n                sum += int(j)\n            if sum > max:\n                max = sum\n    return max",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    for i in lst:\n        if i == max:\n            sum = 0\n            for j in str(i):\n                sum += int(j)\n            if sum > max:\n                max = sum\n    return max",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(map(int, str(max)))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s",
    "    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]\n    if len(lst) == 2:\n        return lst[0] + lst[1]\n    if len(lst) == 3:\n        return lst[0] + lst[1] + lst[2]\n    if len(lst) == 4:\n        return lst[0] + lst[1] + lst[2] + lst[3]\n    if len(lst) == 5:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4]\n    if len(lst) == 6:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5]\n    if len(lst) == 7:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6]\n    if len(lst) == 8:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7]\n    if len(lst) == 9:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8]\n    if len(lst) == 10:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8] + lst[9]\n    if len(lst) == 11:\n        return lst[0] + lst[1] + lst[2] + lst[3] +",
    "    s = 0\n    for i in lst:\n        s += i\n        while s % 10 == 0:\n            s /= 10\n        while s % 2 == 0:\n            s /= 2\n    return s",
    "    if len(lst) == 0:\n        return 0\n    else:\n        lst.sort()\n        for i in range(len(lst)):\n            if lst[i] % 2 == 0:\n                lst[i] = lst[i] / 2\n            else:\n                lst[i] = lst[i] * 3 + 1\n        return sum(lst)",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    return sum(int(i) for i in str(max))",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s",
    "    s = 0\n    for i in lst:\n        s += i\n        while s % 10 == 0:\n            s /= 10\n        if s % 10 == 0:\n            s /= 10\n    return s",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    while max > 0:\n        s += max % 10\n        max /= 10\n    return s",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = i\n    return sum(int(i) for i in str(max))",
    "    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]\n    if len(lst) == 2:\n        return lst[0] + lst[1]\n    if len(lst) == 3:\n        return lst[0] + lst[1] + lst[2]\n    if len(lst) == 4:\n        return lst[0] + lst[1] + lst[2] + lst[3]\n    if len(lst) == 5:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4]\n    if len(lst) == 6:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5]\n    if len(lst) == 7:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6]\n    if len(lst) == 8:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7]\n    if len(lst) == 9:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8]\n    if len(lst) == 10:\n        return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8] + lst[9]\n    if len(lst) == 11:\n        return lst[0] + lst[1] + lst[2] + lst[3] +",
    "    s = 0\n    for i in lst:\n        s += i\n        while s % 10 == 0:\n            s /= 10\n    return s",
    "    s = 0\n    for i in lst:\n        s += i\n        while s % 10 == 0:\n            s /= 10\n        while s % 2 == 0:\n            s /= 2\n    return s",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s",
    "    #print lst\n    lst.sort()\n    #print lst\n    i = 0\n    while i < len(lst)-1:\n        if lst[i] == lst[i+1]:\n            lst.pop(i+1)\n            i -= 1\n        else:\n            i += 1\n    #print lst\n    return sum(lst)",
    "    max = 0\n    for i in lst:\n        if isprime(i):\n            max = i\n            break\n    return sum(int(i) for i in str(max))",
    "    s = 0\n    for i in lst:\n        s += i\n        while s % 10 == 0:\n            s /= 10\n        while s % 2 == 0:\n            s /= 2\n    return s",
    "    max = 0\n    for i in lst:\n        if i > max:\n            max = i\n    s = 0\n    for i in lst:\n        s += i\n    return s"
  ],
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ]
}
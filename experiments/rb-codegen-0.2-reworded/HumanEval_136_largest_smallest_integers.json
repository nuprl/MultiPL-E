{
  "name": "HumanEval_136_largest_smallest_integers",
  "language": "rb",
  "prompt": "# Create a function that returns an array (a, b), where 'a' is\n# the largest of negative integers, and 'b' is the smallest\n# of positive integers in an array.\n# If there is no negative or positive integers, return them as nil.\n# Examples:\n# >>> largest_smallest_integers.call([2, 4, 1, 3, 5, 7])\n# [nil, 1]\n# >>> largest_smallest_integers.call([])\n# [nil, nil]\n# >>> largest_smallest_integers.call([0])\n# [nil, nil]\ndef largest_smallest_integers(lst)\n",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_largest_smallest_integers\n    candidate = method(:largest_smallest_integers)\n    assert_equal([nil, 1], candidate.call([2, 4, 1, 3, 5, 7]))\n    assert_equal([nil, 1], candidate.call([2, 4, 1, 3, 5, 7, 0]))\n    assert_equal([-2, 1], candidate.call([1, 3, 2, 4, 5, 6, -2]))\n    assert_equal([-7, 2], candidate.call([4, 5, 3, 6, 2, 7, -7]))\n    assert_equal([-9, 2], candidate.call([7, 3, 8, 4, 9, 2, 5, -9]))\n    assert_equal([nil, nil], candidate.call([]))\n    assert_equal([nil, nil], candidate.call([0]))\n    assert_equal([-1, nil], candidate.call([-1, -3, -5, -6]))\n    assert_equal([-1, nil], candidate.call([-1, -3, -5, -6, 0]))\n    assert_equal([-3, 1], candidate.call([-6, -4, -4, -3, 1]))\n    assert_equal([-3, 1], candidate.call([-6, -4, -4, -3, -100, 1]))\n  end\nend\n",
  "completions": [
    "    if len(lst) == 0:\n        return [None, None]\n    neg = 0\n    pos = 0\n    for i in lst:\n        if i < 0:\n            neg += 1\n        elif i > 0:\n            pos += 1\n    if neg == 0:\n        return [None, lst[pos]]\n    elif pos == 0:\n        return [lst[neg], None]\n    else:\n        return [lst[neg], lst[pos]]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nil:\n                b = i\n            else:\n                b = min(b, i)\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nil:\n                b = i\n            else:\n                b = min(b, i)\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = []\n    pos = []\n    for i in lst:\n        if i < 0:\n            neg.append(i)\n        elif i > 0:\n            pos.append(i)\n    if len(neg) == 0:\n        return [None, pos[0]]\n    if len(pos) == 0:\n        return [neg[0], None]\n    return [neg[0], pos[0]]",
    "    a = b = 0\n    for i in lst:\n        if i < 0:\n            a = max(a, i)\n        else:\n            b = min(b, i)\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil or a < i:\n                a = i\n        else:\n            if b == nil or b > i:\n                b = i\n    return a, b",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    a = b = 0\n    for i in lst:\n        if i < 0:\n            a = max(a, i)\n        else:\n            b = min(b, i)\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        else:\n            if b is None or b > i:\n                b = i\n    return a, b",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        else:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nil:\n                b = i\n            else:\n                b = min(b, i)\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0 and len(pos) == 0:\n        return [None, None]\n    if len(neg) == 0:\n        return [None, pos[0]]\n    if len(pos) == 0:\n        return [neg[0], None]\n    return [neg[0], pos[0]]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        else:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg_lst = [x for x in lst if x < 0]\n    pos_lst = [x for x in lst if x > 0]\n    if len(neg_lst) == 0 and len(pos_lst) == 0:\n        return [None, None]\n    if len(neg_lst) == 0:\n        return [None, min(pos_lst)]\n    if len(pos_lst) == 0:\n        return [max(neg_lst), None]\n    return [max(neg_lst), min(pos_lst)]",
    "    a = b = 0\n    for i in lst:\n        if i < 0:\n            if a < i:\n                a = i\n        else:\n            if b < i:\n                b = i\n    if a == 0 and b == 0:\n        return [None, None]\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return a, b",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or i > a:\n                a = i\n        elif i > 0:\n            if b is None or i < b:\n                b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is None:\n                b = i\n            else:\n                b = min(b, i)\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return a, b",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = []\n    pos = []\n    for i in lst:\n        if i < 0:\n            neg.append(i)\n        elif i > 0:\n            pos.append(i)\n    if len(neg) > 0:\n        return [neg[0], pos[0]]\n    elif len(pos) > 0:\n        return [pos[0], neg[0]]\n    else:\n        return [None, None]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return a, b",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg_lst = []\n    pos_lst = []\n    for i in lst:\n        if i < 0:\n            neg_lst.append(i)\n        elif i > 0:\n            pos_lst.append(i)\n    if len(neg_lst) > 0:\n        return [neg_lst[0], pos_lst[0]]\n    elif len(pos_lst) > 0:\n        return [pos_lst[0], neg_lst[0]]\n    else:\n        return [None, None]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return a, b",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        else:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil or a < i:\n                a = i\n        else:\n            if b == nil or b > i:\n                b = i\n    return a, b",
    "    a = b = 0\n    for i in lst:\n        if i < 0:\n            a = max(a, i)\n        else:\n            b = min(b, i)\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        else:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        else:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil or i > a:\n                a = i\n        else:\n            if b == nil or i < b:\n                b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        else:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        else:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0:\n        return [None, pos[0]]\n    if len(pos) == 0:\n        return [neg[0], None]\n    return [neg[0], pos[0]]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = []\n    pos = []\n    for i in lst:\n        if i < 0:\n            neg.append(i)\n        elif i > 0:\n            pos.append(i)\n    if len(neg) > 0:\n        return [neg[0], pos[0]]\n    elif len(pos) > 0:\n        return [pos[0], neg[0]]\n    else:\n        return [None, None]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg_ints = []\n    pos_ints = []\n    for i in lst:\n        if i < 0:\n            neg_ints.append(i)\n        elif i > 0:\n            pos_ints.append(i)\n    if len(neg_ints) > 0:\n        return [neg_ints[0], pos_ints[0]]\n    elif len(pos_ints) > 0:\n        return [pos_ints[0], neg_ints[0]]\n    else:\n        return [None, None]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        else:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nil:\n                b = i\n            else:\n                b = min(b, i)\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        else:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return a, b",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil or a < i:\n                a = i\n        elif i > 0:\n            if b == nil or b > i:\n                b = i\n    return a, b",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        else:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [x for x in lst if x < 0]\n    pos = [x for x in lst if x > 0]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = []\n    pos = []\n    for i in lst:\n        if i < 0:\n            neg.append(i)\n        elif i > 0:\n            pos.append(i)\n    if len(neg) > 0:\n        return [neg[0], pos[0]]\n    elif len(pos) > 0:\n        return [pos[0], neg[0]]\n    else:\n        return [None, None]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [x for x in lst if x < 0]\n    pos = [x for x in lst if x > 0]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nil:\n                b = i\n            else:\n                b = min(b, i)\n    return a, b",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil or a < i:\n                a = i\n        else:\n            if b == nil or b > i:\n                b = i\n    return a, b",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nil:\n                b = i\n            else:\n                b = min(b, i)\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    a = 0\n    b = 0\n    for i in lst:\n        if i < 0:\n            if a < i:\n                a = i\n        else:\n            if b < i:\n                b = i\n    if a == 0 and b == 0:\n        return [None, None]\n    else:\n        return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            a = i\n        elif i > 0:\n            b = i\n    return a, b",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0:\n        return [None, pos[0]]\n    if len(pos) == 0:\n        return [neg[0], None]\n    return [max(neg), min(pos)]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0 and len(pos) == 0:\n        return [None, None]\n    if len(neg) == 0:\n        return [None, pos[0]]\n    if len(pos) == 0:\n        return [neg[0], None]\n    return [neg[0], pos[0]]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        else:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return a, b",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = 0\n    pos = 0\n    for i in lst:\n        if i < 0:\n            neg += 1\n        elif i > 0:\n            pos += 1\n    if neg == 0:\n        return [None, lst[pos]]\n    elif pos == 0:\n        return [lst[neg], None]\n    else:\n        return [lst[neg], lst[pos]]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        else:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = 0\n    for i in lst:\n        if i < 0:\n            a = max(a, i)\n        else:\n            b = min(b, i)\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = []\n    pos = []\n    for i in lst:\n        if i < 0:\n            neg.append(i)\n        else:\n            pos.append(i)\n    if len(neg) > 0:\n        return [neg[0], pos[0]]\n    elif len(pos) > 0:\n        return [pos[0], neg[0]]\n    else:\n        return [None, None]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0 and len(pos) == 0:\n        return [None, None]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    a = b = 0\n    for i in lst:\n        if i < 0:\n            a = max(a, i)\n        else:\n            b = min(b, i)\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return a, b",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    a = b = 0\n    for i in lst:\n        if i < 0:\n            a = max(a, i)\n        else:\n            b = min(b, i)\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or i > a:\n                a = i\n        elif i > 0:\n            if b is None or i < b:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [x for x in lst if x < 0]\n    pos = [x for x in lst if x > 0]\n    if len(neg) == 0:\n        return [None, pos[0]]\n    if len(pos) == 0:\n        return [neg[0], None]\n    return [neg[0], pos[0]]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nil:\n                b = i\n            else:\n                b = min(b, i)\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = 0\n    for i in lst:\n        if i < 0:\n            if a < i:\n                a = i\n        elif i > 0:\n            if b < i:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [x for x in lst if x < 0]\n    pos = [x for x in lst if x > 0]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    a = b = 0\n    for i in lst:\n        if i < 0:\n            if a < i:\n                a = i\n        else:\n            if b < i:\n                b = i\n    return [a, b]",
    "    a = b = 0\n    for i in lst:\n        if i < 0:\n            if a < i:\n                a = i\n        else:\n            if b < i:\n                b = i\n    if a == 0 and b == 0:\n        return [None, None]\n    else:\n        return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nil:\n                b = i\n            else:\n                b = min(b, i)\n    return [a, b]",
    "    a = b = 0\n    for i in lst:\n        if i < 0:\n            a = max(a, i)\n        else:\n            b = min(b, i)\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = 0\n    pos = 0\n    for i in lst:\n        if i < 0:\n            neg += 1\n        else:\n            pos += 1\n    if neg == 0:\n        return [None, lst[pos]]\n    elif pos == 0:\n        return [lst[neg], None]\n    else:\n        return [lst[neg], lst[pos]]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil or a < i:\n                a = i\n        elif i > 0:\n            if b == nil or b > i:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = []\n    pos = []\n    for i in lst:\n        if i < 0:\n            neg.append(i)\n        elif i > 0:\n            pos.append(i)\n    if len(neg) > 0:\n        return [neg[0], pos[0]]\n    elif len(pos) > 0:\n        return [pos[0], neg[0]]\n    else:\n        return [None, None]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0:\n        return [None, pos[0]]\n    if len(pos) == 0:\n        return [neg[0], None]\n    return [neg[0], pos[0]]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return a, b",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = []\n    pos = []\n    for i in lst:\n        if i < 0:\n            neg.append(i)\n        elif i > 0:\n            pos.append(i)\n    if len(neg) == 0:\n        return [None, pos[0]]\n    if len(pos) == 0:\n        return [neg[0], None]\n    return [neg[0], pos[0]]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        else:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nil:\n                b = i\n            else:\n                b = min(b, i)\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        else:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = 0\n    for i in lst:\n        if i < 0:\n            a = max(a, i)\n        else:\n            b = min(b, i)\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil or a < i:\n                a = i\n        elif i > 0:\n            if b == nil or b > i:\n                b = i\n    return a, b",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [x for x in lst if x < 0]\n    pos = [x for x in lst if x > 0]\n    if len(neg) == 0:\n        return [None, pos[0]]\n    if len(pos) == 0:\n        return [neg[0], None]\n    return [neg[0], pos[0]]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = []\n    pos = []\n    for i in lst:\n        if i < 0:\n            neg.append(i)\n        elif i > 0:\n            pos.append(i)\n        else:\n            pass\n    if len(neg) == 0:\n        return [None, None]\n    if len(pos) == 0:\n        return [None, None]\n    if len(neg) > len(pos):\n        return [neg[0], pos[0]]\n    else:\n        return [pos[0], neg[0]]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg_lst = []\n    pos_lst = []\n    for i in lst:\n        if i < 0:\n            neg_lst.append(i)\n        elif i > 0:\n            pos_lst.append(i)\n    if len(neg_lst) > 0:\n        return [neg_lst[0], pos_lst[0]]\n    elif len(pos_lst) > 0:\n        return [pos_lst[0], neg_lst[0]]\n    else:\n        return [None, None]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        else:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return a, b",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0:\n        return [None, pos[0]]\n    if len(pos) == 0:\n        return [neg[0], None]\n    return [neg[0], pos[0]]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0 and len(pos) == 0:\n        return [None, None]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = []\n    pos = []\n    for i in lst:\n        if i < 0:\n            neg.append(i)\n        elif i > 0:\n            pos.append(i)\n    if len(neg) == 0:\n        return [None, pos[0]]\n    if len(pos) == 0:\n        return [neg[0], None]\n    return [neg[0], pos[0]]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil or a < i:\n                a = i\n        elif i > 0:\n            if b == nil or b > i:\n                b = i\n    return a, b",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is None:\n                b = i\n            else:\n                b = min(b, i)\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return a, b",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        else:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg_ints = []\n    pos_ints = []\n    for i in lst:\n        if i < 0:\n            neg_ints.append(i)\n        elif i > 0:\n            pos_ints.append(i)\n    if len(neg_ints) == 0 and len(pos_ints) == 0:\n        return [None, None]\n    if len(neg_ints) == 0:\n        return [None, pos_ints[0]]\n    if len(pos_ints) == 0:\n        return [neg_ints[0], None]\n    return [neg_ints[0], pos_ints[0]]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nil:\n                b = i\n            else:\n                b = min(b, i)\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil or a < i:\n                a = i\n        elif i > 0:\n            if b == nil or b > i:\n                b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = 0\n    pos = 0\n    for i in lst:\n        if i < 0:\n            neg += 1\n        elif i > 0:\n            pos += 1\n    if neg == 0:\n        return [None, lst[pos]]\n    elif pos == 0:\n        return [lst[neg], None]\n    else:\n        return [lst[neg], lst[pos]]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil or a < i:\n                a = i\n        elif i > 0:\n            if b == nil or b > i:\n                b = i\n    return a, b",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil or a < i:\n                a = i\n        else:\n            if b == nil or b > i:\n                b = i\n    return a, b",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return a, b",
    "    a = b = 0\n    for i in lst:\n        if i < 0:\n            if a < i:\n                a = i\n        else:\n            if b < i:\n                b = i\n    if a == 0 and b == 0:\n        return [None, None]\n    else:\n        return [a, b]",
    "    a = b = 0\n    for i in lst:\n        if i < 0:\n            if a < i:\n                a = i\n        else:\n            if b < i:\n                b = i\n    return [a, b]",
    "    a = b = 0\n    for i in lst:\n        if i < 0:\n            if a < i:\n                a = i\n        elif i > 0:\n            if b < i:\n                b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        else:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = 0\n    for i in lst:\n        if i < 0:\n            if a < i:\n                a = i\n        elif i > 0:\n            if b < i:\n                b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return a, b",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil or a < i:\n                a = i\n        elif i > 0:\n            if b == nil or b > i:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg_lst = []\n    pos_lst = []\n    for i in lst:\n        if i < 0:\n            neg_lst.append(i)\n        elif i > 0:\n            pos_lst.append(i)\n    if len(neg_lst) == 0:\n        return [None, pos_lst[0]]\n    elif len(pos_lst) == 0:\n        return [neg_lst[0], None]\n    else:\n        return [max(neg_lst), min(pos_lst)]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = []\n    pos = []\n    for i in lst:\n        if i < 0:\n            neg.append(i)\n        elif i > 0:\n            pos.append(i)\n    if len(neg) > 0:\n        return [neg[0], pos[0]]\n    elif len(pos) > 0:\n        return [pos[0], neg[0]]\n    else:\n        return [None, None]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = 0\n    pos = 0\n    for i in lst:\n        if i < 0:\n            neg += 1\n        elif i > 0:\n            pos += 1\n    if neg == 0:\n        return [None, lst[0]]\n    if pos == 0:\n        return [lst[0], None]\n    return [lst[pos-1], lst[neg-1]]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [x for x in lst if x < 0]\n    pos = [x for x in lst if x > 0]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = []\n    pos = []\n    for i in lst:\n        if i < 0:\n            neg.append(i)\n        elif i > 0:\n            pos.append(i)\n    if len(neg) > 0:\n        return [neg[0], pos[0]]\n    elif len(pos) > 0:\n        return [pos[0], neg[0]]\n    else:\n        return [None, None]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg_lst = []\n    pos_lst = []\n    for i in lst:\n        if i < 0:\n            neg_lst.append(i)\n        elif i > 0:\n            pos_lst.append(i)\n    if len(neg_lst) > 0:\n        return [max(neg_lst), min(pos_lst)]\n    else:\n        return [None, None]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = 0\n    pos = 0\n    for i in lst:\n        if i < 0:\n            neg += 1\n        elif i > 0:\n            pos += 1\n    if neg == 0:\n        return [None, lst[0]]\n    elif pos == 0:\n        return [lst[0], None]\n    else:\n        return [lst[0], lst[pos]]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = []\n    pos = []\n    for i in lst:\n        if i < 0:\n            neg.append(i)\n        else:\n            pos.append(i)\n    if len(neg) == 0:\n        return [None, pos[0]]\n    if len(pos) == 0:\n        return [neg[0], None]\n    return [neg[0], pos[0]]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = 0\n    pos = 0\n    for i in lst:\n        if i < 0:\n            neg += 1\n        else:\n            pos += 1\n    if neg == 0:\n        return [None, lst[0]]\n    if pos == 0:\n        return [lst[0], None]\n    return [lst[neg], lst[pos]]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nil:\n                b = i\n            else:\n                b = min(b, i)\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        else:\n            if b is None or b > i:\n                b = i\n    return a, b",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nil:\n                b = i\n            else:\n                b = min(b, i)\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [x for x in lst if x < 0]\n    pos = [x for x in lst if x > 0]\n    if len(neg) == 0 and len(pos) == 0:\n        return [None, None]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return a, b",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg_ints = []\n    pos_ints = []\n    for i in lst:\n        if i < 0:\n            neg_ints.append(i)\n        else:\n            pos_ints.append(i)\n    if len(neg_ints) == 0:\n        return [None, pos_ints[0]]\n    if len(pos_ints) == 0:\n        return [neg_ints[0], None]\n    return [max(neg_ints), min(pos_ints)]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return a, b",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [x for x in lst if x < 0]\n    pos = [x for x in lst if x > 0]\n    if len(neg) == 0 and len(pos) == 0:\n        return [None, None]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nil:\n                b = i\n            else:\n                b = min(b, i)\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b == nil:\n                b = i\n            else:\n                b = min(b, i)\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None:\n                a = i\n            else:\n                a = max(a, i)\n        else:\n            if b is None:\n                b = i\n            else:\n                b = min(b, i)\n    return [a, b]",
    "    a = b = 0\n    for i in lst:\n        if i < 0:\n            if a < i:\n                a = i\n        else:\n            if b < i:\n                b = i\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0:\n        return [None, min(pos)]\n    if len(pos) == 0:\n        return [max(neg), None]\n    return [max(neg), min(pos)]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil:\n                a = i\n            else:\n                if i > a:\n                    a = i\n        else:\n            if b == nil:\n                b = i\n            else:\n                if i < b:\n                    b = i\n    return [a, b]",
    "    a = b = nil\n    for i in lst:\n        if i < 0:\n            if a == nil or i > a:\n                a = i\n        else:\n            if b == nil or i < b:\n                b = i\n    return a, b",
    "    a = b = 0\n    for i in lst:\n        if i < 0:\n            a = max(a, i)\n        else:\n            b = min(b, i)\n    return [a, b]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return [a, b]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [i for i in lst if i < 0]\n    pos = [i for i in lst if i > 0]\n    if len(neg) == 0 and len(pos) == 0:\n        return [None, None]\n    if len(neg) == 0:\n        return [None, pos[0]]\n    if len(pos) == 0:\n        return [neg[0], None]\n    return [neg[0], pos[0]]",
    "    if len(lst) == 0:\n        return [None, None]\n    neg = [x for x in lst if x < 0]\n    pos = [x for x in lst if x > 0]\n    if len(neg) == 0:\n        return [None, pos[0]]\n    if len(pos) == 0:\n        return [neg[0], None]\n    return [neg[0], pos[0]]",
    "    a = b = None\n    for i in lst:\n        if i < 0:\n            if a is None or a < i:\n                a = i\n        elif i > 0:\n            if b is None or b > i:\n                b = i\n    return a, b"
  ],
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ]
}
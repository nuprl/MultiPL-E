name: HumanEval_76_is_simple_power
language: rb
prompt: "# Your task is to write a function that returns true if a number x is a simple\n\
  # power of n and false in other cases.\n# x is a simple power of n if n**int=x\n\
  # For example:\n# >>> is_simple_power.call(1, 4)\n# true\n# >>> is_simple_power.call(2,\
  \ 2)\n# true\n# >>> is_simple_power.call(8, 2)\n# true\n# >>> is_simple_power.call(3,\
  \ 2)\n# false\n# >>> is_simple_power.call(3, 1)\n# false\n# >>> is_simple_power.call(5,\
  \ 3)\n# false\ndef is_simple_power(x, n)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_simple_power\n\
  \    candidate = method(:is_simple_power)\n    assert_equal(true, candidate.call(16,\
  \ 2))\n    assert_equal(false, candidate.call(143214, 16))\n    assert_equal(true,\
  \ candidate.call(4, 2))\n    assert_equal(true, candidate.call(9, 3))\n    assert_equal(true,\
  \ candidate.call(16, 4))\n    assert_equal(false, candidate.call(24, 2))\n    assert_equal(false,\
  \ candidate.call(128, 4))\n    assert_equal(false, candidate.call(12, 6))\n    assert_equal(true,\
  \ candidate.call(1, 1))\n    assert_equal(true, candidate.call(1, 12))\n  end\n\
  end\n"
completions: ['    return n**int(x) == x', '    return n**int(x) == x', "    if n\
    \ == 1:\n        return True\n    if x % n != 0:\n        return False\n    return\
    \ is_simple_power(x // n, n)", '    return n**int(x) == x', '    return n**int(x)
    == x', '    return n ** int(x) == x', "    if n == 1:\n        return True\n \
    \   elif n == 0:\n        return False\n    else:\n        return x == n**int(n)",
  '    return n**int(x)==x', '    return n**int(x) == x', "    if n == 1:\n      \
    \  return True\n    if x % n != 0:\n        return False\n    return is_simple_power(x\
    \ / n, n)", '    return n**int(x) == x', "    if n**int(x) == x:\n        return\
    \ True\n    else:\n        return False", '    return n ** int(x) == x', '    return
    n**int(x) == x', "    if n == 1:\n        return True\n    if x % n != 0:\n  \
    \      return False\n    return is_simple_power(x/n, n)", "    if n**int(x)==x:\n\
    \        return True\n    else:\n        return False", '    return n**int(x)
    == x', "    return n ** int(x) == x\n", '    return n**int(x) == x', '    return
    n**int(x) == x', "    if n == 1:\n        return True\n    if x == n:\n      \
    \  return True\n    if x % n != 0:\n        return False\n    return is_simple_power(x\
    \ / n, n)", '    return n ** int(x) == x', '    return n ** int(x) == x', "  \
    \  if n == 1:\n        return True\n    elif n == 2:\n        return True\n  \
    \  elif n == 3:\n        return False\n    elif n == 4:\n        return True\n\
    \    elif n == 5:\n        return False\n    elif n == 6:\n        return True\n\
    \    elif n == 7:\n        return False\n    elif n == 8:\n        return True\n\
    \    elif n == 9:\n        return False\n    elif n == 10:\n        return True\n\
    \    elif n == 11:\n        return False\n    elif n == 12:\n        return True\n\
    \    elif n == 13:\n        return False\n    elif n == 14:\n        return True\n\
    \    elif n == 15:\n        return False\n    elif n == 16:\n        return True\n\
    \    elif n == 17:\n        return False\n    elif n == 18:\n        return True\n\
    \    elif n == 19:\n        return False\n    elif n == 20:\n        return True\n\
    \    elif n == 21:\n        return False\n    elif n == 22:\n        return True\n\
    \    elif n == 23:\n        return False\n    elif n == 24:\n        return True\n\
    \    elif n == 25:\n        return False\n    elif n == 26:\n        return True\n\
    \    elif n == 27:\n        return False\n    elif n == 28:\n        return True\n\
    \    elif n == 29:\n        return False\n    elif n == 30:\n        return True\n\
    \    elif n == 31:\n        return False\n    elif n == 32:\n        return True\n\
    \    elif n == 33:\n        return False\n    elif n == 34:\n        return True\n\
    \    elif n == 35:\n        return False\n    elif n == 36:\n        return True\n\
    \    elif n == 37:\n        return False\n    elif n == 38:\n        return True\n\
    \    elif n == 39:\n        return False\n    elif n == 40:\n        return True\n\
    \    elif n == 41:\n        return False\n    elif n == 42:\n        return True\n\
    \    elif n == 43:\n        ", '    return n**int(x) == x', '    return n**int(x)==x',
  "    if n**int(x)==x:\n        return True\n    else:\n        return False", " \
    \   if n == 1:\n        return True\n    if x == n:\n        return True\n   \
    \ if x % n == 0:\n        return False\n    return is_simple_power(x, n // 2)",
  '    return n ** int(x) == x', '    return n**int(x) == x', "    if n == 1:\n  \
    \      return True\n    if x == n:\n        return True\n    if x % n == 0:\n\
    \        return False\n    return is_simple_power(x, n // 2)\n", "    if n**int(x)==x:\n\
    \        return True\n    else:\n        return False", '    return n**int(x)
    == x', '    return n**int(x) == x', "    if n == 1:\n        return True\n   \
    \ elif n == 0:\n        return False\n    else:\n        return x == n**int(n)",
  "    if n == 1:\n        return True\n    if x == n:\n        return True\n    if\
    \ x % n != 0:\n        return False\n    return is_simple_power(x/n, n)", '    return
    n**int(x) == x', '    return n**int(x)==x', '    return n ** int(x) == x', '    return
    n ** int(x) == x', "    if n == 1:\n        return True\n    if x == n:\n    \
    \    return True\n    if x % n == 0:\n        return False\n    return is_simple_power(x,\
    \ n // 2)", '    return n ** int(x) == x', '    return n**int(x) == x', "    if\
    \ n == 1:\n        return True\n    if x == n:\n        return True\n    if x\
    \ % n == 0:\n        return False\n    return is_simple_power(x, n // 2)", " \
    \   if n**int(x)==x:\n        return True\n    else:\n        return False", " \
    \   if n == 1:\n        return True\n    if n == 0:\n        return False\n  \
    \  if x == 1:\n        return True\n    if x == 0:\n        return False\n   \
    \ if x % n != 0:\n        return False\n    else:\n        return is_simple_power(x\
    \ // n, n)", '    return n**int(x) == x', '    return n**int(x)==x', "    if n\
    \ == 1:\n        return True\n    if x == n:\n        return True\n    if x %\
    \ n == 0:\n        return False\n    return is_simple_power(x, n // 2)", '    return
    n**int(x)==x', '    return n ** int(x) == x', "    if n**int(x)==x:\n        return\
    \ True\n    else:\n        return False", '    return n**int(x) == x', '    return
    n**int(x) == x', "    if n == 1:\n        return True\n    elif n == 2:\n    \
    \    return True\n    elif n == 3:\n        return False\n    else:\n        return\
    \ False", '    return n**int(x) == x', "    if n == 1:\n        return True\n\
    \    if x % n != 0:\n        return False\n    else:\n        return is_simple_power(x\
    \ / n, n)", '    return n**int(x) == x', "    if n**int(x) == x:\n        return\
    \ True\n    else:\n        return False", '    return n**int(x) == x', "    if\
    \ n**int(x)==x:\n        return True\n    else:\n        return False", '    return
    n ** int(x) == x', '    return n**int(x) == x', '    return n**int(x) == x', '    return
    n ** int(x) == x', "    if n == 1:\n        return True\n    if x == n:\n    \
    \    return True\n    if x % n == 0:\n        return False\n    return is_simple_power(x,\
    \ n // 2)", '    return n**int(x) == x', "    if n == 1:\n        return True\n\
    \    if n == 0:\n        return False\n    if n % 2 == 0:\n        return False\n\
    \    if x % n == 0:\n        return True\n    return False", '    return n**int(x)
    == x', "    if n**int(x)==x:\n        return True\n    else:\n        return False",
  '    return n**int(x) == x', "    if n == 1:\n        return True\n    if x == n:\n\
    \        return True\n    if x % n == 0:\n        return False\n    return is_simple_power(x,\
    \ n // 2)\n", '    return n**int(x) == x', "    if n == 1:\n        return True\n\
    \    if x == n:\n        return True\n    if x % n != 0:\n        return False\n\
    \    return is_simple_power(x // n, n)", '    return n**int(x)==x', '    return
    n**int(x) == x', '    return n**int(x) == x', "    if n**int(x)==x:\n        return\
    \ True\n    else:\n        return False", '    return n ** int(x) == x', '    return
    n**int(x) == x', '    return n**int(x) == x', '    return n**int(x) == x', '    return
    n**int(x) == x', '    return n ** int(x) == x', "    if n == 1:\n        return\
    \ True\n    if x == n:\n        return True\n    if x % n == 0:\n        return\
    \ False\n    return is_simple_power(x, n // 2)", '    return n**int(x)==x', '    return
    n ** int(x) == x', '    return n**int(x) == x', '    return n**int(x) == x', '    return
    n**int(x)==x', "    if n == 1:\n        return True\n    if x == n:\n        return\
    \ True\n    if x % n == 0:\n        return False\n    return is_simple_power(x,\
    \ n // 2)\n", "    return n**int(x) == x\n", "    if n == 1:\n        return True\n\
    \    if x == n:\n        return True\n    if x % n == 0:\n        return False\n\
    \    return is_simple_power(x, n // 2)", '    return n**int(x) == x', '    return
    n ** int(x) == x', "    if n**int(x)==x:\n        return True\n    else:\n   \
    \     return False", '    return n**int(x) == x', "    if n == 1:\n        return\
    \ True\n    if x == n:\n        return True\n    if x % n == 0:\n        return\
    \ False\n    return is_simple_power(x, n // 2)\n", '    return n**int(x) == x',
  '    return n**int(x) == x', '    return n ** int(x) == x', "    if n == 1:\n  \
    \      return True\n    if x == n:\n        return True\n    if x % n != 0:\n\
    \        return False\n    return is_simple_power(x / n, n)\n", '    return n**int(x)
    == x', '    return n**int(x) == x', "    if n == 1:\n        return True\n   \
    \ if n == 0:\n        return False\n    if x == n:\n        return True\n    if\
    \ x % n != 0:\n        return False\n    return is_simple_power(x / n, n)", '    return
    n**int(x) == x', '    return n ** int(x) == x', '    return n**int(x) == x', " \
    \   if n == 1:\n        return True\n    if x == n:\n        return True\n   \
    \ if x % n == 0:\n        return False\n    return is_simple_power(x, n // 2)\n",
  '    return n**int(x) == x', "    if n == 1:\n        return True\n    if x == n:\n\
    \        return True\n    if x % n == 0:\n        return False\n    return is_simple_power(x,\
    \ n // 2)\n", "    if n == 1:\n        return True\n    elif n == 2:\n       \
    \ return True\n    elif x == n:\n        return True\n    else:\n        return\
    \ False", "    if n == 1:\n        return True\n    if n == 2:\n        return\
    \ True\n    if n == 3:\n        return False\n    if n == 4:\n        return True\n\
    \    if n == 5:\n        return False\n    if n == 6:\n        return True\n \
    \   if n == 7:\n        return False\n    if n == 8:\n        return True\n  \
    \  if n == 9:\n        return False\n    if n == 10:\n        return True\n  \
    \  if n == 11:\n        return False\n    if n == 12:\n        return True\n \
    \   if n == 13:\n        return False\n    if n == 14:\n        return True\n\
    \    if n == 15:\n        return False\n    if n == 16:\n        return True\n\
    \    if n == 17:\n        return False\n    if n == 18:\n        return True\n\
    \    if n == 19:\n        return False\n    if n == 20:\n        return True\n\
    \    if n == 21:\n        return False\n    if n == 22:\n        return True\n\
    \    if n == 23:\n        return False\n    if n == 24:\n        return True\n\
    \    if n == 25:\n        return False\n    if n == 26:\n        return True\n\
    \    if n == 27:\n        return False\n    if n == 28:\n        return True\n\
    \    if n == 29:\n        return False\n    if n == 30:\n        return True\n\
    \    if n == 31:\n        return False\n    if n == 32:\n        return True\n\
    \    if n == 33:\n        return False\n    if n == 34:\n        return True\n\
    \    if n == 35:\n        return False\n    if n == 36:\n        return True\n\
    \    if n == 37:\n        return False\n    if n == 38:\n        return True\n\
    \    if n == 39:\n        return False\n    if n == 40:\n        return True\n\
    \    if n == 41:\n        return False\n    if n == 42:\n        return True\n\
    \    if n == 43:\n        return False\n    if n == 44:\n        return True\n\
    \    if n == 45:\n        return False\n    if n == 46:\n        return True\n\
    \    if n == 47:", "    if n == 1:\n        return True\n    if n == 0:\n    \
    \    return False\n    if x == n:\n        return True\n    if x % n == 0:\n \
    \       return False\n    return is_simple_power(x, n // 2)", '    return n**int(x)
    == x', "    if n == 1:\n        return True\n    if x == n:\n        return True\n\
    \    if x % n == 0:\n        return False\n    return is_simple_power(x, n //\
    \ 2)", '    return n**int(x) == x', "    if n**int(x)==x:\n        return True\n\
    \    else:\n        return False", '    return n**int(x) == x', '    return n
    ** int(x) == x', '    return n**int(x) == x', '    return n ** int(x) == x', " \
    \   if n**int(x)==x:\n        return True\n    else:\n        return False", '    return
    n ** int(x) == x', '    return n**int(x) == x', "    if n**int(x)==x:\n      \
    \  return True\n    else:\n        return False", "    if n == 1:\n        return\
    \ True\n    if x == n:\n        return True\n    if x % n != 0:\n        return\
    \ False\n    else:\n        return is_simple_power(x / n, n)\n", "    if n ==\
    \ 1:\n        return True\n    elif n == 2:\n        return True\n    elif x %\
    \ n == 0:\n        return True\n    else:\n        return False", "    if n ==\
    \ 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n\
    \        return x == n**int(n)", "    if n == 1:\n        return True\n    if\
    \ x == n:\n        return True\n    if x % n == 0:\n        return False\n   \
    \ return is_simple_power(x, n // 2)", "    if n == 1:\n        return True\n \
    \   if x == n:\n        return True\n    if x % n != 0:\n        return False\n\
    \    return is_simple_power(x // n, n)", "    if n == 1:\n        return True\n\
    \    if x == n:\n        return True\n    if x % n == 0:\n        return False\n\
    \    else:\n        return is_simple_power(x, n // 2)", '    return n**int(x)
    == x', "    return n**int(x) == x\n", "    if n == 1:\n        return True\n \
    \   if x == n:\n        return True\n    if x % n == 0:\n        return False\n\
    \    return is_simple_power(x, n // 2)", "    if n == 1:\n        return True\n\
    \    if n == 0:\n        return False\n    if x == n:\n        return True\n \
    \   if x % n != 0:\n        return False\n    return is_simple_power(x // n, n)",
  "    if n == 1:\n        return True\n    elif n == 0:\n        return False\n \
    \   else:\n        return x == n ** int(n)", '    return n ** int(x) == x', " \
    \   if n**int(x)==x:\n        return True\n    else:\n        return False", " \
    \   if n**int(x)==x:\n        return True\n    else:\n        return False", " \
    \   if n**int(x)==x:\n        return True\n    else:\n        return False", '    return
    n ** int(x) == x', "    return n**int(x) == x\n", '    return n**int(x) == x',
  "    if n == 1:\n        return True\n    if x == n:\n        return True\n    if\
    \ x % n == 0:\n        return False\n    return is_simple_power(x, n // 2)", '    return
    n**int(x) == x', "    if n == 1:\n        return True\n    if n == 0:\n      \
    \  return False\n    if x == n:\n        return True\n    if x % n == 0:\n   \
    \     return False\n    return is_simple_power(x, n // 2)", '    return n**int(x)
    == x', "    if n == 1:\n        return True\n    if n == 0:\n        return False\n\
    \    if x == n:\n        return True\n    if x % n != 0:\n        return False\n\
    \    return is_simple_power(x // n, n)", '    return n**int(x)==x', '    return
    n ** int(x) == x', '    return n ** int(x) == x', '    return n**int(x) == x',
  '    return n**int(x) == x', "    if n**int(x)==x:\n        return True\n    else:\n\
    \        return False", '    return n**int(x)==x', "    if n**int(x)==x:\n   \
    \     return True\n    else:\n        return False", '    return n ** int(x) ==
    x', "    if n == 1:\n        return True\n    if x == n:\n        return True\n\
    \    if x % n != 0:\n        return False\n    return is_simple_power(x / n, n)\n",
  '    return n**int(x) == x', '    return n**int(x) == x', "    if n == 1:\n    \
    \    return True\n    if x == n:\n        return True\n    if x % n == 0:\n  \
    \      return False\n    return is_simple_power(x, n // 2)", '    return n**int(x)
    == x', '    return n**int(x) == x', "    if n == 1:\n        return True\n   \
    \ if x == n:\n        return True\n    if x % n == 0:\n        return False\n\
    \    return is_simple_power(x, n // 2)", '    return n**int(x) == x', '    return
    n**int(x) == x', '    return n**int(x) == x', "    return n ** int(x) == x\n",
  "    if n == 1:\n        return True\n    if x == n:\n        return True\n    if\
    \ x % n == 0:\n        return False\n    return is_simple_power(x, n // 2)", " \
    \   if n == 1:\n        return True\n    if n == 0:\n        return False\n  \
    \  if x == 1:\n        return True\n    if x == 0:\n        return False\n   \
    \ if x % n == 0:\n        return True\n    return False", "    if n**int(x)==x:\n\
    \        return True\n    else:\n        return False", '    return n**int(x)
    == x', '    return n**int(x) == x', "    if n == 1:\n        return True\n   \
    \ if x == n:\n        return True\n    if x % n == 0:\n        return False\n\
    \    return is_simple_power(x, n // 2)", '    return n**int(x)==x', '    return
    n**int(x) == x', '    return n**int(x) == x', '    return n ** int(x) == x', " \
    \   if n == 1:\n        return True\n    if x == n:\n        return True\n   \
    \ if n % 2 == 0:\n        return False\n    return is_simple_power(x, n//2)",
  "    if n**int(x)==x:\n        return True\n    else:\n        return False", '    return
    n**int(x) == x', "    if n**int(x) == x:\n        return True\n    else:\n   \
    \     return False", '    return n ** int(x) == x', "    return n ** int(x) ==\
    \ x\n", '    return n**int(x)==x', '    return n**int(x) == x', "    if n == 1:\n\
    \        return True\n    elif n == 0:\n        return False\n    else:\n    \
    \    return x == n**int(n)\n", '    return n ** int(x) == x', '    return n**int(x)
    == x', "    if n**int(x)==x:\n        return True\n    else:\n        return False",
  "    if n**int(x)==x:\n        return True\n    else:\n        return False", '    return
    n ** int(x) == x', "    if n == 1:\n        return True\n    if x == n:\n    \
    \    return True\n    if x % n != 0:\n        return False\n    return is_simple_power(x\
    \ // n, n)", "    if n**int(x)==x:\n        return True\n    else:\n        return\
    \ False", '    return n**int(x) == x', '    return n**int(x) == x', '    return
    n ** int(x) == x', '    return n**int(x) == x', "    if n == 1:\n        return\
    \ True\n    if x == n:\n        return True\n    if x % n == 0:\n        return\
    \ False\n    return is_simple_power(x, n // 2)"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

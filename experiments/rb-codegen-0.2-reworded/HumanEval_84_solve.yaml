name: HumanEval_84_solve
language: rb
prompt: "# Given a positive integer N, return the total sum of its digits in binary.\n\
  # Example\n# >>> solve.call(1000)\n# \"1\"\n# >>> solve.call(150)\n# \"110\"\n#\
  \ >>> solve.call(147)\n# \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0\
  \ \u2264 N \u2264 10000.\n# Output:\n# a string of binary number\ndef solve(n)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_solve\n\
  \    candidate = method(:solve)\n    assert_equal(\"1\", candidate.call(1000))\n\
  \    assert_equal(\"110\", candidate.call(150))\n    assert_equal(\"1100\", candidate.call(147))\n\
  \    assert_equal(\"1001\", candidate.call(333))\n    assert_equal(\"10010\", candidate.call(963))\n\
  \  end\nend\n"
completions: ['    return bin(n)[2:].zfill(n.bit_length())', "    s = 0\n    while\
    \ n > 0:\n        s += n % 2\n        n /= 2\n    return s", "    s = 0\n    while\
    \ n > 0:\n        s += n % 2\n        n /= 2\n    return s\n", "    s = 0\n  \
    \  while n > 0:\n        s += n % 2\n        n /= 2\n    return s", '    return
    bin(n)[2:].zfill(n.bit_length())', "    return ''.join(str(int(x)) for x in bin(n)[2:])",
  '    return bin(n)[2:]', "    s = \"\"\n    while n > 0:\n        s = str(n % 2)\
    \ + s\n        n = n // 2\n    return s", "    s = 0\n    while n > 0:\n     \
    \   s = s + n % 2\n        n = n / 2\n    return s", "    s = 0\n    while n >\
    \ 0:\n        s += n % 2\n        n /= 2\n    return s", '    return bin(n)[2:].zfill(n.bit_length())',
  '    return bin(n)[2:]', '    return bin(n)[2:].zfill(n.bit_length())', "    s =\
    \ 0\n    while n > 0:\n        s += n % 10\n        n /= 10\n    return s\n",
  "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n\
    \    return s", "    s = \"\"\n    while n > 0:\n        s += str(n % 2)\n   \
    \     n /= 2\n    return s", "    s = 0\n    while n > 0:\n        s += n % 2\n\
    \        n /= 2\n    return s", "    s = \"\"\n    while n > 0:\n        s = str(n\
    \ % 2) + s\n        n = n / 2\n    return s", "    s = \"\"\n    while n > 0:\n\
    \        s = str(n % 2) + s\n        n = n / 2\n    return s", "    s = \"\"\n\
    \    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n    return s",
  "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n\
    \    return s", "    s = 0\n    while n > 0:\n        s = s + n % 2\n        n\
    \ = n / 2\n    return s", "    s = 0\n    while n > 0:\n        s += n % 10\n\
    \        n /= 10\n    return s", '    return bin(n)[2:].zfill(n.bit_length())',
  "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n // 2\n\
    \    return s", "    s = 0\n    while n > 0:\n        s += n % 2\n        n /=\
    \ 2\n    return s", "    s = 0\n    while n > 0:\n        s += n % 10\n      \
    \  n /= 10\n    return s", "    s = 0\n    while n > 0:\n        s += n % 10\n\
    \        n /= 10\n    return s", "    s = \"\"\n    while n > 0:\n        s =\
    \ str(n % 2) + s\n        n = n / 2\n    return s", "    s = \"\"\n    while n\
    \ > 0:\n        s = str(n % 2) + s\n        n = n / 2\n    return s", "    s =\
    \ \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n    return\
    \ s", "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n =\
    \ n / 2\n    return s", "    s = 0\n    while n > 0:\n        s = s + n % 2\n\
    \        n = n / 2\n    return s", "    s = 0\n    while n > 0:\n        s = s\
    \ + n % 2\n        n = n / 2\n    return s", "    s = 0\n    while n > 0:\n  \
    \      s += n % 2\n        n /= 2\n    return s", "    s = 0\n    while n > 0:\n\
    \        s += n % 2\n        n /= 2\n    return s\n", "    s = 0\n    while n\
    \ > 0:\n        s += n % 2\n        n /= 2\n    return s", "    s = 0\n    while\
    \ n > 0:\n        s += n % 10\n        n /= 10\n    return s", "    s = \"\"\n\
    \    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n    return s",
  "    s = 0\n    while n > 0:\n        s += n % 10\n        n /= 10\n    return s",
  "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n\
    \    return s", "    s = 0\n    while n > 0:\n        s += n % 2\n        n /=\
    \ 2\n    return s", "    s = \"\"\n    while n > 0:\n        s += str(n % 2)\n\
    \        n /= 2\n    return s", "    s = \"\"\n    while n > 0:\n        s = str(n\
    \ % 2) + s\n        n = n / 2\n    return s", "    s = 0\n    while n > 0:\n \
    \       s += n % 10\n        n /= 10\n    return s", "    s = 0\n    while n >\
    \ 0:\n        s = s + n % 2\n        n = n / 2\n    return s", "    s = 0\n  \
    \  while n > 0:\n        s += n % 2\n        n /= 2\n    return s", '    return
    bin(n)[2:].zfill(n.bit_length())', "    s = \"\"\n    while n > 0:\n        s\
    \ += str(n % 2)\n        n /= 2\n    return s", '    return bin(n)[2:].zfill(n.bit_length())',
  "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n\
    \    return s", "    s = 0\n    while n > 0:\n        s += n % 2\n        n /=\
    \ 2\n    return s", '    return bin(n)[2:]', "    s = \"\"\n    while n > 0:\n\
    \        s = str(n % 2) + s\n        n = n / 2\n    return s\n", '    return bin(n)[2:]',
  "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n\
    \    return s", "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n\
    \        n = n / 2\n    return s", "    s = \"\"\n    while n > 0:\n        s\
    \ = str(n % 2) + s\n        n = n / 2\n    return s", "    s = \"\"\n    while\
    \ n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n    return s", "    s\
    \ = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n  \
    \  return s", "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n  \
    \      n = n / 2\n    return s", "    s = \"\"\n    while n > 0:\n        s =\
    \ str(n % 2) + s\n        n = n / 2\n    return s\n", "    s = 0\n    while n\
    \ > 0:\n        s += n % 10\n        n /= 10\n    return s", "    return ''.join(str(int(n))[::-1])",
  "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n\
    \    return s", "    s = 0\n    while n > 0:\n        s += n % 2\n        n /=\
    \ 2\n    return s\n", "    return bin(n)[2:].zfill(n.bit_length())\n", "    s\
    \ = 0\n    while n > 0:\n        s += n % 2\n        n /= 2\n    return s", " \
    \   s = \"\"\n    while n > 0:\n        s += str(n % 2)\n        n = n / 2\n \
    \   return s", "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n \
    \       n = n / 2\n    return s", "    s = 0\n    while n > 0:\n        s += n\
    \ % 2\n        n /= 2\n    return s\n", "    s = 0\n    while n > 0:\n       \
    \ s = s + n % 2\n        n = n / 2\n    return s", "    s = 0\n    while n > 0:\n\
    \        s += n % 2\n        n /= 2\n    return s", "    s = \"\"\n    while n\
    \ > 0:\n        s = str(n % 2) + s\n        n = n / 2\n    return s", "    s =\
    \ 0\n    while n > 0:\n        s += n % 2\n        n /= 2\n    return s", '    return
    bin(n)[2:].zfill(n.bit_length())', '    return bin(n)[2:].zfill(n.bit_length())',
  "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n\
    \    return s", "    s = \"\"\n    while n > 0:\n        s += str(n % 2)\n   \
    \     n = n / 2\n    return s", "    s = \"\"\n    while n > 0:\n        s = str(n\
    \ % 2) + s\n        n = n / 2\n    return s", "    s = \"\"\n    while n > 0:\n\
    \        s = str(n % 2) + s\n        n = n / 2\n    return s", "    s = \"\"\n\
    \    while n > 0:\n        s += str(n % 2)\n        n /= 2\n    return s", " \
    \   return ''.join(map(str, [int(n)%2 for i in range(len(str(n)))])).lstrip('0')\n",
  "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n\
    \    return s", "    s = 0\n    while n > 0:\n        s += n % 2\n        n /=\
    \ 2\n    return s\n", '    return bin(n)[2:].zfill(n.bit_length())', '    return
    bin(n)[2:].zfill(n.bit_length())', "    s = 0\n    while n > 0:\n        s +=\
    \ n % 2\n        n = n / 2\n    return s\n", "    return bin(n)[2:].zfill(n.bit_length())\n",
  "    return bin(n)[2:].zfill(n.bit_length())\n", "    s = 0\n    while n > 0:\n\
    \        s += n % 2\n        n /= 2\n    return s", "    s = 0\n    while n >\
    \ 0:\n        s = s + n % 2\n        n = n / 2\n    return s", "    s = 0\n  \
    \  while n > 0:\n        s += n % 2\n        n /= 2\n    return s", "    s = \"\
    \"\n    while n > 0:\n        s += str(n % 2)\n        n /= 2\n    return s",
  "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n\
    \    return s", "    return ''.join(map(str, map(int, list(bin(n)[2:])[::-1])))",
  "    return ''.join(str(int(n))[::-1])\n", "    s = 0\n    while n > 0:\n      \
    \  s += n % 2\n        n /= 2\n    return s\n", "    return bin(n)[2:].zfill(n.bit_length())\n",
  "    s = \"\"\n    while n > 0:\n        s += str(n % 2)\n        n = n / 2\n  \
    \  return s", "    s = 0\n    while n > 0:\n        s += n % 2\n        n /= 2\n\
    \    return s", "    s = 0\n    while n > 0:\n        s += n % 10\n        n /=\
    \ 10\n    return s\n", "    s = 0\n    while n > 0:\n        s += n % 10\n   \
    \     n /= 10\n    return s", '    return bin(n)[2:].zfill(n.bit_length())', " \
    \   return bin(n)[2:].zfill(n.bit_length())\n", "    s = 0\n    while n > 0:\n\
    \        s += n % 2\n        n /= 2\n    return s", "    s = 0\n    while n >\
    \ 0:\n        s += n % 2\n        n /= 2\n    return s", "    s = 0\n    while\
    \ n > 0:\n        s += n % 2\n        n /= 2\n    return s", "    s = \"\"\n \
    \   while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n    return s",
  "    s = 0\n    while n > 0:\n        s += n % 2\n        n /= 2\n    return s",
  "    return ''.join(str(int(x)) for x in bin(n)[2:])", '    return bin(n)[2:].zfill(n.bit_length())',
  "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n\
    \    return s", '    return bin(n)[2:].zfill(n.bit_length())', "    s = \"\"\n\
    \    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n    return s",
  "    return bin(n)[2:].zfill(n.bit_length())\n", "    return bin(n)[2:].zfill(n.bit_length())\n",
  "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n\
    \    return s", "    return ''.join(str(int(n))[::-1])", "    return ''.join(map(str,\
    \ map(int, list(bin(n)[2:].zfill(n.bit_length()))))).lstrip('0')\n", "    s =\
    \ 0\n    while n > 0:\n        s += n % 2\n        n /= 2\n    return s", "  \
    \  s = 0\n    while n > 0:\n        s += n % 2\n        n /= 2\n    return s",
  "    return ''.join(map(str, map(int, bin(n)[2:].zfill(n.bit_length()))))", '    return
    bin(n)[2:].zfill(n.bit_length())', "    s = 0\n    while n > 0:\n        s = s\
    \ + n % 2\n        n = n / 2\n    return s", "    s = \"\"\n    while n > 0:\n\
    \        s = str(n % 2) + s\n        n = n / 2\n    return s\n", "    s = 0\n\
    \    while n > 0:\n        s += n % 10\n        n /= 10\n    return s", "    s\
    \ = \"\"\n    while n > 0:\n        s += str(n % 2)\n        n /= 2\n    return\
    \ s", "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n =\
    \ n / 2\n    return s", "    s = \"\"\n    while n > 0:\n        s = str(n % 2)\
    \ + s\n        n = n / 2\n    return s", "    s = \"\"\n    while n > 0:\n   \
    \     s = str(n % 2) + s\n        n = n / 2\n    return s", '    return bin(n)[2:].zfill(n.bit_length())',
  "    return ''.join(str(int(n))[::-1])", "    s = \"\"\n    while n > 0:\n     \
    \   s = str(n % 2) + s\n        n = n / 2\n    return s", '    return bin(n)[2:].zfill(n.bit_length())',
  "    s = 0\n    while n > 0:\n        s = s + n % 2\n        n = n / 2\n    return\
    \ s", "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n =\
    \ n // 2\n    return s", "    s = 0\n    while n > 0:\n        s += n % 2\n  \
    \      n /= 2\n    return s", '    return bin(n)[2:].zfill(n.bit_length())', " \
    \   s = 0\n    while n > 0:\n        s += n % 2\n        n /= 2\n    return s\n",
  "    return ''.join(str(int(n))[::-1])", '    return bin(n)[2:].zfill(n.bit_length())',
  "    s = 0\n    while n > 0:\n        s += n % 2\n        n /= 2\n    return s",
  "    s = 0\n    while n > 0:\n        s += n % 10\n        n /= 10\n    return s\n",
  "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n\
    \    return s", "    s = 0\n    while n > 0:\n        s += n % 2\n        n /=\
    \ 2\n    return s", "    s = \"\"\n    while n > 0:\n        s = str(n % 2) +\
    \ s\n        n = n / 2\n    return s", "    s = 0\n    while n > 0:\n        s\
    \ = s + n % 2\n        n = n / 2\n    return s\n", "    s = \"\"\n    while n\
    \ > 0:\n        s += str(n % 2)\n        n /= 2\n    return s", '    return bin(n)[2:].zfill(n.bit_length())',
  "    s = \"\"\n    while n > 0:\n        s += str(n % 2)\n        n /= 2\n    return\
    \ s\n", "    s = 0\n    while n > 0:\n        s += n % 2\n        n /= 2\n   \
    \ return s", "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n   \
    \     n = n / 2\n    return s", '    return bin(n)[2:].zfill(n.bit_length())',
  "    s = 0\n    while n > 0:\n        s += n % 10\n        n /= 10\n    return s",
  '    return bin(n)[2:].zfill(n.bit_length())', "    s = 0\n    while n > 0:\n  \
    \      s += n % 10\n        n /= 10\n    return s", "    s = \"\"\n    while n\
    \ > 0:\n        s = str(n % 2) + s\n        n = n / 2\n    return s", "    return\
    \ bin(n)[2:].zfill(n.bit_length())\n", '    return bin(n)[2:].zfill(n.bit_length())',
  "    s = 0\n    while n > 0:\n        s += n % 2\n        n /= 2\n    return s",
  '    return bin(n)[2:].zfill(n.bit_length())', "    s = 0\n    while n > 0:\n  \
    \      s += n % 2\n        n /= 2\n    return s", '    return bin(n)[2:].zfill(n.bit_length())',
  "    s = 0\n    while n > 0:\n        s += n % 10\n        n /= 10\n    return s",
  "    s = 0\n    while n > 0:\n        s += n % 2\n        n /= 2\n    return s",
  "    s = \"\"\n    while n > 0:\n        s += str(n % 2)\n        n /= 2\n    return\
    \ s\n", "    s = 0\n    while n > 0:\n        s = s + n % 2\n        n = n / 2\n\
    \    return s", "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n\
    \        n = n / 2\n    return s", "    s = \"\"\n    while n > 0:\n        s\
    \ += str(n % 2)\n        n /= 2\n    return s", "    s = \"\"\n    while n > 0:\n\
    \        s = str(n % 2) + s\n        n = n / 2\n    return s", "    s = \"\"\n\
    \    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n    return s",
  "    s = 0\n    while n > 0:\n        s += n % 2\n        n = n / 2\n    return\
    \ s", "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n =\
    \ n / 2\n    return s", "    s = \"\"\n    while n > 0:\n        s = str(n % 2)\
    \ + s\n        n = n / 2\n    return s", "    s = \"\"\n    while n > 0:\n   \
    \     s = str(n % 2) + s\n        n = n // 2\n    return s", "    s = \"\"\n \
    \   while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n    return s",
  '    return bin(n)[2:].zfill(n.bit_length())', '    return bin(n)[2:].zfill(n.bit_length())',
  "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n\
    \    return s", "    return ''.join(str(int(n))[::-1])\n", "    s = 0\n    while\
    \ n > 0:\n        s += n % 2\n        n /= 2\n    return s\n", "    s = 0\n  \
    \  while n > 0:\n        s += n % 10\n        n /= 10\n    return s", "    s =\
    \ 0\n    while n > 0:\n        s += n % 10\n        n /= 10\n    return s\n",
  "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n\
    \    return s", "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n\
    \        n = n / 2\n    return s\n", "    s = 0\n    while n > 0:\n        s +=\
    \ n % 2\n        n /= 2\n    return s", "    s = \"\"\n    while n > 0:\n    \
    \    s = str(n % 2) + s\n        n = n / 2\n    return s", "    s = \"\"\n   \
    \ while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n    return s",
  "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n\
    \    return s", "    s = 0\n    while n > 0:\n        s += n % 10\n        n /=\
    \ 10\n    return s\n", "    s = \"\"\n    while n > 0:\n        s = str(n % 2)\
    \ + s\n        n = n // 2\n    return s", "    s = \"\"\n    while n > 0:\n  \
    \      s = str(n % 2) + s\n        n = n // 2\n    return s", '    return bin(n)[2:].zfill(n.bit_length())',
  "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n\
    \    return s", "    return ''.join(str(int(n))[::-1])", '    return bin(n)[2:].zfill(n.bit_length())',
  "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n        n = n / 2\n\
    \    return s", "    s = \"\"\n    while n > 0:\n        s = str(n % 2) + s\n\
    \        n = n // 2\n    return s", "    s = \"\"\n    while n > 0:\n        s\
    \ = str(n % 2) + s\n        n = n / 2\n    return s"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

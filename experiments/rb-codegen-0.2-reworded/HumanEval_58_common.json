{
  "name": "HumanEval_58_common",
  "language": "rb",
  "prompt": "# Return sorted unique common elements for two arrays.\n# >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common.call([5, 3, 2, 8], [3, 2])\n# [2, 3]\ndef common(l1, l2)\n",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_common\n    candidate = method(:common)\n    assert_equal([1, 5, 653], candidate.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))\n    assert_equal([2, 3], candidate.call([5, 3, 2, 8], [3, 2]))\n    assert_equal([2, 3, 4], candidate.call([4, 3, 2, 8], [3, 2, 4]))\n    assert_equal([], candidate.call([4, 3, 2, 8], []))\n  end\nend\n",
  "completions": [
    "    if len(l1) == 0 or len(l2) == 0:\n        return []\n    else:\n        return list(set(l1) & set(l2))",
    "    l1.sort()\n    l2.sort()\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1.sort()\n    l2.sort()\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    # Sort the lists\n    l1.sort()\n    l2.sort()\n    # Create a list of unique elements in both lists\n    u = []\n    for i in l1:\n        if i not in u:\n            u.append(i)\n    for i in l2:\n        if i not in u:\n            u.append(i)\n    return u",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    # Create a dictionary of unique elements in l1 and l2.\n    d1 = {}\n    d2 = {}\n    for i in l1:\n        d1[i] = 1\n    for i in l2:\n        d2[i] = 1\n    # Create a list of common elements.\n    l = []\n    for i in d1:\n        if d2.has_key(i):\n            l.append(i)\n    return l",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    result = []\n    for i in range(len(l1)):\n        if l1[i] == l2[0]:\n            result.append(l1[i])\n            l2.pop(0)\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    if len(l1) == 0 or len(l2) == 0:\n        return []\n    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    # Create a dictionary of all elements in l1 and l2.\n    d = {}\n    for i in l1:\n        d[i] = 1\n    for i in l2:\n        d[i] = 1\n    # Create a list of all unique elements in l1 and l2.\n    l = []\n    for i in d:\n        l.append(i)\n    # Sort the list and return the first n elements.\n    l.sort()\n    return l[0:len(l1) + len(l2)]",
    "    # Create a dictionary of all elements in l1 and l2\n    d = {}\n    for i in l1:\n        d[i] = 1\n    for i in l2:\n        d[i] = 1\n    # Create a list of all unique elements in l1 and l2\n    l = []\n    for i in d:\n        l.append(i)\n    # Sort the list and return the first n elements\n    return sorted(l)[:len(l1) + len(l2) - 1]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    # Create a dictionary of common elements.\n    d = {}\n    for i in l1:\n        if i in l2:\n            d[i] = 1\n    # Return a list of common elements.\n    return d.keys()",
    "    if len(l1) < len(l2):\n        l1, l2 = l2, l1\n    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    return sorted(set(l1) & set(l2))",
    "    l1.sort()\n    l2.sort()\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    # Sort the lists\n    l1 = sorted(l1)\n    l2 = sorted(l2)\n    # Create a set of unique elements in both lists\n    s = set(l1) & set(l2)\n    # Return the sorted unique common elements\n    return sorted(s)",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    if len(l1) < len(l2):\n        l1, l2 = l2, l1\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(set(l1))\n    l2 = sorted(set(l2))\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    if len(l1) == 0 or len(l2) == 0:\n        return []\n    else:\n        return [x for x in l1 if x in l2]",
    "    if len(l1) < len(l2):\n        return common(l2, l1)\n    else:\n        return [x for x in l1 if x in l2]",
    "    # Sort the lists\n    l1 = sorted(l1)\n    l2 = sorted(l2)\n    # Create a set of unique elements in both lists\n    set1 = set(l1)\n    set2 = set(l2)\n    # Create a set of common elements\n    common = set1.intersection(set2)\n    # Return the list of common elements\n    return list(common)",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    if len(l1) == 0 or len(l2) == 0:\n        return []\n    else:\n        return list(set(l1) & set(l2))",
    "    if len(l1) < len(l2):\n        return common(l2, l1)\n    else:\n        return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    l1 = sorted(set(l1))\n    l2 = sorted(set(l2))\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    # Create a dictionary of the elements in l1 and l2.\n    d = {}\n    for i in l1:\n        d[i] = 1\n    for i in l2:\n        d[i] = 1\n    # Create a list of the unique elements in d.\n    l = []\n    for i in d:\n        l.append(i)\n    # Sort the list and return the unique elements.\n    return sorted(l)",
    "    return sorted(set(l1) & set(l2))",
    "    if len(l1) == 0 or len(l2) == 0:\n        return []\n    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    # Create a dictionary of common elements.\n    common = {}\n    for i in l1:\n        if i in l2:\n            common[i] = 1\n    # Return sorted unique common elements.\n    return sorted(common.keys())",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    result = []\n    for i in range(len(l1)):\n        if l1[i] == l2[0]:\n            result.append(l1[i])\n            l2.pop(0)\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    # Return sorted unique common elements for two arrays.\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    return sorted(set(l1) & set(l2))",
    "    if len(l1) < len(l2):\n        l1, l2 = l2, l1\n    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    # Create a dictionary of all elements in l1 and l2\n    d = {}\n    for i in l1:\n        d[i] = 1\n    for i in l2:\n        d[i] = 1\n    # Create a list of unique elements in l1 and l2\n    l = []\n    for i in d:\n        l.append(i)\n    # Sort the list\n    l.sort()\n    return l",
    "    # Create a dictionary of common elements.\n    d = {}\n    for i in l1:\n        if i in l2:\n            d[i] = 1\n    # Return a list of common elements.\n    return d.keys()",
    "    return sorted(set(l1) & set(l2))",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    if len(l1) == 0 or len(l2) == 0:\n        return []\n    else:\n        return list(set(l1) & set(l2))",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [i for i in l1 if i in l2]",
    "    if len(l1) < len(l2):\n        l1, l2 = l2, l1\n    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    l1.sort()\n    l2.sort()\n    return list(set(l1) & set(l2))",
    "    # Create a dictionary of common elements.\n    d = {}\n    for i in l1:\n        if i in l2:\n            d[i] = 1\n    # Return sorted unique common elements.\n    return sorted(d.keys())",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    if len(l1) < len(l2):\n        l1, l2 = l2, l1\n    l1 = sorted(l1)\n    l2 = sorted(l2)\n    result = []\n    for i in range(len(l1)):\n        if l1[i] == l2[0]:\n            result.append(l1[i])\n            l2.remove(l1[i])\n    return result",
    "    if len(l1) == 0 or len(l2) == 0:\n        return []\n    else:\n        return [x for x in l1 if x in l2]",
    "    if len(l1) < len(l2):\n        l1, l2 = l2, l1\n    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1.sort()\n    l2.sort()\n    return list(set(l1) & set(l2))",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [i for i in l1 if i in l2]",
    "    # Create a dictionary of unique elements in l1 and l2\n    d = {}\n    for e in l1:\n        d[e] = 1\n    for e in l2:\n        d[e] = 1\n    # Create a list of common elements\n    l = []\n    for e in d:\n        if d[e] == 1:\n            l.append(e)\n    # Return the list\n    return l",
    "    if len(l1) < len(l2):\n        return common(l2, l1)\n    elif len(l2) == 0:\n        return []\n    else:\n        return [x for x in l1 if x in l2]",
    "    l1.sort()\n    l2.sort()\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    return sorted(set(l1) & set(l2))",
    "    # Create a dictionary of common elements\n    d = {}\n    for i in l1:\n        if i in l2:\n            d[i] = 1\n    # Return a list of common elements\n    return d.keys()",
    "    # Create a dictionary of unique elements in l1 and l2.\n    d = {}\n    for e in l1:\n        d[e] = 1\n    for e in l2:\n        d[e] = 1\n    # Create a list of unique elements in l1 and l2.\n    u = []\n    for e in d:\n        u.append(e)\n    # Sort the list and return the unique common elements.\n    return sorted(u)",
    "    return sorted(set(l1) & set(l2))",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    # Create a dictionary of unique elements in l1 and l2.\n    d = {}\n    for i in l1:\n        d[i] = 1\n    for i in l2:\n        d[i] = 1\n    # Create a list of common elements.\n    l = []\n    for i in d:\n        l.append(i)\n    # Sort the list.\n    l.sort()\n    return l",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    if len(l1) < len(l2):\n        l1, l2 = l2, l1\n    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    if len(l1) < len(l2):\n        l1, l2 = l2, l1\n    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    # Create a dictionary of common elements.\n    d = {}\n    for i in l1:\n        if i in l2:\n            d[i] = 1\n    # Return the sorted unique common elements.\n    return sorted(d.keys())",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    # Return sorted unique common elements for two arrays.\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7",
    "    if len(l1) == 0 or len(l2) == 0:\n        return []\n    else:\n        return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    # Create a dictionary of common elements\n    d = {}\n    for e in l1:\n        if e in l2:\n            d[e] = 1\n    # Return the sorted unique common elements\n    return sorted(d.keys())",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    # Create a dictionary with the elements of l1 as keys and the\n    # number of times they appear in l2 as values.\n    d = {}\n    for e in l1:\n        d[e] = d.get(e, 0) + 1\n    # Create a list of the elements that appear in l2 and l1.\n    s = []\n    for e in l2:\n        if d.get(e, 0) > 0:\n            s.append(e)\n    # Return the sorted list of unique common elements.\n    return sorted(s)",
    "    l1.sort()\n    l2.sort()\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    if len(l1) == 0 or len(l2) == 0:\n        return []\n    else:\n        return [x for x in l1 if x in l2]",
    "    if len(l1) < len(l2):\n        l1, l2 = l2, l1\n    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    # Return sorted unique common elements for two arrays.\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7",
    "    if len(l1) < len(l2):\n        l1, l2 = l2, l1\n    l1 = sorted(set(l1))\n    l2 = sorted(set(l2))\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    if len(l1) == 0 or len(l2) == 0:\n        return []\n    else:\n        return [x for x in l1 if x in l2]",
    "    # Create a dictionary of common elements.\n    d = {}\n    for i in l1:\n        if i in l2:\n            d[i] = 1\n    # Return sorted unique common elements.\n    return sorted(d.keys())",
    "    if len(l1) < len(l2):\n        return common(l2, l1)\n    elif len(l2) == 0:\n        return []\n    else:\n        return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    if len(l1) < len(l2):\n        l1, l2 = l2, l1\n    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    if len(l1) == 0 or len(l2) == 0:\n        return []\n    else:\n        return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    return sorted(set(l1) & set(l2))",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    if len(l1) < len(l2):\n        return common(l2, l1)\n    elif len(l2) == 0:\n        return []\n    else:\n        return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [i for i in l1 if i in l2]",
    "    if len(l1) < len(l2):\n        return common(l2, l1)\n    else:\n        return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1.sort()\n    l2.sort()\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    # Create a dictionary of common elements\n    d = {}\n    for i in l1:\n        if i in l2:\n            d[i] = 1\n    # Return the list of common elements\n    return d.keys()",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1.sort()\n    l2.sort()\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    # Sort both lists\n    l1.sort()\n    l2.sort()\n    # Create a list of common elements\n    common = []\n    # Iterate through both lists\n    for i in range(len(l1)):\n        if l1[i] == l2[i]:\n            common.append(l1[i])\n    return common",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    if len(l1) == 0 or len(l2) == 0:\n        return []\n    else:\n        return list(set(l1) & set(l2))",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    # Return sorted unique common elements for two arrays.\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    return sorted(set(l1) & set(l2))",
    "    if len(l1) < len(l2):\n        return common(l2, l1)\n    if len(l2) == 0:\n        return []\n    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    if len(l1) == 0 or len(l2) == 0:\n        return []\n    else:\n        return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    if len(l1) < len(l2):\n        return common(l2, l1)\n    if len(l2) == 0:\n        return []\n    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1.sort()\n    l2.sort()\n    return [l1[i] for i in range(len(l1)) if l1[i] in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    return sorted(set(l1) & set(l2))",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    # Sort the lists.\n    l1.sort()\n    l2.sort()\n    # Create a set of unique elements in both lists.\n    s = set(l1)\n    s.update(l2)\n    return list(s)",
    "    l1 = sorted(set(l1))\n    l2 = sorted(set(l2))\n    return [x for x in l1 if x in l2]",
    "    # Create a dictionary of all elements in l1 and l2\n    d = {}\n    for i in l1:\n        d[i] = 1\n    for i in l2:\n        d[i] = 1\n    # Create a list of all unique elements in l1 and l2\n    l = []\n    for i in d:\n        l.append(i)\n    # Sort the list\n    l.sort()\n    # Return the unique common elements\n    return l",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    if len(l1) < len(l2):\n        return common(l2, l1)\n    else:\n        return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(set(l1))\n    l2 = sorted(set(l2))\n    return [x for x in l1 if x in l2]",
    "    if len(l1) == 0 or len(l2) == 0:\n        return []\n    else:\n        return list(set(l1) & set(l2))",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    # Create a dictionary of the elements in l1 and l2.\n    d = {}\n    for e in l1:\n        d[e] = 1\n    for e in l2:\n        d[e] = 1\n    # Create a list of the unique elements in d.\n    l = []\n    for e in d:\n        l.append(e)\n    # Sort the list and return the unique elements.\n    l.sort()\n    return l",
    "    # Create a dictionary of unique elements in l1 and l2.\n    d1 = {}\n    d2 = {}\n    for i in l1:\n        d1[i] = 1\n    for i in l2:\n        d2[i] = 1\n    # Create a list of common elements.\n    l = []\n    for i in d1:\n        if d2.has_key(i):\n            l.append(i)\n    # Sort the list.\n    l.sort()\n    return l",
    "    # Create a dictionary of common elements.\n    d = {}\n    for e in l1:\n        if e in l2:\n            d[e] = 1\n    # Return sorted unique common elements.\n    return sorted(d.keys())",
    "    # Sort the lists.\n    l1.sort()\n    l2.sort()\n    # Create a list of common elements.\n    common = []\n    # Iterate over the lists.\n    for i in range(len(l1)):\n        # If the lists have a common element, add it to the list.\n        if l1[i] == l2[i]:\n            common.append(l1[i])\n    # Return the list of common elements.\n    return common",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    # Create a dictionary of all elements in l1 and l2\n    d = {}\n    for e in l1:\n        d[e] = 1\n    for e in l2:\n        d[e] = 1\n    # Create a list of all elements in l1 and l2\n    l = []\n    for e in d:\n        l.append(e)\n    # Sort the list\n    l.sort()\n    # Return the unique elements\n    return l",
    "    l1.sort()\n    l2.sort()\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    return sorted(set(l1) & set(l2))",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    # Create a dictionary of unique elements in l1 and l2.\n    d = {}\n    for i in l1:\n        d[i] = 1\n    for i in l2:\n        d[i] = 1\n    # Create a list of unique elements in l1 and l2.\n    l = []\n    for i in d:\n        l.append(i)\n    # Sort the list.\n    l.sort()\n    # Return the sorted list of common elements.\n    return l",
    "    if len(l1) < len(l2):\n        return common(l2, l1)\n    else:\n        return [x for x in l1 if x in l2]",
    "    l1.sort()\n    l2.sort()\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    # Sort the lists\n    l1.sort()\n    l2.sort()\n    # Create a list of common elements\n    common = []\n    # Iterate through the lists\n    for i in range(len(l1)):\n        # If the current element is the same as the next element in the second list,\n        # add it to the common list\n        if l1[i] == l2[i]:\n            common.append(l1[i])\n    # Return the common list\n    return common",
    "    if len(l1) < len(l2):\n        l1, l2 = l2, l1\n    return [i for i in l1 if i in l2]",
    "    l1.sort()\n    l2.sort()\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    if len(l1) < len(l2):\n        l1, l2 = l2, l1\n    l1 = sorted(set(l1))\n    l2 = sorted(set(l2))\n    return [l1[i] for i in range(len(l1)) if l1[i] in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    return sorted(set(l1) & set(l2))",
    "    # Create a dictionary of common elements.\n    d = {}\n    for i in l1:\n        if i in l2:\n            d[i] = 1\n    # Return sorted unique common elements.\n    return sorted(d.keys())",
    "    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    # Return sorted unique common elements for two arrays.\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    # [1, 5, 653]\n    # >>> common.call([5, 3, 2, 8], [3, 2])\n    # [2, 3]\n    # >>> common.call([1, 4, 3, 34, 653, 2, 5], [5, 7",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    result = []\n    while len(l1) > 0 and len(l2) > 0 and l1[0] == l2[0]:\n        result.append(l1[0])\n        l1 = l1[1:]\n        l2 = l2[1:]\n    return result",
    "    l1 = sorted(set(l1))\n    l2 = sorted(set(l2))\n    return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    return [x for x in l1 if x in l2]",
    "    l1.sort()\n    l2.sort()\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    if len(l1) == 0 or len(l2) == 0:\n        return []\n    else:\n        return [x for x in l1 if x in l2]",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    result = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    result = []\n    i = 0\n    j = 0\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            result.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return result",
    "    # Create a dictionary of all elements in l1 and l2\n    d = {}\n    for i in l1:\n        d[i] = 1\n    for i in l2:\n        d[i] = 1\n    # Create a list of all elements in l1 and l2\n    l = []\n    for i in d:\n        l.append(i)\n    # Sort the list\n    l.sort()\n    # Return the unique elements\n    return l",
    "    l1 = sorted(l1)\n    l2 = sorted(l2)\n    i = 0\n    j = 0\n    common = []\n    while i < len(l1) and j < len(l2):\n        if l1[i] == l2[j]:\n            common.append(l1[i])\n            i += 1\n            j += 1\n        elif l1[i] < l2[j]:\n            i += 1\n        else:\n            j += 1\n    return common",
    "    return sorted(set(l1) & set(l2))"
  ],
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ]
}
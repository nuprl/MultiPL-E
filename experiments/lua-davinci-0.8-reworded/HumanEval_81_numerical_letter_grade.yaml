name: HumanEval_81_numerical_letter_grade
language: lua
prompt: "-- It is the last week of the semester and the teacher has to give the grades\n\
  -- to students. The teacher has been making her own algorithm for grading.\n-- The\
  \ only problem is, she has lost the code she used for grading.\n-- She has given\
  \ you a table of GPAs for some students and you have to write \n-- a function that\
  \ can output a table of letter grades using the following table:\n-- GPA       |\
  \    Letter grade\n-- 4.0                A+\n-- > 3.7                A \n-- > 3.3\
  \                A- \n-- > 3.0                B+\n-- > 2.7                B \n--\
  \ > 2.3                B-\n-- > 2.0                C+\n-- > 1.7                C\n\
  -- > 1.3                C-\n-- > 1.0                D+ \n-- > 0.7              \
  \  D \n-- > 0.0                D-\n-- 0.0                E\n-- Example:\n-- >>>\
  \ grade_equation({4.0, 3, 1.7, 2, 3.5})\n-- {'A+', 'B', 'C-', 'C', 'A-'}\nlocal\
  \ function numerical_letter_grade(grades)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = numerical_letter_grade\n\
  \    lu.assertEquals(candidate({4.0, 3, 1.7, 2, 3.5}), {'A+', 'B', 'C-', 'C', 'A-'})\n\
  \    lu.assertEquals(candidate({1.2}), {'D+'})\n    lu.assertEquals(candidate({0.5}),\
  \ {'D-'})\n    lu.assertEquals(candidate({0.0}), {'E'})\n    lu.assertEquals(candidate({1.0,\
  \ 0.3, 1.5, 2.8, 3.3}), {'D', 'D-', 'C-', 'B', 'B+'})\n    lu.assertEquals(candidate({0.0,\
  \ 0.7}), {'E', 'D-'})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\t-- TODO: implement this method\n    -- HINT: use a table of values\n\
    end", "    local letter_grades = {}\n    for i, grade in ipairs(grades) do\n \
    \       if grade >= 4.0 then\n            letter_grades[i] = 'A+'\n        elseif\
    \ grade >= 3.7 then\n            letter_grades[i] = 'A'\n        elseif grade\
    \ >= 3.3 then\n            letter_grades[i] = 'A-'\n        elseif grade >= 3.0\
    \ then\n            letter_grades[i] = 'B+'\n        elseif grade >= 2.7 then\n\
    \            letter_grades[i] = 'B'\n        elseif grade >= 2.3 then\n      \
    \      letter_grades[i] = 'B-'\n        elseif grade >= 2.0 then\n           \
    \ letter_grades[i] = 'C+'\n        elseif grade >= 1.7 then\n            letter_grades[i]\
    \ = 'C'\n        elseif grade >= 1.3 then\n            letter_grades[i] = 'C-'\n\
    \        elseif grade >= 1.0 then\n            letter_grades[i] = 'D+'\n     \
    \   elseif grade >= 0.7 then\n            letter_grades[i] = 'D'\n        elseif\
    \ grade >= 0.0 then\n            letter_grades[i] = 'D-'\n        else\n     \
    \       letter_grades[i] = 'E'\n        end\n    end\n    return letter_grades\n\
    end", "    return grades:map(function(x)\n        if x >= 4.0 then return 'A+'\
    \ end\n        if x >= 3.7 then return 'A' end\n        if x >= 3.3 then return\
    \ 'A-' end\n        if x >= 3.0 then return 'B+' end\n        if x >= 2.7 then\
    \ return 'B' end\n        if x >= 2.3 then return 'B-' end\n        if x >= 2.0\
    \ then return 'C+' end\n        if x >= 1.7 then return 'C' end\n        if x\
    \ >= 1.3 then return 'C-' end\n        if x >= 1.0 then return 'D+' end\n    \
    \    if x >= 0.7 then return 'D' end\n        if x >= 0.0 then return 'D-' end\n\
    \        return 'E'\n    end)\nend", "    local letter_grades = {}\n    for _,\
    \ value in ipairs(grades) do\n        if value > 4.0 then table.insert(letter_grades,\
    \ 'A+') end\n        if value <= 4.0 and value > 3.7 then table.insert(letter_grades,\
    \ 'A') end\n        if value <= 3.7 and value > 3.3 then table.insert(letter_grades,\
    \ 'A-') end\n        if value <= 3.3 and value > 3.0 then table.insert(letter_grades,\
    \ 'B+') end\n        if value <= 3.0 and value > 2.7 then table.insert(letter_grades,\
    \ 'B') end\n        if value <= 2.7 and value > 2.3 then table.insert(letter_grades,\
    \ 'B-') end\n        if value <= 2.3 and value > 2.0 then table.insert(letter_grades,\
    \ 'C+') end\n        if value <= 2.0 and value > 1.7 then table.insert(letter_grades,\
    \ 'C') end\n        if value <= 1.7 and value > 1.3 then table.insert(letter_grades,\
    \ 'C-') end\n        if value <= 1.3 and value > 1.0 then table.insert(letter_grades,\
    \ 'D+') end\n        if value <= 1.0 and value > 0.7 then table.insert(letter_grades,\
    \ 'D') end\n        if value <= 0.7 and value > 0.0 then table.insert(letter_grades,\
    \ 'D-') end\n        if value <= 0.0 then table.insert(letter_grades, 'E') end\n\
    \    end\n    return letter_grades\nend", "    local range = {\n        ['A+']\
    \ = 4.0,\n        ['A'] = 3.7,\n        ['A-'] = 3.3,\n        ['B+'] = 3.0,\n\
    \        ['B'] = 2.7,\n        ['B-'] = 2.3,\n        ['C+'] = 2.0,\n        ['C']\
    \ = 1.7,\n        ['C-'] = 1.3,\n        ['D+'] = 1.0,\n        ['D'] = 0.7,\n\
    \        ['D-'] = 0.0,\n        ['E'] = 0.0\n    }\n    local letter_grades =\
    \ {}\n    for _, grade in ipairs(grades) do\n        for letter, gpa in pairs(range)\
    \ do\n            if grade >= gpa then\n                table.insert(letter_grades,\
    \ letter)\n                break\n            end\n        end\n    end\n    return\
    \ letter_grades\nend", "  local result = {}\n  for i = 1, #grades do\n    local\
    \ grade = grades[i]\n    if grade >= 4.0 then\n      result[i] = 'A+'\n    elseif\
    \ grade >= 3.7 then\n      result[i] = 'A'\n    elseif grade >= 3.3 then\n   \
    \   result[i] = 'A-'\n    elseif grade >= 3.0 then\n      result[i] = 'B+'\n \
    \   elseif grade >= 2.7 then\n      result[i] = 'B'\n    elseif grade >= 2.3 then\n\
    \      result[i] = 'B-'\n    elseif grade >= 2.0 then\n      result[i] = 'C+'\n\
    \    elseif grade >= 1.7 then\n      result[i] = 'C'\n    elseif grade >= 1.3\
    \ then\n      result[i] = 'C-'\n    elseif grade >= 1.0 then\n      result[i]\
    \ = 'D+'\n    elseif grade >= 0.7 then\n      result[i] = 'D'\n    elseif grade\
    \ >= 0.0 then\n      result[i] = 'D-'\n    elseif grade >= 0.0 then\n      result[i]\
    \ = 'E'\n    end\n  end\n  return result\nend", "    local letter_grades = {}\n\
    \    for _, gpa in ipairs(grades) do\n        if gpa >= 4.0 then\n           \
    \ table.insert(letter_grades, 'A+')\n        elseif gpa >= 3.7 then\n        \
    \    table.insert(letter_grades, 'A')\n        elseif gpa >= 3.3 then\n      \
    \      table.insert(letter_grades, 'A-')\n        elseif gpa >= 3.0 then\n   \
    \         table.insert(letter_grades, 'B+')\n        elseif gpa >= 2.7 then\n\
    \            table.insert(letter_grades, 'B')\n        elseif gpa >= 2.3 then\n\
    \            table.insert(letter_grades, 'B-')\n        elseif gpa >= 2.0 then\n\
    \            table.insert(letter_grades, 'C+')\n        elseif gpa >= 1.7 then\n\
    \            table.insert(letter_grades, 'C')\n        elseif gpa >= 1.3 then\n\
    \            table.insert(letter_grades, 'C-')\n        elseif gpa >= 1.0 then\n\
    \            table.insert(letter_grades, 'D+')\n        elseif gpa >= 0.7 then\n\
    \            table.insert(letter_grades, 'D')\n        elseif gpa >= 0.0 then\n\
    \            table.insert(letter_grades, 'D-')\n        else\n            table.insert(letter_grades,\
    \ 'E')\n        end\n    end\n    return letter_grades\nend", "  local output\
    \ = {}\n  for i, grade in ipairs(grades) do\n    if grade >= 4.0 then\n      output[i]\
    \ = 'A+'\n    elseif grade >= 3.7 then\n      output[i] = 'A'\n    elseif grade\
    \ >= 3.3 then\n      output[i] = 'A-'\n    elseif grade >= 3.0 then\n      output[i]\
    \ = 'B+'\n    elseif grade >= 2.7 then\n      output[i] = 'B'\n    elseif grade\
    \ >= 2.3 then\n      output[i] = 'B-'\n    elseif grade >= 2.0 then\n      output[i]\
    \ = 'C+'\n    elseif grade >= 1.7 then\n      output[i] = 'C'\n    elseif grade\
    \ >= 1.3 then\n      output[i] = 'C-'\n    elseif grade >= 1.0 then\n      output[i]\
    \ = 'D+'\n    elseif grade >= 0.7 then\n      output[i] = 'D'\n    elseif grade\
    \ >= 0.0 then\n      output[i] = 'D-'\n    else\n      output[i] = 'E'\n    end\n\
    \  end\n  return output\nend", "    local letter_grades = {}\n    for _, grade\
    \ in ipairs(grades) do\n        local letter_grade = \"E\"\n        if grade ==\
    \ 4.0 then\n            letter_grade = \"A+\"\n        elseif grade > 3.7 then\n\
    \            letter_grade = \"A\"\n        elseif grade > 3.3 then\n         \
    \   letter_grade = \"A-\"\n        elseif grade > 3.0 then\n            letter_grade\
    \ = \"B+\"\n        elseif grade > 2.7 then\n            letter_grade = \"B\"\n\
    \        elseif grade > 2.3 then\n            letter_grade = \"B-\"\n        elseif\
    \ grade > 2.0 then\n            letter_grade = \"C+\"\n        elseif grade >\
    \ 1.7 then\n            letter_grade = \"C\"\n        elseif grade > 1.3 then\n\
    \            letter_grade = \"C-\"\n        elseif grade > 1.0 then\n        \
    \    letter_grade = \"D+\"\n        elseif grade > 0.7 then\n            letter_grade\
    \ = \"D\"\n        elseif grade > 0.0 then\n            letter_grade = \"D-\"\n\
    \        end\n        table.insert(letter_grades, letter_grade)\n    end\n   \
    \ return letter_grades\nend", "    local grade_table = {}\n    for k, v in pairs(grades)\
    \ do\n        if v >= 4.0 then\n            table.insert(grade_table, 'A+')\n\
    \        elseif v >= 3.7 then\n            table.insert(grade_table, 'A')\n  \
    \      elseif v >= 3.3 then\n            table.insert(grade_table, 'A-')\n   \
    \     elseif v >= 3.0 then\n            table.insert(grade_table, 'B+')\n    \
    \    elseif v >= 2.7 then\n            table.insert(grade_table, 'B')\n      \
    \  elseif v >= 2.3 then\n            table.insert(grade_table, 'B-')\n       \
    \ elseif v >= 2.0 then\n            table.insert(grade_table, 'C+')\n        elseif\
    \ v >= 1.7 then\n            table.insert(grade_table, 'C')\n        elseif v\
    \ >= 1.3 then\n            table.insert(grade_table, 'C-')\n        elseif v >=\
    \ 1.0 then\n            table.insert(grade_table, 'D+')\n        elseif v >= 0.7\
    \ then\n            table.insert(grade_table, 'D')\n        elseif v >= 0.0 then\n\
    \            table.insert(grade_table, 'D-')\n        else\n            table.insert(grade_table,\
    \ 'E')\n        end\n    end\n    return grade_table\nend", "    local letter_grades\
    \ = {}\n    for _, gpa in ipairs(grades) do\n        if gpa >= 4.0 then\n    \
    \        table.insert(letter_grades, 'A+')\n        elseif gpa >= 3.7 then\n \
    \           table.insert(letter_grades, 'A')\n        elseif gpa >= 3.3 then\n\
    \            table.insert(letter_grades, 'A-')\n        elseif gpa >= 3.0 then\n\
    \            table.insert(letter_grades, 'B+')\n        elseif gpa >= 2.7 then\n\
    \            table.insert(letter_grades, 'B')\n        elseif gpa >= 2.3 then\n\
    \            table.insert(letter_grades, 'B-')\n        elseif gpa >= 2.0 then\n\
    \            table.insert(letter_grades, 'C+')\n        elseif gpa >= 1.7 then\n\
    \            table.insert(letter_grades, 'C')\n        elseif gpa >= 1.3 then\n\
    \            table.insert(letter_grades, 'C-')\n        elseif gpa >= 1.0 then\n\
    \            table.insert(letter_grades, 'D+')\n        elseif gpa >= 0.7 then\n\
    \            table.insert(letter_grades, 'D')\n        elseif gpa >= 0.0 then\n\
    \            table.insert(letter_grades, 'D-')\n        else\n            table.insert(letter_grades,\
    \ 'E')\n        end\n    end\n    return letter_grades\nend", "    local letter_grades\
    \ = {}\n    for index, value in ipairs(grades) do\n        if (value == 4.0) then\n\
    \            letter_grades[index] = 'A+'\n        elseif (value > 3.7) then\n\
    \            letter_grades[index] = 'A'\n        elseif (value > 3.3) then\n \
    \           letter_grades[index] = 'A-'\n        elseif (value > 3.0) then\n \
    \           letter_grades[index] = 'B+'\n        elseif (value > 2.7) then\n \
    \           letter_grades[index] = 'B'\n        elseif (value > 2.3) then\n  \
    \          letter_grades[index] = 'B-'\n        elseif (value > 2.0) then\n  \
    \          letter_grades[index] = 'C+'\n        elseif (value > 1.7) then\n  \
    \          letter_grades[index] = 'C'\n        elseif (value > 1.3) then\n   \
    \         letter_grades[index] = 'C-'\n        elseif (value > 1.0) then\n   \
    \         letter_grades[index] = 'D+'\n        elseif (value > 0.7) then\n   \
    \         letter_grades[index] = 'D'\n        elseif (value > 0.0) then\n    \
    \        letter_grades[index] = 'D-'\n        else\n            letter_grades[index]\
    \ = 'E'\n        end\n    end\n    return letter_grades\nend", "\tassert(grades\
    \ ~= nil, \"An error has occurred! The input value is nil.\")\n\tlocal t = {}\n\
    \tfor i, v in ipairs(grades) do\n\t\tassert(v >= 0, \"An error has occurred! The\
    \ input value is less than 0.\")\n\t\tif v >= 4.0 then t[i] = 'A+'\n\t\telseif\
    \ v >= 3.7 then t[i] = 'A'\n\t\telseif v >= 3.3 then t[i] = 'A-'\n\t\telseif v\
    \ >= 3.0 then t[i] = 'B+'\n\t\telseif v >= 2.7 then t[i] = 'B'\n\t\telseif v >=\
    \ 2.3 then t[i] = 'B-'\n\t\telseif v >= 2.0 then t[i] = 'C+'\n\t\telseif v >=\
    \ 1.7 then t[i] = 'C'\n\t\telseif v >= 1.3 then t[i] = 'C-'\n\t\telseif v >= 1.0\
    \ then t[i] = 'D+'\n\t\telseif v >= 0.7 then t[i] = 'D'\n\t\telseif v >= 0.0 then\
    \ t[i] = 'D-'\n\t\telse t[i] = 'E'\n\t\tend\n\tend\n\treturn t\nend", "    local\
    \ res = {}\n    for i, g in ipairs(grades) do\n        if g >= 4.0 then\n    \
    \        res[i] = 'A+'\n        elseif g >= 3.7 then\n            res[i] = 'A'\n\
    \        elseif g >= 3.3 then\n            res[i] = 'A-'\n        elseif g >=\
    \ 3.0 then\n            res[i] = 'B+'\n        elseif g >= 2.7 then\n        \
    \    res[i] = 'B'\n        elseif g >= 2.3 then\n            res[i] = 'B-'\n \
    \       elseif g >= 2.0 then\n            res[i] = 'C+'\n        elseif g >= 1.7\
    \ then\n            res[i] = 'C'\n        elseif g >= 1.3 then\n            res[i]\
    \ = 'C-'\n        elseif g >= 1.0 then\n            res[i] = 'D+'\n        elseif\
    \ g >= 0.7 then\n            res[i] = 'D'\n        elseif g >= 0.0 then\n    \
    \        res[i] = 'D-'\n        else\n            res[i] = 'E'\n        end\n\
    \    end\n    return res\nend", "  local out = {}\n  for _,v in ipairs(grades)\
    \ do\n    local letter = 'E'\n    if v > 4.0 then\n      letter = 'A+'\n    elseif\
    \ v > 3.7 then\n      letter = 'A'\n    elseif v > 3.3 then\n      letter = 'A-'\n\
    \    elseif v > 3.0 then\n      letter = 'B+'\n    elseif v > 2.7 then\n     \
    \ letter = 'B'\n    elseif v > 2.3 then\n      letter = 'B-'\n    elseif v > 2.0\
    \ then\n      letter = 'C+'\n    elseif v > 1.7 then\n      letter = 'C'\n   \
    \ elseif v > 1.3 then\n      letter = 'C-'\n    elseif v > 1.0 then\n      letter\
    \ = 'D+'\n    elseif v > 0.7 then\n      letter = 'D'\n    elseif v > 0.0 then\n\
    \      letter = 'D-'\n    end\n    table.insert(out, letter)\n  end\n  return\
    \ out\nend", "    assert(type(grades) == \"table\",\n\t   \"Expected a table of\
    \ grades\")\n    local result = {}\n    for k, grade in ipairs(grades) do\n\t\
    if grade >= 4.0 then\n\t    result[k] = \"A+\"\n\telseif grade >= 3.7 then\n\t\
    \    result[k] = \"A\"\n\telseif grade >= 3.3 then\n\t    result[k] = \"A-\"\n\
    \telseif grade >= 3.0 then\n\t    result[k] = \"B+\"\n\telseif grade >= 2.7 then\n\
    \t    result[k] = \"B\"\n\telseif grade >= 2.3 then\n\t    result[k] = \"B-\"\n\
    \telseif grade >= 2.0 then\n\t    result[k] = \"C+\"\n\telseif grade >= 1.7 then\n\
    \t    result[k] = \"C\"\n\telseif grade >= 1.3 then\n\t    result[k] = \"C-\"\n\
    \telseif grade >= 1.0 then\n\t    result[k] = \"D+\"\n\telseif grade >= 0.7 then\n\
    \t    result[k] = \"D\"\n\telseif grade >= 0.0 then\n\t    result[k] = \"D-\"\n\
    \telse\n\t    result[k] = \"E\"\n\tend\n    end\n    return result\nend", "  \
    \  return grades:map(function(grade)\n        if grade >= 4.0 then return 'A+'\n\
    \        elseif grade >= 3.7 then return 'A'\n        elseif grade >= 3.3 then\
    \ return 'A-'\n        elseif grade >= 3.0 then return 'B+'\n        elseif grade\
    \ >= 2.7 then return 'B'\n        elseif grade >= 2.3 then return 'B-'\n     \
    \   elseif grade >= 2.0 then return 'C+'\n        elseif grade >= 1.7 then return\
    \ 'C'\n        elseif grade >= 1.3 then return 'C-'\n        elseif grade >= 1.0\
    \ then return 'D+'\n        elseif grade >= 0.7 then return 'D'\n        elseif\
    \ grade >= 0.0 then return 'D-'\n        else return 'E'\n        end\n    end)\n\
    end", end, "\tlocal letter_grades = {}\n\tfor _, v in ipairs(grades) do\n\t\t\
    if v == 4.0 then\n\t\t\ttable.insert(letter_grades, 'A+')\n\t\telseif v > 3.7\
    \ then\n\t\t\ttable.insert(letter_grades, 'A')\n\t\telseif v > 3.3 then\n\t\t\t\
    table.insert(letter_grades, 'A-')\n\t\telseif v > 3.0 then\n\t\t\ttable.insert(letter_grades,\
    \ 'B+')\n\t\telseif v > 2.7 then\n\t\t\ttable.insert(letter_grades, 'B')\n\t\t\
    elseif v > 2.3 then\n\t\t\ttable.insert(letter_grades, 'B-')\n\t\telseif v > 2.0\
    \ then\n\t\t\ttable.insert(letter_grades, 'C+')\n\t\telseif v > 1.7 then\n\t\t\
    \ttable.insert(letter_grades, 'C')\n\t\telseif v > 1.3 then\n\t\t\ttable.insert(letter_grades,\
    \ 'C-')\n\t\telseif v > 1.0 then\n\t\t\ttable.insert(letter_grades, 'D+')\n\t\t\
    elseif v > 0.7 then\n\t\t\ttable.insert(letter_grades, 'D')\n\t\telseif v > 0.0\
    \ then\n\t\t\ttable.insert(letter_grades, 'D-')\n\t\telse\n\t\t\ttable.insert(letter_grades,\
    \ 'E')\n\t\tend\n\tend\n\treturn letter_grades\nend", "    local grades_table\
    \ = {}\n    for i, grade in ipairs(grades) do\n        if grade >= 4.0 then\n\
    \            grades_table[i] = 'A+'\n        elseif grade >= 3.7 then\n      \
    \      grades_table[i] = 'A'\n        elseif grade >= 3.3 then\n            grades_table[i]\
    \ = 'A-'\n        elseif grade >= 3.0 then\n            grades_table[i] = 'B+'\n\
    \        elseif grade >= 2.7 then\n            grades_table[i] = 'B'\n       \
    \ elseif grade >= 2.3 then\n            grades_table[i] = 'B-'\n        elseif\
    \ grade >= 2.0 then\n            grades_table[i] = 'C+'\n        elseif grade\
    \ >= 1.7 then\n            grades_table[i] = 'C'\n        elseif grade >= 1.3\
    \ then\n            grades_table[i] = 'C-'\n        elseif grade >= 1.0 then\n\
    \            grades_table[i] = 'D+'\n        elseif grade >= 0.7 then\n      \
    \      grades_table[i] = 'D'\n        elseif grade >= 0.0 then\n            grades_table[i]\
    \ = 'D-'\n        else\n            grades_table[i] = 'E'\n        end\n    end\n\
    \    return grades_table\nend", "\treturn table.map(function(x) return grade(x)\
    \ end, grades)\nend", "  local function letter_grade(grade)\n    if grade >= 4.0\
    \ then\n      return 'A+'\n    elseif grade >= 3.7 then\n      return 'A'\n  \
    \  elseif grade >= 3.3 then\n      return 'A-'\n    elseif grade >= 3.0 then\n\
    \      return 'B+'\n    elseif grade >= 2.7 then\n      return 'B'\n    elseif\
    \ grade >= 2.3 then\n      return 'B-'\n    elseif grade >= 2.0 then\n      return\
    \ 'C+'\n    elseif grade >= 1.7 then\n      return 'C'\n    elseif grade >= 1.3\
    \ then\n      return 'C-'\n    elseif grade >= 1.0 then\n      return 'D+'\n \
    \   elseif grade >= 0.7 then\n      return 'D'\n    elseif grade >= 0.0 then\n\
    \      return 'D-'\n    else\n      return 'E'\n    end\n  end\n  local converted_grades\
    \ = {}\n  for i, grade in ipairs(grades) do\n    converted_grades[i] = letter_grade(grade)\n\
    \  end\n  return converted_grades\nend", "    -- Write your code here\nend", " \
    \ local letter_grades = {}\n  for _, gpa in ipairs(grades) do\n    if gpa == 4.0\
    \ then\n      table.insert(letter_grades, 'A+')\n    elseif gpa > 3.7 then\n \
    \     table.insert(letter_grades, 'A')\n    elseif gpa > 3.3 then\n      table.insert(letter_grades,\
    \ 'A-')\n    elseif gpa > 3.0 then\n      table.insert(letter_grades, 'B+')\n\
    \    elseif gpa > 2.7 then\n      table.insert(letter_grades, 'B')\n    elseif\
    \ gpa > 2.3 then\n      table.insert(letter_grades, 'B-')\n    elseif gpa > 2.0\
    \ then\n      table.insert(letter_grades, 'C+')\n    elseif gpa > 1.7 then\n \
    \     table.insert(letter_grades, 'C')\n    elseif gpa > 1.3 then\n      table.insert(letter_grades,\
    \ 'C-')\n    elseif gpa > 1.0 then\n      table.insert(letter_grades, 'D+')\n\
    \    elseif gpa > 0.7 then\n      table.insert(letter_grades, 'D')\n    elseif\
    \ gpa > 0.0 then\n      table.insert(letter_grades, 'D-')\n    else\n      table.insert(letter_grades,\
    \ 'E')\n    end\n  end\n  return letter_grades\nend", "    local letter_grades\
    \ = {}\n    for _, grade in ipairs(grades) do\n        if grade == 4.0 then\n\
    \            table.insert(letter_grades, 'A+')\n        elseif grade > 3.7 then\n\
    \            table.insert(letter_grades, 'A')\n        elseif grade > 3.3 then\n\
    \            table.insert(letter_grades, 'A-')\n        elseif grade > 3.0 then\n\
    \            table.insert(letter_grades, 'B+')\n        elseif grade > 2.7 then\n\
    \            table.insert(letter_grades, 'B')\n        elseif grade > 2.3 then\n\
    \            table.insert(letter_grades, 'B-')\n        elseif grade > 2.0 then\n\
    \            table.insert(letter_grades, 'C+')\n        elseif grade > 1.7 then\n\
    \            table.insert(letter_grades, 'C')\n        elseif grade > 1.3 then\n\
    \            table.insert(letter_grades, 'C-')\n        elseif grade > 1.0 then\n\
    \            table.insert(letter_grades, 'D+')\n        elseif grade > 0.7 then\n\
    \            table.insert(letter_grades, 'D')\n        elseif grade > 0.0 then\n\
    \            table.insert(letter_grades, 'D-')\n        else\n            table.insert(letter_grades,\
    \ 'E')\n        end\n    end\n    return letter_grades\nend", "\tlocal result\
    \ = {}\n\tfor _, value in ipairs(grades) do\n\t\tif value == 4.0 then\n\t\t\t\
    table.insert(result, 'A+')\n\t\telseif value > 3.7 then\n\t\t\ttable.insert(result,\
    \ 'A')\n\t\telseif value > 3.3 then\n\t\t\ttable.insert(result, 'A-')\n\t\telseif\
    \ value > 3.0 then\n\t\t\ttable.insert(result, 'B+')\n\t\telseif value > 2.7 then\n\
    \t\t\ttable.insert(result, 'B')\n\t\telseif value > 2.3 then\n\t\t\ttable.insert(result,\
    \ 'B-')\n\t\telseif value > 2.0 then\n\t\t\ttable.insert(result, 'C+')\n\t\telseif\
    \ value > 1.7 then\n\t\t\ttable.insert(result, 'C')\n\t\telseif value > 1.3 then\n\
    \t\t\ttable.insert(result, 'C-')\n\t\telseif value > 1.0 then\n\t\t\ttable.insert(result,\
    \ 'D+')\n\t\telseif value > 0.7 then\n\t\t\ttable.insert(result, 'D')\n\t\telseif\
    \ value > 0.0 then\n\t\t\ttable.insert(result, 'D-')\n\t\telse\n\t\t\ttable.insert(result,\
    \ 'E')\n\t\tend\n\tend\n\treturn result\nend", "  local letter_grades = {}\n \
    \ for i, grade in ipairs(grades) do\n    if grade >= 4.0 then\n      letter_grades[i]\
    \ = 'A+'\n    elseif grade >= 3.7 then\n      letter_grades[i] = 'A'\n    elseif\
    \ grade >= 3.3 then\n      letter_grades[i] = 'A-'\n    elseif grade >= 3.0 then\n\
    \      letter_grades[i] = 'B+'\n    elseif grade >= 2.7 then\n      letter_grades[i]\
    \ = 'B'\n    elseif grade >= 2.3 then\n      letter_grades[i] = 'B-'\n    elseif\
    \ grade >= 2.0 then\n      letter_grades[i] = 'C+'\n    elseif grade >= 1.7 then\n\
    \      letter_grades[i] = 'C'\n    elseif grade >= 1.3 then\n      letter_grades[i]\
    \ = 'C-'\n    elseif grade >= 1.0 then\n      letter_grades[i] = 'D+'\n    elseif\
    \ grade >= 0.7 then\n      letter_grades[i] = 'D'\n    elseif grade >= 0.0 then\n\
    \      letter_grades[i] = 'D-'\n    else\n      letter_grades[i] = 'E'\n    end\n\
    \  end\n  return letter_grades\nend", "\tlocal result = {}\n\tfor _,grade in ipairs(grades)\
    \ do\n\t\tif grade >= 4.0 then\n\t\t\ttable.insert(result, 'A+')\n\t\telseif grade\
    \ >= 3.7 then\n\t\t\ttable.insert(result, 'A')\n\t\telseif grade >= 3.3 then\n\
    \t\t\ttable.insert(result, 'A-')\n\t\telseif grade >= 3.0 then\n\t\t\ttable.insert(result,\
    \ 'B+')\n\t\telseif grade >= 2.7 then\n\t\t\ttable.insert(result, 'B')\n\t\telseif\
    \ grade >= 2.3 then\n\t\t\ttable.insert(result, 'B-')\n\t\telseif grade >= 2.0\
    \ then\n\t\t\ttable.insert(result, 'C+')\n\t\telseif grade >= 1.7 then\n\t\t\t\
    table.insert(result, 'C')\n\t\telseif grade >= 1.3 then\n\t\t\ttable.insert(result,\
    \ 'C-')\n\t\telseif grade >= 1.0 then\n\t\t\ttable.insert(result, 'D+')\n\t\t\
    elseif grade >= 0.7 then\n\t\t\ttable.insert(result, 'D')\n\t\telseif grade >=\
    \ 0.0 then\n\t\t\ttable.insert(result, 'D-')\n\t\telse\n\t\t\ttable.insert(result,\
    \ 'E')\n\t\tend\n\tend\n\treturn result\nend", "    if not grades then return\
    \ nil end\n    local letter_grades = {}\n    local grade_level = {\"A+\", \"A\"\
    , \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\"\
    , \"E\"}\n    local grade_cutoff = {4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3,\
    \ 1.0, 0.7, 0.0, 0.0}\n    for k, v in pairs(grades) do\n        for i = 1, #grade_cutoff\
    \ do\n            if grade_cutoff[i] <= v then\n                letter_grades[k]\
    \ = grade_level[i]\n                break\n            end\n        end\n    end\n\
    \    return letter_grades\nend", "    local grade_map = {\n        ['A+'] = 4.0,\n\
    \        ['A'] = 3.7,\n        ['A-'] = 3.3,\n        ['B+'] = 3.0,\n        ['B']\
    \ = 2.7,\n        ['B-'] = 2.3,\n        ['C+'] = 2.0,\n        ['C'] = 1.7,\n\
    \        ['C-'] = 1.3,\n        ['D+'] = 1.0,\n        ['D'] = 0.7,\n        ['D-']\
    \ = 0.0,\n        ['E'] = 0.0\n    }\n    -- don't forget to call vmap!\n    return\
    \ vmap(function(g)\n        for letter, gpa in pairs(grade_map) do\n         \
    \   if g >= gpa then\n                return letter\n            end\n       \
    \ end\n    end, grades)\nend", "    local grade_table = {}\n    for i = 1, #grades\
    \ do\n        if grades[i] > 3.7 then\n            grade_table[i] = 'A+'\n   \
    \     elseif grades[i] > 3.3 then\n            grade_table[i] = 'A'\n        elseif\
    \ grades[i] > 3.0 then\n            grade_table[i] = 'A-'\n        elseif grades[i]\
    \ > 2.7 then\n            grade_table[i] = 'B+'\n        elseif grades[i] > 2.3\
    \ then\n            grade_table[i] = 'B'\n        elseif grades[i] > 2.0 then\n\
    \            grade_table[i] = 'B-'\n        elseif grades[i] > 1.7 then\n    \
    \        grade_table[i] = 'C+'\n        elseif grades[i] > 1.3 then\n        \
    \    grade_table[i] = 'C'\n        elseif grades[i] > 1.0 then\n            grade_table[i]\
    \ = 'C-'\n        elseif grades[i] > 0.7 then\n            grade_table[i] = 'D+'\n\
    \        elseif grades[i] > 0.0 then\n            grade_table[i] = 'D'\n     \
    \   elseif grades[i] == 0.0 then\n            grade_table[i] = 'D-'\n        elseif\
    \ grades[i] < 0.0 then\n            grade_table[i] = 'E'\n        end\n    end\n\
    \    return grade_table\nend", "  local grades_map = {}\n  for _, value in ipairs(grades)\
    \ do\n    if value >= 4.0 then\n      grades_map[#grades_map + 1] = 'A+'\n   \
    \ elseif value > 3.7 then\n      grades_map[#grades_map + 1] = 'A'\n    elseif\
    \ value > 3.3 then\n      grades_map[#grades_map + 1] = 'A-'\n    elseif value\
    \ > 3.0 then\n      grades_map[#grades_map + 1] = 'B+'\n    elseif value > 2.7\
    \ then\n      grades_map[#grades_map + 1] = 'B'\n    elseif value > 2.3 then\n\
    \      grades_map[#grades_map + 1] = 'B-'\n    elseif value > 2.0 then\n     \
    \ grades_map[#grades_map + 1] = 'C+'\n    elseif value > 1.7 then\n      grades_map[#grades_map\
    \ + 1] = 'C'\n    elseif value > 1.3 then\n      grades_map[#grades_map + 1] =\
    \ 'C-'\n    elseif value > 1.0 then\n      grades_map[#grades_map + 1] = 'D+'\n\
    \    elseif value > 0.7 then\n      grades_map[#grades_map + 1] = 'D'\n    elseif\
    \ value > 0.0 then\n      grades_map[#grades_map + 1] = 'D-'\n    else\n     \
    \ grades_map[#grades_map + 1] = 'E'\n    end\n  end\n  return grades_map\nend",
  "  local letters = {}\n  for _, g in ipairs(grades) do\n    if g > 3.7 then\n  \
    \    table.insert(letters, 'A+')\n    elseif g > 3.3 then\n      table.insert(letters,\
    \ 'A')\n    elseif g > 3.0 then\n      table.insert(letters, 'A-')\n    elseif\
    \ g > 2.7 then\n      table.insert(letters, 'B+')\n    elseif g > 2.3 then\n \
    \     table.insert(letters, 'B')\n    elseif g > 2.0 then\n      table.insert(letters,\
    \ 'B-')\n    elseif g > 1.7 then\n      table.insert(letters, 'C+')\n    elseif\
    \ g > 1.3 then\n      table.insert(letters, 'C')\n    elseif g > 1.0 then\n  \
    \    table.insert(letters, 'C-')\n    elseif g > 0.7 then\n      table.insert(letters,\
    \ 'D+')\n    elseif g > 0.0 then\n      table.insert(letters, 'D')\n    elseif\
    \ g == 0.0 then\n      table.insert(letters, 'D-')\n    else\n      table.insert(letters,\
    \ 'E')\n    end\n  end\n  return letters\nend", "    local g = {}\n    for i =\
    \ 1, #grades do\n        if grades[i] >= 4.0 then\n            g[i] = 'A+'\n \
    \       elseif grades[i] >= 3.7 then\n            g[i] = 'A'\n        elseif grades[i]\
    \ >= 3.3 then\n            g[i] = 'A-'\n        elseif grades[i] >= 3.0 then\n\
    \            g[i] = 'B+'\n        elseif grades[i] >= 2.7 then\n            g[i]\
    \ = 'B'\n        elseif grades[i] >= 2.3 then\n            g[i] = 'B-'\n     \
    \   elseif grades[i] >= 2.0 then\n            g[i] = 'C+'\n        elseif grades[i]\
    \ >= 1.7 then\n            g[i] = 'C'\n        elseif grades[i] >= 1.3 then\n\
    \            g[i] = 'C-'\n        elseif grades[i] >= 1.0 then\n            g[i]\
    \ = 'D+'\n        elseif grades[i] >= 0.7 then\n            g[i] = 'D'\n     \
    \   elseif grades[i] >= 0.0 then\n            g[i] = 'D-'\n        elseif grades[i]\
    \ >= 0.0 then\n            g[i] = 'E'\n        end\n    end\n    return g\nend",
  "    -- body\n    local letter_grades = {}\n    for i, g in ipairs(grades) do\n\
    \        if g >= 4.0 then\n            letter_grades[i] = 'A+'\n        elseif\
    \ g >= 3.7 then\n            letter_grades[i] = 'A'\n        elseif g >= 3.3 then\n\
    \            letter_grades[i] = 'A-'\n        elseif g >= 3.0 then\n         \
    \   letter_grades[i] = 'B+'\n        elseif g >= 2.7 then\n            letter_grades[i]\
    \ = 'B'\n        elseif g >= 2.3 then\n            letter_grades[i] = 'B-'\n \
    \       elseif g >= 2.0 then\n            letter_grades[i] = 'C+'\n        elseif\
    \ g >= 1.7 then\n            letter_grades[i] = 'C'\n        elseif g >= 1.3 then\n\
    \            letter_grades[i] = 'C-'\n        elseif g >= 1.0 then\n         \
    \   letter_grades[i] = 'D+'\n        elseif g >= 0.7 then\n            letter_grades[i]\
    \ = 'D'\n        elseif g >= 0.0 then\n            letter_grades[i] = 'D-'\n \
    \       else\n            letter_grades[i] = 'E'\n        end\n    end\n    return\
    \ letter_grades\nend", "    local letter_grades = {}\n    for i = 1, #grades do\n\
    \        if grades[i] >= 4.0 then\n            letter_grades[i] = 'A+'\n     \
    \   elseif grades[i] >= 3.7 then\n            letter_grades[i] = 'A'\n       \
    \ elseif grades[i] >= 3.3 then\n            letter_grades[i] = 'A-'\n        elseif\
    \ grades[i] >= 3.0 then\n            letter_grades[i] = 'B+'\n        elseif grades[i]\
    \ >= 2.7 then\n            letter_grades[i] = 'B'\n        elseif grades[i] >=\
    \ 2.3 then\n            letter_grades[i] = 'B-'\n        elseif grades[i] >= 2.0\
    \ then\n            letter_grades[i] = 'C+'\n        elseif grades[i] >= 1.7 then\n\
    \            letter_grades[i] = 'C'\n        elseif grades[i] >= 1.3 then\n  \
    \          letter_grades[i] = 'C-'\n        elseif grades[i] >= 1.0 then\n   \
    \         letter_grades[i] = 'D+'\n        elseif grades[i] >= 0.7 then\n    \
    \        letter_grades[i] = 'D'\n        elseif grades[i] >= 0.0 then\n      \
    \      letter_grades[i] = 'D-'\n        else\n            letter_grades[i] = 'E'\n\
    \        end\n    end\n    return letter_grades\nend", "    local lgrades = {}\n\
    \    for k,v in pairs(grades) do\n        if v >= 4.0 then\n            lgrades[k]\
    \ = 'A+'\n        elseif v >= 3.7 then\n            lgrades[k] = 'A'\n       \
    \ elseif v >= 3.3 then\n            lgrades[k] = 'A-'\n        elseif v >= 3.0\
    \ then\n            lgrades[k] = 'B+'\n        elseif v >= 2.7 then\n        \
    \    lgrades[k] = 'B'\n        elseif v >= 2.3 then\n            lgrades[k] =\
    \ 'B-'\n        elseif v >= 2.0 then\n            lgrades[k] = 'C+'\n        elseif\
    \ v >= 1.7 then\n            lgrades[k] = 'C'\n        elseif v >= 1.3 then\n\
    \            lgrades[k] = 'C-'\n        elseif v >= 1.0 then\n            lgrades[k]\
    \ = 'D+'\n        elseif v >= 0.7 then\n            lgrades[k] = 'D'\n       \
    \ elseif v >= 0.0 then\n            lgrades[k] = 'D-'\n        else\n        \
    \    lgrades[k] = 'E'\n        end\n    end\n    return lgrades\nend", "    local\
    \ letter_grades = {}\n    for i = 1, #grades do\n        -- YOUR CODE HERE\n \
    \   end\n    return letter_grades\nend", "    local grade_list = {}\n    for k,v\
    \ in pairs(grades) do\n        if v >= 4.0 then\n            table.insert(grade_list,\
    \ 'A+')\n        elseif v >= 3.7 then\n            table.insert(grade_list, 'A')\n\
    \        elseif v >= 3.3 then\n            table.insert(grade_list, 'A-')\n  \
    \      elseif v >= 3.0 then\n            table.insert(grade_list, 'B+')\n    \
    \    elseif v >= 2.7 then\n            table.insert(grade_list, 'B')\n       \
    \ elseif v >= 2.3 then\n            table.insert(grade_list, 'B-')\n        elseif\
    \ v >= 2.0 then\n            table.insert(grade_list, 'C+')\n        elseif v\
    \ >= 1.7 then\n            table.insert(grade_list, 'C')\n        elseif v >=\
    \ 1.3 then\n            table.insert(grade_list, 'C-')\n        elseif v >= 1.0\
    \ then\n            table.insert(grade_list, 'D+')\n        elseif v >= 0.7 then\n\
    \            table.insert(grade_list, 'D')\n        elseif v >= 0.0 then\n   \
    \         table.insert(grade_list, 'D-')\n        else\n            table.insert(grade_list,\
    \ 'E')\n        end\n    end\n    return grade_list\nend", "    local letter_grades\
    \ = {}\n    for i = 1, #grades do\n        if grades[i] >= 4.0 then\n        \
    \    letter_grades[i] = 'A+'\n        elseif grades[i] >= 3.7 then\n         \
    \   letter_grades[i] = 'A'\n        elseif grades[i] >= 3.3 then\n           \
    \ letter_grades[i] = 'A-'\n        elseif grades[i] >= 3.0 then\n            letter_grades[i]\
    \ = 'B+'\n        elseif grades[i] >= 2.7 then\n            letter_grades[i] =\
    \ 'B'\n        elseif grades[i] >= 2.3 then\n            letter_grades[i] = 'B-'\n\
    \        elseif grades[i] >= 2.0 then\n            letter_grades[i] = 'C+'\n \
    \       elseif grades[i] >= 1.7 then\n            letter_grades[i] = 'C'\n   \
    \     elseif grades[i] >= 1.3 then\n            letter_grades[i] = 'C-'\n    \
    \    elseif grades[i] >= 1.0 then\n            letter_grades[i] = 'D+'\n     \
    \   elseif grades[i] >= 0.7 then\n            letter_grades[i] = 'D'\n       \
    \ elseif grades[i] >= 0.0 then\n            letter_grades[i] = 'D-'\n        elseif\
    \ grades[i] < 0.0 then\n            letter_grades[i] = 'E'\n        end\n    end\n\
    \    return letter_grades\nend", "    local out = {}\n    for i, v in ipairs(grades)\
    \ do\n        if v >= 4.0 then\n            out[i] = 'A+'\n        elseif v >=\
    \ 3.7 then\n            out[i] = 'A'\n        elseif v >= 3.3 then\n         \
    \   out[i] = 'A-'\n        elseif v >= 3.0 then\n            out[i] = 'B+'\n \
    \       elseif v >= 2.7 then\n            out[i] = 'B'\n        elseif v >= 2.3\
    \ then\n            out[i] = 'B-'\n        elseif v >= 2.0 then\n            out[i]\
    \ = 'C+'\n        elseif v >= 1.7 then\n            out[i] = 'C'\n        elseif\
    \ v >= 1.3 then\n            out[i] = 'C-'\n        elseif v >= 1.0 then\n   \
    \         out[i] = 'D+'\n        elseif v >= 0.7 then\n            out[i] = 'D'\n\
    \        elseif v >= 0.0 then\n            out[i] = 'D-'\n        else\n     \
    \       out[i] = 'E'\n        end\n    end\n    return out\nend", "    local new_grades\
    \ = {}\n    for i, grade in ipairs(grades) do\n        if grade >= 4.0 then\n\
    \            new_grades[i] = 'A+'\n        elseif grade >= 3.7 then\n        \
    \    new_grades[i] = 'A'\n        elseif grade >= 3.3 then\n            new_grades[i]\
    \ = 'A-'\n        elseif grade >= 3.0 then\n            new_grades[i] = 'B+'\n\
    \        elseif grade >= 2.7 then\n            new_grades[i] = 'B'\n        elseif\
    \ grade >= 2.3 then\n            new_grades[i] = 'B-'\n        elseif grade >=\
    \ 2.0 then\n            new_grades[i] = 'C+'\n        elseif grade >= 1.7 then\n\
    \            new_grades[i] = 'C'\n        elseif grade >= 1.3 then\n         \
    \   new_grades[i] = 'C-'\n        elseif grade >= 1.0 then\n            new_grades[i]\
    \ = 'D+'\n        elseif grade >= 0.7 then\n            new_grades[i] = 'D'\n\
    \        elseif grade >= 0.0 then\n            new_grades[i] = 'D-'\n        else\n\
    \            new_grades[i] = 'E'\n        end\n    end\n    return new_grades\n\
    end", "  \nend", "\tlocal letter_grades = {}\n\tfor i = 1, #grades do\n\t\tif\
    \ grades[i] >= 4.0 then\n\t\t\tletter_grades[i] = 'A+'\n\t\telseif grades[i] >=\
    \ 3.7 then\n\t\t\tletter_grades[i] = 'A'\n\t\telseif grades[i] >= 3.3 then\n\t\
    \t\tletter_grades[i] = 'A-'\n\t\telseif grades[i] >= 3.0 then\n\t\t\tletter_grades[i]\
    \ = 'B+'\n\t\telseif grades[i] >= 2.7 then\n\t\t\tletter_grades[i] = 'B'\n\t\t\
    elseif grades[i] >= 2.3 then\n\t\t\tletter_grades[i] = 'B-'\n\t\telseif grades[i]\
    \ >= 2.0 then\n\t\t\tletter_grades[i] = 'C+'\n\t\telseif grades[i] >= 1.7 then\n\
    \t\t\tletter_grades[i] = 'C'\n\t\telseif grades[i] >= 1.3 then\n\t\t\tletter_grades[i]\
    \ = 'C-'\n\t\telseif grades[i] >= 1.0 then\n\t\t\tletter_grades[i] = 'D+'\n\t\t\
    elseif grades[i] >= 0.7 then\n\t\t\tletter_grades[i] = 'D'\n\t\telseif grades[i]\
    \ >= 0.0 then\n\t\t\tletter_grades[i] = 'D-'\n\t\telse\n\t\t\tletter_grades[i]\
    \ = 'E'\n\t\tend\n\tend\n\treturn letter_grades\nend", "    local letters = {}\n\
    \    for _, grade in ipairs(grades) do\n        local letter\n        if grade\
    \ == 4.0 then\n            letter = 'A+'\n        elseif grade > 3.7 then\n  \
    \          letter = 'A'\n        elseif grade > 3.3 then\n            letter =\
    \ 'A-'\n        elseif grade > 3.0 then\n            letter = 'B+'\n        elseif\
    \ grade > 2.7 then\n            letter = 'B'\n        elseif grade > 2.3 then\n\
    \            letter = 'B-'\n        elseif grade > 2.0 then\n            letter\
    \ = 'C+'\n        elseif grade > 1.7 then\n            letter = 'C'\n        elseif\
    \ grade > 1.3 then\n            letter = 'C-'\n        elseif grade > 1.0 then\n\
    \            letter = 'D+'\n        elseif grade > 0.7 then\n            letter\
    \ = 'D'\n        elseif grade > 0.0 then\n            letter = 'D-'\n        else\n\
    \            letter = 'E'\n        end\n        table.insert(letters, letter)\n\
    \    end\n    return letters\nend", "    local result = {}\n    for k,v in pairs(grades)\
    \ do\n        if v == 4.0 then\n            table.insert(result, 'A+')\n     \
    \   elseif v >= 3.7 then\n            table.insert(result, 'A')\n        elseif\
    \ v >= 3.3 then\n            table.insert(result, 'A-')\n        elseif v >= 3.0\
    \ then\n            table.insert(result, 'B+')\n        elseif v >= 2.7 then\n\
    \            table.insert(result, 'B')\n        elseif v >= 2.3 then\n       \
    \     table.insert(result, 'B-')\n        elseif v >= 2.0 then\n            table.insert(result,\
    \ 'C+')\n        elseif v >= 1.7 then\n            table.insert(result, 'C')\n\
    \        elseif v >= 1.3 then\n            table.insert(result, 'C-')\n      \
    \  elseif v >= 1.0 then\n            table.insert(result, 'D+')\n        elseif\
    \ v >= 0.7 then\n            table.insert(result, 'D')\n        elseif v >= 0.0\
    \ then\n            table.insert(result, 'D-')\n        else\n            table.insert(result,\
    \ 'E')\n        end\n    end\n    return result\nend", "    letter_grades = {}\n\
    \    for i, grade in ipairs(grades) do\n        if grade == 4.0 then\n       \
    \     table.insert(letter_grades, 'A+')\n        elseif grade > 3.7 then\n   \
    \         table.insert(letter_grades, 'A')\n        elseif grade > 3.3 then\n\
    \            table.insert(letter_grades, 'A-')\n        elseif grade > 3.0 then\n\
    \            table.insert(letter_grades, 'B+')\n        elseif grade > 2.7 then\n\
    \            table.insert(letter_grades, 'B')\n        elseif grade > 2.3 then\n\
    \            table.insert(letter_grades, 'B-')\n        elseif grade > 2.0 then\n\
    \            table.insert(letter_grades, 'C+')\n        elseif grade > 1.7 then\n\
    \            table.insert(letter_grades, 'C')\n        elseif grade > 1.3 then\n\
    \            table.insert(letter_grades, 'C-')\n        elseif grade > 1.0 then\n\
    \            table.insert(letter_grades, 'D+')\n        elseif grade > 0.7 then\n\
    \            table.insert(letter_grades, 'D')\n        elseif grade > 0.0 then\n\
    \            table.insert(letter_grades, 'D-')\n        else\n            table.insert(letter_grades,\
    \ 'E')\n        end\n    end\n    return letter_grades\nend", "    local letter_grades\
    \ = {}\n    for i, v in ipairs(grades) do\n        if v >= 4.0 then\n        \
    \    letter_grades[i] = 'A+'\n        elseif v >= 3.7 then\n            letter_grades[i]\
    \ = 'A'\n        elseif v >= 3.3 then\n            letter_grades[i] = 'A-'\n \
    \       elseif v >= 3.0 then\n            letter_grades[i] = 'B+'\n        elseif\
    \ v >= 2.7 then\n            letter_grades[i] = 'B'\n        elseif v >= 2.3 then\n\
    \            letter_grades[i] = 'B-'\n        elseif v >= 2.0 then\n         \
    \   letter_grades[i] = 'C+'\n        elseif v >= 1.7 then\n            letter_grades[i]\
    \ = 'C'\n        elseif v >= 1.3 then\n            letter_grades[i] = 'C-'\n \
    \       elseif v >= 1.0 then\n            letter_grades[i] = 'D+'\n        elseif\
    \ v >= 0.7 then\n            letter_grades[i] = 'D'\n        elseif v >= 0.0 then\n\
    \            letter_grades[i] = 'D-'\n        else\n            letter_grades[i]\
    \ = 'E'\n        end\n    end\n    return letter_grades\nend", "  local grade_map\
    \ = {\n    [4.0] = 'A+',\n    [3.7] = 'A',\n    [3.3] = 'A-',\n    [3.0] = 'B+',\n\
    \    [2.7] = 'B',\n    [2.3] = 'B-',\n    [2.0] = 'C+',\n    [1.7] = 'C',\n  \
    \  [1.3] = 'C-',\n    [1.0] = 'D+',\n    [0.7] = 'D',\n    [0.0] = 'D-',\n   \
    \ [-1.0] = 'E'\n  }\n  local function mapper(gpa)\n    for k, v in pairs(grade_map)\
    \ do\n      if gpa > k then return v end\n    end\n  end\n  return utils.map(grades,\
    \ mapper)\nend", "  local grades_table = {}\n  for i, v in ipairs(grades) do\n\
    \    if v == 4.0 then\n      grades_table[i] = 'A+'\n    elseif v >= 3.7 then\n\
    \      grades_table[i] = 'A'\n    elseif v >= 3.3 then\n      grades_table[i]\
    \ = 'A-'\n    elseif v >= 3.0 then\n      grades_table[i] = 'B+'\n    elseif v\
    \ >= 2.7 then\n      grades_table[i] = 'B'\n    elseif v >= 2.3 then\n      grades_table[i]\
    \ = 'B-'\n    elseif v >= 2.0 then\n      grades_table[i] = 'C+'\n    elseif v\
    \ >= 1.7 then\n      grades_table[i] = 'C'\n    elseif v >= 1.3 then\n      grades_table[i]\
    \ = 'C-'\n    elseif v >= 1.0 then\n      grades_table[i] = 'D+'\n    elseif v\
    \ >= 0.7 then\n      grades_table[i] = 'D'\n    elseif v >= 0.0 then\n      grades_table[i]\
    \ = 'D-'\n    else\n      grades_table[i] = 'E'\n    end\n  end\n  return grades_table\n\
    end", "    local table = {}\n    for _, grade in ipairs(grades) do\n        if\
    \ grade >= 4.0 then table[#table+1] = 'A+'\n        elseif grade >= 3.7 then table[#table+1]\
    \ = 'A'\n        elseif grade >= 3.3 then table[#table+1] = 'A-'\n        elseif\
    \ grade >= 3.0 then table[#table+1] = 'B+'\n        elseif grade >= 2.7 then table[#table+1]\
    \ = 'B'\n        elseif grade >= 2.3 then table[#table+1] = 'B-'\n        elseif\
    \ grade >= 2.0 then table[#table+1] = 'C+'\n        elseif grade >= 1.7 then table[#table+1]\
    \ = 'C'\n        elseif grade >= 1.3 then table[#table+1] = 'C-'\n        elseif\
    \ grade >= 1.0 then table[#table+1] = 'D+'\n        elseif grade >= 0.7 then table[#table+1]\
    \ = 'D'\n        elseif grade >= 0.0 then table[#table+1] = 'D-'\n        else\
    \ table[#table+1] = 'E'\n        end\n    end\n    return table\nend", "    local\
    \ letter = {}\n    local gpa = 4.0\n    while gpa >= 0.0 do\n        local num\
    \ = 0\n        for i, v in ipairs(grades) do\n            if v >= gpa then\n \
    \               num = num + 1\n            end\n        end\n        if num >\
    \ 0 then\n            letter[gpa] = num\n        end\n        gpa = gpa - 0.3\n\
    \    end\n    return letter\nend", "\tlocal letter_grades = {}\n\tfor _, grade\
    \ in ipairs(grades) do\n\t\tif grade == 4.0 then \n\t\t\ttable.insert(letter_grades,\
    \ 'A+')\n\t\telseif grade > 3.7 then\n\t\t\ttable.insert(letter_grades, 'A')\n\
    \t\telseif grade > 3.3 then\n\t\t\ttable.insert(letter_grades, 'A-')\n\t\telseif\
    \ grade > 3.0 then\n\t\t\ttable.insert(letter_grades, 'B+')\n\t\telseif grade\
    \ > 2.7 then\n\t\t\ttable.insert(letter_grades, 'B')\n\t\telseif grade > 2.3 then\n\
    \t\t\ttable.insert(letter_grades, 'B-')\n\t\telseif grade > 2.0 then\n\t\t\ttable.insert(letter_grades,\
    \ 'C+')\n\t\telseif grade > 1.7 then\n\t\t\ttable.insert(letter_grades, 'C')\n\
    \t\telseif grade > 1.3 then\n\t\t\ttable.insert(letter_grades, 'C-')\n\t\telseif\
    \ grade > 1.0 then\n\t\t\ttable.insert(letter_grades, 'D+')\n\t\telseif grade\
    \ > 0.7 then\n\t\t\ttable.insert(letter_grades, 'D')\n\t\telseif grade >= 0.0\
    \ then\n\t\t\ttable.insert(letter_grades, 'D-')\n\t\telse\n\t\t\ttable.insert(letter_grades,\
    \ 'E')\n\t\tend\n\tend\n\treturn letter_grades\nend", "  local grades_and_letters\
    \ = {\n    {4.0, 'A+'},\n    {3.7, 'A'},\n    {3.3, 'A-'},\n    {3.0, 'B+'},\n\
    \    {2.7, 'B'},\n    {2.3, 'B-'},\n    {2.0, 'C+'},\n    {1.7, 'C'},\n    {1.3,\
    \ 'C-'},\n    {1.0, 'D+'},\n    {0.7, 'D'},\n    {0.0, 'D-'},\n    {0.0, 'E'}\n\
    \  }\n  local letters = {}\n  for i, grade in ipairs(grades) do\n    local letter\
    \ = 'F'\n    for j, pair in ipairs(grades_and_letters) do\n      if grade >= pair[1]\
    \ then\n        letter = pair[2]\n        break\n      end\n    end\n    table.insert(letters,\
    \ letter)\n  end\n  return letters\nend", "    local grades = grades or {0, 1,\
    \ 2, 3, 4}\n    local function grade_equation(grades)\n        local answer =\
    \ {}\n        for _, grade in ipairs(grades) do\n            if grade == 4.0 then\n\
    \                table.insert(answer, 'A+')\n            elseif grade > 3.7 then\n\
    \                table.insert(answer, 'A')\n            elseif grade > 3.3 then\n\
    \                table.insert(answer, 'A-')\n            elseif grade > 3.0 then\n\
    \                table.insert(answer, 'B+')\n            elseif grade > 2.7 then\n\
    \                table.insert(answer, 'B')\n            elseif grade > 2.3 then\n\
    \                table.insert(answer, 'B-')\n            elseif grade > 2.0 then\n\
    \                table.insert(answer, 'C+')\n            elseif grade > 1.7 then\n\
    \                table.insert(answer, 'C')\n            elseif grade > 1.3 then\n\
    \                table.insert(answer, 'C-')\n            elseif grade > 1.0 then\n\
    \                table.insert(answer, 'D+')\n            elseif grade > 0.7 then\n\
    \                table.insert(answer, 'D')\n            elseif grade > 0.0 then\n\
    \                table.insert(answer, 'D-')\n            else\n              \
    \  table.insert(answer, 'E')\n            end\n        end\n        return answer\n\
    \    end\n    return grade_equation(grades)\nend", "  local letters = {}\n  for\
    \ key, grade in pairs(grades) do\n    if grade == 4.0 then\n      table.insert(letters,\
    \ 'A+')\n    elseif grade > 3.7 then\n      table.insert(letters, 'A')\n    elseif\
    \ grade > 3.3 then\n      table.insert(letters, 'A-')\n    elseif grade > 3.0\
    \ then\n      table.insert(letters, 'B+')\n    elseif grade > 2.7 then\n     \
    \ table.insert(letters, 'B')\n    elseif grade > 2.3 then\n      table.insert(letters,\
    \ 'B-')\n    elseif grade > 2.0 then\n      table.insert(letters, 'C+')\n    elseif\
    \ grade > 1.7 then\n      table.insert(letters, 'C')\n    elseif grade > 1.3 then\n\
    \      table.insert(letters, 'C-')\n    elseif grade > 1.0 then\n      table.insert(letters,\
    \ 'D+')\n    elseif grade > 0.7 then\n      table.insert(letters, 'D')\n    elseif\
    \ grade > 0.0 then\n      table.insert(letters, 'D-')\n    else\n      table.insert(letters,\
    \ 'E')\n    end\n  end\n  return letters\nend", "  local result = {}\n  for _,\
    \ g in ipairs(grades) do\n    if g >= 4.0 then\n      table.insert(result, 'A+')\n\
    \    elseif g >= 3.7 then\n      table.insert(result, 'A')\n    elseif g >= 3.3\
    \ then\n      table.insert(result, 'A-')\n    elseif g >= 3.0 then\n      table.insert(result,\
    \ 'B+')\n    elseif g >= 2.7 then\n      table.insert(result, 'B')\n    elseif\
    \ g >= 2.3 then\n      table.insert(result, 'B-')\n    elseif g >= 2.0 then\n\
    \      table.insert(result, 'C+')\n    elseif g >= 1.7 then\n      table.insert(result,\
    \ 'C')\n    elseif g >= 1.3 then\n      table.insert(result, 'C-')\n    elseif\
    \ g >= 1.0 then\n      table.insert(result, 'D+')\n    elseif g >= 0.7 then\n\
    \      table.insert(result, 'D')\n    elseif g >= 0.0 then\n      table.insert(result,\
    \ 'D-')\n    else\n      table.insert(result, 'E')\n    end\n  end\n  return result\n\
    end", end, "    local letters = {}\n    for _, grade in ipairs(grades) do\n  \
    \      if grade >= 4.0 then\n            table.insert(letters, 'A+')\n       \
    \ elseif grade >= 3.7 then\n            table.insert(letters, 'A')\n        elseif\
    \ grade >= 3.3 then\n            table.insert(letters, 'A-')\n        elseif grade\
    \ >= 3.0 then\n            table.insert(letters, 'B+')\n        elseif grade >=\
    \ 2.7 then\n            table.insert(letters, 'B')\n        elseif grade >= 2.3\
    \ then\n            table.insert(letters, 'B-')\n        elseif grade >= 2.0 then\n\
    \            table.insert(letters, 'C+')\n        elseif grade >= 1.7 then\n \
    \           table.insert(letters, 'C')\n        elseif grade >= 1.3 then\n   \
    \         table.insert(letters, 'C-')\n        elseif grade >= 1.0 then\n    \
    \        table.insert(letters, 'D+')\n        elseif grade >= 0.7 then\n     \
    \       table.insert(letters, 'D')\n        elseif grade >= 0.0 then\n       \
    \     table.insert(letters, 'D-')\n        else\n            table.insert(letters,\
    \ 'E')\n        end\n    end\n    return letters\nend", "    grades = table_sort(grades)\n\
    \    local output = {}\n    for _, g in ipairs(grades) do\n        if g > 4.0\
    \ then \n            table.insert(output, 'A+')\n        elseif g > 3.7 then\n\
    \            table.insert(output, 'A')\n        elseif g > 3.3 then\n        \
    \    table.insert(output, 'A-')\n        elseif g > 3.0 then\n            table.insert(output,\
    \ 'B+')\n        elseif g > 2.7 then\n            table.insert(output, 'B')\n\
    \        elseif g > 2.3 then\n            table.insert(output, 'B-')\n       \
    \ elseif g > 2.0 then\n            table.insert(output, 'C+')\n        elseif\
    \ g > 1.7 then\n            table.insert(output, 'C')\n        elseif g > 1.3\
    \ then\n            table.insert(output, 'C-')\n        elseif g > 1.0 then\n\
    \            table.insert(output, 'D+')\n        elseif g > 0.7 then\n       \
    \     table.insert(output, 'D')\n        elseif g > 0.0 then\n            table.insert(output,\
    \ 'D-')\n        else\n            table.insert(output, 'E')\n        end\n  \
    \  end\n    return output\nend", "  local letter_grades = {}\n  for i, grade in\
    \ ipairs(grades) do\n    if grade >= 4.0 then\n      letter_grades[i] = 'A+'\n\
    \    elseif grade >= 3.7 then\n      letter_grades[i] = 'A'\n    elseif grade\
    \ >= 3.3 then\n      letter_grades[i] = 'A-'\n    elseif grade >= 3.0 then\n \
    \     letter_grades[i] = 'B+'\n    elseif grade >= 2.7 then\n      letter_grades[i]\
    \ = 'B'\n    elseif grade >= 2.3 then\n      letter_grades[i] = 'B-'\n    elseif\
    \ grade >= 2.0 then\n      letter_grades[i] = 'C+'\n    elseif grade >= 1.7 then\n\
    \      letter_grades[i] = 'C'\n    elseif grade >= 1.3 then\n      letter_grades[i]\
    \ = 'C-'\n    elseif grade >= 1.0 then\n      letter_grades[i] = 'D+'\n    elseif\
    \ grade >= 0.7 then\n      letter_grades[i] = 'D'\n    elseif grade >= 0.0 then\n\
    \      letter_grades[i] = 'D-'\n    else\n      letter_grades[i] = 'E'\n    end\n\
    \  end\n  return letter_grades\nend", "\tlocal function letter(grade)\n\t\tif\
    \ grade >= 4.0 then\n\t\t\treturn 'A+'\n\t\telseif grade >= 3.7 then\n\t\t\treturn\
    \ 'A'\n\t\telseif grade >= 3.3 then\n\t\t\treturn 'A-'\n\t\telseif grade >= 3.0\
    \ then\n\t\t\treturn 'B+'\n\t\telseif grade >= 2.7 then\n\t\t\treturn 'B'\n\t\t\
    elseif grade >= 2.3 then\n\t\t\treturn 'B-'\n\t\telseif grade >= 2.0 then\n\t\t\
    \treturn 'C+'\n\t\telseif grade >= 1.7 then\n\t\t\treturn 'C'\n\t\telseif grade\
    \ >= 1.3 then\n\t\t\treturn 'C-'\n\t\telseif grade >= 1.0 then\n\t\t\treturn 'D+'\n\
    \t\telseif grade >= 0.7 then\n\t\t\treturn 'D'\n\t\telseif grade >= 0.0 then\n\
    \t\t\treturn 'D-'\n\t\telse\n\t\t\treturn 'E'\n\t\tend\n\tend\n\treturn map(letter,\
    \ grades)\nend", "    local ret = {}\n    for i = 1, #grades do\n        if grades[i]\
    \ >= 4.0 then\n            ret[i] = 'A+'\n        elseif grades[i] >= 3.7 then\n\
    \            ret[i] = 'A'\n        elseif grades[i] >= 3.3 then\n            ret[i]\
    \ = 'A-'\n        elseif grades[i] >= 3.0 then\n            ret[i] = 'B+'\n  \
    \      elseif grades[i] >= 2.7 then\n            ret[i] = 'B'\n        elseif\
    \ grades[i] >= 2.3 then\n            ret[i] = 'B-'\n        elseif grades[i] >=\
    \ 2.0 then\n            ret[i] = 'C+'\n        elseif grades[i] >= 1.7 then\n\
    \            ret[i] = 'C'\n        elseif grades[i] >= 1.3 then\n            ret[i]\
    \ = 'C-'\n        elseif grades[i] >= 1.0 then\n            ret[i] = 'D+'\n  \
    \      elseif grades[i] >= 0.7 then\n            ret[i] = 'D'\n        elseif\
    \ grades[i] >= 0.0 then\n            ret[i] = 'D-'\n        else\n           \
    \ ret[i] = 'E'\n        end\n    end\n    return ret\nend", "    local letter_grades\
    \ = {}\n    for i,g in ipairs(grades) do\n        if g >= 4.0 then\n         \
    \   letter_grades[i] = 'A+'\n        elseif g >= 3.7 then\n            letter_grades[i]\
    \ = 'A'\n        elseif g >= 3.3 then\n            letter_grades[i] = 'A-'\n \
    \       elseif g >= 3.0 then\n            letter_grades[i] = 'B+'\n        elseif\
    \ g >= 2.7 then\n            letter_grades[i] = 'B'\n        elseif g >= 2.3 then\n\
    \            letter_grades[i] = 'B-'\n        elseif g >= 2.0 then\n         \
    \   letter_grades[i] = 'C+'\n        elseif g >= 1.7 then\n            letter_grades[i]\
    \ = 'C'\n        elseif g >= 1.3 then\n            letter_grades[i] = 'C-'\n \
    \       elseif g >= 1.0 then\n            letter_grades[i] = 'D+'\n        elseif\
    \ g >= 0.7 then\n            letter_grades[i] = 'D'\n        elseif g >= 0.0 then\n\
    \            letter_grades[i] = 'D-'\n        else\n            letter_grades[i]\
    \ = 'E'\n        end\n    end\n    return letter_grades\nend", "    local output\
    \ = {}\n    for i = 1, #grades do\n        local grade = grades[i]\n        if\
    \ grade >= 4.0 then\n            output[i] = 'A+'\n        elseif grade >= 3.7\
    \ then\n            output[i] = 'A'\n        elseif grade >= 3.3 then\n      \
    \      output[i] = 'A-'\n        elseif grade >= 3.0 then\n            output[i]\
    \ = 'B+'\n        elseif grade >= 2.7 then\n            output[i] = 'B'\n    \
    \    elseif grade >= 2.3 then\n            output[i] = 'B-'\n        elseif grade\
    \ >= 2.0 then\n            output[i] = 'C+'\n        elseif grade >= 1.7 then\n\
    \            output[i] = 'C'\n        elseif grade >= 1.3 then\n            output[i]\
    \ = 'C-'\n        elseif grade >= 1.0 then\n            output[i] = 'D+'\n   \
    \     elseif grade >= 0.7 then\n            output[i] = 'D'\n        elseif grade\
    \ >= 0.0 then\n            output[i] = 'D-'\n        else\n            output[i]\
    \ = 'E'\n        end\n    end\n    return output\nend", "    local grades_table\
    \ = {}\n    for _, grade in ipairs(grades) do\n        if grade >= 4.0 then\n\
    \            table.insert(grades_table, 'A+')\n        elseif grade > 3.7 then\n\
    \            table.insert(grades_table, 'A')\n        elseif grade > 3.3 then\n\
    \            table.insert(grades_table, 'A-')\n        elseif grade > 3.0 then\n\
    \            table.insert(grades_table, 'B+')\n        elseif grade > 2.7 then\n\
    \            table.insert(grades_table, 'B')\n        elseif grade > 2.3 then\n\
    \            table.insert(grades_table, 'B-')\n        elseif grade > 2.0 then\n\
    \            table.insert(grades_table, 'C+')\n        elseif grade > 1.7 then\n\
    \            table.insert(grades_table, 'C')\n        elseif grade > 1.3 then\n\
    \            table.insert(grades_table, 'C-')\n        elseif grade > 1.0 then\n\
    \            table.insert(grades_table, 'D+')\n        elseif grade > 0.7 then\n\
    \            table.insert(grades_table, 'D')\n        elseif grade > 0.0 then\n\
    \            table.insert(grades_table, 'D-')\n        else\n            table.insert(grades_table,\
    \ 'E')\n        end\n    end\n    return grades_table\nend", "    local output\
    \ = {}\n    for _, grade in ipairs(grades) do\n        local letter_grade = \"\
    \"\n        if grade >= 4.0 then letter_grade = \"A+\"\n        elseif grade >=\
    \ 3.7 then letter_grade = \"A\"\n        elseif grade >= 3.3 then letter_grade\
    \ = \"A-\"\n        elseif grade >= 3.0 then letter_grade = \"B+\"\n        elseif\
    \ grade >= 2.7 then letter_grade = \"B\"\n        elseif grade >= 2.3 then letter_grade\
    \ = \"B-\"\n        elseif grade >= 2.0 then letter_grade = \"C+\"\n        elseif\
    \ grade >= 1.7 then letter_grade = \"C\"\n        elseif grade >= 1.3 then letter_grade\
    \ = \"C-\"\n        elseif grade >= 1.0 then letter_grade = \"D+\"\n        elseif\
    \ grade >= 0.7 then letter_grade = \"D\"\n        elseif grade >= 0.0 then letter_grade\
    \ = \"D-\"\n        elseif grade >= 0.0 then letter_grade = \"E\"\n        end\n\
    \        table.insert(output, letter_grade)\n    end\n    return output\nend",
  "    local letter_grades = {}\n    for _, grade in ipairs(grades) do\n        if\
    \ grade >= 4.0 then\n            table.insert(letter_grades, 'A+')\n        elseif\
    \ grade >= 3.7 then\n            table.insert(letter_grades, 'A')\n        elseif\
    \ grade >= 3.3 then\n            table.insert(letter_grades, 'A-')\n        elseif\
    \ grade >= 3.0 then\n            table.insert(letter_grades, 'B+')\n        elseif\
    \ grade >= 2.7 then\n            table.insert(letter_grades, 'B')\n        elseif\
    \ grade >= 2.3 then\n            table.insert(letter_grades, 'B-')\n        elseif\
    \ grade >= 2.0 then\n            table.insert(letter_grades, 'C+')\n        elseif\
    \ grade >= 1.7 then\n            table.insert(letter_grades, 'C')\n        elseif\
    \ grade >= 1.3 then\n            table.insert(letter_grades, 'C-')\n        elseif\
    \ grade >= 1.0 then\n            table.insert(letter_grades, 'D+')\n        elseif\
    \ grade >= 0.7 then\n            table.insert(letter_grades, 'D')\n        elseif\
    \ grade >= 0.0 then\n            table.insert(letter_grades, 'D-')\n        else\n\
    \            table.insert(letter_grades, 'E')\n        end\n    end\n    return\
    \ letter_grades\nend", "    local letter_grades = {}\n    for i, value in ipairs(grades)\
    \ do\n        if value >= 4.0 then\n            letter_grades[i] = 'A+'\n    \
    \    elseif value >= 3.7 then\n            letter_grades[i] = 'A'\n        elseif\
    \ value >= 3.3 then\n            letter_grades[i] = 'A-'\n        elseif value\
    \ >= 3.0 then\n            letter_grades[i] = 'B+'\n        elseif value >= 2.7\
    \ then\n            letter_grades[i] = 'B'\n        elseif value >= 2.3 then\n\
    \            letter_grades[i] = 'B-'\n        elseif value >= 2.0 then\n     \
    \       letter_grades[i] = 'C+'\n        elseif value >= 1.7 then\n          \
    \  letter_grades[i] = 'C'\n        elseif value >= 1.3 then\n            letter_grades[i]\
    \ = 'C-'\n        elseif value >= 1.0 then\n            letter_grades[i] = 'D+'\n\
    \        elseif value >= 0.7 then\n            letter_grades[i] = 'D'\n      \
    \  elseif value > 0.0 then\n            letter_grades[i] = 'D-'\n        else\n\
    \            letter_grades[i] = 'E'\n        end\n    end\n    return letter_grades\n\
    end", "  local grades_num_to_letter = {}\n  for i, grade in ipairs(grades) do\n\
    \    if grade == 4.0 then\n      grades_num_to_letter[i] = 'A+'\n    elseif grade\
    \ > 3.7 then\n      grades_num_to_letter[i] = 'A'\n    elseif grade > 3.3 then\n\
    \      grades_num_to_letter[i] = 'A-'\n    elseif grade > 3.0 then\n      grades_num_to_letter[i]\
    \ = 'B+'\n    elseif grade > 2.7 then\n      grades_num_to_letter[i] = 'B'\n \
    \   elseif grade > 2.3 then\n      grades_num_to_letter[i] = 'B-'\n    elseif\
    \ grade > 2.0 then\n      grades_num_to_letter[i] = 'C+'\n    elseif grade > 1.7\
    \ then\n      grades_num_to_letter[i] = 'C'\n    elseif grade > 1.3 then\n   \
    \   grades_num_to_letter[i] = 'C-'\n    elseif grade > 1.0 then\n      grades_num_to_letter[i]\
    \ = 'D+'\n    elseif grade > 0.7 then\n      grades_num_to_letter[i] = 'D'\n \
    \   elseif grade > 0.0 then\n      grades_num_to_letter[i] = 'D-'\n    else\n\
    \      grades_num_to_letter[i] = 'E'\n    end\n  end\n  return grades_num_to_letter\n\
    end", "    local grades_letter = {}\n    for key, value in pairs(grades) do\n\
    \        if value >= 4.0 then\n            grades_letter[key] = 'A+'\n       \
    \ elseif value >= 3.7 then\n            grades_letter[key] = 'A'\n        elseif\
    \ value >= 3.3 then\n            grades_letter[key] = 'A-'\n        elseif value\
    \ >= 3.0 then\n            grades_letter[key] = 'B+'\n        elseif value >=\
    \ 2.7 then\n            grades_letter[key] = 'B'\n        elseif value >= 2.3\
    \ then\n            grades_letter[key] = 'B-'\n        elseif value >= 2.0 then\n\
    \            grades_letter[key] = 'C+'\n        elseif value >= 1.7 then\n   \
    \         grades_letter[key] = 'C'\n        elseif value >= 1.3 then\n       \
    \     grades_letter[key] = 'C-'\n        elseif value >= 1.0 then\n          \
    \  grades_letter[key] = 'D+'\n        elseif value >= 0.7 then\n            grades_letter[key]\
    \ = 'D'\n        elseif value >= 0.0 then\n            grades_letter[key] = 'D-'\n\
    \        else\n            grades_letter[key] = 'E'\n        end\n    end\n  \
    \  return grades_letter\nend", "    local letters = {}\n    for i, v in ipairs(grades)\
    \ do\n        if v > 3.7 then\n            table.insert(letters, 'A+')\n     \
    \   elseif v > 3.3 then\n            table.insert(letters, 'A')\n        elseif\
    \ v > 3.0 then\n            table.insert(letters, 'A-')\n        elseif v > 2.7\
    \ then\n            table.insert(letters, 'B+')\n        elseif v > 2.3 then\n\
    \            table.insert(letters, 'B')\n        elseif v > 2.0 then\n       \
    \     table.insert(letters, 'B-')\n        elseif v > 1.7 then\n            table.insert(letters,\
    \ 'C+')\n        elseif v > 1.3 then\n            table.insert(letters, 'C')\n\
    \        elseif v > 1.0 then\n            table.insert(letters, 'C-')\n      \
    \  elseif v > 0.7 then\n            table.insert(letters, 'D+')\n        elseif\
    \ v > 0.0 then\n            table.insert(letters, 'D')\n        elseif v == 0.0\
    \ then\n            table.insert(letters, 'D-')\n        elseif v == 0.0 then\n\
    \            table.insert(letters, 'E')\n        end\n    end\n    return letters\n\
    end", "\tlocal letter_grades = {}\n\tfor i = 1, #grades do\n\t\tif grades[i] ==\
    \ 4.0 then\n\t\t\tletter_grades[i] = 'A+'\n\t\telseif grades[i] > 3.7 then\n\t\
    \t\tletter_grades[i] = 'A'\n\t\telseif grades[i] > 3.3 then\n\t\t\tletter_grades[i]\
    \ = 'A-'\n\t\telseif grades[i] > 3.0 then\n\t\t\tletter_grades[i] = 'B+'\n\t\t\
    elseif grades[i] > 2.7 then\n\t\t\tletter_grades[i] = 'B'\n\t\telseif grades[i]\
    \ > 2.3 then\n\t\t\tletter_grades[i] = 'B-'\n\t\telseif grades[i] > 2.0 then\n\
    \t\t\tletter_grades[i] = 'C+'\n\t\telseif grades[i] > 1.7 then\n\t\t\tletter_grades[i]\
    \ = 'C'\n\t\telseif grades[i] > 1.3 then\n\t\t\tletter_grades[i] = 'C-'\n\t\t\
    elseif grades[i] > 1.0 then\n\t\t\tletter_grades[i] = 'D+'\n\t\telseif grades[i]\
    \ > 0.7 then\n\t\t\tletter_grades[i] = 'D'\n\t\telseif grades[i] > 0.0 then\n\t\
    \t\tletter_grades[i] = 'D-'\n\t\telse\n\t\t\tletter_grades[i] = 'E'\n\t\tend\n\
    \tend\n\treturn letter_grades\nend", "    local result = {}\n    local letter_grades\
    \ = {'A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'D-', 'E'}\n\
    \    local cutoff = {4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0,\
    \ 0.0}\n    for i, g in ipairs(grades) do\n        if g < 0 or g > 4 then\n  \
    \          error(\"Grades must be between 0 and 4\")\n        end\n        for\
    \ j, c in ipairs(cutoff) do\n            if g >= c then\n                result[i]\
    \ = letter_grades[j]\n                break\n            end\n        end\n  \
    \  end\n    return result\nend", "    local function letter_grade(gpa)\n     \
    \   if gpa >= 4.0 then return 'A+'\n        elseif gpa >= 3.7 then return 'A'\n\
    \        elseif gpa >= 3.3 then return 'A-'\n        elseif gpa >= 3.0 then return\
    \ 'B+'\n        elseif gpa >= 2.7 then return 'B'\n        elseif gpa >= 2.3 then\
    \ return 'B-'\n        elseif gpa >= 2.0 then return 'C+'\n        elseif gpa\
    \ >= 1.7 then return 'C'\n        elseif gpa >= 1.3 then return 'C-'\n       \
    \ elseif gpa >= 1.0 then return 'D+'\n        elseif gpa >= 0.7 then return 'D'\n\
    \        elseif gpa >= 0.0 then return 'D-'\n        else return 'E'\n       \
    \ end\n    end\n    return map(letter_grade, grades)\nend", "    local answer\
    \ = {}\n    for i = 1, #grades do\n        if grades[i] >= 4.0 then\n        \
    \    answer[i] = 'A+'\n        elseif grades[i] >= 3.7 then\n            answer[i]\
    \ = 'A'\n        elseif grades[i] >= 3.3 then\n            answer[i] = 'A-'\n\
    \        elseif grades[i] >= 3.0 then\n            answer[i] = 'B+'\n        elseif\
    \ grades[i] >= 2.7 then\n            answer[i] = 'B'\n        elseif grades[i]\
    \ >= 2.3 then\n            answer[i] = 'B-'\n        elseif grades[i] >= 2.0 then\n\
    \            answer[i] = 'C+'\n        elseif grades[i] >= 1.7 then\n        \
    \    answer[i] = 'C'\n        elseif grades[i] >= 1.3 then\n            answer[i]\
    \ = 'C-'\n        elseif grades[i] >= 1.0 then\n            answer[i] = 'D+'\n\
    \        elseif grades[i] >= 0.7 then\n            answer[i] = 'D'\n        elseif\
    \ grades[i] >= 0.0 then\n            answer[i] = 'D-'\n        else\n        \
    \    answer[i] = 'E'\n        end\n    end\n    return answer\nend", "  local\
    \ grade_letter = {}\n  for _, v in ipairs(grades) do\n    if v > 4.0 then\n  \
    \    table.insert(grade_letter, 'A+')\n    elseif v > 3.7 then\n      table.insert(grade_letter,\
    \ 'A')\n    elseif v > 3.3 then\n      table.insert(grade_letter, 'A-')\n    elseif\
    \ v > 3.0 then\n      table.insert(grade_letter, 'B+')\n    elseif v > 2.7 then\n\
    \      table.insert(grade_letter, 'B')\n    elseif v > 2.3 then\n      table.insert(grade_letter,\
    \ 'B-')\n    elseif v > 2.0 then\n      table.insert(grade_letter, 'C+')\n   \
    \ elseif v > 1.7 then\n      table.insert(grade_letter, 'C')\n    elseif v > 1.3\
    \ then\n      table.insert(grade_letter, 'C-')\n    elseif v > 1.0 then\n    \
    \  table.insert(grade_letter, 'D+')\n    elseif v > 0.7 then\n      table.insert(grade_letter,\
    \ 'D')\n    elseif v > 0.0 then\n      table.insert(grade_letter, 'D-')\n    else\n\
    \      table.insert(grade_letter, 'E')\n    end\n  end\n  return grade_letter\n\
    end", "  local result = {}\n  for _,grade in ipairs(grades) do\n    if grade >\
    \ 3.7 then\n      table.insert(result, 'A+')\n    elseif grade > 3.3 then\n  \
    \    table.insert(result, 'A')\n    elseif grade > 3.0 then\n      table.insert(result,\
    \ 'A-')\n    elseif grade > 2.7 then\n      table.insert(result, 'B+')\n    elseif\
    \ grade > 2.3 then\n      table.insert(result, 'B')\n    elseif grade > 2.0 then\n\
    \      table.insert(result, 'B-')\n    elseif grade > 1.7 then\n      table.insert(result,\
    \ 'C+')\n    elseif grade > 1.3 then\n      table.insert(result, 'C')\n    elseif\
    \ grade > 1.0 then\n      table.insert(result, 'C-')\n    elseif grade > 0.7 then\n\
    \      table.insert(result, 'D+')\n    elseif grade > 0.0 then\n      table.insert(result,\
    \ 'D')\n    elseif grade == 0.0 then\n      table.insert(result, 'D-')\n    else\n\
    \      table.insert(result, 'E')\n    end\n  end\n  return result\nend", "\t\n\
    end", "    local letter_grades = {}\n    for i, v in ipairs(grades) do\n     \
    \   if v == 4.0 then\n            table.insert(letter_grades, 'A+')\n        elseif\
    \ v > 3.7 then\n            table.insert(letter_grades, 'A')\n        elseif v\
    \ > 3.3 then\n            table.insert(letter_grades, 'A-')\n        elseif v\
    \ > 3.0 then\n            table.insert(letter_grades, 'B+')\n        elseif v\
    \ > 2.7 then\n            table.insert(letter_grades, 'B')\n        elseif v >\
    \ 2.3 then\n            table.insert(letter_grades, 'B-')\n        elseif v >\
    \ 2.0 then\n            table.insert(letter_grades, 'C+')\n        elseif v >\
    \ 1.7 then\n            table.insert(letter_grades, 'C')\n        elseif v > 1.3\
    \ then\n            table.insert(letter_grades, 'C-')\n        elseif v > 1.0\
    \ then\n            table.insert(letter_grades, 'D+')\n        elseif v > 0.7\
    \ then\n            table.insert(letter_grades, 'D')\n        elseif v > 0.0 then\n\
    \            table.insert(letter_grades, 'D-')\n        elseif v == 0.0 then\n\
    \            table.insert(letter_grades, 'E')\n        end\n    end\n    return\
    \ letter_grades\nend", "    return table.map(grades, function(g)\n        if g\
    \ >= 4.0 then\n            return 'A+'\n        elseif g >= 3.7 then\n       \
    \     return 'A'\n        elseif g >= 3.3 then\n            return 'A-'\n    \
    \    elseif g >= 3.0 then\n            return 'B+'\n        elseif g >= 2.7 then\n\
    \            return 'B'\n        elseif g >= 2.3 then\n            return 'B-'\n\
    \        elseif g >= 2.0 then\n            return 'C+'\n        elseif g >= 1.7\
    \ then\n            return 'C'\n        elseif g >= 1.3 then\n            return\
    \ 'C-'\n        elseif g >= 1.0 then\n            return 'D+'\n        elseif\
    \ g >= 0.7 then\n            return 'D'\n        elseif g >= 0.0 then\n      \
    \      return 'D-'\n        else\n            return 'E'\n        end\n    end)\n\
    end", "    -- Your code here.\nend", "    local new_grades = {}\n    for i, grade\
    \ in ipairs(grades) do\n        if grade >= 4.0 then\n            new_grades[i]\
    \ = 'A+'\n        elseif grade >= 3.7 then\n            new_grades[i] = 'A'\n\
    \        elseif grade >= 3.3 then\n            new_grades[i] = 'A-'\n        elseif\
    \ grade >= 3.0 then\n            new_grades[i] = 'B+'\n        elseif grade >=\
    \ 2.7 then\n            new_grades[i] = 'B'\n        elseif grade >= 2.3 then\n\
    \            new_grades[i] = 'B-'\n        elseif grade >= 2.0 then\n        \
    \    new_grades[i] = 'C+'\n        elseif grade >= 1.7 then\n            new_grades[i]\
    \ = 'C'\n        elseif grade >= 1.3 then\n            new_grades[i] = 'C-'\n\
    \        elseif grade >= 1.0 then\n            new_grades[i] = 'D+'\n        elseif\
    \ grade >= 0.7 then\n            new_grades[i] = 'D'\n        elseif grade >=\
    \ 0.0 then\n            new_grades[i] = 'D-'\n        else\n            new_grades[i]\
    \ = 'E'\n        end\n    end\n    return new_grades\nend", "    local grades_map\
    \ = {}\n    for i, v in ipairs(grades) do\n        if v >= 4.0 then\n        \
    \    grades_map[i] = 'A+'\n        elseif v > 3.7 then\n            grades_map[i]\
    \ = 'A'\n        elseif v > 3.3 then\n            grades_map[i] = 'A-'\n     \
    \   elseif v > 3.0 then\n            grades_map[i] = 'B+'\n        elseif v >\
    \ 2.7 then\n            grades_map[i] = 'B'\n        elseif v > 2.3 then\n   \
    \         grades_map[i] = 'B-'\n        elseif v > 2.0 then\n            grades_map[i]\
    \ = 'C+'\n        elseif v > 1.7 then\n            grades_map[i] = 'C'\n     \
    \   elseif v > 1.3 then\n            grades_map[i] = 'C-'\n        elseif v >\
    \ 1.0 then\n            grades_map[i] = 'D+'\n        elseif v > 0.7 then\n  \
    \          grades_map[i] = 'D'\n        elseif v > 0.0 then\n            grades_map[i]\
    \ = 'D-'\n        else\n            grades_map[i] = 'E'\n        end\n    end\n\
    \    return grades_map\nend", "    return {}\nend", "    local answer = {}\n \
    \   for i = 1, #grades do\n        if grades[i] == 4.0 then\n            answer[i]\
    \ = 'A+'\n        elseif grades[i] > 3.7 then\n            answer[i] = 'A'\n \
    \       elseif grades[i] > 3.3 then\n            answer[i] = 'A-'\n        elseif\
    \ grades[i] > 3.0 then\n            answer[i] = 'B+'\n        elseif grades[i]\
    \ > 2.7 then\n            answer[i] = 'B'\n        elseif grades[i] > 2.3 then\n\
    \            answer[i] = 'B-'\n        elseif grades[i] > 2.0 then\n         \
    \   answer[i] = 'C+'\n        elseif grades[i] > 1.7 then\n            answer[i]\
    \ = 'C'\n        elseif grades[i] > 1.3 then\n            answer[i] = 'C-'\n \
    \       elseif grades[i] > 1.0 then\n            answer[i] = 'D+'\n        elseif\
    \ grades[i] > 0.7 then\n            answer[i] = 'D'\n        elseif grades[i]\
    \ > 0.0 then\n            answer[i] = 'D-'\n        else\n            answer[i]\
    \ = 'E'\n        end\n    end\n    return answer\nend", "\tlocal letter_grades\
    \ = {}\n\tfor i, grade in ipairs(grades) do\n\t\tif grade > 3.7 then\n\t\t\tletter_grades[i]\
    \ = 'A+'\n\t\telseif grade > 3.3 then\n\t\t\tletter_grades[i] = 'A'\n\t\telseif\
    \ grade > 3.0 then\n\t\t\tletter_grades[i] = 'A-'\n\t\telseif grade > 2.7 then\n\
    \t\t\tletter_grades[i] = 'B+'\n\t\telseif grade > 2.3 then\n\t\t\tletter_grades[i]\
    \ = 'B'\n\t\telseif grade > 2.0 then\n\t\t\tletter_grades[i] = 'B-'\n\t\telseif\
    \ grade > 1.7 then\n\t\t\tletter_grades[i] = 'C+'\n\t\telseif grade > 1.3 then\n\
    \t\t\tletter_grades[i] = 'C'\n\t\telseif grade > 1.0 then\n\t\t\tletter_grades[i]\
    \ = 'C-'\n\t\telseif grade > 0.7 then\n\t\t\tletter_grades[i] = 'D+'\n\t\telseif\
    \ grade > 0.0 then\n\t\t\tletter_grades[i] = 'D'\n\t\telseif grade > -0.0001 then\n\
    \t\t\tletter_grades[i] = 'D-'\n\t\telse\n\t\t\tletter_grades[i] = 'E'\n\t\tend\n\
    \tend\n\treturn letter_grades\nend", "  local letter_grades = {}\n  for _, grade\
    \ in ipairs(grades) do\n    if grade >= 4.0 then\n      table.insert(letter_grades,\
    \ 'A+')\n    elseif grade >= 3.7 then\n      table.insert(letter_grades, 'A')\n\
    \    elseif grade >= 3.3 then\n      table.insert(letter_grades, 'A-')\n    elseif\
    \ grade >= 3.0 then\n      table.insert(letter_grades, 'B+')\n    elseif grade\
    \ >= 2.7 then\n      table.insert(letter_grades, 'B')\n    elseif grade >= 2.3\
    \ then\n      table.insert(letter_grades, 'B-')\n    elseif grade >= 2.0 then\n\
    \      table.insert(letter_grades, 'C+')\n    elseif grade >= 1.7 then\n     \
    \ table.insert(letter_grades, 'C')\n    elseif grade >= 1.3 then\n      table.insert(letter_grades,\
    \ 'C-')\n    elseif grade >= 1.0 then\n      table.insert(letter_grades, 'D+')\n\
    \    elseif grade >= 0.7 then\n      table.insert(letter_grades, 'D')\n    elseif\
    \ grade >= 0.0 then\n      table.insert(letter_grades, 'D-')\n    else\n     \
    \ table.insert(letter_grades, 'E')\n    end\n  end\n  return letter_grades\nend",
  "  local letter_grades = {}\n  for _, grade in ipairs(grades) do\n    if grade ==\
    \ 4.0 then\n      table.insert(letter_grades, 'A+')\n    elseif grade > 3.7 then\n\
    \      table.insert(letter_grades, 'A')\n    elseif grade > 3.3 then\n      table.insert(letter_grades,\
    \ 'A-')\n    elseif grade > 3.0 then\n      table.insert(letter_grades, 'B+')\n\
    \    elseif grade > 2.7 then\n      table.insert(letter_grades, 'B')\n    elseif\
    \ grade > 2.3 then\n      table.insert(letter_grades, 'B-')\n    elseif grade\
    \ > 2.0 then\n      table.insert(letter_grades, 'C+')\n    elseif grade > 1.7\
    \ then\n      table.insert(letter_grades, 'C')\n    elseif grade > 1.3 then\n\
    \      table.insert(letter_grades, 'C-')\n    elseif grade > 1.0 then\n      table.insert(letter_grades,\
    \ 'D+')\n    elseif grade > 0.7 then\n      table.insert(letter_grades, 'D')\n\
    \    elseif grade > 0.0 then\n      table.insert(letter_grades, 'D-')\n    else\n\
    \      table.insert(letter_grades, 'E')\n    end\n  end\n  return letter_grades\n\
    end", "    local letter_grades = {}\n    for _, v in ipairs(grades) do\n     \
    \   if v >= 4.0 then\n            table.insert(letter_grades, 'A+')\n        elseif\
    \ v >= 3.7 then\n            table.insert(letter_grades, 'A')\n        elseif\
    \ v >= 3.3 then\n            table.insert(letter_grades, 'A-')\n        elseif\
    \ v >= 3.0 then\n            table.insert(letter_grades, 'B+')\n        elseif\
    \ v >= 2.7 then\n            table.insert(letter_grades, 'B')\n        elseif\
    \ v >= 2.3 then\n            table.insert(letter_grades, 'B-')\n        elseif\
    \ v >= 2.0 then\n            table.insert(letter_grades, 'C+')\n        elseif\
    \ v >= 1.7 then\n            table.insert(letter_grades, 'C')\n        elseif\
    \ v >= 1.3 then\n            table.insert(letter_grades, 'C-')\n        elseif\
    \ v >= 1.0 then\n            table.insert(letter_grades, 'D+')\n        elseif\
    \ v >= 0.7 then\n            table.insert(letter_grades, 'D')\n        elseif\
    \ v >= 0.0 then\n            table.insert(letter_grades, 'D-')\n        else\n\
    \            table.insert(letter_grades, 'E')\n        end\n    end\n    return\
    \ letter_grades\nend\nassert(deep_equal(numerical_letter_grade({4.0, 3, 1.7, 2,\
    \ 3.5}), {'A+', 'B', 'C-', 'C', 'A-'}))", "    -- Write your code here\n    local\
    \ letter_grades = {}\n    for i,v in ipairs(grades) do\n        if v == 4.0 then\n\
    \            table.insert(letter_grades, 'A+')\n        elseif v > 3.7 then\n\
    \            table.insert(letter_grades, 'A')\n        elseif v > 3.3 then\n \
    \           table.insert(letter_grades, 'A-')\n        elseif v > 3.0 then\n \
    \           table.insert(letter_grades, 'B+')\n        elseif v > 2.7 then\n \
    \           table.insert(letter_grades, 'B')\n        elseif v > 2.3 then\n  \
    \          table.insert(letter_grades, 'B-')\n        elseif v > 2.0 then\n  \
    \          table.insert(letter_grades, 'C+')\n        elseif v > 1.7 then\n  \
    \          table.insert(letter_grades, 'C')\n        elseif v > 1.3 then\n   \
    \         table.insert(letter_grades, 'C-')\n        elseif v > 1.0 then\n   \
    \         table.insert(letter_grades, 'D+')\n        elseif v > 0.7 then\n   \
    \         table.insert(letter_grades, 'D')\n        elseif v > 0.0 then\n    \
    \        table.insert(letter_grades, 'D-')\n        else\n            table.insert(letter_grades,\
    \ 'E')\n        end\n    end\n    return letter_grades\nend", "    local letter_grades\
    \ = {}\n    for i = 1, #grades do\n        local number = grades[i]\n        if\
    \ number >= 4.0 then\n            letter_grades[i] = 'A+'\n        elseif number\
    \ >= 3.7 then\n            letter_grades[i] = 'A'\n        elseif number >= 3.3\
    \ then\n            letter_grades[i] = 'A-'\n        elseif number >= 3.0 then\n\
    \            letter_grades[i] = 'B+'\n        elseif number >= 2.7 then\n    \
    \        letter_grades[i] = 'B'\n        elseif number >= 2.3 then\n         \
    \   letter_grades[i] = 'B-'\n        elseif number >= 2.0 then\n            letter_grades[i]\
    \ = 'C+'\n        elseif number >= 1.7 then\n            letter_grades[i] = 'C'\n\
    \        elseif number >= 1.3 then\n            letter_grades[i] = 'C-'\n    \
    \    elseif number >= 1.0 then\n            letter_grades[i] = 'D+'\n        elseif\
    \ number >= 0.7 then\n            letter_grades[i] = 'D'\n        elseif number\
    \ >= 0.0 then\n            letter_grades[i] = 'D-'\n        elseif number == 0.0\
    \ then\n            letter_grades[i] = 'E'\n        end\n    end\n    return letter_grades\n\
    end", "    local x = {'A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+',\
    \ 'D', 'D-', 'E'}\n    local ret_val = {}\n    local k = 0\n    local i = 0\n\
    \    local j = 0\n    local new_grades = {}\n    for k = 1, #grades do\n     \
    \   if grades[k] == 4.0 then\n            table.insert(new_grades, 1)\n      \
    \  elseif grades[k] >= 3.7 then\n            table.insert(new_grades, 2)\n   \
    \     elseif grades[k] >= 3.3 then\n            table.insert(new_grades, 3)\n\
    \        elseif grades[k] >= 3.0 then\n            table.insert(new_grades, 4)\n\
    \        elseif grades[k] >= 2.7 then\n            table.insert(new_grades, 5)\n\
    \        elseif grades[k] >= 2.3 then\n            table.insert(new_grades, 6)\n\
    \        elseif grades[k] >= 2.0 then\n            table.insert(new_grades, 7)\n\
    \        elseif grades[k] >= 1.7 then\n            table.insert(new_grades, 8)\n\
    \        elseif grades[k] >= 1.3 then\n            table.insert(new_grades, 9)\n\
    \        elseif grades[k] >= 1.0 then\n            table.insert(new_grades, 10)\n\
    \        elseif grades[k] >= 0.7 then\n            table.insert(new_grades, 11)\n\
    \        elseif grades[k] >= 0.0 then\n            table.insert(new_grades, 12)\n\
    \        elseif grades[k] < 0.0 then\n            table.insert(new_grades, 13)\n\
    \        end\n    end\n    for i = 1, #new_grades do\n        for j = 1, #x do\n\
    \            if new_grades[i] == j then\n                table.insert(ret_val,\
    \ x[j])\n            end\n        end\n    end\n    return ret_val\nend", "\t\
    -- convert the numerical grades to letter grades\nend", "  local grades_table\
    \ = {}\n  for i,v in ipairs(grades) do\n    if grades[i] >= 4.0 then\n      grades_table[i]\
    \ = 'A+'\n    elseif grades[i] >= 3.7 then\n      grades_table[i] = 'A'\n    elseif\
    \ grades[i] >= 3.3 then\n      grades_table[i] = 'A-'\n    elseif grades[i] >=\
    \ 3.0 then\n      grades_table[i] = 'B+'\n    elseif grades[i] >= 2.7 then\n \
    \     grades_table[i] = 'B'\n    elseif grades[i] >= 2.3 then\n      grades_table[i]\
    \ = 'B-'\n    elseif grades[i] >= 2.0 then\n      grades_table[i] = 'C+'\n   \
    \ elseif grades[i] >= 1.7 then\n      grades_table[i] = 'C'\n    elseif grades[i]\
    \ >= 1.3 then\n      grades_table[i] = 'C-'\n    elseif grades[i] >= 1.0 then\n\
    \      grades_table[i] = 'D+'\n    elseif grades[i] >= 0.7 then\n      grades_table[i]\
    \ = 'D'\n    elseif grades[i] >= 0.0 then\n      grades_table[i] = 'D-'\n    elseif\
    \ grades[i] < 0.0 then\n      grades_table[i] = 'E'\n    end\n  end\n  return\
    \ grades_table\nend", "    -- Calculate letter grades using the equation above\n\
    \    local grades_to_letters = {}\n    for _, grade in ipairs(grades) do\n   \
    \     -- Checks to see if the grade is less than 1.3\n        if grade < 1.3 then\n\
    \            -- If the grade is less than 1.3 and greater than 0.7 then the grade\
    \ is a D+\n            if grade > 0.7 then\n                table.insert(grades_to_letters,\
    \ 'D+')\n            -- If the grade is less than 0.7 and greater than 0.0 then\
    \ the grade is a D-\n            elseif grade > 0.0 then\n                table.insert(grades_to_letters,\
    \ 'D-')\n            -- If the grade is equal to 0.0 then the grade is an E\n\
    \            else\n                table.insert(grades_to_letters, 'E')\n    \
    \        end\n        -- Checks to see if the grade is greater than 1.3 and less\
    \ than 1.7\n        elseif grade > 1.3 and grade < 1.7 then\n            -- If\
    \ the grade is between 1.3 and 1.7 then the grade is a C-\n            table.insert(grades_to_letters,\
    \ 'C-')\n        -- Checks to see if the grade is greater than 1.7 and less than\
    \ 2.0\n        elseif grade > 1.7 and grade < 2.0 then\n            -- If the\
    \ grade is between 1.7 and 2.0 then the grade is a C\n            table.insert(grades_to_letters,\
    \ 'C')\n        -- Checks to see if the grade is greater than 2.0 and less than\
    \ 2.3\n        elseif grade > 2.0 and grade < 2.3 then\n            -- If the\
    \ grade is between 2.0 and 2.3 then the grade is a C+\n            table.insert(grades_to_letters,\
    \ 'C+')\n        -- Checks to see if the grade is greater than 2.3 and less than\
    \ 2.7\n        elseif grade > 2.3 and grade < 2.7 then\n            -- If the\
    \ grade is between 2.3 and 2.7 then the grade is a B-\n            table.insert(grades_to_letters,\
    \ 'B-')\n        -- Checks to see if the grade is greater than 2.7 and", "   \
    \ -- This function has to accept an array of GPAs as an argument.\n    -- Return\
    \ an array of letter grades.\n    --\n    -- Tips: use if-elseif-else-end statement\
    \ to compare the input value with the grade boundaries\n    -- (3.3 and 3.7, for\
    \ example) and use the given grading table above.\n    -- For example, if grades[1]\
    \ = 4.0, return 'A+'.\n    -- Check out 'index_table' function on page 66 of the\
    \ book to see how to find\n    -- the array index of the grade (array index of\
    \ 3.3 in the table is 6)\n    -- and look at the table of numerical values on\
    \ page 63 of the book to see how to transform the\n    -- GPA value into an array\
    \ index.\n    --\n    -- Write your code here:\n    local letter = {}\n    for\
    \ i = 1, #grades do\n        if grades[i] == 4.0 then\n            letter[i] =\
    \ 'A+'\n        elseif grades[i] > 3.7 then\n            letter[i] = 'A'\n   \
    \     elseif grades[i] > 3.3 then\n            letter[i] = 'A-'\n        elseif\
    \ grades[i] > 3.0 then\n            letter[i] = 'B+'\n        elseif grades[i]\
    \ > 2.7 then\n            letter[i] = 'B'\n        elseif grades[i] > 2.3 then\n\
    \            letter[i] = 'B-'\n        elseif grades[i] > 2.0 then\n         \
    \   letter[i] = 'C+'\n        elseif grades[i] > 1.7 then\n            letter[i]\
    \ = 'C'\n        elseif grades[i] > 1.3 then\n            letter[i] = 'C-'\n \
    \       elseif grades[i] > 1.0 then\n            letter[i] = 'D+'\n        elseif\
    \ grades[i] > 0.7 then\n            letter[i] = 'D'\n        elseif grades[i]\
    \ > 0.0 then\n            letter[i] = 'D-'\n        elseif grades[i] == 0.0 then\n\
    \            letter[i] = 'E'\n        end\n    end\n   ", "    local letter_grades\
    \ = {}\n    for _, gpa in ipairs(grades) do\n        if gpa >= 4.0 then\n    \
    \        table.insert(letter_grades, 'A+')\n        elseif gpa >= 3.7 then\n \
    \           table.insert(letter_grades, 'A')\n        elseif gpa >= 3.3 then\n\
    \            table.insert(letter_grades, 'A-')\n        elseif gpa >= 3.0 then\n\
    \            table.insert(letter_grades, 'B+')\n        elseif gpa >= 2.7 then\n\
    \            table.insert(letter_grades, 'B')\n        elseif gpa >= 2.3 then\n\
    \            table.insert(letter_grades, 'B-')\n        elseif gpa >= 2.0 then\n\
    \            table.insert(letter_grades, 'C+')\n        elseif gpa >= 1.7 then\n\
    \            table.insert(letter_grades, 'C')\n        elseif gpa >= 1.3 then\n\
    \            table.insert(letter_grades, 'C-')\n        elseif gpa >= 1.0 then\n\
    \            table.insert(letter_grades, 'D+')\n        elseif gpa >= 0.7 then\n\
    \            table.insert(letter_grades, 'D')\n        elseif gpa >= 0.0 then\n\
    \            table.insert(letter_grades, 'D-')\n        elseif gpa < 0.0 then\n\
    \            table.insert(letter_grades, 'E')\n        end\n    end\n    return\
    \ letter_grades\nend", "    local letter_grades = {}\n    for grade, key in pairs(grades)\
    \ do\n        if key >= 4.0 then\n            letter_grades[grade] = 'A+'\n  \
    \      elseif key >= 3.7 then\n            letter_grades[grade] = 'A'\n      \
    \  elseif key >= 3.3 then\n            letter_grades[grade] = 'A-'\n        elseif\
    \ key >= 3.0 then\n            letter_grades[grade] = 'B+'\n        elseif key\
    \ >= 2.7 then\n            letter_grades[grade] = 'B'\n        elseif key >= 2.3\
    \ then\n            letter_grades[grade] = 'B-'\n        elseif key >= 2.0 then\n\
    \            letter_grades[grade] = 'C+'\n        elseif key >= 1.7 then\n   \
    \         letter_grades[grade] = 'C'\n        elseif key >= 1.3 then\n       \
    \     letter_grades[grade] = 'C-'\n        elseif key >= 1.0 then\n          \
    \  letter_grades[grade] = 'D+'\n        elseif key >= 0.7 then\n            letter_grades[grade]\
    \ = 'D'\n        elseif key >= 0.0 then\n            letter_grades[grade] = 'D-'\n\
    \        else\n            letter_grades[grade] = 'E'\n        end\n    end\n\
    \    return letter_grades\nend", "    -- your code goes here\n    local lookup\
    \ = {[4.0] = 'A+',\n                    [3.7] = 'A',\n                    [3.3]\
    \ = 'A-',\n                    [3.0] = 'B+',\n                    [2.7] = 'B',\n\
    \                    [2.3] = 'B-',\n                    [2.0] = 'C+',\n      \
    \              [1.7] = 'C',\n                    [1.3] = 'C-',\n             \
    \       [1.0] = 'D+',\n                    [0.7] = 'D',\n                    [0.0]\
    \ = 'D-',\n                    [0.0] = 'E'}\n    local function find_grade(gpa)\n\
    \        for v,k in pairs(lookup) do\n            if gpa >= v then\n         \
    \       return k\n            end\n        end\n    end\n    local result = {}\n\
    \    for _, v in ipairs(grades) do\n        table.insert(result, find_grade(v))\n\
    \    end\n    return result\nend\n    \n    ", "    local letter_grades = {}\n\
    \    for k,v in pairs(grades) do\n        if v >= 4.0 then\n            table.insert(letter_grades,\
    \ 'A+')\n        elseif v >= 3.7 then\n            table.insert(letter_grades,\
    \ 'A')\n        elseif v >= 3.3 then\n            table.insert(letter_grades,\
    \ 'A-')\n        elseif v >= 3.0 then\n            table.insert(letter_grades,\
    \ 'B+')\n        elseif v >= 2.7 then\n            table.insert(letter_grades,\
    \ 'B')\n        elseif v >= 2.3 then\n            table.insert(letter_grades,\
    \ 'B-')\n        elseif v >= 2.0 then\n            table.insert(letter_grades,\
    \ 'C+')\n        elseif v >= 1.7 then\n            table.insert(letter_grades,\
    \ 'C')\n        elseif v >= 1.3 then\n            table.insert(letter_grades,\
    \ 'C-')\n        elseif v >= 1.0 then\n            table.insert(letter_grades,\
    \ 'D+')\n        elseif v >= 0.7 then\n            table.insert(letter_grades,\
    \ 'D')\n        elseif v >= 0.0 then\n            table.insert(letter_grades,\
    \ 'D-')\n        else\n            table.insert(letter_grades, 'E')\n        end\n\
    \    end\n    return letter_grades\nend", "    local solution = {}\n    for i,j\
    \ in ipairs(grades) do\n        if j > 3.7 then\n            table.insert(solution,\
    \ 'A+')\n        elseif j > 3.3 then\n            table.insert(solution, 'A')\n\
    \        elseif j > 3.0 then\n            table.insert(solution, 'A-')\n     \
    \   elseif j > 2.7 then\n            table.insert(solution, 'B+')\n        elseif\
    \ j > 2.3 then\n            table.insert(solution, 'B')\n        elseif j > 2.0\
    \ then\n            table.insert(solution, 'B-')\n        elseif j > 1.7 then\n\
    \            table.insert(solution, 'C+')\n        elseif j > 1.3 then\n     \
    \       table.insert(solution, 'C')\n        elseif j > 1.0 then\n           \
    \ table.insert(solution, 'C-')\n        elseif j > 0.7 then\n            table.insert(solution,\
    \ 'D+')\n        elseif j > 0.0 then\n            table.insert(solution, 'D')\n\
    \        elseif j == 0.0 then\n            table.insert(solution, 'E')\n     \
    \   end\n    end\n    return solution\nend", "  error(\"Implement me!\")\nend",
  "    -- Implement me!\nend", "    local result = {}\n    for _, grade in ipairs(grades)\
    \ do\n        if grade >= 4.0 then\n            table.insert(result, 'A+')\n \
    \       elseif grade >= 3.7 then\n            table.insert(result, 'A')\n    \
    \    elseif grade >= 3.3 then\n            table.insert(result, 'A-')\n      \
    \  elseif grade >= 3.0 then\n            table.insert(result, 'B+')\n        elseif\
    \ grade >= 2.7 then\n            table.insert(result, 'B')\n        elseif grade\
    \ >= 2.3 then\n            table.insert(result, 'B-')\n        elseif grade >=\
    \ 2.0 then\n            table.insert(result, 'C+')\n        elseif grade >= 1.7\
    \ then\n            table.insert(result, 'C')\n        elseif grade >= 1.3 then\n\
    \            table.insert(result, 'C-')\n        elseif grade >= 1.0 then\n  \
    \          table.insert(result, 'D+')\n        elseif grade >= 0.7 then\n    \
    \        table.insert(result, 'D')\n        elseif grade >= 0.0 then\n       \
    \     table.insert(result, 'D-')\n        else\n            table.insert(result,\
    \ 'E')\n        end\n    end\n    return result\nend", "    local letter_grades\
    \ = {}\n    for i, g in ipairs(grades) do\n        if g >= 4.0 then\n        \
    \    letter_grades[i] = 'A+'\n        elseif g >= 3.7 then\n            letter_grades[i]\
    \ = 'A'\n        elseif g >= 3.3 then\n            letter_grades[i] = 'A-'\n \
    \       elseif g >= 3.0 then\n            letter_grades[i] = 'B+'\n        elseif\
    \ g >= 2.7 then\n            letter_grades[i] = 'B'\n        elseif g >= 2.3 then\n\
    \            letter_grades[i] = 'B-'\n        elseif g >= 2.0 then\n         \
    \   letter_grades[i] = 'C+'\n        elseif g >= 1.7 then\n            letter_grades[i]\
    \ = 'C'\n        elseif g >= 1.3 then\n            letter_grades[i] = 'C-'\n \
    \       elseif g >= 1.0 then\n            letter_grades[i] = 'D+'\n        elseif\
    \ g >= 0.7 then\n            letter_grades[i] = 'D'\n        elseif g >= 0.0 then\n\
    \            letter_grades[i] = 'D-'\n        elseif g < 0.0 then\n          \
    \  letter_grades[i] = 'E'\n        end\n    end\n    return letter_grades\nend",
  "    local result = {}\n    for i = 1, #grades do\n        if grades[i] >= 4.0 then\
    \ \n            result[i] = 'A+'\n        elseif grades[i] >= 3.7 then\n     \
    \       result[i] = 'A'\n        elseif grades[i] >= 3.3 then\n            result[i]\
    \ = 'A-'\n        elseif grades[i] >= 3.0 then\n            result[i] = 'B+'\n\
    \        elseif grades[i] >= 2.7 then\n            result[i] = 'B'\n        elseif\
    \ grades[i] >= 2.3 then\n            result[i] = 'B-'\n        elseif grades[i]\
    \ >= 2.0 then\n            result[i] = 'C+'\n        elseif grades[i] >= 1.7 then\n\
    \            result[i] = 'C'\n        elseif grades[i] >= 1.3 then\n         \
    \   result[i] = 'C-'\n        elseif grades[i] >= 1.0 then\n            result[i]\
    \ = 'D+'\n        elseif grades[i] >= 0.7 then\n            result[i] = 'D'\n\
    \        elseif grades[i] >= 0.0 then\n            result[i] = 'D-'\n        elseif\
    \ grades[i] < 0.0 then\n            result[i] = 'E'\n        end\n    end\n  \
    \  return result\nend", "\tlocal letter_grades = {}\n\tfor i, grade in ipairs(grades)\
    \ do\n\t\tif grade >= 4.0 then\n\t\t\tletter_grades[i] = 'A+'\n\t\telseif grade\
    \ >= 3.7 then\n\t\t\tletter_grades[i] = 'A'\n\t\telseif grade >= 3.3 then\n\t\t\
    \tletter_grades[i] = 'A-'\n\t\telseif grade >= 3.0 then\n\t\t\tletter_grades[i]\
    \ = 'B+'\n\t\telseif grade >= 2.7 then\n\t\t\tletter_grades[i] = 'B'\n\t\telseif\
    \ grade >= 2.3 then\n\t\t\tletter_grades[i] = 'B-'\n\t\telseif grade >= 2.0 then\n\
    \t\t\tletter_grades[i] = 'C+'\n\t\telseif grade >= 1.7 then\n\t\t\tletter_grades[i]\
    \ = 'C'\n\t\telseif grade >= 1.3 then\n\t\t\tletter_grades[i] = 'C-'\n\t\telseif\
    \ grade >= 1.0 then\n\t\t\tletter_grades[i] = 'D+'\n\t\telseif grade >= 0.7 then\n\
    \t\t\tletter_grades[i] = 'D'\n\t\telseif grade >= 0.0 then\n\t\t\tletter_grades[i]\
    \ = 'D-'\n\t\telse\n\t\t\tletter_grades[i] = 'E'\n\t\tend\n\tend\n\treturn letter_grades\n\
    end", "    local grades_letters = {}\n    local grades_numerical = {}\n    local\
    \ grades_letter = {}\n    for i, v in ipairs(grades) do\n        if v >= 4.0 then\n\
    \            grades_numerical[i] = v\n            grades_letter[i] = 'A+'\n  \
    \      elseif v >= 3.7 then\n            grades_numerical[i] = v\n           \
    \ grades_letter[i] = 'A'\n        elseif v >= 3.3 then\n            grades_numerical[i]\
    \ = v\n            grades_letter[i] = 'A-'\n        elseif v >= 3.0 then\n   \
    \         grades_numerical[i] = v\n            grades_letter[i] = 'B+'\n     \
    \   elseif v >= 2.7 then\n            grades_numerical[i] = v\n            grades_letter[i]\
    \ = 'B'\n        elseif v >= 2.3 then\n            grades_numerical[i] = v\n \
    \           grades_letter[i] = 'B-'\n        elseif v >= 2.0 then\n          \
    \  grades_numerical[i] = v\n            grades_letter[i] = 'C+'\n        elseif\
    \ v >= 1.7 then\n            grades_numerical[i] = v\n            grades_letter[i]\
    \ = 'C'\n        elseif v >= 1.3 then\n            grades_numerical[i] = v\n \
    \           grades_letter[i] = 'C-'\n        elseif v >= 1.0 then\n          \
    \  grades_numerical[i] = v\n            grades_letter[i] = 'D+'\n        elseif\
    \ v >= 0.7 then\n            grades_numerical[i] = v\n            grades_letter[i]\
    \ = 'D'\n        elseif v >= 0.0 then\n            grades_numerical[i] = v\n \
    \           grades_letter[i] = 'D-'\n        else\n            grades_numerical[i]\
    \ = v\n            grades_letter[i] = 'E'\n        end\n    end\n    return grades_letter\n\
    end", "  return grades:map(function(grade)\n    if grade >= 4.0 then\n      return\
    \ 'A+'\n    elseif grade >= 3.7 then\n      return 'A'\n    elseif grade >= 3.3\
    \ then\n      return 'A-'\n    elseif grade >= 3.0 then\n      return 'B+'\n \
    \   elseif grade >= 2.7 then\n      return 'B'\n    elseif grade >= 2.3 then\n\
    \      return 'B-'\n    elseif grade >= 2.0 then\n      return 'C+'\n    elseif\
    \ grade >= 1.7 then\n      return 'C'\n    elseif grade >= 1.3 then\n      return\
    \ 'C-'\n    elseif grade >= 1.0 then\n      return 'D+'\n    elseif grade >= 0.7\
    \ then\n      return 'D'\n    elseif grade >= 0.0 then\n      return 'D-'\n  \
    \  else\n      return 'E'\n    end\n  end)\nend", "    local grad = {}\n    for\
    \ i = 1, #grades do\n        if grades[i] >= 4.0 then\n            grad[i] = 'A+'\n\
    \        elseif grades[i] > 3.7 then\n            grad[i] = 'A'\n        elseif\
    \ grades[i] > 3.3 then\n            grad[i] = 'A-'\n        elseif grades[i] >\
    \ 3.0 then\n            grad[i] = 'B+'\n        elseif grades[i] > 2.7 then\n\
    \            grad[i] = 'B'\n        elseif grades[i] > 2.3 then\n            grad[i]\
    \ = 'B-'\n        elseif grades[i] > 2.0 then\n            grad[i] = 'C+'\n  \
    \      elseif grades[i] > 1.7 then\n            grad[i] = 'C'\n        elseif\
    \ grades[i] > 1.3 then\n            grad[i] = 'C-'\n        elseif grades[i] >\
    \ 1.0 then\n            grad[i] = 'D+'\n        elseif grades[i] > 0.7 then\n\
    \            grad[i] = 'D'\n        elseif grades[i] > 0.0 then\n            grad[i]\
    \ = 'D-'\n        else\n            grad[i] = 'E'\n        end\n    end\n    return\
    \ grad\nend", "    local result = {}\n    for k, v in pairs(grades) do\n     \
    \   if v > 3.7 then\n            table.insert(result, 'A+')\n        elseif v\
    \ > 3.3 then\n            table.insert(result, 'A')\n        elseif v > 3.0 then\n\
    \            table.insert(result, 'A-')\n        elseif v > 2.7 then\n       \
    \     table.insert(result, 'B+')\n        elseif v > 2.3 then\n            table.insert(result,\
    \ 'B')\n        elseif v > 2.0 then\n            table.insert(result, 'B-')\n\
    \        elseif v > 1.7 then\n            table.insert(result, 'C+')\n       \
    \ elseif v > 1.3 then\n            table.insert(result, 'C')\n        elseif v\
    \ > 1.0 then\n            table.insert(result, 'C-')\n        elseif v > 0.7 then\n\
    \            table.insert(result, 'D+')\n        elseif v > 0.0 then\n       \
    \     table.insert(result, 'D')\n        elseif v == 0.0 then\n            table.insert(result,\
    \ 'D-')\n        else\n            table.insert(result, 'E')\n        end\n  \
    \  end\n    return result\nend", "    -- TODO: Return the table of letter grades\n\
    \    return {}\nend", "    local letter_grades = {}\n    for _, grade in ipairs(grades)\
    \ do\n        local letter = 'F'\n        if grade > 3.7 then\n            letter\
    \ = 'A+'\n        elseif grade > 3.3 then\n            letter = 'A'\n        elseif\
    \ grade > 3.0 then\n            letter = 'A-'\n        elseif grade > 2.7 then\n\
    \            letter = 'B+'\n        elseif grade > 2.3 then\n            letter\
    \ = 'B'\n        elseif grade > 2.0 then\n            letter = 'B-'\n        elseif\
    \ grade > 1.7 then\n            letter = 'C+'\n        elseif grade > 1.3 then\n\
    \            letter = 'C'\n        elseif grade > 1.0 then\n            letter\
    \ = 'C-'\n        elseif grade > 0.7 then\n            letter = 'D+'\n       \
    \ elseif grade > 0.0 then\n            letter = 'D'\n        elseif grade == 0.0\
    \ then\n            letter = 'D-'\n        end\n        table.insert(letter_grades,\
    \ letter)\n    end\n    return letter_grades\nend", "    local letter_grades =\
    \ {}\n    for i, v in ipairs(grades) do\n        if v == 4.0 then\n          \
    \  table.insert(letter_grades, 'A+')\n        elseif v > 3.7 then\n          \
    \  table.insert(letter_grades, 'A')\n        elseif v > 3.3 then\n           \
    \ table.insert(letter_grades, 'A-')\n        elseif v > 3.0 then\n           \
    \ table.insert(letter_grades, 'B+')\n        elseif v > 2.7 then\n           \
    \ table.insert(letter_grades, 'B')\n        elseif v > 2.3 then\n            table.insert(letter_grades,\
    \ 'B-')\n        elseif v > 2.0 then\n            table.insert(letter_grades,\
    \ 'C+')\n        elseif v > 1.7 then\n            table.insert(letter_grades,\
    \ 'C')\n        elseif v > 1.3 then\n            table.insert(letter_grades, 'C-')\n\
    \        elseif v > 1.0 then\n            table.insert(letter_grades, 'D+')\n\
    \        elseif v > 0.7 then\n            table.insert(letter_grades, 'D')\n \
    \       elseif v > 0.0 then\n            table.insert(letter_grades, 'D-')\n \
    \       else\n            table.insert(letter_grades, 'E')\n        end\n    end\n\
    \    return letter_grades\nend", "  --[[\n  Returns the numerical letter grade\n\
    \  >>> numerical_letter_grade(4.0)\n  4\n  >>> numerical_letter_grade(2.7)\n \
    \ 2.7\n  >>> numerical_letter_grade(2.4)\n  2.3\n  >>> numerical_letter_grade(1.8)\n\
    \  1.7\n  >>> numerical_letter_grade(0.5)\n  0.0\n  ]]\n  if grades > 4.0 then\n\
    \    return 4.0\n  elseif grades > 3.7 then\n    return 3.7\n  elseif grades >\
    \ 3.3 then\n    return 3.3\n  elseif grades > 3.0 then\n    return 3.0\n  elseif\
    \ grades > 2.7 then\n    return 2.7\n  elseif grades > 2.3 then\n    return 2.3\n\
    \  elseif grades > 2.0 then\n    return 2.0\n  elseif grades > 1.7 then\n    return\
    \ 1.7\n  elseif grades > 1.3 then\n    return 1.3\n  elseif grades > 1.0 then\n\
    \    return 1.0\n  elseif grades > 0.7 then\n    return 0.7\n  elseif grades >\
    \ 0.0 then\n    return 0.0\n  else\n    return 0.0\n  end\nend", "    local function\
    \ get_letter_grade(gpa)\n        if gpa == 4.0 then\n            return 'A+'\n\
    \        elseif gpa >= 3.7 then\n            return 'A'\n        elseif gpa >=\
    \ 3.3 then\n            return 'A-'\n        elseif gpa >= 3.0 then\n        \
    \    return 'B+'\n        elseif gpa >= 2.7 then\n            return 'B'\n   \
    \     elseif gpa >= 2.3 then\n            return 'B-'\n        elseif gpa >= 2.0\
    \ then\n            return 'C+'\n        elseif gpa >= 1.7 then\n            return\
    \ 'C'\n        elseif gpa >= 1.3 then\n            return 'C-'\n        elseif\
    \ gpa >= 1.0 then\n            return 'D+'\n        elseif gpa >= 0.7 then\n \
    \           return 'D'\n        elseif gpa >= 0.0 then\n            return 'D-'\n\
    \        else\n            return 'E'\n        end\n    end\n    local letter_grades\
    \ = {}\n    for i, grade in ipairs(grades) do\n        table.insert(letter_grades,\
    \ get_letter_grade(grade))\n    end\n    return letter_grades\nend", "    return\
    \ map(function(grade)\n        if grade >= 4.0 then\n            return 'A+'\n\
    \        elseif grade >= 3.7 then\n            return 'A'\n        elseif grade\
    \ >= 3.3 then\n            return 'A-'\n        elseif grade >= 3.0 then\n   \
    \         return 'B+'\n        elseif grade >= 2.7 then\n            return 'B'\n\
    \        elseif grade >= 2.3 then\n            return 'B-'\n        elseif grade\
    \ >= 2.0 then\n            return 'C+'\n        elseif grade >= 1.7 then\n   \
    \         return 'C'\n        elseif grade >= 1.3 then\n            return 'C-'\n\
    \        elseif grade >= 1.0 then\n            return 'D+'\n        elseif grade\
    \ >= 0.7 then\n            return 'D'\n        elseif grade >= 0.0 then\n    \
    \        return 'D-'\n        else\n            return 'E'\n        end\n    end,\
    \ grades)\nend", "    local letter_grades = {}\n    for i, v in ipairs(grades)\
    \ do\n        if v == 4.0 then\n            table.insert(letter_grades, 'A+')\n\
    \        elseif v > 3.7 then\n            table.insert(letter_grades, 'A')\n \
    \       elseif v > 3.3 then\n            table.insert(letter_grades, 'A-')\n \
    \       elseif v > 3.0 then\n            table.insert(letter_grades, 'B+')\n \
    \       elseif v > 2.7 then\n            table.insert(letter_grades, 'B')\n  \
    \      elseif v > 2.3 then\n            table.insert(letter_grades, 'B-')\n  \
    \      elseif v > 2.0 then\n            table.insert(letter_grades, 'C+')\n  \
    \      elseif v > 1.7 then\n            table.insert(letter_grades, 'C')\n   \
    \     elseif v > 1.3 then\n            table.insert(letter_grades, 'C-')\n   \
    \     elseif v > 1.0 then\n            table.insert(letter_grades, 'D+')\n   \
    \     elseif v > 0.7 then\n            table.insert(letter_grades, 'D')\n    \
    \    elseif v > 0.0 then\n            table.insert(letter_grades, 'D-')\n    \
    \    else\n            table.insert(letter_grades, 'E')\n        end\n    end\n\
    \    return letter_grades\nend", "    -- Your code goes here.\n    local letter_grades\
    \ = {}\n    local function gpa_letter_grade(gpa)\n        local letter_grade =\
    \ \"\"\n        if gpa == 4.0 then letter_grade = \"A+\"\n        elseif gpa >\
    \ 3.7 then letter_grade = \"A\"\n        elseif gpa > 3.3 then letter_grade =\
    \ \"A-\"\n        elseif gpa > 3.0 then letter_grade = \"B+\"\n        elseif\
    \ gpa > 2.7 then letter_grade = \"B\"\n        elseif gpa > 2.3 then letter_grade\
    \ = \"B-\"\n        elseif gpa > 2.0 then letter_grade = \"C+\"\n        elseif\
    \ gpa > 1.7 then letter_grade = \"C\"\n        elseif gpa > 1.3 then letter_grade\
    \ = \"C-\"\n        elseif gpa > 1.0 then letter_grade = \"D+\"\n        elseif\
    \ gpa > 0.7 then letter_grade = \"D\"\n        elseif gpa > 0.0 then letter_grade\
    \ = \"D-\"\n        else letter_grade = \"E\"\n        end\n        return letter_grade\n\
    \    end\n    for _, grade in ipairs(grades) do\n        table.insert(letter_grades,\
    \ gpa_letter_grade(grade))\n    end\n    return letter_grades\nend", "    local\
    \ grades = {4.0, 3, 1.7, 2, 3.5}\n    local letter_grades = {}\n    for i,j in\
    \ pairs(grades) do\n        if j == 4.0 then\n            table.insert(letter_grades,\
    \ 'A+')\n        elseif j > 3.7 then\n            table.insert(letter_grades,\
    \ 'A')\n        elseif j > 3.3 then\n            table.insert(letter_grades, 'A-')\n\
    \        elseif j > 3.0 then\n            table.insert(letter_grades, 'B+')\n\
    \        elseif j > 2.7 then\n            table.insert(letter_grades, 'B')\n \
    \       elseif j > 2.3 then\n            table.insert(letter_grades, 'B-')\n \
    \       elseif j > 2.0 then\n            table.insert(letter_grades, 'C+')\n \
    \       elseif j > 1.7 then\n            table.insert(letter_grades, 'C')\n  \
    \      elseif j > 1.3 then\n            table.insert(letter_grades, 'C-')\n  \
    \      elseif j > 1.0 then\n            table.insert(letter_grades, 'D+')\n  \
    \      elseif j > 0.7 then\n            table.insert(letter_grades, 'D')\n   \
    \     elseif j > 0.0 then\n            table.insert(letter_grades, 'D-')\n   \
    \     elseif j == 0.0 then\n            table.insert(letter_grades, 'E')\n   \
    \     end\n    end\n    return letter_grades\nend", "    local letter_grades =\
    \ {}\n    local grad = 0\n    for k, v in pairs(grades) do\n        if v >= 4.0\
    \ then\n            grad = \"A+\"\n        elseif v >= 3.7 then\n            grad\
    \ = \"A\"\n        elseif v >= 3.3 then\n            grad = \"A-\"\n        elseif\
    \ v >= 3.0 then\n            grad = \"B+\"\n        elseif v >= 2.7 then\n   \
    \         grad = \"B\"\n        elseif v >= 2.3 then\n            grad = \"B-\"\
    \n        elseif v >= 2.0 then\n            grad = \"C+\"\n        elseif v >=\
    \ 1.7 then\n            grad = \"C\"\n        elseif v >= 1.3 then\n         \
    \   grad = \"C-\"\n        elseif v >= 1.0 then\n            grad = \"D+\"\n \
    \       elseif v >= 0.7 then\n            grad = \"D\"\n        elseif v >= 0.0\
    \ then\n            grad = \"D-\"\n        else\n            grad = \"E\"\n  \
    \      end\n        table.insert(letter_grades, grad)\n    end\n    return letter_grades\n\
    end", "\tlocal letter_grades = {}\n\tfor _, grade in ipairs(grades) do\n\t\tif\
    \ grade >= 4.0 then\n\t\t\ttable.insert(letter_grades, 'A+')\n\t\telseif grade\
    \ >= 3.7 then\n\t\t\ttable.insert(letter_grades, 'A')\n\t\telseif grade >= 3.3\
    \ then\n\t\t\ttable.insert(letter_grades, 'A-')\n\t\telseif grade >= 3.0 then\n\
    \t\t\ttable.insert(letter_grades, 'B+')\n\t\telseif grade >= 2.7 then\n\t\t\t\
    table.insert(letter_grades, 'B')\n\t\telseif grade >= 2.3 then\n\t\t\ttable.insert(letter_grades,\
    \ 'B-')\n\t\telseif grade >= 2.0 then\n\t\t\ttable.insert(letter_grades, 'C+')\n\
    \t\telseif grade >= 1.7 then\n\t\t\ttable.insert(letter_grades, 'C')\n\t\telseif\
    \ grade >= 1.3 then\n\t\t\ttable.insert(letter_grades, 'C-')\n\t\telseif grade\
    \ >= 1.0 then\n\t\t\ttable.insert(letter_grades, 'D+')\n\t\telseif grade >= 0.7\
    \ then\n\t\t\ttable.insert(letter_grades, 'D')\n\t\telseif grade >= 0.0 then\n\
    \t\t\ttable.insert(letter_grades, 'D-')\n\t\telse\n\t\t\ttable.insert(letter_grades,\
    \ 'E')\n\t\tend\n\tend\n\treturn letter_grades\nend", "    local grades_chart\
    \ = {'A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'D-', 'E'}\n\
    \    local grades_values = {4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0,\
    \ 0.7, 0.0, 0.0}\n    local new_grades = {}\n    for i = 1, #grades do\n     \
    \   for j = 1, #grades_values do\n            if grades[i] >= grades_values[j]\
    \ then\n                new_grades[i] = grades_chart[j]\n                break\n\
    \            end\n        end\n    end\n    return new_grades\nend", "  local\
    \ letter_grades = {}\n  for _, grade in ipairs(grades) do\n    if grade == 4.0\
    \ then \n      table.insert(letter_grades, 'A+')\n    elseif grade > 3.7 then\n\
    \      table.insert(letter_grades, 'A')\n    elseif grade > 3.3 then\n      table.insert(letter_grades,\
    \ 'A-')\n    elseif grade > 3.0 then\n      table.insert(letter_grades, 'B+')\n\
    \    elseif grade > 2.7 then\n      table.insert(letter_grades, 'B')\n    elseif\
    \ grade > 2.3 then\n      table.insert(letter_grades, 'B-')\n    elseif grade\
    \ > 2.0 then\n      table.insert(letter_grades, 'C+')\n    elseif grade > 1.7\
    \ then\n      table.insert(letter_grades, 'C')\n    elseif grade > 1.3 then\n\
    \      table.insert(letter_grades, 'C-')\n    elseif grade > 1.0 then\n      table.insert(letter_grades,\
    \ 'D+')\n    elseif grade > 0.7 then\n      table.insert(letter_grades, 'D')\n\
    \    elseif grade > 0.0 then\n      table.insert(letter_grades, 'D-')\n    else\n\
    \      table.insert(letter_grades, 'E')\n    end\n  end\n  return letter_grades\n\
    end", "    local result = {}\n    for i = 1, #grades do\n        local grade =\
    \ grades[i]\n        if grade >= 4.0 then\n            result[i] = 'A+'\n    \
    \    elseif grade >= 3.7 then\n            result[i] = 'A'\n        elseif grade\
    \ >= 3.3 then\n            result[i] = 'A-'\n        elseif grade >= 3.0 then\n\
    \            result[i] = 'B+'\n        elseif grade >= 2.7 then\n            result[i]\
    \ = 'B'\n        elseif grade >= 2.3 then\n            result[i] = 'B-'\n    \
    \    elseif grade >= 2.0 then\n            result[i] = 'C+'\n        elseif grade\
    \ >= 1.7 then\n            result[i] = 'C'\n        elseif grade >= 1.3 then\n\
    \            result[i] = 'C-'\n        elseif grade >= 1.0 then\n            result[i]\
    \ = 'D+'\n        elseif grade >= 0.7 then\n            result[i] = 'D'\n    \
    \    elseif grade >= 0.0 then\n            result[i] = 'D-'\n        elseif grade\
    \ < 0.0 then\n            result[i] = 'E'\n        end\n    end\n    return result\n\
    end", "  local letter_grades = {}\n  for _, number in ipairs(grades) do\n    table.insert(letter_grades,\
    \ get_letter_grade(number))\n  end\n  return letter_grades\nend", "    -- We create\
    \ an array of letters\n    -- This array is indexed with the corresponding GPA\n\
    \    local letters = {\n        [4.0] = 'A+',\n        [3.7] = 'A',\n        [3.3]\
    \ = 'A-',\n        [3.0] = 'B+',\n        [2.7] = 'B',\n        [2.3] = 'B-',\n\
    \        [2.0] = 'C+',\n        [1.7] = 'C',\n        [1.3] = 'C-',\n        [1.0]\
    \ = 'D+',\n        [0.7] = 'D',\n        [0.0] = 'D-',\n        [-1.0] = 'E'\n\
    \    }\n    -- We create the empty table to store letter grades\n    local letter_grades\
    \ = {}\n    -- We iterate through all the grades we were given\n    for k, v in\
    \ pairs(grades) do\n        -- We iterate through all the GPA values in the letter\
    \ array\n        for grade, letter in pairs(letters) do\n            -- We use\
    \ a math.floor function because\n            -- it will always give us a lower\
    \ or equal number\n            -- and we want to assign the higher grade\n   \
    \         if math.floor(v) == grade then\n                table.insert(letter_grades,\
    \ letter)\n            end\n        end\n    end\n    return letter_grades\nend",
  "  local letter_grades = {}\n  local grade_list = {'A+', 'A', 'A-', 'B+', 'B', 'B-',\
    \ 'C+', 'C', 'C-', 'D+', 'D', 'D-', 'E'}\n  local grade_lower_bound = {4.0, 3.7,\
    \ 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0, 0.0}\n  local grade_upper_bound\
    \ = {3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0, 0.0, 0.0}\n  for i\
    \ = 1, #grades do\n    for j = 1, #grade_list do\n      if grades[i] >= grade_lower_bound[j]\
    \ and grades[i] < grade_upper_bound[j] then\n        letter_grades[i] = grade_list[j]\n\
    \      end\n    end\n  end\n  return letter_grades\nend", "    local grades_table\
    \ = {}\n    for k, grade in pairs(grades) do\n        if grade >= 4.0 then\n \
    \           grades_table[k] = 'A+'\n        elseif grade >= 3.7 then\n       \
    \     grades_table[k] = 'A'\n        elseif grade >= 3.3 then\n            grades_table[k]\
    \ = 'A-'\n        elseif grade >= 3.0 then\n            grades_table[k] = 'B+'\n\
    \        elseif grade >= 2.7 then\n            grades_table[k] = 'B'\n       \
    \ elseif grade >= 2.3 then\n            grades_table[k] = 'B-'\n        elseif\
    \ grade >= 2.0 then\n            grades_table[k] = 'C+'\n        elseif grade\
    \ >= 1.7 then\n            grades_table[k] = 'C'\n        elseif grade >= 1.3\
    \ then\n            grades_table[k] = 'C-'\n        elseif grade >= 1.0 then\n\
    \            grades_table[k] = 'D+'\n        elseif grade >= 0.7 then\n      \
    \      grades_table[k] = 'D'\n        elseif grade >= 0.0 then\n            grades_table[k]\
    \ = 'D-'\n        else\n            grades_table[k] = 'E'\n        end\n    end\n\
    \    return grades_table\nend", "   local result = {}\n   for i = 1, #grades do\n\
    \      local grade = grades[i]\n      local letter_grade = 'N/A'\n      if grade\
    \ >= 4.0 then letter_grade = 'A+'\n      elseif grade >= 3.7 then letter_grade\
    \ = 'A'\n      elseif grade >= 3.3 then letter_grade = 'A-'\n      elseif grade\
    \ >= 3.0 then letter_grade = 'B+'\n      elseif grade >= 2.7 then letter_grade\
    \ = 'B'\n      elseif grade >= 2.3 then letter_grade = 'B-'\n      elseif grade\
    \ >= 2.0 then letter_grade = 'C+'\n      elseif grade >= 1.7 then letter_grade\
    \ = 'C'\n      elseif grade >= 1.3 then letter_grade = 'C-'\n      elseif grade\
    \ >= 1.0 then letter_grade = 'D+'\n      elseif grade >= 0.7 then letter_grade\
    \ = 'D'\n      elseif grade >= 0.0 then letter_grade = 'D-'\n      else letter_grade\
    \ = 'E'\n      end\n      result[i] = letter_grade\n   end\n   return result\n\
    end", "  local new_grades = {}\n  for key, grade in pairs(grades) do\n    if grade\
    \ >= 4.0 then\n      new_grades[key] = 'A+'\n    elseif grade >= 3.7 then\n  \
    \    new_grades[key] = 'A'\n    elseif grade >= 3.3 then\n      new_grades[key]\
    \ = 'A-'\n    elseif grade >= 3.0 then\n      new_grades[key] = 'B+'\n    elseif\
    \ grade >= 2.7 then\n      new_grades[key] = 'B'\n    elseif grade >= 2.3 then\n\
    \      new_grades[key] = 'B-'\n    elseif grade >= 2.0 then\n      new_grades[key]\
    \ = 'C+'\n    elseif grade >= 1.7 then\n      new_grades[key] = 'C'\n    elseif\
    \ grade >= 1.3 then\n      new_grades[key] = 'C-'\n    elseif grade >= 1.0 then\n\
    \      new_grades[key] = 'D+'\n    elseif grade >= 0.7 then\n      new_grades[key]\
    \ = 'D'\n    elseif grade >= 0.0 then\n      new_grades[key] = 'D-'\n    elseif\
    \ grade >= 0.0 then\n      new_grades[key] = 'E'\n    end\n  end\n  return new_grades\n\
    end", "\tlocal letter_grades = {}\n\tfor i = 1, #grades do\n\t\tif grades[i] >\
    \ 3.7 then\n\t\t\tletter_grades[i] = 'A+'\n\t\telseif grades[i] > 3.3 then\n\t\
    \t\tletter_grades[i] = 'A'\n\t\telseif grades[i] > 3.0 then\n\t\t\tletter_grades[i]\
    \ = 'A-'\n\t\telseif grades[i] > 2.7 then\n\t\t\tletter_grades[i] = 'B+'\n\t\t\
    elseif grades[i] > 2.3 then\n\t\t\tletter_grades[i] = 'B'\n\t\telseif grades[i]\
    \ > 2.0 then\n\t\t\tletter_grades[i] = 'B-'\n\t\telseif grades[i] > 1.7 then\n\
    \t\t\tletter_grades[i] = 'C+'\n\t\telseif grades[i] > 1.3 then\n\t\t\tletter_grades[i]\
    \ = 'C'\n\t\telseif grades[i] > 1.0 then\n\t\t\tletter_grades[i] = 'C-'\n\t\t\
    elseif grades[i] > 0.7 then\n\t\t\tletter_grades[i] = 'D+'\n\t\telseif grades[i]\
    \ > 0.0 then\n\t\t\tletter_grades[i] = 'D'\n\t\telseif grades[i] == 0.0 then\n\
    \t\t\tletter_grades[i] = 'D-'\n\t\telseif grades[i] < 0.0 then\n\t\t\tletter_grades[i]\
    \ = 'E'\n\t\tend\n\tend\n\treturn letter_grades\nend\nreturn numerical_letter_grade",
  "    local grade_letter_dictionary = {\n        [4.0] = 'A+',\n        [3.7] = 'A',\n\
    \        [3.3] = 'A-',\n        [3.0] = 'B+',\n        [2.7] = 'B',\n        [2.3]\
    \ = 'B-',\n        [2.0] = 'C+',\n        [1.7] = 'C',\n        [1.3] = 'C-',\n\
    \        [1.0] = 'D+',\n        [0.7] = 'D',\n        [0.0] = 'D-',\n        [-0.0]\
    \ = 'E'\n    }\n    local grade_letter_list = {}\n    for grade, _ in pairs(grades)\
    \ do\n        local letter_grade = grade_letter_dictionary[grade]\n        table.insert(grade_letter_list,\
    \ letter_grade)\n    end\n    return grade_letter_list\nend", "    -- use a table\
    \ to keep track of the letter grades\n    local letter_grades = {}\n    -- store\
    \ the letters\n    local letters = {\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\"\
    , \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"}\n    -- store the numbers\n\
    \    local numbers = {4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0,\
    \ 0.0}\n    -- loop through the grades given\n    for k, v in pairs(grades) do\n\
    \        -- loop through the numbers given\n        for i, j in pairs(numbers)\
    \ do\n            -- if the given number is less than or equal to the number given\n\
    \            if v <= j then\n                -- append the letter grade to the\
    \ table\n                table.insert(letter_grades, letters[i])\n           \
    \     -- break from the loop\n                break\n            end\n       \
    \ end\n    end\n    -- return the letter grades\n    return letter_grades\nend",
  "  local letter_grades = {}\n  for k, v in pairs(grades) do\n    if(v >= 4.0) then\n\
    \      table.insert(letter_grades, 'A+')\n    elseif(v >= 3.7) then\n      table.insert(letter_grades,\
    \ 'A')\n    elseif(v >= 3.3) then\n      table.insert(letter_grades, 'A-')\n \
    \   elseif(v >= 3.0) then\n      table.insert(letter_grades, 'B+')\n    elseif(v\
    \ >= 2.7) then\n      table.insert(letter_grades, 'B')\n    elseif(v >= 2.3) then\n\
    \      table.insert(letter_grades, 'B-')\n    elseif(v >= 2.0) then\n      table.insert(letter_grades,\
    \ 'C+')\n    elseif(v >= 1.7) then\n      table.insert(letter_grades, 'C')\n \
    \   elseif(v >= 1.3) then\n      table.insert(letter_grades, 'C-')\n    elseif(v\
    \ >= 1.0) then\n      table.insert(letter_grades, 'D+')\n    elseif(v >= 0.7)\
    \ then\n      table.insert(letter_grades, 'D')\n    elseif(v >= 0.0) then\n  \
    \    table.insert(letter_grades, 'D-')\n    else\n      table.insert(letter_grades,\
    \ 'E')\n    end\n  end\n  return letter_grades\nend", "    local letter_grades\
    \ = {}\n    for i = 1, #grades do\n        if grades[i] >= 4.0 then\n        \
    \    letter_grades[i] = 'A+'\n        elseif grades[i] >= 3.7 then\n         \
    \   letter_grades[i] = 'A'\n        elseif grades[i] >= 3.3 then\n           \
    \ letter_grades[i] = 'A-'\n        elseif grades[i] >= 3.0 then\n            letter_grades[i]\
    \ = 'B+'\n        elseif grades[i] >= 2.7 then\n            letter_grades[i] =\
    \ 'B'\n        elseif grades[i] >= 2.3 then\n            letter_grades[i] = 'B-'\n\
    \        elseif grades[i] >= 2.0 then\n            letter_grades[i] = 'C+'\n \
    \       elseif grades[i] >= 1.7 then\n            letter_grades[i] = 'C'\n   \
    \     elseif grades[i] >= 1.3 then\n            letter_grades[i] = 'C-'\n    \
    \    elseif grades[i] >= 1.0 then\n            letter_grades[i] = 'D+'\n     \
    \   elseif grades[i] >= 0.7 then\n            letter_grades[i] = 'D'\n       \
    \ elseif grades[i] >= 0.0 then\n            letter_grades[i] = 'D-'\n        else\n\
    \            letter_grades[i] = 'E'\n        end\n    end\n    return letter_grades\n\
    end", "    local letter_grades = {}\n    for _, grade in ipairs(grades) do\n \
    \       if grade >= 4.0 then\n            table.insert(letter_grades, 'A+')\n\
    \        elseif grade >= 3.7 then\n            table.insert(letter_grades, 'A')\n\
    \        elseif grade >= 3.3 then\n            table.insert(letter_grades, 'A-')\n\
    \        elseif grade >= 3.0 then\n            table.insert(letter_grades, 'B+')\n\
    \        elseif grade >= 2.7 then\n            table.insert(letter_grades, 'B')\n\
    \        elseif grade >= 2.3 then\n            table.insert(letter_grades, 'B-')\n\
    \        elseif grade >= 2.0 then\n            table.insert(letter_grades, 'C+')\n\
    \        elseif grade >= 1.7 then\n            table.insert(letter_grades, 'C')\n\
    \        elseif grade >= 1.3 then\n            table.insert(letter_grades, 'C-')\n\
    \        elseif grade >= 1.0 then\n            table.insert(letter_grades, 'D+')\n\
    \        elseif grade >= 0.7 then\n            table.insert(letter_grades, 'D')\n\
    \        elseif grade >= 0.0 then\n            table.insert(letter_grades, 'D-')\n\
    \        else\n            table.insert(letter_grades, 'E')\n        end\n   \
    \ end\n    return letter_grades\nend", "    local letter_grades = {}\n    for\
    \ i, grade in ipairs(grades) do\n        if grade >= 4.0 then\n            letter_grades[i]\
    \ = 'A+'\n        elseif grade >= 3.7 then\n            letter_grades[i] = 'A'\n\
    \        elseif grade >= 3.3 then\n            letter_grades[i] = 'A-'\n     \
    \   elseif grade >= 3.0 then\n            letter_grades[i] = 'B+'\n        elseif\
    \ grade >= 2.7 then\n            letter_grades[i] = 'B'\n        elseif grade\
    \ >= 2.3 then\n            letter_grades[i] = 'B-'\n        elseif grade >= 2.0\
    \ then\n            letter_grades[i] = 'C+'\n        elseif grade >= 1.7 then\n\
    \            letter_grades[i] = 'C'\n        elseif grade >= 1.3 then\n      \
    \      letter_grades[i] = 'C-'\n        elseif grade >= 1.0 then\n           \
    \ letter_grades[i] = 'D+'\n        elseif grade >= 0.7 then\n            letter_grades[i]\
    \ = 'D'\n        elseif grade >= 0.0 then\n            letter_grades[i] = 'D-'\n\
    \        else\n            letter_grades[i] = 'E'\n        end\n    end\n    return\
    \ letter_grades\nend", "    local return_grades = {}\n    for i = 1, #grades do\n\
    \        local grade = grades[i]\n        if grade >= 4.0 then\n            return_grades[i]\
    \ = 'A+'\n        elseif grade >= 3.7 then\n            return_grades[i] = 'A'\n\
    \        elseif grade >= 3.3 then\n            return_grades[i] = 'A-'\n     \
    \   elseif grade >= 3.0 then\n            return_grades[i] = 'B+'\n        elseif\
    \ grade >= 2.7 then\n            return_grades[i] = 'B'\n        elseif grade\
    \ >= 2.3 then\n            return_grades[i] = 'B-'\n        elseif grade >= 2.0\
    \ then\n            return_grades[i] = 'C+'\n        elseif grade >= 1.7 then\n\
    \            return_grades[i] = 'C'\n        elseif grade >= 1.3 then\n      \
    \      return_grades[i] = 'C-'\n        elseif grade >= 1.0 then\n           \
    \ return_grades[i] = 'D+'\n        elseif grade >= 0.7 then\n            return_grades[i]\
    \ = 'D'\n        elseif grade >= 0.0 then\n            return_grades[i] = 'D-'\n\
    \        else\n            return_grades[i] = 'E'\n        end\n    end\n    return\
    \ return_grades\nend", "    grades = grades or {}\n    local grades_letters =\
    \ {}\n    for _, grade in ipairs(grades) do\n        if     grade >= 4.0 then\
    \ grades_letters[#grades_letters+1] = 'A+'\n        elseif grade >= 3.7 then grades_letters[#grades_letters+1]\
    \ = 'A'\n        elseif grade >= 3.3 then grades_letters[#grades_letters+1] =\
    \ 'A-'\n        elseif grade >= 3.0 then grades_letters[#grades_letters+1] = 'B+'\n\
    \        elseif grade >= 2.7 then grades_letters[#grades_letters+1] = 'B'\n  \
    \      elseif grade >= 2.3 then grades_letters[#grades_letters+1] = 'B-'\n   \
    \     elseif grade >= 2.0 then grades_letters[#grades_letters+1] = 'C+'\n    \
    \    elseif grade >= 1.7 then grades_letters[#grades_letters+1] = 'C'\n      \
    \  elseif grade >= 1.3 then grades_letters[#grades_letters+1] = 'C-'\n       \
    \ elseif grade >= 1.0 then grades_letters[#grades_letters+1] = 'D+'\n        elseif\
    \ grade >= 0.7 then grades_letters[#grades_letters+1] = 'D'\n        elseif grade\
    \ >= 0.0 then grades_letters[#grades_letters+1] = 'D-'\n        else         \
    \           grades_letters[#grades_letters+1] = 'E'\n        end\n    end\n  \
    \  return grades_letters\nend", "    local result = {}\n    for i = 1, #grades\
    \ do\n        if grades[i] >= 4.0 then\n            result[i] = 'A+'\n       \
    \ elseif grades[i] >= 3.7 then\n            result[i] = 'A'\n        elseif grades[i]\
    \ >= 3.3 then\n            result[i] = 'A-'\n        elseif grades[i] >= 3.0 then\n\
    \            result[i] = 'B+'\n        elseif grades[i] >= 2.7 then\n        \
    \    result[i] = 'B'\n        elseif grades[i] >= 2.3 then\n            result[i]\
    \ = 'B-'\n        elseif grades[i] >= 2.0 then\n            result[i] = 'C+'\n\
    \        elseif grades[i] >= 1.7 then\n            result[i] = 'C'\n        elseif\
    \ grades[i] >= 1.3 then\n            result[i] = 'C-'\n        elseif grades[i]\
    \ >= 1.0 then\n            result[i] = 'D+'\n        elseif grades[i] >= 0.7 then\n\
    \            result[i] = 'D'\n        elseif grades[i] >= 0.0 then\n         \
    \   result[i] = 'D-'\n        else\n            result[i] = 'E'\n        end\n\
    \    end\n    return result\nend", "    local lookup = {\n        [4.0] = 'A+',\n\
    \        [3.7] = 'A',\n        [3.3] = 'A-',\n        [3.0] = 'B+',\n        [2.7]\
    \ = 'B',\n        [2.3] = 'B-',\n        [2.0] = 'C+',\n        [1.7] = 'C',\n\
    \        [1.3] = 'C-',\n        [1.0] = 'D+',\n        [0.7] = 'D',\n        [0.0]\
    \ = 'D-',\n        [-1.0] = 'E'\n    }\n    local letter_grades = {}\n    for\
    \ _, grade in ipairs(grades) do\n        local letter_grade = lookup[grade]\n\
    \        if letter_grade == nil then\n            for key, val in pairs(lookup)\
    \ do\n                if grade > key then\n                    letter_grade =\
    \ val\n                    break\n                end\n            end\n     \
    \   end\n        table.insert(letter_grades, letter_grade)\n    end\n    return\
    \ letter_grades\nend", "    local function lg(g)\n        local f = function(x)\n\
    \            return x + g\n        end\n        return f\n    end\n    return\
    \ table.map(lg, grades)\nend", "    local result = {}\n    for i, grade in ipairs(grades)\
    \ do\n        if grade >= 4.0 then\n            result[i] = 'A+'\n        elseif\
    \ grade >= 3.7 then\n            result[i] = 'A'\n        elseif grade >= 3.3\
    \ then\n            result[i] = 'A-'\n        elseif grade >= 3.0 then\n     \
    \       result[i] = 'B+'\n        elseif grade >= 2.7 then\n            result[i]\
    \ = 'B'\n        elseif grade >= 2.3 then\n            result[i] = 'B-'\n    \
    \    elseif grade >= 2.0 then\n            result[i] = 'C+'\n        elseif grade\
    \ >= 1.7 then\n            result[i] = 'C'\n        elseif grade >= 1.3 then\n\
    \            result[i] = 'C-'\n        elseif grade >= 1.0 then\n            result[i]\
    \ = 'D+'\n        elseif grade >= 0.7 then\n            result[i] = 'D'\n    \
    \    elseif grade >= 0.0 then\n            result[i] = 'D-'\n        else\n  \
    \          result[i] = 'E'\n        end\n    end\n    return result\nend", " \
    \   local letter_grades = {}\n    for _, grade in ipairs(grades) do\n        if\
    \ grade > 4.0 then\n            table.insert(letter_grades, 'A+')\n        elseif\
    \ grade > 3.7 then\n            table.insert(letter_grades, 'A')\n        elseif\
    \ grade > 3.3 then\n            table.insert(letter_grades, 'A-')\n        elseif\
    \ grade > 3.0 then\n            table.insert(letter_grades, 'B+')\n        elseif\
    \ grade > 2.7 then\n            table.insert(letter_grades, 'B')\n        elseif\
    \ grade > 2.3 then\n            table.insert(letter_grades, 'B-')\n        elseif\
    \ grade > 2.0 then\n            table.insert(letter_grades, 'C+')\n        elseif\
    \ grade > 1.7 then\n            table.insert(letter_grades, 'C')\n        elseif\
    \ grade > 1.3 then\n            table.insert(letter_grades, 'C-')\n        elseif\
    \ grade > 1.0 then\n            table.insert(letter_grades, 'D+')\n        elseif\
    \ grade > 0.7 then\n            table.insert(letter_grades, 'D')\n        elseif\
    \ grade > 0.0 then\n            table.insert(letter_grades, 'D-')\n        else\n\
    \            table.insert(letter_grades, 'E')\n        end\n    end\n    return\
    \ letter_grades\nend", "    -- TODO: Your code here.\nend", "    local grades_return\
    \ = {}\n    for _, value in ipairs(grades) do\n        if value >= 4.0 then\n\
    \            table.insert(grades_return, 'A+')\n        elseif value > 3.7 then\n\
    \            table.insert(grades_return, 'A')\n        elseif value > 3.3 then\n\
    \            table.insert(grades_return, 'A-')\n        elseif value > 3.0 then\n\
    \            table.insert(grades_return, 'B+')\n        elseif value > 2.7 then\n\
    \            table.insert(grades_return, 'B')\n        elseif value > 2.3 then\n\
    \            table.insert(grades_return, 'B-')\n        elseif value > 2.0 then\n\
    \            table.insert(grades_return, 'C+')\n        elseif value > 1.7 then\n\
    \            table.insert(grades_return, 'C')\n        elseif value > 1.3 then\n\
    \            table.insert(grades_return, 'C-')\n        elseif value > 1.0 then\n\
    \            table.insert(grades_return, 'D+')\n        elseif value > 0.7 then\n\
    \            table.insert(grades_return, 'D')\n        elseif value > 0.0 then\n\
    \            table.insert(grades_return, 'D-')\n        elseif value == 0.0 then\n\
    \            table.insert(grades_return, 'E')\n        end\n    end\n    return\
    \ grades_return\nend", "  local grade_equation = {}\n  for key, value in pairs(grades)\
    \ do\n    if value >= 4.0 then\n      table.insert(grade_equation, 'A+')\n   \
    \ elseif value >= 3.7 then\n      table.insert(grade_equation, 'A')\n    elseif\
    \ value >= 3.3 then\n      table.insert(grade_equation, 'A-')\n    elseif value\
    \ >= 3.0 then\n      table.insert(grade_equation, 'B+')\n    elseif value >= 2.7\
    \ then\n      table.insert(grade_equation, 'B')\n    elseif value >= 2.3 then\n\
    \      table.insert(grade_equation, 'B-')\n    elseif value >= 2.0 then\n    \
    \  table.insert(grade_equation, 'C+')\n    elseif value >= 1.7 then\n      table.insert(grade_equation,\
    \ 'C')\n    elseif value >= 1.3 then\n      table.insert(grade_equation, 'C-')\n\
    \    elseif value >= 1.0 then\n      table.insert(grade_equation, 'D+')\n    elseif\
    \ value >= 0.7 then\n      table.insert(grade_equation, 'D')\n    elseif value\
    \ >= 0.0 then\n      table.insert(grade_equation, 'D-')\n    else\n      table.insert(grade_equation,\
    \ 'E')\n    end\n  end\n  return grade_equation\nend", "    local result = {}\n\
    \    for _, grade in ipairs(grades) do\n        local letter = \"E\"\n       \
    \ if grade > 4.0 then\n            letter = \"A+\"\n        elseif grade > 3.7\
    \ then\n            letter = \"A\"\n        elseif grade > 3.3 then\n        \
    \    letter = \"A-\"\n        elseif grade > 3.0 then\n            letter = \"\
    B+\"\n        elseif grade > 2.7 then\n            letter = \"B\"\n        elseif\
    \ grade > 2.3 then\n            letter = \"B-\"\n        elseif grade > 2.0 then\n\
    \            letter = \"C+\"\n        elseif grade > 1.7 then\n            letter\
    \ = \"C\"\n        elseif grade > 1.3 then\n            letter = \"C-\"\n    \
    \    elseif grade > 1.0 then\n            letter = \"D+\"\n        elseif grade\
    \ > 0.7 then\n            letter = \"D\"\n        elseif grade > 0.0 then\n  \
    \          letter = \"D-\"\n        end\n        table.insert(result, letter)\n\
    \    end\n    return result\nend", "    return {}\nend", "    local letter_grades\
    \ = {}\n    for index, grade in ipairs(grades) do\n        if grade >= 4.0 then\n\
    \            letter_grades[index] = 'A+'\n        elseif grade >= 3.7 then\n \
    \           letter_grades[index] = 'A'\n        elseif grade >= 3.3 then\n   \
    \         letter_grades[index] = 'A-'\n        elseif grade >= 3.0 then\n    \
    \        letter_grades[index] = 'B+'\n        elseif grade >= 2.7 then\n     \
    \       letter_grades[index] = 'B'\n        elseif grade >= 2.3 then\n       \
    \     letter_grades[index] = 'B-'\n        elseif grade >= 2.0 then\n        \
    \    letter_grades[index] = 'C+'\n        elseif grade >= 1.7 then\n         \
    \   letter_grades[index] = 'C'\n        elseif grade >= 1.3 then\n           \
    \ letter_grades[index] = 'C-'\n        elseif grade >= 1.0 then\n            letter_grades[index]\
    \ = 'D+'\n        elseif grade >= 0.7 then\n            letter_grades[index] =\
    \ 'D'\n        elseif grade >= 0.0 then\n            letter_grades[index] = 'D-'\n\
    \        else\n            letter_grades[index] = 'E'\n        end\n    end\n\
    \    return letter_grades\nend", "    local grade_table = {}\n    for i = 1, #grades\
    \ do\n        if grades[i] > 3.7 then\n            grade_table[i] = 'A+'\n   \
    \     elseif grades[i] > 3.3 then\n            grade_table[i] = 'A'\n        elseif\
    \ grades[i] > 3.0 then\n            grade_table[i] = 'A-'\n        elseif grades[i]\
    \ > 2.7 then\n            grade_table[i] = 'B+'\n        elseif grades[i] > 2.3\
    \ then\n            grade_table[i] = 'B'\n        elseif grades[i] > 2.0 then\n\
    \            grade_table[i] = 'B-'\n        elseif grades[i] > 1.7 then\n    \
    \        grade_table[i] = 'C+'\n        elseif grades[i] > 1.3 then\n        \
    \    grade_table[i] = 'C'\n        elseif grades[i] > 1.0 then\n            grade_table[i]\
    \ = 'C-'\n        elseif grades[i] > 0.7 then\n            grade_table[i] = 'D+'\n\
    \        elseif grades[i] > 0.0 then\n            grade_table[i] = 'D'\n     \
    \   elseif grades[i] > 0.0 then\n            grade_table[i] = 'D-'\n        else\n\
    \            grade_table[i] = 'E'\n        end\n    end\n    return grade_table\n\
    end", end, "    local letter_grades = {}\n    for i = 1, #grades do\n        local\
    \ grade = grades[i]\n        if grade >= 4.0 then\n            letter_grades[i]\
    \ = 'A+'\n        elseif grade >= 3.7 then\n            letter_grades[i] = 'A'\n\
    \        elseif grade >= 3.3 then\n            letter_grades[i] = 'A-'\n     \
    \   elseif grade >= 3.0 then\n            letter_grades[i] = 'B+'\n        elseif\
    \ grade >= 2.7 then\n            letter_grades[i] = 'B'\n        elseif grade\
    \ >= 2.3 then\n            letter_grades[i] = 'B-'\n        elseif grade >= 2.0\
    \ then\n            letter_grades[i] = 'C+'\n        elseif grade >= 1.7 then\n\
    \            letter_grades[i] = 'C'\n        elseif grade >= 1.3 then\n      \
    \      letter_grades[i] = 'C-'\n        elseif grade >= 1.0 then\n           \
    \ letter_grades[i] = 'D+'\n        elseif grade >= 0.7 then\n            letter_grades[i]\
    \ = 'D'\n        elseif grade >= 0.0 then\n            letter_grades[i] = 'D-'\n\
    \        else\n            letter_grades[i] = 'E'\n        end\n    end\n    return\
    \ letter_grades\nend", "  local letter_grades = {}\n  for i, grade in ipairs(grades)\
    \ do\n    if grade == 4.0 then\n      letter_grades[i] = 'A+'\n    elseif grade\
    \ > 3.7 then\n      letter_grades[i] = 'A'\n    elseif grade > 3.3 then\n    \
    \  letter_grades[i] = 'A-'\n    elseif grade > 3.0 then\n      letter_grades[i]\
    \ = 'B+'\n    elseif grade > 2.7 then\n      letter_grades[i] = 'B'\n    elseif\
    \ grade > 2.3 then\n      letter_grades[i] = 'B-'\n    elseif grade > 2.0 then\n\
    \      letter_grades[i] = 'C+'\n    elseif grade > 1.7 then\n      letter_grades[i]\
    \ = 'C'\n    elseif grade > 1.3 then\n      letter_grades[i] = 'C-'\n    elseif\
    \ grade > 1.0 then\n      letter_grades[i] = 'D+'\n    elseif grade > 0.7 then\n\
    \      letter_grades[i] = 'D'\n    elseif grade > 0.0 then\n      letter_grades[i]\
    \ = 'D-'\n    elseif grade == 0.0 then\n      letter_grades[i] = 'E'\n    end\n\
    \  end\n  return letter_grades\nend", "    return grades\nend", "    local letter_grades\
    \ = {}\n    for k,v in pairs(grades) do\n        if v == 4.0 then\n          \
    \  table.insert(letter_grades, 'A+')\n        elseif v > 3.7 then\n          \
    \  table.insert(letter_grades, 'A')\n        elseif v > 3.3 then\n           \
    \ table.insert(letter_grades, 'A-')\n        elseif v > 3.0 then\n           \
    \ table.insert(letter_grades, 'B+')\n        elseif v > 2.7 then\n           \
    \ table.insert(letter_grades, 'B')\n        elseif v > 2.3 then\n            table.insert(letter_grades,\
    \ 'B-')\n        elseif v > 2.0 then\n            table.insert(letter_grades,\
    \ 'C+')\n        elseif v > 1.7 then\n            table.insert(letter_grades,\
    \ 'C')\n        elseif v > 1.3 then\n            table.insert(letter_grades, 'C-')\n\
    \        elseif v > 1.0 then\n            table.insert(letter_grades, 'D+')\n\
    \        elseif v > 0.7 then\n            table.insert(letter_grades, 'D')\n \
    \       elseif v > 0.0 then\n            table.insert(letter_grades, 'D-')\n \
    \       else\n            table.insert(letter_grades, 'E')\n        end\n    end\n\
    \    return letter_grades\nend", "\tlocal letter_grades = {}\n\tfor _, gpa in\
    \ ipairs(grades) do\n\t\tif gpa >= 4.0 then\n\t\t\ttable.insert(letter_grades,\
    \ 'A+')\n\t\telseif gpa >= 3.7 then\n\t\t\ttable.insert(letter_grades, 'A')\n\t\
    \telseif gpa >= 3.3 then\n\t\t\ttable.insert(letter_grades, 'A-')\n\t\telseif\
    \ gpa >= 3.0 then\n\t\t\ttable.insert(letter_grades, 'B+')\n\t\telseif gpa >=\
    \ 2.7 then\n\t\t\ttable.insert(letter_grades, 'B')\n\t\telseif gpa >= 2.3 then\n\
    \t\t\ttable.insert(letter_grades, 'B-')\n\t\telseif gpa >= 2.0 then\n\t\t\ttable.insert(letter_grades,\
    \ 'C+')\n\t\telseif gpa >= 1.7 then\n\t\t\ttable.insert(letter_grades, 'C')\n\t\
    \telseif gpa >= 1.3 then\n\t\t\ttable.insert(letter_grades, 'C-')\n\t\telseif\
    \ gpa >= 1.0 then\n\t\t\ttable.insert(letter_grades, 'D+')\n\t\telseif gpa >=\
    \ 0.7 then\n\t\t\ttable.insert(letter_grades, 'D')\n\t\telseif gpa >= 0.0 then\n\
    \t\t\ttable.insert(letter_grades, 'D-')\n\t\telse\n\t\t\ttable.insert(letter_grades,\
    \ 'E')\n\t\tend\n\tend\n\treturn letter_grades\nend", "\tlocal grades = {'A+',\
    \ 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'D-', 'E'}\n\tlocal\
    \ elements = {}\n\tfor grade in grades do\n\t\tlocal g = grades\n\t\tif g > 4.0\
    \ then \n\t\t\tg = 'A+'\n\t\telseif g > 3.7 then\n\t\t\tg = 'A'\n\t\telseif g\
    \ > 3.3 then\n\t\t\tg = 'A-'\n\t\telseif g > 3.0 then\n\t\t\tg = 'B+'\n\t\telseif\
    \ g > 2.7 then\n\t\t\tg = 'B'\n\t\telseif g > 2.3 then\n\t\t\tg = 'B-'\n\t\telseif\
    \ g > 2.0 then\n\t\t\tg = 'C+'\n\t\telseif g > 1.7 then\n\t\t\tg = 'C'\n\t\telseif\
    \ g > 1.3 then\n\t\t\tg = 'C-'\n\t\telseif g > 1.0 then\n\t\t\tg = 'D+'\n\t\t\
    elseif g > 0.7 then\n\t\t\tg = 'D'\n\t\telseif g > 0.0 then\n\t\t\tg = 'D-'\n\t\
    \telseif g == 0.0 then\n\t\t\tg = 'E'\n\t\tend\n\t\ttable.insert(elements, g)\n\
    \tend\n\treturn elements\nend", "    local letters = {}\n    for i, v in ipairs(grades)\
    \ do\n        if     v >= 4.0 then letters[i] = 'A+'\n        elseif v >= 3.7\
    \ then letters[i] = 'A'\n        elseif v >= 3.3 then letters[i] = 'A-'\n    \
    \    elseif v >= 3.0 then letters[i] = 'B+'\n        elseif v >= 2.7 then letters[i]\
    \ = 'B'\n        elseif v >= 2.3 then letters[i] = 'B-'\n        elseif v >= 2.0\
    \ then letters[i] = 'C+'\n        elseif v >= 1.7 then letters[i] = 'C'\n    \
    \    elseif v >= 1.3 then letters[i] = 'C-'\n        elseif v >= 1.0 then letters[i]\
    \ = 'D+'\n        elseif v >= 0.7 then letters[i] = 'D'\n        elseif v >= 0.0\
    \ then letters[i] = 'D-'\n        else                 letters[i] = 'E'\n    \
    \    end\n    end\n    return letters\nend", "    --[[\n        Function that\
    \ converts the grades in the table into a letter grade\n        Inputs:\n    \
    \        grades: the table of numerical grades\n        Outputs:\n           \
    \ letter_grades: table of letter grades \n    ]]\n    local letter_grades = {}\n\
    \    for i = 1, #grades do\n        if grades[i] > 4.0 then\n            letter_grades[i]\
    \ = 'A+'\n        elseif grades[i] > 3.7 then\n            letter_grades[i] =\
    \ 'A'\n        elseif grades[i] > 3.3 then\n            letter_grades[i] = 'A-'\n\
    \        elseif grades[i] > 3.0 then\n            letter_grades[i] = 'B+'\n  \
    \      elseif grades[i] > 2.7 then\n            letter_grades[i] = 'B'\n     \
    \   elseif grades[i] > 2.3 then\n            letter_grades[i] = 'B-'\n       \
    \ elseif grades[i] > 2.0 then\n            letter_grades[i] = 'C+'\n        elseif\
    \ grades[i] > 1.7 then\n            letter_grades[i] = 'C'\n        elseif grades[i]\
    \ > 1.3 then\n            letter_grades[i] = 'C-'\n        elseif grades[i] >\
    \ 1.0 then\n            letter_grades[i] = 'D+'\n        elseif grades[i] > 0.7\
    \ then\n            letter_grades[i] = 'D'\n        elseif grades[i] > 0.0 then\n\
    \            letter_grades[i] = 'D-'\n        elseif grades[i] >= 0.0 then\n \
    \           letter_grades[i] = 'E'\n        end\n    end\n    return letter_grades\n\
    end", "\tlocal function numerical_grade_to_letter_grade(grade)\n\t\tif grade >=\
    \ 4.0 then\n\t\t\treturn 'A+'\n\t\telseif grade >= 3.7 then\n\t\t\treturn 'A'\n\
    \t\telseif grade >= 3.3 then\n\t\t\treturn 'A-'\n\t\telseif grade >= 3.0 then\n\
    \t\t\treturn 'B+'\n\t\telseif grade >= 2.7 then\n\t\t\treturn 'B'\n\t\telseif\
    \ grade >= 2.3 then\n\t\t\treturn 'B-'\n\t\telseif grade >= 2.0 then\n\t\t\treturn\
    \ 'C+'\n\t\telseif grade >= 1.7 then\n\t\t\treturn 'C'\n\t\telseif grade >= 1.3\
    \ then\n\t\t\treturn 'C-'\n\t\telseif grade >= 1.0 then\n\t\t\treturn 'D+'\n\t\
    \telseif grade >= 0.7 then\n\t\t\treturn 'D'\n\t\telseif grade >= 0.0 then\n\t\
    \t\treturn 'D-'\n\t\telse\n\t\t\treturn 'E'\n\t\tend\n\tend\n\tlocal letter_grades\
    \ = {}\n\tfor _, grade in ipairs(grades) do\n\t\ttable.insert(letter_grades, numerical_grade_to_letter_grade(grade))\n\
    \tend\n\treturn letter_grades\nend", "    local grades_table = {}\n    local letter_grade\n\
    \    for i = 1, #grades do\n        if grades[i] >= 4.0 then\n            letter_grade\
    \ = 'A+'\n        elseif grades[i] > 3.7 then\n            letter_grade = 'A'\n\
    \        elseif grades[i] > 3.3 then\n            letter_grade = 'A-'\n      \
    \  elseif grades[i] > 3.0 then\n            letter_grade = 'B+'\n        elseif\
    \ grades[i] > 2.7 then\n            letter_grade = 'B'\n        elseif grades[i]\
    \ > 2.3 then\n            letter_grade = 'B-'\n        elseif grades[i] > 2.0\
    \ then\n            letter_grade = 'C+'\n        elseif grades[i] > 1.7 then\n\
    \            letter_grade = 'C'\n        elseif grades[i] > 1.3 then\n       \
    \     letter_grade = 'C-'\n        elseif grades[i] > 1.0 then\n            letter_grade\
    \ = 'D+'\n        elseif grades[i] > 0.7 then\n            letter_grade = 'D'\n\
    \        elseif grades[i] > 0.0 then\n            letter_grade = 'D-'\n      \
    \  elseif grades[i] == 0.0 then\n            letter_grade = 'E'\n        end\n\
    \        grades_table[i] = letter_grade\n    end\n    return grades_table\nend\n\
    print(table.concat(numerical_letter_grade({4.0, 3, 1.7, 2, 3.5}), ', '))", " \
    \ return {}\nend", "\tlocal letter_grades = {}\n\tfor i, g in ipairs(grades) do\n\
    \t\tif g >= 4.0 then\n\t\t\tletter_grades[i] = 'A+'\n\t\telseif g >= 3.7 then\n\
    \t\t\tletter_grades[i] = 'A'\n\t\telseif g >= 3.3 then\n\t\t\tletter_grades[i]\
    \ = 'A-'\n\t\telseif g >= 3.0 then\n\t\t\tletter_grades[i] = 'B+'\n\t\telseif\
    \ g >= 2.7 then\n\t\t\tletter_grades[i] = 'B'\n\t\telseif g >= 2.3 then\n\t\t\t\
    letter_grades[i] = 'B-'\n\t\telseif g >= 2.0 then\n\t\t\tletter_grades[i] = 'C+'\n\
    \t\telseif g >= 1.7 then\n\t\t\tletter_grades[i] = 'C'\n\t\telseif g >= 1.3 then\n\
    \t\t\tletter_grades[i] = 'C-'\n\t\telseif g >= 1.0 then\n\t\t\tletter_grades[i]\
    \ = 'D+'\n\t\telseif g >= 0.7 then\n\t\t\tletter_grades[i] = 'D'\n\t\telseif g\
    \ >= 0.0 then\n\t\t\tletter_grades[i] = 'D-'\n\t\telseif g == 0.0 then\n\t\t\t\
    letter_grades[i] = 'E'\n\t\tend\n\tend\n\treturn letter_grades\nend", "  local\
    \ grades_table = {}\n  for i = 1, #grades do\n    if grades[i] == 4.0 then\n \
    \     grades_table[i] = 'A+'\n    elseif grades[i] > 3.7 then\n      grades_table[i]\
    \ = 'A'\n    elseif grades[i] > 3.3 then\n      grades_table[i] = 'A-'\n    elseif\
    \ grades[i] > 3.0 then\n      grades_table[i] = 'B+'\n    elseif grades[i] > 2.7\
    \ then\n      grades_table[i] = 'B'\n    elseif grades[i] > 2.3 then\n      grades_table[i]\
    \ = 'B-'\n    elseif grades[i] > 2.0 then\n      grades_table[i] = 'C+'\n    elseif\
    \ grades[i] > 1.7 then\n      grades_table[i] = 'C'\n    elseif grades[i] > 1.3\
    \ then\n      grades_table[i] = 'C-'\n    elseif grades[i] > 1.0 then\n      grades_table[i]\
    \ = 'D+'\n    elseif grades[i] > 0.7 then\n      grades_table[i] = 'D'\n    elseif\
    \ grades[i] > 0.0 then\n      grades_table[i] = 'D-'\n    else\n      grades_table[i]\
    \ = 'E'\n    end\n  end\n  return grades_table\nend", "    local letter_grades\
    \ = {}\n    for grade in grades do\n        if grade == 4.0 then\n           \
    \ table.insert(letter_grades, 'A+')\n        elseif grade > 3.7 then\n       \
    \     table.insert(letter_grades, 'A')\n        elseif grade > 3.3 then\n    \
    \        table.insert(letter_grades, 'A-')\n        elseif grade > 3.0 then\n\
    \            table.insert(letter_grades, 'B+')\n        elseif grade > 2.7 then\n\
    \            table.insert(letter_grades, 'B')\n        elseif grade > 2.3 then\n\
    \            table.insert(letter_grades, 'B-')\n        elseif grade > 2.0 then\n\
    \            table.insert(letter_grades, 'C+')\n        elseif grade > 1.7 then\n\
    \            table.insert(letter_grades, 'C')\n        elseif grade > 1.3 then\n\
    \            table.insert(letter_grades, 'C-')\n        elseif grade > 1.0 then\n\
    \            table.insert(letter_grades, 'D+')\n        elseif grade > 0.7 then\n\
    \            table.insert(letter_grades, 'D')\n        elseif grade > 0.0 then\n\
    \            table.insert(letter_grades, 'D-')\n        else\n            table.insert(letter_grades,\
    \ 'E')\n        end\n    end\n    return letter_grades\nend", "    local result\
    \ = {}\n    for i, grade in ipairs(grades) do\n        if grade >= 4.0 then\n\
    \            result[i] = 'A+'\n        elseif grade >= 3.7 then\n            result[i]\
    \ = 'A'\n        elseif grade >= 3.3 then\n            result[i] = 'A-'\n    \
    \    elseif grade >= 3.0 then\n            result[i] = 'B+'\n        elseif grade\
    \ >= 2.7 then\n            result[i] = 'B'\n        elseif grade >= 2.3 then\n\
    \            result[i] = 'B-'\n        elseif grade >= 2.0 then\n            result[i]\
    \ = 'C+'\n        elseif grade >= 1.7 then\n            result[i] = 'C'\n    \
    \    elseif grade >= 1.3 then\n            result[i] = 'C-'\n        elseif grade\
    \ >= 1.0 then\n            result[i] = 'D+'\n        elseif grade >= 0.7 then\n\
    \            result[i] = 'D'\n        elseif grade >= 0.0 then\n            result[i]\
    \ = 'D-'\n        else\n            result[i] = 'E'\n        end\n    end\n  \
    \  return result\nend", "    local function letter_grade(gpa)\n        if gpa\
    \ >= 4.0 then return 'A+' end\n        if gpa >= 3.7 then return 'A' end\n   \
    \     if gpa >= 3.3 then return 'A-' end\n        if gpa >= 3.0 then return 'B+'\
    \ end\n        if gpa >= 2.7 then return 'B' end\n        if gpa >= 2.3 then return\
    \ 'B-' end\n        if gpa >= 2.0 then return 'C+' end\n        if gpa >= 1.7\
    \ then return 'C' end\n        if gpa >= 1.3 then return 'C-' end\n        if\
    \ gpa >= 1.0 then return 'D+' end\n        if gpa >= 0.7 then return 'D' end\n\
    \        if gpa >= 0.0 then return 'D-' end\n        return 'E'\n    end\n   \
    \ local grades_lg = {}\n    for _, gpa in ipairs(grades) do\n        grades_lg[#grades_lg\
    \ + 1] = letter_grade(gpa)\n    end\n    return grades_lg\nend", "\tlocal grades_letter\
    \ = {}\n\tfor i, g in ipairs(grades) do\n\t\tif g >= 4.0 then \n\t\t\tgrades_letter[i]\
    \ = 'A+'\n\t\telseif g >= 3.7 then\n\t\t\tgrades_letter[i] = 'A'\n\t\telseif g\
    \ >= 3.3 then\n\t\t\tgrades_letter[i] = 'A-'\n\t\telseif g >= 3.0 then\n\t\t\t\
    grades_letter[i] = 'B+'\n\t\telseif g >= 2.7 then\n\t\t\tgrades_letter[i] = 'B'\n\
    \t\telseif g >= 2.3 then\n\t\t\tgrades_letter[i] = 'B-'\n\t\telseif g >= 2.0 then\n\
    \t\t\tgrades_letter[i] = 'C+'\n\t\telseif g >= 1.7 then\n\t\t\tgrades_letter[i]\
    \ = 'C'\n\t\telseif g >= 1.3 then\n\t\t\tgrades_letter[i] = 'C-'\n\t\telseif g\
    \ >= 1.0 then\n\t\t\tgrades_letter[i] = 'D+'\n\t\telseif g >= 0.7 then\n\t\t\t\
    grades_letter[i] = 'D'\n\t\telseif g >= 0.0 then\n\t\t\tgrades_letter[i] = 'D-'\n\
    \t\telse\n\t\t\tgrades_letter[i] = 'E'\n\t\tend\n\tend\n\treturn grades_letter\n\
    end", "  -- your code goes here\nend", "    local letters = {}\n    for i = 1,\
    \ #grades do\n        if grades[i] >= 4.0 then\n            letters[i] = 'A+'\n\
    \        elseif grades[i] >= 3.7 then\n            letters[i] = 'A'\n        elseif\
    \ grades[i] >= 3.3 then\n            letters[i] = 'A-'\n        elseif grades[i]\
    \ >= 3.0 then\n            letters[i] = 'B+'\n        elseif grades[i] >= 2.7\
    \ then\n            letters[i] = 'B'\n        elseif grades[i] >= 2.3 then\n \
    \           letters[i] = 'B-'\n        elseif grades[i] >= 2.0 then\n        \
    \    letters[i] = 'C+'\n        elseif grades[i] >= 1.7 then\n            letters[i]\
    \ = 'C'\n        elseif grades[i] >= 1.3 then\n            letters[i] = 'C-'\n\
    \        elseif grades[i] >= 1.0 then\n            letters[i] = 'D+'\n       \
    \ elseif grades[i] >= 0.7 then\n            letters[i] = 'D'\n        elseif grades[i]\
    \ >= 0.0 then\n            letters[i] = 'D-'\n        else\n            letters[i]\
    \ = 'E'\n        end\n    end\n    return letters\nend", "    local grades_table\
    \ = {}\n    for i = 1, #grades do\n        if grades[i] > 3.7 then\n         \
    \   grades_table[i] = 'A+'\n        elseif grades[i] > 3.3 then\n            grades_table[i]\
    \ = 'A'\n        elseif grades[i] > 3.0 then\n            grades_table[i] = 'A-'\n\
    \        elseif grades[i] > 2.7 then\n            grades_table[i] = 'B+'\n   \
    \     elseif grades[i] > 2.3 then\n            grades_table[i] = 'B'\n       \
    \ elseif grades[i] > 2.0 then\n            grades_table[i] = 'B-'\n        elseif\
    \ grades[i] > 1.7 then\n            grades_table[i] = 'C+'\n        elseif grades[i]\
    \ > 1.3 then\n            grades_table[i] = 'C'\n        elseif grades[i] > 1.0\
    \ then\n            grades_table[i] = 'C-'\n        elseif grades[i] > 0.7 then\n\
    \            grades_table[i] = 'D+'\n        elseif grades[i] > 0.0 then\n   \
    \         grades_table[i] = 'D'\n        elseif grades[i] == 0.0 then\n      \
    \      grades_table[i] = 'D-'\n        else\n            grades_table[i] = 'E'\n\
    \        end\n    end\n    return grades_table\nend", "    letter_grades = {}\n\
    \    for i, grade in ipairs(grades) do\n        if grade == 4.0 then\n       \
    \     table.insert(letter_grades, 'A+')\n        elseif grade > 3.7 then\n   \
    \         table.insert(letter_grades, 'A')\n        elseif grade > 3.3 then\n\
    \            table.insert(letter_grades, 'A-')\n        elseif grade > 3.0 then\n\
    \            table.insert(letter_grades, 'B+')\n        elseif grade > 2.7 then\n\
    \            table.insert(letter_grades, 'B')\n        elseif grade > 2.3 then\n\
    \            table.insert(letter_grades, 'B-')\n        elseif grade > 2.0 then\n\
    \            table.insert(letter_grades, 'C+')\n        elseif grade > 1.7 then\n\
    \            table.insert(letter_grades, 'C')\n        elseif grade > 1.3 then\n\
    \            table.insert(letter_grades, 'C-')\n        elseif grade > 1.0 then\n\
    \            table.insert(letter_grades, 'D+')\n        elseif grade > 0.7 then\n\
    \            table.insert(letter_grades, 'D')\n        elseif grade > 0.0 then\n\
    \            table.insert(letter_grades, 'D-')\n        else\n            table.insert(letter_grades,\
    \ 'E')\n        end\n    end\n    return letter_grades\nend", "  local letter_grades\
    \ = {}\n  for i,n in ipairs(grades) do\n    if n > 3.7 then\n      letter_grades[i]\
    \ = 'A+'\n    elseif n > 3.3 then\n      letter_grades[i] = 'A'\n    elseif n\
    \ > 3.0 then\n      letter_grades[i] = 'A-'\n    elseif n > 2.7 then\n      letter_grades[i]\
    \ = 'B+'\n    elseif n > 2.3 then\n      letter_grades[i] = 'B'\n    elseif n\
    \ > 2.0 then\n      letter_grades[i] = 'B-'\n    elseif n > 1.7 then\n      letter_grades[i]\
    \ = 'C+'\n    elseif n > 1.3 then\n      letter_grades[i] = 'C'\n    elseif n\
    \ > 1.0 then\n      letter_grades[i] = 'C-'\n    elseif n > 0.7 then\n      letter_grades[i]\
    \ = 'D+'\n    elseif n > 0.0 then\n      letter_grades[i] = 'D'\n    elseif n\
    \ == 0.0 then\n      letter_grades[i] = 'D-'\n    elseif n == 0.0 then\n     \
    \ letter_grades[i] = 'E'\n    end\n  end\n  return letter_grades\nend", "    local\
    \ grades_letters = {}\n    for i = 1, #grades do\n        local grade = grades[i]\n\
    \        if grade >= 4.0 then\n            grades_letters[i] = 'A+'\n        elseif\
    \ grade >= 3.7 then\n            grades_letters[i] = 'A'\n        elseif grade\
    \ >= 3.3 then\n            grades_letters[i] = 'A-'\n        elseif grade >= 3.0\
    \ then\n            grades_letters[i] = 'B+'\n        elseif grade >= 2.7 then\n\
    \            grades_letters[i] = 'B'\n        elseif grade >= 2.3 then\n     \
    \       grades_letters[i] = 'B-'\n        elseif grade >= 2.0 then\n         \
    \   grades_letters[i] = 'C+'\n        elseif grade >= 1.7 then\n            grades_letters[i]\
    \ = 'C'\n        elseif grade >= 1.3 then\n            grades_letters[i] = 'C-'\n\
    \        elseif grade >= 1.0 then\n            grades_letters[i] = 'D+'\n    \
    \    elseif grade >= 0.7 then\n            grades_letters[i] = 'D'\n        elseif\
    \ grade >= 0.0 then\n            grades_letters[i] = 'D-'\n        else\n    \
    \        grades_letters[i] = 'E'\n        end\n    end\n    return grades_letters\n\
    end", "  local grade_map = {A_plus = 4.0, A = 3.7, A_minus = 3.3, B_plus = 3.0,\
    \ B = 2.7, B_minus = 2.3, C_plus = 2.0, C = 1.7, C_minus = 1.3, D_plus = 1.0,\
    \ D = 0.7, D_minus = 0.0, E = 0.0}\n  local grades_letter = {}\n  for i, grade\
    \ in ipairs(grades) do\n    for letter, number in pairs(grade_map) do\n      if\
    \ grade >= number then\n        grades_letter[i] = letter\n        break\n   \
    \   end\n    end\n  end\n  return grades_letter\nend", "   local let_grades =\
    \ {}\n   for i = 1, #grades do\n      local grade = grades[i]\n      if grade\
    \ == 4.0 then\n         let_grades[i] = 'A+'\n      elseif grade > 3.7 then\n\
    \         let_grades[i] = 'A'\n      elseif grade > 3.3 then\n         let_grades[i]\
    \ = 'A-'\n      elseif grade > 3.0 then\n         let_grades[i] = 'B+'\n     \
    \ elseif grade > 2.7 then\n         let_grades[i] = 'B'\n      elseif grade >\
    \ 2.3 then\n         let_grades[i] = 'B-'\n      elseif grade > 2.0 then\n   \
    \      let_grades[i] = 'C+'\n      elseif grade > 1.7 then\n         let_grades[i]\
    \ = 'C'\n      elseif grade > 1.3 then\n         let_grades[i] = 'C-'\n      elseif\
    \ grade > 1.0 then\n         let_grades[i] = 'D+'\n      elseif grade > 0.7 then\n\
    \         let_grades[i] = 'D'\n      elseif grade > 0.0 then\n         let_grades[i]\
    \ = 'D-'\n      else\n         let_grades[i] = 'E'\n      end\n   end\n   return\
    \ let_grades\nend", "    local mapped = {}\n    for i, grade in ipairs(grades)\
    \ do\n        if grade == 4.0 then\n            mapped[i] = 'A+'\n        elseif\
    \ grade > 3.7 then\n            mapped[i] = 'A'\n        elseif grade > 3.3 then\n\
    \            mapped[i] = 'A-'\n        elseif grade > 3.0 then\n            mapped[i]\
    \ = 'B+'\n        elseif grade > 2.7 then\n            mapped[i] = 'B'\n     \
    \   elseif grade > 2.3 then\n            mapped[i] = 'B-'\n        elseif grade\
    \ > 2.0 then\n            mapped[i] = 'C+'\n        elseif grade > 1.7 then\n\
    \            mapped[i] = 'C'\n        elseif grade > 1.3 then\n            mapped[i]\
    \ = 'C-'\n        elseif grade > 1.0 then\n            mapped[i] = 'D+'\n    \
    \    elseif grade > 0.7 then\n            mapped[i] = 'D'\n        elseif grade\
    \ > 0.0 then\n            mapped[i] = 'D-'\n        else\n            mapped[i]\
    \ = 'E'\n        end\n    end\n    return mapped\nend", "    local result = {}\n\
    \    for _,grade in ipairs(grades) do\n        local letter = ''\n        if grade\
    \ == 4.0 then\n            letter = 'A+'\n        elseif grade > 3.7 then\n  \
    \          letter = 'A'\n        elseif grade > 3.3 then\n            letter =\
    \ 'A-'\n        elseif grade > 3.0 then\n            letter = 'B+'\n        elseif\
    \ grade > 2.7 then\n            letter = 'B'\n        elseif grade > 2.3 then\n\
    \            letter = 'B-'\n        elseif grade > 2.0 then\n            letter\
    \ = 'C+'\n        elseif grade > 1.7 then\n            letter = 'C'\n        elseif\
    \ grade > 1.3 then\n            letter = 'C-'\n        elseif grade > 1.0 then\n\
    \            letter = 'D+'\n        elseif grade > 0.7 then\n            letter\
    \ = 'D'\n        elseif grade > 0.0 then\n            letter = 'D-'\n        elseif\
    \ grade == 0.0 then\n            letter = 'E'\n        end\n        table.insert(result,\
    \ letter)\n    end\n    return result\nend", "    -- function gets a table of\
    \ grades and returns a table of the corresponding letters\n    local numerical_letter_grade\
    \ = {}\n    for i = 1, #grades do\n        if grades[i] >= 4.0 then \n       \
    \     numerical_letter_grade[i] = 'A+'\n        elseif grades[i] >= 3.7 then\n\
    \            numerical_letter_grade[i] = 'A'\n        elseif grades[i] >= 3.3\
    \ then\n            numerical_letter_grade[i] = 'A-'\n        elseif grades[i]\
    \ >= 3.0 then\n            numerical_letter_grade[i] = 'B+'\n        elseif grades[i]\
    \ >= 2.7 then\n            numerical_letter_grade[i] = 'B'\n        elseif grades[i]\
    \ >= 2.3 then\n            numerical_letter_grade[i] = 'B-'\n        elseif grades[i]\
    \ >= 2.0 then\n            numerical_letter_grade[i] = 'C+'\n        elseif grades[i]\
    \ >= 1.7 then\n            numerical_letter_grade[i] = 'C'\n        elseif grades[i]\
    \ >= 1.3 then\n            numerical_letter_grade[i] = 'C-'\n        elseif grades[i]\
    \ >= 1.0 then\n            numerical_letter_grade[i] = 'D+'\n        elseif grades[i]\
    \ >= 0.7 then\n            numerical_letter_grade[i] = 'D'\n        elseif grades[i]\
    \ >= 0.0 then\n            numerical_letter_grade[i] = 'D-'\n        else\n  \
    \          numerical_letter_grade[i] = 'E'\n        end\n    end\n    return numerical_letter_grade\n\
    end", "  local grade_table = {}\n  local grade_equation = {['A+'] = 4.0, ['A']\
    \ = 3.7, ['A-'] = 3.3, ['B+'] = 3.0, ['B'] = 2.7, ['B-'] = 2.3, ['C+'] = 2.0,\
    \ ['C'] = 1.7, ['C-'] = 1.3, ['D+'] = 1.0, ['D'] = 0.7, ['D-'] = 0.0, ['E'] =\
    \ 0.0}\n  for i = 1, #grades do\n    for k, v in pairs(grade_equation) do\n  \
    \    if grades[i] >= v then\n        table.insert(grade_table, k)\n        break\n\
    \      end\n    end\n  end\n  return grade_table\nend", "  letter_grades = {}\n\
    \  for k, v in pairs(grades) do\n    if     v >= 4.0 then table.insert(letter_grades,\
    \ 'A+')\n    elseif v >= 3.7 then table.insert(letter_grades, 'A')\n    elseif\
    \ v >= 3.3 then table.insert(letter_grades, 'A-')\n    elseif v >= 3.0 then table.insert(letter_grades,\
    \ 'B+')\n    elseif v >= 2.7 then table.insert(letter_grades, 'B')\n    elseif\
    \ v >= 2.3 then table.insert(letter_grades, 'B-')\n    elseif v >= 2.0 then table.insert(letter_grades,\
    \ 'C+')\n    elseif v >= 1.7 then table.insert(letter_grades, 'C')\n    elseif\
    \ v >= 1.3 then table.insert(letter_grades, 'C-')\n    elseif v >= 1.0 then table.insert(letter_grades,\
    \ 'D+')\n    elseif v >= 0.7 then table.insert(letter_grades, 'D')\n    elseif\
    \ v >= 0.0 then table.insert(letter_grades, 'D-')\n    else                  table.insert(letter_grades,\
    \ 'E')\n    end\n  end\n  return letter_grades\nend", "    local grades_table\
    \ = {}\n    for i, v in ipairs(grades) do\n        if v >= 4.0 then\n        \
    \    grades_table[i] = 'A+'\n        elseif v >= 3.7 then\n            grades_table[i]\
    \ = 'A'\n        elseif v >= 3.3 then\n            grades_table[i] = 'A-'\n  \
    \      elseif v >= 3.0 then\n            grades_table[i] = 'B+'\n        elseif\
    \ v >= 2.7 then\n            grades_table[i] = 'B'\n        elseif v >= 2.3 then\n\
    \            grades_table[i] = 'B-'\n        elseif v >= 2.0 then\n          \
    \  grades_table[i] = 'C+'\n        elseif v >= 1.7 then\n            grades_table[i]\
    \ = 'C'\n        elseif v >= 1.3 then\n            grades_table[i] = 'C-'\n  \
    \      elseif v >= 1.0 then\n            grades_table[i] = 'D+'\n        elseif\
    \ v >= 0.7 then\n            grades_table[i] = 'D'\n        elseif v >= 0.0 then\n\
    \            grades_table[i] = 'D-'\n        elseif v == 0.0 then\n          \
    \  grades_table[i] = 'E'\n        end\n    end\n    return grades_table\nend",
  "  -- your code here\nend", "    local grades = {'A+', 'A', 'A-', 'B+', 'B', 'B-',\
    \ 'C+', 'C', 'C-', 'D+', 'D', 'D-', 'E'}\n    local score_grading = {4.0, 3.7,\
    \ 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0, 0.0}\n    local grade_list\
    \ = {}\n    for i = 1, #score_grading do\n        if grades[i] > score_grading[i]\
    \ then\n            table.insert(grade_list, grades[i])\n        end\n    end\n\
    \    return grade_list\nend", "  local finalGrades = {}\n  for i = 1, #grades\
    \ do\n    if grades[i] >= 4.0 then\n      finalGrades[i] = 'A+'\n    elseif grades[i]\
    \ >= 3.7 then\n      finalGrades[i] = 'A'\n    elseif grades[i] >= 3.3 then\n\
    \      finalGrades[i] = 'A-'\n    elseif grades[i] >= 3.0 then\n      finalGrades[i]\
    \ = 'B+'\n    elseif grades[i] >= 2.7 then\n      finalGrades[i] = 'B'\n    elseif\
    \ grades[i] >= 2.3 then\n      finalGrades[i] = 'B-'\n    elseif grades[i] >=\
    \ 2.0 then\n      finalGrades[i] = 'C+'\n    elseif grades[i] >= 1.7 then\n  \
    \    finalGrades[i] = 'C'\n    elseif grades[i] >= 1.3 then\n      finalGrades[i]\
    \ = 'C-'\n    elseif grades[i] >= 1.0 then\n      finalGrades[i] = 'D+'\n    elseif\
    \ grades[i] >= 0.7 then\n      finalGrades[i] = 'D'\n    elseif grades[i] >= 0.0\
    \ then\n      finalGrades[i] = 'D-'\n    else\n      finalGrades[i] = 'E'\n  \
    \  end\n  end\n  return finalGrades\nend", "    local letter_grades = {}\n   \
    \ for i, grade in ipairs(grades) do\n        if grade > 3.7 then\n           \
    \ letter_grades[i] = 'A+'\n        elseif grade > 3.3 then\n            letter_grades[i]\
    \ = 'A'\n        elseif grade > 3.0 then\n            letter_grades[i] = 'A-'\n\
    \        elseif grade > 2.7 then\n            letter_grades[i] = 'B+'\n      \
    \  elseif grade > 2.3 then\n            letter_grades[i] = 'B'\n        elseif\
    \ grade > 2.0 then\n            letter_grades[i] = 'B-'\n        elseif grade\
    \ > 1.7 then\n            letter_grades[i] = 'C+'\n        elseif grade > 1.3\
    \ then\n            letter_grades[i] = 'C'\n        elseif grade > 1.0 then\n\
    \            letter_grades[i] = 'C-'\n        elseif grade > 0.7 then\n      \
    \      letter_grades[i] = 'D+'\n        elseif grade > 0.0 then\n            letter_grades[i]\
    \ = 'D'\n        elseif grade > -0.1 then\n            letter_grades[i] = 'D-'\n\
    \        else\n            letter_grades[i] = 'E'\n        end\n    end\n    return\
    \ letter_grades\nend", "    local grades = grades\n    local len = #grades\n \
    \   local letter_grades = {}\n    for i = 1, len do\n        local num = grades[i]\n\
    \        if num > 4.0 then\n            letter_grades[i] = 'A+'\n        elseif\
    \ num > 3.7 then\n            letter_grades[i] = 'A'\n        elseif num > 3.3\
    \ then\n            letter_grades[i] = 'A-'\n        elseif num > 3.0 then\n \
    \           letter_grades[i] = 'B+'\n        elseif num > 2.7 then\n         \
    \   letter_grades[i] = 'B'\n        elseif num > 2.3 then\n            letter_grades[i]\
    \ = 'B-'\n        elseif num > 2.0 then\n            letter_grades[i] = 'C+'\n\
    \        elseif num > 1.7 then\n            letter_grades[i] = 'C'\n        elseif\
    \ num > 1.3 then\n            letter_grades[i] = 'C-'\n        elseif num > 1.0\
    \ then\n            letter_grades[i] = 'D+'\n        elseif num > 0.7 then\n \
    \           letter_grades[i] = 'D'\n        elseif num > 0.0 then\n          \
    \  letter_grades[i] = 'D-'\n        else\n            letter_grades[i] = 'E'\n\
    \        end\n    end\n    return letter_grades\nend", "  local grade_letter =\
    \ {}\n  for _, value in ipairs(grades) do\n    if value >= 4.0 then\n      table.insert(grade_letter,\
    \ 'A+')\n    elseif value >= 3.7 then\n      table.insert(grade_letter, 'A')\n\
    \    elseif value >= 3.3 then\n      table.insert(grade_letter, 'A-')\n    elseif\
    \ value >= 3.0 then\n      table.insert(grade_letter, 'B+')\n    elseif value\
    \ >= 2.7 then\n      table.insert(grade_letter, 'B')\n    elseif value >= 2.3\
    \ then\n      table.insert(grade_letter, 'B-')\n    elseif value >= 2.0 then\n\
    \      table.insert(grade_letter, 'C+')\n    elseif value >= 1.7 then\n      table.insert(grade_letter,\
    \ 'C')\n    elseif value >= 1.3 then\n      table.insert(grade_letter, 'C-')\n\
    \    elseif value >= 1.0 then\n      table.insert(grade_letter, 'D+')\n    elseif\
    \ value >= 0.7 then\n      table.insert(grade_letter, 'D')\n    elseif value >=\
    \ 0.0 then\n      table.insert(grade_letter, 'D-')\n    elseif value >= 0.0 then\n\
    \      table.insert(grade_letter, 'E')\n    end\n  end\n  return grade_letter\n\
    end", "    local grades_to_letters = {\n        [4.0] = 'A+',\n        [3.7] =\
    \ 'A',\n        [3.3] = 'A-',\n        [3.0] = 'B+',\n        [2.7] = 'B',\n \
    \       [2.3] = 'B-',\n        [2.0] = 'C+',\n        [1.7] = 'C',\n        [1.3]\
    \ = 'C-',\n        [1.0] = 'D+',\n        [0.7] = 'D',\n        [0.0] = 'D-',\n\
    \        [-1.0] = 'E'\n    }\n    local output = {}\n    for _,grade in ipairs(grades)\
    \ do\n        for k,v in pairs(grades_to_letters) do\n            if grade >=\
    \ k then\n                table.insert(output, v)\n                break\n   \
    \         end\n        end\n    end\n    return output\nend", "  local grade_letter\
    \ = {}\n  for _, grade in ipairs(grades) do\n    local letter = 'D-'\n    if grade\
    \ >= 4.0 then\n      letter = 'A+'\n    elseif grade >= 3.7 then\n      letter\
    \ = 'A'\n    elseif grade >= 3.3 then\n      letter = 'A-'\n    elseif grade >=\
    \ 3.0 then\n      letter = 'B+'\n    elseif grade >= 2.7 then\n      letter =\
    \ 'B'\n    elseif grade >= 2.3 then\n      letter = 'B-'\n    elseif grade >=\
    \ 2.0 then\n      letter = 'C+'\n    elseif grade >= 1.7 then\n      letter =\
    \ 'C'\n    elseif grade >= 1.3 then\n      letter = 'C-'\n    elseif grade >=\
    \ 1.0 then\n      letter = 'D+'\n    elseif grade >= 0.7 then\n      letter =\
    \ 'D'\n    end\n    table.insert(grade_letter, letter)\n  end\n  return grade_letter\n\
    end", "    local letters = {}\n    for i = 1, #grades do\n        if grades[i]\
    \ >= 4.0 then\n            letters[i] = 'A+'\n        elseif grades[i] >= 3.7\
    \ then\n            letters[i] = 'A'\n        elseif grades[i] >= 3.3 then\n \
    \           letters[i] = 'A-'\n        elseif grades[i] >= 3.0 then\n        \
    \    letters[i] = 'B+'\n        elseif grades[i] >= 2.7 then\n            letters[i]\
    \ = 'B'\n        elseif grades[i] >= 2.3 then\n            letters[i] = 'B-'\n\
    \        elseif grades[i] >= 2.0 then\n            letters[i] = 'C+'\n       \
    \ elseif grades[i] >= 1.7 then\n            letters[i] = 'C'\n        elseif grades[i]\
    \ >= 1.3 then\n            letters[i] = 'C-'\n        elseif grades[i] >= 1.0\
    \ then\n            letters[i] = 'D+'\n        elseif grades[i] >= 0.7 then\n\
    \            letters[i] = 'D'\n        elseif grades[i] >= 0.0 then\n        \
    \    letters[i] = 'D-'\n        else\n            letters[i] = 'E'\n        end\n\
    \    end\n    return letters\nend", "    -- TODO: Write your code here\n    --\
    \ Hint: Use a for loop to iterate through the elements in the grades table\n \
    \   -- You can access each element in the table as grades[1], grades[2], ...\n\
    \    -- Hint: When outputting the letter grade, make sure to use single quotes\n\
    \    -- 'A+' and NOT double quotes \"A+\"\n    local letter_grades = {}\n    for\
    \ i = 1, #grades do\n        if grades[i] >= 4.0 then\n            letter_grades[i]\
    \ = 'A+'\n        elseif grades[i] >= 3.7 then\n            letter_grades[i] =\
    \ 'A'\n        elseif grades[i] >= 3.3 then\n            letter_grades[i] = 'A-'\n\
    \        elseif grades[i] >= 3.0 then\n            letter_grades[i] = 'B+'\n \
    \       elseif grades[i] >= 2.7 then\n            letter_grades[i] = 'B'\n   \
    \     elseif grades[i] >= 2.3 then\n            letter_grades[i] = 'B-'\n    \
    \    elseif grades[i] >= 2.0 then\n            letter_grades[i] = 'C+'\n     \
    \   elseif grades[i] >= 1.7 then\n            letter_grades[i] = 'C'\n       \
    \ elseif grades[i] >= 1.3 then\n            letter_grades[i] = 'C-'\n        elseif\
    \ grades[i] >= 1.0 then\n            letter_grades[i] = 'D+'\n        elseif grades[i]\
    \ >= 0.7 then\n            letter_grades[i] = 'D'\n        elseif grades[i] >=\
    \ 0.0 then\n            letter_grades[i] = 'D-'\n        elseif grades[i] < 0.0\
    \ then\n            letter_grades[i] = 'E'\n        end\n    end\n    return letter_grades\n\
    end", "\treturn map(function(grade)\n\t\t\tif grade > 3.7 then\n\t\t\t\treturn\
    \ 'A+'\n\t\t\telseif grade > 3.3 then\n\t\t\t\treturn 'A'\n\t\t\telseif grade\
    \ > 3.0 then\n\t\t\t\treturn 'A-'\n\t\t\telseif grade > 2.7 then\n\t\t\t\treturn\
    \ 'B+'\n\t\t\telseif grade > 2.3 then\n\t\t\t\treturn 'B'\n\t\t\telseif grade\
    \ > 2.0 then\n\t\t\t\treturn 'B-'\n\t\t\telseif grade > 1.7 then\n\t\t\t\treturn\
    \ 'C+'\n\t\t\telseif grade > 1.3 then\n\t\t\t\treturn 'C'\n\t\t\telseif grade\
    \ > 1.0 then\n\t\t\t\treturn 'C-'\n\t\t\telseif grade > 0.7 then\n\t\t\t\treturn\
    \ 'D+'\n\t\t\telseif grade > 0.0 then\n\t\t\t\treturn 'D'\n\t\t\telseif grade\
    \ == 0.0 then\n\t\t\t\treturn 'D-'\n\t\t\telse\n\t\t\t\treturn 'E'\n\t\t\tend\n\
    \t\tend, grades)\nend", "    local grades = table.copy(grades)\n    local grade_index\
    \ = 1\n    for numerical_grade, letter_grade in pairs(grade_table) do\n      \
    \  for i, a_grade in ipairs(grades) do\n            if a_grade > numerical_grade\
    \ then\n                grades[i] = letter_grade\n            end\n        end\n\
    \    end\n    return grades\nend", "    local result = {}\n    for _, grade in\
    \ ipairs(grades) do\n        if grade == 4.0 then\n            table.insert(result,\
    \ 'A+')\n        elseif grade > 3.7 then\n            table.insert(result, 'A')\n\
    \        elseif grade > 3.3 then\n            table.insert(result, 'A-')\n   \
    \     elseif grade > 3.0 then\n            table.insert(result, 'B+')\n      \
    \  elseif grade > 2.7 then\n            table.insert(result, 'B')\n        elseif\
    \ grade > 2.3 then\n            table.insert(result, 'B-')\n        elseif grade\
    \ > 2.0 then\n            table.insert(result, 'C+')\n        elseif grade > 1.7\
    \ then\n            table.insert(result, 'C')\n        elseif grade > 1.3 then\n\
    \            table.insert(result, 'C-')\n        elseif grade > 1.0 then\n   \
    \         table.insert(result, 'D+')\n        elseif grade > 0.7 then\n      \
    \      table.insert(result, 'D')\n        elseif grade > 0.0 then\n          \
    \  table.insert(result, 'D-')\n        else\n            table.insert(result,\
    \ 'E')\n        end\n    end\n    return result\nend", "  local letter_grades\
    \ = {}\n  for _, grade in ipairs(grades) do\n    table.insert(letter_grades, (grade\
    \ >= 4.0 and 'A+') or\n                                (grade >= 3.7 and 'A')\
    \ or\n                                (grade >= 3.3 and 'A-') or\n           \
    \                     (grade >= 3.0 and 'B+') or\n                           \
    \     (grade >= 2.7 and 'B') or\n                                (grade >= 2.3\
    \ and 'B-') or\n                                (grade >= 2.0 and 'C+') or\n \
    \                               (grade >= 1.7 and 'C') or\n                  \
    \              (grade >= 1.3 and 'C-') or\n                                (grade\
    \ >= 1.0 and 'D+') or\n                                (grade >= 0.7 and 'D')\
    \ or\n                                (grade >= 0.0 and 'D-') or\n           \
    \                     'E')\n  end\n  return letter_grades\nend", "\tlocal letters\
    \ = {}\n\tfor _, v in ipairs(grades) do\n\t\tif v > 4.0 then\n\t\t\ttable.insert(letters,\
    \ 'A+')\n\t\telseif v > 3.7 then\n\t\t\ttable.insert(letters, 'A')\n\t\telseif\
    \ v > 3.3 then\n\t\t\ttable.insert(letters, 'A-')\n\t\telseif v > 3.0 then\n\t\
    \t\ttable.insert(letters, 'B+')\n\t\telseif v > 2.7 then\n\t\t\ttable.insert(letters,\
    \ 'B')\n\t\telseif v > 2.3 then\n\t\t\ttable.insert(letters, 'B-')\n\t\telseif\
    \ v > 2.0 then\n\t\t\ttable.insert(letters, 'C+')\n\t\telseif v > 1.7 then\n\t\
    \t\ttable.insert(letters, 'C')\n\t\telseif v > 1.3 then\n\t\t\ttable.insert(letters,\
    \ 'C-')\n\t\telseif v > 1.0 then\n\t\t\ttable.insert(letters, 'D+')\n\t\telseif\
    \ v > 0.7 then\n\t\t\ttable.insert(letters, 'D')\n\t\telseif v > 0.0 then\n\t\t\
    \ttable.insert(letters, 'D-')\n\t\telse\n\t\t\ttable.insert(letters, 'E')\n\t\t\
    end\n\tend\n\treturn letters\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

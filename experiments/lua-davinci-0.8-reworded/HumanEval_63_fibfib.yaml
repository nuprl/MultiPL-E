name: HumanEval_63_fibfib
language: lua
prompt: "-- The FibFib number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n-- fibfib(0) == 0\n-- fibfib(1) == 0\n-- fibfib(2)\
  \ == 1\n-- fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n-- Please write\
  \ a function to efficiently compute the n-th element of the fibfib number sequence.\n\
  -- >>> fibfib(1)\n-- 0\n-- >>> fibfib(5)\n-- 4\n-- >>> fibfib(8)\n-- 24\nlocal function\
  \ fibfib(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fibfib\n\
  \    lu.assertEquals(candidate(2), 1)\n    lu.assertEquals(candidate(1), 0)\n  \
  \  lu.assertEquals(candidate(5), 4)\n    lu.assertEquals(candidate(8), 24)\n   \
  \ lu.assertEquals(candidate(10), 81)\n    lu.assertEquals(candidate(12), 274)\n\
  \    lu.assertEquals(candidate(14), 927)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\tlocal result = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 1\n\t\
    for i = 2, n do\n\t\tresult = a + b + c\n\t\ta = b\n\t\tb = c\n\t\tc = result\n\
    \tend\n\treturn result\nend", "  if n < 3 then\n    return n - 1\n  end\n  local\
    \ minus_one = 0\n  local minus_two = 0\n  local minus_three = 1\n  local result\
    \ = minus_three\n  for i = 3, n do\n    result = minus_one + minus_two + minus_three\n\
    \    minus_one = minus_two\n    minus_two = minus_three\n    minus_three = result\n\
    \  end\n  return result\nend", "    local fibfib0 = 0\n    local fibfib1 = 0\n\
    \    local fibfib2 = 1\n    if n == 0 then\n        return fibfib0\n    elseif\
    \ n == 1 then\n        return fibfib1\n    elseif n == 2 then\n        return\
    \ fibfib2\n    else\n        for i = 3, n do\n            local fibfib3 = fibfib0\
    \ + fibfib1 + fibfib2\n            fibfib0 = fibfib1\n            fibfib1 = fibfib2\n\
    \            fibfib2 = fibfib3\n        end\n        return fibfib2\n    end\n\
    end", "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return\
    \ 0\n    elseif n == 2 then\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", end, "    if n == 0 then\n     \
    \   return 0\n    elseif n == 1 then\n        return 0\n    elseif n == 2 then\n\
    \        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    if n <= 2 then\n        return n - 1\n    end\n    return\
    \ fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\nend", end, "  -- ???\nend", " \
    \ -- WRITE YOUR CODE HERE\nend", "\tlocal fib_list = {0, 0, 1}\n\tif n < 3 then\n\
    \t\treturn fib_list[n+1]\n\tend\n\tfor i = 3, n do\n\t\tfib_list[1], fib_list[2],\
    \ fib_list[3] = fib_list[2], fib_list[3], fib_list[1] + fib_list[2] + fib_list[3]\n\
    \tend\n\treturn fib_list[3]\nend", "  if n < 0 then return nil end\n  if n < 2\
    \ then return 0 end\n  if n == 2 then return 1 end\n  local a, b, c = 0, 0, 1\n\
    \  for i = 3, n do\n    a, b, c = b, c, a + b + c\n  end\n  return c\nend", " \
    \ if n < 0 then\n    return nil\n  end\n  local a, b, c = 0, 0, 1\n  for i = 2,\
    \ n do\n    a, b, c = b, c, a + b + c\n  end\n  return c\nend", "    if n <= 2\
    \ then\n        return n - 1\n    end\n    local a, b, c = 0, 0, 1\n    for i\
    \ = 3, n do\n        a, b, c = b, c, c + b + a\n    end\n    return c\nend", " \
    \ if n < 0 then\n    return -1\n  end\n  if n == 0 then\n    return 0\n  end\n\
    \  if n == 1 then\n    return 0\n  end\n  if n == 2 then\n    return 1\n  end\n\
    \  local a = 0\n  local b = 0\n  local c = 1\n  local i = 3\n  while i <= n do\n\
    \    local d = a + b + c\n    a = b\n    b = c\n    c = d\n    i = i + 1\n  end\n\
    \  return c\nend", "  local fibs = {0, 0, 1}\n  for i = 3, n do\n    fibs[i] =\
    \ fibs[i-1] + fibs[i-2] + fibs[i-3]\n  end\n  return fibs[n]\nend", "    return\
    \ 0\nend", "  -- Implement fibfib function here\n  if n == 0 then\n    return\
    \ 0\n  elseif n == 1 then\n    return 0\n  elseif n == 2 then\n    return 1\n\
    \  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  local\
    \ a, b, c = 0, 0, 1\n  for i = 3, n do\n    a, b, c = b, c, a + b + c\n  end\n\
    \  return c\nend", end, "\tlocal n, n1, n2, n3 = n or 0, 0, 0, 1\n\twhile n >=\
    \ 2 do\n\t\tn1, n2, n3 = n2, n3, n3 + n2 + n1\n\t\tn = n - 1\n\tend\n\treturn\
    \ n3\nend\nexports.fibfib = fibfib", "    local a, b, c = 0, 0, 1\n    for i =\
    \ 2, n do\n        a, b, c = b, c, a + b + c\n    end\n    return c\nend", "\t\
    if n <= 1 then\n\t\treturn 0\n\telseif n == 2 then\n\t\treturn 1\n\telse\n\t\t\
    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\tend\nend", "  if n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 0\n  elseif n == 2 then\n    return\
    \ 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend",
  "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 0\n\
    \    elseif n == 2 then\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    -- write your code here\nend",
  "    if n <= 1 then\n        return 0\n    elseif n == 2 then\n        return 1\n\
    \    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend\n\
    assert(fibfib(1) == 0)\nassert(fibfib(5) == 4)\nassert(fibfib(8) == 24)\nprint(\"\
    OK\")", "    assert(n>=0)\n    local _cache = {0,0,1}\n    local function helper(n)\n\
    \        assert(n>=0)\n        if n<3 then\n            return _cache[n+1]\n \
    \       end\n        if _cache[n+1] then\n            return _cache[n+1]\n   \
    \     end\n        local n1 = helper(n-1)\n        local n2 = helper(n-2)\n  \
    \      local n3 = helper(n-3)\n        local nn = n1+n2+n3\n        _cache[n+1]\
    \ = nn\n        return nn\n    end\n    return helper(n)\nend", "  if n <= 1 then\n\
    \    return 0\n  elseif n == 2 then\n    return 1\n  else\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n  end\nend", "\tif n <= 1 then\n\t\treturn 0\n\t\
    elseif n == 2 then\n\t\treturn 1\n\telse\n\t\treturn fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n\tend\nend", "  local memo = {}\n  memo[0] = 0\n  memo[1] = 0\n\
    \  memo[2] = 1\n  return fibfib_helper(n, memo)\nend", "  if n == 0 then\n   \
    \ return 0\n  elseif n == 1 then\n    return 0\n  elseif n == 2 then\n    return\
    \ 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend",
  "  local m = n\n  local a, b, c = 0, 0, 1\n  while m >= 3 do\n    a, b, c = b, c,\
    \ a + b + c\n    m = m - 1\n  end\n  return c\nend", "\tif n == 0 then\n\t\treturn\
    \ 0\n\telseif n == 1 then\n\t\treturn 0\n\telseif n == 2 then\n\t\treturn 1\n\t\
    else\n\t\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\tend\nend", "  if n\
    \ == 0 then\n    return 0\n  elseif n == 1 then\n    return 0\n  elseif n == 2\
    \ then\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  end\nend", "    --[[\n    There is an obvious recursive solution to this, but\
    \ the worst-case behavior is exponential,\n    just like the ordinary Fibonacci\
    \ sequence.\n    Fortunately there is a linear solution to this, similar to the\
    \ linear solution for the ordinary\n    Fibonacci sequence.\n    --]]\n    --\
    \ The three \"base\" cases.\n    if n == 0 then return 0 end\n    if n == 1 then\
    \ return 0 end\n    if n == 2 then return 1 end\n    -- Otherwise let's compute\
    \ it using a constant-space algorithm:\n    local n1 = 0\n    local n2 = 0\n \
    \   local n3 = 1\n    for i = 3, n do\n        local n0 = n1 + n2 + n3\n     \
    \   n1 = n2\n        n2 = n3\n        n3 = n0\n    end\n    return n3\nend", "\t\
    return -1\nend", "  if n <= 2 then\n    return n - 1\n  end\n  local a, b, c =\
    \ 0, 0, 1\n  for i = 3, n do\n    a, b, c = b, c, c + b + a\n  end\n  return c\n\
    end\nassert(fibfib(1) == 0)\nassert(fibfib(5) == 4)\nassert(fibfib(8) == 24)",
  "  local a, b, c = 0, 0, 1\n  for i = 1, n do\n    a, b, c = b, c, a + b + c\n \
    \ end\n  return a\nend", "    local a, b, c = 0, 0, 1\n    for i = 2, n do\n \
    \       a, b, c = b, c, a + b + c\n    end\n    return c\nend", "  if n < 2 then\n\
    \    return n\n  end\n  local a, b, c = 0, 0, 1\n  for i = 3, n do\n    a, b,\
    \ c = b, c, a + b + c\n  end\n  return c\nend", "  if n < 0 then\n    return 0\n\
    \  elseif n == 0 then\n    return 0\n  elseif n == 1 then\n    return 0\n  elseif\
    \ n == 2 then\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  end\nend", "    if n == 0 then\n        return 0\n    elseif n == 1 then\n\
    \        return 0\n    elseif n == 2 then\n        return 1\n    else\n      \
    \  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n <=\
    \ 1 then\n        return 0\n    elseif n == 2 then\n        return 1\n    else\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if\
    \ n == 0 then\n        return 0\n    elseif n == 1 then\n        return 0\n  \
    \  elseif n == 2 then\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "  local a, b, c = 0, 0, 1\n  for\
    \ i = 2, n do\n    a, b, c = b, c, c + b + a\n  end\n  return c\nend\nassert(fibfib(1)\
    \ == 0)\nassert(fibfib(5) == 4)\nassert(fibfib(8) == 24)", "    return 0\nend",
  "\tif n <= 1 then\n\t\treturn 0\n\telseif n == 2 then\n\t\treturn 1\n\telse\n\t\t\
    local n1, n2, n3 = 0, 0, 1\n\t\tfor i = 3, n do\n\t\t\tn1, n2, n3 = n2, n3, n1\
    \ + n2 + n3\n\t\tend\n\t\treturn n3\n\tend\nend", "    local n1, n2, n3 = 0, 0,\
    \ 1\n    for i = 3, n do\n        n1, n2, n3 = n2, n3, n1 + n2 + n3\n    end\n\
    \    return n3\nend", "  local a, b, c = 0, 0, 1\n  for i = 1, n do\n    a, b,\
    \ c = b, c, b + c + a\n  end\n  return a\nend", "  -- your code here\nend", " \
    \   return 0\nend", "  if n <= 2 then\n    return n - 1\n  end\n  return fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)\nend", end, "    if n == 0 then\n     \
    \   return 0\n    elseif n == 1 then\n        return 0\n    elseif n == 2 then\n\
    \        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "  if n < 3 then\n    return n-1\n  end\n  local a, b, c = 0,\
    \ 0, 1\n  for i = 3, n do\n    a, b, c = b, c, a+b+c\n  end\n  return c\nend",
  "  local vals = {0, 0, 1}\n  for i = 3, n do\n    vals[i] = vals[i-1] + vals[i-2]\
    \ + vals[i-3]\n  end\n  return vals[n]\nend", "\tif n == 0 then\n\t\treturn 0\n\
    \telseif n == 1 then\n\t\treturn 0\n\telseif n == 2 then\n\t\treturn 1\n\telse\n\
    \t\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\tend\nend", "  if n == 0\
    \ then\n    return 0\n  elseif n == 1 then\n    return 0\n  elseif n == 2 then\n\
    \    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\n\
    end", "  -- Implement here\nend", "  if n == 0 then\n    return 0\n  elseif n\
    \ == 1 then\n    return 0\n  elseif n == 2 then\n    return 1\n  else\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "\tlocal a, b, c = 0,\
    \ 0, 1\n\tfor i = 2, n do\n\t\ta, b, c = b, c, a + b + c\n\tend\n\treturn c\n\
    end", "    local a, b, c = 0, 0, 1\n    for i = 1, n do\n        a, b, c = b,\
    \ c, a + b + c\n    end\n    return a\nend", "    if n == 0 then\n        return\
    \ 0\n    elseif n == 1 then\n        return 0\n    elseif n == 2 then\n      \
    \  return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "  assert(n >= 0, \"require a non-negative number\")\n  if n ==\
    \ 0 then return 0 end\n  if n == 1 then return 0 end\n  if n == 2 then return\
    \ 1 end\n  local a, b, c = 0, 0, 1\n  for i = 3, n do\n    a, b, c = b, c, a +\
    \ b + c\n  end\n  return c\nend", "  local p,q,r = 0,0,1\n  for i=1,n do\n   \
    \ p,q,r = q,r,p+q+r\n  end\n  return p\nend", "  local a, b, c = 0, 0, 1\n  for\
    \ i = 2, n do\n    local d = a + b + c\n    a, b, c = b, c, d\n  end\n  return\
    \ c\nend", "\tlocal x, y, z = 0, 0, 1\n\tfor i = 2, n do\n\t\tx, y, z = y, z,\
    \ y + z + x\n\tend\n\treturn z\nend", "  if n == 0 then\n    return 0\n  elseif\
    \ n == 1 then\n    return 0\n  elseif n == 2 then\n    return 1\n  else\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "    if n == 0 then\n\
    \        return 0\n    elseif n == 1 then\n        return 0\n    elseif n == 2\
    \ then\n        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\n    end\nend", "    local a = 0\n    local b = 0\n    local c =\
    \ 1\n    for i = 1, n-1 do\n        a = b\n        b = c\n        c = a + b +\
    \ c\n    end\n    return a\nend", "  if n <= 2 then\n    return n-1\n  end\n \
    \ local a, b, c = 0, 0, 1\n  local i = 3\n  while i <= n do\n    a, b, c = b,\
    \ c, a+b+c\n    i = i + 1\n  end\n  return c\nend", "  if n == 0 then\n    return\
    \ 0\n  elseif n == 1 then\n    return 0\n  elseif n == 2 then\n    return 1\n\
    \  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  if\
    \ n == 0 then\n    return 0\n  elseif n == 1 then\n    return 0\n  elseif n ==\
    \ 2 then\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  end\nend\nassert(fibfib(1) == 0)\nassert(fibfib(5) == 4)\nassert(fibfib(8)\
    \ == 24)", "    local a, b, c = 0, 0, 1\n    for i = 3, n do\n        a, b, c\
    \ = b, c, a + b + c\n    end\n    return c\nend", "  local a, b, c = 0, 0, 1\n\
    \  for i = 1, n do\n    a, b, c = b, c, a + b + c\n  end\n  return a\nend\nexercise.fibfib\
    \ = fibfib", "    if n <= 2 then\n        return n-1\n    end\n    local a, b,\
    \ c = 0, 0, 1\n    for i = 3, n do\n        a, b, c = b, c, a+b+c\n    end\n \
    \   return c\nend", "    local f0, f1, f2 = 0, 0, 1\n    for i = 3, n do\n   \
    \     f0, f1, f2 = f1, f2, f0 + f1 + f2\n    end\n    return f2\nend", "  -- TODO:\
    \ write fibfib here\nend", "  -- @TODO: [fibfib] Write fibfib\nend", "  if n <\
    \ 2 then\n    return n\n  end\n  if n == 2 then\n    return 1\n  end\n  local\
    \ a, b, c = 0, 0, 1\n  for i = 3, n do\n    a, b, c = b, c, a + b + c\n  end\n\
    \  return c\nend", "    if n <= 1 then\n        return 0\n    elseif n == 2 then\n\
    \        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "  return 0\nend", "    if n == 0 then\n        return 0\n   \
    \ elseif n == 1 then\n        return 0\n    elseif n == 2 then\n        return\
    \ 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\n\
    end", "    local fib = {0, 0, 1}\n    for i = 3, n do\n        fib[i % 3 + 1]\
    \ = fib[1] + fib[2] + fib[3]\n    end\n    return fib[n % 3 + 1]\nend", "  local\
    \ a, b, c = 0, 0, 1\n  for i = 2, n do\n    a, b, c = b, c, a + b + c\n  end\n\
    \  return c\nend", "  local a, b, c = 0, 0, 1\n  for i = 3, n do\n    a, b, c\
    \ = b, c, a + b + c\n  end\n  return c\nend", "    -- YOUR CODE HERE\n    local\
    \ a = 0\n    local b = 0\n    local c = 1\n    local sum = 0\n    for i = 3, n\
    \ do\n        sum = a + b + c\n        a = b\n        b = c\n        c = sum\n\
    \    end\n    return sum\nend", "    local a = 0\n    local b = 0\n    local c\
    \ = 1\n    local d = 0\n    for i = 2, n do\n        a = b\n        b = c\n  \
    \      c = d\n        d = a + b + c\n    end\n    return d\nend", "  if n <= 1\
    \ then\n    return 0\n  elseif n == 2 then\n    return 1\n  else\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  local prevprev = 0\n  local prev\
    \ = 0\n  local curr = 1\n  for i = 3, n do\n    local next = prevprev + prev +\
    \ curr\n    prevprev = prev\n    prev = curr\n    curr = next\n  end\n  return\
    \ curr\nend", "\tassert(type(n) == \"number\", \"Only numbers are allowed.\")\n\
    \tif n == 0 then return 0 end\n\tif n == 1 then return 0 end\n\tif n == 2 then\
    \ return 1 end\n\tlocal f1, f2, f3 = 0, 0, 1\n\tfor i = 3, n do\n\t\tf1, f2, f3\
    \ = f2, f3, f1 + f2 + f3\n\tend\n\treturn f3\nend", "    if n == 0 then\n    \
    \    return 0\n    elseif n == 1 then\n        return 0\n    elseif n == 2 then\n\
    \        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "  local a = 0\n  local b = 0\n  local c = 1\n  if n == 0 then\n\
    \    return a\n  elseif n == 1 then\n    return b\n  elseif n == 2 then\n    return\
    \ c\n  else\n    for i = 3, n do\n      a, b, c = b, c, a + b + c\n    end\n \
    \   return c\n  end\nend", "\tif n == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\
    \t\treturn 0\n\telseif n == 2 then\n\t\treturn 1\n\telse\n\t\treturn fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n\tend\nend", end, "    -- Fill in here.\nend",
  "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 0\n\
    \    elseif n == 2 then\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "  -- your code here\nend", "  \
    \  local a, b, c = 0, 0, 1\n    for i = 3, n do\n        a, b, c = b, c, a + b\
    \ + c\n    end\n    return c\nend", end, "    local nums = {0, 0, 1}\n    local\
    \ m = n\n    while n > 2 do\n        n = n - 1\n        nums[n % 3 + 1] = nums[(n\
    \ + 1) % 3 + 1] + nums[(n + 2) % 3 + 1] + nums[(n + 3) % 3 + 1]\n    end\n   \
    \ return nums[m % 3 + 1]\nend", "  -- Fill in the body of this function!\nend",
  "    if n <= 1 then\n        return 0\n    elseif n == 2 then\n        return 1\n\
    \    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend",
  "  -- Your code here\nend", "    -- replace the following line with your code\n\
    \    return 0\nend", "  if n < 2 then\n    return n\n  end\n  if n == 2 then\n\
    \    return 1\n  end\n  local a, b, c = 0, 0, 1\n  for i = 3, n do\n    a, b,\
    \ c = b, c, a + b + c\n  end\n  return c\nend", "  if n == 0 then\n    return\
    \ 0\n  elseif n == 1 then\n    return 0\n  elseif n == 2 then\n    return 1\n\
    \  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "\t\
    local a, b, c = 0, 0, 1\n\tfor i = 1, n - 1 do\n\t\ta, b, c = b, c, a + b + c\n\
    \tend\n\treturn a\nend", "  if n < 3 then\n    return n - 1\n  end\n  local prev,\
    \ prevprev, result = 1, 0, 2\n  for i = 3, n do\n    result = prev + prevprev\
    \ + result\n    prevprev = prev\n    prev = result\n  end\n  return result\nend",
  "    if n < 3 then\n        return n - 1\n    end\n    local a, b, c = 0, 0, 1\n\
    \    for i = 3, n do\n        a, b, c = b, c, a + b + c\n    end\n    return c\n\
    end", "  if n <= 1 then\n    return 0\n  elseif n == 2 then\n    return 1\n  else\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "\tif n == 0\
    \ then\n\t\treturn 0\n\telseif n == 1 then\n\t\treturn 0\n\telseif n == 2 then\n\
    \t\treturn 1\n\telse\n\t\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\tend\n\
    end", "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return\
    \ 0\n    elseif n == 2 then\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n == 0 then\n        return\
    \ 0\n    elseif n == 1 then\n        return 0\n    elseif n == 2 then\n      \
    \  return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return\
    \ 0\n  elseif n == 2 then\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n  end\nend", "    if n <= 2 then\n        return n - 1\n    end\n\
    \    local a, b, c = 0, 0, 1\n    for i = 3, n do\n        a, b, c = b, c, c +\
    \ b + a\n    end\n    return c\nend", "    if n == 0 then\n        return 0\n\
    \    elseif n == 1 then\n        return 0\n    elseif n == 2 then\n        return\
    \ 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\n\
    end", "  if n < 3 then\n    return 0\n  elseif n == 3 then\n    return 1\n  else\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", end, "  if n\
    \ == 0 then\n    return 0\n  elseif n == 1 then\n    return 0\n  elseif n == 2\
    \ then\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  end\nend", "    if n == 0 then\n        return 0\n    elseif n == 1 then\n\
    \        return 0\n    elseif n == 2 then\n        return 1\n    else\n      \
    \  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n <\
    \ 3 then\n        return n - 1\n    end\n    local a, b, c = 0, 0, 1\n    for\
    \ i = 3, n do\n        a, b, c = b, c, a + b + c\n    end\n    return c\nend",
  "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 0\n\
    \    elseif n == 2 then\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n <= 1 then\n        return\
    \ 0\n    elseif n == 2 then\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "  local f0, f1, f2 = 0, 0, 1\n\
    \  for i = 1, n do\n    if i <= 2 then\n      f0 = 0\n      f1 = 1\n    else\n\
    \      f0, f1, f2 = f1, f2, f1 + f2 + f0\n    end\n  end\n  return f0\nend", " \
    \ local f={0,0,1}\n  if n<=2 then return f[n+1] end\n  for i=3,n do\n    f[1],f[2],f[3]=f[2],f[3],f[1]+f[2]+f[3]\n\
    \  end\n  return f[3]\nend", "  local array = {0, 0, 1}\n  local result = 0\n\
    \  for i = 3, n do\n    result = array[1] + array[2] + array[3]\n    array[1]\
    \ = array[2]\n    array[2] = array[3]\n    array[3] = result\n  end\n  return\
    \ result\nend", "    local fn = 0\n    local fn_1 = 0\n    local fn_2 = 1\n  \
    \  local fn_3 = 0\n    if n <= 0 then\n        return 0\n    end\n    if n ==\
    \ 1 then\n        return 0\n    end\n    if n == 2 then\n        return 1\n  \
    \  end\n    for i = 3, n do\n        fn = fn_1 + fn_2 + fn_3\n        fn_3 = fn_2\n\
    \        fn_2 = fn_1\n        fn_1 = fn\n    end\n    return fn\nend", "\tlocal\
    \ x1, x2, x3 = 0, 0, 1\n\tfor i = 3, n do\n\t\tx1, x2, x3 = x2, x3, x1 + x2 +\
    \ x3\n\tend\n\treturn x3\nend", "    if n == 0 then\n        return 0\n    elseif\
    \ n == 1 then\n        return 0\n    elseif n == 2 then\n        return 1\n  \
    \  else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend",
  "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 0\n\
    \    elseif n == 2 then\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n == 0 then\n        return\
    \ 0\n    elseif n == 1 then\n        return 0\n    elseif n == 2 then\n      \
    \  return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    if n < 2 then\n        return n\n    end\n    local two_ago\
    \ = 0\n    local one_ago = 1\n    local acc = two_ago + one_ago\n    for i = 3,\
    \ n do\n        two_ago = one_ago\n        one_ago = acc\n        acc = two_ago\
    \ + one_ago + acc\n    end\n    return acc\nend", "\t-- add your solution here\n\
    end", "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 0\n  elseif\
    \ n == 2 then\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  end\nend", "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return\
    \ 0\n  elseif n == 2 then\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n  end\nend", "    --TODO: Implement function\n    local a = 0\n\
    \    local b = 0\n    local c = 1\n    local result = 0\n    if n == 0 then\n\
    \        return 0\n    elseif n == 1 then\n        return 0\n    elseif n == 2\
    \ then\n        return 1\n    else\n        for i = 2, n do\n            result\
    \ = a + b + c\n            a = b\n            b = c\n            c = result\n\
    \        end\n        return result\n    end\nend", "  return fibfib_memo[n]\n\
    end", "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return\
    \ 0\n    elseif n == 2 then\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    assert(type(n) == \"number\"\
    \ and n > 0 and n % 1 == 0,\n           \"Argument to fibfib must be an integer\
    \ greater than 0\")\n    local a, b, c = 0, 0, 1\n    for i = 3, n do\n      \
    \  a, b, c = b, c, a + b + c\n    end\n    return c\nend", "    if n == 0 then\n\
    \        return 0\n    elseif n == 1 then\n        return 0\n    elseif n == 2\
    \ then\n        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\n    end\nend", "  if n == 0 then\n    return 0\n  elseif n == 1\
    \ then\n    return 0\n  elseif n == 2 then\n    return 1\n  else\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n  end\nend", "    if n < 0 then\n        return\
    \ nil\n    end\n    if n < 2 then\n        return n\n    end\n    local a, b,\
    \ c = 0, 0, 1\n    for i = 2, n do\n        a, b, c = b, c, a + b + c\n    end\n\
    \    return c\nend", "    if (n == 0) then\n        return 0\n    elseif (n ==\
    \ 1) then\n        return 0\n    elseif (n == 2) then\n        return 1\n    else\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "\t--\
    \ YOUR CODE HERE\n\tlocal a = 1\n\tlocal b = 1\n\tlocal c = 1\n\tif n < 0 then\n\
    \t\treturn 0\n\telseif n == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\t\treturn\
    \ 0\n\telseif n == 2 then\n\t\treturn 1\n\telse\n\t\tfor i = 3, n do\n\t\t\tc\
    \ = a + b + c\n\t\t\ta = b\n\t\t\tb = c\n\t\tend\n\t\treturn c\n\tend\nend", "\t\
    -- TODO: Your code here\nend", "  if n == 0 then\n    return 0\n  elseif n ==\
    \ 1 then\n    return 0\n  elseif n == 2 then\n    return 1\n  else\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "    -- TODO: Your code\
    \ here.\nend", "    local a, b, c = 0, 0, 1\n    for i = 3, n do\n        a, b,\
    \ c = b, c, a + b + c\n    end\n    return c\nend", end, "    if n < 2 then\n\
    \        return n - 1\n    end\n    if n == 2 then\n        return 1\n    end\n\
    \    local a, b, c = 0, 0, 1\n    for i = 1, n - 2 do\n        a, b, c = b, c,\
    \ a + b + c\n    end\n    return c\nend", "  local f1, f2, f3 = 0, 0, 1\n  for\
    \ i = 1, n do\n    f1, f2, f3 = f2, f3, f1 + f2 + f3\n  end\n  return f1\nend",
  "    local a, b, c = 0, 0, 1\n    if n == 0 then\n        return a\n    elseif n\
    \ == 1 then\n        return b\n    elseif n == 2 then\n        return c\n    else\n\
    \        for i = 3, n do\n            a, b, c = b, c, a + b + c\n        end\n\
    \        return c\n    end\nend", "  if n <= 1 then\n    return 0\n  elseif n\
    \ == 2 then\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  end\nend", "    if n == 0 then\n        return 0\n    elseif n == 1 then\n\
    \        return 0\n    elseif n == 2 then\n        return 1\n    else\n      \
    \  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "    if n <=\
    \ 1 then\n        return 0\n    elseif n == 2 then\n        return 1\n    else\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "  --\
    \ TODO\nend", "    -- assert(type(n) == \"number\")\n    if n < 0 then return\
    \ -1 end\n    if n == 0 then return 0 end\n    if n == 1 then return 0 end\n \
    \   if n == 2 then return 1 end\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "    local t = {0, 0, 1}\n    for i = 3, n do\n        t[i%3+1] = t[1] +\
    \ t[2] + t[3]\n    end\n    return t[n%3+1]\nend", "\tif n < 0 then return -1\
    \ end\n\tlocal fib = {0, 0, 1}\n\tfor i = 3, n do\n\t\tfib[i] = fib[i-1] + fib[i-2]\
    \ + fib[i-3]\n\tend\n\treturn fib[n]\nend", "  if n <= 2 then\n    return n -\
    \ 1\n  end\n  local a, b, c = 0, 0, 1\n  for i = 3, n do\n    a, b, c = b, c,\
    \ a + b + c\n  end\n  return c\nend", "\tif n == 0 then\n\t\treturn 0\n\telseif\
    \ n == 1 then\n\t\treturn 0\n\telseif n == 2 then\n\t\treturn 1\n\telse\n\t\t\
    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\tend\nend", "    if n == 0 then\n\
    \        return 0\n    elseif n == 1 then\n        return 0\n    elseif n == 2\
    \ then\n        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\n    end\nend", "  local pre3, pre2, pre1 = 0, 0, 1\n  if n == 0\
    \ then\n    return pre3\n  elseif n == 1 then\n    return pre2\n  elseif n ==\
    \ 2 then\n    return pre1\n  end\n  for i = 3, n do\n    local sum = pre3 + pre2\
    \ + pre1\n    pre3 = pre2\n    pre2 = pre1\n    pre1 = sum\n  end\n  return pre1\n\
    end", "  if n <= 2 then\n    return n - 1\n  end\n  local fib = {0, 0, 1}\n  for\
    \ i = 3, n do\n    fib[#fib + 1] = fib[#fib] + fib[#fib - 1] + fib[#fib - 2]\n\
    \  end\n  return fib[#fib]\nend", "\t-- FILL IN HERE\n\treturn 0\nend", "  if\
    \ n == 0 then\n    return 0\n  elseif n == 1 then\n    return 0\n  elseif n ==\
    \ 2 then\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  end\nend", end, "  -- Write your code here\nend", "    if n <= 1 then\n   \
    \     return 0\n    elseif n == 2 then\n        return 1\n    else\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend\nassert(fibfib(1) == 0)\n\
    assert(fibfib(5) == 4)\nassert(fibfib(8) == 24)", "\tif n <= 1 then\n\t\treturn\
    \ 0\n\telseif n == 2 then\n\t\treturn 1\n\telse\n\t\treturn fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n\tend\nend", "    if n < 3 then\n        return n - 1\n    end\n\
    \    local x, y, z = 0, 0, 1\n    for i = 3, n do\n        x, y, z = y, z, x +\
    \ y + z\n    end\n    return z\nend", "\tif n < 3 then\n\t\treturn n - 1\n\tend\n\
    \tlocal a, b, c = 0, 0, 1\n\tfor i = 3, n do\n\t\ta, b, c = b, c, c + b + a\n\t\
    end\n\treturn c\nend", "    if n < 2 then\n        return n - 1\n    end\n   \
    \ local f0, f1, f2 = 0, 0, 1\n    for i = 3, n do\n        f0, f1, f2 = f1, f2,\
    \ f0 + f1 + f2\n    end\n    return f2\nend", "    if n == 0 then\n        return\
    \ 0\n    elseif n == 1 then\n        return 0\n    elseif n == 2 then\n      \
    \  return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    if n <= 1 then\n        return 0\n    elseif n == 2 then\n\
    \        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return\
    \ 0\n  elseif n == 2 then\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n  end\nend", "  -- TODO: Write fibfib(n) here.\n  local a, b,\
    \ c = 0, 0, 1\n  if n == 0 then\n    return a\n  elseif n == 1 then\n    return\
    \ b\n  elseif n == 2 then\n    return c\n  else\n    for i = 3, n do\n      a,\
    \ b, c = b, c, a + b + c\n    end\n    return c\n  end\nend", end, "  local a,\
    \ b, c = 0, 0, 1\n  for i = 2, n do\n    a, b, c = b, c, c + b + a\n  end\n  return\
    \ c\nend", "    if n == 0 then\n        return 0\n    elseif n == 1 then\n   \
    \     return 0\n    elseif n == 2 then\n        return 1\n    else\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "\tif n <= 1 then\n\t\
    \treturn 0\n\telseif n == 2 then\n\t\treturn 1\n\telse\n\t\treturn fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n\tend\nend", "  if n == 0 then\n    return 0\n\
    \  elseif n == 1 then\n    return 0\n  elseif n == 2 then\n    return 1\n  else\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "    local table\
    \ = {0, 0, 1}\n    for i = 3, n do\n        table[i+1] = table[i] + table[i-1]\
    \ + table[i-2]\n    end\n    return table[n+1]\nend", "  -- TODO: write your code\
    \ here\nend", "    if n == 0 then\n        return 0\n    elseif n == 1 then\n\
    \        return 0\n    elseif n == 2 then\n        return 1\n    else\n      \
    \  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "  -- TODO:\
    \ implement this function.\n  return nil\nend", "    local result = 0\n    if\
    \ n == 0 then\n        result = 0\n    elseif n == 1 then\n        result = 0\n\
    \    elseif n == 2 then\n        result = 1\n    else\n        result = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\n    return result\nend", "  return n\n\
    end", "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return\
    \ 0\n    elseif n == 2 then\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "\tif n < 3 then\n\t\treturn n-1\n\
    \tend\n\tlocal a, b, c = 0, 0, 1\n\tfor i = 3, n do\n\t\ta, b, c = b, c, a+b+c\n\
    \tend\n\treturn c\nend", "  if n == 0 then\n    return 0\n  elseif n == 1 then\n\
    \    return 0\n  elseif n == 2 then\n    return 1\n  else\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  return 0\nend", "    if n <= 2\
    \ then\n        return n - 1\n    end\n    local a, b, c = 0, 0, 1\n    for i\
    \ = 3, n do\n        a, b, c = b, c, a + b + c\n    end\n    return c\nend", " \
    \   local function fibfib_aux(i, a, b, c)\n        if i == n then\n          \
    \  return a\n        else\n            return fibfib_aux(i+1, b, c, a+b+c)\n \
    \       end\n    end\n    return fibfib_aux(0, 0, 0, 1)\nend", "  if n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 0\n  elseif n == 2 then\n    return\
    \ 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend",
  "  if n < 3 then\n    return n - 1\n  end\n  local first, second, third = 0, 0,\
    \ 1\n  for i = 3, n do\n    first, second, third = second, third, first + second\
    \ + third\n  end\n  return third\nend", "    if n < 3 then\n        return n -\
    \ 1\n    end\n    local a, b, c = 0, 0, 1\n    for i = 3, n do\n        a, b,\
    \ c = b, c, a + b + c\n    end\n    return c\nend", "  local fib = {0, 0, 1}\n\
    \  for i = 3, n do\n    fib[i] = fib[i-1] + fib[i-2] + fib[i-3]\n  end\n  return\
    \ fib[n]\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

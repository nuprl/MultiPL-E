name: HumanEval_63_fibfib
language: lua
prompt: "-- The FibFib number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n-- fibfib(0) == 0\n-- fibfib(1) == 0\n-- fibfib(2)\
  \ == 1\n-- fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n-- Please write\
  \ a function to efficiently compute the n-th element of the fibfib number sequence.\n\
  -- >>> fibfib(1)\n-- 0\n-- >>> fibfib(5)\n-- 4\n-- >>> fibfib(8)\n-- 24\nlocal function\
  \ fibfib(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fibfib\n\
  \    lu.assertEquals(candidate(2), 1)\n    lu.assertEquals(candidate(1), 0)\n  \
  \  lu.assertEquals(candidate(5), 4)\n    lu.assertEquals(candidate(8), 24)\n   \
  \ lu.assertEquals(candidate(10), 81)\n    lu.assertEquals(candidate(12), 274)\n\
  \    lu.assertEquals(candidate(14), 927)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\tlocal result = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 1\n\t\
    for i = 2, n do\n\t\tresult = a + b + c\n\t\ta = b\n\t\tb = c\n\t\tc = result\n\
    \tend\n\treturn result\nend", "  if n < 3 then\n    return n - 1\n  end\n  local\
    \ minus_one = 0\n  local minus_two = 0\n  local minus_three = 1\n  local result\
    \ = minus_three\n  for i = 3, n do\n    result = minus_one + minus_two + minus_three\n\
    \    minus_one = minus_two\n    minus_two = minus_three\n    minus_three = result\n\
    \  end\n  return result\nend", "    local fibfib0 = 0\n    local fibfib1 = 0\n\
    \    local fibfib2 = 1\n    if n == 0 then\n        return fibfib0\n    elseif\
    \ n == 1 then\n        return fibfib1\n    elseif n == 2 then\n        return\
    \ fibfib2\n    else\n        for i = 3, n do\n            local fibfib3 = fibfib0\
    \ + fibfib1 + fibfib2\n            fibfib0 = fibfib1\n            fibfib1 = fibfib2\n\
    \            fibfib2 = fibfib3\n        end\n        return fibfib2\n    end\n\
    end", "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return\
    \ 0\n    elseif n == 2 then\n        return 1\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", end, "    if n == 0 then\n     \
    \   return 0\n    elseif n == 1 then\n        return 0\n    elseif n == 2 then\n\
    \        return 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend", "    if n <= 2 then\n        return n - 1\n    end\n    return\
    \ fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\nend", end, "  -- ???\nend", " \
    \ -- WRITE YOUR CODE HERE\nend", "\tlocal fib_list = {0, 0, 1}\n\tif n < 3 then\n\
    \t\treturn fib_list[n+1]\n\tend\n\tfor i = 3, n do\n\t\tfib_list[1], fib_list[2],\
    \ fib_list[3] = fib_list[2], fib_list[3], fib_list[1] + fib_list[2] + fib_list[3]\n\
    \tend\n\treturn fib_list[3]\nend", "  if n < 0 then return nil end\n  if n < 2\
    \ then return 0 end\n  if n == 2 then return 1 end\n  local a, b, c = 0, 0, 1\n\
    \  for i = 3, n do\n    a, b, c = b, c, a + b + c\n  end\n  return c\nend", " \
    \ if n < 0 then\n    return nil\n  end\n  local a, b, c = 0, 0, 1\n  for i = 2,\
    \ n do\n    a, b, c = b, c, a + b + c\n  end\n  return c\nend", "    if n <= 2\
    \ then\n        return n - 1\n    end\n    local a, b, c = 0, 0, 1\n    for i\
    \ = 3, n do\n        a, b, c = b, c, c + b + a\n    end\n    return c\nend", " \
    \ if n < 0 then\n    return -1\n  end\n  if n == 0 then\n    return 0\n  end\n\
    \  if n == 1 then\n    return 0\n  end\n  if n == 2 then\n    return 1\n  end\n\
    \  local a = 0\n  local b = 0\n  local c = 1\n  local i = 3\n  while i <= n do\n\
    \    local d = a + b + c\n    a = b\n    b = c\n    c = d\n    i = i + 1\n  end\n\
    \  return c\nend", "  local fibs = {0, 0, 1}\n  for i = 3, n do\n    fibs[i] =\
    \ fibs[i-1] + fibs[i-2] + fibs[i-3]\n  end\n  return fibs[n]\nend", "    return\
    \ 0\nend", "  -- Implement fibfib function here\n  if n == 0 then\n    return\
    \ 0\n  elseif n == 1 then\n    return 0\n  elseif n == 2 then\n    return 1\n\
    \  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  local\
    \ a, b, c = 0, 0, 1\n  for i = 3, n do\n    a, b, c = b, c, a + b + c\n  end\n\
    \  return c\nend", end]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

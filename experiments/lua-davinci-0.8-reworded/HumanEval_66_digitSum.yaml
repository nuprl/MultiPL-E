name: HumanEval_66_digitSum
language: lua
prompt: "-- Task\n-- Write a function that takes a string as input and returns the\
  \ sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>> digitSum('')\n\
  -- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n-- 67\n-- >>> digitSum('helloE')\n\
  -- 69\n-- >>> digitSum('woArBld')\n-- 131\n-- >>> digitSum('aAaaaXa')\n-- 153\n\
  local function digitSum(s)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
  \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'), 131)\n\
  \    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
  \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
  \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
  \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local _A = string.byte('A')\n    local _Z = string.byte('Z')\n\
    \    local sum = 0\n    for c in s:gmatch('.') do\n        local code = string.byte(c)\n\
    \        if code >= _A and code <= _Z then\n            sum = sum + code\n   \
    \     end\n    end\n    return sum\nend", "    local sum = 0\n    for c in s:gmatch('%u')\
    \ do\n        sum = sum + c:byte()\n    end\n    return sum\nend", "\tlocal total\
    \ = 0\n\tfor i = 1, #s do\n\t\tif string.match(s, \"%u\") then\n\t\t\ttotal =\
    \ total + string.byte(s, i)\n\t\tend\n\tend\n\treturn total\nend", "    local\
    \ total = 0\n    for c in s:gmatch('%u') do\n        total = total + c:byte()\n\
    \    end\n    return total\nend", "  local sum = 0\n  for i = 1, #s do\n    if\
    \ s:byte(i) >= 65 and s:byte(i) <= 90 then\n      sum = sum + s:byte(i)\n    end\n\
    \  end\n  return sum\nend", "    local digitSum = 0\n    local asciiCodes = {\n\
    \        ['A'] = 65,\n        ['B'] = 66,\n        ['C'] = 67,\n        ['D']\
    \ = 68,\n        ['E'] = 69,\n        ['F'] = 70,\n        ['G'] = 71,\n     \
    \   ['H'] = 72,\n        ['I'] = 73,\n        ['J'] = 74,\n        ['K'] = 75,\n\
    \        ['L'] = 76,\n        ['M'] = 77,\n        ['N'] = 78,\n        ['O']\
    \ = 79,\n        ['P'] = 80,\n        ['Q'] = 81,\n        ['R'] = 82,\n     \
    \   ['S'] = 83,\n        ['T'] = 84,\n        ['U'] = 85,\n        ['V'] = 86,\n\
    \        ['W'] = 87,\n        ['X'] = 88,\n        ['Y'] = 89,\n        ['Z']\
    \ = 90\n    }\n    for i = 1, #s do\n        if asciiCodes[s:sub(i, i)] then\n\
    \            digitSum = digitSum + asciiCodes[s:sub(i, i)]\n        end\n    end\n\
    \    return digitSum\nend", "    local sum = 0\n    for c in s:gmatch('%a') do\n\
    \        local c_ascii = string.byte(c)\n        if c_ascii >= 65 and c_ascii\
    \ <= 90 then\n            sum = sum + c_ascii\n        end\n    end\n    return\
    \ sum\nend", "    local sum = 0\n    for c in s:gmatch('.') do\n        if c:upper()\
    \ == c then\n            sum = sum + c:byte()\n        end\n    end\n    return\
    \ sum\nend", "  local sum = 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n\
    \    if c:upper() == c then\n      sum = sum + c:byte()\n    end\n  end\n  return\
    \ sum\nend", "  sum = 0\n  for i = 1, #s do\n    local char = s:sub(i, i)\n  \
    \  local charCode = string.byte(char)\n    if charCode >= 65 and charCode <= 90\
    \ then\n      sum = sum + charCode\n    end\n  end\n  return sum\nend", "\tlocal\
    \ sum = 0\n\tfor i = 1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tlocal ascii = c:byte()\n\
    \t\tif ascii >= 65 and ascii <= 90 then\n\t\t\tsum = sum + ascii\n\t\tend\n\t\
    end\n\treturn sum\nend", "  return (s:gsub('[%a]', function(c)\n    return c:upper()\
    \ == c and c:byte() or 0\n  end):gsub('%d', function(c)\n    return tonumber(c)\n\
    \  end):sum())\nend", "  \nend", "    local sum = 0\n    for c in s:gmatch('.')\
    \ do\n        local n = c:byte()\n        if n >= 65 and n <= 90 then\n      \
    \      sum = sum + n\n        end\n    end\n    return sum\nend", "  if type(s)\
    \ ~= 'string' then\n    error('String expected', 2)\n  end\n  local sum = 0\n\
    \  for _, c in utf8.codes(s) do\n    local uc = utf8.char(c)\n    if string.find(uc,\
    \ '%u') then\n      sum = sum + c\n    end\n  end\n  return sum\nend", "  local\
    \ sum = 0\n  local chars = s:byte(1, #s)\n  for i = 1, #chars do\n    local c\
    \ = chars[i]\n    if c >= 65 and c <= 90 then\n      sum = sum + c\n    end\n\
    \  end\n  return sum\nend", "    local sum = 0\n    for i = 1, #s do\n       \
    \ if s:byte(i) > 64 and s:byte(i) < 91 then\n            sum = sum + s:byte(i)\n\
    \        end\n    end\n    return sum\nend", "  local sum = 0\n  for i = 1, #s\
    \ do\n    if string.byte(s, i) < 97 then\n      sum = sum + string.byte(s, i)\n\
    \    end\n  end\n  return sum\nend", "\treturn s:gsub('%D+', ''):gsub('%d', function(i)\
    \ return tonumber(i) end):sum()\nend", "  local sum = 0\n  local ascii = string.byte(s)\n\
    \  if (ascii <= 90 and ascii >= 65) then\n    sum = sum + ascii\n  end\n  return\
    \ sum\nend", "  return s:gsub('[^A-Z]', ''):gsub('.', function(c) return string.byte(c)\
    \ end):reduce(0, add)\nend", "    s = s:upper()\n    local sum = 0\n    for i\
    \ = 1, s:len() do\n        local c = s:sub(i, i)\n        local code = string.byte(c)\n\
    \        if code >= 65 and code <= 90 then\n            sum = sum + code\n   \
    \     end\n    end\n    return sum\nend", "  local sum = 0\n  local str_length\
    \ = string.len(s)\n  for i = 1, str_length do\n    local char = string.sub(s,\
    \ i, i)\n    local asc_char = string.byte(char)\n    if (65 <= asc_char and asc_char\
    \ <= 90) then\n      sum = sum + asc_char\n    end\n  end\n  return sum\nend",
  "  local total = 0\n  for c in s:gmatch('%u') do\n    total = total + c:byte()\n\
    \  end\n  return total\nend", "  local upperSum = 0\n  for i = 1, #s do\n    local\
    \ ascii = string.byte(s, i)\n    if ascii >= 65 and ascii <= 90 then\n      upperSum\
    \ = upperSum + ascii\n    end\n  end\n  return upperSum\nend", "  local sum =\
    \ 0\n  for i = 1, string.len(s) do\n    local char = string.sub(s, i, i)\n   \
    \ if string.byte(char) > 64 and string.byte(char) < 91 then\n      sum = sum +\
    \ string.byte(char)\n    end\n  end\n  return sum\nend", "    return nil\nend",
  "   local sum = 0\n   for i = 1, #s do\n      local num = string.byte(s, i)\n  \
    \    if 65 <= num and num <= 90 then\n         sum = sum + num\n      end\n  \
    \ end\n   return sum\nend", "  local sum = 0\n  for i = 1, s:len() do\n    local\
    \ char = s:sub(i, i)\n    local charNum = string.byte(char)\n    if charNum >\
    \ 64 and charNum < 91 then\n      sum = sum + charNum\n    end\n  end\n  return\
    \ sum\nend", "  if #s == 0 then return 0 end\n  return string.gsub(s, '%a', function(c)\n\
    \    return string.byte(c)\n  end)\nend", "\tlocal sum = 0\n\tfor i = 1, #s do\n\
    \t\tlocal c = s:sub(i, i)\n\t\tlocal code = c:byte()\n\t\tif 65 <= code and code\
    \ <= 90 then\n\t\t\tsum = sum + code\n\t\tend\n\tend\n\treturn sum\nend", "  local\
    \ sum = 0\n  for c in s:gmatch('%u') do\n    sum = sum + c:byte()\n  end\n  return\
    \ sum\nend", "    local n = 0\n    for c in s:gmatch\".\" do\n        local cc\
    \ = c:byte()\n        if cc >= 65 and cc <= 90 then\n            n = n + cc\n\
    \        end\n    end\n    return n\nend", "    local uppers = s:gsub('[^A-Z]',\
    \ '')\n    local sum = 0\n    for i = 1, #uppers do\n        sum = sum + uppers:byte(i)\n\
    \    end\n    return sum\nend", "  --TODO\nend", "    local sum = 0\n    for i\
    \ = 1, #s do\n        local c = s:sub(i, i)\n        if string.match(c, '%u')\
    \ then\n            sum = sum + string.byte(c)\n        end\n    end\n    return\
    \ sum\nend", "   -- *** Your code goes here ***\nend", "  local sum = 0\n  for\
    \ i = 1, #s do\n    local c = s:sub(i, i)\n    local n = string.byte(c)\n    if\
    \ c == c:upper() and n >= 65 and n <= 90 then\n      sum = sum + n\n    end\n\
    \  end\n  return sum\nend", "    local sum = 0\n    for i = 1, #s do\n       \
    \ local char = s:sub(i, i)\n        local n = string.byte(char)\n        if char:match('%u')\
    \ and n >= 65 and n <= 90 then\n            sum = sum + n\n        end\n    end\n\
    \    return sum\nend", "  local sum = 0\n  for i = 1, #s do\n    local c = s:sub(i,\
    \ i)\n    if c:byte() >= 65 and c:byte() <= 90 then\n      sum = sum + c:byte()\n\
    \    end\n  end\n  return sum\nend", "  \nend", end, "  local sum = 0\n  for i\
    \ = 1, #s do\n    if string.byte(s, i) >= 65 and string.byte(s, i) <= 90 then\n\
    \      sum = sum + string.byte(s, i)\n    end\n  end\n  return sum\nend", "  \
    \ local sum = 0\n   for i = 1, #s do\n      local c = s:sub(i, i)\n      local\
    \ b = c:byte()\n      if b > 64 and b < 91 then\n         sum = sum + b\n    \
    \  end\n   end\n   return sum\nend", "  local sum = 0\n  for c in s:gmatch(\"\
    .\") do\n    if c:byte() >= 65 and c:byte() <= 90 then\n      sum = sum + c:byte()\n\
    \    end\n  end\n  return sum\nend", "    local sum = 0\n    for i = 1, #s do\n\
    \        local c = s:sub(i, i)\n        if c == c:upper() then\n            sum\
    \ = sum + string.byte(c)\n        end\n    end\n    return sum\nend", "    local\
    \ sum = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end", "  local sum = 0\n  for c in s:gmatch('%u') do\n    sum = sum + c:byte()\n\
    \  end\n  return sum\nend", "    if s == '' then\n        return 0\n    end\n\
    \    local sum = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n    \
    \    local a = c:byte()\n        if a >= 65 and a <= 90 then\n            sum\
    \ = sum + a\n        end\n    end\n    return sum\nend", "    local sum = 0\n\
    \    for i = 1, string.len(s) do\n        local c = string.sub(s, i, i)\n    \
    \    if string.byte(c) > 64 and string.byte(c) < 91 then\n            sum = sum\
    \ + string.byte(c)\n        end\n    end\n    return sum\nend", "    local sum\
    \ = 0\n    for i = 1, #s do\n        local code = string.byte(s, i)\n        if\
    \ code >= 65 and code <= 90 then\n            sum = sum + code\n        end\n\
    \    end\n    return sum\nend", "  -- Your code here\nend", "    local sum = 0\n\
    \    for c in s:gmatch(\".\") do\n        if c:match(\"%u\") then\n          \
    \  sum = sum + string.byte(c)\n        end\n    end\n    return sum\nend", " \
    \ local digits = 0\n  for i=1,#s do\n    local c = s:sub(i,i)\n    if (c:match('%u'))\
    \ then\n      digits = digits + string.byte(c)\n    end\n  end\n  return digits\n\
    end", "  local sum = 0\n  for i = 1, #s do\n    if s:byte(i) >= 65 and s:byte(i)\
    \ <= 90 then\n      sum = sum + s:byte(i)\n    end\n  end\n  return sum\nend",
  "  return s:gsub('%l', ''):sum()\nend", "   if #s == 0 then\n      return 0\n  \
    \ end\n   local sum = 0\n   for c in s:gmatch\".\" do\n      if c:byte() < 97\
    \ then\n         sum = sum + c:byte()\n      end\n   end\n   return sum\nend",
  "  local t = {}\n  local sum = 0\n  for i = 1, #s do\n    if s:sub(i, i):match('%u')\
    \ then\n      table.insert(t, s:sub(i, i))\n    end\n  end\n  for k, v in pairs(t)\
    \ do\n    sum = sum + v:byte()\n  end\n  return sum\nend", end, "  local sum =\
    \ 0\n  for i = 1, #s do\n    if s:byte(i) >= 65 and s:byte(i) <= 90 then\n   \
    \   sum = sum + s:byte(i)\n    end\n  end\n  return sum\nend", "  local res =\
    \ 0\n  for i = 1, #s do\n    if s:byte(i) > 90 then\n      res = res + s:byte(i)\
    \ - 32\n    else\n      res = res + s:byte(i)\n    end\n  end\n  return res\n\
    end", "  sum = 0\n  for i = 1, #s do\n    char = string.byte(s, i)\n    if (char\
    \ >= 65 and char <= 90) then\n      sum = sum + char\n    end\n  end\n  return\
    \ sum\nend", "  return s:gsub(\"%l\", \"\"):gsub(\"%s\", \"\"):gsub(\"%a\", \"\
    \"):gsub(\"%d\", \"\"):gsub(\"%p\", \"\"):gsub(\"%c\", \"\"):gsub(\"%s\", \"\"\
    ):gsub(\"%x\", \"\"):gsub(\"%A\", \"\"):gsub(\"%w\", \"\"):gsub(\"%u\", \"\"):gsub(\"\
    %U\", \"\"):gsub(\"%C\", \"\"):gsub(\"%L\", \"\"):gsub(\"%P\", \"\"):gsub(\"%x\"\
    , \"\"):gsub(\"%z\", \"\"):gsub(\"%Z\", \"\"):gsub(\"%S\", \"\"):gsub(\"%X\",\
    \ \"\"):gsub(\"%Y\", \"\"):gsub(\"%G\", \"\"):gsub(\"%F\", \"\"):gsub(\"%O\",\
    \ \"\"):gsub(\"%I\", \"\"):gsub(\"%M\", \"\"):gsub(\"%T\", \"\"):gsub(\"%K\",\
    \ \"\"):gsub(\"%N\", \"\"):gsub(\"%H\", \"\"):gsub(\"%J\", \"\"):gsub(\"%B\",\
    \ \"\"):gsub(\"%D\", \"\"):gsub(\"%E\", \"\"):gsub(\"%W\", \"\"):gsub(\"%V\",\
    \ \"\"):gsub(\"%Q\", \"\"):gsub(\"%R\", \"\"):gsub(\"%-\"):gsub(\"%+\", \"\"):gsub(\"\
    %*\", \"\"):gsub(\"%^\", \"\"):gsub(\"%$\", \"\"):gsub(\"%(\", \"\"):gsub(\"%)\"\
    , \"\"):gsub(\"%[\", \"\"):gsub(\"%]\", \"\"):gsub(\"%.\", \"\"):gsub(\"%?\",\
    \ \"\"):gsub(\"%!\", \"\"):gsub(\"%#\", \"\"):gsub(\"%@\", \"\"):gsub(\"%=\",\
    \ \"\"):gsub(\"%_\", \"\"):gsub(\"%~\", \"\"):gsub(\"%`\", \"\"):gsub(\"%|\",\
    \ \"\"):gsub(\"%\\\\\", \"\"):gsub(\"%/\", \"\"):gsub(\"%{\", \"\"):gsub(\"%}\"\
    , \"\"):gsub(\"%:\", \"\"):gsub(\"%;\", \"\"):gsub(\"%'\", \"\"):gsub(\"%", "\t\
    local total = 0\n\tfor c in s:gmatch(\".\") do\n\t\tif string.byte(c) > 64 and\
    \ string.byte(c) < 91 then\n\t\t\ttotal = total + string.byte(c)\n\t\tend\n\t\
    end\n\treturn total\nend", "  return (s:gsub('%a', function(char) return char:upper():byte()\
    \ end)):sum()\nend", "    local sum = 0\n    for i = 1, string.len(s) do\n   \
    \     local currentChar = string.sub(s, i, i)\n        local asciiValue = string.byte(currentChar)\n\
    \        if asciiValue >= 65 and asciiValue <= 90 then\n            sum = sum\
    \ + asciiValue\n        end\n    end\n    return sum\nend", "  -- your code here\n\
    end", "  -- your code here\nend", "    s = string.upper(s)\n    local sum = 0\n\
    \    for i = 1, string.len(s) do\n        sum = sum + string.byte(s, i)\n    end\n\
    \    return sum\nend", "  local sum = 0\n  local i = 0\n  while (i < #s) do\n\
    \    local n = string.byte(s, i)\n    if n > 64 and n < 91 then\n      sum = sum\
    \ + n\n    end\n    i = i + 1\n  end\n  return sum\nend", "  local sum = 0\n \
    \ for i = 1, #s do\n    local c = s:sub(i, i)\n    local n = string.byte(c)\n\
    \    if n >= 65 and n <= 90 then\n      sum = sum + n\n    end\n  end\n  return\
    \ sum\nend", "  local sum = 0\n  for i = 1, s:len() do\n    if s:sub(i, i):byte()\
    \ >= 65 and s:sub(i, i):byte() <= 90 then\n      sum = sum + s:sub(i, i):byte()\n\
    \    end\n  end\n  return sum\nend", "  -- your code here\nend", "    local sum\
    \ = 0\n    for i = 1, #s do\n        local char = s:sub(i, i)\n        local ascii\
    \ = string.byte(char)\n        if ascii >= 65 and ascii <= 90 then\n         \
    \   sum = sum + ascii\n        end\n    end\n    return sum\nend", end, "  local\
    \ sum = 0\n  for i = 1, s:len() do\n    local a = s:sub(i, i)\n    if a == a:upper()\
    \ then\n      sum = sum + string.byte(a)\n    end\n  end\n  return sum\nend",
  "    local sum = 0\n    for c in s:gmatch('.') do\n        if c:match('%u') then\n\
    \            sum = sum + c:byte()\n        end\n    end\n    return sum\nend",
  "    local sum = 0\n    for c in s:gmatch('%l') do\n        sum = sum + c:byte()\n\
    \    end\n    return sum\nend", "    local total = 0\n    for c in s:gmatch('%w')\
    \ do\n        local code = c:byte()\n        if (code >= 65 and code <= 90) then\n\
    \            total = total + code\n        end\n    end\n    return total\nend",
  "  local sum = 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local code\
    \ = c:byte()\n    if (code > 64 and code < 91) then\n      sum = sum + code\n\
    \    end\n  end\n  return sum\nend", "  return s:gsub(\"[^%u]\", \"\"):sum()\n\
    end", "\tlocal sum = 0\n\tfor i = 1, string.len(s) do\n\t\tlocal char = string.sub(s,\
    \ i, i)\n\t\tlocal charNum = string.byte(char)\n\t\tif charNum >= 65 and charNum\
    \ <= 90 then\n\t\t\tsum = sum + charNum\n\t\tend\n\tend\n\treturn sum\nend\nprint(digitSum(''))\n\
    print(digitSum('abAB'))\nprint(digitSum('abcCd'))\nprint(digitSum('helloE'))\n\
    print(digitSum('woArBld'))\nprint(digitSum('aAaaaXa'))", "   local sum = 0\n \
    \  for i = 1, #s do\n      local c = s:sub(i, i)\n      if c:find('%u') then\n\
    \         sum = sum + c:byte()\n      end\n   end\n   return sum\nend", "    local\
    \ sum = 0\n    for i=1, #s do\n        local c = s:sub(i,i)\n        if c == c:upper()\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end", "\treturn s:lower():gsub('[^%a]', ''):gsub('[^a-z]', ''):gsub('.', function(s)\
    \ return s:byte() - 96 end):sum()\nend", "  local sum = 0\n  for c in s:gmatch('.')\
    \ do\n    if c:byte() >= 65 and c:byte() <= 90 then\n      sum = sum + c:byte()\n\
    \    end\n  end\n  return sum\nend", "  -- Insert your code here.\n  local res\
    \ = 0\n  for i = 1, #s do\n    local ascii = string.byte(s, i)\n    if ascii >=\
    \ 65 and ascii <= 90 then\n      res = res + ascii\n    end\n  end\n  return res\n\
    end", end, "    return 0\nend", "    local sum = 0\n    for i = 1, #s do\n   \
    \     if (s:byte(i) > 64 and s:byte(i) < 91) then\n            sum = sum + s:byte(i)\n\
    \        end\n    end\n    return sum\nend", "  if type(s) == 'string' then\n\
    \    local sum = 0\n    for c in s:gmatch('%u') do\n      sum = sum + c:byte()\n\
    \    end\n    return sum\n  end\nend", "\tlocal sum = 0\n\tfor i = 1, #s do\n\t\
    \tif s:byte(i) >= 65 and s:byte(i) <= 90 then\n\t\t\tsum = sum + s:byte(i)\n\t\
    \tend\n\tend\n\treturn sum\nend", "  local sum = 0\n  for i = 1, #s do\n    local\
    \ c = s:sub(i, i)\n    if string.find(c, \"%l\") then\n      sum = sum + string.byte(c:upper())\n\
    \    end\n  end\n  return sum\nend", "  local sum = 0\n  for c in s:gmatch(\"\
    %u\") do\n    sum = sum + string.byte(c)\n  end\n  return sum\nend\nprint(\"*\
    \ Task\")\nassert(digitSum(\"\") == 0)\nassert(digitSum(\"abAB\") == 131)\nassert(digitSum(\"\
    abcCd\") == 67)\nassert(digitSum(\"helloE\") == 69)\nassert(digitSum(\"woArBld\"\
    ) == 131)\nassert(digitSum(\"aAaaaXa\") == 153)", "  --TODO: implement function\
    \ here\nend", "  local sum = 0\n  for c in s:gmatch('%l') do\n    local ascii\
    \ = string.byte(c:upper())\n    if ascii >= 65 and ascii <= 90 then\n      sum\
    \ = sum + ascii\n    end\n  end\n  return sum\nend", "  local sum = 0\n  for i\
    \ = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n      sum\
    \ = sum + c:byte()\n    end\n  end\n  return sum\nend", "  local sum = 0\n  for\
    \ i = 1, string.len(s) do\n    if string.byte(s, i) >= 65 and string.byte(s, i)\
    \ <= 90 then\n      sum = sum + string.byte(s, i)\n    end\n  end\n  return sum\n\
    end", "  local sum = 0\n  local asciiCode = 0\n  for i = 1, #s do\n    asciiCode\
    \ = string.byte(s, i)\n    if asciiCode >= 65 and asciiCode <= 90 then\n     \
    \ sum = sum + asciiCode\n    end\n  end\n  return sum\nend", "  return s:gsub('[^A-Z]',\
    \ ''):\n         reduce(function(x,y) return x + y:byte() end, 0)\nend", "   \
    \ local sum = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n       \
    \ local v = string.byte(c)\n        if v >= 65 and v <= 90 then\n            sum\
    \ = sum + v\n        end\n    end\n    return sum\nend\nreturn digitSum", "  \
    \ local sum = 0\n   for _, c in ipairs{string.byte(s, 1, #s)} do\n      if c >=\
    \ 65 and c <= 90 then\n         sum = sum + c\n      end\n   end\n   return sum\n\
    end", "    if s == '' then\n        return 0\n    end\n    local sum = 0\n   \
    \ for i=1, #s do\n        local digit = string.byte(s, i)\n        if digit >=\
    \ 65 and digit <= 90 then\n            sum = sum + digit\n        end\n    end\n\
    \    return sum\nend", "    s = s:upper()\n    local total = 0\n    for i = 1,\
    \ s:len() do\n        local char = s:sub(i, i)\n        if char >= 'A' and char\
    \ <= 'Z' then\n            total = total + string.byte(char)\n        end\n  \
    \  end\n    return total\nend", "    local sum = 0\n    for i = 1, #s do\n   \
    \     if s:byte(i) >= 65 and s:byte(i) <= 90 then\n            sum = sum + s:byte(i)\n\
    \        end\n    end\n    return sum\nend", "    --TODO\nend", "  local sum =\
    \ 0\n  for i = 1, s:len() do\n    local c = s:sub(i, i)\n    if c:match('%u')\
    \ then\n      sum = sum + string.byte(c)\n    end\n  end\n  return sum\nend",
  "  return s:gsub('[%l]', ''):byte(1, -1):sum()\nend", "    -- retorna a soma das\
    \ letras maiusculas\n    if type(s) ~= 'string' then return nil end\n    if s\
    \ == '' then return 0 end\n    local sum = 0\n    for c in s:gmatch'.' do\n  \
    \      if c:byte() >= 65 and c:byte() <= 90 then\n            sum = sum + c:byte()\n\
    \        end\n    end\n    return sum\nend", "  -- your code here\nend", "   local\
    \ sum = 0\n   for i = 1, #s do\n      local code = string.byte(s, i)\n      if\
    \ code >= 65 and code <= 90 then\n         sum = sum + code\n      end\n   end\n\
    \   return sum\nend", "  local sum = 0\n  for i = 1, string.len(s) do\n    local\
    \ ascii = string.byte(s, i)\n    if ascii >= 65 and ascii <= 90 then\n      sum\
    \ = sum + ascii\n    end\n  end\n  return sum\nend", "  local sum = 0\n  for i\
    \ = 1, #s do\n    local c = s:sub(i, i)\n    if c:upper() == c then\n      sum\
    \ = sum + string.byte(c)\n    end\n  end\n  return sum\nend", "    local sum =\
    \ 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + string.byte(c)\n        end\n    end\n    return\
    \ sum\nend", "    local sum = 0\n    for i = 1, #s do\n        if string.byte(s,\
    \ i) >= 65 and string.byte(s, i) <= 90 then\n            sum = sum + string.byte(s,\
    \ i)\n        end\n    end\n    return sum\nend", "    local sum = 0\n    for\
    \ i = 1, #s do\n        local letter = s:sub(i, i)\n        local ascii = string.byte(letter)\n\
    \        if ascii >= 65 and ascii <= 90 then\n            sum = sum + ascii\n\
    \        end\n    end\n    return sum\nend", "    local sum = 0\n    for c in\
    \ s:gmatch('.') do\n        local ascii = c:byte()\n        if ascii >= 65 and\
    \ ascii <= 90 then\n            sum = sum + ascii\n        end\n    end\n    return\
    \ sum\nend", "  local sum = 0\n  for i = 1, #s do\n    local ch = s:sub(i, i)\n\
    \    if ch:match('%u') then\n      sum = sum + ch:byte()\n    end\n  end\n  return\
    \ sum\nend", "  local sum = 0\n  for i = 1, #s do\n    if s:byte(i) >= 65 and\
    \ s:byte(i) <= 90 then\n      sum = sum + s:byte(i)\n    end\n  end\n  return\
    \ sum\nend", "  local sum = 0\n  for i = 1, string.len(s) do\n    local c = string.sub(s,\
    \ i, i)\n    if string.find(c, '[A-Z]') then\n      sum = sum + string.byte(c)\n\
    \    end\n  end\n  return sum\nend", "  local sum = 0\n  for i = 1, #s do\n  \
    \  local c = s:sub(i, i)\n    local x = c:byte()\n    if x >= 65 and x <= 90 then\n\
    \      sum = sum + x\n    end\n  end\n  return sum\nend", "\tlocal sum = 0\n\t\
    for i = 1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tlocal i = c:byte()\n\t\tif c\
    \ == c:upper() then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend",
  "  -- your code here\nend", "    local sum = 0\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match('%u') then\n            sum = sum + c:byte()\n\
    \        end\n    end\n    return sum\nend", "    -- (string) -> number\n    local\
    \ sum = 0\n    for c in s:gmatch('%a') do\n        sum = sum + c:byte()\n    end\n\
    \    return sum\nend", "  local x = 0\n  for i = 1, #s do\n    if s:byte(i) >=\
    \ 65 and s:byte(i) <= 90 then\n      x = x + s:byte(i)\n    end\n  end\n  return\
    \ x\nend", "  local sum = 0\n  for i = 1, #s do\n    if s:byte(i) >= 65 and s:byte(i)\
    \ <= 90 then\n      sum = sum + s:byte(i)\n    end\n  end\n  return sum\nend",
  "  local sum = 0\n  for char in s:gmatch('.') do\n    if char:match('%u') then\n\
    \      sum = sum + char:byte()\n    end\n  end\n  return sum\nend", "  -- the\
    \ sum of all upper characters\n  local sum = 0\n  -- convert all upper characters\
    \ to lower ones,\n  -- then calculate the sum\n  for i = 1, #s do\n    if s:sub(i,\
    \ i):match('%u') then\n      sum = sum + s:sub(i, i):lower():byte()\n    end\n\
    \  end\n  return sum\nend", "    local res = 0\n    for i = 1, #s do\n       \
    \ local code = string.byte(s, i)\n        if code >= 65 and code <= 90 then\n\
    \            res = res + code\n        end\n    end\n    return res\nend", "\t\
    local sum = 0\n\tfor i = 1, #s do\n\t\tlocal char = s:sub(i, i)\n\t\tlocal ascii\
    \ = string.byte(char)\n\t\tif ascii >= 65 and ascii <= 90 then\n\t\t\tsum = sum\
    \ + ascii\n\t\tend\n\tend\n\treturn sum\nend", "  local sum = 0\n  for c in s:gmatch('%a')\
    \ do\n    if c:match('%u') then\n      sum = sum + c:byte()\n    end\n  end\n\
    \  return sum\nend", "  local uppers = 0\n  for i = 1, string.len(s) do\n    local\
    \ char = string.sub(s, i, i)\n    if string.byte(char) >= 65 and string.byte(char)\
    \ <= 90 then\n      uppers = uppers + string.byte(char)\n    end\n  end\n  return\
    \ uppers\nend", "  -- body\nend", "    local sum = 0\n    for i = 1, #s do\n \
    \       local c = s:sub(i, i)\n        if c == c:upper() then\n            sum\
    \ = sum + string.byte(c)\n        end\n    end\n    return sum\nend", "  local\
    \ sum = 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:byte() >= string.byte('A')\
    \ and c:byte() <= string.byte('Z') then\n      sum = sum + c:byte()\n    end\n\
    \  end\n  return sum\nend", "  local sum = 0\n  for i = 1, #s do\n    local ch\
    \ = s:sub(i, i)\n    if ch:match('%u') then\n      sum = sum + string.byte(ch)\n\
    \    end\n  end\n  return sum\nend", "    local sum = 0\n    for c in s:gmatch(\"\
    %u\") do\n        sum = sum + string.byte(c)\n    end\n    return sum\nend", " \
    \ local sum = 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u')\
    \ then\n      sum = sum + string.byte(c)\n    end\n  end\n  return sum\nend",
  "  local function areAllCharsUpper(s)\n    local s = s:upper()\n    local ss = ''\n\
    \    for ch in s:gmatch(\"%u\") do\n      ss = ss .. ch\n    end\n    return ss\n\
    \  end\n  local sum = 0\n  for ch in areAllCharsUpper(s):gmatch(\".\") do\n  \
    \  sum = sum + ch:byte()\n  end\n  return sum\nend", "  local sum = 0\n  for c\
    \ in s:gmatch('%u') do\n    sum = sum + c:byte()\n  end\n  return sum\nend", end,
  "    local sum = 0\n    for i = 1, s:len() do\n        local c = s:sub(i, i)\n \
    \       if c:upper() == c then\n            sum = sum + c:byte()\n        end\n\
    \    end\n    return sum\nend\nprint(digitSum(''))\nprint(digitSum('abAB'))\n\
    print(digitSum('abcCd'))\nprint(digitSum('helloE'))\nprint(digitSum('woArBld'))\n\
    print(digitSum('aAaaaXa'))", "  local sum = 0\n  for c in s:gmatch('%u') do\n\
    \    sum = sum + c:byte()\n  end\n  return sum\nend", "\tlocal sum = 0\n\tfor\
    \ i = 1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tlocal cn = c:byte()\n\t\tif 65\
    \ <= cn and cn <= 90 then\n\t\t\tsum = sum + cn\n\t\tend\n\tend\n\treturn sum\n\
    end", "    local uppers = {}\n    for i = string.byte('A'), string.byte('Z') do\n\
    \        uppers[i] = true\n    end\n    local sum = 0\n    for c in s:gmatch('.')\
    \ do\n        if uppers[string.byte(c)] then\n            sum = sum + string.byte(c)\n\
    \        end\n    end\n    return sum\nend", "  -- your code here\nend", "   \
    \ local sum = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n       \
    \ if c == c:upper() then\n            sum = sum + c:byte()\n        end\n    end\n\
    \    return sum\nend", "    local sum = 0\n    for i = 1, #s do\n        local\
    \ code = string.byte(s, i)\n        if code >= 65 and code <= 90 then\n      \
    \      sum = sum + code\n        end\n    end\n    return sum\nend", "    local\
    \ res = 0\n    for i = 1, #s do\n        if s:byte(i) >= 65 and s:byte(i) <= 90\
    \ then\n            res = res + s:byte(i)\n        end\n    end\n    return res\n\
    end", "    local sum = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:match('%u') then\n            sum = sum + string.byte(c)\n     \
    \   end\n    end\n    return sum\nend", "\tlocal sum = 0\n\tfor i = 1, #s do\n\
    \t\tlocal c = s:sub(i, i)\n\t\tlocal n = c:byte()\n\t\tif n >= 65 and n <= 90\
    \ then\n\t\t\tsum = sum + n\n\t\tend\n\tend\n\treturn sum\nend", "\t-- Your code\
    \ here\nend", "  local sum = 0\n  for i = 1, #s do\n    local code = string.byte(s,\
    \ i)\n    if code >= 65 and code <= 90 then\n      sum = sum + code\n    end\n\
    \  end\n  return sum\nend", "\tlocal sum = 0\n\tlocal upper = 0\n\tfor i = 1,\
    \ #s do\n\t\tif string.find(s, s:sub(i, i), 1, true) == i then\n\t\t\tsum = sum\
    \ + string.byte(s:sub(i, i))\n\t\tend\n\tend\n\treturn sum\nend", "\tlocal sum\
    \ = 0\n\tif type(s) == 'string' then\n\t\tfor i = 1, string.len(s) do\n\t\t\t\
    if string.find(string.upper(s), string.sub(s, i, i)) then\n\t\t\t\tsum = sum +\
    \ string.byte(string.sub(s, i, i))\n\t\t\tend\n\t\tend\n\tend\n\treturn sum\n\
    end", "   local total = 0\n   for i = 1, #s do\n      local c = s:sub(i, i)\n\
    \      if c:match('%u') then\n         total = total + string.byte(c)\n      end\n\
    \   end\n   return total\nend", "    local t = 0\n    for i = 1, #s do\n     \
    \   local n = string.byte(s, i)\n        if n >= 65 and n <= 90 then\n       \
    \     t = t + n\n        end\n    end\n    return t\nend", "  local sum = 0\n\
    \  for i = 1, #s do\n    if s:byte(i) >= 65 and s:byte(i) <= 90 then\n      sum\
    \ = sum + s:byte(i)\n    end\n  end\n  return sum\nend", "  local result = 0\n\
    \  for i = 1, #s do\n    if string.byte(s, i) > 64 and string.byte(s, i) < 91\
    \ then\n      result = result + string.byte(s, i)\n    end\n  end\n  return result\n\
    end", "    local sum = 0\n    for i = 1, #s do\n        local code = string.byte(s,\
    \ i)\n        if code >= 65 and code <= 90 then\n            sum = sum + code\n\
    \        end\n    end\n    return sum\nend", "  if #s == 0 then return 0 end\n\
    \  local v = 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:byte()\
    \ >= 65 and c:byte() <= 90 then\n      v = v + c:byte()\n    end\n  end\n  return\
    \ v\nend", "  local n = 0\n  for i = 1, s:len() do\n    if s:sub(i, i):byte()\
    \ > 64 and s:sub(i, i):byte() < 91 then\n      n = n + s:sub(i, i):byte()\n  \
    \  end\n  end\n  return n\nend", "  local function addToSum(c)\n    if string.match(c,\
    \ '%u') then\n      sum = sum + string.byte(c)\n    end\n  end\n  local sum =\
    \ 0\n  string.gsub(s, '.', addToSum)\n  return sum\nend", "\tif s == nil then\
    \ return 0 end\n\tlocal upperSum = 0\n\tlocal lowerSum = 0\n\tlocal i = 1\n\t\
    while i <= #s do\n\t\tlocal c = s:sub(i,i)\n\t\tlocal a = string.byte(c)\n\t\t\
    if a >= 65 and a <= 90 then\n\t\t\tupperSum = upperSum + a\n\t\telseif a >= 97\
    \ and a <= 122 then\n\t\t\tlowerSum = lowerSum + a\n\t\tend\n\t\ti = i + 1\n\t\
    end\n\treturn upperSum - lowerSum\nend", "  local sum = 0\n  for i = 1, #s do\n\
    \    local ascii = string.byte(s, i)\n    if (ascii >= 65 and ascii <= 90) then\n\
    \      sum = sum + ascii\n    end\n  end\n  return sum\nend", "  local sum = 0\n\
    \  local ascii = 0\n  local s = s or ''\n  for i = 1, string.len(s) do\n    ascii\
    \ = string.byte(s, i)\n    if ascii > 64 and ascii < 91 then\n      sum = sum\
    \ + ascii\n    end\n  end\n  return sum\nend", "    local sum = 0\n    for i =\
    \ 1, #s do\n        local c = s:sub(i, i)\n        if c == c:upper() then\n  \
    \          sum = sum + string.byte(c)\n        end\n    end\n    return sum\n\
    end", "  local sum = 0\n  for c in s:gmatch('.') do\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend", "  local sum\
    \ = 0\n  local upper = false\n  local i = 1\n  while i <= string.len(s) do\n \
    \   if string.match(s[i], '[%u]') then\n      upper = true\n      sum = sum +\
    \ string.byte(s[i])\n    end\n    i = i + 1\n  end\n  if upper then\n    return\
    \ sum\n  else\n    return 0\n  end\nend", "  local sum = 0\n  for i = 1, #s do\n\
    \    local c = s:sub(i, i)\n    if c:byte() >= 0x41 and c:byte() <= 0x5A then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend", "    if s ==\
    \ nil or s == '' then\n        return 0\n    end\n    local sum = 0\n    for i\
    \ = 1, #s do\n        -- get letter\n        local letter = s:sub(i, i)\n    \
    \    -- get ASCII code\n        local code = string.byte(letter)\n        -- check\
    \ if in [65, 90] - upper letters ASCII codes\n        if code >= 65 and code <=\
    \ 90 then\n            sum = sum + code\n        end\n    end\n    return sum\n\
    end", "  return s:gsub('%l', ''):gsub('%L', function(c) return string.byte(c)\
    \ end):sum()\nend", "    local sum = 0\n    for i = 1, #s do\n        local c\
    \ = s:sub(i, i)\n        if c:upper() == c then\n            sum = sum + string.byte(c)\n\
    \        end\n    end\n    return sum\nend", "  if not s then return 0 end\n \
    \ local r = 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local u = c:upper()\n\
    \    if c == u then\n      r = r + c:byte()\n    end\n  end\n  return r\nend",
  "  local sum = 0\n  for i = 1, #s do\n    local str = string.sub(s, i, i)\n    local\
    \ num = string.byte(str)\n    if num > 64 and num < 91 then\n      sum = sum +\
    \ num\n    end\n  end\n  return sum\nend", "    if s == '' then\n        return\
    \ 0\n    end\n    local sum = 0\n    for c in s:gmatch('%u') do\n        sum =\
    \ sum + string.byte(c)\n    end\n    return sum\nend", "    local sum = 0\n  \
    \  for i = 1, #s do\n        if string.byte(s, i) >= 65 and string.byte(s, i)\
    \ <= 90 then\n            sum = sum + string.byte(s, i)\n        end\n    end\n\
    \    return sum\nend", "  local sum = 0\n  for i = 1, #s do\n    if s:byte(i)\
    \ >= 65 and s:byte(i) <= 90 then\n      sum = sum + s:byte(i)\n    end\n  end\n\
    \  return sum\nend", "  local result = 0\n  for i = 1, #s do\n    local char =\
    \ s:sub(i, i)\n    if char:find('%u') then\n      result = result + char:byte()\n\
    \    end\n  end\n  return result\nend", "  local res = 0\n  for i = 1, #s do\n\
    \    local c = s:sub(i, i)\n    if c:upper() == c then\n      res = res + c:byte()\n\
    \    end\n  end\n  return res\nend", "\tlocal sum = 0\n\tfor i = 1, #s do\n\t\t\
    local c = s:sub(i, i)\n\t\tif c:match('%u') then\n\t\t\tsum = sum + string.byte(c)\n\
    \t\tend\n\tend\n\treturn sum\nend", "  local sum = 0\n  for i = 1, string.len(s)\
    \ do\n    local code = string.byte(s, i)\n    if code >= 65 and code <= 90 then\n\
    \      sum = sum + code\n    end\n  end\n  return sum\nend", "   local sum = 0\n\
    \   for i = 1, #s do\n      local code = string.byte(s, i)\n      if code >= 65\
    \ and code <= 90 then\n         sum = sum + code\n      end\n   end\n   return\
    \ sum\nend", "    local sum = 0\n    local s = s or ''\n    for i = 1, #s do\n\
    \        local c = s:sub(i, i)\n        local v = string.byte(c)\n        if v\
    \ >= 65 and v <= 90 then\n            sum = sum + v\n        end\n    end\n  \
    \  return sum\nend", "    s = s:upper()\n    local sum = 0\n    for i = 1, #s\
    \ do\n        if s:byte(i) >= 65 and s:byte(i) <= 90 then\n            sum = sum\
    \ + s:byte(i)\n        end\n    end\n    return sum\nend", end, "  local sum =\
    \ 0\n  for c in s:gmatch('%a') do\n    if c:match('%u') then\n      sum = sum\
    \ + c:byte()\n    end\n  end\n  return sum\nend", "  local res = 0\n  for i =\
    \ 1, #s do\n    local char = s:sub(i, i)\n    local code = char:byte()\n    if\
    \ code >= string.byte('A') and code <= string.byte('Z') then\n      res = res\
    \ + code\n    end\n  end\n  return res\nend", "  local sum = 0\n  for i = 1, #s\
    \ do\n    local code = string.byte(s, i)\n    if code >= 65 and code <= 90 then\
    \ sum = sum + code end\n  end\n  return sum\nend", "    local s = string.upper(s)\n\
    \    local sum = 0\n    for i = 1, string.len(s) do\n        sum = sum + string.byte(s,\
    \ i)\n    end\n    return sum\nend", "  local n = 0\n  for i = 1, #s do\n    local\
    \ char = s:sub(i, i)\n    local num = string.byte(char)\n    if num >= 65 and\
    \ num <= 90 then\n      n = n + num\n    end\n  end\n  return n\nend", "  local\
    \ sum = 0\n  local upperChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  local upperCharsAscii\
    \ = {\n    ['A'] = 65, ['B'] = 66, ['C'] = 67, ['D'] = 68, ['E'] = 69, ['F'] =\
    \ 70, ['G'] = 71, ['H'] = 72, ['I'] = 73, ['J'] = 74, ['K'] = 75, ['L'] = 76,\
    \ ['M'] = 77, ['N'] = 78, ['O'] = 79, ['P'] = 80, ['Q'] = 81, ['R'] = 82, ['S']\
    \ = 83, ['T'] = 84, ['U'] = 85, ['V'] = 86, ['W'] = 87, ['X'] = 88, ['Y'] = 89,\
    \ ['Z'] = 90\n  }\n  for i = 1, #s do\n    local character = s:sub(i, i)\n   \
    \ if upperChars:find(character) then\n      sum = sum + upperCharsAscii[character]\n\
    \    end\n  end\n  return sum\nend", "  local sum = 0\n  for i = 1, #s do\n  \
    \  if string.byte(s, i) >= 65 and string.byte(s, i) <= 90 then\n      sum = sum\
    \ + string.byte(s, i)\n    end\n  end\n  return sum\nend", "    local res = 0\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:find('%u')\
    \ then\n            res = res + string.byte(c)\n        end\n    end\n    return\
    \ res\nend", "    s = s:upper()\n    local sum = 0\n    for i = 1, #s do\n   \
    \     if s:byte(i) >= 65 and s:byte(i) <= 90 then\n            sum = sum + s:byte(i)\n\
    \        end\n    end\n    return sum\nend", "\tlocal sum = 0\n\tfor i = 1, #s\
    \ do\n\t\tlocal ascii = string.byte(s, i)\n\t\tif ascii >= 65 and ascii <= 90\
    \ then\n\t\t\tsum = sum + ascii\n\t\tend\n\tend\n\treturn sum\nend", "  return\
    \ 0\nend", "    s = s:gsub('[%l]', '')\n    local sum = 0\n    for i = 1, #s do\n\
    \        sum = sum + s:byte(i)\n    end\n    return sum\nend", "  -- your code\
    \ here\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

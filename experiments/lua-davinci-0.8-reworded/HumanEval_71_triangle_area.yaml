name: HumanEval_71_triangle_area
language: lua
prompt: "-- Given the lengths of the three sides of a triangle. Return the area of\n\
  -- the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n-- Otherwise return -1\n-- Three sides make a valid triangle when the sum of\
  \ any two sides is greater \n-- than the third side.\n-- Example:\n-- >>> triangle_area(3,\
  \ 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\nlocal function triangle_area(a,\
  \ b, c)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
  \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
  \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
  \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
  \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
  \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    -- code here\nend", "    -- check if the three sides form a valid\
    \ triangle\n    if a + b > c and a + c > b and b + c > a then\n        -- calculate\
    \ the area of the triangle\n        local p = (a + b + c) / 2\n        local area\
    \ = math.sqrt(p * (p - a) * (p - b) * (p - c))\n        -- return the area rounded\
    \ to 2 decimal points\n        return string.format(\"%.2f\", area)\n    else\n\
    \        return -1\n    end\nend", "    -- TODO: Implement the function\n    if\
    \ a + b > c and a + c > b and b + c > a then\n        return (a + b + c) / 2\n\
    \    else\n        return -1\n    end\nend", "  local p = (a + b + c) / 2\n  if\
    \ p - a < 0 or p - b < 0 or p - c < 0 then\n    return -1\n  end\n  return math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\nend", "    local s = (a + b + c) / 2\n    local\
    \ area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n    if a + b <= c or a +\
    \ c <= b or b + c <= a then\n        return -1\n    else\n        return area\n\
    \    end\nend", "    -- Your code here\n    return -1.0\nend", "    if a + b >\
    \ c and a + c > b and b + c > a then\n        local s = (a + b + c) / 2\n    \
    \    return math.sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend", "  if a + b > c and a + c > b and b + c > a then\n    local\
    \ s = (a + b + c) / 2\n    return (s * (s - a) * (s - b) * (s - c)) ^ 0.5\n  else\n\
    \    return -1\n  end\nend", "    local p = (a + b + c) / 2\n    local S = math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n    if S > 0 then\n        return math.floor(S\
    \ * 100 + 0.5) / 100\n    else\n        return -1\n    end\nend", "  -- Here is\
    \ the function definition\n  return 0\nend", "   local s = (a + b + c) / 2\n \
    \  local area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n   if area > 0 then\
    \ return area\n   else return -1 end\nend", "    return a+b > c and b+c > a and\
    \ c+a > b and math.sqrt( (a+b+c)*(a+b-c)*(b+c-a)*(c+a-b) ) / 4 or -1\nend", " \
    \   local s = (a + b + c) / 2\n    if (a + b > c) and (a + c > b) and (b + c >\
    \ a) then\n        return math.sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n\
    \        return -1\n    end\nend", "    local area = -1\n    if a + b > c and\
    \ a + c > b and b + c > a then\n        local s = (a + b + c) / 2\n        area\
    \ = math.sqrt(s * (s - a) * (s - b) * (s - c))\n    end\n    return area\nend",
  "  local sides = {a, b, c}\n  local biggest, biggest_index = math.max(a, b, c)\n\
    \  local sides_sum = a + b + c\n  local biggest_sum = sides_sum - biggest\n  if\
    \ biggest_sum <= biggest then\n    return -1\n  end\n  local s = sides_sum / 2\n\
    \  local area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n  return math.floor(area\
    \ * 100 + 0.5) / 100\nend", "  return (a + b > c and b + c > a and c + a > b)\
    \ and a + b + c or -1\nend", "    -- the area of a triangle is: \n    -- sqrt(p(p-a)(p-b)(p-c))\n\
    \    -- where p is the perimeter/2\n    local p = (a + b + c) / 2\n    if (p -\
    \ a) >= 0 and (p - b) >= 0 and (p - c) >= 0 then\n        local area = math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n        return math.floor(area * 100 + 0.5)\
    \ / 100\n    else\n        return -1\n    end\nend", "    -- compute area of the\
    \ triangle using Heron's formula\n    -- https://en.wikipedia.org/wiki/Heron%27s_formula\n\
    \    local s = (a + b + c) / 2\n    local area = math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c))\n    if area > 0 then\n        return string.format(\"%.2f\",\
    \ area)\n    else\n        return -1\n    end\nend", "    if a < b + c and b <\
    \ a + c and c < a + b then\n        local p = (a + b + c) / 2\n        return\
    \ math.sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return -1\n  \
    \  end\nend", "    if a + b > c and a + c > b and b + c > a then\n        -- Determine\
    \ the semi-perimeter.\n        local s = (a + b + c) / 2\n        -- Use Heron's\
    \ formula.\n        return math.sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n\
    \        return -1\n    end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

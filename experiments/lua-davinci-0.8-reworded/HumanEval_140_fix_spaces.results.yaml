name: HumanEval_140_fix_spaces
language: lua
results:
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \t-- replace all spaces with underscores\n\ttext = text:gsub(' ', '_')\n\t-- replace\
    \ all consecutive spaces with '-'\n\treturn text:gsub('_+', '-')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpul0_ejz7.lua:23:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpul0_ejz7.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \  if not text then return end\n  text = text:gsub('^%s+', '')\n  if text:match('%s%s')\
    \ then\n    text = text:gsub('%s+', '-')\n  else\n    text = text:gsub('%s', '_')\n\
    \  end\n  return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4an63dbh.lua:28:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow-Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmp4an63dbh.lua:28: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \treturn text:gsub('^%s*',''):gsub('%s+', '_'):gsub('%-%s*', '_'):gsub('_+', function(s)\n\
    \t\treturn (#s > 2) and '-' or '_'\n\tend)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg4w057gj.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpg4w057gj.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \  local result = text:gsub('  ', '-')\n  result = result:gsub(' ', '_')\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyqkhlci0.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpyqkhlci0.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \    local spaces = ''\n    local fix_spaces = text:gsub(' ', function(c)\n  \
    \      if spaces == '  ' then\n            spaces = ''\n            return '-'\n\
    \        else\n            spaces = spaces .. c\n            return '_'\n    \
    \    end\n    end)\n    return fix_spaces\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8kynwibj.lua:31:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_-Dirty__Fellow\"\
    \nstack traceback:\n\t/tmp/tmp8kynwibj.lua:31: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \    local res = string.gsub(text, '  +', '-')\n    res = string.gsub(res, ' ',\
    \ '_')\n    return res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0a681pru.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmp0a681pru.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \    return (text:gsub('^%s+', ''):gsub('%s+', '_'):gsub('^_+', ''):gsub('%s+',\
    \ '-'):gsub('\\n', ' '))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzpjal7r2.lua:21:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpzpjal7r2.lua:21: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \    return text:gsub('%s', function(s) return s == ' ' and '_' or '-' end)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkdm6rwl8.lua:22:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpkdm6rwl8.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \treturn (string.gsub(text, '%s+', ' '):gsub('%s+', '_'):gsub('-', '_'))\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpypck2k3w.lua:21:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpypck2k3w.lua:21: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \    local pattern = '%s+'\n    local replace = '-'\n    if text:match('%s') then\n\
    \        if text:match('^%s+') then\n            text = text:gsub('^%s+', '')\n\
    \        end\n        if text:match('%s+$') then\n            text = text:gsub('%s+$',\
    \ '')\n        end\n        if not text:match('%s+') then\n            text =\
    \ text:gsub('%s', '_')\n        else\n            text = text:gsub(pattern, replace)\n\
    \        end\n    end\n    return text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6ul7fuwg.lua:35:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif\"\nstack traceback:\n\t\
    /tmp/tmp6ul7fuwg.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \treturn string.gsub(text, \"([ ]+)\", function(s)\n\t\treturn string.len(s) >\
    \ 2 and \"_\" or \"-\"\n\tend)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdcxun2uc.lua:22:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpdcxun2uc.lua:22: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \treturn text:gsub('%s', '_'):gsub('%s%s', '-'):gsub('^%s', '')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpytdpfh5p.lua:22:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpytdpfh5p.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \tif type(text) ~= 'string' then\n\t\terror(\"Error: fix_spaces requires string\
    \ argument\")\n\tend\n\treturn text:gsub('%s%s+', '-'):gsub('%s', '_')\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7twi1oa7.lua:24:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmp7twi1oa7.lua:24: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, '  +', '-')\n              :gsub(' ', '_')\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy28v92x8.lua:22:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpy28v92x8.lua:22: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local out = string.gsub(text,\
    \ '^%s*', '')\n  out = string.gsub(out, '%s*$', '')\n  out = string.gsub(out,\
    \ '%s+', '_')\n  out = string.gsub(out, '_+', '-')\n  return out\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp96adwxv8.lua:27:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif\"\nstack traceback:\n\t\
    /tmp/tmp96adwxv8.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \    local underscore = '_'\n    local dash = '-'\n    local space = ' '\n   \
    \ local new_text = ''\n    local count = 0\n    for i = 1, #text do\n        local\
    \ current_char = text:sub(i, i)\n        if i == 1 and current_char == space then\n\
    \            -- Keep the starting space if it's the only space\n            if\
    \ #text == 1 then\n                new_text = current_char\n            end\n\
    \        elseif current_char == space then\n            count = count + 1\n  \
    \          if count > 2 then\n                -- Replace with dash if there are\
    \ more than 2 consecutive spaces\n                new_text = new_text .. dash\n\
    \            else\n                -- Replace with underscore otherwise\n    \
    \            new_text = new_text .. underscore\n            end\n        else\n\
    \            count = 0\n            new_text = new_text .. current_char\n    \
    \    end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn0rf_56u.lua:48:\
    \ expected: \"Exa-mple\"\nactual: \"Exa__-mple\"\nstack traceback:\n\t/tmp/tmpn0rf_56u.lua:48:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \treturn gsub(gsub(text, \" \", \"_\"), \"  +\", \"-\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi8pkoid9.lua:13:\
    \ attempt to call a nil value (global 'gsub')\nstack traceback:\n\t/tmp/tmpi8pkoid9.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpi8pkoid9.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \    text = text:gsub(' ', '_')\n    text = text:gsub('_+', '-')\n    return text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplwt1l18n.lua:22:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmplwt1l18n.lua:22: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \  return (string.gsub(text, \"^ +\", \"\")\n          :gsub(\" +\", \"_\")\n\
    \          :gsub(\"(%s%s+)\", \"-\"))\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbp5bl98b.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpbp5bl98b.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
    \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
    -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n\
    \ttext = text:gsub('%s+', '_')\n\ttext = text:gsub('__+', '-')\n\treturn text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgm16n80y.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpgm16n80y.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception

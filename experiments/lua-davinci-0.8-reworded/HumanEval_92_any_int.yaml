name: HumanEval_92_any_int
language: lua
prompt: "-- Create a function that takes 3 numbers.\n-- Returns true if one of the\
  \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
  -- Returns false in any other cases.\n-- Examples\n-- >>> any_int(5, 2, 7)\n-- true\n\
  -- >>> any_int(3, 2, 2)\n-- false\n-- >>> any_int(3, -2, 1)\n-- true\n-- >>> any_int(3.6,\
  \ -2.2, 2)\n-- false\nlocal function any_int(x, y, z)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = any_int\n\
  \    lu.assertEquals(candidate(2, 3, 1), true)\n    lu.assertEquals(candidate(2.5,\
  \ 2, 3), false)\n    lu.assertEquals(candidate(1.5, 5, 3.5), false)\n    lu.assertEquals(candidate(2,\
  \ 6, 2), false)\n    lu.assertEquals(candidate(4, 2, 2), true)\n    lu.assertEquals(candidate(2.2,\
  \ 2.2, 2.2), false)\n    lu.assertEquals(candidate(-4, 6, 2), true)\n    lu.assertEquals(candidate(2,\
  \ 1, 1), true)\n    lu.assertEquals(candidate(3, 4, 7), true)\n    lu.assertEquals(candidate(3.0,\
  \ 4, 7), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    return math.floor(x) == x and math.floor(y) == y and math.floor(z)\
    \ == z and x + y == z or\n        math.floor(x) == x and math.floor(y) == y and\
    \ math.floor(z) == z and x + z == y or\n        math.floor(x) == x and math.floor(y)\
    \ == y and math.floor(z) == z and y + z == x\nend", "  return math.floor(x) ==\
    \ x and math.floor(y) == y and math.floor(z) == z and (x + y == z or x + z ==\
    \ y or y + z == x)\nend", "  return ((x + y == z) or (x + z == y) or (y + z ==\
    \ x)) and (x % 1 == 0) and (y % 1 == 0) and (z % 1 == 0)\nend", "    local sum\
    \ = y + z\n    return math.tointeger(x) and math.tointeger(y) and math.tointeger(z)\
    \ and (x == sum or y == sum or z == sum)\nend", "  return true\nend", "  if type(x)\
    \ == \"number\" and type(y) == \"number\" and type(z) == \"number\" then\n   \
    \ return (x == y + z) or (y == x + z) or (z == x + y)\n  else\n    return false\n\
    \  end\nend", "    local x_is_int = is_int(x)\n    local y_is_int = is_int(y)\n\
    \    local z_is_int = is_int(z)\n    local x_plus_y = x + y\n    local x_plus_z\
    \ = x + z\n    local y_plus_z = y + z\n    if (x_is_int and y_is_int and z_is_int)\
    \ then\n        if (x_plus_y == z or x_plus_z == y or y_plus_z == x) then\n  \
    \          return true\n        else\n            return false\n        end\n\
    \    else\n        return false\n    end\nend", "  local ints = {}\n  if math.floor(x)\
    \ == x then ints[#ints+1] = x end\n  if math.floor(y) == y then ints[#ints+1]\
    \ = y end\n  if math.floor(z) == z then ints[#ints+1] = z end\n  if #ints < 3\
    \ then return false end\n  if ints[1] == ints[2] + ints[3] then return true end\n\
    \  if ints[2] == ints[1] + ints[3] then return true end\n  if ints[3] == ints[1]\
    \ + ints[2] then return true end\n  return false\nend", "  if math.floor(x) ==\
    \ x and math.floor(y) == y and math.floor(z) == z then\n    return (x + y == z)\
    \ or (x + z == y) or (y + z == x)\n  else\n    return false\n  end\nend", "  \
    \  return math.floor(x) == x and math.floor(y) == y and math.floor(z) == z and\
    \ (x + y == z or x + z == y or y + z == x)\nend", "  --your code here\nend", " \
    \ return true\nend", "  if type(x) == \"number\" and type(y) == \"number\" and\
    \ type(z) == \"number\" then\n    if x == math.floor(x) and y == math.floor(y)\
    \ and z == math.floor(z) then\n      if (x + y == z) or (x + z == y) or (y + z\
    \ == x) then\n        return true\n      else\n        return false\n      end\n\
    \    else\n      return false\n    end\n  else\n    return false\n  end\nend",
  "    if (x + y == z) or (x + z == y) or (y + z == x) then\n        return true\n\
    \    else\n        return false\n    end\nend", "    return (x + y == z) or (x\
    \ + z == y) or (y + z == x)\nend", "  if (x == (y + z)) and (x % 1 == 0) then\n\
    \    return true\n  elseif (y == (x + z)) and (y % 1 == 0) then\n    return true\n\
    \  elseif (z == (x + y)) and (z % 1 == 0) then\n    return true\n  else\n    return\
    \ false\n  end\nend", "  return ((x == y + z) or (y == x + z) or (z == x + y))\
    \ and (x == math.floor(x)) and (y == math.floor(y)) and (z == math.floor(z))\n\
    end", "    return not((x % 1) + (y % 1) + (z % 1)) and (x + y == z or x + z ==\
    \ y or y + z == x)\nend", "    return (x + y == z) or (x + z == y) or (y + z ==\
    \ x)\nend", "\treturn (x + y == z or x + z == y or y + z == x) and (x % 1 == 0\
    \ and y % 1 == 0 and z % 1 == 0)\nend", "  return false\nend", "    return (x\
    \ + y == z) or (x + z == y) or (y + z == x)\nend", "\tif (x + y == z) or (x +\
    \ z == y) or (y + z == x) then\n\t\treturn true\n\telse\n\t\treturn false\n\t\
    end\nend", "    if x + y == z or x + z == y or y + z == x then\n        return\
    \ true\n    else\n        return false\n    end\nend", "    return isinteger(x)\
    \ and isinteger(y) and isinteger(z) and\n            (x == y + z or y == x + z\
    \ or z == x + y)\nend", "  return false\nend", "  -- YOUR SOLUTION HERE\nend",
  "  local sum = x + y + z\n  if sum % 2 == 0 and sum % 3 == 0 then\n    return true\n\
    \  else\n    return false\n  end\nend", "    local sum = x + y + z\n    return\
    \ (x == sum - y and x == sum - z) or (y == sum - x and y == sum - z) or (z ==\
    \ sum - x and z == sum - y)\nend", "    return (math.floor(x) + math.floor(y)\
    \ == math.floor(z)) or (math.floor(x) + math.floor(z) == math.floor(y)) or (math.floor(y)\
    \ + math.floor(z) == math.floor(x))\nend", "    if ((x + y == z) or (x + z ==\
    \ y) or (y + z == x)) and (is_int(x) and is_int(y) and is_int(z)) then\n     \
    \   return true\n    else\n        return false\n    end\nend", "  if not math.type(x)\
    \ or not math.type(y) or not math.type(z) then\n    return false\n  end\n  return\
    \ x + y == z or x + z == y or y + z == x\nend", "    -- you can add extra code\
    \ here\nend", "\treturn (x == y + z or y == x + z or z == x + y) and x % 1 ==\
    \ 0 and y % 1 == 0 and z % 1 == 0\nend", "  return x == y + z or y == x + z or\
    \ z == x + y\nend", "  return (x + y == z or x + z == y or y + z == x) and (x\
    \ % 1 == 0 and y % 1 == 0 and z % 1 == 0)\nend", "    return x == y + z or y ==\
    \ x + z or z == x + y\nend", "    local x1 = x + y\n    local x2 = x + z\n   \
    \ local x3 = y + z\n    if x1 == z or x2 == y or x3 == x then\n        return\
    \ true\n    else\n        return false\n    end\nend", "    if (x + y == z) or\
    \ (x + z == y) or (y + z == x) then\n        return true\n    else\n        return\
    \ false\n    end\nend", "    return x%1 == 0 and y%1 == 0 and z%1 == 0 and\n \
    \       (x == y + z or y == x + z or z == x + y)\nend", "    return x == y + z\
    \ or y == x + z or z == x + y\nend", "    local max = math.max(x, y, z)\n    local\
    \ sum = x + y + z - max\n    if type(x) == \"number\" and type(y) == \"number\"\
    \ and type(z) == \"number\" then\n        if x - math.floor(x) ~= 0 or y - math.floor(y)\
    \ ~= 0 or z - math.floor(z) ~= 0 then\n            return false\n        elseif\
    \ max == sum then\n            return true\n        else\n            return false\n\
    \        end\n    else\n        return false\n    end\nend", "  local temp = {x,\
    \ y, z}\n  table.sort(temp)\n  if (temp[1] == temp[2] + temp[3]) and (math.floor(temp[1])\
    \ == temp[1]) and (math.floor(temp[2]) == temp[2]) and (math.floor(temp[3]) ==\
    \ temp[3]) then\n    return true\n  else\n    return false\n  end\nend", "  return\
    \ (x + y == z) or (x + z == y) or (y + z == x)\nend", "  if math.type(x) == \"\
    integer\" and math.type(y) == \"integer\" and math.type(z) == \"integer\" then\n\
    \    if x + y == z or x + z == y or y + z == x then\n      return true\n    else\n\
    \      return false\n    end\n  else\n    return false\n  end\nend", "\treturn\
    \ false\nend", "  local sum = x + y + z\n  if sum - x == x and (sum - x) % 1 ==\
    \ 0 then\n    return true\n  elseif sum - y == y and (sum - y) % 1 == 0 then\n\
    \    return true\n  elseif sum - z == z and (sum - z) % 1 == 0 then\n    return\
    \ true\n  else\n    return false\n  end\nend", "  -- if any of the variables have\
    \ a decimal point\n  if x % 1 ~= 0 or y % 1 ~= 0 or z % 1 ~= 0 then\n    return\
    \ false\n  end\n  if x + y == z or x + z == y or y + z == x then\n    return true\n\
    \  end\n  return false\nend", end, "  return (x + y == z or x + z == y or y +\
    \ z == x) and x == math.floor(x) and y == math.floor(y) and z == math.floor(z)\n\
    end", "  return ((x == y + z) or (y == x + z) or (z == x + y)) and (x % 1 == 0)\
    \ and (y % 1 == 0) and (z % 1 == 0)\nend", "  if (x % 1 ~= 0) or (y % 1 ~= 0)\
    \ or (z % 1 ~= 0) then\n    return false\n  end\n  if (x == y + z) or (y == x\
    \ + z) or (z == x + y) then\n    return true\n  end\n  return false\nend", " \
    \   if x == y + z then\n        return true\n    elseif y == x + z then\n    \
    \    return true\n    elseif z == x + y then\n        return true\n    else\n\
    \        return false\n    end\nend", "  if x == y + z then\n    return true\n\
    \  elseif y == x + z then\n    return true\n  elseif z == x + y then\n    return\
    \ true\n  else\n    return false\n  end\nend", "  return type(x) == \"number\"\
    \ and type(y) == \"number\" and type(z) == \"number\" and\n    (x == y + z or\
    \ y == x + z or z == x + y) and x % 1 == 0 and y % 1 == 0 and z % 1 == 0\nend",
  "  if type(x) ~= \"number\" or type(y) ~= \"number\" or type(z) ~= \"number\" then\n\
    \    return false\n  end\n  if type(x) == \"number\" and type(y) == \"number\"\
    \ and type(z) == \"number\" then\n    return x == y + z or y == x + z or z ==\
    \ x + y\n  end\nend", "    if type(x) == \"number\" and type(y) == \"number\"\
    \ and type(z) == \"number\" then\n        if x == y + z or y == x + z or z ==\
    \ x + y then\n            return true\n        else\n            return false\n\
    \        end\n    else\n        return false\n    end\nend", "  if x + y == z\
    \ then\n    return true\n  elseif x + z == y then\n    return true\n  elseif y\
    \ + z == x then\n    return true\n  elseif z + y == x then\n    return true\n\
    \  elseif x + y == z then\n    return true\n  elseif x + z == y then\n    return\
    \ true\n  elseif y + z == x then\n    return true\n  elseif z + y == x then\n\
    \    return true\n  else\n    return false\n  end\nend", "  if x == y + z or y\
    \ == x + z or z == x + y then\n    return true\n  else\n    return false\n  end\n\
    end", "    local sum = x + y + z\n    return (x == sum or y == sum or z == sum)\
    \ and\n        (math.floor(x) == x and math.floor(y) == y and math.floor(z) ==\
    \ z)\nend", "  -- your code here\nend", "  -- Write your code here\nend", "  --\
    \ Your code here\nend", "    if (x % 1 == 0) and (y % 1 == 0) and (z % 1 == 0)\
    \ then\n        if (x == y + z) or (y == x + z) or (z == x + y) then\n       \
    \     return true\n        else\n            return false\n        end\n    else\n\
    \        return false\n    end\nend", "  -- TODO: your code goes here\nend", " \
    \   -- TODO: Implement the function\nend", "\treturn (x + y == z) or (x + z ==\
    \ y) or (y + z == x)\nend", end, "    -- TODO\nend", "    if (x % 1 == 0) and\
    \ (y % 1 == 0) and (z % 1 == 0) then\n        if (x + y == z) or (x + z == y)\
    \ or (y + z == x) then\n            return true\n        else\n            return\
    \ false\n        end\n    else\n        return false\n    end\nend", "    return\
    \ x % 1 == 0 and y % 1 == 0 and z % 1 == 0 and ((x + y == z) or (x + z == y) or\
    \ (y + z == x))\nend", "  return (x == y + z) or (y == x + z) or (z == x + y)\n\
    end", "  return (x + y == z or x + z == y or y + z == x) and type(x) == \"number\"\
    \ and type(y) == \"number\" and type(z) == \"number\"\nend", "    if (x + y ==\
    \ z or x + z == y or y + z == x) and (x % 1 == 0 and y % 1 == 0 and z % 1 == 0)\
    \ then\n        return true\n    else\n        return false\n    end\nend", " \
    \ local s = {x, y, z}\n  local sum = 0\n  for _, v in ipairs(s) do\n    sum =\
    \ sum + v\n  end\n  for _, v in ipairs(s) do\n    if sum - v == v then\n     \
    \ return true\n    end\n  end\n  return false\nend", "    if (x - y == z) or (x\
    \ - z == y) or (y - x == z) or (y - z == x) or (z - x == y) or (z - y == x) then\n\
    \        return true\n    else\n        return false\n    end\nend", "\treturn\
    \ (x % 1 == 0 and y % 1 == 0 and z % 1 == 0) and ((x + y == z) or (x + z == y)\
    \ or (y + z == x))\nend", "\tif x == y + z or y == x + z or z == x + y then\n\t\
    \treturn true\n\telse\n\t\treturn false\n\tend\nend\nprint(any_int(5, 2, 7))\n\
    print(any_int(3, 2, 2))\nprint(any_int(3, -2, 1))\nprint(any_int(3.6, -2.2, 2))",
  "\tif (x + y == z) or (x + z == y) or (y + z == x) then\n\t\treturn true\n\telse\n\
    \t\treturn false\n\tend\nend", "    return math.floor(x) == x and math.floor(y)\
    \ == y and math.floor(z) == z and ((x + y == z) or (x + z == y) or (y + z == x))\n\
    end", "  if (math.floor(x) ~= x) or (math.floor(y) ~= y) or (math.floor(z) ~=\
    \ z) then\n    return false\n  end\n  return ((x + y == z) or (x + z == y) or\
    \ (y + z == x))\nend", "  -- TODO: implement this\nend", "  return false\nend",
  "    if (x + y == z) and (isint(x) and isint(y) and isint(z)) then\n        return\
    \ true\n    elseif (x + z == y) and (isint(x) and isint(y) and isint(z)) then\n\
    \        return true\n    elseif (y + z == x) and (isint(x) and isint(y) and isint(z))\
    \ then\n        return true\n    else\n        return false\n    end\nend", " \
    \ local a = x + y\n  local b = x + z\n  local c = y + z\n  return (a == z) or\
    \ (b == y) or (c == x)\nend", "    if type(x) ~= \"number\" or type(y) ~= \"number\"\
    \ or type(z) ~= \"number\" then\n        return false\n    end\n    if math.floor(x)\
    \ ~= x or math.floor(y) ~= y or math.floor(z) ~= z then\n        return false\n\
    \    end\n    if (x + y == z) or (x + z == y) or (y + z == x) then\n        return\
    \ true\n    end\n    return false\nend", "  -- TODO\nend", "    if not (x % 1\
    \ == 0 and y % 1 == 0 and z % 1 == 0) then\n        return false\n    end\n  \
    \  if x == y + z or y == x + z or z == x + y then\n        return true\n    end\n\
    \    return false\nend", "    --\nend", "    local function is_int(x)\n      \
    \  return x % 1 == 0\n    end\n    return x + y == z or x + z == y or y + z ==\
    \ x and is_int(x) and is_int(y) and is_int(z)\nend\nassert(any_int(5, 2, 7))\n\
    assert(any_int(3, -2, 1))\nassert(not any_int(3, 2, 2))\nassert(not any_int(3.6,\
    \ -2.2, 2))", "    if isinteger(x) and isinteger(y) and isinteger(z) then\n  \
    \      if x == y + z or y == x + z or z == x + y then\n            return true\n\
    \        else\n            return false\n        end\n    else\n        return\
    \ false\n    end\nend", "  local sum = x + y + z\n  return sum % 3 == 0\nend",
  "  return true or false\nend", "    if (x + y == z) or (x + z == y) or (y + z ==\
    \ x) then\n        return true\n    else\n        return false\n    end\nend",
  "  -- your code\nend", "  if math.floor(x) ~= x or math.floor(y) ~= y or math.floor(z)\
    \ ~= z then\n    return false\n  end\n  return x == y + z or y == x + z or z ==\
    \ x + y\nend\nassert(any_int(5, 2, 7))\nassert(not any_int(3, 2, 2))\nassert(any_int(3,\
    \ -2, 1))\nassert(not any_int(3.6, -2.2, 2))", "    if not is_int(x) or not is_int(y)\
    \ or not is_int(z) then\n        return false\n    end\n    return x == y + z\
    \ or y == x + z or z == x + y\nend\nexports.any_int = any_int", "  -- function\
    \ code here\nend", "  return x % 1 == 0 and y % 1 == 0 and z % 1 == 0 and (x +\
    \ y == z or x + z == y or y + z == x)\nend", "    local a = x + y\n    local b\
    \ = x + z\n    local c = y + z\n    return (a == x or a == y or a == z) and x\
    \ == math.floor(x) and y == math.floor(y) and z == math.floor(z)\nend", "  return\
    \ any_equal(x + y, z) or any_equal(x + z, y) or any_equal(y + z, x)\nend", " \
    \ return (x + y == z or x + z == y or y + z == x) and x % 1 == 0 and y % 1 ==\
    \ 0 and z % 1 == 0\nend", "\tif (x + y == z) or (x + z == y) or (y + z == x) then\n\
    \t\treturn true\n\telse\n\t\treturn false\n\tend\nend", end, "    return false\n\
    end", "    if x + y == z or x + z == y or y + z == x then\n        return true\n\
    \    else\n        return false\n    end\nend", "    -- TODO\nend", "  -- your\
    \ code here\nend", "    if (x == y + z or y == x + z or z == x + y) and (type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number') then\n        return\
    \ true\n    else\n        return false\n    end\nend", "    return x == y + z\
    \ or y == x + z or z == x + y\nend", "  local x_p, y_p, z_p = math.floor(x) ==\
    \ x, math.floor(y) == y, math.floor(z) == z\n  return (x_p and y_p and z_p) and\
    \ ((x == y + z) or (y == x + z) or (z == x + y))\nend", "  return (x + y == z\
    \ or x + z == y or y + z == x) and (x == math.floor(x) and y == math.floor(y)\
    \ and z == math.floor(z))\nend", "  local result = false\n  if (x + y == z) or\
    \ (x + z == y) or (y + z == x) then\n    result = true\n  end\n  return result\n\
    end", "\treturn ((x == y + z) or (y == x + z) or (z == x + y)) and (x % 1 == 0)\
    \ and (y % 1 == 0) and (z % 1 == 0)\nend", "\tif x == y + z or y == x + z or z\
    \ == x + y then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend", "   \
    \ if x == y + z or y == x + z or z == x + y then\n        return true\n    else\n\
    \        return false\n    end\nend", "    local is_integer = function(value)\n\
    \        return math.floor(value) == value\n    end\n    if is_integer(x) and\
    \ is_integer(y) and is_integer(z) then\n        if x == y + z or y == x + z or\
    \ z == x + y then\n            return true\n        end\n    end\n    return false\n\
    end", "\tlocal sum = x + y\n\tif math.mod(x, 1) == 0 and math.mod(y, 1) == 0 and\
    \ math.mod(z, 1) == 0 then\n\t\tif z == sum or x == sum or y == sum then\n\t\t\
    \treturn true\n\t\telse\n\t\t\treturn false\n\t\tend\n\telse\n\t\treturn false\n\
    \tend\nend", "    -- Your code here\nend", "    -- Return true if one of the numbers\
    \ is equal to the sum of the other two, and all numbers are integers.\n    return\
    \ (x == (y + z) or y == (x + z) or z == (x + y)) and (x == math.floor(x) and y\
    \ == math.floor(y) and z == math.floor(z))\nend", "    if type(x) == \"number\"\
    \ and type(y) == \"number\" and type(z) == \"number\" then\n        if x == math.floor(x)\
    \ and y == math.floor(y) and z == math.floor(z) then\n            return (x +\
    \ y == z) or (x + z == y) or (y + z == x)\n        end\n    end\n    return false\n\
    end", "    if type(x) == \"number\" and type(y) == \"number\" and type(z) == \"\
    number\" then\n        if math.ceil(x) == x and math.ceil(y) == y and math.ceil(z)\
    \ == z then\n            if x == y + z or y == x + z or z == x + y then\n    \
    \            return true\n            else\n                return false\n   \
    \         end\n        else\n            return false\n        end\n    else\n\
    \        return false\n    end\nend", "    local total = x + y + z\n    if (x\
    \ == total - x - y or y == total - x - z or z == total - x - y) and x % 1 == 0\
    \ and y % 1 == 0 and z % 1 == 0 then\n        return true\n    else\n        return\
    \ false\n    end\nend", "    local result = false\n    if (x == y + z) and (x\
    \ == math.floor(x)) then\n        result = true\n    elseif (y == x + z) and (y\
    \ == math.floor(y)) then\n        result = true\n    elseif (z == x + y) and (z\
    \ == math.floor(z)) then\n        result = true\n    end\n    return result\n\
    end", "  return x == y + z or y == x + z or z == x + y\nend", "    local sum =\
    \ x + y + z\n    local check = x == sum or y == sum or z == sum\n    return check\
    \ and (x == math.floor(x) and y == math.floor(y) and z == math.floor(z))\nend",
  "    if (x + y == z or x + z == y or y + z == x) and (x == math.floor(x) and y ==\
    \ math.floor(y) and z == math.floor(z)) then\n        return true\n    else\n\
    \        return false\n    end\nend", "    return ((x + y == z) or (x + z == y)\
    \ or (y + z == x)) and (x % 1 == 0) and (y % 1 == 0) and (z % 1 == 0)\nend", " \
    \ if type(x) ~= \"number\" or type(y) ~= \"number\" or type(z) ~= \"number\" then\n\
    \    return false\n  end\n  if math.floor(x) ~= x or math.floor(y) ~= y or math.floor(z)\
    \ ~= z then\n    return false\n  end\n  if x == y + z or y == x + z or z == x\
    \ + y then\n    return true\n  end\n  return false\nend", "    local is_int =\
    \ true\n    local nums = {x, y, z}\n    for i, v in ipairs(nums) do\n        if\
    \ v ~= math.floor(v) then\n            is_int = false\n        end\n    end\n\
    \    if is_int then\n        local sum = 0\n        for i, v in ipairs(nums) do\n\
    \            sum = sum + v\n        end\n        for i, v in ipairs(nums) do\n\
    \            if v == sum - v then\n                return true\n            end\n\
    \        end\n    end\n    return false\nend", "    return x + y == z or x + z\
    \ == y or y + z == x\nend", "  return (x + y == z or x + z == y or y + z == x)\
    \ and (x % 1 == 0 and y % 1 == 0 and z % 1 == 0)\nend", "    if type(x) == \"\
    number\" and type(y) == \"number\" and type(z) == \"number\" then\n        return\
    \ (x - math.floor(x) == 0 and y - math.floor(y) == 0 and z - math.floor(z) ==\
    \ 0 and\n            (x == y + z or y == x + z or z == x + y))\n    else\n   \
    \     return false\n    end\nend", "  return y + z == x or z + x == y or x + y\
    \ == z\nend", "    local ints = {\n        [3] = true,\n        [4] = true,\n\
    \        [5] = true,\n        [6] = true,\n        [7] = true,\n        [8] =\
    \ true,\n        [9] = true,\n        [10] = true,\n        [11] = true,\n   \
    \     [12] = true,\n        [13] = true,\n        [14] = true,\n        [15] =\
    \ true,\n        [16] = true,\n        [17] = true,\n        [18] = true,\n  \
    \      [19] = true,\n        [20] = true,\n        [21] = true,\n        [22]\
    \ = true,\n        [23] = true,\n        [24] = true,\n        [25] = true,\n\
    \        [26] = true,\n        [27] = true,\n        [28] = true,\n        [29]\
    \ = true,\n        [30] = true,\n        [31] = true,\n        [32] = true,\n\
    \        [33] = true,\n        [34] = true,\n        [35] = true,\n        [36]\
    \ = true,\n        [37] = true,\n        [38] = true,\n        [39] = true,\n\
    \        [40] = true,\n        [41] = true,\n        [42] = true,\n        [43]\
    \ = true,\n        [44] = true,\n        [45] = true,\n        [46] = true,\n\
    \        [47] = true,\n        [48] = true,\n        [49] = true,\n        [50]\
    \ = true,\n        [51] = true,\n        [52] = true,\n        [53] = true,\n\
    \        [54] = true,\n        [55] = true,\n        [56] = true,\n        [57]\
    \ = true,\n        [58] = true,\n        [59] = true,\n        [60] = true,\n\
    \        [61] = true,\n        [62] = true,\n        [63] = true,\n        [64]\
    \ = true,\n        [65] = true,\n", "\treturn (x % 1 == 0) and (y % 1 == 0) and\
    \ (z % 1 == 0) and ((x == y + z) or (y == x + z) or (z == x + y))\nend", "  return\
    \ ((x + y == z) or (x + z == y) or (y + z == x)) and (x % 1 == 0) and (y % 1 ==\
    \ 0) and (z % 1 == 0)\nend", "    return x % 1 == 0 and y % 1 == 0 and z % 1 ==\
    \ 0 and (x + y == z or x + z == y or y + z == x)\nend", "    if type(x) == \"\
    number\" and type(y) == \"number\" and type(z) == \"number\" then\n        if\
    \ math.floor(x) == x and math.floor(y) == y and math.floor(z) == z then\n    \
    \        if x == y + z or y == x + z or z == x + y then\n                return\
    \ true\n            else\n                return false\n            end\n    \
    \    else\n            return false\n        end\n    else\n        return false\n\
    \    end\nend", "    local x = math.floor(x)\n    local y = math.floor(y)\n  \
    \  local z = math.floor(z)\n    if x == y + z or y == x + z or z == x + y then\n\
    \        return true\n    else\n        return false\n    end\nend", "  x_sum\
    \ = x + y\n  y_sum = x + z\n  z_sum = y + z\n  if (x_sum == z or y_sum == y or\
    \ z_sum == x) and (x % 1 == 0 and y % 1 == 0 and z % 1 == 0) then\n    return\
    \ true\n  else\n    return false\n  end\nend", "    local sum = x + y + z\n  \
    \  return x == sum or y == sum or z == sum\nend", "\tif (type(x) == \"number\"\
    \ and type(y) == \"number\" and type(z) == \"number\") then\n\t\tif (x == y +\
    \ z or y == x + z or z == x + y) then\n\t\t\treturn true\n\t\telse\n\t\t\treturn\
    \ false\n\t\tend\n\telse\n\t\treturn false\n\tend\nend", "  return (x + y == z\
    \ or x + z == y or y + z == x) and (x % 1 == 0 and y % 1 == 0 and z % 1 == 0)\n\
    end", "  return (x==y+z or y==x+z or z==x+y) and type(x)=='number' and type(y)=='number'\
    \ and type(z)=='number'\nend", "    -- body\nend", "    local values = {x, y,\
    \ z}\n    local sorted = sort(values)\n    return sorted[1] + sorted[2] == sorted[3]\n\
    end", "  -- stuff\nend", "  -- TODO\nend", "    -- TODO: implement the function\n\
    end", "    local sum = x + y + z\n    return (sum - math.floor(sum)) == 0 and\n\
    \    (math.abs(x) == math.abs(y) + math.abs(z) or\n    math.abs(y) == math.abs(x)\
    \ + math.abs(z) or\n    math.abs(z) == math.abs(x) + math.abs(y))\nend", "  return\
    \ math.floor(x) == x and math.floor(y) == y and math.floor(z) == z and (x + y\
    \ == z or x + z == y or y + z == x)\nend", "    if is_int(x) == false or is_int(y)\
    \ == false or is_int(z) == false then\n        return false\n    end\n    return\
    \ x + y == z or x + z == y or y + z == x\nend", "    if x + y == z or x + z ==\
    \ y or y + z == x then\n        return true\n    else\n        return false\n\
    \    end\nend", "    return (x + y == z) or (x + z == y) or (y + z == x)\nend",
  "    if is_int(x) and is_int(y) and is_int(z) then\n        return x + y == z or\
    \ x + z == y or y + z == x\n    else\n        return false\n    end\nend", " \
    \ -- TODO: Write a function that returns true if one of the numbers is equal to\
    \ the sum of the other two.\n  if x+y == z or x+z == y or y+z == x then\n    return\
    \ true\n  else\n    return false\n  end\nend", "    return (x + y == z or x +\
    \ z == y or y + z == x) and math.floor(x) == x and math.floor(y) == y and math.floor(z)\
    \ == z\nend", "  local x_ = x\n  local y_ = y\n  local z_ = z\n  if math.floor(x_)\
    \ ~= x or math.floor(y_) ~= y or math.floor(z_) ~= z then\n    return false\n\
    \  end\n  if x_ == y_ + z_ or y_ == x_ + z_ or z_ == x_ + y_ then\n    return\
    \ true\n  end\n  return false\nend", "  if x % 1 == 0 and y % 1 == 0 and z % 1\
    \ == 0 then\n    return x == y + z or y == x + z or z == x + y\n  else\n    return\
    \ false\n  end\nend", "    return x + y == z or x + z == y or y + z == x\nend",
  "  -- TODO\nend", "    return false\nend", "  local x_is_int = math.floor(x) ==\
    \ x\n  local y_is_int = math.floor(y) == y\n  local z_is_int = math.floor(z) ==\
    \ z\n  return x_is_int and y_is_int and z_is_int and (x == y + z or y == x + z\
    \ or z == x + y)\nend", "    return (x + y == z or x + z == y or y + z == x) and\n\
    \        (type(x) == \"number\" and type(y) == \"number\" and type(z) == \"number\"\
    )\nend", "    if type(x) ~= \"number\" or type(y) ~= \"number\" or type(z) ~=\
    \ \"number\" then\n        return false\n    end\n    if math.floor(x) ~= x or\
    \ math.floor(y) ~= y or math.floor(z) ~= z then\n        return false\n    end\n\
    \    if x + y == z or x + z == y or y + z == x then\n        return true\n   \
    \ end\n    return false\nend", "  return ((x + y == z) or (x + z == y) or (y +\
    \ z == x)) and ((math.floor(x) == x) and (math.floor(y) == y) and (math.floor(z)\
    \ == z))\nend", "  return type(x) == \"number\" and type(y) == \"number\" and\
    \ type(z) == \"number\" and\n         x == floor(x) and y == floor(y) and z ==\
    \ floor(z) and\n         (x == y + z or y == x + z or z == x + y)\nend", "   \
    \ if x % 1 == 0 and y % 1 == 0 and z % 1 == 0 then\n        if x == y + z or y\
    \ == x + z or z == x + y then\n            return true\n        else\n       \
    \     return false\n        end\n    else\n        return false\n    end\nend",
  "  return (x == y + z) or (y == x + z) or (z == x + y)\nend", "    -- TODO\nend",
  "  if (x == y + z) and (x - math.floor(x) == 0) then\n    return true\n  elseif\
    \ (y == x + z) and (y - math.floor(y) == 0) then\n    return true\n  elseif (z\
    \ == x + y) and (z - math.floor(z) == 0) then\n    return true\n  else\n    return\
    \ false\n  end\nend", "    return (x + y == z or x + z == y or y + z == x) and\
    \ x == math.floor(x) and y == math.floor(y) and z == math.floor(z)\nend", "  return\
    \ type(x) == \"number\" and\n  type(y) == \"number\" and\n  type(z) == \"number\"\
    \ and\n  x % 1 == 0 and\n  y % 1 == 0 and\n  z % 1 == 0 and\n  (x == y + z or\n\
    \  y == x + z or\n  z == x + y)\nend", "  if x == y + z then\n    return true\n\
    \  elseif y == x + z then\n    return true\n  elseif z == x + y then\n    return\
    \ true\n  else\n    return false\n  end\nend", "    if x%1 ~= 0 or y%1 ~= 0 or\
    \ z%1 ~= 0 then\n        return false\n    end\n    return x == y + z or y ==\
    \ x + z or z == x + y\nend", "  -- your code here\nend", "    local l = {x, y,\
    \ z}\n    local m = math.min(x, y, z)\n    local s = math.max(x, y, z)\n    for\
    \ i, v in ipairs(l) do\n        if v == s + m and v ~= s and v ~= m then\n   \
    \         return true\n        end\n    end\n    return false\nend", "  -- BEGIN\n\
    \  return (x + y == z) or (x + z == y) or (y + z == x)\n  -- END\nend", "    local\
    \ function is_int(x)\n        return type(x) == \"number\" and x == math.floor(x)\n\
    \    end\n    if not is_int(x) or not is_int(y) or not is_int(z) then\n      \
    \  return false\n    end\n    return x + y == z or x + z == y or y + z == x\n\
    end", "\tif (x % 1 == 0) and (y % 1 == 0) and (z % 1 == 0) then\n\t\tif x == y\
    \ + z or y == x + z or z == x + y then\n\t\t\treturn true\n\t\telse\n\t\t\treturn\
    \ false\n\t\tend\n\telse\n\t\treturn false\n\tend\nend", "\tif (x == y + z or\
    \ y == x + z or z == x + y) and (x % 1 == 0 and y % 1 == 0 and z % 1 == 0) then\n\
    \t\treturn true\n\telse\n\t\treturn false\n\tend\nend", "    return not (math.floor(x)\
    \ == x and math.floor(y) == y and math.floor(z) == z) and false or (x + y == z\
    \ or x + z == y or y + z == x)\nend", "  if x % 1 == 0 then\n    if y % 1 == 0\
    \ then\n      if z % 1 == 0 then\n        if x + y == z then\n          return\
    \ true\n        elseif x + z == y then\n          return true\n        elseif\
    \ y + z == x then\n          return true\n        else\n          return false\n\
    \        end\n      else\n        return false\n      end\n    else\n      return\
    \ false\n    end\n  else\n    return false\n  end\nend\nprint(any_int(3, 2, 7))\n\
    print(any_int(3, 2, 2))\nprint(any_int(3, -2, 1))\nprint(any_int(3.6, -2.2, 2))",
  "  -- body\nend", "    if x + y == z or x + z == y or y + z == x then\n        return\
    \ true\n    else\n        return false\n    end\nend", "  local list = {x, y,\
    \ z}\n  local is_int = function(n) return math.floor(n) == n end\n  local is_sum\
    \ = function(a, b, c) return a + b == c or a + c == b or b + c == a end\n  for\
    \ _, n in ipairs(list) do\n    if not is_int(n) then return false end\n  end\n\
    \  return is_sum(x, y, z)\nend", "    -- check that all parameters are integers\n\
    \    if x == math.floor(x) and y == math.floor(y) and z == math.floor(z) then\n\
    \        -- check that the sum of any two numbers equals the remaining one\n \
    \       if x + y == z or x + z == y or y + z == x then\n            return true\n\
    \        end\n    end\n    return false\nend", "  local x_int = math.floor(x)\
    \ == x\n  local y_int = math.floor(y) == y\n  local z_int = math.floor(z) == z\n\
    \  return (x_int and y_int and z_int) and ((x == y + z) or (y == x + z) or (z\
    \ == x + y))\nend", "    return  x % 1 == 0 and\n            y % 1 == 0 and\n\
    \            z % 1 == 0 and\n            (\n                x == y + z or\n  \
    \              y == x + z or\n                z == x + y\n            )\nend",
  "  -- 1: Check if all the numbers are integers.\n  -- 2: Check if any of the numbers\
    \ are equal to the sum of the other two.\n  -- 3: Return true if any of the two\
    \ conditions are true.\n  -- 4: Return false in any other cases.\nend", "  return\
    \ (x == y + z) or (y == x + z) or (z == x + y)\nend", "  return (x+y == z or x+z\
    \ == y or y+z == x) and x % 1 == 0 and y % 1 == 0 and z % 1 == 0\nend", "  return\
    \ (x + y == z) or (x + z == y) or (y + z == x)\nend", "    -- your code here\n\
    end", "  if (x == y + z or y == x + z or z == x + y) and x%1 == 0 and y%1 == 0\
    \ and z%1 == 0 then\n    return true\n  else\n    return false\n  end\nend", " \
    \ return (x+y == z or x+z == y or y+z == x) and (x % 1 == 0 and y % 1 == 0 and\
    \ z % 1 == 0)\nend", "\tif x + y == z or x + z == y or y + z == x then\n\t\treturn\
    \ true\n\telse\n\t\treturn false\n\tend\nend", "  return (x + y == z) or (x +\
    \ z == y) or (y + z == x)\nend", "  return (x + y == z or x + z == y or y + z\
    \ == x) and (x % 1 == 0) and (y % 1 == 0) and (z % 1 == 0)\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

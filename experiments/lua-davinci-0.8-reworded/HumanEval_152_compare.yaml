name: HumanEval_152_compare
language: lua
prompt: "-- I think we all remember that feeling when the result of some long-awaited\n\
  -- event is finally known. The feelings and thoughts you have at that moment are\n\
  -- definitely worth noting down and comparing.\n-- Your task is to determine if\
  \ a person correctly guessed the results of a number of matches.\n-- You are given\
  \ two tables of scores and guesses of equal length, where each index shows a match.\
  \ \n-- Return a table of the same length denoting how far off each guess was. If\
  \ they have guessed correctly,\n-- the value is 0, and if not, the value is the\
  \ absolute difference between the guess and the score.\n-- example:\n-- >>> compare({1,\
  \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n-- >>> compare({0,\
  \ 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\nlocal function compare(game,\
  \ guess)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
  \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
  \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0,\
  \ 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2, -3}),\
  \ {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}), {2, 0,\
  \ 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  for i = 1,#game do\n    game[i] = game[i] - guess[i]\n  end\n  return\
    \ game\nend", "    local diff = {}\n    for i, v in ipairs(game) do\n        if\
    \ guess[i] < 0 or guess[i] > 5 then\n            table.insert(diff, 0)\n     \
    \   else\n            table.insert(diff, math.abs(v - guess[i]))\n        end\n\
    \    end\n    return diff\nend", end, "\tlocal result = {}\n\tfor i = 1, #game\
    \ do\n\t\tif game[i] == guess[i] then\n\t\t\tresult[i] = 0\n\t\telse\n\t\t\tresult[i]\
    \ = math.abs(game[i] - guess[i])\n\t\tend\n\tend\n\treturn result\nend", "\tlocal\
    \ result = {}\n\tfor i = 1, #game do\n\t\tresult[i] = math.abs(game[i] - guess[i])\n\
    \tend\n\treturn result\nend", "    local result = {}\n    for i,v in ipairs(game)\
    \ do\n        if guess[i] < v then\n            result[i] = v - guess[i]\n   \
    \     elseif guess[i] > v then\n            result[i] = guess[i] - v\n       \
    \ else\n            result[i] = 0\n        end\n    end\n    return result\nend",
  "    local res = {}\n    for i = 1, #game do\n        if game[i] == guess[i] then\n\
    \            res[i] = 0\n        else\n            res[i] = math.abs(game[i] -\
    \ guess[i])\n        end\n    end\n    return res\nend", "    local result = {}\n\
    \    for index = 1, #game do\n        result[index] = math.abs(game[index] - guess[index])\n\
    \    end\n    return result\nend", "    local diffs = {}\n    for i = 1, #game\
    \ do\n        diffs[i] = math.abs(game[i] - guess[i])\n    end\n    return diffs\n\
    end", "    return map(zip(game, guess), function(p) return abs(p[1] - p[2]) end)\n\
    end", "    return List.map(function(a, b) return math.abs(a - b) end, game, guess)\n\
    end", "\tlocal result = {}\n\tfor i = 1, #game do\n\t\tresult[i] = math.abs(game[i]\
    \ - guess[i])\n\tend\n\treturn result\nend", "  local answer = {}\n  for i = 1,\
    \ #game do\n    answer[i] = math.abs(game[i] - guess[i])\n  end\n  return answer\n\
    end", "  local diff = {}\n  for i = 1, #game do\n    diff[i] = math.abs(game[i]\
    \ - guess[i])\n  end\n  return diff\nend", "\tlocal n = #game\n\tlocal result\
    \ = {}\n\tfor i = 1, n do\n\t\tlocal diff = game[i] - guess[i]\n\t\tresult[i]\
    \ = math.abs(diff)\n\tend\n\treturn result\nend", "  -- TODO\nend", "    local\
    \ output = {}\n    for i = 1, #game do\n        if guess[i] < 0 or guess[i] >\
    \ 5 then\n            output[i] = \"Please enter a number between 0 and 5\"\n\
    \        elseif game[i] ~= guess[i] then\n            output[i] = math.abs(game[i]\
    \ - guess[i])\n        elseif game[i] == guess[i] then\n            output[i]\
    \ = 0\n        end\n    end\n    return output\nend", "    local diff = {}\n \
    \   for i = 1, #game do\n        local g = guess[i]\n        local s = game[i]\n\
    \        diff[i] = (g > s) and (g - s) or (s - g)\n    end\n    return diff\n\
    end", "  local diffs = {}\n  for i = 1, #game do\n    diffs[i] = math.abs(game[i]\
    \ - guess[i])\n  end\n  return diffs\nend", "    local res = {}\n    for i, val\
    \ in ipairs(game) do\n        local gval = guess[i]\n        res[i] = math.abs(val\
    \ - gval)\n    end\n    return res\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

language: lua
name: HumanEval_19_sort_numbers
results:
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local numbers_list = split(numbers, \" \"\
    )\n    for k, v in pairs(numbers_list) do\n        numbers_list[k] = numberals[v]\n\
    \    end\n    sort(numbers_list)\n    for k, v in pairs(numbers_list) do\n   \
    \     numbers_list[k] = numeral_by_number[v]\n    end\n    return implode(numbers_list,\
    \ \" \")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdzp80dyn.lua:7:\
    \ attempt to call a nil value (global 'split')\nstack traceback:\n\t/tmp/tmpdzp80dyn.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpdzp80dyn.lua:21: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local tbl = {}\n  for w in numbers:gmatch('%S+')\
    \ do\n    tbl[#tbl+1] = w\n  end\n  table.sort(tbl, function(a,b)\n    if to_numbers[a]\
    \ < to_numbers[b] then\n      return true\n    else\n      return false\n    end\n\
    \  end)\n  return table.concat(tbl, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp64u4vnv8.lua:12:\
    \ attempt to index a nil value (global 'to_numbers')\nstack traceback:\n\t/tmp/tmp64u4vnv8.lua:12:\
    \ in function </tmp/tmp64u4vnv8.lua:11>\n\t[C]: in function 'table.sort'\n\t/tmp/tmp64u4vnv8.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmp64u4vnv8.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local nums = {}\n  local function number_to_number(number)\n\
    \    local num = {\n      zero = 0,\n      one = 1,\n      two = 2,\n      three\
    \ = 3,\n      four = 4,\n      five = 5,\n      six = 6,\n      seven = 7,\n \
    \     eight = 8,\n      nine = 9\n    }\n    return num[number]\n  end\n  for\
    \ n in numbers:gmatch('%S+') do\n    table.insert(nums, number_to_number(n))\n\
    \  end\n  table.sort(nums)\n  local function number_to_string(number)\n    local\
    \ str = {\n      [0] = 'zero',\n      [1] = 'one',\n      [2] = 'two',\n     \
    \ [3] = 'three',\n      [4] = 'four',\n      [5] = 'five',\n      [6] = 'six',\n\
    \      [7] = 'seven',\n      [8] = 'eight',\n      [9] = 'nine'\n    }\n    return\
    \ str[number]\n  end\n  local str = ''\n  for _, n in ipairs(nums) do\n    str\
    \ = str .. number_to_string(n) .. ' '\n  end\n  return str:sub(1, -2)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local numeral_to_number = {\n    zero = 0,\n\
    \    one = 1,\n    two = 2,\n    three = 3,\n    four = 4,\n    five = 5,\n  \
    \  six = 6,\n    seven = 7,\n    eight = 8,\n    nine = 9\n  }\n  local numbers_in_order\
    \ = {}\n  for number in numbers:gmatch('%a+') do\n    table.insert(numbers_in_order,\
    \ numeral_to_number[number])\n  end\n  table.sort(numbers_in_order)\n  local sorted_numbers\
    \ = {}\n  for _, number in ipairs(numbers_in_order) do\n    for numeral, numeral_number\
    \ in pairs(numeral_to_number) do\n      if number == numeral_number then\n   \
    \     table.insert(sorted_numbers, numeral)\n      end\n    end\n  end\n  return\
    \ table.concat(sorted_numbers, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  -- TODO\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2o7y8av1.lua:13:\
    \ expected: \"\"\nactual: nil\nstack traceback:\n\t/tmp/tmp2o7y8av1.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local function compare(a, b)\n    return a.value\
    \ < b.value\n  end\n  local numeral_map = {\n    zero = 0,\n    one = 1,\n   \
    \ two = 2,\n    three = 3,\n    four = 4,\n    five = 5,\n    six = 6,\n    seven\
    \ = 7,\n    eight = 8,\n    nine = 9\n  }\n  local numeral_array = {}\n  for numeral\
    \ in numbers:gmatch('(%w+)') do\n    table.insert(numeral_array, {\n      name\
    \ = numeral,\n      value = numeral_map[numeral]\n    })\n  end\n  table.sort(numeral_array,\
    \ compare)\n  local result = ''\n  for _, numeral in ipairs(numeral_array) do\n\
    \    result = result .. numeral.name .. ' '\n  end\n  return result:sub(1, #result\
    \ - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local numbers = numbers:split(\" \")\n \
    \   local words   = numbers:values()\n    local refs    = {}\n    for i, word\
    \ in ipairs(words) do\n        local num = string.match(word, \"%d+\")\n     \
    \   if num then\n            refs[i] = num\n        else\n            refs[i]\
    \ = number_words[word]\n        end\n    end\n    table.sort(refs)\n    local\
    \ output = {}\n    for i, num in ipairs(refs) do\n        output[i] = numbers[num]\n\
    \    end\n    return table.concat(output, \" \")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8ni9m2t6.lua:7:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmp8ni9m2t6.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp8ni9m2t6.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local numbers = stringx.split(numbers)\n \
    \ table.sort(numbers, function(a, b)\n    local map = {zero = 0, one = 1, two\
    \ = 2, three = 3, four = 4, five = 5, six = 6, seven = 7, eight = 8, nine = 9}\n\
    \    if map[a] == map[b] then\n      return a < b\n    else\n      return map[a]\
    \ < map[b]\n    end\n  end)\n  return table.concat(numbers, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphrocg_2v.lua:7:\
    \ attempt to index a nil value (global 'stringx')\nstack traceback:\n\t/tmp/tmphrocg_2v.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmphrocg_2v.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local nums = {}\n  for num in numbers:gmatch(\"\
    %w+\") do\n    table.insert(nums, num)\n  end\n  local result = {'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'}\n  local output\
    \ = {}\n  for i = 1, #nums do\n    for j = 1, #result do\n      if nums[i] ==\
    \ result[j] then\n        table.insert(output, nums[i])\n      end\n    end\n\
    \  end\n  return table.concat(output, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg57e80yt.lua:29:\
    \ expected: \"zero four five seven eight nine\"\nactual: \"five zero four seven\
    \ nine eight\"\nstack traceback:\n\t/tmp/tmpg57e80yt.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local numberals = {}\n  for number in numbers:gmatch('%S+')\
    \ do\n    local numeral = vocab[number]\n    table.insert(numberals, numeral)\n\
    \  end\n  table.sort(numberals)\n  return table.concat(numberals, ' ')\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6spsob0g.lua:9:\
    \ attempt to index a nil value (global 'vocab')\nstack traceback:\n\t/tmp/tmp6spsob0g.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp6spsob0g.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local num_map = {\n        zero = 0,\n \
    \       one = 1,\n        two = 2,\n        three = 3,\n        four = 4,\n  \
    \      five = 5,\n        six = 6,\n        seven = 7,\n        eight = 8,\n \
    \       nine = 9\n    }\n    local nums = {}\n    for word in numbers:gmatch('%S+')\
    \ do\n        local num = num_map[word]\n        if num then\n            table.insert(nums,\
    \ num)\n        end\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums)\
    \ do\n        for word, check in pairs(num_map) do\n            if check == num\
    \ then\n                nums[i] = word\n                break\n            end\n\
    \        end\n    end\n    return table.concat(nums, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local nums = {}\n    for _, n in ipairs(numbers:split('\
    \ ')) do\n        local n = n:lower()\n        local num\n        if n == 'zero'\
    \ then\n            num = 0\n        elseif n == 'one' then\n            num =\
    \ 1\n        elseif n == 'two' then\n            num = 2\n        elseif n ==\
    \ 'three' then\n            num = 3\n        elseif n == 'four' then\n       \
    \     num = 4\n        elseif n == 'five' then\n            num = 5\n        elseif\
    \ n == 'six' then\n            num = 6\n        elseif n == 'seven' then\n   \
    \         num = 7\n        elseif n == 'eight' then\n            num = 8\n   \
    \     elseif n == 'nine' then\n            num = 9\n        end\n        if num\
    \ then\n            table.insert(nums, num)\n        end\n    end\n    table.sort(nums)\n\
    \    local words = {}\n    for _, n in ipairs(nums) do\n        local word\n \
    \       if n == 0 then\n            word = 'zero'\n        elseif n == 1 then\n\
    \            word = 'one'\n        elseif n == 2 then\n            word = 'two'\n\
    \        elseif n == 3 then\n            word = 'three'\n        elseif n == 4\
    \ then\n            word = 'four'\n        elseif n == 5 then\n            word\
    \ = 'five'\n        elseif n == 6 then\n            word = 'six'\n        elseif\
    \ n == 7 then\n            word = 'seven'\n        elseif n == 8 then\n      \
    \      word = 'eight'\n        elseif n == 9 then\n            word = 'nine'\n\
    \        end\n        if word then\n            table.insert(words, word)\n  \
    \      end\n    end\n    return table.concat(words, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfdeawf5w.lua:8:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmpfdeawf5w.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpfdeawf5w.lua:71: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local my_numbers = { 'zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine' }\n    local sorted_numbers\
    \ = {}\n    for _, i in ipairs(numbers:split(' ')) do\n        table.insert(sorted_numbers,\
    \ my_numbers[i])\n    end\n    table.sort(sorted_numbers)\n    local output =\
    \ ''\n    for i = 1, #sorted_numbers do\n        output = output .. sorted_numbers[i]\
    \ .. ' '\n    end\n    return output:sub(1, -2)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl2kxkxkq.lua:9:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmpl2kxkxkq.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpl2kxkxkq.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n   local numbers_list = {}\n   local output\
    \ = {}\n   local word2number = {zero=0, one=1, two=2, three=3, four=4, five=5,\
    \ six=6, seven=7, eight=8, nine=9}\n   for word in numbers:gmatch('%S+') do\n\
    \      table.insert(numbers_list, word2number[word])\n   end\n   table.sort(numbers_list)\n\
    \   for i,num in ipairs(numbers_list) do\n      for word,num2 in pairs(word2number)\
    \ do\n         if num == num2 then\n            table.insert(output, word)\n \
    \        end\n      end\n   end\n   return table.concat(output, ' ')\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local numMap = {zero = 0, one = 1, two =\
    \ 2, three = 3, four = 4, five = 5, six = 6, seven = 7, eight = 8, nine = 9}\n\
    \    local nums = {}\n    for num in numbers:gmatch(\"[^%s]+\") do\n        table.insert(nums,\
    \ numMap[num])\n    end\n    table.sort(nums)\n    local result = \"\"\n    for\
    \ _,num in ipairs(nums) do\n        result = result .. getKey(numMap, num) ..\
    \ \" \"\n    end\n    return result:sub(1, -2)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxmxkd9rc.lua:15:\
    \ attempt to call a nil value (global 'getKey')\nstack traceback:\n\t/tmp/tmpxmxkd9rc.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpxmxkd9rc.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local tbl = {}\n    for num in numbers:gmatch('%S+')\
    \ do\n        tbl[#tbl+1] = num\n    end\n    table.sort(tbl, function(a, b)\n\
    \        return D[a] < D[b]\n    end)\n    return table.concat(tbl, ' ')\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2510y5s8.lua:12:\
    \ attempt to index a nil value (global 'D')\nstack traceback:\n\t/tmp/tmp2510y5s8.lua:12:\
    \ in function </tmp/tmp2510y5s8.lua:11>\n\t[C]: in function 'table.sort'\n\t/tmp/tmp2510y5s8.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmp2510y5s8.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tnumbers = numbers:gsub('and', '')\n\tlocal\
    \ t = {}\n\tfor word in numbers:gmatch('%S+') do\n\t\tt[#t + 1] = numeral_to_number(word)\n\
    \tend\n\ttable.sort(t)\n\tfor i = 1, #t do\n\t\tt[i] = number_to_numeral(t[i])\n\
    \tend\n\treturn table.concat(t, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6l10c6d5.lua:10:\
    \ attempt to call a nil value (global 'numeral_to_number')\nstack traceback:\n\
    \t/tmp/tmp6l10c6d5.lua:10: in local 'candidate'\n\t/tmp/tmp6l10c6d5.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tlocal nums = {}\n\tfor num in string.gmatch(numbers,\
    \ '%a+') do\n\t\tnums[#nums + 1] = num\n\tend\n\t\n\ttable.sort(nums, function(a,\
    \ b) return rpn[a] < rpn[b] end)\n\t\n\treturn table.concat(nums, ' ')\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppeu3o_ga.lua:12:\
    \ attempt to index a nil value (global 'rpn')\nstack traceback:\n\t/tmp/tmppeu3o_ga.lua:12:\
    \ in function </tmp/tmppeu3o_ga.lua:12>\n\t[C]: in function 'table.sort'\n\t/tmp/tmppeu3o_ga.lua:12:\
    \ in local 'candidate'\n\t/tmp/tmppeu3o_ga.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local num_lookup = {zero = 0, one = 1, two\
    \ = 2, three = 3, four = 4, five = 5, six = 6, seven = 7, eight = 8, nine = 9}\n\
    \  local number_list = stringx.split(numbers)\n  table.sort(number_list, function(a,\
    \ b) return num_lookup[a] < num_lookup[b] end)\n  return table.concat(number_list,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkvubbah3.lua:8:\
    \ attempt to index a nil value (global 'stringx')\nstack traceback:\n\t/tmp/tmpkvubbah3.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpkvubbah3.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\treturn nil\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2ga2odmx.lua:13:\
    \ expected: \"\"\nactual: nil\nstack traceback:\n\t/tmp/tmp2ga2odmx.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\t-- Split the numbers into an array and sort\n\
    \tlocal number_array = string.split(numbers, ' ')\n\ttable.sort(number_array)\n\
    \treturn table.concat(number_array, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgjawue3w.lua:8:\
    \ attempt to call a nil value (field 'split')\nstack traceback:\n\t/tmp/tmpgjawue3w.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpgjawue3w.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  return table.concat(utilities.sorted(utilities.split(numbers)),\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpabjjxkqs.lua:7:\
    \ attempt to index a nil value (global 'utilities')\nstack traceback:\n\t/tmp/tmpabjjxkqs.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpabjjxkqs.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    numbers = string.gsub(numbers, ' zero',\
    \ '0')\n    numbers = string.gsub(numbers, ' one', '1')\n    numbers = string.gsub(numbers,\
    \ ' two', '2')\n    numbers = string.gsub(numbers, ' three', '3')\n    numbers\
    \ = string.gsub(numbers, ' four', '4')\n    numbers = string.gsub(numbers, ' five',\
    \ '5')\n    numbers = string.gsub(numbers, ' six', '6')\n    numbers = string.gsub(numbers,\
    \ ' seven', '7')\n    numbers = string.gsub(numbers, ' eight', '8')\n    numbers\
    \ = string.gsub(numbers, ' nine', '9')\n    numbers = string.gsub(numbers, '%s+',\
    \ ' ')\n    numbers = string.gsub(numbers, '0', ' zero')\n    numbers = string.gsub(numbers,\
    \ '1', ' one')\n    numbers = string.gsub(numbers, '2', ' two')\n    numbers =\
    \ string.gsub(numbers, '3', ' three')\n    numbers = string.gsub(numbers, '4',\
    \ ' four')\n    numbers = string.gsub(numbers, '5', ' five')\n    numbers = string.gsub(numbers,\
    \ '6', ' six')\n    numbers = string.gsub(numbers, '7', ' seven')\n    numbers\
    \ = string.gsub(numbers, '8', ' eight')\n    numbers = string.gsub(numbers, '9',\
    \ ' nine')\n    return numbers\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprf_bdhp9.lua:37:\
    \ expected: \"zero four five seven eight nine\"\nactual: \"five zero four seven\
    \ nine eight\"\nstack traceback:\n\t/tmp/tmprf_bdhp9.lua:37: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  -- This is a really janky, expensive way to\
    \ do this, but it makes the code more readable!\n  return table.concat(table.sort(string.split(numbers,\
    \ ' ')), ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp06ch8bze.lua:8:\
    \ attempt to call a nil value (field 'split')\nstack traceback:\n\t/tmp/tmp06ch8bze.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmp06ch8bze.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    -- first we need to convert the string of\
    \ numberals to a table of numbers.\n    -- split the string on spaces.\n    local\
    \ split = numbers:split(\" \")\n    -- iterate over the list of strings, converting\
    \ each to a number.\n    local number_list = {}\n    for i, numeral in ipairs(split)\
    \ do\n        -- convert the numeral to a number\n        local number = NUMBERS[numeral]\n\
    \        -- check the result\n        if not number then\n            -- invalid\
    \ numeral!\n            return nil\n        end\n        -- add it to the list\n\
    \        table.insert(number_list, number)\n    end\n    -- now we have a list\
    \ of numbers. sort them.\n    table.sort(number_list)\n    -- now we need to convert\
    \ back to numberals and return.\n    local numeral_list = {}\n    for i, number\
    \ in ipairs(number_list) do\n        -- convert the number to a numeral\n    \
    \    local numeral = NUMERAL_MAP[number]\n        -- check the result\n      \
    \  if not numeral then\n            -- invalid number!\n            return nil\n\
    \        end\n        -- add it to the list\n        table.insert(numeral_list,\
    \ numeral)\n    end\n    -- return the sorted list of numberals as a string, separated\
    \ by spaces.\n    return table.concat(numeral_list, \" \")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxk2t8uel.lua:9:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmpxk2t8uel.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpxk2t8uel.lua:45: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local function convert_word_to_number(word)\n\
    \    local string_to_number = {\n      zero = 0,\n      one = 1,\n      two =\
    \ 2,\n      three = 3,\n      four = 4,\n      five = 5,\n      six = 6,\n   \
    \   seven = 7,\n      eight = 8,\n      nine = 9\n    }\n    return string_to_number[word]\n\
    \  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpnt_1cwk5.lua:33: ''end'' expected (to close ''function'' at
    line 6) near <eof>

    '
  stdout: ''
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  numbers = stringx.split(numbers)\n  table.sort(numbers,\
    \ function(a, b)\n    return (number_name_to_number[a] or 0) < (number_name_to_number[b]\
    \ or 0)\n  end)\n  return table.concat(numbers, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8ouozb7r.lua:7:\
    \ attempt to index a nil value (global 'stringx')\nstack traceback:\n\t/tmp/tmp8ouozb7r.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp8ouozb7r.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tlocal sorted_numbers = {}\n\tlocal num_names\
    \ = {\n\t\t[\"zero\"] = 0,\n\t\t[\"one\"] = 1,\n\t\t[\"two\"] = 2,\n\t\t[\"three\"\
    ] = 3,\n\t\t[\"four\"] = 4,\n\t\t[\"five\"] = 5,\n\t\t[\"six\"] = 6,\n\t\t[\"\
    seven\"] = 7,\n\t\t[\"eight\"] = 8,\n\t\t[\"nine\"] = 9\n\t}\n\tfor num in numbers:gmatch(\"\
    %S+\") do\n\t\ttable.insert(sorted_numbers, num_names[num])\n\tend\n\ttable.sort(sorted_numbers)\n\
    \tlocal sorted_names = {}\n\tfor _, num in ipairs(sorted_numbers) do\n\t\ttable.insert(sorted_names,\
    \ num_to_word(num))\n\tend\n\treturn table.concat(sorted_names, \" \")\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4ubjqt2z.lua:26:\
    \ attempt to call a nil value (global 'num_to_word')\nstack traceback:\n\t/tmp/tmp4ubjqt2z.lua:26:\
    \ in local 'candidate'\n\t/tmp/tmp4ubjqt2z.lua:35: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local list = {}\n    for i in numbers:gmatch('%w+')\
    \ do\n        list[#list+1] = i\n    end\n    table.sort(list, function(a, b)\n\
    \        return word_to_number(a) < word_to_number(b)\n    end)\n    return table.concat(list,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0m3v832r.lua:12:\
    \ attempt to call a nil value (global 'word_to_number')\nstack traceback:\n\t\
    /tmp/tmp0m3v832r.lua:12: in function </tmp/tmp0m3v832r.lua:11>\n\t[C]: in function\
    \ 'table.sort'\n\t/tmp/tmp0m3v832r.lua:11: in local 'candidate'\n\t/tmp/tmp0m3v832r.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  -- check that 'numbers' is a string\n  if\
    \ type(numbers) ~= 'string' then\n    return nil\n  end\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpsqvtkdlb.lua:22: ''end'' expected (to close ''function'' at
    line 6) near <eof>

    '
  stdout: ''
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  numbers = numbers:lower()\n  for i = 1,10\
    \ do\n    local num = tostring(i - 1)\n    numbers = numbers:gsub(num, lookup.numbers[num])\n\
    \  end\n  numbers = numbers:gsub(' ', '')\n  numbers = numbers:gsub('[^0-9]',\
    \ '')\n  numbers = numbers:gsub('(%d)', lookup.numbers_reverse)\n  return numbers\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9x4jp5k3.lua:10:\
    \ attempt to index a nil value (global 'lookup')\nstack traceback:\n\t/tmp/tmp9x4jp5k3.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp9x4jp5k3.lua:21: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local num_map = {\n    zero = 0,\n    one\
    \ = 1,\n    two = 2,\n    three = 3,\n    four = 4,\n    five = 5,\n    six =\
    \ 6,\n    seven = 7,\n    eight = 8,\n    nine = 9\n  }\n  local numbers_list\
    \ = {}\n  for numeral in numbers:gmatch('[%w]+') do\n    table.insert(numbers_list,\
    \ num_map[numeral])\n  end\n  table.sort(numbers_list)\n  return table.concat(numbers_list,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxadqh64t.lua:31:\
    \ expected: \"three\"\nactual: \"3\"\nstack traceback:\n\t/tmp/tmpxadqh64t.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local num_list = numbers:split(' ')\n  table.sort(num_list,\
    \ function(a, b) return number_string_dict[a] < number_string_dict[b] end)\n \
    \ return table.concat(num_list, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp39nbane2.lua:7:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmp39nbane2.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp39nbane2.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local t = {}\n    for number in numbers:gmatch('%S+')\
    \ do\n        t[#t+1] = tonumber(number)\n    end\n    table.sort(t)\n    local\
    \ ret = ''\n    for _, number in ipairs(t) do\n        ret = ret .. number ..\
    \ ' '\n    end\n    return ret:sub(1, #ret-1)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn8kl3k86.lua:23:\
    \ expected: \"three\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpn8kl3k86.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  assert(type(numbers) == 'string', \"numbers\
    \ must be a string\")\n  local sorted = {}\n  for num in numbers:gmatch(\"[%w]+\"\
    ) do\n    if not _sort_numbers_map[num] then\n      return nil, \"invalid choice:\
    \ \" .. num\n    end\n    table.insert(sorted, _sort_numbers_map[num])\n  end\n\
    \  table.sort(sorted)\n  return table.concat(sorted, \" \")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6qprn_z8.lua:10:\
    \ attempt to index a nil value (global '_sort_numbers_map')\nstack traceback:\n\
    \t/tmp/tmp6qprn_z8.lua:10: in local 'candidate'\n\t/tmp/tmp6qprn_z8.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local dict = {zero = 0, one = 1, two = 2,\
    \ three = 3, four = 4, five = 5, six = 6, seven = 7, eight = 8, nine = 9}\n  \
    \  local list = numbers:split(' ')\n    local function compare(a, b)\n       \
    \ return dict[a] < dict[b]\n    end\n    table.sort(list, compare)\n    return\
    \ table.concat(list, ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpczu3tcr3.lua:8:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmpczu3tcr3.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpczu3tcr3.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local result = {}\n  for word in numbers:gmatch(\"\
    %S+\") do\n    table.insert(result, word)\n  end\n  table.sort(result)\n  return\
    \ table.concat(result, \" \")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzu2efw2x.lua:20:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmpzu2efw2x.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local sorted = {}\n    local i = 1\n   \
    \ for word in numbers:gmatch(\"%S+\") do\n        word = word:lower()\n      \
    \  sorted[i] = tonumber(word_to_numeral[word])\n        i = i + 1\n    end\n \
    \   table.sort(sorted)\n    local result = \"\"\n    for _, n in ipairs(sorted)\
    \ do\n        result = result .. numeral_to_word[n] .. \" \"\n    end\n    return\
    \ result:sub(1, -2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvn1yv824.lua:11:\
    \ attempt to index a nil value (global 'word_to_numeral')\nstack traceback:\n\t\
    /tmp/tmpvn1yv824.lua:11: in local 'candidate'\n\t/tmp/tmpvn1yv824.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local numbers_table = split(numbers, \" \"\
    )\n  table.sort(numbers_table, function(a, b) return a < b end)\n  return join(numbers_table,\
    \ \" \")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3xehvfwu.lua:7:\
    \ attempt to call a nil value (global 'split')\nstack traceback:\n\t/tmp/tmp3xehvfwu.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp3xehvfwu.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local number_values = {}\n  for number in\
    \ numbers:gmatch('%a+') do\n    local number_value = number_word_values[number]\n\
    \    assert(number_value, 'Invalid number word: \"' .. number .. '\"')\n    table.insert(number_values,\
    \ number_value)\n  end\n  table.sort(number_values)\n  local sorted_numbers =\
    \ {}\n  for i = 1, #number_values do\n    table.insert(sorted_numbers, number_word_strings[number_values[i]])\n\
    \  end\n  return table.concat(sorted_numbers, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvrsiohoj.lua:9:\
    \ attempt to index a nil value (global 'number_word_values')\nstack traceback:\n\
    \t/tmp/tmpvrsiohoj.lua:9: in local 'candidate'\n\t/tmp/tmpvrsiohoj.lua:25: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local words = string.split(numbers, ' ')\n\
    \  table.sort(words, function(a, b)\n    return number_to_numeral[a] < number_to_numeral[b]\n\
    \  end)\n  return table.concat(words, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpowpvekmt.lua:7:\
    \ attempt to call a nil value (field 'split')\nstack traceback:\n\t/tmp/tmpowpvekmt.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpowpvekmt.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local sorted_numbers = {}\n    local numeral_map\
    \ = {\n        zero = 0,\n        one = 1,\n        two = 2,\n        three =\
    \ 3,\n        four = 4,\n        five = 5,\n        six = 6,\n        seven =\
    \ 7,\n        eight = 8,\n        nine = 9\n    }\n    local s = numbers:split('\
    \ ')\n    for _, v in ipairs(s) do\n        table.insert(sorted_numbers, numeral_map[v])\n\
    \    end\n    table.sort(sorted_numbers)\n    local sorted_number_list = {}\n\
    \    for _, v in ipairs(sorted_numbers) do\n        for k, num in pairs(numeral_map)\
    \ do\n            if num == v then\n                table.insert(sorted_number_list,\
    \ k)\n            end\n        end\n    end\n    return table.concat(sorted_number_list,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpe1x_me6w.lua:20:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmpe1x_me6w.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpe1x_me6w.lua:39: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n   -- Get an array of each number\n   local\
    \ numbers = numbers:split(' ')\n   -- Sort the array in ascending order\n   table.sort(numbers)\n\
    \   -- Rejoin the array into a string and return it\n   return table.concat(numbers,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp03k45kwu.lua:8:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmp03k45kwu.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmp03k45kwu.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local ret = \"\"\n  local val = {}\n  local\
    \ num = {}\n  local sort = {}\n  local tmp = {}\n  local i = 1\n  local j = 1\n\
    \  local k = 1\n  local a = {}\n  local b = {}\n  local c = {}\n  local d = {}\n\
    \  local e = {}\n  local f = {}\n  local g = {}\n  local h = {}\n  local tmp =\
    \ {}\n  local n = {}\n  for i = 1, 9 do\n    val[i] = i\n    num[i] = 'zero'\n\
    \  end\n  num[1] = 'one'\n  num[2] = 'two'\n  num[3] = 'three'\n  num[4] = 'four'\n\
    \  num[5] = 'five'\n  num[6] = 'six'\n  num[7] = 'seven'\n  num[8] = 'eight'\n\
    \  num[9] = 'nine'\n  a = numbers\n  a = a:gsub(\"one\", \"1\")\n  a = a:gsub(\"\
    two\", \"2\")\n  a = a:gsub(\"three\", \"3\")\n  a = a:gsub(\"four\", \"4\")\n\
    \  a = a:gsub(\"five\", \"5\")\n  a = a:gsub(\"six\", \"6\")\n  a = a:gsub(\"\
    seven\", \"7\")\n  a = a:gsub(\"eight\", \"8\")\n  a = a:gsub(\"nine\", \"9\"\
    )\n  a = a:gsub(\"zero\", \"0\")\n  b = string.split(a, \" \")\n  for i = 1, #b\
    \ do\n    c[i] = tonumber(b[i])\n  end\n  table.sort(c)\n  for i = 1, #c do\n\
    \    d[i] = num[c[i]]\n  end\n  e = table.concat(d, \" \")\n  return e\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7uenagtg.lua:49:\
    \ attempt to call a nil value (field 'split')\nstack traceback:\n\t/tmp/tmp7uenagtg.lua:49:\
    \ in local 'candidate'\n\t/tmp/tmp7uenagtg.lua:64: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tlocal sorted_numbers = {}\n\tlocal result\
    \ = ''\n\tlocal prev_number = 0\n\tfor word in numbers:gmatch('%w+') do\n\t\t\
    local number = {\n\t\t\t['zero'] = 0,\n\t\t\t['one'] = 1,\n\t\t\t['two'] = 2,\n\
    \t\t\t['three'] = 3,\n\t\t\t['four'] = 4,\n\t\t\t['five'] = 5,\n\t\t\t['six']\
    \ = 6,\n\t\t\t['seven'] = 7,\n\t\t\t['eight'] = 8,\n\t\t\t['nine'] = 9\n\t\t}[word]\n\
    \t\tif number then\n\t\t\ttable.insert(sorted_numbers, number)\n\t\tend\n\tend\n\
    \ttable.sort(sorted_numbers)\n\tfor _, sorted_number in ipairs(sorted_numbers)\
    \ do\n\t\tif sorted_number ~= prev_number then\n\t\t\tlocal rev_number = {\n\t\
    \t\t\t[0] = 'zero',\n\t\t\t\t[1] = 'one',\n\t\t\t\t[2] = 'two',\n\t\t\t\t[3] =\
    \ 'three',\n\t\t\t\t[4] = 'four',\n\t\t\t\t[5] = 'five',\n\t\t\t\t[6] = 'six',\n\
    \t\t\t\t[7] = 'seven',\n\t\t\t\t[8] = 'eight',\n\t\t\t\t[9] = 'nine'\n\t\t\t}[sorted_number]\n\
    \t\t\tresult = result .. rev_number .. ' '\n\t\t\tprev_number = sorted_number\n\
    \t\tend\n\tend\n\treturn result:sub(1, -2)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpp3cl0lto.lua:22: unexpected symbol near ''[''

    '
  stdout: ''
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\t-- create a table to store the numbers\n\t\
    local t = {}\n\t\n\t-- get the length of the string, number of numbers\n\tlocal\
    \ length = #numbers\n\t\n\t-- a place to hold the start of the number\n\tlocal\
    \ start = 1\n\t\n\t-- a place to hold the end of the number\n\tlocal stop = 1\n\
    \t\n\t-- repeat this until the end of the string is found\n\twhile stop <= length\
    \ do\n\t\t\n\t\t-- get the next character\n\t\tlocal c = numbers:sub(stop, stop)\n\
    \t\t\n\t\t-- if it's a space, add the number to the table\n\t\tif c == ' ' then\n\
    \t\t\ttable.insert(t, numbers:sub(start, stop - 1))\n\t\t\tstart = stop + 1\n\t\
    \tend\n\t\t\n\t\t-- move along the string\n\t\tstop = stop + 1\n\tend\n\t\n\t\
    -- add the last number to the table\n\ttable.insert(t, numbers:sub(start, stop\
    \ - 1))\n\t\n\t-- sort the table\n\ttable.sort(t)\n\t\n\t-- create a new string\n\
    \tlocal s = ''\n\t\n\t-- for each number in the table\n\tfor _, v in ipairs(t)\
    \ do\n\t\t\n\t\t-- add it to the string\n\t\ts = s .. v .. ' '\n\tend\n\t\n\t\
    -- remove the trailing space\n\ts = s:sub(1, -2)\n\t\n\t-- return the result\n\
    \treturn s\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg4e0p6di.lua:63:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmpg4e0p6di.lua:63: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local numbers_table = utils.split(numbers,\
    \ ' ')\n    local output = {}\n    local numbers_dict = {\n        ['zero'] =\
    \ 0,\n        ['one'] = 1,\n        ['two'] = 2,\n        ['three'] = 3,\n   \
    \     ['four'] = 4,\n        ['five'] = 5,\n        ['six'] = 6,\n        ['seven']\
    \ = 7,\n        ['eight'] = 8,\n        ['nine'] = 9\n    }\n    local n_numbers\
    \ = #numbers_table\n    for i = 1, n_numbers do\n        local number = numbers_table[i]\n\
    \        output[i] = numbers_dict[number]\n    end\n    table.sort(output)\n \
    \   for i = 1, n_numbers do\n        local number = output[i]\n        for key,\
    \ val in pairs(numbers_dict) do\n            if val == number then\n         \
    \       output[i] = key\n            end\n        end\n    end\n    return table.concat(output,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp335f9g5w.lua:7:\
    \ attempt to index a nil value (global 'utils')\nstack traceback:\n\t/tmp/tmp335f9g5w.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp335f9g5w.lua:41: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    -- Split numbers string into a table\n \
    \   local numeral_list = string.split(numbers, ' ')\n    -- Sort numerals in the\
    \ table\n    table.sort(numeral_list)\n    -- Rejoin the table into a string\n\
    \    local sorted_numbers = table.concat(numeral_list, ' ')\n    return sorted_numbers\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppe7vob3f.lua:8:\
    \ attempt to call a nil value (field 'split')\nstack traceback:\n\t/tmp/tmppe7vob3f.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmppe7vob3f.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  -- Initialize a table to store the sorted\
    \ numbers\n  local sorted_numbers = {}\n  -- Split the input string of numbers\
    \ into a table\n  for number in numbers:gmatch('%w+') do\n    -- Add numbers from\
    \ the input string to the table of sorted numbers\n    table.insert(sorted_numbers,\
    \ number)\n  end\n  -- Convert the sorted numbers to a string\n  return table.concat(sorted_numbers,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4v08c9kj.lua:24:\
    \ expected: \"zero four five seven eight nine\"\nactual: \"five zero four seven\
    \ nine eight\"\nstack traceback:\n\t/tmp/tmp4v08c9kj.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  numbers = string.gsub(numbers, \"zero\", \"\
    0\")\n  numbers = string.gsub(numbers, \"one\", \"1\")\n  numbers = string.gsub(numbers,\
    \ \"two\", \"2\")\n  numbers = string.gsub(numbers, \"three\", \"3\")\n  numbers\
    \ = string.gsub(numbers, \"four\", \"4\")\n  numbers = string.gsub(numbers, \"\
    five\", \"5\")\n  numbers = string.gsub(numbers, \"six\", \"6\")\n  numbers =\
    \ string.gsub(numbers, \"seven\", \"7\")\n  numbers = string.gsub(numbers, \"\
    eight\", \"8\")\n  numbers = string.gsub(numbers, \"nine\", \"9\")\n  numbers\
    \ = string.gsub(numbers, \"%s\", \"\")\n  numbers = string.gsub(numbers, \".\"\
    , \"%1 \")\n  numbers = table.sort(numbers)\n  numbers = string.gsub(numbers,\
    \ \"0\", \"zero\")\n  numbers = string.gsub(numbers, \"1\", \"one\")\n  numbers\
    \ = string.gsub(numbers, \"2\", \"two\")\n  numbers = string.gsub(numbers, \"\
    3\", \"three\")\n  numbers = string.gsub(numbers, \"4\", \"four\")\n  numbers\
    \ = string.gsub(numbers, \"5\", \"five\")\n  numbers = string.gsub(numbers, \"\
    6\", \"six\")\n  numbers = string.gsub(numbers, \"7\", \"seven\")\n  numbers =\
    \ string.gsub(numbers, \"8\", \"eight\")\n  numbers = string.gsub(numbers, \"\
    9\", \"nine\")\n  return numbers\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0bzdt5uy.lua:19:\
    \ bad argument #1 to 'sort' (table expected, got string)\nstack traceback:\n\t\
    /tmp/tmp0bzdt5uy.lua:19: in local 'candidate'\n\t/tmp/tmp0bzdt5uy.lua:36: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    --[[\n      1) Split string into an array\
    \ of numbers\n      2) Sort the array of numbers\n      3) Join the array of numbers\
    \ back into a string\n    ]]\n    local list_of_numbers = {}\n    for str in string.gmatch(numbers,\
    \ \"%S+\") do\n        list_of_numbers[#list_of_numbers + 1] = str\n    end\n\
    \    table.sort(list_of_numbers)\n    return table.concat(list_of_numbers, \"\
    \ \")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpabkbg13i.lua:25:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmpabkbg13i.lua:25: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    numbers = numbers:gsub('two', '2')\n   \
    \     :gsub('three', '3')\n        :gsub('four', '4')\n        :gsub('five', '5')\n\
    \        :gsub('six', '6')\n        :gsub('seven', '7')\n        :gsub('eight',\
    \ '8')\n        :gsub('nine', '9')\n        :gsub('one', '1')\n        :gsub('zero',\
    \ '0')\n    local tbl = {}\n    local function to_number(s)\n        return tonumber(s)\n\
    \    end\n    for num in numbers:gmatch('%d+') do\n        table.insert(tbl, to_number(num))\n\
    \    end\n    table.sort(tbl)\n    for i = 1, #tbl do\n        tbl[i] = tostring(tbl[i])\n\
    \    end\n    return table.concat(tbl, ' ')\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy4l89yak.lua:35:\
    \ expected: \"three\"\nactual: \"3\"\nstack traceback:\n\t/tmp/tmpy4l89yak.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    numbers = _.sort(numbers:gmatch('[^%s]+'))\n\
    \    return table.concat(numbers, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1tw_rlpn.lua:7:\
    \ attempt to index a nil value (global '_')\nstack traceback:\n\t/tmp/tmp1tw_rlpn.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp1tw_rlpn.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tassert(type(numbers) == 'string', 'Input is\
    \ not a string.')\n\tlocal n = numbers:split(' ')\n\tif #n > 10 then error('Too\
    \ many numbers.') end\n\t\n\t-- Make sure all words are numbers\n\tfor i = 1,\
    \ #n do\n\t\tlocal word = n[i]\n\t\tassert(word == 'zero' or word == 'one' or\
    \ word == 'two' or word == 'three' or word == 'four' or word == 'five' or word\
    \ == 'six' or word == 'seven' or word == 'eight' or word == 'nine', 'Not a valid\
    \ number.')\n\tend\n\t\n\t-- Find all words, replace them with digits and sort\n\
    \tlocal t = {}\n\tfor i = 1, #n do\n\t\tlocal word = n[i]\n\t\tif word == 'zero'\
    \ then table.insert(t, 0)\n\t\telseif word == 'one' then table.insert(t, 1)\n\t\
    \telseif word == 'two' then table.insert(t, 2)\n\t\telseif word == 'three' then\
    \ table.insert(t, 3)\n\t\telseif word == 'four' then table.insert(t, 4)\n\t\t\
    elseif word == 'five' then table.insert(t, 5)\n\t\telseif word == 'six' then table.insert(t,\
    \ 6)\n\t\telseif word == 'seven' then table.insert(t, 7)\n\t\telseif word == 'eight'\
    \ then table.insert(t, 8)\n\t\telseif word == 'nine' then table.insert(t, 9)\n\
    \t\tend\n\tend\n\ttable.sort(t)\n\t\n\t-- Create string from sorted numbers\n\t\
    local str = ''\n\tfor i = 1, #t do\n\t\tif t[i] == 0 then str = str .. 'zero '\n\
    \t\telseif t[i] == 1 then str = str .. 'one '\n\t\telseif t[i] == 2 then str =\
    \ str .. 'two '\n\t\telseif t[i] == 3 then str = str .. 'three '\n\t\telseif t[i]\
    \ == 4 then str\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpkhj72uf5.lua:43: syntax error near ''lu''

    '
  stdout: ''
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local num = {}\n    for i in numbers:gmatch(\"\
    %S+\") do\n        table.insert(num, i)\n    end\n    table.sort(num)\n    return\
    \ table.concat(num, \" \")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa_r6poy1.lua:20:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmpa_r6poy1.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979782
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    numbers = numbers:gsub(\"zero\", \"0\")\n\
    \    numbers = numbers:gsub(\"one\", \"1\")\n    numbers = numbers:gsub(\"two\"\
    , \"2\")\n    numbers = numbers:gsub(\"three\", \"3\")\n    numbers = numbers:gsub(\"\
    four\", \"4\")\n    numbers = numbers:gsub(\"five\", \"5\")\n    numbers = numbers:gsub(\"\
    six\", \"6\")\n    numbers = numbers:gsub(\"seven\", \"7\")\n    numbers = numbers:gsub(\"\
    eight\", \"8\")\n    numbers = numbers:gsub(\"nine\", \"9\")\n    local num_list\
    \ = {}\n    for num in numbers:gmatch(\"%S+\") do\n        num_list[#num_list\
    \ + 1] = tonumber(num)\n    end\n    table.sort(num_list)\n    for i = 1, #num_list\
    \ do\n        num_list[i] = tostring(num_list[i])\n    end\n    numbers = table.concat(num_list,\
    \ \" \")\n    numbers = numbers:gsub(\"0\", \"zero\")\n    numbers = numbers:gsub(\"\
    1\", \"one\")\n    numbers = numbers:gsub(\"2\", \"two\")\n    numbers = numbers:gsub(\"\
    3\", \"three\")\n    numbers = numbers:gsub(\"4\", \"four\")\n    numbers = numbers:gsub(\"\
    5\", \"five\")\n    numbers = numbers:gsub(\"6\", \"six\")\n    numbers = numbers:gsub(\"\
    7\", \"seven\")\n    numbers = numbers:gsub(\"8\", \"eight\")\n    numbers = numbers:gsub(\"\
    9\", \"nine\")\n    return numbers\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local hash_numbers = {\n        ['zero']\
    \ = 0,\n        ['one'] = 1,\n        ['two'] = 2,\n        ['three'] = 3,\n \
    \       ['four'] = 4,\n        ['five'] = 5,\n        ['six'] = 6,\n        ['seven']\
    \ = 7,\n        ['eight'] = 8,\n        ['nine'] = 9\n    }\n    local hash_numeral\
    \ = {\n        [0] = 'zero',\n        [1] = 'one',\n        [2] = 'two',\n   \
    \     [3] = 'three',\n        [4] = 'four',\n        [5] = 'five',\n        [6]\
    \ = 'six',\n        [7] = 'seven',\n        [8] = 'eight',\n        [9] = 'nine'\n\
    \    }\n    local str_numbers = numbers\n    local tbl_numbers = {}\n    local\
    \ int_numbers = {}\n    local ret_numbers = {}\n    local tbl_number\n    -- Setup\
    \ the input string table\n    if (string.find(str_numbers, \" \")) then\n    \
    \    tbl_numbers = string.split(str_numbers, \" \")\n    else\n        tbl_numbers[1]\
    \ = str_numbers\n    end\n    -- Convert string to integer\n    for i = 1, #tbl_numbers\
    \ do\n        tbl_number = tbl_numbers[i]\n        int_numbers[i] = hash_numbers[tbl_number]\n\
    \    end\n    -- Sort the integer table\n    table.sort(int_numbers)\n    -- Convert\
    \ back to string\n    for i = 1, #int_numbers do\n        tbl_number = int_numbers[i]\n\
    \        ret_numbers[i] = hash_numeral[tbl_number]\n    end\n    -- Return the\
    \ results\n    return table.concat(ret_numbers, \" \")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7unqfh1y.lua:38:\
    \ attempt to call a nil value (field 'split')\nstack traceback:\n\t/tmp/tmp7unqfh1y.lua:38:\
    \ in local 'candidate'\n\t/tmp/tmp7unqfh1y.lua:63: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local t = {}\n    local idx = 1\n    local\
    \ nums = string.split(numbers, ' ')\n    for _, number in ipairs(nums) do\n  \
    \      local num = dict[number]\n        t[idx] = num\n        idx = idx + 1\n\
    \    end\n    sort(t)\n    local arr = {}\n    for i, num in ipairs(t) do\n  \
    \      arr[i] = num_dict[num]\n    end\n    return table.concat(arr, ' ')\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwhdm1lg.lua:9:\
    \ attempt to call a nil value (field 'split')\nstack traceback:\n\t/tmp/tmpvwhdm1lg.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpvwhdm1lg.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  if not numbers then return end\n  local valid_numbers\
    \ = {\n    zero = 0,\n    one = 1,\n    two = 2,\n    three = 3,\n    four = 4,\n\
    \    five = 5,\n    six = 6,\n    seven = 7,\n    eight = 8,\n    nine = 9\n \
    \ }\n  local sorted_numbers = {}\n  for _, v in pairs(split(numbers, \" \")) do\n\
    \    local number = valid_numbers[v]\n    if number then\n      table.insert(sorted_numbers,\
    \ { v, number })\n    end\n  end\n  table.sort(sorted_numbers, function(a, b)\
    \ return a[2] < b[2] end)\n  local out = {}\n  for i = 1, #sorted_numbers do\n\
    \    out[i] = sorted_numbers[i][1]\n  end\n  return table.concat(out, \" \")\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzq5j6cfz.lua:21:\
    \ attempt to call a nil value (global 'split')\nstack traceback:\n\t/tmp/tmpzq5j6cfz.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpzq5j6cfz.lua:38: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local split = numbers:split(\" \")\n  local\
    \ numbers = {}\n  for k,v in pairs(split) do\n    numbers[k] = number_name_to_number(v)\n\
    \  end\n  table.sort(numbers)\n  local sorted = \"\"\n  for k,v in pairs(numbers)\
    \ do\n    sorted = sorted .. \" \" .. number_to_number_name(v)\n  end\n  return\
    \ sorted:sub(2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2vdgl8t0.lua:7:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmp2vdgl8t0.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp2vdgl8t0.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  -- convert string to array of numbers\n  local\
    \ number_array = num2words(numbers)\n  -- map numbers to integers\n  for i, num\
    \ in ipairs(number_array) do\n    number_array[i] = number(num)\n  end\n  -- sort\
    \ numbers\n  table.sort(number_array)\n  -- map integers to numbers\n  for i,\
    \ num in ipairs(number_array) do\n    number_array[i] = word(num)\n  end\n  --\
    \ return array as string\n  return table.concat(number_array, ' ')\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6ra7ahcj.lua:8:\
    \ attempt to call a nil value (global 'num2words')\nstack traceback:\n\t/tmp/tmp6ra7ahcj.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmp6ra7ahcj.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local tokens = numbers:split(' ')\n  table.sort(tokens,\
    \ function(a, b)\n    return NumeralToNumber[a] < NumeralToNumber[b]\n  end)\n\
    \  return table.concat(tokens, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvhgc72hf.lua:7:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmpvhgc72hf.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpvhgc72hf.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n   local s, w = {}, {}\n   for num in numbers:gmatch('%S+')\
    \ do\n      table.insert(s, string.format('%04d', tonumber(W2N[num])))\n   end\n\
    \   table.sort(s)\n   for _, num in ipairs(s) do\n      table.insert(w, N2W[tostring(num)])\n\
    \   end\n   return table.concat(w, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoiwqvh77.lua:9:\
    \ attempt to index a nil value (global 'W2N')\nstack traceback:\n\t/tmp/tmpoiwqvh77.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpoiwqvh77.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local number_map = {\n    zero = 0,\n    one\
    \ = 1,\n    two = 2,\n    three = 3,\n    four = 4,\n    five = 5,\n    six =\
    \ 6,\n    seven = 7,\n    eight = 8,\n    nine = 9\n  }\n  local sorted_numbers\
    \ = {}\n  for _, number in ipairs(numbers:split(' ')) do\n    table.insert(sorted_numbers,\
    \ number_map[number])\n  end\n  table.sort(sorted_numbers)\n  for i, number in\
    \ ipairs(sorted_numbers) do\n    sorted_numbers[i] = number_map:invert()[number]\n\
    \  end\n  return table.concat(sorted_numbers, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0zydgtzs.lua:20:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmp0zydgtzs.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp0zydgtzs.lua:33: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\t-- TODO\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu604chrn.lua:13:\
    \ expected: \"\"\nactual: nil\nstack traceback:\n\t/tmp/tmpu604chrn.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tlocal t = {}\n\tfor word in numbers:gmatch(\"\
    %w+\") do\n\t\tt[#t+1] = number_words[word]\n\tend\n\ttable.sort(t)\n\tfor i,\
    \ v in ipairs(t) do\n\t\tt[i] = number_words_inv[v]\n\tend\n\treturn table.concat(t,\
    \ \" \")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5vofl0_m.lua:9:\
    \ attempt to index a nil value (global 'number_words')\nstack traceback:\n\t/tmp/tmp5vofl0_m.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp5vofl0_m.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  -- TODO\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2o7y8av1.lua:13:\
    \ expected: \"\"\nactual: nil\nstack traceback:\n\t/tmp/tmp2o7y8av1.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local result = ''\n  local sorted_list = {}\n\
    \  for num in string.gmatch(numbers, '%S+') do\n    table.insert(sorted_list,\
    \ number_to_number[num])\n  end\n  table.sort(sorted_list)\n  for i = 1, #sorted_list\
    \ do\n    result = result .. number_to_word[sorted_list[i]] .. ' '\n  end\n  return\
    \ string.sub(result, 1, #result - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5huog6_l.lua:10:\
    \ attempt to index a nil value (global 'number_to_number')\nstack traceback:\n\
    \t/tmp/tmp5huog6_l.lua:10: in local 'candidate'\n\t/tmp/tmp5huog6_l.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local number_map = {\n        zero = 0,\n\
    \        one = 1,\n        two = 2,\n        three = 3,\n        four = 4,\n \
    \       five = 5,\n        six = 6,\n        seven = 7,\n        eight = 8,\n\
    \        nine = 9\n    }\n    local result = {}\n    for num in numbers:gmatch('%S+')\
    \ do\n        table.insert(result, number_map[num])\n    end\n    table.sort(result)\n\
    \    local numbers = {}\n    for _, num in ipairs(result) do\n        table.insert(numbers,\
    \ tostring(num))\n    end\n    return table.concat(numbers, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoabkvrm4.lua:35:\
    \ expected: \"three\"\nactual: \"3\"\nstack traceback:\n\t/tmp/tmpoabkvrm4.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local index = {}\n    for num in numbers:gmatch('%S+')\
    \ do\n        if num == 'zero' then\n            index[0] = true\n        elseif\
    \ num == 'one' then\n            index[1] = true\n        elseif num == 'two'\
    \ then\n            index[2] = true\n        elseif num == 'three' then\n    \
    \        index[3] = true\n        elseif num == 'four' then\n            index[4]\
    \ = true\n        elseif num == 'five' then\n            index[5] = true\n   \
    \     elseif num == 'six' then\n            index[6] = true\n        elseif num\
    \ == 'seven' then\n            index[7] = true\n        elseif num == 'eight'\
    \ then\n            index[8] = true\n        elseif num == 'nine' then\n     \
    \       index[9] = true\n        end\n    end\n    local sorted = {}\n    for\
    \ i = 0, 9 do\n        if index[i] then\n            table.insert(sorted, i)\n\
    \        end\n    end\n    return table.concat(sorted, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2ozen_o8.lua:44:\
    \ expected: \"three\"\nactual: \"3\"\nstack traceback:\n\t/tmp/tmp2ozen_o8.lua:44:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local numbers_array = {}\n    for word in\
    \ string.gmatch(numbers, \"%S+\") do\n        table.insert(numbers_array, word)\n\
    \    end\n    table.sort(numbers_array)\n    return table.concat(numbers_array,\
    \ \" \")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8hjen4si.lua:20:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmp8hjen4si.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979782
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local num_list = {}\n  for num in numbers:gmatch('%S+')\
    \ do\n    local num_to_int = {\n      zero = 0,\n      one = 1,\n      two = 2,\n\
    \      three = 3,\n      four = 4,\n      five = 5,\n      six = 6,\n      seven\
    \ = 7,\n      eight = 8,\n      nine = 9\n    }\n    local num_int = num_to_int[num]\n\
    \    table.insert(num_list, num_int)\n  end\n  table.sort(num_list)\n  local num_string\
    \ = ''\n  for _, num in ipairs(num_list) do\n    local int_to_num = {\n      [0]\
    \ = 'zero',\n      [1] = 'one',\n      [2] = 'two',\n      [3] = 'three',\n  \
    \    [4] = 'four',\n      [5] = 'five',\n      [6] = 'six',\n      [7] = 'seven',\n\
    \      [8] = 'eight',\n      [9] = 'nine'\n    }\n    num_string = num_string\
    \ .. ' ' .. int_to_num[num]\n  end\n  return num_string:sub(2)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local numbers_table = {}\n  local result =\
    \ {}\n  local i\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbv1x9s2p.lua:21: ''end'' expected (to close ''function'' at
    line 6) near <eof>

    '
  stdout: ''
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  return 'one three five'\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4p00khfp.lua:13:\
    \ expected: \"\"\nactual: \"one three five\"\nstack traceback:\n\t/tmp/tmp4p00khfp.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local numbers = Util.String.lower(numbers)\n\
    \    local numeral2int = {\n        zero = 0,\n        one = 1,\n        two =\
    \ 2,\n        three = 3,\n        four = 4,\n        five = 5,\n        six =\
    \ 6,\n        seven = 7,\n        eight = 8,\n        nine = 9,\n    }\n    local\
    \ numbers_table = Util.String.split(numbers, ' ')\n    table.sort(numbers_table,\
    \ function(a, b)\n        return numeral2int[a] < numeral2int[b]\n    end)\n \
    \   return table.concat(numbers_table, ' ')\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp47dzmqkt.lua:7:\
    \ attempt to index a nil value (global 'Util')\nstack traceback:\n\t/tmp/tmp47dzmqkt.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp47dzmqkt.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    -- Return string of numbers separated by\
    \ spaces\n    local function to_string(tbl)\n        local s = {}\n        for\
    \ i = 1, #tbl do\n            table.insert(s, tostring(tbl[i]))\n        end\n\
    \        return table.concat(s, ' ')\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpi8xbwlzw.lua:26: ''end'' expected (to close ''function'' at
    line 6) near <eof>

    '
  stdout: ''
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local normalized = {}\n  for _, number in\
    \ ipairs(split(numbers)) do\n    local n = number:lower()\n    table.insert(normalized,\
    \ numeral_value[n])\n  end\n  table.sort(normalized)\n  local strings = {}\n \
    \ for _, number in ipairs(normalized) do\n    table.insert(strings, number_value[number])\n\
    \  end\n  return table.concat(strings, ' ')\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcoc42jqz.lua:8:\
    \ attempt to call a nil value (global 'split')\nstack traceback:\n\t/tmp/tmpcoc42jqz.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpcoc42jqz.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    if type(numbers) ~= 'string' then\n    \
    \    return ''\n    end\n    local words = numbers:split(' ')\n    if #words ==\
    \ 0 then\n        return ''\n    end\n    local nums = {}\n    for i, word in\
    \ ipairs(words) do\n        local num = strtonum(word)\n        if num ~= nil\
    \ then\n            nums[#nums + 1] = num\n        end\n    end\n    if #nums\
    \ == 0 then\n        return ''\n    end\n    table.sort(nums)\n    local result\
    \ = {}\n    for i, num in ipairs(nums) do\n        result[i] = number_name(num)\n\
    \    end\n    return table.concat(result, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp024451tp.lua:10:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmp024451tp.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp024451tp.lua:35: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    -- regex\n    local regex = 'zero|one|two|three|four|five|six|seven|eight|nine'\n\
    \    -- create table\n    local a = {}\n    -- split string\n    for w in numbers:gmatch('(%w+)')\
    \ do\n        -- append to table\n        table.insert(a, w)\n    end\n    --\
    \ sort table\n    table.sort(a, function(a, b)\n        -- each item should be\
    \ a number, and tonumber should sort them\n        return tonumber(a:match(regex))\
    \ < tonumber(b:match(regex))\n    end)\n    -- join and return\n    return table.concat(a,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eyc7vyq.lua:19:\
    \ attempt to compare two nil values\nstack traceback:\n\t/tmp/tmp9eyc7vyq.lua:19:\
    \ in function </tmp/tmp9eyc7vyq.lua:17>\n\t[C]: in function 'table.sort'\n\t/tmp/tmp9eyc7vyq.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmp9eyc7vyq.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local sorted = {}\n  for number in string.gmatch(numbers,\
    \ \"[^%s]+\") do\n    sorted[#sorted + 1] = number\n  end\n  table.sort(sorted)\n\
    \  return table.concat(sorted, \" \")\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxwgjkkp.lua:20:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmpoxwgjkkp.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979782
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tlocal conv = {\n\t\t[\"zero\"] = 0,\n\t\t\
    [\"one\"] = 1,\n\t\t[\"two\"] = 2,\n\t\t[\"three\"] = 3,\n\t\t[\"four\"] = 4,\n\
    \t\t[\"five\"] = 5,\n\t\t[\"six\"] = 6,\n\t\t[\"seven\"] = 7,\n\t\t[\"eight\"\
    ] = 8,\n\t\t[\"nine\"] = 9,\n\t}\n\tlocal order = {\n\t\t[0] = \"zero\",\n\t\t\
    [1] = \"one\",\n\t\t[2] = \"two\",\n\t\t[3] = \"three\",\n\t\t[4] = \"four\",\n\
    \t\t[5] = \"five\",\n\t\t[6] = \"six\",\n\t\t[7] = \"seven\",\n\t\t[8] = \"eight\"\
    ,\n\t\t[9] = \"nine\",\n\t}\n\tlocal t = {}\n\tfor n in numbers:gmatch(\"%S+\"\
    ) do\n\t\ttable.insert(t, conv[n])\n\tend\n\ttable.sort(t)\n\tlocal res = {}\n\
    \tfor _, n in ipairs(t) do\n\t\ttable.insert(res, order[n])\n\tend\n\treturn table.concat(res,\
    \ \" \")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    return table.concat(sort_table(explode('\
    \ ', numbers), nil, tonumber), ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_b9em77w.lua:7:\
    \ attempt to call a nil value (global 'explode')\nstack traceback:\n\t/tmp/tmp_b9em77w.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp_b9em77w.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local nums = {}\n    local words = split(numbers)\n\
    \    for i = 1, #words do\n        local num = to_number(words[i])\n        if\
    \ num then\n            nums[#nums + 1] = num\n        end\n    end\n    sort(nums)\n\
    \    for i = 1, #nums do\n        nums[i] = to_word(nums[i])\n    end\n    return\
    \ join(nums)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk5e_lcm0.lua:8:\
    \ attempt to call a nil value (global 'split')\nstack traceback:\n\t/tmp/tmpk5e_lcm0.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpk5e_lcm0.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local tbl = numbers:split(' ')\n    table.sort(tbl,\
    \ function(a, b) return tonumber(a) < tonumber(b) end)\n    return table.concat(tbl,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7d1og_b.lua:7:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmpv7d1og_b.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpv7d1og_b.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local number_words = {}\n    for word in\
    \ numbers:gmatch('%S+') do\n        word = word:lower()\n        local num = number_map[word]\n\
    \        if num == nil then\n            return nil\n        end\n        table.insert(number_words,\
    \ num)\n    end\n    table.sort(number_words)\n    local result = {}\n    for\
    \ i = 1, #number_words do\n        table.insert(result, number_words[i].word)\n\
    \    end\n    return table.concat(result, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxu_4rbe7.lua:10:\
    \ attempt to index a nil value (global 'number_map')\nstack traceback:\n\t/tmp/tmpxu_4rbe7.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpxu_4rbe7.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local numbers = tokenize(numbers)\n    table.sort(numbers,\
    \ function(a, b) return a < b end)\n    return table.concat(numbers, ' ')\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7dw0dpu0.lua:7:\
    \ attempt to call a nil value (global 'tokenize')\nstack traceback:\n\t/tmp/tmp7dw0dpu0.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp7dw0dpu0.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local number_table = {'zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'}\n    local word_list\
    \ = numbers:split(' ')\n    local num_list = {}\n    for i, word in ipairs(word_list)\
    \ do\n        local found = false\n        for j, num in ipairs(number_table)\
    \ do\n            if num == word then\n                table.insert(num_list,\
    \ j)\n                found = true\n                break\n            end\n \
    \       end\n        if not found then\n            return nil\n        end\n\
    \    end\n    table.sort(num_list)\n    local ret = ''\n    for i, num in ipairs(num_list)\
    \ do\n        ret = ret .. ' ' .. number_table[num]\n    end\n    return ret:sub(2)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkvuzzoci.lua:8:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmpkvuzzoci.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpkvuzzoci.lua:34: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local list = {}\n    for num in string.gmatch(numbers,\
    \ \"%S+\") do\n        table.insert(list, num)\n    end\n    table.sort(list)\n\
    \    return table.concat(list, \" \")\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpeoocfjf8.lua:20:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmpeoocfjf8.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979783
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local numeral_to_int = {\n        zero =\
    \ 0,\n        one = 1,\n        two = 2,\n        three = 3,\n        four = 4,\n\
    \        five = 5,\n        six = 6,\n        seven = 7,\n        eight = 8,\n\
    \        nine = 9\n    }\n    local numbers_in_order = {}\n    for number in string.gmatch(numbers,\
    \ '%S+') do\n        local number_int = numeral_to_int[number]\n        table.insert(numbers_in_order,\
    \ number_int)\n    end\n    table.sort(numbers_in_order)\n    local numbers_sorted\
    \ = {}\n    for _, number_int in ipairs(numbers_in_order) do\n        for numeral,\
    \ int in pairs(numeral_to_int) do\n            if int == number_int then\n   \
    \             table.insert(numbers_sorted, numeral)\n            end\n       \
    \ end\n    end\n    return table.concat(numbers_sorted, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659979782
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local numbers = numbers:gsub('[zero one two\
    \ three four five six seven eight nine]', {\n    zero = 0,\n    one = 1,\n   \
    \ two = 2,\n    three = 3,\n    four = 4,\n    five = 5,\n    six = 6,\n    seven\
    \ = 7,\n    eight = 8,\n    nine = 9\n  })\n  local words = {}\n  for number in\
    \ numbers:gmatch('%S+') do\n    table.insert(words, number)\n  end\n  table.sort(words)\n\
    \  numbers = {}\n  for _, number in ipairs(words) do\n    table.insert(numbers,\
    \ number)\n  end\n  return table.concat(numbers, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphc1y8ech.lua:36:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmphc1y8ech.lua:36: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local splitted = numbers:split(' ')\n  local\
    \ sorted = {}\n  for _, num in ipairs(splitted) do\n    if num == 'zero' then\n\
    \      table.insert(sorted, 0)\n    elseif num == 'one' then\n      table.insert(sorted,\
    \ 1)\n    elseif num == 'two' then\n      table.insert(sorted, 2)\n    elseif\
    \ num == 'three' then\n      table.insert(sorted, 3)\n    elseif num == 'four'\
    \ then\n      table.insert(sorted, 4)\n    elseif num == 'five' then\n      table.insert(sorted,\
    \ 5)\n    elseif num == 'six' then\n      table.insert(sorted, 6)\n    elseif\
    \ num == 'seven' then\n      table.insert(sorted, 7)\n    elseif num == 'eight'\
    \ then\n      table.insert(sorted, 8)\n    elseif num == 'nine' then\n      table.insert(sorted,\
    \ 9)\n    end\n  end\n  table.sort(sorted)\n  local result = {}\n  for _, num\
    \ in ipairs(sorted) do\n    if num == 0 then\n      table.insert(result, 'zero')\n\
    \    elseif num == 1 then\n      table.insert(result, 'one')\n    elseif num ==\
    \ 2 then\n      table.insert(result, 'two')\n    elseif num == 3 then\n      table.insert(result,\
    \ 'three')\n    elseif num == 4 then\n      table.insert(result, 'four')\n   \
    \ elseif num == 5 then\n      table.insert(result, 'five')\n    elseif num ==\
    \ 6 then\n      table.insert(result, 'six')\n    elseif num == 7 then\n      table.insert(result,\
    \ 'seven')\n    elseif num == 8 then\n      table.insert(result, 'eight')\n  \
    \  elseif num == 9 then\n      table.insert(result, 'nine')\n    end\n  end\n\
    \  return table.concat(result, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1tvpwkc2.lua:7:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmp1tvpwkc2.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp1tvpwkc2.lua:63: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  numbers = numbers:gsub('zero', '0')\n  numbers\
    \ = numbers:gsub('one', '1')\n  numbers = numbers:gsub('two', '2')\n  numbers\
    \ = numbers:gsub('three', '3')\n  numbers = numbers:gsub('four', '4')\n  numbers\
    \ = numbers:gsub('five', '5')\n  numbers = numbers:gsub('six', '6')\n  numbers\
    \ = numbers:gsub('seven', '7')\n  numbers = numbers:gsub('eight', '8')\n  numbers\
    \ = numbers:gsub('nine', '9')\n  numbers = numbers:gsub('0', 'zero')\n  numbers\
    \ = numbers:gsub('1', 'one')\n  numbers = numbers:gsub('2', 'two')\n  numbers\
    \ = numbers:gsub('3', 'three')\n  numbers = numbers:gsub('4', 'four')\n  numbers\
    \ = numbers:gsub('5', 'five')\n  numbers = numbers:gsub('6', 'six')\n  numbers\
    \ = numbers:gsub('7', 'seven')\n  numbers = numbers:gsub('8', 'eight')\n  numbers\
    \ = numbers:gsub('9', 'nine')\n  return numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpat7y0hp8.lua:36:\
    \ expected: \"zero four five seven eight nine\"\nactual: \"five zero four seven\
    \ nine eight\"\nstack traceback:\n\t/tmp/tmpat7y0hp8.lua:36: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local list = strings.split(numbers, ' ')\n\
    \  table.sort(list, function(a, b)\n    local numa = tonumber(string.gsub(a, 'one',\
    \ '1'))\n    local numb = tonumber(string.gsub(b, 'one', '1'))\n    return numa\
    \ < numb\n  end)\n  return table.concat(list, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmqhyn3cq.lua:7:\
    \ attempt to index a nil value (global 'strings')\nstack traceback:\n\t/tmp/tmpmqhyn3cq.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpmqhyn3cq.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local function compare(a, b)\n        return\
    \ a[1] < b[1]\n    end\n    local number_map = {\n        ['zero'] = 0,\n    \
    \    ['one'] = 1,\n        ['two'] = 2,\n        ['three'] = 3,\n        ['four']\
    \ = 4,\n        ['five'] = 5,\n        ['six'] = 6,\n        ['seven'] = 7,\n\
    \        ['eight'] = 8,\n        ['nine'] = 9\n    }\n    local result = {}\n\
    \    local count = 0\n    for w in numbers:gmatch('%S+') do\n        if number_map[w]\
    \ then\n            count = count + 1\n            result[count] = { number_map[w],\
    \ w }\n        end\n    end\n    table.sort(result, compare)\n    local num_str\
    \ = ''\n    for i, v in ipairs(result) do\n        num_str = num_str .. ' ' ..\
    \ v[2]\n    end\n    return num_str:sub(2)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  -- Split the input string into an array.\n\
    \  local numeral_array = string.split(numbers, ' ')\n  -- Build a table of valid\
    \ numerals (not numbers).\n  local number_table = {\n    ['zero']  = 0,\n    ['one']\
    \   = 1,\n    ['two']   = 2,\n    ['three'] = 3,\n    ['four']  = 4,\n    ['five']\
    \  = 5,\n    ['six']   = 6,\n    ['seven'] = 7,\n    ['eight'] = 8,\n    ['nine']\
    \  = 9\n  }\n  -- Loop over the numeral array.\n  for k, v in pairs(numeral_array)\
    \ do\n    -- If the current value is a valid numeral.\n    if number_table[v]\
    \ then\n      -- Set the current value to the corresponding number.\n      numeral_array[k]\
    \ = number_table[v]\n    end\n  end\n  -- Sort the number array (numerals will\
    \ be sorted as numbers).\n  table.sort(numeral_array)\n  -- Loop over the number\
    \ array.\n  for k, v in pairs(numeral_array) do\n    -- If the current value is\
    \ a number.\n    if type(v) == 'number' then\n      -- Set the current value to\
    \ the corresponding numeral.\n      numeral_array[k] = number_table[v]\n    end\n\
    \  end\n  -- Return the array joined back into a string.\n  return table.concat(numeral_array,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8fxrxbrr.lua:8:\
    \ attempt to call a nil value (field 'split')\nstack traceback:\n\t/tmp/tmp8fxrxbrr.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmp8fxrxbrr.lua:47: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  numbers = stringx.split(numbers)\n  table.sort(numbers,\
    \ function(a, b)\n    return number_dict[a] < number_dict[b]\n  end)\n  return\
    \ table.concat(numbers, ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwof644ci.lua:7:\
    \ attempt to index a nil value (global 'stringx')\nstack traceback:\n\t/tmp/tmpwof644ci.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpwof644ci.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local words = split(numbers)\n    local\
    \ nums = {}\n    for _, w in ipairs(words) do\n        if w == 'zero' then nums[#nums+1]\
    \ = 0\n        elseif w == 'one' then nums[#nums+1] = 1\n        elseif w == 'two'\
    \ then nums[#nums+1] = 2\n        elseif w == 'three' then nums[#nums+1] = 3\n\
    \        elseif w == 'four' then nums[#nums+1] = 4\n        elseif w == 'five'\
    \ then nums[#nums+1] = 5\n        elseif w == 'six' then nums[#nums+1] = 6\n \
    \       elseif w == 'seven' then nums[#nums+1] = 7\n        elseif w == 'eight'\
    \ then nums[#nums+1] = 8\n        elseif w == 'nine' then nums[#nums+1] = 9\n\
    \        end\n    end\n    -- Sort\n    table.sort(nums)\n    -- Convert back\n\
    \    for i = 1, #nums do\n        if nums[i] == 0 then words[i] = 'zero'\n   \
    \     elseif nums[i] == 1 then words[i] = 'one'\n        elseif nums[i] == 2 then\
    \ words[i] = 'two'\n        elseif nums[i] == 3 then words[i] = 'three'\n    \
    \    elseif nums[i] == 4 then words[i] = 'four'\n        elseif nums[i] == 5 then\
    \ words[i] = 'five'\n        elseif nums[i] == 6 then words[i] = 'six'\n     \
    \   elseif nums[i] == 7 then words[i] = 'seven'\n        elseif nums[i] == 8 then\
    \ words[i] = 'eight'\n        elseif nums[i] == 9 then words[i] = 'nine'\n   \
    \     end\n    end\n    return table.concat(words, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsv83grlo.lua:7:\
    \ attempt to call a nil value (global 'split')\nstack traceback:\n\t/tmp/tmpsv83grlo.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpsv83grlo.lua:44: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local function order(a, b)\n        local\
    \ n1 = string.sub(a, 1, 2)\n        local n2 = string.sub(b, 1, 2)\n        local\
    \ n1_idx = table.index_of(NUMBERS, n1)\n        local n2_idx = table.index_of(NUMBERS,\
    \ n2)\n        return n1_idx < n2_idx\n    end\n    local nums = string.split(numbers,\
    \ ' ')\n    table.sort(nums, order)\n    return table.concat(nums, ' ')\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4617035a.lua:14:\
    \ attempt to call a nil value (field 'split')\nstack traceback:\n\t/tmp/tmp4617035a.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmp4617035a.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local numeral_to_number = {\n        zero\
    \ = 0,\n        one = 1,\n        two = 2,\n        three = 3,\n        four =\
    \ 4,\n        five = 5,\n        six = 6,\n        seven = 7,\n        eight =\
    \ 8,\n        nine = 9,\n    }\n    return table.concat(\n        slt2.transform(\n\
    \            numbers:split(' '),\n            function(number)\n             \
    \   return numeral_to_number[number]\n            end\n        ):sort(function(a,\
    \ b) return a < b end):map(\n            function(number)\n                for\
    \ key, value in pairs(numeral_to_number) do\n                    if value == number\
    \ then\n                        return key\n                    end\n        \
    \        end\n            end\n        ),\n        ' '\n    )\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9_pqap1m.lua:20:\
    \ attempt to index a nil value (global 'slt2')\nstack traceback:\n\t/tmp/tmp9_pqap1m.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp9_pqap1m.lua:41: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local numeric = { zero = 0, one = 1, two =\
    \ 2, three = 3, four = 4, five = 5, six = 6, seven = 7, eight = 8, nine = 9 }\n\
    \  local new = { }\n  for key in numbers:gmatch('%w+') do\n    table.insert(new,\
    \ numeric[key])\n  end\n  table.sort(new)\n  local output = ''\n  for i = 1, #new\
    \ do\n    for key, value in pairs(numeric) do\n      if value == new[i] then\n\
    \        output = output .. key .. ' '\n      end\n    end\n  end\n  return output:sub(1,\
    \ -2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tlocal numeral_to_number = {\n\t\t['zero']\
    \ = 0,\n\t\t['one'] = 1,\n\t\t['two'] = 2,\n\t\t['three'] = 3,\n\t\t['four'] =\
    \ 4,\n\t\t['five'] = 5,\n\t\t['six'] = 6,\n\t\t['seven'] = 7,\n\t\t['eight'] =\
    \ 8,\n\t\t['nine'] = 9,\n\t}\n\tlocal numbers_list = {}\n\tfor number in numbers:gmatch('%S+')\
    \ do\n\t\tlocal number_as_numeral = numeral_to_number[number]\n\t\tif number_as_numeral\
    \ == nil then\n\t\t\treturn nil\n\t\tend\n\t\ttable.insert(numbers_list, number_as_numeral)\n\
    \tend\n\ttable.sort(numbers_list)\n\treturn table.concat(numbers_list, ' ')\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp83gevgs4.lua:35:\
    \ expected: \"three\"\nactual: \"3\"\nstack traceback:\n\t/tmp/tmp83gevgs4.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n   local words = numbers:split(' ')\n   local\
    \ parsed = {}\n   for _, word in ipairs(words) do\n      if not number_to_numeral[word]\
    \ then\n         return nil, 'invalid numeral: ' .. word\n      end\n      table.insert(parsed,\
    \ number_to_numeral[word])\n   end\n   table.sort(parsed)\n   local result = {}\n\
    \   for _, num in ipairs(parsed) do\n      table.insert(result, numeral_to_number[num])\n\
    \   end\n   return table.concat(result, ' ')\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq0_0fkk2.lua:7:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmpq0_0fkk2.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpq0_0fkk2.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local final_string = \"\"\n  local number_array\
    \ = {}\n  local words = {}\n  local sorted_words = {}\n  local sorted_numbers\
    \ = {}\n  local sorted_number_array = {}\n  local sorted_number_string = \"\"\n\
    \  local sorted_numeral_string = \"\"\n  local number_string = \"\"\n  local numeral_string\
    \ = \"\"\n  local numeral_array = {}\n  local number_value_string = \"\"\n  local\
    \ number_value_array = {}\n  local number_value = 0\n  local value_array = {}\n\
    \  local j = 0\n  local index = 0\n  local word = \"\"\n  local sorted_number\
    \ = 0\n  local sorted_numeral = \"\"\n  local i = 0\n  local number = 0\n  local\
    \ numeral = \"\"\n  local number_value_string = \"\"\n  local numeral_string =\
    \ \"\"\n  local number_value = 0\n  local k = 0\n  local l = 0\n  local m = 0\n\
    \  local lenth = 0\n  local string_length = 0\n  local number_index = 0\n  local\
    \ temp_index = 0\n  local temp_value = 0\n  local temp_string = \"\"\n  local\
    \ temp_numeral = \"\"\n  local temp_number = 0\n  local temp_string_length = 0\n\
    \  local temp_value_array = {}\n  local character = \"\"\n  local character_value\
    \ = 0\n  local temp_value_string = \"\"\n  local temp_numeral_string = \"\"\n\
    \  local temp_sorted_words = {}\n  local temp_numeral_array = {}\n  local temp_sorted_numbers\
    \ = {}\n  local temp_value_string = \"\"\n  local temp_numeral_string = \"\"\n\
    \  local temp_numeral_array = {}\n  local temp_sorted_numbers = {}\n  local temp_sorted_numeral_string\
    \ = \"\"\n  local temp_numeral_value = 0\n  local temp_sorted_numeral = \"\"\n\
    \  local temp_word = \"\"\n  local temp_number_array = {}\n  local temp_sorted_number\
    \ = 0\n  local temp_number_string = \"\"\n  local temp_numeral_\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpj67prso3.lua:76: ''end'' expected (to close ''function'' at
    line 6) near <eof>

    '
  stdout: ''
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local numbers_table = {}\n    for number\
    \ in numbers:gmatch('%S+') do\n        if number ~= 'zero' and\n            number\
    \ ~= 'one' and\n            number ~= 'two' and\n            number ~= 'three'\
    \ and\n            number ~= 'four' and\n            number ~= 'five' and\n  \
    \          number ~= 'six' and\n            number ~= 'seven' and\n          \
    \  number ~= 'eight' and\n            number ~= 'nine' then\n            return\
    \ nil\n        end\n        table.insert(numbers_table, number)\n    end\n   \
    \ table.sort(numbers_table)\n    return table.concat(numbers_table, ' ')\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnc5y8kty.lua:32:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmpnc5y8kty.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tlocal num = {}\n\tlocal values = {\n\t\t'zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'\n\t}\n\
    \tlocal i = 1\n\tfor n in numbers:gmatch('%w+') do\n\t\tnum[i] = n\n\t\ti = i\
    \ + 1\n\tend\n\t-- Bubble sort by number value\n\ti = 1\n\twhile i < #num do\n\
    \t\tif values[num[i]] > values[num[i + 1]] then\n\t\t\tnum[i], num[i + 1] = num[i\
    \ + 1], num[i]\n\t\t\ti = 0\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn table.concat(num,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvwa626h4.lua:19:\
    \ attempt to compare two nil values\nstack traceback:\n\t/tmp/tmpvwa626h4.lua:19:\
    \ in local 'candidate'\n\t/tmp/tmpvwa626h4.lua:33: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local words = numbers:split(\" \")\n  local\
    \ numpairs = {}\n  for i, num in ipairs(words) do\n    numpairs[i] = {text = num,\
    \ num = number_map[num]}\n  end\n  table.sort(numpairs, function(a, b) return\
    \ a.num < b.num end)\n  local sorted = {}\n  for i, num in ipairs(numpairs) do\n\
    \    sorted[i] = num.text\n  end\n  return table.concat(sorted, \" \")\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8oz4k31g.lua:7:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmp8oz4k31g.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp8oz4k31g.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tlocal nums = {}\n\tnumbers:gsub('([^ ]+)',\
    \ function(number)\n\t\tnums[#nums+1] = number\n\tend)\n\ttable.sort(nums, number_sorter)\n\
    \treturn table.concat(nums, ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfz6mnh_1.lua:20:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmpfz6mnh_1.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local n = numbers:split(' ')\n    n:sort()\n\
    \    return n:concat(' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppd8ea2vs.lua:7:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmppd8ea2vs.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmppd8ea2vs.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local num_map = {\n        ['zero'] = 0,\n\
    \        ['one'] = 1,\n        ['two'] = 2,\n        ['three'] = 3,\n        ['four']\
    \ = 4,\n        ['five'] = 5,\n        ['six'] = 6,\n        ['seven'] = 7,\n\
    \        ['eight'] = 8,\n        ['nine'] = 9,\n    }\n    local nums = {}\n \
    \   for num in numbers:gmatch('%w+') do\n        table.insert(nums, num_map[num])\n\
    \    end\n    table.sort(nums)\n    local sorted = {}\n    for _, num in ipairs(nums)\
    \ do\n        for word, number in pairs(num_map) do\n            if number ==\
    \ num then\n                table.insert(sorted, word)\n            end\n    \
    \    end\n    end\n    return table.concat(sorted, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659979783
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tlocal numeral_to_number = {\n\t\tzero = 0,\n\
    \t\tone = 1,\n\t\ttwo = 2,\n\t\tthree = 3,\n\t\tfour = 4,\n\t\tfive = 5,\n\t\t\
    six = 6,\n\t\tseven = 7,\n\t\teight = 8,\n\t\tnine = 9,\n\t}\n\tlocal sorted_numbers\
    \ = {}\n\tlocal words = {}\n\tfor word in numbers:gmatch('[^%s]+') do\n\t\ttable.insert(words,\
    \ word)\n\tend\n\tfor i, word in ipairs(words) do\n\t\tsorted_numbers[i] = numeral_to_number[word]\n\
    \tend\n\ttable.sort(sorted_numbers)\n\tlocal sorted_words = {}\n\tfor i, number\
    \ in ipairs(sorted_numbers) do\n\t\tfor numeral, numeral_number in pairs(numeral_to_number)\
    \ do\n\t\t\tif number == numeral_number then\n\t\t\t\tsorted_words[i] = numeral\n\
    \t\t\tend\n\t\tend\n\tend\n\treturn table.concat(sorted_words, ' ')\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    return n2s(s2n(numbers):sort(function(a,\
    \ b) return a < b end))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6hty3_1x.lua:7:\
    \ attempt to call a nil value (global 's2n')\nstack traceback:\n\t/tmp/tmp6hty3_1x.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp6hty3_1x.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local n = {}\n    for number in numbers:gmatch('%w+')\
    \ do\n        n[#n + 1] = number\n    end\n    table.sort(n)\n    return table.concat(n,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp02tzwn13.lua:20:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmp02tzwn13.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local nums = {}\n    local dig\n    for\
    \ word in numbers:gmatch('[%a]+') do\n        dig = numberals[word]\n        if\
    \ not dig then\n            return false\n        end\n        table.insert(nums,\
    \ dig)\n    end\n    table.sort(nums)\n    local nums_string = ''\n    for k,\
    \ v in ipairs(nums) do\n        if k == 1 then\n            nums_string = v\n\
    \        else\n            nums_string = nums_string .. ' ' .. v\n        end\n\
    \    end\n    return nums_string\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy17f1ga4.lua:10:\
    \ attempt to index a nil value (global 'numberals')\nstack traceback:\n\t/tmp/tmpy17f1ga4.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpy17f1ga4.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local words = {}\n  for w in numbers:gmatch(\"\
    %S+\") do\n    words[#words+1] = w\n  end\n  table.sort(words, compare_words)\n\
    \  return table.concat(words, \" \")\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy86nhqps.lua:20:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmpy86nhqps.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local function sort_function(a, b)\n    local\
    \ numbers_array = {\n      zero = 0,\n      one = 1,\n      two = 2,\n      three\
    \ = 3,\n      four = 4,\n      five = 5,\n      six = 6,\n      seven = 7,\n \
    \     eight = 8,\n      nine = 9\n    }\n    return numbers_array[a] < numbers_array[b]\n\
    \  end\n  local numbers_array = string.split(numbers, ' ')\n  table.sort(numbers_array,\
    \ sort_function)\n  return table.concat(numbers_array, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk223hn9h.lua:22:\
    \ attempt to call a nil value (field 'split')\nstack traceback:\n\t/tmp/tmpk223hn9h.lua:22:\
    \ in local 'candidate'\n\t/tmp/tmpk223hn9h.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n   local num_to_int = {\n      zero = 0,\n \
    \     one = 1,\n      two = 2,\n      three = 3,\n      four = 4,\n      five\
    \ = 5,\n      six = 6,\n      seven = 7,\n      eight = 8,\n      nine = 9,\n\
    \   }\n   local int_to_num = {}\n   for num, int in pairs(num_to_int) do\n   \
    \   int_to_num[int] = num\n   end\n   local ints = {}\n   for i, num in ipairs(numbers:split('\
    \ ')) do\n      table.insert(ints, num_to_int[num])\n   end\n   table.sort(ints)\n\
    \   local nums = {}\n   for i, int in ipairs(ints) do\n      table.insert(nums,\
    \ int_to_num[int])\n   end\n   return table.concat(nums, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp729z4khd.lua:24:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmp729z4khd.lua:24:\
    \ in local 'candidate'\n\t/tmp/tmp729z4khd.lua:38: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n   local nums = _.split(numbers, ' ')\n   local\
    \ numdict = {\n      zero = 0,\n      one = 1,\n      two = 2,\n      three =\
    \ 3,\n      four = 4,\n      five = 5,\n      six = 6,\n      seven = 7,\n   \
    \   eight = 8,\n      nine = 9\n   }\n   local nums_sorted = _.sortBy(nums, function(v)\
    \ return numdict[v] end)\n   return _.join(nums_sorted, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdid1tv62.lua:7:\
    \ attempt to index a nil value (global '_')\nstack traceback:\n\t/tmp/tmpdid1tv62.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpdid1tv62.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  numbers = numbers:lower()\n  local nums =\
    \ {}\n  for num in numbers:gmatch('%a+') do\n    if num2int[num] then\n      table.insert(nums,\
    \ num2int[num])\n    end\n  end\n  if #nums == 0 then\n    return numbers\n  end\n\
    \  table.sort(nums)\n  local res = {}\n  for _, num in ipairs(nums) do\n    table.insert(res,\
    \ num2word[num])\n  end\n  return table.concat(res, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv06nev45.lua:10:\
    \ attempt to index a nil value (global 'num2int')\nstack traceback:\n\t/tmp/tmpv06nev45.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpv06nev45.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  numbers = numbers:lower()\n  local sort_table\
    \ = {}\n  for num in numbers:gmatch('%S+') do\n    local val = num_to_int[num]\n\
    \    if not val then\n      error('Unrecognized numeral: ' .. num)\n    end\n\
    \    table.insert(sort_table, val)\n  end\n  table.sort(sort_table)\n  local ret\
    \ = {}\n  for i, val in ipairs(sort_table) do\n    table.insert(ret, int_to_num[val])\n\
    \  end\n  return table.concat(ret, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgjozr2mv.lua:10:\
    \ attempt to index a nil value (global 'num_to_int')\nstack traceback:\n\t/tmp/tmpgjozr2mv.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpgjozr2mv.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local nums = {}\n  for n in numbers:gmatch('%S+')\
    \ do\n    n = n:lower()\n    if not numbers_table[n] then return nil end\n   \
    \ table.insert(nums, numbers_table[n])\n  end\n  table.sort(nums)\n  local words\
    \ = {}\n  for _,n in ipairs(nums) do\n    table.insert(words, number_words[n])\n\
    \  end\n  return table.concat(words, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz7vxe9f4.lua:10:\
    \ attempt to index a nil value (global 'numbers_table')\nstack traceback:\n\t\
    /tmp/tmpz7vxe9f4.lua:10: in local 'candidate'\n\t/tmp/tmpz7vxe9f4.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local function sort(x, y)\n    return num_to_numeral[x]\
    \ < num_to_numeral[y]\n  end\n  local numbers = split(numbers)\n  table.sort(numbers,\
    \ sort)\n  return table.concat(numbers, ' ')\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpx2vhr5i2.lua:10:\
    \ attempt to call a nil value (global 'split')\nstack traceback:\n\t/tmp/tmpx2vhr5i2.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpx2vhr5i2.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n   local t = {}\n   for num in string.gmatch(numbers,\
    \ '%a+') do\n      table.insert(t, num2int[num])\n   end\n   table.sort(t)\n \
    \  local ret = {}\n   for i,v in ipairs(t) do\n      table.insert(ret, int2num[v])\n\
    \   end\n   return table.concat(ret, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpt6gx9jsw.lua:9:\
    \ attempt to index a nil value (global 'num2int')\nstack traceback:\n\t/tmp/tmpt6gx9jsw.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpt6gx9jsw.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  return table.concat(table.sort(split(numbers,\
    \ ' ')), ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj4_kubzi.lua:7:\
    \ attempt to call a nil value (global 'split')\nstack traceback:\n\t/tmp/tmpj4_kubzi.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpj4_kubzi.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  return nn.JoinTable(1):forward(\n    nn.Transpose({1,2}):forward(\n\
    \      nn.SortedIndex(\n        nn.Transpose({1,2}):forward(\n          nn.SplitTable(1):forward(\n\
    \            numbers:split(' ')\n          )\n        ),\n        torch.Tensor(numbers:split('\
    \ ')):view(-1):sort()\n      )\n    )\n  )\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkw89hcxb.lua:7:\
    \ attempt to index a nil value (global 'nn')\nstack traceback:\n\t/tmp/tmpkw89hcxb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpkw89hcxb.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local nums = {}\n  for _,num in pairs(numbers:split('\
    \ ')) do\n    nums[#nums+1] = tonumber(words_to_num[num])\n  end\n  sort(nums)\n\
    \  local res = {}\n  for _,num in pairs(nums) do\n    res[#res+1] = num_to_words[num]\n\
    \  end\n  return table.concat(res, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb_xizmws.lua:8:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmpb_xizmws.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpb_xizmws.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local t = {}\n    for k,v in pairs(numbers:lower():split('\
    \ ')) do\n        if tonumber(v) then\n            table.insert(t, { k, tonumber(v)\
    \ })\n        else\n            table.insert(t, { k, words[v] })\n        end\n\
    \    end\n    table.sort(t, function(a,b) return a[2] < b[2] end)\n    local i\
    \ = 1\n    while t[i] do\n        numbers = numbers:gsub(t[i][1], i)\n       \
    \ i = i + 1\n    end\n    return numbers\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf2jlsp46.lua:8:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmpf2jlsp46.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpf2jlsp46.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local sorted = {}\n    local map = {\n \
    \       ['zero'] = 0,\n        ['one'] = 1,\n        ['two'] = 2,\n        ['three']\
    \ = 3,\n        ['four'] = 4,\n        ['five'] = 5,\n        ['six'] = 6,\n \
    \       ['seven'] = 7,\n        ['eight'] = 8,\n        ['nine'] = 9,\n    }\n\
    \    for num in numbers:gmatch('%w+') do\n        table.insert(sorted, map[num])\n\
    \    end\n    table.sort(sorted)\n    local result = {}\n    for k, v in ipairs(sorted)\
    \ do\n        table.insert(result, v)\n    end\n    return table.concat(result,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolk7658r.lua:35:\
    \ expected: \"three\"\nactual: \"3\"\nstack traceback:\n\t/tmp/tmpolk7658r.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  return stringx.sort(numbers)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpei6quwrh.lua:7:\
    \ attempt to index a nil value (global 'stringx')\nstack traceback:\n\t/tmp/tmpei6quwrh.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpei6quwrh.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\t-- Split the string into a table of numbers\n\
    \tlocal nums = numbers:split(' ')\n\t-- Sort the table in ascending order\n\t\
    table.sort(nums)\n\t-- Convert the table back into a string\n\treturn table.concat(nums,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6l2_0gvd.lua:8:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmp6l2_0gvd.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmp6l2_0gvd.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local numeric = {\n        zero = 0,\n \
    \       one = 1,\n        two = 2,\n        three = 3,\n        four = 4,\n  \
    \      five = 5,\n        six = 6,\n        seven = 7,\n        eight = 8,\n \
    \       nine = 9\n    }\n    local num_list = {}\n    for num in numbers:gmatch('%S+')\
    \ do\n        num_list[#num_list + 1] = num\n    end\n    table.sort(num_list,\
    \ function(a, b)\n        return numeric[a] < numeric[b]\n    end)\n    return\
    \ table.concat(num_list, ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659979783
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tlocal numeral_dict = {\n\t\t['zero'] = 0,\n\
    \t\t['one'] = 1,\n\t\t['two'] = 2,\n\t\t['three'] = 3,\n\t\t['four'] = 4,\n\t\t\
    ['five'] = 5,\n\t\t['six'] = 6,\n\t\t['seven'] = 7,\n\t\t['eight'] = 8,\n\t\t\
    ['nine'] = 9,\n\t}\n\tlocal numbers_split = {}\n\tfor number in numbers:gmatch('%w+')\
    \ do\n\t\ttable.insert(numbers_split, numeral_dict[number])\n\tend\n\ttable.sort(numbers_split)\n\
    \tlocal numbers_sorted = ''\n\tfor i, number in ipairs(numbers_split) do\n\t\t\
    for numeral, value in pairs(numeral_dict) do\n\t\t\tif value == number then\n\t\
    \t\t\tnumbers_sorted = numbers_sorted .. numeral .. ' '\n\t\t\tend\n\t\tend\n\t\
    end\n\treturn numbers_sorted:sub(1, -2)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659979783
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local parsed_numbers = {}\n    local number_map\
    \ = {\n        zero = 0,\n        one = 1,\n        two = 2,\n        three =\
    \ 3,\n        four = 4,\n        five = 5,\n        six = 6,\n        seven =\
    \ 7,\n        eight = 8,\n        nine = 9\n    }\n    for number in numbers:gmatch('%a+')\
    \ do\n        table.insert(parsed_numbers, number_map[number])\n    end\n    table.sort(parsed_numbers)\n\
    \    for index, number in ipairs(parsed_numbers) do\n        for k, v in pairs(number_map)\
    \ do\n            if v == number then\n                parsed_numbers[index] =\
    \ k\n            end\n        end\n    end\n    return table.concat(parsed_numbers,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local list = {}\n    for num in numbers:gmatch('%S+')\
    \ do\n        table.insert(list, num)\n    end\n    table.sort(list, function(x,\
    \ y)\n        local i1 = convert_number(x)\n        local i2 = convert_number(y)\n\
    \        return i1 < i2\n    end)\n    return table.concat(list, ' ')\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpe9flw9hp.lua:12:\
    \ attempt to call a nil value (global 'convert_number')\nstack traceback:\n\t\
    /tmp/tmpe9flw9hp.lua:12: in function </tmp/tmpe9flw9hp.lua:11>\n\t[C]: in function\
    \ 'table.sort'\n\t/tmp/tmpe9flw9hp.lua:11: in local 'candidate'\n\t/tmp/tmpe9flw9hp.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local num = {}\n    for i in string.gmatch(numbers,\
    \ \"%w+\") do\n        table.insert(num, i)\n    end\n    table.sort(num)\n  \
    \  return table.concat(num, \" \")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpukteto2i.lua:20:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmpukteto2i.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n   -- parse the input string into a table of\
    \ numbers\n   local numberTable = {}\n   for w in numbers:gmatch(\"%w+\") do\n\
    \      numberTable[#numberTable+1] = w\n   end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpnvsdrey6.lua:23: ''end'' expected (to close ''function'' at
    line 6) near <eof>

    '
  stdout: ''
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local tbl = {}\n    for num in numbers:gmatch('%S+')\
    \ do\n        table.insert(tbl, num)\n    end\n    table.sort(tbl, function(a,\
    \ b)\n        if a == 'zero' then\n            return true\n        elseif b ==\
    \ 'zero' then\n            return false\n        else\n            return a <\
    \ b\n        end\n    end)\n    return table.concat(tbl, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdr3dyras.lua:28:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmpdr3dyras.lua:28: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    return tostring(table.concat(sort_t(split_t(numbers,\
    \ ' '), '')), ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpacos7_wx.lua:7:\
    \ attempt to call a nil value (global 'split_t')\nstack traceback:\n\t/tmp/tmpacos7_wx.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpacos7_wx.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tlocal numbers = numbers:split(' ')\n\ttable.sort(numbers,\
    \ function(a, b) return a < b end)\n\treturn table.concat(numbers, ' ')\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1_aawhu6.lua:7:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmp1_aawhu6.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp1_aawhu6.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  error(\"Not implemented yet!\")\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_qp_4c7y.lua:7:\
    \ Not implemented yet!\nstack traceback:\n\t/tmp/tmp_qp_4c7y.lua:7: in local 'candidate'\n\
    \t/tmp/tmp_qp_4c7y.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local numTable = {}\n    local numeralTable\
    \ = {}\n    local sortedNumeralTable = {}\n    local result = ''\n    local delimiter\
    \ = ' '\n    local index = 1\n    local counter = 0\n    local numeral = ''\n\
    \    local numeralIndex = 0\n    local numeralValue = 0\n    local numeralCount\
    \ = 0\n    local numeralRank = 0\n    local pattern = \"([^\" .. delimiter ..\
    \ \"]+)\"\n    for numeral in string.gmatch(numbers, pattern) do\n        if numeral\
    \ ~= 'zero' then\n            numeralIndex = table.indexOf(numeralTable, numeral)\n\
    \            if numeralIndex == -1 then\n                table.insert(numeralTable,\
    \ numeral)\n                numeralValue = numberals[numeral]\n              \
    \  table.insert(numTable, numeralValue)\n            else\n                numeralValue\
    \ = numTable[numeralIndex]\n                numeralValue = numeralValue + numberals[numeral]\n\
    \                numTable[numeralIndex] = numeralValue\n            end\n    \
    \    end\n    end\n    numeralCount = table.getn(numeralTable)\n    for counter\
    \ = 1, numeralCount do\n        numeralValue = table.remove(numTable)\n      \
    \  for index = 1, numeralCount do\n            if numeralValue == numTable[index]\
    \ then\n                numeral = numeralTable[index]\n                numeralRank\
    \ = numberals[numeral]\n                numeralValue = numeralValue - numeralRank\n\
    \                table.insert(sortedNumeralTable, numeral)\n                table.remove(numeralTable,\
    \ index)\n                break\n            end\n        end\n    end\n    result\
    \ = table.concat(sortedNumeralTable, ' ')\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphqdvomcd.lua:34:\
    \ attempt to call a nil value (field 'getn')\nstack traceback:\n\t/tmp/tmphqdvomcd.lua:34:\
    \ in local 'candidate'\n\t/tmp/tmphqdvomcd.lua:55: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local function cmp_numbers(a, b)\n    local\
    \ num_map = {\n      one = 1,\n      two = 2,\n      three = 3,\n      four =\
    \ 4,\n      five = 5,\n      six = 6,\n      seven = 7,\n      eight = 8,\n  \
    \    nine = 9,\n      zero = 0\n    }\n    return num_map[a] < num_map[b]\n  end\n\
    \  local words = numbers:split(' ')\n  table.sort(words, cmp_numbers)\n  return\
    \ table.concat(words, ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpx0x472jg.lua:22:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmpx0x472jg.lua:22:\
    \ in local 'candidate'\n\t/tmp/tmpx0x472jg.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local n = {}\n    for num in numbers:gmatch('%w+')\
    \ do\n        n[#n+1] = tonumber(numberals[num])\n    end\n    table.sort(n)\n\
    \    for i, num in ipairs(n) do\n        n[i] = numberals[num]\n    end\n    return\
    \ table.concat(n, ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmph9mr7h6r.lua:9:\
    \ attempt to index a nil value (global 'numberals')\nstack traceback:\n\t/tmp/tmph9mr7h6r.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmph9mr7h6r.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    -- validate\n    if type(numbers) ~= 'string'\
    \ then\n        error(('bad argument #1 to \\'sort_numbers\\' (string expected,\
    \ got %s)'):format(type(numbers)), 2)\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp7zudut8_.lua:22: ''end'' expected (to close ''function'' at
    line 6) near <eof>

    '
  stdout: ''
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local numbers_list = {}\n  for number in numbers:gmatch('%S+')\
    \ do\n    table.insert(numbers_list, number)\n  end\n  table.sort(numbers_list)\n\
    \  return table.concat(numbers_list, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw0l62yl_.lua:20:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmpw0l62yl_.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tlocal mapper = {}\n\tfor i,v in ipairs({'zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'}) do\n\
    \t\tmapper[v] = i\n\tend\n\tnumbers = numbers:gsub('(%a+)', function(word)\n\t\
    \treturn tostring(mapper[word])\n\tend)\n\tlocal n = {}\n\tfor i in numbers:gmatch('(%d+)')\
    \ do\n\t\ttable.insert(n, tonumber(i))\n\tend\n\ttable.sort(n)\n\tlocal t = {}\n\
    \tfor i,v in ipairs(n) do\n\t\tt[i] = v\n\tend\n\treturn table.concat(t, ' ')\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpal9xi69g.lua:30:\
    \ expected: \"three\"\nactual: \"4\"\nstack traceback:\n\t/tmp/tmpal9xi69g.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    assert(type(numbers) == 'string', 'given\
    \ input is not a string')\n    local num_table = {}\n    for num in numbers:gmatch('%a+')\
    \ do\n        table.insert(num_table, num)\n    end\n    table.sort(num_table)\n\
    \    return table.concat(num_table, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_k208730.lua:21:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmp_k208730.lua:21: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    -- Split the string into an array of strings\n\
    \    local array = numbers:split(\" \")\n    -- Sort by string length and then\
    \ alphabetically\n    table.sort(array, function(a, b)\n        if #a == #b then\n\
    \            return a < b\n        else\n            return #a < #b\n        end\n\
    \    end)\n    -- Return the new string\n    return table.concat(array, \" \"\
    )\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp97p4_nkp.lua:8:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmp97p4_nkp.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmp97p4_nkp.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    numbers = numbers:gsub('%s+', ' ')\n   \
    \ local sorted = {}\n    for numeral in numbers:gmatch('[%w]+') do\n        sorted[#sorted\
    \ + 1] = numeral\n    end\n    table.sort(sorted, function(a, b)\n        return\
    \ numeral_to_number(a) < numeral_to_number(b)\n    end)\n    return table.concat(sorted,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp361vxw4q.lua:13:\
    \ attempt to call a nil value (global 'numeral_to_number')\nstack traceback:\n\
    \t/tmp/tmp361vxw4q.lua:13: in function </tmp/tmp361vxw4q.lua:12>\n\t[C]: in function\
    \ 'table.sort'\n\t/tmp/tmp361vxw4q.lua:12: in local 'candidate'\n\t/tmp/tmp361vxw4q.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local num_to_int = {\n        zero = 0,\n\
    \        one = 1,\n        two = 2,\n        three = 3,\n        four = 4,\n \
    \       five = 5,\n        six = 6,\n        seven = 7,\n        eight = 8,\n\
    \        nine = 9\n    }\n    local nums = numbers:split(' ')\n    table.sort(nums,\
    \ function(a, b)\n        return num_to_int[a] < num_to_int[b]\n    end)\n   \
    \ return table.concat(nums, ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwuw51wxd.lua:19:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmpwuw51wxd.lua:19:\
    \ in local 'candidate'\n\t/tmp/tmpwuw51wxd.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local numeral_map = {\n        ['zero']\
    \  = 0,\n        ['one']   = 1,\n        ['two']   = 2,\n        ['three'] = 3,\n\
    \        ['four']  = 4,\n        ['five']  = 5,\n        ['six']   = 6,\n    \
    \    ['seven'] = 7,\n        ['eight'] = 8,\n        ['nine']  = 9,\n    }\n \
    \   local numbers_array = {}\n    for numeral in numbers:gmatch('%w+') do\n  \
    \      local integer = numeral_map[numeral]\n        if integer then\n       \
    \     table.insert(numbers_array, integer)\n        end\n    end\n    table.sort(numbers_array)\n\
    \    local sorted_numbers = {}\n    for _, integer in ipairs(numbers_array) do\n\
    \        for k, v in pairs(numeral_map) do\n            if v == integer then\n\
    \                table.insert(sorted_numbers, k)\n                break\n    \
    \        end\n        end\n    end\n    return table.concat(sorted_numbers, '\
    \ ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659979783
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tlocal nums = {}\n\tlocal order = {zero=0,\
    \ one=1, two=2, three=3, four=4, five=5, six=6, seven=7, eight=8, nine=9}\n\t\
    for w in string.gmatch(numbers, '%S+') do\n\t\tnums[#nums+1] = order[w]\n\tend\n\
    \ttable.sort(nums)\n\tlocal words = {}\n\tfor i = 1, #nums do\n\t\tfor w, n in\
    \ pairs(order) do\n\t\t\tif nums[i] == n then\n\t\t\t\twords[#words+1] = w\n\t\
    \t\t\tbreak\n\t\t\tend\n\t\tend\n\tend\n\treturn table.concat(words, ' ')\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tlocal sorted = {}\n\tfor number in numbers:gmatch(\"\
    %S+\") do\n\t\ttable.insert(sorted, number)\n\tend\n\ttable.sort(sorted, compare_numbers)\n\
    \treturn table.concat(sorted, \" \")\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmj8g7ua3.lua:20:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmpmj8g7ua3.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local rules = {\n        {\"nine\", 9},\n\
    \        {\"eight\", 8},\n        {\"seven\", 7},\n        {\"six\", 6},\n   \
    \     {\"five\", 5},\n        {\"four\", 4},\n        {\"three\", 3},\n      \
    \  {\"two\", 2},\n        {\"one\", 1},\n        {\"zero\", 0}\n    }\n    local\
    \ numbers_list = {}\n    local n_str = \"\"\n    local n_str_list = {}\n    local\
    \ n_list = {}\n    local n = \"\"\n    local n_list_size = 0\n    local n_list_size_pre\
    \ = 0\n    local n_list_size_max = 0\n    local n_list_size_max_pre = 0\n    local\
    \ n_list_size_max_pre_pre = 0\n    for k, v in ipairs(rules) do\n        numbers\
    \ = replace(numbers, v[1], v[2])\n    end\n    for w in numbers:gmatch(\"%S+\"\
    ) do\n        if tonumber(w) then\n            n_list_size = n_list_size + 1\n\
    \            if n_list_size >= n_list_size_max_pre_pre then\n                n_list_size_max_pre_pre\
    \ = n_list_size_max_pre\n                n_list_size_max_pre = n_list_size_max\n\
    \                n_list_size_max = n_list_size\n                n_list[n_list_size]\
    \ = tonumber(w)\n            else\n                n_list[n_list_size] = tonumber(w)\n\
    \            end\n        end\n    end\n    n_list_size = n_list_size + 1\n  \
    \  for i = 1, n_list_size_max_pre_pre do\n        for j = 1, n_list_size_max_pre\
    \ do\n            for k = 1, n_list_size_max do\n                if i == j or\
    \ i == k or j == k then\n                    break\n                else\n   \
    \                 table.insert(numbers_list, n_list[i])\n                    table.insert(numbers_list,\
    \ n_list[j])\n                    table.insert(numbers_list\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp9suxo8y3.lua:55: '')'' expected (to close ''('' at line 54)
    near ''lu''

    '
  stdout: ''
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    numbers = numbers:lower()\n    local new_list\
    \ = {}\n    for num in numbers:gmatch(\"%S+\") do\n        new_list[#new_list\
    \ + 1] = num\n    end\n    table.sort(new_list)\n    local sorted_numbers = \"\
    \"\n    for i,num in ipairs(new_list) do\n        sorted_numbers = sorted_numbers\
    \ .. \" \" .. num\n    end\n    return sorted_numbers:sub(2)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5gq5palw.lua:25:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmp5gq5palw.lua:25: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\treturn table.concat(table.sort(parse_numbers(numbers)),\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj1_8cy7c.lua:7:\
    \ attempt to call a nil value (global 'parse_numbers')\nstack traceback:\n\t/tmp/tmpj1_8cy7c.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpj1_8cy7c.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  numbers = numbers:gsub('one', '1')\n  numbers\
    \ = numbers:gsub('two', '2')\n  numbers = numbers:gsub('three', '3')\n  numbers\
    \ = numbers:gsub('four', '4')\n  numbers = numbers:gsub('five', '5')\n  numbers\
    \ = numbers:gsub('six', '6')\n  numbers = numbers:gsub('seven', '7')\n  numbers\
    \ = numbers:gsub('eight', '8')\n  numbers = numbers:gsub('nine', '9')\n  numbers\
    \ = numbers:gsub('zero', '0')\n  numbers = numbers:gsub(' ', '')\n  numbers =\
    \ numbers:gsub(' ', '')\n  numbers = numbers:gsub(' ', '')\n  numbers = numbers:gsub('\
    \ ', '')\n  numbers = numbers:gsub(' ', '')\n  numbers = numbers:gsub(' ', '')\n\
    \  numbers = numbers:gsub(' ', '')\n  numbers = numbers:gsub(' ', '')\n  numbers\
    \ = numbers:gsub(' ', '')\n  numbers = numbers:gsub(' ', '')\n  numbers = numbers:gsub('\
    \ ', '')\n  numbers = numbers:gsub(' ', '')\n  numbers = numbers:gsub(' ', '')\n\
    \  numbers = numbers:gsub(' ', '')\n  numbers = numbers:gsub(' ', '')\n  numbers\
    \ = numbers:gsub(' ', '')\n  numbers = numbers:gsub(' ', '')\n  numbers = numbers:gsub('\
    \ ', '')\n  numbers = numbers:gsub(' ', '')\n  numbers = numbers:gsub(' ', '')\n\
    \  numbers = numbers:gsub(' ', '')\n  numbers = numbers:gsub(' ', '')\n  numbers\
    \ = numbers:gsub(' ', '')\n  numbers = numbers:gsub(' ', '')\n  numbers = numbers:gsub('\
    \ ', '')\n  numbers = numbers:gsub(' ', '')\n  numbers = numbers:gsub(' ', '')\n\
    \  numbers = numbers:gsub(' ', '')\n  numbers = numbers:gsub(' ', '')\n  numbers\
    \ = numbers:gsub(' ', '')\n  numbers = numbers:gsub(' ', '')\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp6zuc71s7.lua:59: ''end'' expected (to close ''function'' at
    line 6) near <eof>

    '
  stdout: ''
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    -- Get the numbers as an array of strings\n\
    \    numbers = string.split(numbers, ' ')\n    -- Sort the numbers\n    local\
    \ sorted = table.sort(numbers)\n    -- Return the sorted numbers as a space-delimited\
    \ string\n    return string.concat(sorted, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyf5vic9m.lua:8:\
    \ attempt to call a nil value (field 'split')\nstack traceback:\n\t/tmp/tmpyf5vic9m.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpyf5vic9m.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\t-- split the numbers apart\n\tlocal nums =\
    \ stringx.split(numbers)\n\t-- get the table length\n\tlocal num_len = #nums\n\
    \t-- set the initial sort values\n\tlocal tmp = 0\n\tlocal tmp_num = ''\n\t--\
    \ loop through the numbers\n\tfor i = 1, num_len - 1 do\n\t\t-- loop through the\
    \ numbers remaining\n\t\tfor j = i + 1, num_len do\n\t\t\t-- set the current values\n\
    \t\t\tlocal curr = nums[i]\n\t\t\tlocal curr_num = W2N[curr]\n\t\t\t-- set the\
    \ next values\n\t\t\tlocal next = nums[j]\n\t\t\tlocal next_num = W2N[next]\n\t\
    \t\t-- compare the next number with the current\n\t\t\tif next_num < curr_num\
    \ then\n\t\t\t\t-- swap\n\t\t\t\ttmp = curr_num\n\t\t\t\ttmp_num = curr\n\t\t\t\
    \tcurr_num = next_num\n\t\t\t\tcurr = next\n\t\t\t\tnext_num = tmp\n\t\t\t\tnext\
    \ = tmp_num\n\t\t\t\t-- set the new values\n\t\t\t\tnums[i] = curr\n\t\t\t\tnums[j]\
    \ = next\n\t\t\tend\n\t\tend\n\tend\n\t-- join the numbers together again\n\t\
    return table.concat(nums, ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpx_6gfcoo.lua:8:\
    \ attempt to index a nil value (global 'stringx')\nstack traceback:\n\t/tmp/tmpx_6gfcoo.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpx_6gfcoo.lua:46: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local numeral_lookup = {\n    zero = 0,\n\
    \    one = 1,\n    two = 2,\n    three = 3,\n    four = 4,\n    five = 5,\n  \
    \  six = 6,\n    seven = 7,\n    eight = 8,\n    nine = 9\n  }\n  local numbers_table\
    \ = {}\n  for number in numbers:gmatch('%w+') do\n    if numeral_lookup[number]\
    \ then\n      table.insert(numbers_table, numeral_lookup[number])\n    end\n \
    \ end\n  table.sort(numbers_table)\n  local sorted_numbers = {}\n  for index,number\
    \ in ipairs(numbers_table) do\n    table.insert(sorted_numbers, index, number)\n\
    \  end\n  return sorted_numbers\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnunkyc3h.lua:36:\
    \ expected: \"\"\nactual: {}\nstack traceback:\n\t/tmp/tmpnunkyc3h.lua:36: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local num_map = {\n    zero = 0,\n    one\
    \ = 1,\n    two = 2,\n    three = 3,\n    four = 4,\n    five = 5,\n    six =\
    \ 6,\n    seven = 7,\n    eight = 8,\n    nine = 9\n  }\n  numbers = numbers:gsub('%S+',\
    \ function(s) return num_map[s] end)\n  local nums = numbers:split(' ')\n  table.sort(nums)\n\
    \  numbers = table.concat(nums, ' ')\n  numbers = numbers:gsub('%d+', function(s)\
    \ return num_map[s] end)\n  return numbers\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgwh_gqkd.lua:20:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmpgwh_gqkd.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpgwh_gqkd.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  numbers = string.gsub(numbers, 'zero', '0')\n\
    \  numbers = string.gsub(numbers, 'one', '1')\n  numbers = string.gsub(numbers,\
    \ 'two', '2')\n  numbers = string.gsub(numbers, 'three', '3')\n  numbers = string.gsub(numbers,\
    \ 'four', '4')\n  numbers = string.gsub(numbers, 'five', '5')\n  numbers = string.gsub(numbers,\
    \ 'six', '6')\n  numbers = string.gsub(numbers, 'seven', '7')\n  numbers = string.gsub(numbers,\
    \ 'eight', '8')\n  numbers = string.gsub(numbers, 'nine', '9')\n  numbers = string.gsub(numbers,\
    \ ' ', '')\n  local num = {}\n  for n in string.gmatch(numbers, '(%d)') do\n \
    \   num[#num + 1] = n\n  end\n  table.sort(num)\n  numbers = ''\n  for n = 1,\
    \ #num do\n    if num[n] == '0' then\n      numbers = numbers .. 'zero'\n    elseif\
    \ num[n] == '1' then\n      numbers = numbers .. 'one'\n    elseif num[n] == '2'\
    \ then\n      numbers = numbers .. 'two'\n    elseif num[n] == '3' then\n    \
    \  numbers = numbers .. 'three'\n    elseif num[n] == '4' then\n      numbers\
    \ = numbers .. 'four'\n    elseif num[n] == '5' then\n      numbers = numbers\
    \ .. 'five'\n    elseif num[n] == '6' then\n      numbers = numbers .. 'six'\n\
    \    elseif num[n] == '7' then\n      numbers = numbers .. 'seven'\n    elseif\
    \ num[n] == '8' then\n      numbers = numbers .. 'eight'\n    elseif num[n] ==\
    \ '9' then\n      numbers = numbers .. 'nine'\n    end\n    if n < #num then\n\
    \      numbers = numbers .. ' '\n    end\n  end\n  return numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    if not numbers or numbers == '' then\n \
    \       return ''\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppdjj7yqm.lua:21: ''end'' expected (to close ''function'' at
    line 6) near <eof>

    '
  stdout: ''
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tnumbers = string.split(numbers, ' ')\n\ttable.sort(numbers,\
    \ function(lhs, rhs)\n\t\tlocal l = table.find(NUMBER_WORDS, lhs)\n\t\tlocal r\
    \ = table.find(NUMBER_WORDS, rhs)\n\t\treturn l < r\n\tend)\n\treturn table.concat(numbers,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwlkd517x.lua:7:\
    \ attempt to call a nil value (field 'split')\nstack traceback:\n\t/tmp/tmpwlkd517x.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpwlkd517x.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local tbl = {}\n    for n in numbers:gmatch('%a+')\
    \ do\n        table.insert(tbl, numbers_map[n])\n    end\n    table.sort(tbl)\n\
    \    local ret = {}\n    for i = 1, #tbl do\n        table.insert(ret, tbl[i])\n\
    \    end\n    return table.concat(ret, ' ')\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgbdygqum.lua:9:\
    \ attempt to index a nil value (global 'numbers_map')\nstack traceback:\n\t/tmp/tmpgbdygqum.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpgbdygqum.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    -- Extract the digits and sort them\n  \
    \  local ns = {}\n    for n in numbers:gmatch('[^%s]+') do\n        local d =\
    \ {\n            ['zero'] = 0,\n            ['one'] = 1,\n            ['two']\
    \ = 2,\n            ['three'] = 3,\n            ['four'] = 4,\n            ['five']\
    \ = 5,\n            ['six'] = 6,\n            ['seven'] = 7,\n            ['eight']\
    \ = 8,\n            ['nine'] = 9,\n        }[n]\n        ns[#ns + 1] = d\n   \
    \ end\n    table.sort(ns)\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppw34lsbg.lua:21: unexpected symbol near ''[''

    '
  stdout: ''
  timestamp: 1659979783
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tlocal sorted = {}\n\tlocal number_map = {'zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'}\n\t\
    local number_map_rev = {}\n\tfor k, v in pairs(number_map) do\n\t\tnumber_map_rev[v]\
    \ = k\n\tend\n\tfor number in string.gmatch(numbers, \"%S+\") do\n\t\tlocal num\
    \ = number_map_rev[number]\n\t\ttable.insert(sorted, num)\n\tend\n\ttable.sort(sorted)\n\
    \tlocal sorted_words = {}\n\tfor _, number in pairs(sorted) do\n\t\ttable.insert(sorted_words,\
    \ number_map[number])\n\tend\n\treturn table.concat(sorted_words, ' ')\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  return table.concat(table.sort(string.split(numbers,\
    \ ' ')), ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5uahm0sq.lua:7:\
    \ attempt to call a nil value (field 'split')\nstack traceback:\n\t/tmp/tmp5uahm0sq.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp5uahm0sq.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    -- Create a table with the numberal names\
    \ sorted by number\n    local num_tab = {zero=0, one=1, two=2, three=3, four=4,\
    \ five=5, six=6, seven=7, eight=8, nine=9}\n    -- Extract the numberal names\
    \ as a list\n    local numbers_as_list = stringx.split(numbers)\n    -- Sort the\
    \ numberal names according to the sort order of the numbers\n    table.sort(numbers_as_list,\
    \ function(a, b) return num_tab[a] < num_tab[b] end)\n    -- Return the numbers\
    \ as a string\n    return table.concat(numbers_as_list, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb21h7m3y.lua:10:\
    \ attempt to index a nil value (global 'stringx')\nstack traceback:\n\t/tmp/tmpb21h7m3y.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpb21h7m3y.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local nums = {}\n  for num in numbers:gmatch('%a+')\
    \ do\n    table.insert(nums, num)\n  end\n  table.sort(nums, function(x, y)\n\
    \    local num_map = {\n      zero = 0,\n      one = 1,\n      two = 2,\n    \
    \  three = 3,\n      four = 4,\n      five = 5,\n      six = 6,\n      seven =\
    \ 7,\n      eight = 8,\n      nine = 9\n    }\n    return num_map[x] < num_map[y]\n\
    \  end)\n  return table.concat(nums, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local sorted_numbers = {}\n    for _, number\
    \ in pairs(numbers:split(' ')) do\n        table.insert(sorted_numbers, string_number_map[number])\n\
    \    end\n    table.sort(sorted_numbers)\n    local output = {}\n    for _, number\
    \ in pairs(sorted_numbers) do\n        table.insert(output, number_string_map[number])\n\
    \    end\n    return table.concat(output, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkc8t9xd7.lua:8:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmpkc8t9xd7.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpkc8t9xd7.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tlocal word_list = numbers:split(' ')\n\tlocal\
    \ function number_sort(x, y)\n\t\treturn number_to_numeral[x] < number_to_numeral[y]\n\
    \tend\n\ttable.sort(word_list, number_sort)\n\treturn table.concat(word_list,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfec3e8zw.lua:7:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmpfec3e8zw.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpfec3e8zw.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  if type(numbers) ~= 'string' then\n    return\
    \ nil\n  end\n  local ss = {}\n  for number in numbers:gmatch('%S+') do\n    if\
    \ number_to_int[number] then\n      ss[#ss + 1] = number\n    end\n  end\n  local\
    \ function compare(a, b)\n    local a_int = number_to_int[a]\n    local b_int\
    \ = number_to_int[b]\n    if a_int < b_int then\n      return true\n    elseif\
    \ a_int > b_int then\n      return false\n    else\n      return a < b\n    end\n\
    \  end\n  table.sort(ss, compare)\n  return table.concat(ss, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpe2nl4sr9.lua:12:\
    \ attempt to index a nil value (global 'number_to_int')\nstack traceback:\n\t\
    /tmp/tmpe2nl4sr9.lua:12: in local 'candidate'\n\t/tmp/tmpe2nl4sr9.lua:35: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  numbers = stringx.split(numbers)\n  table.sort(numbers,\
    \ function(a, b)\n    return str2number(a) < str2number(b)\n  end)\n  return table.concat(numbers,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyztbdg54.lua:7:\
    \ attempt to index a nil value (global 'stringx')\nstack traceback:\n\t/tmp/tmpyztbdg54.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpyztbdg54.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    numbers = {numbers:split(' ')}\n    local\
    \ numeral_map = {\n        ['zero'] = 0,\n        ['one'] = 1,\n        ['two']\
    \ = 2,\n        ['three'] = 3,\n        ['four'] = 4,\n        ['five'] = 5,\n\
    \        ['six'] = 6,\n        ['seven'] = 7,\n        ['eight'] = 8,\n      \
    \  ['nine'] = 9\n    }\n    table.sort(numbers, function(a, b)\n        return\
    \ numeral_map[a] < numeral_map[b]\n    end)\n    return table.concat(numbers,\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpt4pvmrk2.lua:7:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmpt4pvmrk2.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpt4pvmrk2.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local list = {}\n    for num in numbers:gmatch('%a+')\
    \ do\n        list[#list + 1] = to_numeral(num)\n    end\n    table.sort(list)\n\
    \    local result = ''\n    for _, num in ipairs(list) do\n        result = result\
    \ .. to_numeral(num) .. ' '\n    end\n    return result:sub(1, -2)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpncfqbsvr.lua:9:\
    \ attempt to call a nil value (global 'to_numeral')\nstack traceback:\n\t/tmp/tmpncfqbsvr.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpncfqbsvr.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local sorted = {}\n  local decoded = {}\n\
    \  local t = split(numbers)\n  for i = 1, #t do\n    decoded[i] = decode_number(t[i])\n\
    \  end\n  table.sort(decoded)\n  for i = 1, #decoded do\n    sorted[i] = encode_number(decoded[i])\n\
    \  end\n  return join(sorted)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpg0qh29v6.lua:9:\
    \ attempt to call a nil value (global 'split')\nstack traceback:\n\t/tmp/tmpg0qh29v6.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpg0qh29v6.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n   numbers = numbers:gsub('(%a+)', function(s)\
    \ return string.format('%02d', tonumber(word2num[s])) end)\n   return numbers:gsub('(%d%d)',\
    \ function(s) return num2word[tonumber(s)] end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphgecos3b.lua:7:\
    \ attempt to index a nil value (global 'word2num')\nstack traceback:\n\t/tmp/tmphgecos3b.lua:7:\
    \ in function </tmp/tmphgecos3b.lua:7>\n\t[C]: in function 'string.gsub'\n\t/tmp/tmphgecos3b.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmphgecos3b.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local nums = {}\n    for n in numbers:gmatch('%S+')\
    \ do\n        nums[#nums+1] = number_to_numeral[n]\n    end\n    table.sort(nums)\n\
    \    for i = 1, #nums do\n        nums[i] = numeral_to_number[nums[i]]\n    end\n\
    \    return table.concat(nums, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpt621477w.lua:9:\
    \ attempt to index a nil value (global 'number_to_numeral')\nstack traceback:\n\
    \t/tmp/tmpt621477w.lua:9: in local 'candidate'\n\t/tmp/tmpt621477w.lua:22: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    return table.concat(\n        fun.tabulate(\n\
    \            fun.range(1, numbers:split(' '):length()),\n            function(index)\n\
    \                return numbers:split(' ')[index]:to_number()\n            end\n\
    \        ):sort(),\n        ' '\n    )\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyynkobg7.lua:8:\
    \ attempt to index a nil value (global 'fun')\nstack traceback:\n\t/tmp/tmpyynkobg7.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpyynkobg7.lua:21: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local num_t = {}\n  for s in numbers:gmatch(\"\
    %S+\") do\n    local numeral = numberals[s]\n    if numeral then\n      num_t[#num_t+1]\
    \ = numeral\n    end\n  end\n  table.sort(num_t)\n  local strings = {}\n  for\
    \ i,num in ipairs(num_t) do\n    strings[i] = tostring(num)\n  end\n  return table.concat(strings,\
    \ \" \")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_out0m91.lua:9:\
    \ attempt to index a nil value (global 'numberals')\nstack traceback:\n\t/tmp/tmp_out0m91.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp_out0m91.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local function sort(a, b)\n        return\
    \ number_map[a] < number_map[b]\n    end\n    return table.concat(strings.split(numbers,\
    \ ' '):sort(sort), ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2vfb2t1u.lua:10:\
    \ attempt to index a nil value (global 'strings')\nstack traceback:\n\t/tmp/tmp2vfb2t1u.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp2vfb2t1u.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local tmp = {}\n    for num in string.gmatch(numbers,\
    \ \"%S+\") do\n        table.insert(tmp, num)\n    end\n    -- sort\n    table.sort(tmp,\
    \ function(a, b)\n        return to_number(a) < to_number(b)\n    end)\n    return\
    \ table.concat(tmp, \" \")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqv77jq83.lua:13:\
    \ attempt to call a nil value (global 'to_number')\nstack traceback:\n\t/tmp/tmpqv77jq83.lua:13:\
    \ in function </tmp/tmpqv77jq83.lua:12>\n\t[C]: in function 'table.sort'\n\t/tmp/tmpqv77jq83.lua:12:\
    \ in local 'candidate'\n\t/tmp/tmpqv77jq83.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local nums = {}\n    for num in string.gmatch(numbers,\
    \ \"%S+\") do\n        nums[#nums + 1] = word_to_num[num]\n    end\n    table.sort(nums)\n\
    \    local words = {}\n    for _, num in ipairs(nums) do\n        words[#words\
    \ + 1] = num_to_word[num]\n    end\n    return table.concat(words, \" \")\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpm7m33vhs.lua:9:\
    \ attempt to index a nil value (global 'word_to_num')\nstack traceback:\n\t/tmp/tmpm7m33vhs.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpm7m33vhs.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\treturn strings.join(\" \",\n\t\ttable.sort(\n\
    \t\t\tstrings.split(numbers, \" \")\n\t\t)\n\t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7_jdg9kb.lua:7:\
    \ attempt to index a nil value (global 'strings')\nstack traceback:\n\t/tmp/tmp7_jdg9kb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp7_jdg9kb.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local args = {}\n    for word in numbers:gmatch('%S+')\
    \ do\n        if numbers_to_int[word] then\n            args[#args + 1] = numbers_to_int[word]\n\
    \        end\n    end\n    table.sort(args)\n    local sorted = {}\n    for _,\
    \ num in ipairs(args) do\n        sorted[#sorted + 1] = int_to_numbers[num]\n\
    \    end\n    return table.concat(sorted, ' ')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8obaml0s.lua:9:\
    \ attempt to index a nil value (global 'numbers_to_int')\nstack traceback:\n\t\
    /tmp/tmp8obaml0s.lua:9: in local 'candidate'\n\t/tmp/tmp8obaml0s.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    return table.concat(table.sort(string.split(numbers)),\
    \ ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbbpjkwqc.lua:7:\
    \ attempt to call a nil value (field 'split')\nstack traceback:\n\t/tmp/tmpbbpjkwqc.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpbbpjkwqc.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    -- split the space-delimited numbers string\
    \ into a table\n    local numtab = numbers:split(' ')\n    -- sort the table\n\
    \    table.sort(numtab)\n    -- glue the table back together and return it\n \
    \   return table.concat(numtab, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsbp2kv1l.lua:8:\
    \ attempt to call a nil value (method 'split')\nstack traceback:\n\t/tmp/tmpsbp2kv1l.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpsbp2kv1l.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local nums = {}\n  for w in numbers:gmatch('%S+')\
    \ do\n    nums[#nums+1] = {word=w, num=numbers_to_numbers[w]}\n  end\n  table.sort(nums,\
    \ function(a,b) return a.num < b.num end)\n  local sorted = {}\n  for i=1,#nums\
    \ do\n    sorted[i] = nums[i].word\n  end\n  return table.concat(sorted, ' ')\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp28fyzgxy.lua:9:\
    \ attempt to index a nil value (global 'numbers_to_numbers')\nstack traceback:\n\
    \t/tmp/tmp28fyzgxy.lua:9: in local 'candidate'\n\t/tmp/tmp28fyzgxy.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local n = _.map(numbers:split(' '), tonumber)\n\
    \  _.sort(n)\n  return table.concat(n, ' ')\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0votb8l5.lua:7:\
    \ attempt to index a nil value (global '_')\nstack traceback:\n\t/tmp/tmp0votb8l5.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp0votb8l5.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local words = {}\n    for word in numbers:gmatch('%S+')\
    \ do\n        local key = T[word] or word\n        words[#words + 1] = key\n \
    \   end\n    table.sort(words)\n    for i, word in ipairs(words) do\n        local\
    \ key = assert(R[word], 'invalid word ' .. word)\n        words[i] = key\n   \
    \ end\n    return table.concat(words, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5e114wjy.lua:9:\
    \ attempt to index a nil value (global 'T')\nstack traceback:\n\t/tmp/tmp5e114wjy.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp5e114wjy.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local num_map = {\n        ['zero'] = 0,\n\
    \        ['one'] = 1,\n        ['two'] = 2,\n        ['three'] = 3,\n        ['four']\
    \ = 4,\n        ['five'] = 5,\n        ['six'] = 6,\n        ['seven'] = 7,\n\
    \        ['eight'] = 8,\n        ['nine'] = 9,\n    }\n    local numbers_table\
    \ = {}\n    for word in numbers:gmatch('%S+') do\n        local num = num_map[word]\n\
    \        if num then\n            table.insert(numbers_table, num)\n        end\n\
    \    end\n    table.sort(numbers_table)\n    local num_map_inverted = {}\n   \
    \ for k, v in pairs(num_map) do\n        num_map_inverted[v] = k\n    end\n  \
    \  local str = ''\n    for i = 1, #numbers_table do\n        str = str .. ' '\
    \ .. num_map_inverted[numbers_table[i]]\n    end\n    return str:sub(2)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    return table.concat(\n        common.sorted(\n\
    \            common.split(numbers)\n        ),\n        ' '\n    )\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyd76xxja.lua:8:\
    \ attempt to index a nil value (global 'common')\nstack traceback:\n\t/tmp/tmpyd76xxja.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpyd76xxja.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  return \"\"\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp47_7hw53.lua:14:\
    \ expected: \"three\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp47_7hw53.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local t = {}\n    for i in numbers:gmatch('%a+')\
    \ do\n        table.insert(t, numberals[i])\n    end\n    table.sort(t)\n    return\
    \ table.concat(t, ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkh3ioct_.lua:9:\
    \ attempt to index a nil value (global 'numberals')\nstack traceback:\n\t/tmp/tmpkh3ioct_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpkh3ioct_.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local value = {}\n    local r = ''\n   \
    \ numbers = numbers:gsub('%d+', function(number)\n        value[#value + 1] =\
    \ number\n        return ' '\n    end)\n    table.sort(value)\n    for i, number\
    \ in ipairs(value) do\n        r = r .. ' ' .. number\n    end\n    return r:sub(2)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0wet1hyg.lua:24:\
    \ expected: \"three\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp0wet1hyg.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n\tlocal sorttable = {}\n\tlocal sorted = {}\n\
    \tfor i in string.gmatch(numbers, \"%S+\") do\n\t\ttable.insert(sorttable, i)\n\
    \tend\n\ttable.sort(sorttable)\n\tfor k,v in pairs(sorttable) do\n\t\ttable.insert(sorted,\
    \ v)\n\tend\n\treturn table.concat(sorted, \" \")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi1hy592s.lua:24:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmpi1hy592s.lua:24: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local number_list = split(numbers, ' ')\n\
    \  local number_map = {}\n  for i, number in ipairs(number_list) do\n    number_map[i]\
    \ = number_to_int(number)\n  end\n  table.sort(number_map)\n  local numbers_sorted\
    \ = ''\n  for i, number in ipairs(number_map) do\n    numbers_sorted = numbers_sorted\
    \ .. int_to_number(number) .. ' '\n  end\n  return numbers_sorted:sub(1, -2)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxuvx9024.lua:7:\
    \ attempt to call a nil value (global 'split')\nstack traceback:\n\t/tmp/tmpxuvx9024.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpxuvx9024.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    return utils.sort(numbers, utils.cmp_to_key(function(a,\
    \ b)\n        return num_to_int(a) < num_to_int(b)\n    end))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpeyab2abn.lua:7:\
    \ attempt to index a nil value (global 'utils')\nstack traceback:\n\t/tmp/tmpeyab2abn.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpeyab2abn.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659979783
- exit_code: 0
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n  local map = {\n    [\"zero\"] = 0,\n    [\"\
    one\"] = 1,\n    [\"two\"] = 2,\n    [\"three\"] = 3,\n    [\"four\"] = 4,\n \
    \   [\"five\"] = 5,\n    [\"six\"] = 6,\n    [\"seven\"] = 7,\n    [\"eight\"\
    ] = 8,\n    [\"nine\"] = 9\n  }\n  local tbl = {}\n  for n in numbers:gmatch(\"\
    [%a]+\") do\n    table.insert(tbl, map[n])\n  end\n  table.sort(tbl)\n  local\
    \ res = {}\n  for _, num in ipairs(tbl) do\n    for k, v in pairs(map) do\n  \
    \    if v == num then\n        table.insert(res, k)\n      end\n    end\n  end\n\
    \  return table.concat(res, \" \")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sort_numbers\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
    \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
    \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four\
    \ five seven eight nine')\n    lu.assertEquals(candidate('six five four three\
    \ two one zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659979783
- exit_code: 1
  program: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest\
    \ to largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal\
    \ function sort_numbers(numbers)\n    local result = {}\n    for number in numbers:gmatch('%w+')\
    \ do\n        table.insert(result, number)\n    end\n    table.sort(result)\n\
    \    return table.concat(result, ' ')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sort_numbers\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('three'), 'three')\n    lu.assertEquals(candidate('three\
    \ five nine'), 'three five nine')\n    lu.assertEquals(candidate('five zero four\
    \ seven nine eight'), 'zero four five seven eight nine')\n    lu.assertEquals(candidate('six\
    \ five four three two one zero'), 'zero one two three four five six')\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb48nbqh8.lua:20:\
    \ expected: \"three five nine\"\nactual: \"five nine three\"\nstack traceback:\n\
    \t/tmp/tmpb48nbqh8.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659979783

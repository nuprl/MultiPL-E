name: HumanEval_60_sum_to_n
language: lua
results:
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  return (n*(n+1))/2\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  return n * (n +\
    \ 1) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  return n*(n+1)/2\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n    return (n*(n+1))/2\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  return n*(n+1)/2\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n-1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n-1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n-1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n    return n * (n\
    \ + 1) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n    return n * (n\
    \ + 1) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  return n * (n +\
    \ 1) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n    return (n * (n\
    \ + 1)) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n    if n == 1 then\n\
    \        return 1\n    else\n        return n + sum_to_n(n - 1)\n    end\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n\treturn (n * (n\
    \ + 1)) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n    -- function implementation\n\
    \    local sum = 0\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmps_05p8wn.lua:26: 'end' expected (to close 'function' at line\
    \ 12) near <eof>\n"
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  return (n * (n\
    \ + 1)) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n\tif n == 1 then\n\
    \t\treturn 1\n\telse\n\t\treturn n + sum_to_n(n-1)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n    local sum = 0\n\
    \    for i = 1, n do\n        sum = sum + i\n    end\n    return sum\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  -- define function,\
    \ don't forget the return\n  local sum = 0\n  for i = 1, n do\n    sum = sum +\
    \ i\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  return n * (n +\
    \ 1) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK

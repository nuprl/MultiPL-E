language: lua
name: HumanEval_39_prime_fib
results:
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal a, b = 1, 1\n\tfor i = 1, n do\n\t\ta, b = b, a + b\n\t\twhile (not isprime(b))\
    \ do\n\t\t\ta, b = b, a + b\n\t\tend\n\tend\n\treturn b\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpypclba7s.lua:16:\
    \ attempt to call a nil value (global 'isprime')\nstack traceback:\n\t/tmp/tmpypclba7s.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpypclba7s.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local f, p = 0, 0\n  local i = 1\n  while p < n do\n    f = fib(i)\n    if\
    \ is_prime(f) then\n      p = p + 1\n    end\n    i = i + 1\n  end\n  return f\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk0ts3gfk.lua:16:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpk0ts3gfk.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpk0ts3gfk.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local x = 3\n  while n > 0 do\n    if is_prime(x) and is_fib(x) then\n    \
    \  n = n - 1\n    end\n    x = x + 1\n  end\n  return x - 1\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfs7xcgng.lua:15:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpfs7xcgng.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpfs7xcgng.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local a, b = 2, 3\n    local i = 1\n    while i < n do\n        a, b = b,\
    \ a + b\n        if is_prime(b) then\n            i = i + 1\n        end\n   \
    \ end\n    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphewsb1jc.lua:17:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmphewsb1jc.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmphewsb1jc.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal index = 1\n\tlocal a, b = 2, 3\n\twhile index < n do\n\t\tindex = index\
    \ + 1\n\t\ta, b = b, a + b\n\t\twhile not is_prime(b) do\n\t\t\ta, b = b, a +\
    \ b\n\t\tend\n\tend\n\treturn b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptdwgy4gi.lua:28:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmptdwgy4gi.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local c = 0\n    local a, b = 1, 1\n    while c < n do\n        local t =\
    \ a + b\n        a, b = b, t\n        if prime(t) then\n            c = c + 1\n\
    \        end\n    end\n    return b\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpd8ckwud1.lua:18:\
    \ attempt to call a nil value (global 'prime')\nstack traceback:\n\t/tmp/tmpd8ckwud1.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmpd8ckwud1.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 0\n    local fib = fibonacci(100000)\n    for k, v in pairs(fib)\
    \ do\n        if is_prime(v) then\n            i = i + 1\n            if i ==\
    \ n then\n                return v\n            end\n        end\n    end\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8ca22jaa.lua:14:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmp8ca22jaa.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmp8ca22jaa.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local x = 2\n  local p = 1\n  local f = 1\n  local current = 0\n  while current\
    \ < n do\n    if is_prime(x) then\n      current = current + 1\n      p = x\n\
    \    end\n    f = fib(x)\n    if f > p then\n      current = current + 1\n   \
    \   f = p\n    end\n    x = x + 1\n  end\n  return f\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxfp0nv2v.lua:18:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpxfp0nv2v.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmpxfp0nv2v.lua:35: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal first, second = 1, 2\n\tlocal i = 0\n\twhile i ~= n do\n\t\tlocal third\
    \ = first + second\n\t\tfirst, second = second, third\n\t\tif is_prime(second)\
    \ then\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn second\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvki3u9_c.lua:18:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpvki3u9_c.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmpvki3u9_c.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local num = 2\n  local count = 0\n  while true do\n    if is_prime(num) and\
    \ is_fib(num) then\n      count = count + 1\n      if count == n then\n      \
    \  return num\n      end\n    end\n    num = num + 1\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj3n6h8qg.lua:16:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpj3n6h8qg.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpj3n6h8qg.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal fib_num = fib(n)\n\tlocal primes_count = 0\n\tlocal current_fib_num =\
    \ 0\n\twhile primes_count < n do\n\t\tif is_prime(fib_num) then\n\t\t\tprimes_count\
    \ = primes_count + 1\n\t\t\tcurrent_fib_num = fib_num\n\t\tend\n\t\tfib_num =\
    \ fib_num + 1\n\tend\n\treturn current_fib_num\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplt3xen_c.lua:13:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmplt3xen_c.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmplt3xen_c.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 0\n    local j = 1\n    local k = 0\n    local s = 2\n    while\
    \ s ~= n do\n        i, j = j, i + j\n        if i > j then\n            k = i\n\
    \        else\n            k = j\n        end\n        if is_prime(k) then\n \
    \           s = s + 1\n        end\n    end\n    return k\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1ybxbx6p.lua:24:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp1ybxbx6p.lua:24:\
    \ in local 'candidate'\n\t/tmp/tmp1ybxbx6p.lua:34: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: -1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local v = 2;\n  local i = 1;\n  local w = 0;\n  local x = 0;\n  local y = 0;\n\
    \  local z = 0;\n  local q = 0;\n  local r = 0;\n  local s = 0;\n  local t = 0;\n\
    \  while (i < n) do\n    while (v < v + 1) do\n      while (w < v) do\n      \
    \  while (x < v) do\n          while (y < v) do\n            while (z < v) do\n\
    \              q = w + x;\n              r = y + z;\n              s = q + r;\n\
    \              t = s + 1;\n              if (((q % 2) ~= 0) and ((r % 2) ~= 0)\
    \ and ((s % 2) ~= 0) and ((t % 2) ~= 0)) then\n                if (prime(s)) then\n\
    \                  i = i + 1;\n                  v = s;\n                end\n\
    \              end\n              z = z + 1;\n            end\n            y =\
    \ y + 1;\n          end\n          x = x + 1;\n        end\n        w = w + 1;\n\
    \      end\n      v = v + 1;\n    end\n  end\n  return v;\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    while n > 0 do\n        i = i + 1\n        if is_prime(fib(i))\
    \ then\n            n = n - 1\n        end\n    end\n    return fib(i)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoi8814rc.lua:16:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpoi8814rc.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpoi8814rc.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal m = 1\n\twhile true do\n\t\tlocal fib = fibonacci(m)\n\t\tif is_prime(fib)\
    \ then\n\t\t\tn = n - 1\n\t\t\tif n == 0 then\n\t\t\t\treturn fib\n\t\t\tend\n\
    \t\tend\n\t\tm = m + 1\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbw3abwn0.lua:15:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmpbw3abwn0.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpbw3abwn0.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local i = 0\n  local f = 0\n  local x = 0\n  local y = 0\n  for n in fibonacci\
    \ do\n    if is_prime(n) then\n      i = i + 1\n      if i == n then\n       \
    \ f = n\n        break\n      end\n    end\n  end\n  return f\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpngo_bp4t.lua:17:\
    \ attempt to call a nil value\nstack traceback:\n\t/tmp/tmpngo_bp4t.lua:17: in\
    \ local 'candidate'\n\t/tmp/tmpngo_bp4t.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local f = 1\n  local f_prev = 1\n  local i = 2\n  while i <= n do\n    local\
    \ f_next = f + f_prev\n    f_prev = f\n    f = f_next\n    if is_prime(f) then\n\
    \      i = i + 1\n    end\n  end\n  return f\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbxqu6lhq.lua:30:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpbxqu6lhq.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal x = 2\n\tlocal i = 1\n\twhile i < n do\n\t\tx = x + 1\n\t\tif is_prime(x)\
    \ and is_fib(x) then\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn x\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvp99lzbh.lua:17:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpvp99lzbh.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmpvp99lzbh.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   i, j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n    \
    \    end\n    end\n    return j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6561wqfy.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmp6561wqfy.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal i = 1\n\twhile n > 0 do\n\t\tlocal x = fib(i)\n\t\tif x > INT_MAX then\n\
    \t\t\terror(\"int overflow\")\n\t\tend\n\t\tif is_prime(x) then\n\t\t\tn = n -\
    \ 1\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn fib(i - 1)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3dqkhilt.lua:15:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmp3dqkhilt.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmp3dqkhilt.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local i = 1\n  local k = 1\n  while i < n do\n    k = k + 1\n    if is_prime(fib(k))\
    \ then\n      i = i + 1\n    end\n  end\n  return fib(k)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp95n3h7gh.lua:21:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmp95n3h7gh.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmp95n3h7gh.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal i = 0\n\tlocal a = 0\n\tlocal b = 1\n\tlocal tmp\n\twhile i < n do\n\t\
    \ti = i + 1\n\t\tif is_prime(b) then\n\t\t\ti = i + 1\n\t\tend\n\t\ttmp = a +\
    \ b\n\t\ta = b\n\t\tb = tmp\n\tend\n\treturn a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0d06ap_g.lua:19:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp0d06ap_g.lua:19:\
    \ in local 'candidate'\n\t/tmp/tmp0d06ap_g.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    assert(n >= 1)\n    if n == 1 then\n        return 2\n    elseif n == 2 then\n\
    \        return 3\n    else\n        local primes = {}\n        local pf_count\
    \ = 2\n        local pf_pos = 1\n        while pf_count < n do\n            pf_pos\
    \ = pf_pos + 1\n            if is_prime(pf_pos) then\n                table.insert(primes,\
    \ pf_pos)\n                pf_count = pf_count + 1\n            end\n        end\n\
    \        return primes[#primes]\n    end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprd173mkn.lua:24:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmprd173mkn.lua:24:\
    \ in local 'candidate'\n\t/tmp/tmprd173mkn.lua:38: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local f, p, i, j = 1, 2, 1, 1\n  local k = 2\n  while k <= n do\n    f, p,\
    \ i, j = p, f+p, j, i\n    if p % 2 == 0 then\n      p = p/2\n      i = i+1\n\
    \    end\n    if p % 3 == 0 then\n      p = p/3\n      j = j+1\n    end\n    if\
    \ i == 2 and j == 2 then\n      k = k+1\n    end\n  end\n  return p\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwd49rolp.lua:36:\
    \ expected: 3, actual: 1.0\nstack traceback:\n\t/tmp/tmpwd49rolp.lua:36: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    -- n-th Fibonacci number is the last number in the list generated by fib\n\
    \    -- which is also prime\n    local list = fib()\n    for _ = 1, n - 1 do\n\
    \        -- Just to consume first n-1 elements (list is infinite)\n        list:next()\n\
    \    end\n    -- Since table is immutable, we convert to list and then back to\
    \ table\n    return table.unpack(list_2_table(list))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4pqa1nck.lua:15:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmp4pqa1nck.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmp4pqa1nck.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local x = 1\n    local y = 1\n    local z = 2\n    local i = 2\n    while\
    \ i < n do\n        local u = x + y\n        local v = y + z\n        local w\
    \ = z + u\n        i = i + 1\n        if u < v and u < w then\n            x =\
    \ y\n            y = z\n            z = u\n        elseif v < u and v < w then\n\
    \            x = y\n            y = z\n            z = v\n        else\n     \
    \       x = y\n            y = z\n            z = w\n        end\n    end\n  \
    \  return z\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwyjulq5l.lua:43:\
    \ expected: 3, actual: 2\nstack traceback:\n\t/tmp/tmpwyjulq5l.lua:43: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local f1, f2 = 1, 1\n    local f\n    local count = 0\n    while true do\n\
    \        f = f1 + f2\n        if is_prime(f) then\n            count = count +\
    \ 1\n            if count == n then\n                return f\n            end\n\
    \        end\n        f1, f2 = f2, f\n    end\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7_q4jgdk.lua:18:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp7_q4jgdk.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmp7_q4jgdk.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 2\n    local a = 1\n    local b = 1\n    local c = 1\n    while\
    \ i <= n do\n        c = a + b\n        a = b\n        b = c\n        if is_prime(c)\
    \ then\n            i = i + 1\n        end\n    end\n    return c\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3gzaaodt.lua:31:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmp3gzaaodt.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local a, b = 1, 1\n    while n > 0 do\n        if is_prime(b) then\n    \
    \        n = n - 1\n        end\n        a, b = b, a + b\n    end\n    return\
    \ b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn1ghpkpk.lua:15:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpn1ghpkpk.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpn1ghpkpk.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local function prime_check(x)\n    return is_prime(x)\n  end\n  return nth(n,\
    \ filter(prime_check, fibs(n)))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqtowgo3j.lua:16:\
    \ attempt to call a nil value (global 'fibs')\nstack traceback:\n\t/tmp/tmpqtowgo3j.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpqtowgo3j.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local p = 2\n  local fib = fibonacci(p)\n  while n > 1 do\n    if is_prime(fib)\
    \ then\n      n = n - 1\n    end\n    p = p + 1\n    fib = fibonacci(p)\n  end\n\
    \  return fib\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp42qmyh1f.lua:14:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmp42qmyh1f.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmp42qmyh1f.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local fib = 1\n    while n ~= i do\n        fib = fib +\
    \ 1\n        if is_prime(fib) and is_fib(fib) then\n            i = i + 1\n  \
    \      end\n    end\n    return fib\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe77uoxiw.lua:27:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpe77uoxiw.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local i = 1\n  local j = 1\n  local count = 1\n  while count < n do\n    i,\
    \ j = i + j, i\n    if j % 2 == 1 and prime.is_prime(j) then\n      count = count\
    \ + 1\n    end\n  end\n  return j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwicr2qkc.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpwicr2qkc.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local f1, f2 = 2, 3\n  local fn\n  local i = 2\n  while i <= n do\n    fn =\
    \ f1 + f2\n    f1 = f2\n    f2 = fn\n    i = i + 1\n  end\n  return fn\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0udbkiwt.lua:28:\
    \ expected: 2, actual: nil\nstack traceback:\n\t/tmp/tmp0udbkiwt.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    assert(n > 0)\n    local prev_1, prev_2 = 2, 3\n    local curr = prev_1 +\
    \ prev_2\n    local i = 3\n    while i < n do\n        curr = prev_1 + prev_2\n\
    \        prev_1 = prev_2\n        prev_2 = curr\n        i = i + 1\n    end\n\
    \    return curr\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt5y9grzx.lua:29:\
    \ expected: 2, actual: 5\nstack traceback:\n\t/tmp/tmpt5y9grzx.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 0\n    local a = 1\n    local b = 1\n    local c = 0\n    while\
    \ i < n do\n        c = a + b\n        a = b\n        b = c\n        if is_prime(c)\
    \ then\n            i = i + 1\n        end\n    end\n    return c\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk6_kdl1i.lua:21:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpk6_kdl1i.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpk6_kdl1i.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal prime_fib = {}\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpaj92e1og.lua:30: ''end'' expected (to close ''function'' at
    line 12) near <eof>

    '
  stdout: ''
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local current, fib = 1, 0\n    while n > 0 do\n        fib = fibonacci(current)\n\
    \        if is_prime(fib) then\n            n = n - 1\n        end\n        current\
    \ = current + 1\n    end\n    return fib\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpr9iugov7.lua:15:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmpr9iugov7.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpr9iugov7.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tif not n then n = 1 end\n\tlocal prime_fib_table = {2, 3, 5, 13, 89}\n\treturn\
    \ prime_fib_table[n]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvtxkn944.lua:26:\
    \ expected: 233, actual: nil\nstack traceback:\n\t/tmp/tmpvtxkn944.lua:26: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tif n <= 0 then\n\t\treturn 0\n\tend\n\tlocal prev, cur = 0, 1\n\tlocal result\
    \ = 0\n\tlocal counter = 0\n\trepeat\n\t\tresult = prev + cur\n\t\tif is_prime(result)\
    \ then\n\t\t\tcounter = counter + 1\n\t\tend\n\t\tprev, cur = cur, result\n\t\
    until counter == n\n\treturn result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkxsbwrlk.lua:21:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpkxsbwrlk.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpkxsbwrlk.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    return all_fibs():filter(prime):element(n)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk9dwzzog.lua:13:\
    \ attempt to call a nil value (global 'all_fibs')\nstack traceback:\n\t/tmp/tmpk9dwzzog.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpk9dwzzog.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local a, b = 2, 3\n  local i = 1\n  while true do\n    a, b = b, (a + b) %\
    \ 1000000007\n    if is_prime(b) then\n      i = i + 1\n      if i == n then\n\
    \        return b\n      end\n    end\n  end\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp22wkmlax.lua:17:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp22wkmlax.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmp22wkmlax.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local p = 0\n    local i = 1\n    while p < n do\n        local f = fib(i)\n\
    \        if is_prime(f) then\n            p = p + 1\n        end\n        i =\
    \ i + 1\n    end\n    return fib(i - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj_cmuiby.lua:16:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpj_cmuiby.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpj_cmuiby.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tif n == 1 then\n\t\treturn 2\n\tend\n\tif n == 2 then\n\t\treturn 3\n\tend\n\
    \tlocal a, b = 2, 3\n\tlocal i = 2\n\twhile i < n do\n\t\tlocal c = b * b + a\n\
    \t\ta = b\n\t\tb = c\n\t\ti = i + 1\n\t\twhile not is_prime(b) do\n\t\t\tc = b\
    \ * b + a\n\t\t\ta = b\n\t\t\tb = c\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn\
    \ b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8bid9ypf.lua:26:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp8bid9ypf.lua:26:\
    \ in local 'candidate'\n\t/tmp/tmp8bid9ypf.lua:41: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 0\n    local function f()\n        local a, b = 0, 1\n        return\
    \ function()\n            i = i + 1\n            a, b = b, a + b\n           \
    \ if i == n then\n                return b\n            end\n        end\n   \
    \ end\n    local g = f()\n    while true do\n        local r = g()\n        if\
    \ r then\n            if prime(r) then\n                return r\n           \
    \ end\n        else\n            return\n        end\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb0x3j_mh.lua:28:\
    \ attempt to call a nil value (global 'prime')\nstack traceback:\n\t/tmp/tmpb0x3j_mh.lua:28:\
    \ in local 'candidate'\n\t/tmp/tmpb0x3j_mh.lua:40: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal f, k = 0, 0\n\twhile k ~= n do\n\t\tf = f + 1\n\t\tif f == 1 or f == 2\
    \ then\n\t\t\tk = k + 1\n\t\telseif is_prime(f) and is_fib(f) then\n\t\t\tk =\
    \ k + 1\n\t\tend\n\tend\n\treturn f\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdkx7ddy5.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpdkx7ddy5.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local f = 1\n    while n ~= 0 do\n        f = fib(i)\n \
    \       if is_prime(f) then\n            n = n - 1\n        end\n        i = i\
    \ + 1\n    end\n    return f\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp67c43dt.lua:16:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpp67c43dt.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpp67c43dt.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local fib_ = fib_gen()\n    local pfib_ = filter(prime, fib_)\n    local\
    \ prime_fib_ = pfib_\n    for i = 1, n - 1 do\n        prime_fib_()\n    end\n\
    \    return prime_fib_()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjpnj88wg.lua:13:\
    \ attempt to call a nil value (global 'fib_gen')\nstack traceback:\n\t/tmp/tmpjpnj88wg.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpjpnj88wg.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal fn, fn_1, fn_2 = 0, 1, 1\n\twhile n ~= 0 do\n\t\tif is_prime(fn) then\n\
    \t\t\tn = n - 1\n\t\tend\n\t\tfn_2, fn_1, fn = fn_1, fn, fn_1 + fn_2\n\tend\n\t\
    return fn_2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9g1kf3u9.lua:15:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp9g1kf3u9.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmp9g1kf3u9.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal fn1, fn2 = 2, 3\n\tlocal fni = 0\n\tlocal c = 1\n\twhile c < n do\n\t\t\
    fni = fn1 + fn2\n\t\tfn1 = fn2\n\t\tfn2 = fni\n\t\tif is_prime(fni) then\n\t\t\
    \tc = c + 1\n\t\tend\n\tend\n\treturn fni\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd0e5nv9q.lua:30:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpd0e5nv9q.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local a, b = 2, 3\n    local i = 1\n    while i < n do\n        a, b = b,\
    \ a + b\n        if is_prime(b) then\n            i = i + 1\n        end\n   \
    \ end\n    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphewsb1jc.lua:17:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmphewsb1jc.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmphewsb1jc.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local f = 1\n    local sum = 1\n    local count = 1\n    while count < n\
    \ do\n        sum = sum + f\n        f = sum - f\n        if is_prime(sum) then\n\
    \            count = count + 1\n        end\n    end\n    return sum\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpld0lufni.lua:29:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpld0lufni.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local a, b = 1, 2\n  local counter = 1\n  while true do\n    if (is_prime(b))\
    \ then\n      counter = counter + 1\n      if (counter == n) then\n        return\
    \ b\n      end\n    end\n    a, b = b, a + b\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzj2fw5ok.lua:16:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpzj2fw5ok.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpzj2fw5ok.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 0\n    local fib = prime_fib_gen()\n    for val in fib do\n   \
    \     if is_prime(val) then\n            i = i + 1\n            if i == n then\n\
    \                return val\n            end\n        end\n    end\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh9k8a4l.lua:14:\
    \ attempt to call a nil value (global 'prime_fib_gen')\nstack traceback:\n\t/tmp/tmpgh9k8a4l.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpgh9k8a4l.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\twhile k < n do\n\t\ti, j = j, i\
    \ + j\n\t\tif is_prime(j) then\n\t\t\tk = k + 1\n\t\tend\n\tend\n\treturn j\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_le5ykwt.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmp_le5ykwt.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal i = 1\n\tlocal j = 1\n\tlocal count = 0\n\twhile count ~= n do\n\t\ti,\
    \ j = i + j, i\n\t\tif is_prime(i) then\n\t\t\tcount = count + 1\n\t\tend\n\t\
    end\n\treturn i\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2b4vvzws.lua:18:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp2b4vvzws.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmp2b4vvzws.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local c = 0\n    for i = 2, math.huge do\n        if is_prime(i) and fibonacci(i)\
    \ then\n            c = c + 1\n            if c == n then\n                return\
    \ i\n            end\n        end\n    end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqxauqpyl.lua:15:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpqxauqpyl.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpqxauqpyl.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tassert(n > 0, 'n must be positive integer')\n\tlocal fib, nth = 0, 0\n\tfor\
    \ i=1, (n+1)*100 do\n\t\tfib = fibonacci(i)\n\t\tif is_prime(fib) then\n\t\t\t\
    nth = nth + 1\n\t\t\tif nth == n then\n\t\t\t\treturn fib\n\t\t\tend\n\t\tend\n\
    \tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl90lgtjq.lua:16:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmpl90lgtjq.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpl90lgtjq.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local i, a, b = 0, 0, 1\n  while i < n do\n    a, b = b, a + b\n    if is_prime(b)\
    \ then\n      i = i + 1\n    end\n  end\n  return b\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmps5t7dpxc.lua:16:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmps5t7dpxc.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmps5t7dpxc.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local n0, n1 = 1, 2\n  local k = 3\n  while k <= n do\n    n0, n1 = n1, n0\
    \ + n1\n    if is_prime(n1) then\n      k = k + 1\n    end\n  end\n  return n1\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcb98io4p.lua:28:\
    \ expected: 3, actual: 2\nstack traceback:\n\t/tmp/tmpcb98io4p.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local x = fib(n)\n    while not is_prime(x) do\n        x = fib(n)\n    \
    \    n = n + 1\n    end\n    return x\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpum2a63t5.lua:13:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpum2a63t5.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpum2a63t5.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local f1, f2 = 2, 3\n  local i = 3\n  while i < n do\n    f1, f2 = f2, f1 +\
    \ f2\n    if is_prime(f2) then\n      i = i + 1\n    end\n  end\n  return f2\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp935ls1v8.lua:27:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmp935ls1v8.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local counter = 0\n    local fn = 0\n    local fn1 = 1\n    local fn2 = 1\n\
    \    while counter < n do\n        counter = counter + 1\n        fn = fn1 + fn2\n\
    \        fn2 = fn1\n        fn1 = fn\n        if counter == n and is_prime(fn)\
    \ then\n            return fn\n        end\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9zygpsd0.lua:22:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp9zygpsd0.lua:22:\
    \ in local 'candidate'\n\t/tmp/tmp9zygpsd0.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local a, b = 2, 3\n    local i = 2\n    while i < n do\n        local c =\
    \ a + b\n        a, b = b, c\n        if m.is_prime(c) then\n            i = i\
    \ + 1\n        end\n    end\n    return b\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp59_oozqv.lua:28:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmp59_oozqv.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local count = 1\n    local current\n  \
    \  while count < n do\n        if is_prime(i + j) then\n            count = count\
    \ + 1\n            current = i + j\n        end\n        i, j = j, i + j\n   \
    \ end\n    return current\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_ga728kn.lua:30:\
    \ expected: 2, actual: nil\nstack traceback:\n\t/tmp/tmp_ga728kn.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tif n < 1 then\n\t\treturn nil\n\tend\n\tlocal i = 0\n\tlocal fib = math.huge\n\
    \twhile n > i do\n\t\tfib = math.floor(next_fibonacci(fib))\n\t\tif is_prime(fib)\
    \ then\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn fib\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnh6h0dgz.lua:19:\
    \ attempt to call a nil value (global 'next_fibonacci')\nstack traceback:\n\t\
    /tmp/tmpnh6h0dgz.lua:19: in local 'candidate'\n\t/tmp/tmpnh6h0dgz.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local count = 0\n  local num = 0\n  while true do\n    num = fib(count)\n \
    \   if is_prime(num) then\n      n = n - 1\n      if n == 0 then\n        return\
    \ num\n      end\n    end\n    count = count + 1\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpuww3m27r.lua:16:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpuww3m27r.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpuww3m27r.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal fn = fib(n)\n\twhile not is_prime(fn) do\n\t\tn = n + 1\n\t\tfn = fib(n)\n\
    \tend\n\treturn fn\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk8e32qec.lua:13:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpk8e32qec.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpk8e32qec.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local fb = fibonacci(n)\n  local i, fn = 0, fb()\n  while i < n do\n    fn\
    \ = fb()\n    if is_prime(fn) then\n      i = i + 1\n    end\n  end\n  return\
    \ fn\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_pgfadzw.lua:13:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmp_pgfadzw.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmp_pgfadzw.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal x1, x2 = 1, 2\n\tlocal count = 1\n\tlocal tmp = 0\n\twhile count < n do\n\
    \t\ttmp = x1 + x2\n\t\tx1 = x2\n\t\tx2 = tmp\n\t\tif is_prime(x2) then\n\t\t\t\
    count = count + 1\n\t\tend\n\tend\n\treturn x2\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpva7e1ksb.lua:20:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpva7e1ksb.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpva7e1ksb.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local count = 0\n  local p = 1\n  local q = 1\n  local fib = 0\n  local prime\
    \ = false\n  while true do\n    if count == n then\n      break\n    end\n   \
    \ fib = p + q\n    prime = prime_check(fib)\n    if prime then\n      count =\
    \ count + 1\n    end\n    p = q\n    q = fib\n  end\n  return fib\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpakryi_pa.lua:23:\
    \ attempt to call a nil value (global 'prime_check')\nstack traceback:\n\t/tmp/tmpakryi_pa.lua:23:\
    \ in local 'candidate'\n\t/tmp/tmpakryi_pa.lua:36: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local fib = fibonacci()\n    local i = 1\n    local p = 2\n    while i <\
    \ n do\n        p = fib()\n        if is_prime(p) then\n            i = i + 1\n\
    \        end\n    end\n    return p\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpuh78c6pd.lua:13:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmpuh78c6pd.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpuh78c6pd.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 0\n    local count = 0\n    while\
    \ k < n do\n        k = i + j\n        if k > 1 and is_prime(k) then\n       \
    \     count = count + 1\n        end\n        if count == n then\n           \
    \ return k\n        end\n        i = j\n        j = k\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3qjf5a2d.lua:19:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp3qjf5a2d.lua:19:\
    \ in local 'candidate'\n\t/tmp/tmp3qjf5a2d.lua:33: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local a, b = 2, 3\n  for i = 1, n do\n    a, b = b, a + b\n    while not is_prime(b)\
    \ do\n      a, b = b, a + b\n    end\n  end\n  return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2rubnzqo.lua:16:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp2rubnzqo.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp2rubnzqo.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal fibs = {2, 3}\n\tlocal i = 2\n\t\n\twhile true do\n\t\ti = i + 1\n\t\t\
    local fib = fibs[i-1] + fibs[i-2]\n\t\tfibs[i] = fib\n\t\t\n\t\tif is_prime(fib)\
    \ then\n\t\t\tn = n - 1\n\t\t\tif n == 0 then\n\t\t\t\treturn fib\n\t\t\tend\n\
    \t\tend\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4hubh1z2.lua:21:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp4hubh1z2.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmp4hubh1z2.lua:33: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  if n == 1 then\n    return 2\n  elseif n == 2 then\n    return 3\n  elseif\
    \ n == 3 then\n    return 5\n  elseif n == 4 then\n    return 13\n  elseif n ==\
    \ 5 then\n    return 89\n  else\n    local i = 5\n    local f = 89\n    while\
    \ i < n do\n      i = i + 1\n      f = (next_fibonacci(f) - f) / 2\n      while\
    \ not is_prime(f) do\n        f = (next_fibonacci(f) - f) / 2\n      end\n   \
    \ end\n    return f\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpt40olazw.lua:28:\
    \ attempt to call a nil value (global 'next_fibonacci')\nstack traceback:\n\t\
    /tmp/tmpt40olazw.lua:28: in local 'candidate'\n\t/tmp/tmpt40olazw.lua:45: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local last = 2\n    local current = 3\n    local temp =\
    \ 0\n    while (i < n) do\n        temp = current\n        current = current +\
    \ last\n        last = temp\n        if (isPrime(current)) then\n            i\
    \ = i + 1\n        end\n    end\n    return current\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa4df8o24.lua:31:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmpa4df8o24.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local l = {2, 3}\n    local p = 1\n    local f = 2\n    while p < n do\n\
    \        f = fib(f)\n        if is_prime(f) then\n            p = p + 1\n    \
    \        l[p] = f\n        end\n    end\n    return l[p]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpu6neewh2.lua:17:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpu6neewh2.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmpu6neewh2.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tif n < 1 then\n\t\treturn nil\n\tend\n\tlocal index = 1\n\tlocal number = 2\n\
    \twhile n ~= index do\n\t\tnumber = number + 1\n\t\tif is_prime(number) and is_fib(number)\
    \ then\n\t\t\tindex = index + 1\n\t\tend\n\tend\n\treturn number\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxkrdisu3.lua:20:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpxkrdisu3.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpxkrdisu3.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local prev, curr = 0, 1\n    while n > 0 do\n        prev, curr = curr, curr\
    \ + prev\n        if is_prime(curr) then\n            n = n - 1\n        end\n\
    \    end\n    return curr\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc5nlzq65.lua:16:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpc5nlzq65.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpc5nlzq65.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local f = fibonacci_gen()\n    for _ = 1, n do\n        local v = f()\n \
    \       if is_prime(v) then\n            return v\n        end\n    end\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdiyfa306.lua:13:\
    \ attempt to call a nil value (global 'fibonacci_gen')\nstack traceback:\n\t/tmp/tmpdiyfa306.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpdiyfa306.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local fib = fibonacci(n)\n    while not prime.check(fib) do\n        fib\
    \ = fibonacci(n + 1)\n        n = n + 1\n    end\n    return fib\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpol10wa5n.lua:13:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmpol10wa5n.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpol10wa5n.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local t = {2, 3}\n    local x = 5\n    local i = 2\n    while i < n do\n\
    \        if not is_divisible(x, t) then\n            t[#t+1] = x\n           \
    \ i = i + 1\n        end\n        x = x + 2\n    end\n    return t[#t]\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2bw05woj.lua:29:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmp2bw05woj.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local a, b = 2, 3\n    local count = 2\n    if n < 1 then return 0 end\n\
    \    if n == 1 then return a end\n    if n == 2 then return b end\n    repeat\n\
    \        a, b = b, a + b\n        if is_prime(b) then\n            count = count\
    \ + 1\n        end\n    until count >= n\n    return b\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy21p217i.lua:20:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpy21p217i.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpy21p217i.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local f1, f2 = 1, 1\n  local count = 0\n  while true do\n    local s = f1 +\
    \ f2\n    if is_prime(s) then\n      count = count + 1\n      if count == n then\n\
    \        return s\n      end\n    end\n    f1, f2 = f2, s\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw2vegrbf.lua:17:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpw2vegrbf.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmpw2vegrbf.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 0\n    local fn = 0\n    local fn1 = 1\n    local fn2 = 1\n   \
    \ while i < n do\n        fn = fn1 + fn2\n        fn2 = fn1\n        fn1 = fn\n\
    \        if is_prime(fn) then\n            i = i + 1\n        end\n    end\n \
    \   return fn\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5bhl7k4z.lua:21:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp5bhl7k4z.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmp5bhl7k4z.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local current_prime_fib = 2\n    local count = 1\n    local fib = fibonacci()\n\
    \    local num = fib()\n    while count ~= n do\n        if num % 2 ~= 0 and is_prime(num)\
    \ then\n            count = count + 1\n            current_prime_fib = num\n \
    \       end\n        num = fib()\n    end\n    return current_prime_fib\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi4zywoyg.lua:15:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmpi4zywoyg.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpi4zywoyg.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local i = 1\n  local count = 0\n  local val = fib(i)\n  while count < n do\n\
    \    if is_prime(val) then\n      count = count + 1\n    end\n    i = i + 1\n\
    \    val = fib(i)\n  end\n  return val\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpt8z35kti.lua:15:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpt8z35kti.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpt8z35kti.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local fib_n = fib(n)\n    if not is_prime(fib_n) then\n        return prime_fib(n\
    \ + 1)\n    end\n    return fib_n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqnajzdg5.lua:13:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpqnajzdg5.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpqnajzdg5.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local count = 1\n    local fib = 1\n    local fib2 = 1\n    local fib3 =\
    \ 1\n    while count < n do\n        fib3 = fib2 + fib\n        fib = fib2\n \
    \       fib2 = fib3\n        if is_prime(fib3) then\n            count = count\
    \ + 1\n        end\n    end\n    return fib3\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84epzk2w.lua:31:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmp84epzk2w.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local idx = 2\n    local curr = 1\n    local next = 1\n    local tmp\n  \
    \  while true do\n        tmp = next\n        next = curr + next\n        curr\
    \ = tmp\n        if is_prime(next) then\n            idx = idx + 1\n         \
    \   if idx == n then\n                return next\n            end\n        end\n\
    \    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptjw0_muy.lua:21:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmptjw0_muy.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmptjw0_muy.lua:33: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local x, y = 2, 3\n    local i = 2\n    while i < n do\n        x, y = y,\
    \ x + y\n        if is_prime(y) then\n            i = i + 1\n        end\n   \
    \ end\n    return y\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptol34pbq.lua:27:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmptol34pbq.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal num = 1\n\tlocal i = 1\n\tlocal count = 0\n\twhile count < n do\n\t\t\
    if is_prime(i) and num < i then\n\t\t\tcount = count + 1\n\t\t\tnum = i\n\t\t\
    end\n\t\ti = i + 1\n\tend\n\treturn num\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfffy9xe_.lua:17:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpfffy9xe_.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmpfffy9xe_.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local f = fib(n)\n  while not is_prime(f) do\n    f = fib(n)\n    n = n + 1\n\
    \  end\n  return f\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgsl3s7mp.lua:13:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpgsl3s7mp.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpgsl3s7mp.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local count = 0\n    local x = 0\n    local y = 1\n    while count < n do\n\
    \        local tmp = x\n        x = y\n        y = tmp + y\n        if isPrime(y)\
    \ then\n            count = count + 1\n        end\n    end\n    return y\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3fzo5f4z.lua:20:\
    \ attempt to call a nil value (global 'isPrime')\nstack traceback:\n\t/tmp/tmp3fzo5f4z.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp3fzo5f4z.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local count = 1;\n  local result = 2;\n  local x, y = 2, 3;\n  while count\
    \ < n do\n    if is_prime(y) then\n      count = count + 1;\n      result = y;\n\
    \    end\n    x, y = y, x + y;\n  end\n  return result;\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvblzf58j.lua:17:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpvblzf58j.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmpvblzf58j.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local function primes(n)\n    return n == 2 or n % 2 ~= 0 and is_prime(n)\n\
    \  end\n  return select(2, prime_nth(n, fib_s))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpov1d5cec.lua:16:\
    \ attempt to call a nil value (global 'prime_nth')\nstack traceback:\n\t/tmp/tmpov1d5cec.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpov1d5cec.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal fn = fib(n)\n\tif is_prime(fn) then\n\t\treturn fn\n\telse\n\t\treturn\
    \ prime_fib(n+1)\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpstew_om4.lua:13:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpstew_om4.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpstew_om4.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local f = fib(n)\n  while true do\n    if is_prime(f) then\n      return f\n\
    \    end\n    f = fib(n)\n    n = n + 1\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprfkn5sa2.lua:13:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmprfkn5sa2.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmprfkn5sa2.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tn = n - 1\n\tlocal a, b = 0, 1\n\twhile n > 0 do\n\t\ta, b = b, a + b\n\t\t\
    if is_prime(b) then\n\t\t\tn = n - 1\n\t\tend\n\tend\n\treturn b\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwjdbfpbv.lua:27:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpwjdbfpbv.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    if n < 1 then\n        return 0\n    end\n    local fibs = {0, 1}\n    local\
    \ nth = 0\n    local count = 0\n    while count < n do\n        fibs[1], fibs[2]\
    \ = fibs[2], fibs[1] + fibs[2]\n        if is_prime(fibs[2]) then\n          \
    \  count = count + 1\n            nth = fibs[2]\n        end\n    end\n    return\
    \ nth\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppr90xfuy.lua:21:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmppr90xfuy.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmppr90xfuy.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local count = 0\n    local i = 1\n    local fn\n    repeat\n        fn =\
    \ fibonacci(i)\n        if is_prime(fn) then\n            count = count + 1\n\
    \        end\n        i = i + 1\n    until count == n\n    return fn\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpchy6lwwc.lua:17:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmpchy6lwwc.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmpchy6lwwc.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local fibs = fibonacci_list(n)\n    local prime_fibs = filter(fibs, is_prime)\n\
    \    return nth(prime_fibs, n)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp189kpsnv.lua:13:\
    \ attempt to call a nil value (global 'fibonacci_list')\nstack traceback:\n\t\
    /tmp/tmp189kpsnv.lua:13: in local 'candidate'\n\t/tmp/tmp189kpsnv.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal k = 0\n\tlocal a, b = 0, 1\n\tlocal c = a + b\n\twhile k < n do\n\t\t\
    if is_prime(c) then\n\t\t\tk = k + 1\n\t\tend\n\t\ta, b = b, c\n\t\tc = a + b\n\
    \tend\n\treturn c\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9icp6rmk.lua:17:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp9icp6rmk.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmp9icp6rmk.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    return fib(fib(n))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8wucy_qm.lua:13:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmp8wucy_qm.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmp8wucy_qm.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local c = 0\n    while c < n do\n     \
    \   i, j = j, i + j\n        if is_prime(j) then\n            c = c + 1\n    \
    \    end\n    end\n    return j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgc9bpkg2.lua:18:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpgc9bpkg2.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmpgc9bpkg2.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local index = 1\n    local f1 = 0\n    local f2 = 1\n    while index < n\
    \ do\n        local f3 = f1 + f2\n        f1 = f2\n        f2 = f3\n        if\
    \ is_prime(f3) then\n            index = index + 1\n        end\n    end\n   \
    \ return f2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk0gq6b42.lua:30:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpk0gq6b42.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local fibn, fibn_minus_1, fibn_minus_2 = 0, 1, 0\n    local prime_fibn =\
    \ 0\n    local i = 1\n    while i <= n do\n        fibn = fibn_minus_1 + fibn_minus_2\n\
    \        if is_prime(fibn) then\n            prime_fibn = fibn\n            i\
    \ = i + 1\n        end\n        fibn_minus_2 = fibn_minus_1\n        fibn_minus_1\
    \ = fibn\n    end\n    return prime_fibn\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5ptz2g8u.lua:18:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp5ptz2g8u.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmp5ptz2g8u.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    if n == 1 then\n        return 2\n    elseif n == 2 then\n        return\
    \ 3\n    elseif n == 3 then\n        return 5\n    elseif n == 4 then\n      \
    \  return 13\n    elseif n == 5 then\n        return 89\n    else\n        return\
    \ nil\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpagmt1vv1.lua:36:\
    \ expected: 233, actual: nil\nstack traceback:\n\t/tmp/tmpagmt1vv1.lua:36: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local f1, f2 = 2, 3\n    for i = 2, n do\n        local f = f1 + f2\n   \
    \     f1, f2 = f2, f\n        if not is_prime(f) then\n            return prime_fib(n)\n\
    \        end\n    end\n    return f1\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4clolbgx.lua:17:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp4clolbgx.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmp4clolbgx.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local i = 1\n  local fib = fibonacci(i)\n  local q = 0\n  local is_prime =\
    \ prime(i)\n  while q ~= n do\n    if is_prime then\n      q = q + 1\n    end\n\
    \    if q == n then\n      return fib\n    end\n    i = i + 1\n    fib = fibonacci(i)\n\
    \    is_prime = prime(i)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfyqodn90.lua:14:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmpfyqodn90.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpfyqodn90.lua:33: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local cache = {1, 1}\n    for i = 3, n do\n        cache[i] = cache[i - 1]\
    \ + cache[i - 2]\n        if not is_prime(cache[i]) then\n            n = n +\
    \ 1\n        end\n    end\n    return cache[n]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphcm47jbc.lua:26:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmphcm47jbc.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local a, b = 2, 3\n    local count = 1\n    while count < n do\n        if\
    \ is_prime(b) then\n            count = count + 1\n        end\n        a, b =\
    \ b, a + b\n    end\n    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9ypoez5c.lua:16:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp9ypoez5c.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp9ypoez5c.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local prev = 2\n  local curr = 3\n  local temp\n  local count = 0\n  while\
    \ count < n do\n    if is_prime(curr) then\n      count = count + 1\n    end\n\
    \    temp = curr\n    curr = curr + prev\n    prev = temp\n  end\n  return prev\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi951vkbh.lua:18:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpi951vkbh.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmpi951vkbh.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local count = 0\n  local prime_fib = 1\n  local fib = 1\n  while count ~= n\
    \ do\n    fib = fibonacci(fib)\n    if is_prime(fib) then\n      count = count\
    \ + 1\n      prime_fib = fib\n    end\n  end\n  return prime_fib\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4l7k0n80.lua:17:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmp4l7k0n80.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmp4l7k0n80.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local p = prime_fibs[n]\n  if p then return p end\n  local i = #prime_fibs\n\
    \  local f = prime_fibs[i]\n  local g = 2*f + prime_fibs[i-1]\n  repeat\n    local\
    \ f = g\n    local g = 2*f + prime_fibs[i-1]\n    i = i + 1\n    prime_fibs[i]\
    \ = f\n  until prime.isprime(f)\n  return f\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcmpm4jsk.lua:13:\
    \ attempt to index a nil value (global 'prime_fibs')\nstack traceback:\n\t/tmp/tmpcmpm4jsk.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpcmpm4jsk.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local a, b = 2, 3\n    local i = 1\n    while i < n do\n        local c =\
    \ b\n        while not is_prime(c) do\n            c = a + b\n            a =\
    \ b\n            b = c\n        end\n        b = a + b\n        a = c\n      \
    \  i = i + 1\n    end\n    return a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpef5_sxuz.lua:17:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpef5_sxuz.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmpef5_sxuz.lua:33: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local fib = fibonacci(n)\n    while not is_prime(fib) do\n        fib = fibonacci(n)\n\
    \        n = n + 1\n    end\n    return fib\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3ngd8j1h.lua:13:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmp3ngd8j1h.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmp3ngd8j1h.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 2\n    local fibs = { 2, 3 }\n    while i <= n do\n        local\
    \ a = fibs[#fibs - 1]\n        local b = fibs[#fibs]\n        local c = a + b\n\
    \        local is_prime = true\n        for k, v in ipairs(fibs) do\n        \
    \    if c % v == 0 then\n                is_prime = false\n                break\n\
    \            end\n        end\n        if is_prime then\n            table.insert(fibs,\
    \ c)\n            i = i + 1\n        end\n    end\n    return fibs[#fibs]\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxqczd0st.lua:37:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmpxqczd0st.lua:37: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal prev, fib = 1, 1\n\tlocal count = 1\n\twhile count < n do\n\t\tfib, prev\
    \ = fib + prev, fib\n\t\tif is_prime(fib) then\n\t\t\tcount = count + 1\n\t\t\
    end\n\tend\n\treturn fib\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6fj_8vx2.lua:27:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmp6fj_8vx2.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local i = 1\n  local count = 0\n  local current = 0\n  while count ~= n do\n\
    \    current = fib(i)\n    if is_prime(current) then\n      count = count + 1\n\
    \    end\n    i = i + 1\n  end\n  return current\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpd_0mgjl5.lua:17:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpd_0mgjl5.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmpd_0mgjl5.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local seq = fibonacci_series(n*10)\n    for i, v in ipairs(seq) do\n    \
    \    if i==n and isprime(v) then\n            return v\n        end\n    end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpys5_n0xm.lua:13:\
    \ attempt to call a nil value (global 'fibonacci_series')\nstack traceback:\n\t\
    /tmp/tmpys5_n0xm.lua:13: in local 'candidate'\n\t/tmp/tmpys5_n0xm.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  if n <= 0 then\n    return nil\n  end\n  local nth_prime_fib = 1\n  local cnt\
    \ = 0\n  local fib = 1\n  local pp = 2\n  local p = 3\n  while cnt < n do\n  \
    \  fib = fib + pp\n    if util.is_prime(fib) then\n      cnt = cnt + 1\n     \
    \ nth_prime_fib = fib\n    end\n    pp = p\n    p = fib\n  end\n  return nth_prime_fib\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpm_h6z3eg.lua:23:\
    \ attempt to index a nil value (global 'util')\nstack traceback:\n\t/tmp/tmpm_h6z3eg.lua:23:\
    \ in local 'candidate'\n\t/tmp/tmpm_h6z3eg.lua:36: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local x, y = 1, 1\n  local i = 1\n  while i < n do\n    x, y = y, x + y\n \
    \   if is_prime(y) then\n      i = i + 1\n    end\n  end\n  return y\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz6g_4lk8.lua:27:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpz6g_4lk8.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local cnt = 0\n  local fn = 1\n  local fib = fib_gen()\n  local f\n  repeat\n\
    \    f = fib()\n    if f and is_prime(f) then\n      cnt = cnt + 1\n    end\n\
    \  until cnt == n\n  return f\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf7dbav3w.lua:15:\
    \ attempt to call a nil value (global 'fib_gen')\nstack traceback:\n\t/tmp/tmpf7dbav3w.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpf7dbav3w.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  return prime(fib(n))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfoou444s.lua:13:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpfoou444s.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpfoou444s.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    assert(n > 0, \"n must be greater than 0\")\n    local i = 0\n    local f\
    \ = 0\n    repeat\n        i = i + 1\n        f = fib(i)\n    until is_prime(f)\n\
    \    if i == n then\n        return f\n    else\n        return prime_fib(n -\
    \ 1)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnsaxas_g.lua:18:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpnsaxas_g.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmpnsaxas_g.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local fib = fibonacci(n)\n    while not is_prime(fib) do\n        fib = fibonacci(n)\n\
    \        n = n + 1\n    end\n    return fib\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3ngd8j1h.lua:13:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmp3ngd8j1h.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmp3ngd8j1h.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local fib1, fib2 = 2, 3\n    local result\n    for i = 2, n do\n        result\
    \ = fib1 + fib2\n        fib1 = fib2\n        fib2 = result\n        while not\
    \ is_prime(result) do\n            result = fib1 + fib2\n            fib1 = fib2\n\
    \            fib2 = result\n        end\n    end\n    return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzbc_hipn.lua:31:\
    \ expected: 2, actual: nil\nstack traceback:\n\t/tmp/tmpzbc_hipn.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal f = 1\n\tlocal curr, next = 2, 3\n\tfor i = 2, n do\n\t\tcurr, next =\
    \ next, next + curr\n\t\tif is_prime(next) then\n\t\t\tf = f + 1\n\t\tend\n\t\
    end\n\treturn next\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppk0dydih.lua:27:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmppk0dydih.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 2\n    local fn = 1\n    local fn_prev = 1\n    while true do\n\
    \        if is_prime(fn) then\n            i = i + 1\n            if i > n then\n\
    \                return fn\n            end\n        end\n        fn, fn_prev\
    \ = fn + fn_prev, fn\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsi88uxif.lua:17:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpsi88uxif.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmpsi88uxif.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local a, b = 2, 3\n    for i = 2, n do\n        a, b = b, a + b\n       \
    \ while not is_prime(b) do\n            a, b = b, a + b\n        end\n    end\n\
    \    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1l8ol2nj.lua:16:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp1l8ol2nj.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp1l8ol2nj.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local f = fib()\n    for _ = 1, n do\n        local x = f()\n        while\
    \ not is_prime(x) do\n            x = f()\n        end\n        if _ == n then\n\
    \            return x\n        end\n    end\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpx7ezyb72.lua:13:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpx7ezyb72.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpx7ezyb72.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local lower_bound = 2\n    local upper_bound = 100\n    local fib_n_prev\
    \ = 1\n    local fib_n_prev_prev = 0\n    local fib_n = 0\n    local counter =\
    \ 0\n    local ratio = 1\n    local new_ratio = 1\n    while true do\n       \
    \ if counter == n then\n            return fib_n\n        end\n        new_ratio\
    \ = fib_n / fib_n_prev\n        if new_ratio > ratio then\n            ratio =\
    \ new_ratio\n            lower_bound = upper_bound\n            upper_bound =\
    \ math.floor(upper_bound * 1.5)\n        end\n        fib_n_prev_prev = fib_n_prev\n\
    \        fib_n_prev = fib_n\n        fib_n = fib_n_prev + fib_n_prev_prev\n  \
    \      if check_prime(fib_n, lower_bound, upper_bound) then\n            counter\
    \ = counter + 1\n        end\n    end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9bei2yrl.lua:34:\
    \ attempt to call a nil value (global 'check_prime')\nstack traceback:\n\t/tmp/tmp9bei2yrl.lua:34:\
    \ in local 'candidate'\n\t/tmp/tmp9bei2yrl.lua:43: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal function prime_fib_helper(a, b, n)\n\t\tlocal c = a + b\n\t\tif is_prime(c)\
    \ then\n\t\t\tif n == 1 then\n\t\t\t\treturn c\n\t\t\telse\n\t\t\t\treturn prime_fib_helper(b,\
    \ c, n - 1)\n\t\t\tend\n\t\telse\n\t\t\treturn prime_fib_helper(b, c, n)\n\t\t\
    end\n\tend\n\treturn prime_fib_helper(0, 1, n)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6h164rw2.lua:15:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp6h164rw2.lua:15:\
    \ in function </tmp/tmp6h164rw2.lua:13>\n\t(...tail calls...)\n\t/tmp/tmp6h164rw2.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    return prime(fib(n))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ibzyz76.lua:13:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmp7ibzyz76.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmp7ibzyz76.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tif n < 1 then\n\t\treturn nil\n\tend\n\tlocal i = 1\n\tlocal f = 0\n\twhile\
    \ i <= n do\n\t\tf = fib(i)\n\t\tif is_prime(f) then\n\t\t\ti = i + 1\n\t\tend\n\
    \tend\n\treturn f\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplyvu9aq4.lua:19:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmplyvu9aq4.lua:19:\
    \ in local 'candidate'\n\t/tmp/tmplyvu9aq4.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local fib = fibonacci()\n    local count = 0\n    local res\n    repeat\n\
    \        res = fib()\n        if is_prime(res) then\n            count = count\
    \ + 1\n        end\n    until count == n\n    return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4qun80p4.lua:13:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmp4qun80p4.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmp4qun80p4.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local res, i = 0, 0\n  while i < n do\n    res = next_prime_fib()\n    i =\
    \ i + 1\n  end\n  return res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz5a23jok.lua:15:\
    \ attempt to call a nil value (global 'next_prime_fib')\nstack traceback:\n\t\
    /tmp/tmpz5a23jok.lua:15: in local 'candidate'\n\t/tmp/tmpz5a23jok.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local x = 1\n    local y = 2\n    while i ~= n do\n    \
    \    local z = x + y\n        x = y\n        y = z\n        if is_prime(z) then\n\
    \            i = i + 1\n        end\n    end\n    return y\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjcaf0hyc.lua:20:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpjcaf0hyc.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpjcaf0hyc.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local m = 0\n  local i = 1\n  while m ~= n do\n    if (is_prime(i) and is_fib(i))\
    \ then\n      m = m + 1\n    end\n    i = i + 1\n  end\n  return i - 1\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4qprnwx_.lua:16:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp4qprnwx_.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp4qprnwx_.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local prime_seq = prime_seq_fib()\n  for i = 1, n do\n    prime_seq:next()\n\
    \  end\n  return prime_seq:next()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1aw2t3ja.lua:13:\
    \ attempt to call a nil value (global 'prime_seq_fib')\nstack traceback:\n\t/tmp/tmp1aw2t3ja.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmp1aw2t3ja.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local fib = fibonacci(n)\n    while not is_prime(fib) do\n        fib = fibonacci(n)\n\
    \        n = n + 1\n    end\n    return fib\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3ngd8j1h.lua:13:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmp3ngd8j1h.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmp3ngd8j1h.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local function pfib(m, a, b)\n        if m == n then\n            return\
    \ b\n        elseif is_prime(b) then\n            return pfib(m + 1, b, a + b)\n\
    \        else\n            return pfib(m, b, a + b)\n        end\n    end\n  \
    \  return pfib(1, 1, 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphitlqj9a.lua:16:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmphitlqj9a.lua:16:\
    \ in function </tmp/tmphitlqj9a.lua:13>\n\t(...tail calls...)\n\t/tmp/tmphitlqj9a.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal i, p, f = 0, 2, 1\n\twhile i < n do\n\t\tf, p = p, p + f\n\t\tif is_prime(p)\
    \ then\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn p\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf9hslfp3.lua:16:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpf9hslfp3.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpf9hslfp3.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tif n < 1 then return nil end\n\tif n == 1 then return 2 end\n\tlocal i = 2\n\
    \tlocal j = 3\n\tlocal k = 5\n\tlocal c = 2\n\twhile c < n do\n\t\ti = j\n\t\t\
    j = k\n\t\tk = i + j\n\t\tif is_prime(k) then\n\t\t\tc = c + 1\n\t\tend\n\tend\n\
    \treturn k\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzvylw0uk.lua:34:\
    \ expected: 3, actual: 5\nstack traceback:\n\t/tmp/tmpzvylw0uk.lua:34: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local a, b = 2, 3\n    for i = 3, n do\n        a, b = b, a + b\n       \
    \ while not is_prime(b) do\n            a, b = b, a + b\n        end\n    end\n\
    \    return b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfng3g6af.lua:26:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmpfng3g6af.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local i = 1\n  local cur_fib = 0\n  repeat\n    cur_fib = fib(i)\n    i = i\
    \ + 1\n  until(is_prime(cur_fib))\n  if n > 1 then\n    return prime_fib(n - 1)\n\
    \  else\n    return cur_fib\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa3vu1psi.lua:16:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpa3vu1psi.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpa3vu1psi.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  -- I'm not sure if this is efficient enough\n  local count = 0\n  local i =\
    \ 1\n  while true do\n    local num = fib(i)\n    if is_prime(num) then\n    \
    \  count = count + 1\n      if count == n then\n        return num\n      end\n\
    \    end\n    i = i + 1\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqq29xnmk.lua:17:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpqq29xnmk.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmpqq29xnmk.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \t-- fib(n) and prime(fib(n))\n\treturn fib(n)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5wknq0hj.lua:14:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmp5wknq0hj.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmp5wknq0hj.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local f, f1, f2 = 1, 2, 3\n  local i = 2\n  while i <= n do\n    local f3 =\
    \ f1 + f2\n    if is_prime(f3) then\n      f = f3\n      i = i + 1\n    end\n\
    \    f1, f2 = f2, f3\n  end\n  return f\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6oa5f_k9.lua:29:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmp6oa5f_k9.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal pf, tmp = 2, 3\n\twhile n ~= 1 do\n\t\tif is_prime(tmp) then\n\t\t\tpf\
    \ = tmp\n\t\t\tn = n - 1\n\t\tend\n\t\ttmp = tmp + 1\n\tend\n\treturn pf\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdnzv1v5w.lua:15:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpdnzv1v5w.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpdnzv1v5w.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  if n < 1 then\n    return nil\n  end\n  local prime_fib_numbers = {1, 2, 3,\
    \ 5, 13, 89}\n  for i = 7, n do\n    local prime_fib_i = prime_fib_numbers[i -\
    \ 1] + prime_fib_numbers[i - 2]\n    if is_prime(prime_fib_i) then\n      table.insert(prime_fib_numbers,\
    \ prime_fib_i)\n    else\n      i = i - 1\n    end\n  end\n  return prime_fib_numbers[n]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfwm6yatt.lua:31:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpfwm6yatt.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local i = 0\n  local f = 0\n  local fn = 1\n  while i < n do\n    if is_prime(fn)\
    \ then\n      i = i + 1\n      f = fn\n    end\n    fn = fib(fn)\n  end\n  return\
    \ f\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8eqa9ujq.lua:17:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp8eqa9ujq.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmp8eqa9ujq.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    if n == 1 then\n        return 2\n    elseif n == 2 then\n        return\
    \ 3\n    elseif n == 3 then\n        return 5\n    elseif n == 4 then\n      \
    \  return 13\n    elseif n == 5 then\n        return 89\n    else\n        for\
    \ i = 5, n - 1 do\n            prime_fib(i)\n        end\n        for i = prime_fib(n\
    \ - 1) + 1, math.huge do\n            if is_prime(i) and fibonacci(i) then\n \
    \               return i\n            end\n        end\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq239lan7.lua:28:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpq239lan7.lua:28:\
    \ in local 'candidate'\n\t/tmp/tmpq239lan7.lua:43: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  return next(filter(is_prime, take(n, fibonacci())))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxa3g0kkc.lua:13:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmpxa3g0kkc.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpxa3g0kkc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local a, b = 1, 2\n  local c = a + b\n  local cnt = 0\n  while true do\n  \
    \  if is_prime(c) then\n      cnt = cnt + 1\n      if cnt == n then\n        return\
    \ c\n      end\n    end\n    a, b = b, c\n    c = a + b\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxnlae_x_.lua:17:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpxnlae_x_.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmpxnlae_x_.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal i = 1\n\tlocal j = 1\n\tlocal k = 0\n\tlocal it = 1\n\twhile it <= n do\n\
    \t\ti, j = j, i + j\n\t\tk = k + 1\n\t\tif is_prime(j) then\n\t\t\tit = it + 1\n\
    \t\tend\n\tend\n\treturn j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_9y28ve3.lua:20:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp_9y28ve3.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp_9y28ve3.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal prime_fib_list = {2, 3, 5, 13, 89}\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp0fa0f6az.lua:30: ''end'' expected (to close ''function'' at
    line 12) near <eof>

    '
  stdout: ''
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal x = 1\n\tlocal y = 1\n\tlocal c = 0\n\trepeat\n\t\tc = c + 1\n\t\tx, y\
    \ = y, x + y\n\tuntil (isprime(y) and c == n)\n\treturn y\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgpo4g5il.lua:19:\
    \ attempt to call a nil value (global 'isprime')\nstack traceback:\n\t/tmp/tmpgpo4g5il.lua:19:\
    \ in local 'candidate'\n\t/tmp/tmpgpo4g5il.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local num = 2\n    local counter = 1\n    while counter < n do\n        num\
    \ = add(num, num)\n        if isprime(num) then\n            counter = counter\
    \ + 1\n        end\n    end\n    return num\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprh2w2xgq.lua:16:\
    \ attempt to call a nil value (global 'add')\nstack traceback:\n\t/tmp/tmprh2w2xgq.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmprh2w2xgq.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    -- I've already provided solution here\n    return fibs_list[n]\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcsiwjmkf.lua:14:\
    \ attempt to index a nil value (global 'fibs_list')\nstack traceback:\n\t/tmp/tmpcsiwjmkf.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpcsiwjmkf.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local m = 1\n  while (not is_prime(fibonacci(m))) do\n    m = m + 1\n  end\n\
    \  return fibonacci(m)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3h2083la.lua:14:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmp3h2083la.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmp3h2083la.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal list = {2, 3, 5, 13, 89}\n\tlocal index = 5\n\twhile index < n do\n\t\t\
    local next_prime = prime_fib(index) + prime_fib(index - 2)\n\t\ttable.insert(list,\
    \ next_prime)\n\t\tindex = index + 1\n\tend\n\treturn list[n]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2e40yda9.lua:31:\
    \ expected: 233, actual: 94\nstack traceback:\n\t/tmp/tmp2e40yda9.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  if n < 1 then return nil end\n  local n1, n2 = 2, 3\n  for i = 2, n do\n  \
    \  n1, n2 = n2, n1 + n2\n    if n2 > MAX_INT then return nil end\n    while not\
    \ is_prime(n2) do\n      n1, n2 = n2, n1 + n2\n      if n2 > MAX_INT then return\
    \ nil end\n    end\n  end\n  return n2\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxgmilz90.lua:29:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmpxgmilz90.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local fib = fibonacci()\n    local count = 0\n    local v\n    repeat\n \
    \       v = fib()\n        if is_prime(v) then\n            count = count + 1\n\
    \        end\n    until count == n\n    return v\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpelixng40.lua:13:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmpelixng40.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpelixng40.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local fib_num = fib(n)\n  local prime_ind = nil\n  for i = n, n*2 do\n    if\
    \ is_prime(fib(i)) then\n      prime_ind = i\n      break\n    end\n  end\n  return\
    \ fib(prime_ind)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnce58sgb.lua:13:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpnce58sgb.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpnce58sgb.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 0\n    local count = 0\n    while\
    \ true do\n        k = i + j\n        if is_prime(k) then\n            count =\
    \ count + 1\n            if count == n then\n                return k\n      \
    \      end\n        end\n        i = j\n        j = k\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgicjprhr.lua:19:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpgicjprhr.lua:19:\
    \ in local 'candidate'\n\t/tmp/tmpgicjprhr.lua:33: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    if n < 1 then\n        return nil\n    end\n    local c = 1\n    local i\
    \ = 1\n    while c <= n do\n        i = i + 1\n        if is_prime(fib(i)) then\n\
    \            c = c + 1\n        end\n    end\n    return fib(i)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmiftbl55.lua:20:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpmiftbl55.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpmiftbl55.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local m = 1\n  local fib = fibonacci()\n  while true do\n    m = m + 1\n  \
    \  if is_prime(fib()) and m == n then\n      return m\n    end\n  end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3xtxodlf.lua:14:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmp3xtxodlf.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmp3xtxodlf.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local c = 1\n    local f = 2\n    local fn = 3\n    while c < n do\n    \
    \    local fn1 = f + fn\n        f = fn\n        fn = fn1\n        if is_prime(fn)\
    \ then\n            c = c + 1\n        end\n    end\n    return fn\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2vwzx7n1.lua:30:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmp2vwzx7n1.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal n_th_fib_number = fib(n)\n\tlocal n_th_prime_fib_number = 0\n\tlocal prime_fib_counter\
    \ = 0\n\t\n\twhile prime_fib_counter < n do\n\t\tif is_prime(n_th_fib_number)\
    \ then\n\t\t\tprime_fib_counter = prime_fib_counter + 1\n\t\t\tn_th_prime_fib_number\
    \ = n_th_fib_number\n\t\tend\n\t\tn_th_fib_number = n_th_fib_number + 1\n\tend\n\
    \t\n\treturn n_th_prime_fib_number\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdzwa8kjr.lua:13:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpdzwa8kjr.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpdzwa8kjr.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal f = 1\n\tlocal p = 2\n\tlocal i = 0\n\t\n\twhile i < n do\n\t\tlocal q\
    \ = f + p\n\t\t\n\t\tf = p\n\t\tp = q\n\t\t\n\t\tif is_prime(p) then\n\t\t\ti\
    \ = i + 1\n\t\tend\n\tend\n\t\n\treturn p\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmfgeuneg.lua:23:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpmfgeuneg.lua:23:\
    \ in local 'candidate'\n\t/tmp/tmpmfgeuneg.lua:34: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal i = 1\n\tlocal fib = fibonacci()\n\twhile i < n do\n\t\ti = i + 1\n\t\t\
    local v = fib(i)\n\t\tif is_prime(v) then\n\t\t\treturn v\n\t\tend\n\tend\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqsmqlzub.lua:14:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmpqsmqlzub.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpqsmqlzub.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal i, j, k = 2, 3, 1\n\twhile k < n do\n\t\ti, j = j, i + j\n\t\tif is_prime(j)\
    \ then\n\t\t\tk = k + 1\n\t\tend\n\tend\n\treturn j\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprwtkvy_q.lua:26:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmprwtkvy_q.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 0\n    local x\n    repeat\n        x = fib(i)\n        i = i +\
    \ 1\n    until n_th_prime(x) == x\n    return x\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxv7hqsb3.lua:16:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpxv7hqsb3.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpxv7hqsb3.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal i = 1\n\tlocal f = fib(i)\n\twhile not(i == n) do\n\t\ti = i + 1\n\t\t\
    f = fib(i)\n\t\twhile not(is_prime(f)) do\n\t\t\ti = i + 1\n\t\t\tf = fib(i)\n\
    \t\tend\n\tend\n\treturn f\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz7zxfvg2.lua:14:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpz7zxfvg2.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpz7zxfvg2.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local fib_prime_count = 0\n  local i = 1\n  local f = 1\n  local f2 = 1\n \
    \ local f1 = 1\n  local f_primes\n  while fib_prime_count < n do\n    f = f1 +\
    \ f2\n    i = i + 1\n    f2 = f1\n    f1 = f\n    f_primes = is_prime(f)\n   \
    \ if f_primes then\n      fib_prime_count = fib_prime_count + 1\n    end\n  end\n\
    \  return f\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmps5ze8qo1.lua:24:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmps5ze8qo1.lua:24:\
    \ in local 'candidate'\n\t/tmp/tmps5ze8qo1.lua:35: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local fib = fibonacci(n)\n    while not is_prime(fib) do\n        fib = fibonacci(n)\n\
    \        n = n + 1\n    end\n    return fib\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3ngd8j1h.lua:13:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmp3ngd8j1h.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmp3ngd8j1h.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  if n==1 then return 2 end\n  local x=0\n  local f=1\n  local i=1\n  while i<n\
    \ do\n    x=f+x\n    f=x-f\n    if is_prime(x) then i=i+1 end\n  end\n  return\
    \ x\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5xlh5yz2.lua:20:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp5xlh5yz2.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp5xlh5yz2.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local list = prime_fib_list(n)\n    return list[#list]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpijfwldy3.lua:13:\
    \ attempt to call a nil value (global 'prime_fib_list')\nstack traceback:\n\t\
    /tmp/tmpijfwldy3.lua:13: in local 'candidate'\n\t/tmp/tmpijfwldy3.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local pf = {{2,3},{3,5},{5,13},{13,89}}\n    local i, k, v\n    for i=1,n\
    \ do\n        k, v = pf[1][1], pf[1][2]\n        if i==n then return v end\n \
    \       local t = {v, k+v}\n        pf[1] = nil\n        for _, v in ipairs(pf)\
    \ do\n            if v[2] > t[2] then\n                table.insert(pf, v, t)\n\
    \                break\n            end\n        end\n        if v[2] < t[2] then\n\
    \            table.insert(pf, t)\n        end\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr7zxgj6l.lua:35:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmpr7zxgj6l.lua:35: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local fn = fib(n)\n    if is_prime(fn) then\n        return fn\n    else\n\
    \        return prime_fib(n+1)\n    end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqeqh39gw.lua:13:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpqeqh39gw.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpqeqh39gw.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local i = 0\n  local primes = fibonacci_sequence()\n  for prime in primes do\n\
    \    if is_prime(prime) then\n      i = i + 1\n      if i == n then\n        return\
    \ prime\n      end\n    end\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi5goipwu.lua:14:\
    \ attempt to call a nil value (global 'fibonacci_sequence')\nstack traceback:\n\
    \t/tmp/tmpi5goipwu.lua:14: in local 'candidate'\n\t/tmp/tmpi5goipwu.lua:28: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local r = fib(i)\n    while n > 0 do\n        if is_prime(r)\
    \ then\n            n = n - 1\n        end\n        if n > 0 then\n          \
    \  i = i + 1\n            r = fib(i)\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprtq_0d72.lua:14:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmprtq_0d72.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmprtq_0d72.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local _, f = prime_fib_range(n, n)\n  return f[n]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq2ojow67.lua:13:\
    \ attempt to call a nil value (global 'prime_fib_range')\nstack traceback:\n\t\
    /tmp/tmpq2ojow67.lua:13: in local 'candidate'\n\t/tmp/tmpq2ojow67.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local prime_fib = 0\n    local fib = 1\n    local fib_old = 1\n    local\
    \ counter = 1\n    while counter <= n do\n        fib_old = fib\n        fib =\
    \ fib_old + prime_fib\n        prime_fib = fib_old\n        if is_prime(fib) then\n\
    \            counter = counter + 1\n        end\n    end\n    return fib\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvslupit6.lua:21:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpvslupit6.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpvslupit6.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local i = 1\n  local primes = {}\n  local prime_count = 0\n  local f = 0\n\
    \  local fn = 1\n  local f0 = 0\n  local f1 = 1\n  while prime_count < n do\n\
    \    f = f0 + f1\n    if is_prime(f) then\n      prime_count = prime_count + 1\n\
    \      table.insert(primes, f)\n    end\n    f0 = f1\n    f1 = f\n  end\n  return\
    \ primes[n]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpm38l0gll.lua:22:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpm38l0gll.lua:22:\
    \ in local 'candidate'\n\t/tmp/tmpm38l0gll.lua:35: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    if n == 1 then\n        return 2\n    end\n    local i = 1\n    local j =\
    \ 1\n    local k = 2\n    local num = 0\n    while true do\n        i = j\n  \
    \      j = k\n        k = i + j\n        if isPrime(k) then\n            num =\
    \ num + 1\n            if num == n then\n                return k\n          \
    \  end\n        end\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpexjl338s.lua:24:\
    \ attempt to call a nil value (global 'isPrime')\nstack traceback:\n\t/tmp/tmpexjl338s.lua:24:\
    \ in local 'candidate'\n\t/tmp/tmpexjl338s.lua:37: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal counter = 1\n\tlocal tmp = 3\n\twhile true do\n\t\tif is_prime(tmp) then\n\
    \t\t\tcounter = counter + 1\n\t\t\tif counter == n then\n\t\t\t\treturn tmp\n\t\
    \t\tend\n\t\tend\n\t\ttmp = tmp + 2\n\tend\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0uzch7na.lua:16:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp0uzch7na.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp0uzch7na.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local a, b = 2, 3\n  local i = 2\n  while i <= n do\n    local p, q = a + b,\
    \ b\n    a, b = p, q\n    i = i + 1\n    while not is_prime(b) do\n      local\
    \ p, q = a + b, b\n      a, b = p, q\n      i = i + 1\n    end\n  end\n  return\
    \ b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5f99t0kc.lua:31:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmp5f99t0kc.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal m = 2\n\tlocal i = 1\n\twhile (m <= n) do\n\t\tlocal f = fib(i)\n\t\t\
    if (is_prime(f)) then\n\t\t\tm = m + 1\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn\
    \ fib(i - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk0llom1g.lua:22:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpk0llom1g.lua:22:\
    \ in local 'candidate'\n\t/tmp/tmpk0llom1g.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local i = 1\n  local j = 2\n  local c = 1\n  while true do\n    local k = i\
    \ + j\n    if is_prime(k) then\n      c = c + 1\n      if c == n then\n      \
    \  return k\n      end\n    end\n    i = j\n    j = k\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsatrc6ux.lua:18:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpsatrc6ux.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmpsatrc6ux.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local fib1, fib2 = 1, 1\n    local counter = 1\n    while counter < n do\n\
    \        if is_prime(fib1) then\n            counter = counter + 1\n        end\n\
    \        if counter == n then\n            return fib1\n        end\n        fib1,\
    \ fib2 = fib2, fib1 + fib2\n    end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdvqokgv0.lua:29:\
    \ expected: 2, actual: nil\nstack traceback:\n\t/tmp/tmpdvqokgv0.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local i = 1\n  local c = 0\n  local prev = 0\n  local v\n  while c < n do\n\
    \    v = fib(i)\n    if is_prime(v) then\n      c = c + 1\n      prev = v\n  \
    \  end\n    i = i + 1\n  end\n  return prev\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmq0ae7um.lua:18:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmpmq0ae7um.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmpmq0ae7um.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local function iter(a, b, k)\n        if k == n then\n            return\
    \ b\n        else\n            if is_prime(b) then\n                return iter(b,\
    \ a + b, k + 1)\n            else\n                return iter(b, a + b, k)\n\
    \            end\n        end\n    end\n    return iter(1, 1, 1)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpepw68qad.lua:30:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpepw68qad.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    if n <= 2 then\n        return n + 1\n    end\n    local x, y = 2, 3\n  \
    \  local i = 3\n    while i < n do\n        local t = x + y\n        x = y\n \
    \       y = t\n        if is_prime(y) then\n            i = i + 1\n        end\n\
    \    end\n    return y\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu23y_0g2.lua:34:\
    \ expected: 5, actual: 3\nstack traceback:\n\t/tmp/tmpu23y_0g2.lua:34: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local i = 1\n  while n > 0 do\n    if is_prime(fib(i)) then\n      n = n -\
    \ 1\n    end\n    i = i + 1\n  end\n  return fib(i - 1)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprckznin8.lua:15:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmprckznin8.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmprckznin8.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tif n == 1 then\n\t\treturn 2\n\tend\n\tlocal prime_fibs = {2, 3}\n\tfor i =\
    \ 4, n do\n\t\tlocal a, b = prime_fibs[#prime_fibs], prime_fibs[#prime_fibs -\
    \ 1]\n\t\tlocal c = a + b\n\t\twhile true do\n\t\t\tif is_prime(c) then\n\t\t\t\
    \ttable.insert(prime_fibs, c)\n\t\t\t\tbreak\n\t\t\tend\n\t\t\tc = c + b\n\t\t\
    end\n\tend\n\treturn prime_fibs[#prime_fibs]\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmzg3igx5.lua:36:\
    \ expected: 5, actual: 3\nstack traceback:\n\t/tmp/tmpmzg3igx5.lua:36: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  if n == 1 then\n    return 2\n  elseif n == 2 then\n    return 3\n  elseif\
    \ n == 3 then\n    return 5\n  elseif n == 4 then\n    return 13\n  elseif n ==\
    \ 5 then\n    return 89\n  else\n    return prime_fib(n-1) + prime_fib(n-2)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6nq5ujmm.lua:36:\
    \ expected: 233, actual: 102\nstack traceback:\n\t/tmp/tmp6nq5ujmm.lua:36: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1660014925

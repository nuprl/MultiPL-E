name: HumanEval_23_strlen
language: lua
prompt: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
  -- 3\nlocal function strlen(string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strlen\n\
  \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'), 1)\n\
  \    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    if string == nil then\n        error(\"strlen: argument is nil\"\
    )\n    end\n    return #string\nend", "    local len = 0\n    while string[len\
    \ + 1] do\n        len = len + 1\n    end\n    return len\nend", "    local len\
    \ = 0\n    local i = 1\n    while string[i] do\n        len = len + 1\n      \
    \  i = i + 1\n    end\n    return len\nend", "    -- This is the purpose for this\
    \ library.\n    -- Use the _len() function that is part of string.format()\n \
    \   -- and return the result.\n    return _len(string)\nend", "    local result\
    \ = 0\n    while string:sub(result + 1, result + 1) ~= '' do\n        result =\
    \ result + 1\n    end\n    return result\nend", "  return #string\nend", "   \
    \ return #string\nend", "  if string == nil then\n    return 0\n  end\n  return\
    \ string.len(string)\nend", "  local _, length = string:gsub(\"[^\\128-\\193]\"\
    , \"\")\n  return length\nend", "  return #string\nend", "    local length = 0\n\
    \    for i = 1, #string do\n        length = length + 1\n    end\n    return length\n\
    end", "    return string.len(string)\nend", "    local _, length = string:gsub(\"\
    [^\\128-\\193]\", \"\")\n    return length\nend", "  local _, length = string:gsub(\"\
    [^\\128-\\193]\", \"\")\n  return length\nend", "    -- TODO\nend", "  return\
    \ #string\nend", "    return #string\nend", "    return #string\nend", "  return\
    \ #string\nend", "  local _, length = string:gsub(\"[^\\128-\\193]\", \"\")\n\
    \  return length\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

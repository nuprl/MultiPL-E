name: HumanEval_24_largest_divisor
language: lua
prompt: "-- For a given number n, find the largest number that divides n evenly, smaller\
  \ than n\n-- >>> largest_divisor(15)\n-- 5\nlocal function largest_divisor(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = largest_divisor\n\
  \    lu.assertEquals(candidate(3), 1)\n    lu.assertEquals(candidate(7), 1)\n  \
  \  lu.assertEquals(candidate(10), 5)\n    lu.assertEquals(candidate(100), 50)\n\
  \    lu.assertEquals(candidate(49), 7)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local divisor = n - 1\n  while divisor > 0 do\n    if n % divisor\
    \ == 0 then\n      return divisor\n    end\n    divisor = divisor - 1\n  end\n\
    \  return 1\nend", "  for i = 2, n - 1 do\n    if n % i == 0 then\n      return\
    \ i\n    end\n  end\n  return 1\nend", "    for i = n - 1, 2, -1 do\n        if\
    \ n % i == 0 then\n            return i\n        end\n    end\n    return 1\n\
    end", "  for i = n - 1, 1, -1 do\n    if (n % i) == 0 then\n      return i\n \
    \   end\n  end\n  return 1\nend", "\tfor i=n-1, 2, -1 do\n\t\tif n % i == 0 then\n\
    \t\t\treturn i\n\t\tend\n\tend\n\treturn 1\nend", "    local i = math.floor(n\
    \ / 2)\n    while i > 1 do\n        if n % i == 0 then\n            return i\n\
    \        end\n        i = i - 1\n    end\n    return 1\nend", "  for i = 2, n-1\
    \ do\n    if (n % i == 0) then\n      return n / i\n    end\n  end\n  return n\n\
    end", "  local i = 2\n  while i < n and n % i ~= 0 do\n    i = i + 1\n  end\n\
    \  return i\nend", "    return __.reduce(function(a, b) return (n % b == 0) and\
    \ b or a end, 0, __.range(2, n-1))\nend", "\tlocal i = math.floor(n/2)\n\twhile\
    \ (n % i) ~= 0 do\n\t\ti = i - 1\n\tend\n\treturn i\nend", "  for i=2,n do\n \
    \   if n % i == 0 then\n      return i\n    end\n  end\n  return 1\nend", "\t\
    for i=n-1, 1, -1 do\n\t\tif n % i == 0 then\n\t\t\treturn i\n\t\tend\n\tend\n\
    end", "    for d = n - 1, 2, -1 do\n        if n % d == 0 then\n            return\
    \ d\n        end\n    end\n    return 1\nend", "    local d = 2\n    while n %\
    \ d ~= 0 do\n        d = d + 1\n    end\n    return d\nend", "  for i = n - 1,\
    \ 1, -1 do\n    if n % i == 0 then\n      return i\n    end\n  end\n  return 1\n\
    end", "    for i = math.floor(n/2), 2, -1 do\n        if math.fmod(n, i) == 0\
    \ then\n            return i\n        end\n    end\n    return 1\nend", "\tlocal\
    \ d = math.floor(n / 2)\n\twhile d > 1 do\n\t\tif n % d == 0 then\n\t\t\treturn\
    \ d\n\t\tend\n\t\td = d - 1\n\tend\n\treturn d\nend", "\tlocal i = math.floor(n/2)\n\
    \twhile (n % i ~= 0) do\n\t\ti = i - 1\n\tend\n\treturn i\nend", "    if n <=\
    \ 1 then return n end\n    -- once is_prime is implemented, we'll use that to\
    \ speed things up\n    -- but for now, we'll go with a brute force algorithm\n\
    \    local largest = 1\n    for i = 2, n/2 do\n        if n % i == 0 then\n  \
    \          largest = i\n        end\n    end\n    return largest\nend", "    local\
    \ divisor = 2\n    while n > divisor do\n        if (n % divisor) == 0 then\n\
    \            return n/divisor\n        end\n        divisor = divisor + 1\n  \
    \  end\n    return 1\nend", "    return n/2\nend", "\tfor i = n - 1, 2, -1 do\n\
    \t\tif n % i == 0 then\n\t\t\treturn i\n\t\tend\n\tend\n\treturn 1\nend", "  for\
    \ i = n - 1, 1, -1 do\n    if n % i == 0 then\n      return i\n    end\n  end\n\
    \  return nil\nend", "\tfor i = n - 1, 1, -1 do\n\t\tif n % i == 0 then\n\t\t\t\
    return i\n\t\tend\n\tend\nend", "\tfor i = n-1, 2, -1 do\n\t\tif n % i == 0 then\n\
    \t\t\treturn i\n\t\tend\n\tend\n\treturn 1\nend", "\tlocal i = 1\n\tlocal max\
    \ = 1\n\twhile i < n do\n\t\ti = i + 1\n\t\tif n % i == 0 then\n\t\t\tmax = i\n\
    \t\tend\n\tend\n\treturn max\nend", "  local i = 1\n  local res = 0\n  while i\
    \ <= n do\n    if n % i == 0 then\n      res = i\n    end\n    i = i + 1\n  end\n\
    \  return res\nend", "    for i = n - 1, 1, -1 do\n        if n % i == 0 then\n\
    \            return i\n        end\n    end\nend", "  local divisor = 2\n  while\
    \ n % divisor ~= 0 do\n    divisor = divisor + 1\n  end\n  return divisor\nend",
  "    local x = math.floor(math.sqrt(n))\n    while n % x ~= 0 do\n        x = x\
    \ - 1\n    end\n    return x\nend", "  if n <= 0 then return nil end\n  for d\
    \ = n - 1, 2, -1 do\n    if n % d == 0 then return d end\n  end\n  return 1\n\
    end", "    local divisor = n-1\n    while n % divisor ~= 0 do\n        divisor\
    \ = divisor - 1\n    end\n    return divisor\nend", "    local divisor = 2\n \
    \   while (n % divisor ~= 0) do\n        divisor = divisor + 1\n    end\n    return\
    \ divisor\nend", "    for i = n-1, 2, -1 do\n        if n % i == 0 then\n    \
    \        return i\n        end\n    end\n    return 1\nend", "  local v = 2\n\
    \  while v < n do\n    if n % v == 0 then\n      return v\n    end\n    v = v\
    \ + 1\n  end\n  return n\nend", "    local result = 0\n    for i = 2, n - 1 do\n\
    \        if n % i == 0 then\n            result = i\n        end\n    end\n  \
    \  return result\nend", "  local divisor = 2\n  while divisor < n do\n    if n\
    \ % divisor == 0 then\n      return n / divisor\n    end\n    divisor = divisor\
    \ + 1\n  end\n  return n\nend", "    for d = n - 1, 2, -1 do\n        if n % d\
    \ == 0 then\n            return d\n        end\n    end\n    return 1\nend", " \
    \ for i = n - 1, 1, -1 do\n    if n % i == 0 then\n      return i\n    end\n \
    \ end\n  return 1\nend", "\t-- We only need to check up to square root of n\n\t\
    for i = math.floor(math.sqrt(n)), 1, -1 do\n\t\tif n % i == 0 then\n\t\t\treturn\
    \ i\n\t\tend\n\tend\n\treturn 1\nend", "\tif n % 2 == 0 then\n\t\treturn largest_divisor(n\
    \ / 2)\n\tend\n\tlocal f = 3\n\twhile n % f ~= 0 do\n\t\tf = f + 2\n\tend\n\t\
    if f * f > n then\n\t\treturn n\n\telse\n\t\treturn largest_divisor(n / f)\n\t\
    end\nend", "\tlocal i = 2\n\twhile i < n do\n\t\tif n % i == 0 then\n\t\t\treturn\
    \ n / i\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn 1\nend", "    if type(n) ~= \"\
    number\" then\n        error(\"Function largest_divisor expects a number as an\
    \ argument\", 2)\n    end\n    local i = 2\n    while i * i <= n do\n        if\
    \ n % i == 0 then\n            n = n / i\n        else\n            i = i + 1\n\
    \        end\n    end\n    return n\nend", "    -- If n is prime, it has no divisors\
    \ smaller than itself\n    if is_prime(n) then\n        return 1\n    end", " \
    \   local i = 2\n    while i < n do\n        if n % i == 0 then\n            return\
    \ i\n        end\n        i = i + 1\n    end\n    return n\nend", "    local largest\
    \ = 1\n    local divisor = 2\n    while divisor < n do\n        if n % divisor\
    \ == 0 then\n            largest = divisor\n        end\n        divisor = divisor\
    \ + 1\n    end\n    return largest\nend", "  for i=2,n-1 do\n    if n % i == 0\
    \ then\n      return i\n    end\n  end\n  return nil\nend", "\tlocal ld = math.floor(n\
    \ / 2)\n\twhile n % ld ~= 0 do\n\t\tld = ld - 1\n\tend\n\treturn ld\nend", " \
    \ local i = 2\n  while i < n do\n    if n % i == 0 then\n      return i\n    end\n\
    \    i = i + 1\n  end\n  return 1\nend", "  for i = n - 1, 2, -1 do\n    if n\
    \ % i == 0 then\n      return i\n    end\n  end\n  return 1\nend", "  local d\
    \ = math.floor(n / 2)\n  while not (n % d == 0) do\n    d = d - 1\n  end\n  return\
    \ d\nend", "\tassert(n >= 2, \"need n >= 2\")\n\tfor i = math.floor(n/2), 2, -1\
    \ do\n\t\tif (n % i) == 0 then\n\t\t\treturn i\n\t\tend\n\tend\n\treturn 1\nend",
  "  if n <= 1 then\n    return 0\n  end\n  for d = math.floor(n/2), 1, -1 do\n  \
    \  if math.fmod(n, d) == 0 then\n      return d\n    end\n  end\n  return 0\n\
    end", "  for i = n-1, 2, -1 do\n    if n % i == 0 then\n      return i\n    end\n\
    \  end\n  return 1\nend", "  for i = n - 1, 1, -1 do\n    if n % i == 0 then\n\
    \      return i\n    end\n  end\n  return 1\nend", "\tif n == 1 then\n\t\treturn\
    \ 1\n\tend\n\tlocal d = 1\n\twhile d < n do\n\t\tif (n % d) == 0 then\n\t\t\t\
    return d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn 1\nend", "    local i = n -\
    \ 1\n    while i > 0 do\n        if n % i == 0 then\n            return i\n  \
    \      end\n        i = i - 1\n    end\n    return 0\nend", "\tlocal largest_divisor\
    \ = 1\n\tfor i = 2, n / 2 do\n\t\tif n % i == 0 then\n\t\t\tlargest_divisor =\
    \ i\n\t\tend\n\tend\n\treturn largest_divisor\nend", "    local d = 2\n    while\
    \ n % d ~= 0 do\n        d = d + 1\n    end\n    return d\nend", "  if n < 2 then\
    \ return 1 end\n  local largest = 1\n  for i = 2, n / 2 do\n    if n % i == 0\
    \ then largest = i end\n  end\n  return largest\nend", "    if n % 2 == 0 then\n\
    \        return largest_divisor(n / 2)\n    end\n    local f = 3\n    while math.sqrt(n)\
    \ >= f do\n        if n % f == 0 then\n            return largest_divisor(n /\
    \ f)\n        end\n        f = f + 2\n    end\n    return n\nend", "  -- loop\
    \ thru all numbers that have n as a multiple, starting with 2\n  for i = 2, n\
    \ - 1 do\n    -- if i is a multiple of n, break out of loop\n    if n % i == 0\
    \ then\n      return i\n    end\n  end\n  -- if no numbers had n as a multiple,\
    \ n is prime\n  return n\nend", "\tfor d = n - 1, 2, -1 do\n\t\tif n % d == 0\
    \ then\n\t\t\treturn d\n\t\tend\n\tend\n\terror(\"n is prime\")\nend", "    if\
    \ n == 0 then return n end\n    local divisor = math.floor(n / 2)\n    while n\
    \ % divisor ~= 0 do\n        divisor = divisor - 1\n    end\n    return divisor\n\
    end", "    for i=2,n do\n        if n % i == 0 then\n            return i\n  \
    \      end\n    end\n    return 1\nend", "    local limit = math.floor(math.sqrt(n))\n\
    \    local i = limit\n    while (i > 1) do\n        if (n % i == 0) then\n   \
    \         return i\n        end\n        i = i - 1\n    end\n    return 1\nend",
  "    if n % 2 == 0 then\n        return n / 2\n    end\n    for i = 3, math.floor(math.sqrt(n)),\
    \ 2 do\n        if n % i == 0 then\n            return n / i\n        end\n  \
    \  end\n    return 1\nend", "    local largest = math.floor(n / 2)\n    while\
    \ (largest > 0) do\n        if n % largest == 0 then\n            return largest\n\
    \        end\n        largest = largest - 1\n    end\n    return largest\nend",
  "  for i=n-1,1,-1 do\n    if n % i == 0 then\n      return i\n    end\n  end\n \
    \ return 1\nend", "    local max = 1\n    for i = 1, n-1 do\n        if n % i\
    \ == 0 then\n            max = i\n        end\n    end\n    return max\nend",
  "  for i = n-1, 1, -1 do\n    if n % i == 0 then\n      return i\n    end\n  end\n\
    \  return 1\nend", "  for i = n-1, 1, -1 do\n    if n % i == 0 then\n      return\
    \ i\n    end\n  end\n  return 1\nend", "    for d = n - 1, 2, -1 do\n        if\
    \ n % d == 0 then\n            return d\n        end\n    end\n    return 1\n\
    end", "    local i = 2\n    while i < n do\n        if n % i == 0 then\n     \
    \       return n / i\n        end\n        i = i + 1\n    end\n    return n\n\
    end", "  local d = math.floor(n/2)\n  while n % d ~= 0 do\n    d = d - 1\n  end\n\
    \  return d\nend", "\tfor divisor = n - 1, 2, -1 do\n\t\tif n % divisor == 0 then\n\
    \t\t\treturn divisor\n\t\tend\n\tend\n\treturn nil\nend", "  local p, f\n  if\
    \ n % 2 == 0 then\n    p = 2\n    f = 1\n  else\n    p = 3\n    f = 3\n  end\n\
    \  while n % p ~= 0 do\n    p = p + f\n    f = 6 - f\n  end\n  return p\nend",
  "\tfor i = 1, n - 1 do\n\t\tif n % i == 0 then\n\t\t\treturn i\n\t\tend\n\tend\n\
    end", "    local max = 0\n    for d = 2, n-1 do\n        if n % d == 0 then\n\
    \            max = d\n        end\n    end\n    return max\nend", "  for i = n\
    \ - 1, 1, -1 do\n    if n % i == 0 then\n      return i\n    end\n  end\n  return\
    \ 0\nend", "    for i = 2, n - 1 do\n        if math.fmod(n, i) == 0 then\n  \
    \          return i\n        end\n    end\n    return n\nend", "    for i=2,n-1\
    \ do\n        if n % i == 0 then\n            return i\n        end\n    end\n\
    \    return 0\nend", "\tlocal ld = 1\n\tfor i = 2, n-1 do\n\t\tif n % i == 0 then\n\
    \t\t\tld = i\n\t\tend\n\tend\n\treturn ld\nend", "  local largest = 0\n  for i\
    \ = 1, n - 1 do\n    if n % i == 0 then\n      largest = i\n    end\n  end\n \
    \ return largest\nend", "  local largest = 2\n  local i = 3\n  while i <= n/2\
    \ do\n    if n % i == 0 then\n      largest = i\n    end\n    i = i + 1\n  end\n\
    \  return largest\nend", "  -- Start at 2 because 1 divides evenly, but it's not\
    \ useful as a factor of n\n  for i = 2, n - 1 do\n    if n % i == 0 then\n   \
    \   return i\n    end\n  end\n  return 1\nend", "    local d = 2\n    while (n\
    \ % d) ~= 0 do\n        d = d + 1\n    end\n    return d\nend", "    local res\
    \ = 1\n    for i = 2, n/2 do\n        if n % i == 0 then\n            res = i\n\
    \        end\n    end\n    return res\nend", "\tlocal result\n\tfor i = 2, n-1\
    \ do\n\t\tif n % i == 0 then\n\t\t\tresult = i\n\t\tend\n\tend\n\treturn result\n\
    end", "  local divisor = 2\n  while divisor < n do\n    if n % divisor == 0 then\n\
    \      n = n / divisor\n    else\n      divisor = divisor + 1\n    end\n  end\n\
    \  return divisor\nend", "    for i = n-1, 2, -1 do\n        if n % i == 0 then\n\
    \            return i\n        end\n    end\n    return 1\nend", "\tlocal d =\
    \ math.floor(n / 2)", "  for i=n-1,2,-1 do\n    if n % i == 0 then\n      return\
    \ i\n    end\n  end\n  return nil\nend", "    local i\n    for i = n-1, 1, -1\
    \ do\n        if n % i == 0 then\n            return i\n        end\n    end\n\
    \    return n\nend", "  for i = n-1,2,-1 do\n    if n % i == 0 then\n      return\
    \ i\n    end\n  end\n  return 1\nend", "\tif n == 1 then\n\t\treturn 1\n\tend\n\
    \tfor i = 2, n - 1 do\n\t\tif n % i == 0 then\n\t\t\treturn i\n\t\tend\n\tend\n\
    \treturn n\nend", "  for x = n-1, 2, -1 do\n    if n % x == 0 then\n      return\
    \ x\n    end\n  end\n  return nil\nend", "    for i = math.floor(n / 2), 1, -1\
    \ do\n        if n % i == 0 then\n            return i\n        end\n    end\n\
    \    return 1\nend", "  for d = n - 1, 2, -1 do\n    if n % d == 0 then\n    \
    \  return d\n    end\n  end\n  return nil\nend", "\tlocal m = math.floor(math.sqrt(n))\n\
    \twhile n % m ~= 0 do\n\t\tm = m - 1\n\tend\n\treturn m\nend", "\tlocal i = math.floor(n\
    \ / 2)\n\twhile i > 1 do\n\t\tif n % i == 0 then\n\t\t\treturn i\n\t\tend\n\t\t\
    i = i - 1\n\tend\n\treturn 1\nend", "    local d = 1\n    while n > 1 do\n   \
    \     d = d + 1\n        if n % d == 0 then\n            n = n / d\n         \
    \   d = 1\n        end\n    end\n    return d\nend", "    if n % 2 == 0 then\n\
    \        return n/2\n    end\n    local i = 3\n    while i < n do\n        if\
    \ n % i == 0 then\n            return n/i\n        end\n        i = i + 2\n  \
    \  end\n    return 1\nend", "    -- TODO: implement this function, then remove\
    \ this comment\nend", "    local divisor = 2\n    while n % divisor ~= 0 do\n\
    \        divisor = divisor + 1\n    end\n    return divisor\nend", "  for d =\
    \ math.floor(n/2), 2, -1 do\n    if n % d == 0 then\n      return d\n    end\n\
    \  end\n  return 1\nend", "  -- we don't need to check all numbers, because if\
    \ a number x divides n, it also divides n / x\n  local d = math.floor(math.sqrt(n))\n\
    \  while n % d ~= 0 do\n    d = d - 1\n  end\n  return d\nend", "  local d = 2\n\
    \  while n % d ~= 0 do\n    d = d + 1\n  end\n  return d\nend", "  local largest\
    \ = 0\n  for d = n-1, 1, -1 do\n    if n % d == 0 then\n      largest = d\n  \
    \    break\n    end\n  end\n  return largest\nend", "  local m = n-1\n  while\
    \ n % m ~= 0 do\n    m = m - 1\n  end\n  return m\nend", "\tif n % 2 == 0 then\n\
    \t\treturn largest_divisor(n / 2)\n\tend\n\tlocal d = 3\n\twhile (n % d ~= 0)\
    \ do\n\t\td = d + 2\n\tend\n\tif d * d > n then\n\t\treturn n\n\telse\n\t\treturn\
    \ largest_divisor(n / d)\n\tend\nend", "    for i = n - 1, 1, -1 do\n        if\
    \ n % i == 0 then\n            return i\n        end\n    end\nend", "  local\
    \ max = 1\n  for i = 2, n/2 do\n    if n % i == 0 then\n      max = i\n    end\n\
    \  end\n  return max\nend", "  local divisor = n - 1\n  while true do\n    if\
    \ n % divisor == 0 then\n      return divisor\n    end\n    divisor = divisor\
    \ - 1\n  end\nend", "\tlocal limit = math.floor(math.sqrt(n))\n\tfor i = limit,\
    \ 1, -1 do\n\t\tif n % i == 0 then\n\t\t\treturn i\n\t\tend\n\tend\n\treturn 1\n\
    end", "\tlocal max = math.floor(n / 2)\n\tif (n == 1) then\n\t\treturn 0\n\tend\n\
    \tfor i = max, 2, -1 do\n\t\tif (n % i == 0) then\n\t\t\treturn i\n\t\tend\n\t\
    end\n\treturn 0\nend", "  local largest = 1\n  for d = 2, n-1 do\n    if n % d\
    \ == 0 then\n      largest = d\n    end\n  end\n  return largest\nend", "  for\
    \ i = n-1, 1, -1 do\n    if n % i == 0 then\n      return i\n    end\n  end\n\
    \  return 1\nend", "\tlocal divisor = n\n\tlocal largest = 0\n\twhile divisor\
    \ > 1 do\n\t\tdivisor = divisor - 1\n\t\tif n % divisor == 0 then\n\t\t\tlargest\
    \ = divisor\n\t\t\tbreak\n\t\tend\n\tend\n\treturn largest\nend", "    local i\
    \ = 2\n    while i < n do\n        if n % i == 0 then\n            return i\n\
    \        end\n        i = i + 1\n    end\n    return 1\nend", "  -- try each number\
    \ smaller than n from n-1 down to 2\n  for i = n-1, 2, -1 do\n    -- if n is evenly\
    \ divisible by i\n    if n % i == 0 then\n      -- then return i\n      return\
    \ i\n    end\n  end\n  -- if we get through the loop and find no divisors, return\
    \ 1\n  return 1\nend", "    for i = math.floor(n / 2), 1, -1 do\n        if math.mod(n,\
    \ i) == 0 then\n            return i\n        end\n    end\n    return 1\nend",
  "\tlocal largest = 0\n\tfor i = 1, n do\n\t\tif n % i == 0 then\n\t\t\tlargest =\
    \ i\n\t\tend\n\tend\n\treturn largest\nend", "    local largest = 1\n    for i\
    \ = 1, (n-1) do\n        if (n % i) == 0 then\n            largest = i\n     \
    \   end\n    end\n    return largest\nend", "  local i = math.floor(n / 2)\n \
    \ while i > 1 do\n    if n % i == 0 then\n      return i\n    end\n    i = i -\
    \ 1\n  end\n  return i\nend", "    local divisor = 2\n    while n % divisor ~=\
    \ 0 do\n        divisor = divisor + 1\n    end\n    return divisor\nend", "  \
    \  local divisor = math.floor(n/2)\n    while divisor > 0 do\n        if (n %\
    \ divisor) == 0 then\n            return divisor\n        end\n        divisor\
    \ = divisor - 1\n    end\n    return 1\nend", "  for d = 1, n-1 do\n    if n %\
    \ d == 0 then\n      return d\n    end\n  end\n  return nil\nend", "    -- Use\
    \ the math library\n    return math.floor(n / 2)\nend", '    local divisor = 2',
  "  for i=n-1, 2, -1 do\n    if n % i == 0 then\n      return i\n    end\n  end\n\
    \  return 0\nend", "\tlocal i = math.floor(n/2)\n\twhile i > 1 do\n\t\tif n %\
    \ i == 0 then\n\t\t\treturn i\n\t\tend\n\t\ti = i - 1\n\tend\n\treturn 1\nend",
  "    for i = n - 1, 1, -1 do\n        if n % i == 0 then\n            return i\n\
    \        end\n    end\nend", "  for i = n-1, 1, -1 do\n    if n % i == 0 then\n\
    \      return i\n    end\n  end\n  return nil\nend", "    for i = n - 1, 2, -1\
    \ do\n        if n % i == 0 then\n            return i\n        end\n    end\n\
    \    return 1\nend", "    local d = math.floor(n/2)\n    for i = 1, d do\n   \
    \     if n % i == 0 then\n            return i\n        end\n    end\n    return\
    \ 1\nend", "    for i = n - 1, 1, -1 do\n        if n % i == 0 then\n        \
    \    return i\n        end\n    end\nend", "    local d = 2\n    while n % d ~=\
    \ 0 do\n        d = d + 1\n    end\n    return d\nend", "  local m = math.floor(math.sqrt(n))\n\
    \  for d = m, 2, -1 do\n    if n % d == 0 then\n      return d\n    end\n  end\n\
    \  return 1\nend", "    local largest = 0\n    for i = 2, n-1 do\n        if n\
    \ % i == 0 then\n            largest = i\n        end\n    end\n    return largest\n\
    end", "    local divisor = 1\n    for i = 2, n-1 do\n        if n % i == 0 then\n\
    \            divisor = i\n        end\n    end\n    return divisor\nend", "  \
    \  local r = n - 1\n    while r > 1 do\n        if n % r == 0 then\n         \
    \   return r\n        end\n        r = r - 1\n    end\n    return nil\nend", " \
    \   local i = 2\n    local d = 2\n    while i <= n/2 do\n        if (n % i) ==\
    \ 0 then\n            d = i\n        end\n        i = i + 1\n    end\n    return\
    \ d\nend", "\tfor i = n-1, 1, -1 do\n\t\tif math.fmod(n, i) == 0 then\n\t\t\t\
    return i\n\t\tend\n\tend\nend", "    if n < 2 then return false end\n    local\
    \ max = math.floor(n/2)\n    local largest = 0\n    for i = 1, max do\n      \
    \  if n % i == 0 then\n            largest = i\n        end\n    end\n    return\
    \ largest\nend", "  for d = n - 1, 2, -1 do\n    if n % d == 0 then\n      return\
    \ d\n    end\n  end\n  return nil\nend", "\tfor i = n - 1, 1, -1 do\n\t\tif n\
    \ % i == 0 then\n\t\t\treturn i\n\t\tend\n\tend\nend", "    -- Insert your code\
    \ here\n    local i = math.floor(n/2)\n    while i > 1 do\n        if n % i ==\
    \ 0 then\n            return i\n        end\n        i = i - 1\n    end\n    return\
    \ 1\nend", "  for i=math.floor(n/2),1,-1 do\n    if n % i == 0 then\n      return\
    \ i\n    end\n  end\n  return 1\nend", "  local limit = math.floor(math.sqrt(n))\n\
    \  local largest = 1\n  for i = 2, limit do\n    if n % i == 0 then\n      largest\
    \ = i\n    end\n  end\n  return largest\nend", "  if n < 2 then return 1 end\n\
    \  local divisor = 2\n  while n % divisor ~= 0 do\n    divisor = divisor + 1\n\
    \  end\n  return divisor\nend", "  local mid = math.floor(n/2)\n  local largest\n\
    \  for i = 2, mid do\n    if n % i == 0 then\n      largest = i\n    end\n  end\n\
    \  return largest\nend", "    local i = n - 1\n    while n % i ~= 0 do\n     \
    \   i = i - 1\n    end\n    return i\nend", "    if n > 1 then\n        local\
    \ m = math.floor(n / 2)\n        while m > 1 do\n            if n % m == 0 then\n\
    \                return m\n            end\n            m = m - 1\n        end\n\
    \    end\n    return 1\nend", "    if n == 0 then return 0 end\n    local largest\
    \ = math.floor(n/2)\n    while n % largest ~= 0 do\n        largest = largest\
    \ - 1\n    end\n    return largest\nend", "  for i = 2, n - 1 do\n    if n % i\
    \ == 0 then\n      return n / i\n    end\n  end\n  return 1\nend", "  if n > 1\
    \ then\n    local largest = 2\n    while n > 1 do\n      while n % largest ==\
    \ 0 do\n        n = n / largest\n      end\n      largest = largest + 1\n    end\n\
    \    return largest - 1\n  else\n    return nil\n  end\nend", "    for i=n-1,\
    \ 2, -1 do\n        if math.fmod(n, i) == 0 then\n            return i\n     \
    \   end\n    end\n    return 1\nend", "\tfor i = n-1, 1, -1 do\n\t\tif n % i ==\
    \ 0 then\n\t\t\treturn i\n\t\tend\n\tend\nend", "  -- Find the first number from\
    \ the list [2..n] which divides n evenly\n  for i = 2, n do\n    if n % i == 0\
    \ then\n      return i\n    end\n  end\n  -- return n if n is a prime number\n\
    \  return n\nend", "    for i = n-1, 1, -1 do\n        if n % i == 0 then\n  \
    \          return i\n        end\n    end\nend", "    local biggest = math.floor(n/2)\n\
    \    while biggest > 0 do\n        if n % biggest == 0 then\n            return\
    \ biggest\n        end\n        biggest = biggest - 1\n    end\n    return n\n\
    end", "    -- if n is even, then 2 is the largest divisor\n    if n % 2 == 0 then\n\
    \        return n / 2\n    end\n    -- otherwise, loop through all odd numbers\
    \ and find the largest one that divides n\n    for i = 3, n - 1, 2 do\n      \
    \  if n % i == 0 then\n            return n / i\n        end\n    end\n    --\
    \ if we are here, then n is prime\n    return 1\nend", "    local divisor = n\
    \ - 1\n    while divisor > 0 do\n        if (n % divisor) == 0 then\n        \
    \    return divisor\n        end\n        divisor = divisor - 1\n    end\n   \
    \ return divisor\nend", "  -- Return the largest divisor of n (smaller than n)\n\
    \  local divisor = n - 1\n  local result = nil\n  while divisor > 0 do\n    if\
    \ n % divisor == 0 then\n      result = divisor\n      break\n    end\n    divisor\
    \ = divisor - 1\n  end\n  return result\nend", "  for i=n-1,1,-1 do\n    if n\
    \ % i == 0 then\n      return i\n    end\n  end\n  return n\nend", "    if n %\
    \ 2 == 0 then\n        return 2\n    end\n    if n % 3 == 0 then\n        return\
    \ 3\n    end\n    if n % 5 == 0 then\n        return 5\n    end\n    if n % 7\
    \ == 0 then\n        return 7\n    end\n    if n % 11 == 0 then\n        return\
    \ 11\n    end\n    if n % 13 == 0 then\n        return 13\n    end\n    if n %\
    \ 17 == 0 then\n        return 17\n    end\n    if n % 19 == 0 then\n        return\
    \ 19\n    end\n    if n % 23 == 0 then\n        return 23\n    end\n    if n %\
    \ 29 == 0 then\n        return 29\n    end\n    if n % 31 == 0 then\n        return\
    \ 31\n    end\n    if n % 37 == 0 then\n        return 37\n    end\n    if n %\
    \ 41 == 0 then\n        return 41\n    end\n    if n % 43 == 0 then\n        return\
    \ 43\n    end\n    if n % 47 == 0 then\n        return 47\n    end\n    if n %\
    \ 53 == 0 then\n        return 53\n    end\n    if n % 59 == 0 then\n        return\
    \ 59\n    end\n    if n % 61 == 0 then\n        return 61\n    end\n    if n %\
    \ 67 == 0 then\n        return 67\n    end\n    if n % 71 == 0 then\n        return\
    \ 71\n    end\n    if n % 73 == 0 then\n        return 73\n    end\n    if n %\
    \ 79 == 0 then\n        return 79\n    end\n    if n % 83 == 0 then\n        return\
    \ 83\n    end\n    if n % 89 == 0 then\n        return 89\n    end\n    if n %\
    \ 97 == 0 then\n        return 97\n    end\n    if n % 101 == 0 then\n       \
    \ return 101\n    end\n    if n % 103 == 0 then\n        return 103\n    end\n\
    \    if n % 107 == 0 then\n        return 107\n    end\n    if n % 109 == 0 then\n\
    \        return 109\n    end\n    if n % 113 == 0 then\n        return 113\n \
    \   end\n    if n % 127 == 0 then\n        return 127\n    end\n    if n % 131\
    \ == 0 then\n        return 131\n    end", "    for i = math.floor(n/2), 1, -1\
    \ do\n        if (n % i == 0) then\n            return i\n        end\n    end\n\
    \    return 1\nend", "  if n % 2 == 0 then\n    return largest_divisor(n / 2)\n\
    \  end\n  local i = 3\n  while n % i ~= 0 do\n    i = i + 2\n  end\n  return largest_divisor(n\
    \ / i)\nend", "  for d = n - 1, 2, -1 do\n    if n % d == 0 then\n      return\
    \ d\n    end\n  end\n  return n\nend", "    -- Get all the divisors of the number.\n\
    \    -- >>> divisors(15)\n    -- {1, 3, 5, 15}\n    local divisors = get_divisors(n)\n\
    \    -- Pop the last one (n) from the list and return the new last one.\n    divisors[#divisors]\
    \ = nil\n    return divisors[#divisors]\nend", "  return select(2, number.factors(n))\n\
    end", "    if n % 2 == 0 then\n        return n / 2\n    end\n    for i = 3, math.floor(math.sqrt(n)),\
    \ 2 do\n        if n % i == 0 then\n            return n / i\n        end\n  \
    \  end\n    return 1\nend", "    for i = n - 1, 1, -1 do\n        if n % i ==\
    \ 0 then\n            return i\n        end\n    end\nend", "    for i = n-1,\
    \ 1, -1 do\n        if n % i == 0 then\n            return i\n        end\n  \
    \  end\nend", "    local divisor = n - 1\n    while divisor > 0 do\n        if\
    \ n % divisor == 0 then\n            return divisor\n        end\n        divisor\
    \ = divisor - 1\n    end\n    return nil\nend", "  local largest = 1\n  local\
    \ limit = n - 1\n  for i = 2, limit do\n    if n % i == 0 then\n      largest\
    \ = i\n    end\n  end\n  return largest\nend", "\tfor i=n-1, 2, -1 do\n\t\tif\
    \ math.fmod(n, i) == 0 then\n\t\t\treturn i\n\t\tend\n\tend\n\t\n\treturn 1\n\
    end", "  -- go from n-1 to 1, testing for division\n  for i = n-1, 1, -1 do\n\
    \    if n % i == 0 then\n      return i\n    end\n  end\n  -- return 1 if n is\
    \ prime\n  return 1\nend", "  local n_sqrt = math.sqrt(n)\n  local divisor = n\n\
    \  while divisor > n_sqrt do\n    if n % divisor == 0 then\n      return divisor\n\
    \    end\n    divisor = divisor - 1\n  end\n  return 1\nend", "\tlocal d = 2\n\
    \twhile n % d ~= 0 do\n\t\td = d + 1\n\tend\n\treturn d\nend", "  for i = n -\
    \ 1, 1, -1 do\n    if n % i == 0 then\n      return i\n    end\n  end\n  return\
    \ 1\nend", "    for i = n - 1, 1, -1 do\n        if n % i == 0 then\n        \
    \    return i\n        end\n    end\nend", "  for i = n - 1, 1, -1 do\n    if\
    \ n % i == 0 then\n      return i\n    end\n  end\n  return 1\nend", "  local\
    \ divisor = n - 1\n  while n % divisor ~= 0 do\n    divisor = divisor - 1\n  end\n\
    \  return divisor\nend", "    local divisor = n - 1\n    while n % divisor ~=\
    \ 0 do\n        divisor = divisor - 1\n    end\n    return divisor\nend", "\t\
    for i = math.floor(n/2), 1, -1 do\n\t\tif n % i == 0 then\n\t\t\treturn i\n\t\t\
    end\n\tend\n\treturn 1\nend", "\tfor i = n - 1, 2, -1 do\n\t\tif n % i == 0 then\n\
    \t\t\treturn i\n\t\tend\n\tend\n\treturn 1\nend", "    local i = math.floor(n/2)\n\
    \    while i > 1 do\n        if (n % i == 0) then\n            return i\n    \
    \    end\n        i = i - 1\n    end\n    return 1\nend", "    if n > 1 then\n\
    \        local d = 2\n        while n % d ~= 0 do\n            d = d + 1\n   \
    \     end\n        return d\n    else\n        return 0\n    end\nend", "    local\
    \ max_divisor = math.floor(n / 2)\n    local function divide_by(divisor)\n   \
    \     return (n % divisor == 0)\n    end\n    while not divide_by(max_divisor)\
    \ do\n        max_divisor = max_divisor - 1\n    end\n    return max_divisor\n\
    end", "  local largest = 1\n  for i = 2, n-1 do\n    if n % i == 0 then\n    \
    \  largest = i\n    end\n  end\n  return largest\nend", "  local divisor = 2\n\
    \  while (n > divisor) do\n    if (n % divisor == 0) then\n      return n / divisor\n\
    \    end\n    divisor = divisor + 1\n  end\n  return 1\nend", "    local d = 2\n\
    \    while d < n do\n        if n % d == 0 then\n            return d\n      \
    \  end\n        d = d + 1\n    end\n    return 1\nend", "  local divisor = n -\
    \ 1\n  while divisor > 0 do\n    if n % divisor == 0 then\n      return divisor\n\
    \    end\n    divisor = divisor - 1\n  end\n  return n\nend", "    local i = n\
    \ - 1\n    while n % i ~= 0 do\n        i = i - 1\n    end\n    return i\nend",
  "    for i = 2, n - 1 do\n        if n % i == 0 then\n            return i\n   \
    \     end\n    end\n    return 1\nend", '    local largest = 1', "    for d =\
    \ n - 1, 2, -1 do\n        if n % d == 0 then\n            return d\n        end\n\
    \    end\n    return 1\nend", '  local largest = 1']
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

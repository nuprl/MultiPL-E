name: HumanEval_60_sum_to_n
language: lua
prompt: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
  -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
  -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
  \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n \
  \   lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
  \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  return (n*(n+1))/2\nend", "  return n * (n + 1) / 2\nend", "  return\
    \ n*(n+1)/2\nend", "    return (n*(n+1))/2\nend", "  return n*(n+1)/2\nend", " \
    \ if n == 1 then\n    return 1\n  else\n    return n + sum_to_n(n-1)\n  end\n\
    end", "  if n <= 0 then\n    return 0\n  else\n    return n + sum_to_n(n-1)\n\
    \  end\nend", "  if n <= 0 then\n    return 0\n  else\n    return n + sum_to_n(n-1)\n\
    \  end\nend", "    return n * (n + 1) / 2\nend", "    return n * (n + 1) / 2\n\
    end", "  return n * (n + 1) / 2\nend", "    return (n * (n + 1)) / 2\nend", " \
    \   if n == 1 then\n        return 1\n    else\n        return n + sum_to_n(n\
    \ - 1)\n    end\nend", "\treturn (n * (n + 1)) / 2\nend", "    -- function implementation\n\
    \    local sum = 0", "  return (n * (n + 1)) / 2\nend", "\tif n == 1 then\n\t\t\
    return 1\n\telse\n\t\treturn n + sum_to_n(n-1)\n\tend\nend", "    local sum =\
    \ 0\n    for i = 1, n do\n        sum = sum + i\n    end\n    return sum\nend",
  "  -- define function, don't forget the return\n  local sum = 0\n  for i = 1, n\
    \ do\n    sum = sum + i\n  end\n  return sum\nend", "  return n * (n + 1) / 2\n\
    end", "  -- This is the base case.\n  if n == 1 then\n    return 1\n  end\n  --\
    \ The last sum is equal to the number itself.\n  local last_sum = n\n  -- We find\
    \ the sum of the numbers from 1 to n and call the function\n  -- again passing\
    \ n-1.\n  return last_sum + sum_to_n(n-1)\nend", "\tlocal i = 0\n\tfor _ = 1,\
    \ n do\n\t\ti = i + _\n\tend\n\treturn i\nend", "    if n < 1 then\n        return\
    \ 0\n    else\n        return n + sum_to_n(n - 1)\n    end\nend", "  if n == 1\
    \ then\n    return 1\n  else\n    return n + sum_to_n(n-1)\n  end\nend", '    local
    sum = 0', "    local i = 0\n    local sum = 0\n    while i < n do\n        i =\
    \ i + 1\n        sum = sum + i\n    end\n    return sum\nend", "    local sum\
    \ = 0\n    for i = 1, n do\n        sum = sum + i\n    end\n    return sum\nend",
  "    return n * (n + 1) / 2\nend", "  if n == 1 then\n    return 1\n  else\n   \
    \ return n + sum_to_n(n-1)\n  end\nend", "  return (n * (n + 1)) / 2\nend", " \
    \   return ((n * (n + 1)) / 2)\nend", "  if (n==1) then\n    return 1\n  else\n\
    \    return n + sum_to_n(n-1)\n  end\nend", "  local sum = 0\n  for i = 1, n do\n\
    \    sum = sum + i\n  end\n  return sum\nend", "    if n < 1 then\n        return\
    \ 0\n    else\n        return n + sum_to_n(n - 1)\n    end\nend", "    -- using\
    \ formula n(n+1)/2 where n is the last number of the range\n    return math.floor(n\
    \ * (n + 1) / 2)\nend", "    local sum = 0\n    for i = 1, n do\n        sum =\
    \ sum + i\n    end\n    return sum\nend", "\treturn n*(n+1)/2\nend", "    return\
    \ n * (n + 1) / 2\nend", "    local sum = 0\n    for i = 1, n do\n        sum\
    \ = sum + i\n    end\n    return sum\nend", "  -- YOUR CODE HERE\n  return n*(n+1)/2\n\
    end", "\treturn n*(n+1)/2\nend", "  return n * (n + 1) / 2\nend", "  if n == 1\
    \ then\n    return 1\n  else\n    return n + sum_to_n(n-1)\n  end\nend", "   \
    \ local sum = 0\n    for i = 1, n do\n        sum = sum + i\n    end\n    return\
    \ sum\nend", "\t-- sum_to_n(n) = n + sum_to_n(n-1)\n\tif n == 1 then\n\t\treturn\
    \ 1\n\telse\n\t\treturn n + sum_to_n(n-1)\n\tend\nend", "    local sum = 0\n \
    \   for i = 1, n do\n        sum = sum + i\n    end\n    return sum\nend", " \
    \ local sum = 0\n  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend",
  "    if n == 1 then\n        return 1\n    else\n        return n + sum_to_n(n -\
    \ 1)\n    end\nend", "  if n == 1 then\n    return 1\n  else\n    return n + sum_to_n(n-1)\n\
    \  end\nend", "\treturn n * (n + 1) / 2\nend", "    -- Base Case\n    if n ==\
    \ 1 then\n        return 1\n    end\n    -- Return the sum of n + n-1\n    return\
    \ n + sum_to_n(n-1)\nend", "\tlocal sum = 0\n\tfor i = 1, n do\n\t\tsum = sum\
    \ + i\n\tend\n\treturn sum\nend", "    return n * (n + 1) / 2\nend", "\treturn\
    \ n * (n + 1) / 2\nend", "    -- initialize to 0\n    local sum = 0\n    for i\
    \ = 1, n do\n        sum = sum + i\n    end\n    return sum\nend", "  return n*(n+1)/2\n\
    end", "  local ans = 0\n  for i = 1, n do\n    ans = ans + i\n  end\n  return\
    \ ans\nend", "    if n == 1 then\n        return 1\n    else\n        return n\
    \ + sum_to_n(n - 1)\n    end\nend", "  local sum = 0\n  for i = 1, n do\n    sum\
    \ = sum + i\n  end\n  return sum\nend", '    local result = 0', "  return math.floor(n\
    \ * (n + 1) / 2)\nend", "    -- your code goes here\nend", "    local sum = 0\n\
    \    for i = 1, n do\n        sum = sum + i\n    end\n    return sum\nend", " \
    \   local sum = 0\n    for i = 1, n do\n        sum = sum + i\n    end\n    return\
    \ sum\nend", "    if n == 1 then\n        return 1\n    else\n        return n\
    \ + sum_to_n(n - 1)\n    end\nend", "    if n==1 then\n        return 1\n    else\n\
    \        return n + sum_to_n(n-1)\n    end\nend", "\treturn n * (n + 1) / 2\n\
    end", "    return n * (n + 1) / 2\nend", '    local sum = 0', "\tlocal sum = 0\n\
    \tfor i = 1, n do\n\t\tsum = sum + i\n\tend\n\treturn sum\nend", "  return n*(n+1)/2\n\
    end", "  return n * (n + 1) / 2\nend", "\tif n <= 0 then\n\t\treturn 0\n\telse\n\
    \t\treturn n + sum_to_n(n-1)\n\tend\nend", "    return n * (n + 1) / 2\nend",
  "    local result = 0\n    for i = 1, n do\n        result = result + i\n    end\n\
    \    return result\nend", "  if n == 1 then\n    return 1\n  else\n    return\
    \ n + sum_to_n(n-1)\n  end\nend", "    -- insert your code here\n    if n == 1\
    \ then\n        return 1\n    else\n        return n + sum_to_n(n-1)\n    end\n\
    end", "    sum = n * (n + 1) / 2\n    return sum\nend", "\tif n == 1 then\n\t\t\
    return 1\n\telse\n\t\treturn n + sum_to_n(n-1)\n\tend\nend", "    -- YOUR CODE\
    \ HERE\n    if n == 1 then\n        return 1\n    else\n        return n + sum_to_n(n-1)\n\
    \    end\nend", "  -- put your code here!\nend", "    if n == 1 then\n       \
    \ return 1\n    else\n        return n + sum_to_n(n - 1)\n    end\nend", "   \
    \ local total = 0\n    for i = 1, n do\n        total = total + i\n    end\n \
    \   return total\nend", "  return (n * (n + 1)) / 2\nend", "    local i = 1\n\
    \    local sum = 0\n    for i = 1, n do\n        sum = sum + i\n    end\n    return\
    \ sum\nend", "  return n * (n + 1) / 2\nend", "    return n * (n + 1) / 2\nend",
  "    if n==1 then\n        return 1\n    else\n        return n + sum_to_n(n-1)\n\
    \    end\nend", "  -- Do NOT write \"return n * (n + 1) / 2\"\n  -- Avoid using\
    \ a loop or recursion here.\n  local sum = 0\n  for i = 1, n do\n    sum = sum\
    \ + i\n  end\n  return sum\nend", "\t-- TODO: replace 0 with the correct value,\
    \ and return the value\n\t--return 0\n\tif n == 1 then\n\t\treturn 1\n\telse\n\
    \t\treturn n + sum_to_n(n-1)\n\tend\nend", "    return (n * (n + 1)) / 2\nend",
  "    return n * (n + 1) / 2\nend", "  if n == 1 then\n    return 1\n  else\n   \
    \ return n + sum_to_n(n-1)\n  end\nend", "    return n * (n + 1) / 2\nend", " \
    \ if n == 1 then\n    return 1\n  else\n    return n + sum_to_n(n-1)\n  end\n\
    end", "    return ((n * (n + 1)) / 2)\nend", "    local sum = 0\n    for i = 1,\
    \ n do\n        sum = sum + i\n    end\n    return sum\nend", "  local result\
    \ = 0\n  for i = 1, n do\n    result = result + i\n  end\n  return result\nend",
  "\tlocal total = 0\n\tfor i = 1, n do\n\t\ttotal = total + i\n\tend\n\treturn total\n\
    end", "\tlocal result = 0\n\tfor i = 1, n do\n\t\tresult = result + i\n\tend\n\
    \treturn result\nend", "  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend", "  if n <= 0 then\n    return 0\n  else\n    return\
    \ n + sum_to_n(n-1)\n  end\nend", "    if n == 1 then\n        return 1\n    else\n\
    \        return n + sum_to_n(n - 1)\n    end\nend", "  if n==1 then\n    return\
    \ 1\n  else\n    return n + sum_to_n(n-1)\n  end\nend", "\tlocal sum = 0\n\tfor\
    \ i = 1, n do\n\t\tsum = sum + i\n\tend\n\treturn sum\nend", "  return n * (n\
    \ + 1) / 2\nend", "    return n * (n + 1) / 2\nend", "    local ans = 0\n    for\
    \ i = 1, n do\n        ans = ans + i\n    end\n    return ans\nend", "    return\
    \ n * (n + 1) / 2\nend", "    return n * (n + 1) / 2\nend", "    return (n * (n\
    \ + 1)) / 2\nend", "  if n == 1 then\n    return 1\n  else\n    return n + sum_to_n(n-1)\n\
    \  end\nend", "    return (n * (n + 1)) / 2\nend", "  if n == 1 then\n    return\
    \ 1\n  else\n    return n + sum_to_n(n-1)\n  end\nend", "  if n == 1 then\n  \
    \  return 1\n  else\n    return n + sum_to_n(n-1)\n  end\nend", "    -- We define\
    \ a function that sums an integer and its previous number,\n    -- and then repeatedly\
    \ call this function with our input integer and\n    -- its previous number.\n\
    \    --\n    -- This is a very efficient way to do the summation operation, as\
    \ it\n    -- only requires a single function call for each number in the series.\n\
    \    -- Normally, the summation operation would require n function calls.\n  \
    \  local function sum_int_and_prev(int, prev)\n        return int + prev\n   \
    \ end", "    local sum = 0\n    local sum2 = 0\n    while (n > 0) do\n       \
    \ sum = sum + n\n        n = n - 1\n    end\n    return sum\nend", "\tlocal total\
    \ = 0\n\twhile n > 0 do\n\t\ttotal = total + n\n\t\tn = n - 1\n\tend\n\treturn\
    \ total\nend", "  return (n * (n + 1)) / 2\nend", "    if n == 1 then\n      \
    \  return 1\n    else\n        return n + sum_to_n(n - 1)\n    end\nend", "  return\
    \ n*(n+1)/2\nend", "    if n == 1 then\n        return 1\n    else\n        return\
    \ n + sum_to_n(n - 1)\n    end\nend", "\t-- sum from 1 to n is n*(n+1)/2 (https://proofwiki.org/wiki/Sum_of_First_n_Natural_Numbers)\n\
    \treturn (n*(n+1))/2\nend", "    if n == 1 then\n        return 1\n    else\n\
    \        return n + sum_to_n(n - 1)\n    end\nend", "    -- Sums numbers from\
    \ 1 to n.\n    return n*(n+1)/2\nend", "    local sum = 0\n    for i = 1, n do\n\
    \        sum = sum + i\n    end\n    return sum\nend", "  return n*(n+1)/2\nend",
  "\treturn n * (n + 1) / 2\nend", "  if n <= 0 then\n    return 0\n  else\n    return\
    \ n + sum_to_n(n-1)\n  end\nend", "    local sum = 0\n    for i = 1, n do\n  \
    \      sum = sum + i\n    end\n    return sum\nend", "    return (n * (n + 1))\
    \ / 2\nend", "    if n <= 0 then\n        return 0\n    else\n        return n\
    \ + sum_to_n(n - 1)\n    end\nend", "    return n * (n + 1) / 2\nend", "  if n\
    \ == 1 then\n    return 1\n  else\n    return n + sum_to_n(n-1)\n  end\nend",
  "    if n == 1 then\n        return 1\n    else\n        return n + sum_to_n(n -\
    \ 1)\n    end\nend", "  return n*(n+1)/2\nend", "    local sum = 0\n    for i\
    \ = 1, n do\n        sum = sum + i\n    end\n    return sum\nend", "    return\
    \ ((n * (n + 1)) / 2)\nend", "    -- initialize sum\n    local sum = 0\n    --\
    \ loop to sum each number\n    for i = 1, n do\n        sum = sum + i\n    end\n\
    \    -- return sum\n    return sum\nend", "    local sum = 0\n    for i = 1, n\
    \ do\n        sum = sum + i\n    end\n    return sum\nend", "\tif n == 1 then\n\
    \t\treturn 1\n\telse\n\t\treturn n + sum_to_n(n-1)\n\tend\nend", "  -- implement\
    \ this function!\n\tif n > 0 then\n\t\treturn n + sum_to_n(n-1)\n\telse\n\t\t\
    return 0\n\tend\nend", "  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend", "    return n * (n + 1) / 2\nend", "  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n-1)\n  end\nend", "\tlocal sum\
    \ = 0\n\tfor i = 1, n do\n\t\tsum = sum + i\n\tend\n\treturn sum\nend", "    if\
    \ n == 1 then\n        return 1\n    else\n        return n + sum_to_n(n - 1)\n\
    \    end\nend", "    local total = 0\n    for i = 1, n do\n        total = total\
    \ + i\n    end\n    return total\nend", "    local total = 0\n    for i = 1, n\
    \ do\n        total = total + i\n    end\n    return total\nend", "  local sum\
    \ = 0\n  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend", "    local\
    \ sum = 0\n    for i = 1, n do\n        sum = sum + i\n    end\n    return sum\n\
    end", "    if n < 1 then\n        error('n must be greater than 0', 2)\n    end\n\
    \    return (n*(n+1)) / 2\nend", "    local sum = 0\n    for i = 1, n do\n   \
    \     sum = sum + i\n    end\n    return sum\nend", "    return n * (n + 1) /\
    \ 2\nend", "  return n*(n+1)/2\nend", "    return n * (n + 1) / 2\nend", "   \
    \ local sum = 0\n    for i = 1, n do\n        sum = sum + i\n    end\n    return\
    \ sum\nend", "    return n * (n + 1) / 2\nend", "  return n*(n+1)/2\nend", " \
    \   -- initialize the result as 0.\n    local result = 0\n    -- loop from 1 to\
    \ n.\n    for i = 1, n do\n        -- sum.\n        result = result + i\n    end\n\
    \    -- return the result.\n    return result\nend", "    if n == 1 then\n   \
    \     return 1\n    else\n        return n + sum_to_n(n - 1)\n    end\nend", " \
    \ local acc = 0\n  for i = 1, n do\n    acc = acc + i\n  end\n  return acc\nend",
  "  local result = 0\n  for i = 1, n do\n    result = result + i\n  end\n  return\
    \ result\nend", '    local sum = 0', "    local result = 0\n    for i = 1, n do\n\
    \        result = result + i\n    end\n    return result\nend", "    return (n\
    \ * (n + 1)) / 2\nend", "\tlocal sum = 0\n\tfor i = 1, n do\n\t\tsum = sum + i\n\
    \tend\n\treturn sum\nend", "  return (n * (n + 1)) / 2\nend", "    local sum =\
    \ 0\n    for i = 1, n do\n        sum = sum + i\n    end\n    return sum\nend",
  "  if n == 1 then\n    return 1\n  else\n    return n + sum_to_n(n-1)\n  end\nend",
  "\treturn n*(n+1)/2\nend", "\tif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn n\
    \ + sum_to_n(n-1)\n\tend\nend", "    return ((n * (n + 1)) / 2)\nend", "\tlocal\
    \ sum = 0\n\tlocal i = 1\n\twhile i <= n do\n\t\tsum = sum + i\n\t\ti = i + 1\n\
    \tend\n\treturn sum\nend", "  return (n * (n + 1)) / 2\nend", "  local total =\
    \ 0\n  for x = 1, n do\n    total = total + x\n  end\n  return total\nend", " \
    \   return n * (n + 1) / 2\nend", "    local sum = 0\n    for i = 1, n do\n  \
    \      sum = sum + i\n    end\n    return sum\nend", "  --TODO: Change this to\
    \ your code and make tests pass\n  return 1\nend", "    local sum = 0\n    local\
    \ i = 1\n    while i <= n do\n        sum = sum + i\n        i = i + 1\n    end\n\
    \    return sum\nend", "\t-- Base case.\n\tif n == 1 then\n\t\treturn 1\n\tend\n\
    \t-- Recursive case.\n\treturn n + sum_to_n(n - 1)\nend", "\treturn (n*(n+1))/2\n\
    end", "\tif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn n + sum_to_n(n-1)\n\t\
    end\nend", "  if n == 1 then\n    return 1\n  else\n    return n + sum_to_n(n-1)\n\
    \  end\nend", "    return ((n) * (n + 1)) / 2\nend", "    -- local function returns\
    \ the sum of numbers from 1 to n\n    local function sum(n, acc)\n        if n\
    \ == 0 then\n            return acc\n        else\n            return sum(n -\
    \ 1, acc + n)\n        end\n    end\n    return sum(n, 0)\nend", "  if n <= 0\
    \ then\n    return 0\n  else\n    return n + sum_to_n(n-1)\n  end\nend", "  return\
    \ n*(n+1)/2\nend", "    local sum = 0\n    for i = 1, n do\n        sum = sum\
    \ + i\n    end\n    return sum\nend", "\treturn n * (n + 1) / 2\nend", "    return\
    \ n * (n + 1) / 2\nend", "    -- Write your code here.\nend", "    if n < 0 then\n\
    \        return 0\n    else\n        return (n*(n+1))/2\n    end\nend", "\tif\
    \ (n == 1) then\n\t\treturn 1\n\telse\n\t\treturn sum_to_n(n-1) + n\n\tend\nend",
  "  return n*(n+1)/2\nend", "  return n * (n + 1) / 2\nend", "  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n-1)\n  end\nend", "    -- You\
    \ may just copy my program from previous class notes\n    if n == 1 then\n   \
    \     return 1\n    else\n        return n + sum_to_n(n-1)\n    end\nend", "\t\
    return (n*(n+1))/2\nend", "    -- Your code here\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

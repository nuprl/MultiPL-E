name: HumanEval_147_get_max_triples
language: lua
prompt: "-- You are given a positive integer n. You have to create an integer table\
  \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i\
  \ - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i < j\
  \ < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>> get_max_triples(5)\n\
  -- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The only valid triple is (1,\
  \ 7, 13).\nlocal function get_max_triples(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_max_triples\n\
  \    lu.assertEquals(candidate(5), 1)\n    lu.assertEquals(candidate(6), 4)\n  \
  \  lu.assertEquals(candidate(10), 36)\n    lu.assertEquals(candidate(100), 53361)\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["\tlocal c = 0\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\
    \t\t\tfor k = j + 1, n do\n\t\t\t\tif ((i * i - i + 1) + (j * j - j + 1) + (k\
    \ * k - k + 1)) % 3 == 0 then\n\t\t\t\t\tc = c + 1\n\t\t\t\tend\n\t\t\tend\n\t\
    \tend\n\tend\n\treturn c\nend", "    local a = {}\n    for i = 1, n do\n     \
    \   a[i] = i * i - i + 1\n    end\n    local count = 0\n    for i = 1, n - 2 do\n\
    \        for j = i + 1, n - 1 do\n            for k = j + 1, n do\n          \
    \      if (a[i] + a[j] + a[k]) % 3 == 0 then\n                    count = count\
    \ + 1\n                end\n            end\n        end\n    end\n    return\
    \ count\nend", "    local x = {}\n    for i = 1, n do\n        x[i] = i * i -\
    \ i + 1\n    end\n    local count = 0\n    for i = 1, n do\n        for j = i\
    \ + 1, n do\n            for k = j + 1, n do\n                if (x[i] + x[j]\
    \ + x[k]) % 3 == 0 then\n                    count = count + 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend", "    local\
    \ a = { 1 }\n    for i = 2, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend", "    local s = {}\n    for i =\
    \ 1, n do\n        s[i] = (i * i - i + 1) % 3\n    end\n    local f = {[0] = 0,\
    \ [1] = 0, [2] = 0}\n    for i = 1, n do\n        f[s[i]] = f[s[i]] + 1\n    end\n\
    \    local cnt = 0\n    for i = 1, n do\n        for j = i + 1, n do\n       \
    \     for k = j + 1, n do\n                if (s[i] + s[j] + s[k]) % 3 == 0 then\n\
    \                    cnt = cnt + 1\n                end\n            end\n   \
    \     end\n    end\n    cnt = cnt + f[0] * (f[0] - 1) * (f[0] - 2) / 6 + f[1]\
    \ * f[2] * (f[1] - 1) / 2 + f[1] * f[2] * (f[2] - 1) / 2\n    return cnt\nend",
  "\tlocal arr = {}\n\tfor i = 1, n do\n\t\tarr[i] = i * i - i + 1\n\tend\n\tlocal\
    \ count = 0\n\tfor i = 1, n do\n\t\tfor j = i + 1, n do\n\t\t\tfor k = j + 1,\
    \ n do\n\t\t\t\tif arr[i] + arr[j] + arr[k] % 3 == 0 then\n\t\t\t\t\tcount = count\
    \ + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend", "\tif n <\
    \ 3 then return 0 end\n\tlocal tmp = {}\n\tfor i = 1, n do\n\t\ttable.insert(tmp,\
    \ i * i - i + 1)\n\tend\n\tlocal cnt = 0\n\tfor i = 1, n - 2 do\n\t\tfor j = i\
    \ + 1, n - 1 do\n\t\t\tfor k = j + 1, n do\n\t\t\t\tif (tmp[i] + tmp[j] + tmp[k])\
    \ % 3 == 0 then\n\t\t\t\t\tcnt = cnt + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\
    end\n\treturn cnt\nend", "    local ret = 0\n    local sum = 0\n    local a =\
    \ {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    for i =\
    \ 1, n - 2 do\n        for j = i + 1, n - 1 do\n            for k = j + 1, n do\n\
    \                sum = a[i] + a[j] + a[k]\n                if sum % 3 == 0 then\n\
    \                    ret = ret + 1\n                end\n            end\n   \
    \     end\n    end\n    return ret\nend", "    local s = 0\n    for i = 1, n do\n\
    \        local a = i * i - i + 1\n        local r = (a % 3)\n        if r == 0\
    \ then\n            s = s + ((n - i) * (n - i - 1) / 2)\n        elseif r == 1\
    \ then\n            s = s + ((n - i) * (n - i - 1) / 4)\n        else\n      \
    \      s = s + ((n - i) * (n - i - 1) / 4)\n        end\n    end\n    return s\n\
    end", "    local a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n \
    \   end\n    local res = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n\
    \ - 1 do\n            for k = j + 1, n do\n                if (a[i] + a[j] + a[k])\
    \ % 3 == 0 then\n                    res = res + 1\n                end\n    \
    \        end\n        end\n    end\n    return res\nend", "    local a = {}\n\
    \    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local result\
    \ = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n            for\
    \ k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n   \
    \                 result = result + 1\n                end\n            end\n\
    \        end\n    end\n    return result\nend", "  local a = {}\n  for i = 1,\
    \ n do a[i] = i * i - i + 1 end\n  local cnt = 0\n  for i = 1, n - 2 do\n    for\
    \ j = i + 1, n - 1 do\n      for k = j + 1, n do\n        if (a[i] + a[j] + a[k])\
    \ % 3 == 0 then cnt = cnt + 1 end\n      end\n    end\n  end\n  return cnt\nend",
  "    local table_max = {}\n    for i = 1, n do\n        table_max[i] = i * i - i\
    \ + 1\n    end\n    local result = 0\n    for i = 1, n - 2 do\n        for j =\
    \ i + 1, n - 1 do\n            for k = j + 1, n do\n                if (table_max[i]\
    \ + table_max[j] + table_max[k]) % 3 == 0 then\n                    result = result\
    \ + 1\n                end\n            end\n        end\n    end\n    return\
    \ result\nend", "\tlocal t, sum = {}, 0\n\tfor i = 1, n do\n\t\tt[i] = i * i -\
    \ i + 1\n\t\tif t[i] % 3 == 0 then\n\t\t\tsum = sum + 1\n\t\tend\n\tend\n\tfor\
    \ i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1, n do\n\t\t\
    \t\tif t[i] + t[j] + t[k] % 3 == 0 then\n\t\t\t\t\tsum = sum + 1\n\t\t\t\tend\n\
    \t\t\tend\n\t\tend\n\tend\n\treturn sum\nend", "    -- your code goes here\n \
    \   local res = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n\
    \            for k = j + 1, n do\n                if (i * i - i + 1 + j * j -\
    \ j + 1 + k * k - k + 1) % 3 == 0 then\n                    res = res + 1\n  \
    \              end\n            end\n        end\n    end\n    return res\nend",
  "  local tab = {}\n  for i = 1, n do\n    tab[i] = i * i - i + 1\n  end\n  local\
    \ count = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k =\
    \ j + 1, n do\n        if (tab[i] + tab[j] + tab[k]) % 3 == 0 then\n         \
    \ count = count + 1\n        end\n      end\n    end\n  end\n  return count\n\
    end", "    -- Write your code here\n    -- a[i] = i * i - i + 1\n    -- a[i] +\
    \ a[j] + a[k] is a multiple of 3\n    -- a[i] + a[j] + a[k] % 3 == 0\n    -- a[i]\
    \ % 3 == a[j] % 3 == a[k] % 3 \n    -- let m = a[i] % 3 == 0\n    -- let n = a[i]\
    \ % 3 == 1\n    -- let p = a[i] % 3 == 2\n    -- a[j] % 3 == 1 - m == n\n    --\
    \ a[k] % 3 == 2 - m == p\n    -- return m * n * p\n    local m = 0\n    local\
    \ n = 0\n    local p = 0\n    for i = 1, n do\n        local temp = i * i - i\
    \ + 1\n        if temp % 3 == 0 then\n            m = m + 1\n        elseif temp\
    \ % 3 == 1 then\n            n = n + 1\n        else\n            p = p + 1\n\
    \        end\n    end\n    return m * n * p\nend", "    local result = 0\n   \
    \ for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n            for k = j\
    \ + 1, n do\n                if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0 then\n                    result = result + 1\n                end\n\
    \            end\n        end\n    end\n    return result\nend", "   local sum\
    \ = 0\n   for i = 1, n do\n      local a_i = i * i - i + 1\n      if a_i % 3 ==\
    \ 0 then\n         sum = sum + 1\n      end\n   end\n   return sum * (n - 2)\n\
    end", "  local a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local\
    \ cnt = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j\
    \ + 1, n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          cnt = cnt\
    \ + 1\n        end\n      end\n    end\n  end\n  return cnt\nend", "  local a\
    \ = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local count = 0\n\
    \  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j + 1, n do\n\
    \        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          count = count + 1\n\
    \        end\n      end\n    end\n  end\n  return count\nend", "\tlocal r = {1}\n\
    \tfor i = 2, n do\n\t\ttable.insert(r, r[i - 1] + 2 * i - 1)\n\tend\n\tlocal res\
    \ = 0\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1,\
    \ n do\n\t\t\t\tlocal a = r[i] + r[j] + r[k]\n\t\t\t\tif a % 3 == 0 then\n\t\t\
    \t\t\tres = res + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn res\nend",
  "    local triples = 0\n    local a = {}\n    for i = 1, n do\n        a[i] = i\
    \ * i - i + 1\n    end\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1\
    \ do\n            for k = j + 1, n do\n                if a[i] + a[j] + a[k] %\
    \ 3 == 0 then\n                    triples = triples + 1\n                end\n\
    \            end\n        end\n    end\n    return triples\nend", "    local function\
    \ is_triple(a, b, c)\n        return (a + b + c) % 3 == 0 and a < b and b < c\n\
    \    end\n    local count = 0\n    for i = 1, n - 2 do\n        for j = i + 1,\
    \ n - 1 do\n            for k = j + 1, n do\n                if is_triple(i, j,\
    \ k) then\n                    count = count + 1\n                end\n      \
    \      end\n        end\n    end\n    return count\nend", "    local a = {}\n\
    \    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local count =\
    \ 0\n    for i = 1, n do\n        for j = i + 1, n do\n            for k = j +\
    \ 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n           \
    \         count = count + 1\n                end\n            end\n        end\n\
    \    end\n    return count\nend", "\tlocal ret = 0;\n\tlocal t = {}\n\tfor i =\
    \ 1, n do\n\t\tt[i] = i * i - i + 1;\n\tend", "    local a = {}\n    for i = 1,\
    \ n do\n        a[i] = i * i - i + 1\n    end\n    local cnt = 0\n    for i =\
    \ 1, n - 2 do\n        for j = i + 1, n - 1 do\n            for k = j + 1, n do\n\
    \                if (a[i] + a[j] + a[k]) % 3 == 0 then\n                    cnt\
    \ = cnt + 1\n                end\n            end\n        end\n    end\n    return\
    \ cnt\nend", "    local f, g = function(n) return n * n - n + 1 end, function(n)\
    \ return n % 3 == 0 end\n    local t, r = {}, 0\n    for i = 1, n do t[i] = f(i)\
    \ end\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n            for\
    \ k = j + 1, n do\n                if g(t[i] + t[j] + t[k]) then r = r + 1 end\n\
    \            end\n        end\n    end\n    return r\nend", "    local  a = {}\n\
    \    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local cnt = 0\n\
    \    for i = 1, n do\n        for j = i + 1, n do\n            for k = j + 1,\
    \ n do\n                if a[i] + a[j] + a[k] % 3 == 0 then\n                \
    \    cnt = cnt + 1\n                end\n            end\n        end\n    end\n\
    \    return cnt\nend", "  if n < 3 then return 0 end\n  local t = {1, 3}\n  local\
    \ count = 1\n  for i = 3, n do\n    local value = i * i - i + 1\n    if value\
    \ % 3 == 0 then count = count + 1 end\n    table.insert(t, value)\n  end\n  local\
    \ max = n - 2\n  for i = 1, max do\n    for j = i + 1, max do\n      local sum\
    \ = t[i] + t[j]\n      for k = j + 1, max do\n        if sum + t[k] % 3 == 0 then\
    \ count = count + 1 end\n      end\n    end\n  end\n  return count\nend", "  local\
    \ a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local t = 0\n\
    \  for i = 1, n do\n    for j = i + 1, n do\n      for k = j + 1, n do\n     \
    \   if (a[i] + a[j] + a[k]) % 3 == 0 then\n          t = t + 1\n        end\n\
    \      end\n    end\n  end\n  return t\nend", "    local triples = 0\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    for\
    \ i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n            for k = j + 1,\
    \ n do\n                if a[i] + a[j] + a[k] % 3 == 0 then\n                \
    \    triples = triples + 1\n                end\n            end\n        end\n\
    \    end\n    return triples\nend", "\tlocal f = 0\n\tlocal m = math.floor(n /\
    \ 3)\n\tfor i = 1, m do\n\t\tf = f + math.floor((n - 2 * i) / 2)\n\tend\n\treturn\
    \ f\nend", "    local res = 0\n    for i = 1, n do\n        for j = i + 1, n do\n\
    \            for k = j + 1, n do\n                if (i * i - i + 1 + j * j -\
    \ j + 1 + k * k - k + 1) % 3 == 0 then\n                    res = res + 1\n  \
    \              end\n            end\n        end\n    end\n    return res\nend",
  "  local a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local count\
    \ = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j + 1,\
    \ n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          count = count\
    \ + 1\n        end\n      end\n    end\n  end\n  return count\nend", "    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (i * i - i + 1 + j * j - j + 1\
    \ + k * k - k + 1) % 3 == 0 then\n                    count = count + 1\n    \
    \            end\n            end\n        end\n    end\n    return count\nend",
  "    local a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n\
    \    local ret = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n\
    \            for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3\
    \ == 0 then\n                    ret = ret + 1\n                end\n        \
    \    end\n        end\n    end\n    return ret\nend", "\tlocal c = 0\n\tfor i\
    \ = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1, n do\n\t\t\t\
    \tif (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 then\n\t\t\t\t\t\
    c = c + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn c\nend", "    local\
    \ dp = {}\n    local ans = 0\n    for i = 1, n do\n        local a = i * i - i\
    \ + 1\n        if dp[a] then\n            dp[a] = dp[a] + 1\n        else\n  \
    \          dp[a] = 1\n        end\n        if dp[3 - a] then\n            ans\
    \ = ans + dp[3 - a]\n        end\n    end\n    return ans\nend", "    -- Write\
    \ your code here\n    local a = {}\n    for i = 1, n do\n        a[i] = i * i\
    \ - i + 1\n    end\n    local count = 0\n    for i = 1, n - 2 do\n        for\
    \ j = i + 1, n - 1 do\n            for k = j + 1, n do\n                if (a[i]\
    \ + a[j] + a[k]) % 3 == 0 then\n                    count = count + 1\n      \
    \          end\n            end\n        end\n    end\n    return count\nend",
  "    local sum = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n \
    \           for k = j + 1, n do\n                if (i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0 then\n                    sum = sum + 1\n    \
    \            end\n            end\n        end\n    end\n    return sum\nend",
  "    local cnt = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n \
    \           for k = j + 1, n do\n                if (i + j + k) % 3 == 0 then\n\
    \                    cnt = cnt + 1\n                end\n            end\n   \
    \     end\n    end\n    return cnt\nend", "\tif n < 3 then return 0 end\n\tlocal\
    \ sum = 0\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j\
    \ + 1, n do\n\t\t\t\tif (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 ==\
    \ 0 then\n\t\t\t\t\tsum = sum + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\
    return sum\nend", "  local function get_sum(i, j, k)\n    return i + j + k\n \
    \ end\n  local function get_val(i)\n    return i * i - i + 1\n  end\n  local count\
    \ = 0\n  for i = 1, n do\n    for j = i + 1, n do\n      for k = j + 1, n do\n\
    \        if (get_sum(get_val(i), get_val(j), get_val(k)) % 3 == 0) then\n    \
    \      count = count + 1\n        end\n      end\n    end\n  end\n  return count\n\
    end", "    local res = 0\n    for i = 1, n do\n        for j = i + 1, n do\n \
    \           for k = j + 1, n do\n                if (i * i - i + 1 + j * j - j\
    \ + 1 + k * k - k + 1) % 3 == 0 then\n                    res = res + 1\n    \
    \            end\n            end\n        end\n    end\n    return res\nend",
  "\tlocal n,a,r = n or 1, {}, 0\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\t\
    end\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1,\
    \ n do\n\t\t\t\tif a[i] + a[j] + a[k] % 3 == 0 then\n\t\t\t\t\tr = r + 1\n\t\t\
    \t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn r\nend", "    local a = 0\n    local\
    \ sum = 0\n    local d = {}\n    for i = 1, n do\n        a = i * i - i + 1\n\
    \        sum = sum + a\n        d[i] = sum\n    end\n    local s = 0\n    for\
    \ i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n            for k = j + 1,\
    \ n do\n                s = d[j] - d[i] + a\n                if s % 3 == 0 then\n\
    \                    return s\n                end\n            end\n        end\n\
    \    end\n    return 0\nend", "\tlocal sum, sum1, sum2, sum3, a = 0, 0, 0, 0,\
    \ {}\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\t\tif a[i] % 3 == 0 then\n\
    \t\t\tsum = sum + 1\n\t\tend\n\t\tif a[i] % 3 == 1 then\n\t\t\tsum1 = sum1 + 1\n\
    \t\tend\n\t\tif a[i] % 3 == 2 then\n\t\t\tsum2 = sum2 + 1\n\t\tend\n\tend\n\t\
    sum3 = math.min(sum1, sum2)\n\tsum = sum + sum3 * 2 + sum3 * (sum3 - 1) / 2\n\t\
    return sum\nend", "  local a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n\
    \  end\n  local cnt = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n\
    \      for k = j + 1, n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n  \
    \        cnt = cnt + 1\n        end\n      end\n    end\n  end\n  return cnt\n\
    end", "\tlocal a, n, t = {}, n, 0\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\
    \tend\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1,\
    \ n do\n\t\t\t\tif (a[i] + a[j] + a[k]) % 3 == 0 then\n\t\t\t\t\tt = t + 1\n\t\
    \t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn t\nend", "  local a = {}\n  for\
    \ i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local function test(i, j, k)\n\
    \    return a[i] + a[j] + a[k] % 3 == 0\n  end\n  local ans = 0\n  for i = 1,\
    \ n do\n    for j = i + 1, n do\n      for k = j + 1, n do\n        if test(i,\
    \ j, k) then\n          ans = ans + 1\n        end\n      end\n    end\n  end\n\
    \  return ans\nend", "    local count = 0\n    local a = {}\n    for i = 1, n\
    \ do\n        a[i] = i * i - i + 1\n    end\n    for i = 1, n do\n        for\
    \ j = i + 1, n do\n            for k = j + 1, n do\n                if (a[i] +\
    \ a[j] + a[k]) % 3 == 0 then\n                    count = count + 1\n        \
    \        end\n            end\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    local a = {1}\n    for i = 2, n do\n        a[i] = i\
    \ * i - i + 1\n    end\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1\
    \ do\n            for k = j + 1, n do\n                if (a[i] + a[j] + a[k])\
    \ % 3 == 0 then\n                    count = count + 1\n                end\n\
    \            end\n        end\n    end\n    return count\nend", "    local a =\
    \ {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local r\
    \ = 0\n    for i = 1, n do\n        for j = i + 1, n do\n            for k = j\
    \ + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n         \
    \           r = r + 1\n                end\n            end\n        end\n   \
    \ end\n    return r\nend", "    local t = {}\n    for i = 1, n do\n        t[i]\
    \ = i * i - i + 1\n    end\n    local count = 0\n    for i = 1, n - 2 do\n   \
    \     for j = i + 1, n - 1 do\n            for k = j + 1, n do\n             \
    \   if (t[i] + t[j] + t[k]) % 3 == 0 then\n                    count = count +\
    \ 1\n                end\n            end\n        end\n    end\n    return count\n\
    end", "    local sum = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n -\
    \ 1 do\n            for k = j + 1, n do\n                if (i + j + k) % 3 ==\
    \ 0 then\n                    sum = sum + 1\n                end\n           \
    \ end\n        end\n    end\n    return sum\nend", "    local p = 0\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n        if a[i] %\
    \ 3 == 0 then\n            p = p + 1\n        end\n    end\n    local r = 0\n\
    \    for i = 1, n - 2 do\n        if a[i] % 3 == 0 then\n            for j = i\
    \ + 1, n - 1 do\n                if (a[i] + a[j]) % 3 == 0 then\n            \
    \        for k = j + 1, n do\n                        if (a[i] + a[j] + a[k])\
    \ % 3 == 0 then\n                            r = r + 1\n                     \
    \   end\n                    end\n                end\n            end\n     \
    \   end\n    end\n    return r\nend", "\tlocal a = {1}\n\tfor i = 2, n do \n\t\
    \ta[i] = a[i - 1] + 2 * i - 1\n\tend\n\tlocal res = 0\n\tfor i = 1, n - 2 do\n\
    \t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1, n do\n\t\t\t\tif (a[i] + a[j]\
    \ + a[k]) % 3 == 0 then\n\t\t\t\t\tres = res + 1\n\t\t\t\tend\n\t\t\tend\n\t\t\
    end\n\tend\n\treturn res\nend", "  local a = {}\n  for i = 1, n do a[i] = i *\
    \ i - i + 1 end\n  local max_triples = 0\n  for i = 1, n - 2 do\n    for j = i\
    \ + 1, n - 1 do\n      for k = j + 1, n do\n        if a[i] + a[j] + a[k] % 3\
    \ == 0 then\n          max_triples = max_triples + 1\n        end\n      end\n\
    \    end\n  end\n  return max_triples\nend", "  local function f(a, b, c)\n  \
    \  return (a + b + c) % 3 == 0\n  end\n  local r = 0\n  for i = 1, n - 2 do\n\
    \    for j = i + 1, n - 1 do\n      for k = j + 1, n do\n        if f(i * i -\
    \ i + 1, j * j - j + 1, k * k - k + 1) then\n          r = r + 1\n        end\n\
    \      end\n    end\n  end\n  return r\nend", "   local a = {}\n   for i = 1,\
    \ n do\n      a[i] = i * i - i + 1\n   end\n   local count = 0\n   for i = 1,\
    \ n - 2 do\n      for j = i + 1, n - 1 do\n         for k = j + 1, n do\n    \
    \        if a[i] + a[j] + a[k] % 3 == 0 then\n               count = count + 1\n\
    \            end\n         end\n      end\n   end\n   return count\nend", "  local\
    \ a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local triples\
    \ = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j + 1,\
    \ n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          triples = triples\
    \ + 1\n        end\n      end\n    end\n  end\n  return triples\nend", "\tlocal\
    \ sum = 1 --a[i] + a[j] + a[k]\n\tlocal count = 0\n\tlocal a = {}\n\t-- generate\
    \ table\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\tend\n\tfor i = 1, n do\n\
    \t\tfor j = i + 1, n do\n\t\t\tfor k = j + 1, n do\n\t\t\t\tsum = a[i] + a[j]\
    \ + a[k]\n\t\t\t\tif sum % 3 == 0 then\n\t\t\t\t\tcount = count + 1\n\t\t\t\t\
    end\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend", "  local a = {}\n  for i\
    \ = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local answer = 0\n  for i = 1,\
    \ n do\n    for j = i + 1, n do\n      for k = j + 1, n do\n        if (a[i] +\
    \ a[j] + a[k]) % 3 == 0 then\n          answer = answer + 1\n        end\n   \
    \   end\n    end\n  end\n  return answer\nend", "  local t = {}\n  for i = 1,\
    \ n do\n    t[i] = i * i - i + 1\n  end\n  local r = 0\n  for i = 1, n - 2 do\n\
    \    for j = i + 1, n - 1 do\n      for k = j + 1, n do\n        if (t[i] + t[j]\
    \ + t[k]) % 3 == 0 then\n          r = r + 1\n        end\n      end\n    end\n\
    \  end\n  return r\nend", "    local a = {}\n    for i = 1, n do\n        a[i]\
    \ = i * i - i + 1\n    end\n    local result = 0\n    for i = 1, n - 2 do\n  \
    \      for j = i + 1, n - 1 do\n            for k = j + 1, n do\n            \
    \    if (a[i] + a[j] + a[k]) % 3 == 0 then\n                    result = result\
    \ + 1\n                end\n            end\n        end\n    end\n    return\
    \ result\nend", "  local sum = 0\n  for i = 1, n do\n    sum = sum + i*i-i+1\n\
    \  end\n  if sum % 3 == 0 then return n end\n  return 0\nend", "    local a =\
    \ {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local count\
    \ = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n            for\
    \ k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n   \
    \                 count = count + 1\n                end\n            end\n  \
    \      end\n    end\n    return count\nend", "    local a = {}\n    for i = 1,\
    \ n do\n        a[i] = i * i - i + 1\n    end\n    local total = 0\n    for i\
    \ = 1, n do\n        for j = i + 1, n do\n            for k = j + 1, n do\n  \
    \              if (a[i] + a[j] + a[k]) % 3 == 0 then\n                    total\
    \ = total + 1\n                end\n            end\n        end\n    end\n  \
    \  return total\nend", "  -- Define the sequence\n  local a = {}\n  for i = 1,\
    \ n do\n    a[i] = i * i - i + 1\n  end\n  -- Count triples that sum is a multiple\
    \ of 3\n  local count = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n\
    \      for k = j + 1, n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n  \
    \        count = count + 1\n        end\n      end\n    end\n  end\n  return count\n\
    end", "    local t = {}\n    for i = 1, n do\n        t[i] = i * i - i + 1\n \
    \   end\n    local r = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n -\
    \ 1 do\n            for k = j + 1, n do\n                if (t[i] + t[j] + t[k])\
    \ % 3 == 0 then\n                    r = r + 1\n                end\n        \
    \    end\n        end\n    end\n    return r\nend", "    local t = {}\n    for\
    \ i = 1, n do\n        t[i] = i * i - i + 1\n    end\n    local m = 0\n    for\
    \ i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n            for k = j + 1,\
    \ n do\n                if t[i] + t[j] + t[k] % 3 == 0 then\n                \
    \    m = m + 1\n                end\n            end\n        end\n    end\n \
    \   return m\nend", "\tlocal a, count = {}, 0\n\tfor i = 1, n do a[i] = i * i\
    \ - i + 1 end\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k\
    \ = j + 1, n do\n\t\t\t\tif (a[i] + a[j] + a[k]) % 3 == 0 then count = count +\
    \ 1 end\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend", "    -- math.ceil(n/3)\n\
    \    local m = (n+2)//3\n    local t = {}\n    for i = 1, m do\n        local\
    \ x = i*(i-1)+1\n        t[x] = (t[x] or 0) + 1\n    end\n    local c = 0\n  \
    \  for i = 1, m do\n        local x = i*(i-1)+1\n        for j = i+1, m do\n \
    \           local y = j*(j-1)+1\n            if (x+y)%3 == 0 then\n          \
    \      c = c + t[x]*t[y]\n            end\n        end\n    end\n    local a,\
    \ b = n//3, n%3\n    local s = a * (a-1) * (a-2) // 6\n    if b == 0 then\n  \
    \      return s\n    elseif b == 1 then\n        return s + a * (a-1) // 2\n \
    \   else\n        return s + a * (a-1)\n    end\nend", "  local num_of_triples\
    \ = 0\n  for i = 1, n do\n    for j = i + 1, n do\n      for k = j + 1, n do\n\
    \        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          num_of_triples = num_of_triples\
    \ + 1\n        end\n      end\n    end\n  end\n  return num_of_triples\nend",
  "  local a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local count\
    \ = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j + 1,\
    \ n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          count = count\
    \ + 1\n        end\n      end\n    end\n  end\n  return count\nend", "    local\
    \ triples = 0\n    local a = {}\n    for i = 1, n do\n        a[i] = i * i - i\
    \ + 1\n    end\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n   \
    \         for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 ==\
    \ 0 then\n                    triples = triples + 1\n                end\n   \
    \         end\n        end\n    end\n    return triples\nend", "\tlocal a = {}\n\
    \tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\tend\n\tlocal count = 0\n\tfor i\
    \ = 1, n do\n\t\tfor j = i + 1, n do\n\t\t\tfor k = j + 1, n do\n\t\t\t\tif (a[i]\
    \ + a[j] + a[k]) % 3 == 0 then\n\t\t\t\t\tcount = count + 1\n\t\t\t\tend\n\t\t\
    \tend\n\t\tend\n\tend\n\treturn count\nend", "\tlocal a = {}\n\tfor i = 1, n do\n\
    \t\ta[i] = i * i - i + 1\n\tend\n\tlocal result = 0\n\tfor i = 1, n - 2 do\n\t\
    \tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1, n do\n\t\t\t\tif (a[i] + a[j]\
    \ + a[k]) % 3 == 0 then\n\t\t\t\t\tresult = result + 1\n\t\t\t\tend\n\t\t\tend\n\
    \t\tend\n\tend\n\treturn result\nend", "  local a = {}\n  for i = 1, n do\n  \
    \  a[i] = i * i - i + 1\n  end\n  local res = 0\n  for i = 1, n - 2 do\n    for\
    \ j = i + 1, n - 1 do\n      for k = j + 1, n do\n        if (a[i] + a[j] + a[k])\
    \ % 3 == 0 then\n          res = res + 1\n        end\n      end\n    end\n  end\n\
    \  return res\nend", "  local a = {}\n  for i = 1, n do\n    a[i] = i * i - i\
    \ + 1\n  end\n  local count = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n -\
    \ 1 do\n      for k = j + 1, n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \          count = count + 1\n        end\n      end\n    end\n  end\n  return\
    \ count\nend", "    local sum = 0\n    for i = 1, n - 2 do\n        for j = i\
    \ + 1, n - 1 do\n            for k = j + 1, n do\n                if (i * i -\
    \ i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 then\n                    sum\
    \ = sum + 1\n                end\n            end\n        end\n    end\n    return\
    \ sum\nend", "\tlocal sum = 0\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1\
    \ do\n\t\t\tfor k = j + 1, n do\n\t\t\t\tif (i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1) % 3 == 0 then\n\t\t\t\t\tsum = sum + 1\n\t\t\t\tend\n\t\t\tend\n\
    \t\tend\n\tend\n\treturn sum\nend", "   local a = {}\n   for i = 1, n do\n   \
    \   a[i] = i * i - i + 1\n   end\n   local ret = 0\n   for i = 1, n - 2 do\n \
    \     for j = i + 1, n - 1 do\n         for k = j + 1, n do\n            if (a[i]\
    \ + a[j] + a[k]) % 3 == 0 then\n               ret = ret + 1\n            end\n\
    \         end\n      end\n   end\n   return ret\nend", "    local sum, count =\
    \ 0, 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n           \
    \ for k = j + 1, n do\n                sum = i * i - i + 1 + j * j - j + 1 + k\
    \ * k - k + 1\n                if sum % 3 == 0 then\n                    count\
    \ = count + 1\n                end\n            end\n        end\n    end\n  \
    \  return count\nend", "  local a = {}\n  for i = 1, n do\n    a[i] = i * i -\
    \ i + 1\n  end\n  local cnt = 0\n  for i = 1, n do\n    for j = i + 1, n do\n\
    \      for k = j + 1, n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n  \
    \        cnt = cnt + 1\n        end\n      end\n    end\n  end\n  return cnt\n\
    end", "\tlocal t = {}\n\tfor i = 1, n do\n\t\tt[i] = i * i - i + 1\n\tend\n\t\
    local count = 0\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor\
    \ k = j + 1, n do\n\t\t\t\tif (t[i] + t[j] + t[k]) % 3 == 0 then\n\t\t\t\t\tcount\
    \ = count + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend", " \
    \   local res = 0\n    for i = 1, n - 2 do\n        local tmp = (i + 1) * (i +\
    \ 1) - (i + 1) + 1\n        for j = i + 1, n - 1 do\n            local sum = (i\
    \ + 1) * (i + 1) - (i + 1) + 1 + tmp\n            tmp = (j + 1) * (j + 1) - (j\
    \ + 1) + 1\n            for k = j + 1, n do\n                if (sum + tmp) %\
    \ 3 == 0 then\n                    res = res + 1\n                end\n      \
    \          tmp = (k + 1) * (k + 1) - (k + 1) + 1\n            end\n        end\n\
    \    end\n    return res\nend", "    local a = {}\n    for i = 1, n do\n     \
    \   a[i] = i * i - i + 1\n    end\n    local result = 0\n    for i = 1, n - 2\
    \ do\n        for j = i + 1, n - 1 do\n            for k = j + 1, n do\n     \
    \           if (a[i] + a[j] + a[k]) % 3 == 0 then\n                    result\
    \ = result + 1\n                end\n            end\n        end\n    end\n \
    \   return result\nend", "\t-- write your code here\n\tlocal a = {}\n\tlocal count\
    \ = 0\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\tend\n\tfor i = 1, n - 2\
    \ do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1, n do\n\t\t\t\tif (a[i]\
    \ + a[j] + a[k]) % 3 == 0 then\n\t\t\t\t\tcount = count + 1\n\t\t\t\tend\n\t\t\
    \tend\n\t\tend\n\tend\n\treturn count\nend", "    local function get_max_triples_inner(n,\
    \ a, i, j, k)\n        --print(string.format(\"a[%d]=%d, a[%d]=%d, a[%d]=%d\"\
    , i, a[i], j, a[j], k, a[k]))\n        if i >= n or j >= n or k >= n then\n  \
    \          return 0\n        end\n        if a[i] + a[j] + a[k] % 3 == 0 then\n\
    \            --print(string.format(\"a[%d]=%d, a[%d]=%d, a[%d]=%d\", i, a[i],\
    \ j, a[j], k, a[k]))\n            return 1 + get_max_triples_inner(n, a, i, j,\
    \ k + 1)\n        else\n            return get_max_triples_inner(n, a, i, j, k\
    \ + 1)\n        end\n    end\n    local a = {}\n    for i = 1, n do\n        a[i]\
    \ = i * i - i + 1\n    end\n    --for i = 1, n do\n    --    print(a[i])\n   \
    \ --end\n    local res = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n\
    \ - 1 do\n            res = res + get_max_triples_inner(n, a, i, j, j + 1)\n \
    \       end\n    end\n    return res\nend", "    local a = {}\n    for i = 1,\
    \ n do\n        a[i] = i * i - i + 1\n    end\n    local count = 0\n    for i\
    \ = 1, n - 2 do\n        for j = i + 1, n - 1 do\n            for k = j + 1, n\
    \ do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n                \
    \    count = count + 1\n                end\n            end\n        end\n  \
    \  end\n    return count\nend", "\tlocal triples = 0\n\tfor i = 1, n - 2 do\n\t\
    \tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1, n do\n\t\t\t\tif (i * i - i +\
    \ 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 then\n\t\t\t\t\ttriples = triples\
    \ + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn triples\nend", "\tlocal\
    \ result = 0\n\tlocal mult3 = {3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108,111,114,117,120,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435,438,441,444,447,450,453,456,459,462,465,468,471,474,477,480,483,486,489,492,495,498,501,504,507,510,513,516,519,522,525,528,531,534,537,540,543,546,549,552,555,558,561,564,567,570,573,576,579,582,585,588,591,594,597,600,603,606,609,612,615,618,621,624,627,630,633,636,639,642,645,648,651,654,657,660,663,666,669,672,675,678,681,684,687,690,693,696,699,702,705,708,711,714,717,720,723,726,729",
  "  local a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local count\
    \ = 0\n  for i = 1, n do\n    for j = i + 1, n do\n      for k = j + 1, n do\n\
    \        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          count = count + 1\n\
    \        end\n      end\n    end\n  end\n  return count\nend", "\tlocal maxTriples\
    \ = 0\n\tlocal a = {}\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\tend\n\t\
    for i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1, n do\n\t\
    \t\t\tif (a[i] + a[j] + a[k]) % 3 == 0 then\n\t\t\t\t\tmaxTriples = maxTriples\
    \ + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn maxTriples\nend", "  local\
    \ triples = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k\
    \ = j + 1, n do\n        if ((i * i - i + 1) + (j * j - j + 1) + (k * k - k +\
    \ 1)) % 3 == 0 then\n          triples = triples + 1\n        end\n      end\n\
    \    end\n  end\n  return triples\nend", "    local triples = 0\n    local sum_to_size\
    \ = {}\n    local sum_to_count = {}\n    local count_to_size = {}\n    local acc\
    \ = 0\n    for i = 1, n do\n        acc = acc + i * i - i + 1\n        sum_to_size[acc]\
    \ = i\n        if sum_to_count[acc] == nil then\n            sum_to_count[acc]\
    \ = 1\n        else\n            sum_to_count[acc] = sum_to_count[acc] + 1\n \
    \       end\n        if count_to_size[sum_to_count[acc]] == nil then\n       \
    \     count_to_size[sum_to_count[acc]] = {}\n        end\n        count_to_size[sum_to_count[acc]][i]\
    \ = acc\n    end\n    for j = 1, n do\n        for k = j + 1, n do\n         \
    \   local sum = k * k - k + 1 + j * j - j + 1\n            if sum % 3 == 0 then\n\
    \                local size = sum_to_size[sum / 3]\n                if size and\
    \ size < j then\n                    local count = sum_to_count[sum / 3]\n   \
    \                 if count then\n                        triples = triples + count\n\
    \                    end\n                end\n            end\n        end\n\
    \    end\n    return triples\nend", "  local a = {}\n  for i = 1, n do a[i] =\
    \ i * i - i + 1 end\n  local cnt = 0\n  for i = 1, n do\n    for j = i + 1, n\
    \ do\n      for k = j + 1, n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \          cnt = cnt + 1\n        end\n      end\n    end\n  end\n  return cnt\n\
    end", "\t-- body\nend", "\tlocal sum_triples = 0", "    local a = {}\n    for\
    \ i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local cnt = 0\n    for\
    \ i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n            for k = j + 1,\
    \ n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n              \
    \      cnt = cnt + 1\n                end\n            end\n        end\n    end\n\
    \    return cnt\nend", "  local nMaxTriples = 0\n  local a = {}\n  for i = 1,\
    \ n do\n    a[i] = i * i - i + 1\n  end\n  for i = 1, n - 2 do\n    for j = i\
    \ + 1, n - 1 do\n      for k = j + 1, n do\n        if a[i] + a[j] + a[k] % 3\
    \ == 0 then\n          nMaxTriples = nMaxTriples + 1\n        end\n      end\n\
    \    end\n  end\n  return nMaxTriples\nend", "  if n <= 2 then return 0 end\n\
    \  -- compute the values of a[1] to a[n]\n  local a = {}\n  for i = 1, n do\n\
    \    a[i] = i * i - i + 1\n  end\n  -- compute the number of triples\n  local\
    \ cnt = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j\
    \ + 1, n do\n        if a[i] + a[j] + a[k] % 3 == 0 then\n          cnt = cnt\
    \ + 1\n        end\n      end\n    end\n  end\n  return cnt\nend", "  local i,j,k,total,c\
    \ = 1,1,1,0,0\n  while true do\n    while j<=n do\n      while k<=n do\n     \
    \   total = i*i-i+1 + j*j-j+1 + k*k-k+1\n        if total%3==0 then\n        \
    \  c = c + 1\n        end\n        k = k + 1\n      end\n      j = j + 1\n   \
    \   k = j + 1\n    end\n    i = i + 1\n    j = i + 1\n    k = j + 1\n    if i\
    \ == n then break end\n  end\n  return c\nend", "    -- Write your code here\n\
    \    local result = 0\n    local a = {}\n    for i = 1, n do\n        a[i] = i\
    \ * i - i + 1\n    end\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1\
    \ do\n            for k = j + 1, n do\n                if (a[i] + a[j] + a[k])\
    \ % 3 == 0 then\n                    result = result + 1\n                end\n\
    \            end\n        end\n    end\n    return result\nend", "    local a\
    \ = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ counter = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n    \
    \        for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0\
    \ then\n                    counter = counter + 1\n                end\n     \
    \       end\n        end\n    end\n    return counter\nend", "    local a = {}\n\
    \    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local triple\
    \ = 0\n    for i = 1, n do\n        for j = i + 1, n do\n            for k = j\
    \ + 1, n do\n                if a[i] + a[j] + a[k] % 3 == 0 then\n           \
    \         triple = triple + 1\n                end\n            end\n        end\n\
    \    end\n    return triple\nend", "\tlocal a, t = {}, 0\n\tfor i = 1, n do\n\t\
    \ta[i] = i * i - i + 1\n\t\tif a[i] % 3 == 0 then\n\t\t\tif i > 1 and a[i-1] %\
    \ 3 == 0 then\n\t\t\t\tt = t + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn t\nend",
  "  -- your code here\n  local a = {}\n  local count = 0\n  for i = 1, n do\n   \
    \ a[i] = i * i - i + 1\n  end\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1\
    \ do\n      for k = j + 1, n do\n        if a[i] + a[j] + a[k] % 3 == 0 then\n\
    \          count = count + 1\n        end\n      end\n    end\n  end\n  return\
    \ count\nend", "    local a = {}\n    for i = 1, n do\n        a[i] = i * i -\
    \ i + 1\n    end\n    local sum = 0\n    for i = 1, n - 2 do\n        for j =\
    \ i + 1, n - 1 do\n            for k = j + 1, n do\n                if (a[i] +\
    \ a[j] + a[k]) % 3 == 0 then\n                    sum = sum + 1\n            \
    \    end\n            end\n        end\n    end\n    return sum\nend", "    local\
    \ t = {}\n    for i = 1, n do\n        t[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (t[i] + t[j] + t[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend", "    local a = {}\n    for i =\
    \ 1, n do\n        a[i] = i * i - i + 1\n    end\n    local count = 0\n    for\
    \ i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n            for k = j + 1,\
    \ n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n              \
    \      count = count + 1\n                end\n            end\n        end\n\
    \    end\n    return count\nend", "    if n < 3 then return 0 end\n    local a\
    \ = {1}\n    for i = 2, n do\n        a[i] = a[i - 1] + i * 2\n    end\n    local\
    \ sum, count = 0, 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n\
    \            for k = j + 1, n do\n                sum = a[i] + a[j] + a[k]\n \
    \               if sum % 3 == 0 then\n                    count = count + 1\n\
    \                end\n            end\n        end\n    end\n    return count\n\
    end", "  local a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local\
    \ cnt = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j\
    \ + 1, n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          cnt = cnt\
    \ + 1\n        end\n      end\n    end\n  end\n  return cnt\nend", "    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if a[i] + a[j] + a[k] % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend", "    local sum = 0\n    for i =\
    \ 1, n - 2 do\n        for j = i + 1, n - 1 do\n            for k = j + 1, n do\n\
    \                if (i + j + k) % 3 == 0 then\n                    sum = sum +\
    \ 1\n                end\n            end\n        end\n    end\n    return sum\n\
    end", "    local a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n \
    \   end\n    local result = 0\n    for i = 1, n - 2 do\n        for j = i + 1,\
    \ n - 1 do\n            for k = j + 1, n do\n                if (a[i] + a[j] +\
    \ a[k]) % 3 == 0 then\n                    result = result + 1\n             \
    \   end\n            end\n        end\n    end\n    return result\nend", "   \
    \ local a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n \
    \   local s = 0\n    for i = 1, n do\n        for j = i + 1, n do\n          \
    \  for k = j + 1, n do\n                if a[i] + a[j] + a[k] % 3 == 0 then\n\
    \                    s = s + 1\n                end\n            end\n       \
    \ end\n    end\n    return s\nend", "    local a = {}\n    for i = 1, n do\n \
    \       a[i] = i * i - i + 1\n    end\n    local count = 0\n    for i = 1, n do\n\
    \        for j = i + 1, n do\n            for k = j + 1, n do\n              \
    \  if (a[i] + a[j] + a[k]) % 3 == 0 then\n                    count = count +\
    \ 1\n                end\n            end\n        end\n    end\n    return count\n\
    end", "  local result = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n\
    \      for k = j + 1, n do\n        if (i + j + k) % 3 == 0 then\n          result\
    \ = result + 1\n        end\n      end\n    end\n  end\n  return result\nend",
  "\tlocal tbl = {}\n\tfor i = 1, n do\n\t\ttable.insert(tbl, i * i - i + 1)\n\tend\n\
    \tlocal sum_triple = 0\n\tfor i = 1, n do\n\t\tfor j = i + 1, n do\n\t\t\tfor\
    \ k = j + 1, n do\n\t\t\t\tif (tbl[i] + tbl[j] + tbl[k]) % 3 == 0 then\n\t\t\t\
    \t\tsum_triple = sum_triple + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn\
    \ sum_triple\nend", "    local count = 0\n    for i = 1, n do\n        for j =\
    \ i + 1, n do\n            for k = j + 1, n do\n                if (i * i - i\
    \ + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 then\n                    count\
    \ = count + 1\n                end\n            end\n        end\n    end\n  \
    \  return count\nend", "  local a = {}\n  for i = 1, n do\n    a[i] = i * i -\
    \ i + 1\n  end\n  local count = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n\
    \ - 1 do\n      for k = j + 1, n do\n        if (a[i] + a[j] + a[k]) % 3 == 0\
    \ then\n          count = count + 1\n        end\n      end\n    end\n  end\n\
    \  return count\nend", "    local a = {1}\n    for i = 2, n do\n        a[i] =\
    \ i * i - i + 1\n    end\n    local count = 0\n    for i = 1, n do\n        for\
    \ j = i + 1, n do\n            for k = j + 1, n do\n                if (a[i] +\
    \ a[j] + a[k]) % 3 == 0 then\n                    count = count + 1\n        \
    \        end\n            end\n        end\n    end\n    return count\nend", "\t\
    local count = 0;\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor\
    \ k = j + 1, n do\n\t\t\t\tif ((i * i - i + 1) + (j * j - j + 1) + (k * k - k\
    \ + 1)) % 3 == 0 then\n\t\t\t\t\tcount = count + 1;\n\t\t\t\tend\n\t\t\tend\n\t\
    \tend\n\tend\n\treturn count;\nend", "\tlocal triples = 0\n\tlocal a = {}\n\t\
    for i = 1, n do\n\t\ta[i] = i * i - i + 1\n\tend\n\tfor i = 1, n - 2 do\n\t\t\
    for j = i + 1, n - 1 do\n\t\t\tfor k = j + 1, n do\n\t\t\t\tif a[i] + a[j] + a[k]\
    \ % 3 == 0 then\n\t\t\t\t\ttriples = triples + 1\n\t\t\t\tend\n\t\t\tend\n\t\t\
    end\n\tend\n\treturn triples\nend", "    local a = {}\n    for i = 1, n do\n \
    \       a[i] = i * i - i + 1\n    end\n    local triple_count = 0\n    for i =\
    \ 1, n do\n        for j = i + 1, n do\n            for k = j + 1, n do\n    \
    \            if (a[i] + a[j] + a[k]) % 3 == 0 then\n                    triple_count\
    \ = triple_count + 1\n                end\n            end\n        end\n    end\n\
    \    return triple_count\nend", "  local a = {}\n  for i = 1, n do\n    a[i] =\
    \ i * i - i + 1\n  end\n  local count = 0\n  for i = 1, n do\n    for j = i +\
    \ 1, n do\n      for k = j + 1, n do\n        if a[i] + a[j] + a[k] % 3 == 0 then\n\
    \          count = count + 1\n        end\n      end\n    end\n  end\n  return\
    \ count\nend", "    if n < 3 then return 0 end\n    local ans = 0\n    local tmp\
    \ = 1\n    for i = 1, n do\n        tmp = tmp + 2 * i\n        if tmp % 3 == 0\
    \ then\n            ans = ans + (n - i) * (n - i - 1) / 2\n        end\n    end\n\
    \    return ans\nend", "    local a = {}\n    for i = 1, n do\n        a[i] =\
    \ i * i - i + 1\n    end\n    local count = 0\n    for i = 1, n - 2 do\n     \
    \   for j = i + 1, n - 1 do\n            for k = j + 1, n do\n               \
    \ if (a[i] + a[j] + a[k]) % 3 == 0 then\n                    count = count + 1\n\
    \                end\n            end\n        end\n    end\n    return count\n\
    end", "    local sum\n    local res = 0\n    for i = 1, n do\n        for j =\
    \ i + 1, n do\n            for k = j + 1, n do\n                sum = i*i - i\
    \ + 1 + j*j - j + 1 + k*k - k + 1\n                if sum % 3 == 0 then\n    \
    \                res = res + 1\n                end\n            end\n       \
    \ end\n    end\n    return res\nend", "    local a = {}\n    for i = 1, n do\n\
    \        a[i] = i * i - i + 1\n    end\n    local total = 0\n    for i = 1, n\
    \ do\n        for j = i + 1, n do\n            for k = j + 1, n do\n         \
    \       if (a[i] + a[j] + a[k]) % 3 == 0 then\n                    total = total\
    \ + 1\n                end\n            end\n        end\n    end\n    return\
    \ total\nend", "\tlocal a = {}\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\t\
    end\n\tlocal count = 0\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\
    \t\tfor k = j + 1, n do\n\t\t\t\tif (a[i] + a[j] + a[k]) % 3 == 0 then\n\t\t\t\
    \t\tcount = count + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn count\n\
    end", "    local count = 0\n    local array = {}\n    for i = 1, n do\n      \
    \  array[i] = i * i - i + 1\n    end\n    for i = 1, n do\n        for j = i +\
    \ 1, n do\n            for k = j + 1, n do\n                if array[i] + array[j]\
    \ + array[k] % 3 == 0 then\n                    count = count + 1\n          \
    \      end\n            end\n        end\n    end\n    return count\nend", "\t\
    local result = 0\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor\
    \ k = j + 1, n do\n\t\t\t\tif (i * i - i + 1 + j * j - j + 1 + k * k - k + 1)\
    \ % 3 == 0 then\n\t\t\t\t\tresult = result + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\
    \tend\n\treturn result\nend", "  local sum = 0\n  for i = 1, n do\n    sum = sum\
    \ + i * i - i + 1\n  end\n  if sum % 3 == 0 then\n    return 1\n  else\n    return\
    \ 0\n  end\nend", "  local a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n\
    \  end\n  local cnt = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n\
    \      for k = j + 1, n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n  \
    \        cnt = cnt + 1\n        end\n      end\n    end\n  end\n  return cnt\n\
    end", "\tlocal t = {}\n\tfor i = 1, n do\n\t\tt[i] = i * i - i + 1\n\tend\n\t\
    local c = 0\n\tfor i = 1, n do\n\t\tfor j = i + 1, n do\n\t\t\tfor k = j + 1,\
    \ n do\n\t\t\t\tif t[i] + t[j] + t[k] % 3 == 0 then\n\t\t\t\t\tc = c + 1\n\t\t\
    \t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn c\nend", "    local a = {}\n    for\
    \ i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local cnt = 0\n    for\
    \ i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n            for k = j + 1,\
    \ n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n              \
    \      cnt = cnt + 1\n                end\n            end\n        end\n    end\n\
    \    return cnt\nend", "    local sum = 0\n    for i = 1, n do\n        for j\
    \ = i + 1, n do\n            for k = j + 1, n do\n                if (i * i -\
    \ i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 then\n                    sum\
    \ = sum + 1\n                end\n            end\n        end\n    end\n    return\
    \ sum\nend", "  local a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n\
    \  local count = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n     \
    \ for k = j + 1, n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n       \
    \   count = count + 1\n        end\n      end\n    end\n  end\n  return count\n\
    end", "    local sum = 0\n    for i = 1, n do\n        sum = sum + i\n    end\n\
    \    return sum * (n - 1) * (n - 2) / 6\nend", "    local max_count = 0\n    local\
    \ count = 0\n    local k = 1\n    for i = 1, n - 2 do\n        for j = i + 1,\
    \ n - 1 do\n            while k < n and i + j + k < (i + j) * 2 do\n         \
    \       k = k + 1\n            end\n            if k < n and i + j + k == (i +\
    \ j) * 2 then\n                count = count + 1\n            end\n        end\n\
    \    end\n    return count\nend", "    -- your code here\n    --get the sum of\
    \ n integers\n    local sum = 0\n    local a = {}\n    for i = 1, n do\n     \
    \   a[i] = i * i - i + 1\n        sum = sum + a[i]\n    end\n    if sum % 3 ==\
    \ 0 then\n        return 1\n    else\n        return 0\n    end\nend", "  local\
    \ count = 0\n  for i = 1, n do\n    for j = i + 1, n do\n      for k = j + 1,\
    \ n do\n        if ((i * i - i + 1) + (j * j - j + 1) + (k * k - k + 1)) % 3 ==\
    \ 0 then\n          count = count + 1\n        end\n      end\n    end\n  end\n\
    \  return count\nend", "    if n < 3 then return 0 end\n    local a = {}\n   \
    \ for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local x, y, z, res\
    \ = 1, 2, 3, 0\n    while true do\n        if (a[x] + a[y] + a[z]) % 3 == 0 then\n\
    \            res = res + 1\n        end\n        z = z + 1\n        if z > n then\n\
    \            y = y + 1\n            if y > n - 1 then\n                x = x +\
    \ 1\n                if x > n - 2 then\n                    break\n          \
    \      end\n                y = x + 1\n            end\n            z = y + 1\n\
    \        end\n    end\n    return res\nend", "    local a = {}\n    for i = 1,\
    \ n do\n        a[i] = i * i - i + 1\n    end\n    local count = 0\n    for i\
    \ = 1, n do\n        for j = i + 1, n do\n            for k = j + 1, n do\n  \
    \              if (a[i] + a[j] + a[k]) % 3 == 0 then\n                    count\
    \ = count + 1\n                end\n            end\n        end\n    end\n  \
    \  return count\nend", "    -- Write your code here\n    local count = 0\n   \
    \ local a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n \
    \   for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n            for k =\
    \ j + 1, n do\n                if a[i] + a[j] + a[k] % 3 == 0 then\n         \
    \           count = count + 1\n                end\n            end\n        end\n\
    \    end\n    return count\nend", "  local a = {}\n  for i = 1, n do\n    a[i]\
    \ = i * i - i + 1\n  end\n  local count = 0\n  for i = 1, n do\n    for j = i\
    \ + 1, n do\n      for k = j + 1, n do\n        if (a[i] + a[j] + a[k]) % 3 ==\
    \ 0 then\n          count = count + 1\n        end\n      end\n    end\n  end\n\
    \  return count\nend", "    local res = 0;\n    local a = {}\n    for i = 1, n\
    \ do\n        a[i] = i * i - i + 1\n    end\n    for i = 1, n - 2 do\n       \
    \ for j = i + 1, n - 1 do\n            for k = j + 1, n do\n                if\
    \ (a[i] + a[j] + a[k]) % 3 == 0 then\n                    res = res + 1\n    \
    \            end\n            end\n        end\n    end\n    return res\nend",
  "    local table_a = {}\n    for i = 1, n do\n        table_a[i] = i * i - i + 1\n\
    \    end\n    local count = 0\n    for i = 1, n - 2 do\n        for j = i + 1,\
    \ n - 1 do\n            for k = j + 1, n do\n                if (table_a[i] +\
    \ table_a[j] + table_a[k]) % 3 == 0 then\n                    count = count +\
    \ 1\n                end\n            end\n        end\n    end\n    return count\n\
    end", "  local sum\n  local count = 0\n  for i = 1, n - 2 do\n    for j = i +\
    \ 1, n - 1 do\n      for k = j + 1, n do\n        sum = i * i - i + 1 + (j * j\
    \ - j + 1) + (k * k - k + 1)\n        if sum % 3 == 0 then\n          count =\
    \ count + 1\n        end\n      end\n    end\n  end\n  return count\nend", " \
    \ local cnt = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for\
    \ k = j + 1, n do\n        if ((i * i - i + 1) + (j * j - j + 1) + (k * k - k\
    \ + 1)) % 3 == 0 then\n          cnt = cnt + 1\n        end\n      end\n    end\n\
    \  end\n  return cnt\nend", "    local t = {}\n    for i = 1, n do\n        t[i]\
    \ = i * i - i + 1\n    end\n    local r = 0\n    for i = 1, n - 2 do\n       \
    \ for j = i + 1, n - 1 do\n            for k = j + 1, n do\n                if\
    \ (t[i] + t[j] + t[k]) % 3 == 0 then\n                    r = r + 1\n        \
    \        end\n            end\n        end\n    end\n    return r\nend", "   \
    \ local a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n \
    \   local cnt = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n\
    \            for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3\
    \ == 0 then\n                    cnt = cnt + 1\n                end\n        \
    \    end\n        end\n    end\n    return cnt\nend", "  local s = 0\n  for i\
    \ = 1, n do\n    local a = i * i - i + 1\n    for j = i + 1, n do\n      local\
    \ b = j * j - j + 1\n      for k = j + 1, n do\n        local c = k * k - k +\
    \ 1\n        if (a + b + c) % 3 == 0 then\n          s = s + 1\n        end\n\
    \      end\n    end\n  end\n  return s\nend", "  if type(n) ~= 'number' or n <\
    \ 1 then\n    return nil, 'n should be a positive integer.'\n  end\n  local a\
    \ = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local count = 0\n\
    \  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j + 1, n do\n\
    \        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          count = count + 1\n\
    \        end\n      end\n    end\n  end\n  return count\nend", "  local a = {}\n\
    \  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local count = 0\n  for\
    \ i = 1, n do\n    for j = i + 1, n do\n      for k = j + 1, n do\n        if\
    \ (a[i] + a[j] + a[k]) % 3 == 0 then\n          count = count + 1\n        end\n\
    \      end\n    end\n  end\n  return count\nend", "\tlocal a, c = {}, 0\n\tfor\
    \ i = 1, n do\n\t\ta[i] = i * i - i + 1\n\tend\n\tfor i = 1, n - 2 do\n\t\tfor\
    \ j = i + 1, n - 1 do\n\t\t\tfor k = j + 1, n do\n\t\t\t\tif (a[i] + a[j] + a[k])\
    \ % 3 == 0 then\n\t\t\t\t\tc = c + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\
    \treturn c\nend", "  \n    local a = {}\n    for i = 1, n do\n      a[i] = i *\
    \ i - i + 1\n    end\n    \n    local sum = 0\n    for i = 1, n - 2 do\n     \
    \ for j = i + 1, n - 1 do\n        for k = j + 1, n do\n          if (a[i] + a[j]\
    \ + a[k]) % 3 == 0 then\n            sum = sum + 1\n          end\n        end\n\
    \      end\n    end\n    return sum\nend", "   local t = {}\n   for i = 1, n do\n\
    \      t[i] = i * i - i + 1\n   end\n   local c = 0\n   for i = 1, n - 2 do\n\
    \      for j = i + 1, n - 1 do\n         for k = j + 1, n do\n            if (t[i]\
    \ + t[j] + t[k]) % 3 == 0 then\n               c = c + 1\n            end\n  \
    \       end\n      end\n   end\n   return c\nend", "\tlocal a = {}\n\tfor i =\
    \ 1, n do\n\t\ta[i] = i * i - i + 1\n\tend\n\tlocal count = 0\n\tfor i = 1, n\
    \ - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1, n do\n\t\t\t\tif (a[i]\
    \ + a[j] + a[k]) % 3 == 0 then\n\t\t\t\t\tcount = count + 1\n\t\t\t\tend\n\t\t\
    \tend\n\t\tend\n\tend\n\treturn count\nend", "  local t = {}\n  for i = 1, n do\n\
    \    t[i] = i * i - i + 1\n  end\n  local r = 0\n  for i = 1, n - 2 do\n    for\
    \ j = i + 1, n - 1 do\n      for k = j + 1, n do\n        if (t[i] + t[j] + t[k])\
    \ % 3 == 0 then\n          r = r + 1\n        end\n      end\n    end\n  end\n\
    \  return r\nend", "    local res = 0\n    for i = 1, n - 2 do\n        for j\
    \ = i + 1, n - 1 do\n            for k = j + 1, n do\n                if (i *\
    \ i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 then\n                 \
    \   res = res + 1\n                end\n            end\n        end\n    end\n\
    \    return res\nend", "    local a = {}\n    for i = 1, n do\n        a[i] =\
    \ i * i - i + 1\n    end\n    local count = 0\n    for i = 1, n - 2 do\n     \
    \   for j = i + 1, n - 1 do\n            for k = j + 1, n do\n               \
    \ if (a[i] + a[j] + a[k]) % 3 == 0 then\n                    count = count + 1\n\
    \                end\n            end\n        end\n    end\n    return count\n\
    end", "  local a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local\
    \ count = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k =\
    \ j + 1, n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          count\
    \ = count + 1\n        end\n      end\n    end\n  end\n  return count\nend", " \
    \   local a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n\
    \    local n = 0\n    for i = 1, n do\n        for j = i + 1, n do\n         \
    \   for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    n = n + 1\n                end\n            end\n       \
    \ end\n    end\n    return n\nend", "\tlocal t = {}\n\tfor i = 1, n do\n\t\tt[i]\
    \ = i * i - i + 1\n\tend\n\tlocal c = 0\n\tfor i = 1, n - 2 do\n\t\tfor j = i\
    \ + 1, n - 1 do\n\t\t\tfor k = j + 1, n do\n\t\t\t\tif (t[i] + t[j] + t[k]) %\
    \ 3 == 0 then\n\t\t\t\t\tc = c + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\
    return c\nend", "    local a = {}\n    for i = 1, n do\n        a[i] = i * i -\
    \ i + 1\n    end\n    local cnt = 0\n    for i = 1, n - 2 do\n        for j =\
    \ i + 1, n - 1 do\n            for k = j + 1, n do\n                if (a[i] +\
    \ a[j] + a[k]) % 3 == 0 then\n                    cnt = cnt + 1\n            \
    \    end\n            end\n        end\n    end\n    return cnt\nend", "    if\
    \ n < 3 then return 0 end\n    local a = {}\n    for i = 1, n do\n        a[i]\
    \ = i * i - i + 1\n    end\n    local cnt = 0\n    for i = 1, n - 2 do\n     \
    \   for j = i + 1, n - 1 do\n            for k = j + 1, n do\n               \
    \ if (a[i] + a[j] + a[k]) % 3 == 0 then\n                    cnt = cnt + 1\n \
    \               end\n            end\n        end\n    end\n    return cnt\nend",
  "    local a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n\
    \    local num = 0\n    for i = 1, n do\n        for j = i + 1, n do\n       \
    \     for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    num = num + 1\n                end\n            end\n   \
    \     end\n    end\n    return num\nend", "  local cnt = 0\n  for i = 1, n do\n\
    \    for j = i + 1, n do\n      for k = j + 1, n do\n        if (i * i - i + 1\
    \ + j * j - j + 1 + k * k - k + 1) % 3 == 0 then\n          cnt = cnt + 1\n  \
    \      end\n      end\n    end\n  end\n  return cnt\nend", "  local res = 0\n\
    \  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j + 1, n do\n\
    \        if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 then\n  \
    \        res = res + 1\n        end\n      end\n    end\n  end\n  return res\n\
    end", "   local a = {}\n   for i = 1, n do\n      a[i] = i * i - i + 1\n   end\n\
    \   local sum_triples = 0\n   for i = 1, n do\n      for j = i + 1, n do\n   \
    \      for k = j + 1, n do\n            if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \               sum_triples = sum_triples + 1\n            end\n         end\n\
    \      end\n   end\n   return sum_triples\nend", "    local a = {}\n    for i\
    \ = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local triples = 0\n  \
    \  for i = 1, n do\n        for j = i + 1, n do\n            for k = j + 1, n\
    \ do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n                \
    \    triples = triples + 1\n                end\n            end\n        end\n\
    \    end\n    return triples\nend", "    local a = {}\n    for i = 1, n do\n \
    \       a[i] = i * i - i + 1\n    end\n    local s = 0\n    for i = 1, n - 2 do\n\
    \        for j = i + 1, n - 1 do\n            for k = j + 1, n do\n          \
    \      if (a[i] + a[j] + a[k]) % 3 == 0 then\n                    s = s + 1\n\
    \                end\n            end\n        end\n    end\n    return s\nend",
  "    local function get_sum(i, j, k)\n        return (i + j + k)\n    end\n    local\
    \ function get_triples(n)\n        local t = {}\n        for i = 1, n do\n   \
    \         t[i] = i * i - i + 1\n        end\n        return t\n    end\n    local\
    \ function get_triples_count(triples)\n        local triples_count = 0\n     \
    \   for i = 1, #triples - 2 do\n            for j = i + 1, #triples - 1 do\n \
    \               for k = j + 1, #triples do\n                    if get_sum(triples[i],\
    \ triples[j], triples[k]) % 3 == 0 then\n                        triples_count\
    \ = triples_count + 1\n                    end\n                end\n        \
    \    end\n        end\n        return triples_count\n    end\n    local triples\
    \ = get_triples(n)\n    return get_triples_count(triples)\nend", "\tlocal a =\
    \ {}\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\tend\n\tlocal cnt = 0\n\t\
    for i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1, n do\n\t\
    \t\t\tif (a[i] + a[j] + a[k]) % 3 == 0 then\n\t\t\t\t\tcnt = cnt + 1\n\t\t\t\t\
    end\n\t\t\tend\n\t\tend\n\tend\n\treturn cnt\nend", "    local a = {}\n    for\
    \ i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local count = 0\n  \
    \  for i = 1, n do\n        for j = i + 1, n do\n            for k = j + 1, n\
    \ do\n                if a[i] + a[j] + a[k] % 3 == 0 then\n                  \
    \  count = count + 1\n                end\n            end\n        end\n    end\n\
    \    return count\nend", "\tlocal sum = 0\n\tfor i = 1, n - 2 do\n\t\tfor j =\
    \ i + 1, n - 1 do\n\t\t\tfor k = j + 1, n do\n\t\t\t\tif (i * i - i + 1 + j *\
    \ j - j + 1 + k * k - k + 1) % 3 == 0 then\n\t\t\t\t\tsum = sum + 1\n\t\t\t\t\
    end\n\t\t\tend\n\t\tend\n\tend\n\treturn sum\nend", "  local function to_idx(i)\n\
    \    return i * i - i + 1\n  end\n  local function is_divisible_by_3(x)\n    return\
    \ x % 3 == 0\n  end\n  local a = {}\n  for i = 1, n do\n    a[i] = to_idx(i)\n\
    \  end\n  local cnt = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n\
    \      for k = j + 1, n do\n        if is_divisible_by_3(a[i] + a[j] + a[k]) then\n\
    \          cnt = cnt + 1\n        end\n      end\n    end\n  end\n  return cnt\n\
    end", "    -- Use a temporary table to count the number of a[i] in multiples of\
    \ 3.\n    local count = {1, 0, 0}\n    -- Create the table a.\n    local a = {}\n\
    \    for i = 1, n do\n        a[i] = i * i - i + 1\n        -- Increment the count\n\
    \        count[a[i] % 3 + 1] = count[a[i] % 3 + 1] + 1\n    end\n    -- The number\
    \ of triples is a linear combination of the number of values in the table.\n \
    \   -- The multiplicative factors are given by the permutations.\n    return (count[1]\
    \ * count[2] * count[3] +\n            count[1] * count[1] * count[2] +\n    \
    \        count[2] * count[2] * count[3])\nend", "\tlocal m = {}\n\tlocal k = 1\n\
    \tfor i = 1, n do\n\t\tm[i] = i * i - i + 1\n\tend\n\tfor i = 1, n do\n\t\tfor\
    \ j = i + 1, n do\n\t\t\tfor h = j + 1, n do\n\t\t\t\tif (m[i] + m[j] + m[h])\
    \ % 3 == 0 then\n\t\t\t\t\tk = k + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\
    \treturn k\nend", "  local a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n\
    \  end\n  local triples = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n\
    \      for k = j + 1, n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n  \
    \        triples = triples + 1\n        end\n      end\n    end\n  end\n  return\
    \ triples\nend", "\tlocal a = {}\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\
    \tend\n\tlocal cnt = 0\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\
    \t\tfor k = j + 1, n do\n\t\t\t\tif (a[i] + a[j] + a[k]) % 3 == 0 then\n\t\t\t\
    \t\tcnt = cnt + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn cnt\nend",
  "\tlocal a = {}\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\tend\n\tlocal sum\
    \ = 0\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1,\
    \ n do\n\t\t\t\tlocal t = a[i] + a[j] + a[k]\n\t\t\t\tif t % 3 == 0 then\n\t\t\
    \t\t\tsum = sum + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn sum\nend",
  "  -- your code here\n  local t = {}\n  for i = 1, n do\n    t[i] = i * i - i +\
    \ 1\n  end\n  local count = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1\
    \ do\n      for k = j + 1, n do\n        if t[i] + t[j] + t[k] % 3 == 0 then\n\
    \          count = count + 1\n        end\n      end\n    end\n  end\n  return\
    \ count\nend", "  local sum = 0;\n  for i = 1, n do\n    for j = i + 1, n do\n\
    \      for k = j + 1, n do\n        if (i * i - i + 1 + j * j - j + 1 + k * k\
    \ - k + 1) % 3 == 0 then\n          sum = sum + 1;\n        end\n      end\n \
    \   end\n  end\n  return sum;\nend", "  local res = 0\n  local a = {}\n  for i\
    \ = 1, n do\n    a[i] = i * i - i + 1\n  end\n  for i = 1, n - 2 do\n    for j\
    \ = i + 1, n - 1 do\n      for k = j + 1, n do\n        if (a[i] + a[j] + a[k])\
    \ % 3 == 0 then\n          res = res + 1\n        end\n      end\n    end\n  end\n\
    \  return res\nend", "  local cnt = 0\n  for i = 1, n - 2 do\n    for j = i +\
    \ 1, n - 1 do\n      for k = j + 1, n do\n        if (i + j + k) % 3 == 0 then\n\
    \          cnt = cnt + 1\n        end\n      end\n    end\n  end\n  return cnt\n\
    end", "  local a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local\
    \ count = 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k =\
    \ j + 1, n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          count\
    \ = count + 1\n        end\n      end\n    end\n  end\n  return count\nend", "\t\
    local a = {}\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\tend\n\tlocal ans\
    \ = 0\n\tfor i = 1, n do\n\t\tfor j = i + 1, n do\n\t\t\tfor k = j + 1, n do\n\
    \t\t\t\tif a[i] + a[j] + a[k] % 3 == 0 then\n\t\t\t\t\tans = ans + 1\n\t\t\t\t\
    end\n\t\t\tend\n\t\tend\n\tend\n\treturn ans\nend", "  return 1\nend", "  local\
    \ a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local count =\
    \ 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j + 1,\
    \ n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          count = count\
    \ + 1\n        end\n      end\n    end\n  end\n  return count\nend", "\tlocal\
    \ a, m = {}, 0\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\t\tfor j = i + 1,\
    \ n do\n\t\t\tfor k = j + 1, n do\n\t\t\t\tif a[i] + a[j] + a[k] % 3 == 0 then\n\
    \t\t\t\t\tm = m + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn m\nend",
  "    return 'Write your method here'\nend", "    local a = {}\n    for i = 1, n\
    \ do\n        a[i] = i * i - i + 1\n    end\n    local count = 0\n    for i =\
    \ 1, n do\n        for j = i + 1, n do\n            for k = j + 1, n do\n    \
    \            if (a[i] + a[j] + a[k]) % 3 == 0 then\n                    count\
    \ = count + 1\n                end\n            end\n        end\n    end\n  \
    \  return count\nend", "  local max = (n-1) * n * (n+1) / 6\n  if n % 3 == 0 then\n\
    \    max = max + n/3 * (n-1) * (n-2) / 6\n  end\n  return max\nend", "\tlocal\
    \ a = {}\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\tend\n\tlocal count =\
    \ 0\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1,\
    \ n do\n\t\t\t\tif (a[i] + a[j] + a[k]) % 3 == 0 then\n\t\t\t\t\tcount = count\
    \ + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

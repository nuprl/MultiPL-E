name: HumanEval_42_incr_list
language: lua
prompt: "-- Return table with elements incremented by 1.\n-- >>> incr_list({1, 2,\
  \ 3})\n-- {2, 3, 4}\n-- >>> incr_list({5, 3, 5, 2, 3, 3, 9, 0, 123})\n-- {6, 4,\
  \ 6, 3, 4, 4, 10, 1, 124}\nlocal function incr_list(l)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n\
  \    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}),\
  \ {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6,\
  \ 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\tlocal result = {}\n\tfor k, v in pairs(l) do\n\t\tresult[k] = v +\
    \ 1\n\tend\n\treturn result\nend", "  local res = {}\n  for i = 1, #l do\n   \
    \ res[i] = l[i] + 1\n  end\n  return res\nend", "\tlocal new = {}\n\tfor i = 1,\
    \ #l do\n\t\tnew[i] = l[i] + 1\n\tend\n\treturn new\nend", "    local r = {}\n\
    \    for i, v in ipairs(l) do\n        table.insert(r, v + 1)\n    end\n    return\
    \ r\nend", "  local result = {}\n  for i, v in ipairs(l) do\n    result[i] = v\
    \ + 1\n  end\n  return result\nend", "  local t = {}\n  for i = 1, #l do\n   \
    \ t[i] = l[i] + 1\n  end\n  return t\nend", "  return map(function(e) return e\
    \ + 1 end, l)\nend", "    local r = {}\n    for i = 1, #l do\n        table.insert(r,\
    \ l[i] + 1)\n    end\n    return r\nend", "  local ret = {}\n  for i = 1, #l do\n\
    \    ret[i] = l[i] + 1\n  end\n  return ret\nend", "\tlocal r = {}\n\tfor i,v\
    \ in ipairs(l) do\n\t\tr[i] = v + 1\n\tend\n\treturn r\nend", "  local r = {}\n\
    \  for _, e in ipairs(l) do\n    r[#r + 1] = e + 1\n  end\n  return r\nend", "\t\
    local new_l = {}\n\tfor _, e in ipairs(l) do\n\t\ttable.insert(new_l, e + 1)\n\
    \tend\n\treturn new_l\nend", "  local res = {}\n  for i = 1, #l do\n    res[i]\
    \ = l[i] + 1\n  end\n  return res\nend", "    local new = {}\n    for i = 1, #l\
    \ do\n        new[i] = l[i] + 1\n    end\n    return new\nend", "    local inc_list\
    \ = {}\n    for i = 1, #l do\n        inc_list[i] = l[i] + 1\n    end\n    return\
    \ inc_list\nend", "  return map(incr, l)\nend", "    local t = {}\n    for _,\
    \ v in ipairs(l) do\n        table.insert(t, v + 1)\n    end\n    return t\nend",
  "  local t = {}\n  for _, x in ipairs(l) do\n    table.insert(t, x + 1)\n  end\n\
    \  return t\nend", "    local t = {}\n    for i, v in ipairs(l) do\n        t[i]\
    \ = v + 1\n    end\n    return t\nend", "    local ret = {}\n    for _, v in ipairs(l)\
    \ do\n        table.insert(ret, v + 1)\n    end\n    return ret\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

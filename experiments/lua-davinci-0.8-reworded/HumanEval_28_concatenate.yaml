name: HumanEval_28_concatenate
language: lua
prompt: "-- Concatenate table of strings into a single string\n-- >>> concatenate({})\n\
  -- ''\n-- >>> concatenate({'a', 'b', 'c'})\n-- 'abc'\nlocal function concatenate(strings)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = concatenate\n\
  \    lu.assertEquals(candidate({}), '')\n    lu.assertEquals(candidate({'x', 'y',\
  \ 'z'}), 'xyz')\n    lu.assertEquals(candidate({'x', 'y', 'z', 'w', 'k'}), 'xyzwk')\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local string = \"\"\n  for i = 1, #strings do\n    string = string\
    \ .. strings[i]\n  end\n  return string\nend", "    local result = ''\n    for\
    \ _, s in ipairs(strings) do\n        result = result .. s\n    end\n    return\
    \ result\nend", "    local result = ''\n    for i, v in ipairs(strings) do\n \
    \       result = result .. v\n    end\n    return result\nend", "  return table.concat(strings)\n\
    end", "  return table.concat(strings)\nend", "    local str = ''\n    for i =\
    \ 1, #strings do\n        str = str .. strings[i]\n    end\n    return str\nend",
  "  local res = ''\n  for _, s in ipairs(strings) do\n    res = res .. s\n  end\n\
    \  return res\nend", "  local ret = ''\n  for _,s in ipairs(strings) do\n    ret\
    \ = ret .. s\n  end\n  return ret\nend", "  local s = {}\n  for i, value in ipairs(strings)\
    \ do\n    s[i] = tostring(value)\n  end\n  return table.concat(s)\nend", "  return\
    \ table.concat(strings)\nend", "    local result = ''\n    for _, s in ipairs(strings)\
    \ do\n        result = result .. s\n    end\n    return result\nend", "    return\
    \ table.concat(strings)\nend", "  return table.concat(strings)\nend", "  return\
    \ table.concat(strings)\nend", "  local result = ''\n  for _, string in ipairs(strings)\
    \ do\n    result = result .. string\n  end\n  return result\nend", "    local\
    \ result = ''\n    for i, string in ipairs(strings) do\n        result = result\
    \ .. string\n    end\n    return result\nend", "  return table.concat(strings)\n\
    end", "  local ret = ''\n  for _, s in ipairs(strings) do\n    ret = ret .. s\n\
    \  end\n  return ret\nend", "  local result = ''\n  for _, s in ipairs(strings)\
    \ do\n    result = result .. s\n  end\n  return result\nend", "  local result\
    \ = ''\n  for _, v in ipairs(strings) do\n    result = result .. v\n  end\n  return\
    \ result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

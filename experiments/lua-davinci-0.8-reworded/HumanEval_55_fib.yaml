name: HumanEval_55_fib
language: lua
prompt: "-- Return n-th Fibonacci number.\n-- >>> fib(10)\n-- 55\n-- >>> fib(1)\n\
  -- 1\n-- >>> fib(8)\n-- 21\nlocal function fib(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n\
  \    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n\
  \    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
  \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if n < 2 then\n    return n\n  else\n    return fib(n - 1) + fib(n\
    \ - 2)\n  end\nend", "  if n <= 1 then\n    return n\n  else\n    return fib(n\
    \ - 1) + fib(n - 2)\n  end\nend", "  local a, b = 0, 1\n  while n > 0 do\n   \
    \ a, b = b, a + b\n    n = n - 1\n  end\n  return a\nend", "  local a, b = 0,\
    \ 1\n  for i = 1, n do\n    a, b = b, a + b\n  end\n  return a\nend", "\tif n\
    \ < 2 then\n\t\treturn n\n\tend\n\treturn fib(n - 1) + fib(n - 2)\nend", "  local\
    \ a, b = 0, 1\n  for i = 1, n do\n    a, b = b, a + b\n  end\n  return a\nend",
  "  local a, b = 0, 1\n  for i = 1, n do\n    a, b = b, a + b\n  end\n  return a\n\
    end", "  if n < 2 then\n    return n\n  else\n    return fib(n - 1) + fib(n -\
    \ 2)\n  end\nend", "    if n < 2 then\n        return n\n    else\n        return\
    \ fib(n - 1) + fib(n - 2)\n    end\nend", "  local x = 0\n  local y = 1\n  for\
    \ i = 1, n do\n    x, y = y, x + y\n  end\n  return x\nend", "\tlocal a, b = 0,\
    \ 1\n\tfor i = 1, n do\n\t\ta, b = b, a + b\n\tend\n\treturn a\nend", "  local\
    \ t = {}\n  t[1] = 1\n  t[2] = 1\n  for i = 3, n do\n    t[i] = t[i-1] + t[i-2]\n\
    \  end\n  return t[n]\nend", "    if n <= 1 then\n        return n\n    else\n\
    \        return fib(n - 1) + fib(n - 2)\n    end\nend", "\tif n < 1 then\n\t\t\
    return 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\
    \tend\nend", "    if n == 1 or n == 2 then\n        return 1\n    else\n     \
    \   return fib(n - 1) + fib(n - 2)\n    end\nend", "    return n\nend", "    if\
    \ n <= 1 then\n        return n\n    else\n        return fib(n - 1) + fib(n -\
    \ 2)\n    end\nend", "  if n == 1 or n == 2 then\n    return 1\n  else\n    return\
    \ fib(n-1) + fib(n-2)\n  end\nend", "    if n <= 2 then\n        return 1\n  \
    \  else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "    if n <= 1\
    \ then\n        return n\n    else\n        return fib(n - 1) + fib(n - 2)\n \
    \   end\nend", "\treturn (n > 2) and fib(n - 1) + fib(n - 2) or 1\nend", "   \
    \ if n == 1 or n == 2 then\n        return 1\n    else\n        return fib(n -\
    \ 1) + fib(n - 2)\n    end\nend", "    local a, b = 0, 1\n    while n ~= 0 do\n\
    \        a, b = b, a + b\n        n = n - 1\n    end\n    return a\nend", "  \
    \  return (1 / math.sqrt(5)) * math.pow(((1 + math.sqrt(5)) / 2), n) -\n     \
    \   (1 / math.sqrt(5)) * math.pow(((1 - math.sqrt(5)) / 2), n)\nend", "\tif n\
    \ <= 1 then\n\t\treturn n\n\tend\n\treturn fib(n - 1) + fib(n - 2)\nend", "  \
    \  if n == 1 or n == 2 then\n        return 1\n    else\n        return fib(n\
    \ - 1) + fib(n - 2)\n    end\nend", "    if n <= 1 then\n        return n\n  \
    \  else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "    if n <= 1\
    \ then\n        return n\n    else\n        return fib(n - 1) + fib(n - 2)\n \
    \   end\nend", "    local a, b = 0, 1\n    while n > 0 do\n        a, b = b, a\
    \ + b\n        n = n - 1\n    end\n    return a\nend", "  if n < 2 then\n    return\
    \ n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  local a, b =\
    \ 0, 1\n  for i = 1, n do\n    a, b = b, a + b\n  end\n  return a\nend", "   \
    \ if n == 1 or n == 2 then\n        return 1\n    else\n        return fib(n -\
    \ 1) + fib(n - 2)\n    end\nend", "    return 0\nend", "\tlocal t = {0, 1}\n\t\
    for i = 3, n do\n\t\tt[i] = t[i - 1] + t[i - 2]\n\tend\n\treturn t[n]\nend", " \
    \   if n < 3 then\n        return 1\n    else\n        return fib(n - 1) + fib(n\
    \ - 2)\n    end\nend", "\tlocal f_2 = 0\n\tlocal f_1 = 1\n\tlocal f = 0\n\tfor\
    \ i = 2, n do\n\t\tf = f_1 + f_2\n\t\tf_2 = f_1\n\t\tf_1 = f\n\tend\n\treturn\
    \ f\nend", "    if n <= 2 then\n        return 1\n    else\n        return fib(n\
    \ - 1) + fib(n - 2)\n    end\nend", "\tif n == 1 or n == 2 then\n\t\treturn 1\n\
    \telse\n\t\treturn fib(n-1) + fib(n-2)\n\tend\nend", "  local x1, x2 = 0, 1\n\
    \  for i = 1, n do\n    x1, x2 = x2, x1 + x2\n  end\n  return x1\nend", "  if\
    \ n == 1 or n == 2 then\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n\
    \  end\nend", "  if n <= 1 then\n    return n\n  else\n    return fib(n - 1) +\
    \ fib(n - 2)\n  end\nend", "    if n == 1 or n == 2 then\n        return 1\n \
    \   else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if\
    \ n < 2 then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\n\
    end", "    assert(type(n) == \"number\")\n    assert(n >= 1)\n    assert(n ==\
    \ math.floor(n))", "\tif n == 1 or n == 2 then\n\t\treturn 1\n\telse\n\t\treturn\
    \ fib(n-1) + fib(n-2)\n\tend\nend", "    local a, b = 0, 1\n    for i = 1, n do\n\
    \        a, b = b, a + b\n    end\n    return a\nend", "  if n == 1 or n == 2\
    \ then\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", " \
    \   if n < 2 then\n        return n\n    else\n        return fib(n - 1) + fib(n\
    \ - 2)\n    end\nend", "  if n < 2 then\n    return n\n  else\n    return fib(n\
    \ - 1) + fib(n - 2)\n  end\nend", "    if n < 2 then\n        return n\n    else\n\
    \        return fib(n - 1) + fib(n - 2)\n    end\nend", "\tif n == 1 or n == 2\
    \ then\n\t\treturn 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\tend\nend", " \
    \   if n == 1 or n == 2 then\n        return 1\n    else\n        return fib(n\
    \ - 1) + fib(n - 2)\n    end\nend", "  if n < 1 then\n    return 0\n  elseif n\
    \ == 1 then\n    return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\n\
    end", "  local fibs = { 1, 1 }\n  for i = 3, n do\n    fibs[i] = fibs[i - 1] +\
    \ fibs[i - 2]\n  end\n  return fibs[n]\nend", "  if n == 1 or n == 2 then\n  \
    \  return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "    if\
    \ n == 1 or n == 2 then\n        return 1\n    else\n        return fib(n - 1)\
    \ + fib(n - 2)\n    end\nend", "    if n == 1 or n == 2 then\n        return 1\n\
    \    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "\tif n == 1\
    \ or n == 2 then\n\t\treturn 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\tend\n\
    end", "    local a, b = 0, 1\n    for i = 1, n do\n        a, b = b, a + b\n \
    \   end\n    return a\nend", "  local a, b = 0, 1\n  for i = 1, n do\n    a, b\
    \ = b, a + b\n  end\n  return a\nend", "    local f1 = 0\n    local f2 = 1\n \
    \   for i = 2, n do\n        local f = f1 + f2\n        f1 = f2\n        f2 =\
    \ f\n    end\n    return f2\nend", "    local a, b = 0, 1\n    for i = 2, n do\n\
    \        a, b = b, a + b\n    end\n    return b\nend", "  return math.floor(((1\
    \ + math.sqrt(5)) ^ n - (1 - math.sqrt(5)) ^ n) / (2 ^ n * math.sqrt(5)))\nend",
  "    if n < 2 then\n        return n\n    else\n        return fib(n - 1) + fib(n\
    \ - 2)\n    end\nend", "  if n == 1 or n == 2 then\n    return 1\n  else\n   \
    \ return fib(n - 1) + fib(n - 2)\n  end\nend", "    local a, b = 0, 1\n    for\
    \ i = 1, n - 1 do\n        a, b = b, a + b\n    end\n    return b\nend", "  local\
    \ i, a, b = 1, 0, 1\n  while i < n do\n    a, b = b, a + b\n    i = i + 1\n  end\n\
    \  return b\nend", "\tif n <= 2 then\n\t\treturn 1\n\telse\n\t\treturn fib(n-1)\
    \ + fib(n-2)\n\tend\nend", "\tif n == 1 or n == 2 then\n\t\treturn 1\n\telse\n\
    \t\treturn fib(n-1) + fib(n-2)\n\tend\nend", "    if n < 2 then\n        return\
    \ n\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "    if\
    \ n <= 1 then\n        return n\n    else\n        return fib(n - 1) + fib(n -\
    \ 2)\n    end\nend", "    if n <= 1 then\n        return n\n    else\n       \
    \ return fib(n - 1) + fib(n - 2)\n    end\nend", "    if n < 2 then\n        return\
    \ n\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "    if\
    \ n == 1 or n == 2 then\n        return 1\n    else\n        return fib(n - 1)\
    \ + fib(n - 2)\n    end\nend", "    if n == 1 or n == 2 then\n        return 1\n\
    \    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "  if n <= 1\
    \ then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend",
  "    if n == 1 or n == 2 then\n        return 1\n    else\n        return fib(n\
    \ - 1) + fib(n - 2)\n    end\nend", "    if n == 1 or n == 2 then\n        return\
    \ 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "    if\
    \ n == 1 or n == 2 then\n        return 1\n    else\n        return fib(n - 1)\
    \ + fib(n - 2)\n    end\nend", "  if n < 2 then\n    return n\n  else\n    return\
    \ fib(n - 1) + fib(n - 2)\n  end\nend", "  local a, b = 0, 1\n  for i = 1, n do\n\
    \    a, b = b, a + b\n  end\n  return a\nend", "  if n == 1 or n == 2 then\n \
    \   return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "    local\
    \ a, b = 0, 1\n    for i = 1, n do\n        a, b = b, a + b\n    end\n    return\
    \ a\nend", "    if n <= 1 then\n        return n\n    else\n        return fib(n\
    \ - 1) + fib(n - 2)\n    end\nend", "    if n == 1 or n == 2 then\n        return\
    \ 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "  return\
    \ n < 2 and n or fib(n - 1) + fib(n - 2)\nend", "  local a, b = 0, 1\n  while\
    \ n > 0 do\n    a, b = b, a + b\n    n = n - 1\n  end\n  return a\nend", "  if\
    \ n == 1 or n == 2 then\n    return 1\n  else\n    return fib(n - 1) + fib(n -\
    \ 2)\n  end\nend", "    local x, y = 0, 1\n    for i = 1, n do\n        x, y =\
    \ y, x + y\n    end\n    return x\nend", "    if n == 1 or n == 2 then\n     \
    \   return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend",
  "    return fibs[n]\nend", "    if n == 1 or n == 2 then\n        return 1\n   \
    \ else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "    if n <= 1\
    \ then\n        return n\n    else\n        return fib(n - 1) + fib(n - 2)\n \
    \   end\nend", "  local a, b = 0, 1\n  for i = 1, n do\n    a, b = b, a + b\n\
    \  end\n  return a\nend", "  local n1, n2 = 1, 1\n  for i = 3, n do\n    n1, n2\
    \ = n2, n1 + n2\n  end\n  return n2\nend", "  if n <= 1 then\n    return n\n \
    \ else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "    if n == 1 or n ==\
    \ 2 then\n        return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n\
    \    end\nend", "\tif n < 2 then\n\t\treturn n\n\tend\n\treturn fib(n - 1) + fib(n\
    \ - 2)\nend", "  local a, b = 0, 1\n  for i = 1, n - 1 do\n    a, b = b, a + b\n\
    \  end\n  return b\nend", "  if n == 1 or n == 2 then\n    return 1\n  else\n\
    \    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n == 1 or n == 2 then\n\
    \    return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if\
    \ n == 1 or n == 2 then\n    return 1\n  else\n    return fib(n - 1) + fib(n -\
    \ 2)\n  end\nend", "    return (\n        n < 2 and n or\n        (fib(n - 1)\
    \ + fib(n - 2))\n    )\nend", "    if n == 1 or n == 2 then\n        return 1\n\
    \    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "\tlocal a,\
    \ b = 0, 1\n\tfor i = 1, n do\n\t\ta, b = b, a + b\n\tend\n\treturn a\nend", " \
    \ if n <= 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n \
    \ end\nend", "    return n < 2 and n or fib(n - 1) + fib(n - 2)\nend", "    if\
    \ n <= 2 then\n        return 1\n    else\n        return fib(n - 1) + fib(n -\
    \ 2)\n    end\nend", "    local last = 0\n    local current = 1\n    for i = 1,\
    \ n do\n        local next = last + current\n        last = current\n        current\
    \ = next\n    end\n    return current\nend", "  return n == 0 and 0 or n == 1\
    \ and 1 or fib(n - 1) + fib(n - 2)\nend", "  if n == 1 or n == 2 then\n    return\
    \ 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "    if n < 2 then\n\
    \        return n\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\n\
    end", "    if n == 1 or n == 2 then\n        return 1\n    else\n        return\
    \ fib(n - 1) + fib(n - 2)\n    end\nend", "  if n == 1 or n == 2 then\n    return\
    \ 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "    if n < 2 then\n\
    \        return n\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\n\
    end", "    if n <= 1 then\n        return n\n    else\n        return fib(n -\
    \ 1) + fib(n - 2)\n    end\nend", "  if n < 2 then\n    return n\n  else\n   \
    \ return fib(n - 1) + fib(n - 2)\n  end\nend", "    if n == 1 or n == 2 then\n\
    \        return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\n\
    end", "  if n == 1 or n == 2 then\n    return 1\n  else\n    return fib(n - 1)\
    \ + fib(n - 2)\n  end\nend", "\tif n == 1 or n == 2 then\n\t\treturn 1\n\telse\n\
    \t\treturn fib(n-1) + fib(n-2)\n\tend\nend", "  return (n == 0 or n == 1) and\
    \ 1 or fib(n - 1) + fib(n - 2)\nend", "    if n <= 1 then\n        return n\n\
    \    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "  local a,\
    \ b = 0, 1\n  for i = 1, n do\n    a, b = b, a + b\n  end\n  return a\nend", " \
    \ return (n == 0 or n == 1) and 1 or fib(n - 1) + fib(n - 2)\nend", "\tif n <\
    \ 3 then\n\t\treturn 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\tend\nend", " \
    \ local a, b = 0, 1\n  for i = 1, n do\n    a, b = b, a + b\n  end\n  return a\n\
    end", "\tlocal a, b = 0, 1\n\tfor i = 1, n do\n\t\ta, b = b, a + b\n\tend\n\t\
    return a\nend", "    if n < 1 then\n        return 0\n    elseif n == 1 then\n\
    \        return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\n\
    end", "\tlocal index, left, right = 1, 1, 1\n\twhile index < n do\n\t\tleft, right\
    \ = right, left + right\n\t\tindex = index + 1\n\tend\n\treturn left\nend", "\t\
    if n == 1 or n == 2 then\n\t\treturn 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\
    \tend\nend", "  local first, second = 1, 1\n  for i = 3, n do\n    first, second\
    \ = second, first + second\n  end\n  return second\nend", "    if n == 1 or n\
    \ == 2 then\n        return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n\
    \    end\nend", "    if n < 2 then\n        return n\n    else\n        return\
    \ fib(n - 1) + fib(n - 2)\n    end\nend", "  if n < 2 then\n    return n\n  else\n\
    \    return fib(n - 1) + fib(n - 2)\n  end\nend", "\tlocal a, b = 0, 1\n\tfor\
    \ i = 1, n do\n\t\ta, b = b, a + b\n\tend\n\treturn a\nend", "  local a, b = 0,\
    \ 1\n  for i = 2, n do\n    a, b = b, a + b\n  end\n  return b\nend", "\tif n\
    \ == 1 or n == 2 then\n\t\treturn 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\t\
    end\nend", "  if n < 2 then\n    return n\n  else\n    return fib(n - 1) + fib(n\
    \ - 2)\n  end\nend", "  local a, b = 0, 1\n  for i = 1, n do\n    a, b = b, a\
    \ + b\n  end\n  return a\nend", "    if n == 1 or n == 2 then\n        return\
    \ 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "    local\
    \ pre, cur = 0, 1\n    for i = 1, n do\n        pre, cur = cur, pre + cur\n  \
    \  end\n    return cur\nend", "\tlocal i = 1\n\tlocal r = 0\n\twhile n > 0 do\n\
    \t\tn = n - 1\n\t\tlocal t = r\n\t\tr = r + i\n\t\ti = t\n\tend\n\treturn r\n\
    end", "  if n <= 2 then\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n\
    \  end\nend", "    if n < 3 then\n        return 1\n    else\n        return fib(n\
    \ - 1) + fib(n - 2)\n    end\nend", "    local prev, curr = 0, 1\n    for i =\
    \ 1, n do\n        prev, curr = curr, prev + curr\n    end\n    return curr\n\
    end", "  if n == 1 or n == 2 then\n    return 1\n  else\n    return fib(n-1) +\
    \ fib(n-2)\n  end\nend", "    local a, b = 0, 1\n    for i = 2, n do\n       \
    \ a, b = b, a + b\n    end\n    return b\nend", "  assert(type(n) == \"number\"\
    , \"n must be number\")\n  assert(n >= 0, \"n must be positive number\")\n  local\
    \ prev_fib, fib = 0, 1\n  for i = 2, n do\n    prev_fib, fib = fib, prev_fib +\
    \ fib\n  end\n  return fib\nend", "  if n < 2 then\n    return n\n  else\n   \
    \ return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 1 then\n    return nil\n\
    \  elseif n == 1 then\n    return 1\n  elseif n == 2 then\n    return 1\n  else\n\
    \    return fib(n-1) + fib(n-2)\n  end\nend", "\tif n <= 1 then\n\t\treturn n\n\
    \tend\n\treturn fib(n - 1) + fib(n - 2)\nend", "    if n < 2 then\n        return\
    \ n\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "  if n\
    \ < 2 then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\n\
    end", "  if n < 1 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n\
    \    return fib(n - 1) + fib(n - 2)\n  end\nend", "    if n == 1 or n == 2 then\n\
    \        return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\n\
    end", "    if n == 1 or n == 2 then\n        return 1\n    else\n        return\
    \ fib(n - 1) + fib(n - 2)\n    end\nend", "    return n == 0 and 0 or n == 1 and\
    \ 1 or fib(n - 1) + fib(n - 2)\nend", "    if n == 1 or n == 2 then\n        return\
    \ 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "  if n\
    \ <= 2 then\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend",
  "    if n == 1 or n == 2 then\n        return 1\n    else\n        return fib(n\
    \ - 1) + fib(n - 2)\n    end\nend", "  local pre = 0\n  local cur = 1\n  local\
    \ temp\n  while n > 0 do\n    temp = cur\n    cur = cur + pre\n    pre = temp\n\
    \    n = n - 1\n  end\n  return pre\nend", "    if n <= 2 then\n        return\
    \ 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "    local\
    \ a, b = 0, 1\n    while n > 0 do\n        a, b = b, a + b\n        n = n - 1\n\
    \    end\n    return a\nend", "  if n == 1 or n == 2 then\n    return 1\n  else\n\
    \    return fib(n - 1) + fib(n - 2)\n  end\nend", "    return n < 2 and n or fib(n\
    \ - 1) + fib(n - 2)\nend", "  if n == 1 or n == 2 then\n    return 1\n  else\n\
    \    return fib(n - 1) + fib(n - 2)\n  end\nend", "\tif n < 2 then\n\t\treturn\
    \ n\n\tend\n\tlocal prev = 1\n\tlocal curr = 1\n\tfor i = 3, n do\n\t\tlocal old_prev\
    \ = prev\n\t\tprev = curr\n\t\tcurr = old_prev + curr\n\tend\n\treturn curr\n\
    end", "    if n == 1 or n == 2 then\n        return 1\n    else\n        return\
    \ fib(n - 1) + fib(n - 2)\n    end\nend", "    if n < 2 then\n        return n\n\
    \    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "    local a,\
    \ b = 0, 1\n    for i = 1, n do\n        a, b = b, a + b\n    end\n    return\
    \ a\nend", "  if n <= 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n\
    \ - 2)\n  end\nend", "  local a, b = 0, 1\n  for i = 1, n do\n    a, b = b, a\
    \ + b\n  end\n  return a\nend", "    if n == 1 or n == 2 then\n        return\
    \ 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "    if\
    \ n <= 1 then\n        return n\n    else\n        return fib(n - 1) + fib(n -\
    \ 2)\n    end\nend", "    local n1, n2 = 1, 1\n    for i = 3, n do\n        n1,\
    \ n2 = n2, n1 + n2\n    end\n    return n2\nend", "  local memo = {[0] = 0, [1]\
    \ = 1}\n  local function fibonacci(n)\n    if not memo[n] then\n      memo[n]\
    \ = fibonacci(n - 1) + fibonacci(n - 2)\n    end\n    return memo[n]\n  end\n\
    \  return fibonacci(n)\nend", "    local a, b = 0, 1\n    for i = 1, n do\n  \
    \      a, b = b, a + b\n    end\n    return a\nend", "    if n == 1 or n == 2\
    \ then\n        return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n \
    \   end\nend", "    if n == 1 or n == 2 then\n        return 1\n    else\n   \
    \     return fib(n - 1) + fib(n - 2)\n    end\nend", "    return n == 0 and 0\
    \ or n == 1 and 1 or fib(n - 1) + fib(n - 2)\nend", "    if n == 1 or n == 2 then\n\
    \        return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\n\
    end", "  if n <= 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n -\
    \ 2)\n  end\nend", "    if n < 2 then\n        return n\n    else\n        return\
    \ fib(n - 1) + fib(n - 2)\n    end\nend", "  if n == 1 or n == 2 then\n    return\
    \ 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "    if n <= 2 then\n\
    \        return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\n\
    end", "  if n <= 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n -\
    \ 2)\n  end\nend", "    local a, b = 0, 1\n    while n > 0 do\n        a, b =\
    \ b, a + b\n        n = n - 1\n    end\n    return a\nend", "    if n <= 1 then\n\
    \        return n\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\n\
    end", "\tif n <= 2 then\n\t\treturn 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\
    \tend\nend", "    local a, b = 0, 1\n    for i = 1, n do\n        a, b = b, a\
    \ + b\n    end\n    return a\nend", "    if n <= 1 then\n        return n\n  \
    \  else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "\tif n == 1 or\
    \ n == 2 then\n\t\treturn 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\tend\nend",
  "  if n == 1 or n == 2 then\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n\
    \  end\nend", "  local a, b = 0, 1\n  while n > 0 do\n    a, b = b, a + b\n  \
    \  n = n - 1\n  end\n  return a\nend", "  return n < 2 and n or fib(n - 1) + fib(n\
    \ - 2)\nend", "  local a, b = 0, 1\n  for i = 2, n do\n    a, b = b, a + b\n \
    \ end\n  return b\nend", "  if n == 1 or n == 2 then\n    return 1\n  else\n \
    \   return fib(n-1) + fib(n-2)\n  end\nend", "    local a, b = 0, 1\n    for i\
    \ = 2, n do\n        a, b = b, a + b\n    end\n    return b\nend", "  if n <=\
    \ 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

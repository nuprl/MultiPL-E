name: HumanEval_102_choose_num
language: lua
prompt: "-- This function takes two positive numbers x and y and returns the\n-- biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n-- there's no\
  \ such number, then the function should return -1.\n-- For example:\n-- >>> choose_num(12,\
  \ 15)\n-- 14\n-- >>> choose_num(13, 12)\n-- -1\nlocal function choose_num(x, y)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = choose_num\n\
  \    lu.assertEquals(candidate(12, 15), 14)\n    lu.assertEquals(candidate(13, 12),\
  \ -1)\n    lu.assertEquals(candidate(33, 12354), 12354)\n    lu.assertEquals(candidate(5234,\
  \ 5233), -1)\n    lu.assertEquals(candidate(6, 29), 28)\n    lu.assertEquals(candidate(27,\
  \ 10), -1)\n    lu.assertEquals(candidate(7, 7), -1)\n    lu.assertEquals(candidate(546,\
  \ 546), 546)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    ...\nend", "  if x % 2 == 0 then\n    return x\n  elseif y % 2\
    \ == 0 then\n    return y\n  else\n    return -1\n  end\nend", "    -- Write your\
    \ code here\nend", "\tif x > y then\n\t\treturn -1\n\tend\n\tif x % 2 == 0 then\n\
    \t\treturn x\n\tend\n\treturn choose_num(x + 1, y)\nend", "    assert(type(x)\
    \ == \"number\" and type(y) == \"number\" and x > 0 and y > 0)\n    if x > y then\
    \ return -1 end\n    if x % 2 == 0 then\n        return x\n    else\n        return\
    \ choose_num(x + 1, y)\n    end\nend", "    local res = 0\n    local flag = false\n\
    \    if (y >= x) then\n        if ((x % 2) == 0) then\n            res = x\n \
    \           flag = true\n        else\n            res = x + 1\n            flag\
    \ = true\n        end\n    end\n    local num = x + 2\n    while (num <= y) do\n\
    \        res = num\n        flag = true\n        num = num + 2\n    end\n    if\
    \ (flag) then\n        return res\n    else\n        return -1\n    end\nend",
  "    -- Implement this function.\n    local z = math.min(x, y)\n    if z % 2 ==\
    \ 0 then\n        return z\n    else\n        return z - 1\n    end\nend", " \
    \   if x < y then\n        if y % 2 == 0 then\n            return y\n        else\n\
    \            if x % 2 == 0 then\n                return x\n            else\n\
    \                return -1\n            end\n        end\n    else\n        if\
    \ x % 2 == 0 then\n            return x\n        else\n            if y % 2 ==\
    \ 0 then\n                return y\n            else\n                return -1\n\
    \            end\n        end\n    end\nend", "    -- TODO: Write your code here\n\
    \    if x > y then\n        return -1\n    end\n    for i = y, x, -1 do\n    \
    \    if i % 2 == 0 then\n            return i\n        end\n    end\n    return\
    \ -1\nend", "    -- Replace the line below with the code from the exercise\n \
    \   if x % 2 == 0 then\n        return x\n    elseif y % 2 == 0 then\n       \
    \ return y\n    else\n        return -1\n    end\nend", '    local result = -1',
  "    local even = 0\n    local odd = 0\n    local i = x\n    while i <= y do\n \
    \       if i % 2 == 0 then\n            even = i\n        else\n            odd\
    \ = i\n        end\n        i = i + 1\n    end\n    if even == 0 then\n      \
    \  return -1\n    else\n        return even\n    end\nend", "    if x % 2 == 0\
    \ then\n        return x\n    elseif x + 1 <= y then\n        return x + 1\n \
    \   else\n        return -1\n    end\nend", "\tif x > y then return -1 end\n\t\
    local biggest = 0\n\tfor i = x, y do\n\t\tif biggest < i and i % 2 == 0 then\n\
    \t\t\tbiggest = i\n\t\tend\n\tend\n\tif biggest == 0 then return -1 end\n\treturn\
    \ biggest\nend", "    local num = x\n    if (x % 2 == 1) then\n        num = x\
    \ + 1\n    end\n    for i = num, y, 2 do\n        if (i <= y) then\n         \
    \   return i\n        end\n    end\n    return -1\nend", "   local max_num = -1\n\
    \   if x > y then\n      return -1\n   end\n   for i = x, y do\n      if i % 2\
    \ == 0 then\n         max_num = i\n      end\n   end\n   return max_num\nend",
  "\tassert(x >= 0 and y >= 0)", "    -- TODO: Implement this function.\nend", " \
    \   -- Your code here.\nend", "\tlocal number = -1\n\tif (x > y) then\n\t\treturn\
    \ -1\n\tend\n\tfor i = x, y do\n\t\tif (i % 2 == 0) then\n\t\t\tnumber = i\n\t\
    \tend\n\tend\n\treturn number\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

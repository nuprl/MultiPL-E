name: HumanEval_102_choose_num
language: lua
prompt: "-- This function takes two positive numbers x and y and returns the\n-- biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n-- there's no\
  \ such number, then the function should return -1.\n-- For example:\n-- >>> choose_num(12,\
  \ 15)\n-- 14\n-- >>> choose_num(13, 12)\n-- -1\nlocal function choose_num(x, y)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = choose_num\n\
  \    lu.assertEquals(candidate(12, 15), 14)\n    lu.assertEquals(candidate(13, 12),\
  \ -1)\n    lu.assertEquals(candidate(33, 12354), 12354)\n    lu.assertEquals(candidate(5234,\
  \ 5233), -1)\n    lu.assertEquals(candidate(6, 29), 28)\n    lu.assertEquals(candidate(27,\
  \ 10), -1)\n    lu.assertEquals(candidate(7, 7), -1)\n    lu.assertEquals(candidate(546,\
  \ 546), 546)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    ...\nend", "  if x % 2 == 0 then\n    return x\n  elseif y % 2\
    \ == 0 then\n    return y\n  else\n    return -1\n  end\nend", "    -- Write your\
    \ code here\nend", "\tif x > y then\n\t\treturn -1\n\tend\n\tif x % 2 == 0 then\n\
    \t\treturn x\n\tend\n\treturn choose_num(x + 1, y)\nend", "    assert(type(x)\
    \ == \"number\" and type(y) == \"number\" and x > 0 and y > 0)\n    if x > y then\
    \ return -1 end\n    if x % 2 == 0 then\n        return x\n    else\n        return\
    \ choose_num(x + 1, y)\n    end\nend", "    local res = 0\n    local flag = false\n\
    \    if (y >= x) then\n        if ((x % 2) == 0) then\n            res = x\n \
    \           flag = true\n        else\n            res = x + 1\n            flag\
    \ = true\n        end\n    end\n    local num = x + 2\n    while (num <= y) do\n\
    \        res = num\n        flag = true\n        num = num + 2\n    end\n    if\
    \ (flag) then\n        return res\n    else\n        return -1\n    end\nend",
  "    -- Implement this function.\n    local z = math.min(x, y)\n    if z % 2 ==\
    \ 0 then\n        return z\n    else\n        return z - 1\n    end\nend", " \
    \   if x < y then\n        if y % 2 == 0 then\n            return y\n        else\n\
    \            if x % 2 == 0 then\n                return x\n            else\n\
    \                return -1\n            end\n        end\n    else\n        if\
    \ x % 2 == 0 then\n            return x\n        else\n            if y % 2 ==\
    \ 0 then\n                return y\n            else\n                return -1\n\
    \            end\n        end\n    end\nend", "    -- TODO: Write your code here\n\
    \    if x > y then\n        return -1\n    end\n    for i = y, x, -1 do\n    \
    \    if i % 2 == 0 then\n            return i\n        end\n    end\n    return\
    \ -1\nend", "    -- Replace the line below with the code from the exercise\n \
    \   if x % 2 == 0 then\n        return x\n    elseif y % 2 == 0 then\n       \
    \ return y\n    else\n        return -1\n    end\nend", '    local result = -1',
  "    local even = 0\n    local odd = 0\n    local i = x\n    while i <= y do\n \
    \       if i % 2 == 0 then\n            even = i\n        else\n            odd\
    \ = i\n        end\n        i = i + 1\n    end\n    if even == 0 then\n      \
    \  return -1\n    else\n        return even\n    end\nend", "    if x % 2 == 0\
    \ then\n        return x\n    elseif x + 1 <= y then\n        return x + 1\n \
    \   else\n        return -1\n    end\nend", "\tif x > y then return -1 end\n\t\
    local biggest = 0\n\tfor i = x, y do\n\t\tif biggest < i and i % 2 == 0 then\n\
    \t\t\tbiggest = i\n\t\tend\n\tend\n\tif biggest == 0 then return -1 end\n\treturn\
    \ biggest\nend", "    local num = x\n    if (x % 2 == 1) then\n        num = x\
    \ + 1\n    end\n    for i = num, y, 2 do\n        if (i <= y) then\n         \
    \   return i\n        end\n    end\n    return -1\nend", "   local max_num = -1\n\
    \   if x > y then\n      return -1\n   end\n   for i = x, y do\n      if i % 2\
    \ == 0 then\n         max_num = i\n      end\n   end\n   return max_num\nend",
  "\tassert(x >= 0 and y >= 0)", "    -- TODO: Implement this function.\nend", " \
    \   -- Your code here.\nend", "\tlocal number = -1\n\tif (x > y) then\n\t\treturn\
    \ -1\n\tend\n\tfor i = x, y do\n\t\tif (i % 2 == 0) then\n\t\t\tnumber = i\n\t\
    \tend\n\tend\n\treturn number\nend", '    local result = -1', "\tlocal n = x",
  "  -- your code goes here\nend", "   if x < y then\n      local temp = x\n     \
    \ x = y\n      y = temp\n   end\n   for i = x, y, -1 do\n      if i % 2 == 0 then\n\
    \         return i\n      end\n   end\n   return -1\nend", "\tif x % 2 == 0 then\n\
    \t\treturn x\n\telseif x + 1 == y then\n\t\treturn -1\n\telse\n\t\treturn choose_num(x\
    \ + 1, y)\n\tend\nend", "\t-- Iterate from the lower number to the higher number.\
    \ If a number\n\t-- is even, return it, otherwise return -1.\n\tfor i = x, y do\n\
    \t\tif i % 2 == 0 then\n\t\t\treturn i\n\t\tend\n\tend\n\treturn -1\nend", " \
    \ for i = y, x, -1 do\n    if i % 2 == 0 then\n      return i\n    end\n  end\n\
    \  return -1\nend", "    assert(x > 0 and y > 0, \"ERROR: wrong input: x and y\
    \ must be positive numbers\")\n    if x > y then\n        return -1\n    end\n\
    \    if x % 2 == 0 then\n        return x\n    end\n    return choose_num(x +\
    \ 1, y)\nend", "  -- your code goes here\n  if x % 2 == 0 then\n    return x\n\
    \  else\n    if x + 1 > y then\n      return -1\n    else\n      return x + 1\n\
    \    end\n  end\nend", "\tlocal n = y % 2 == 0 and y or y - 1\n\tfor i = n, x,\
    \ -2 do\n\t\treturn i\n\tend\n\treturn -1\nend", end, "\t-- TODO: write code here\n\
    end", "\tlocal i = y\n\tif x > y then return -1 end", "    if x > y then\n   \
    \     return -1\n    end\n    if x % 2 == 0 then\n        return x\n    end\n\
    \    return choose_num(x + 1, y)\nend", "    assert(x > 0 and y > 0, 'x and y\
    \ must be positive integers.')\n    if x > y then \n        return -1\n    else\n\
    \        if x % 2 == 0 then\n            return x\n        else\n            return\
    \ x + 1\n        end\n    end\nend", "    local num = math.floor(x / 2) * 2\n\
    \    while num <= y do\n        if num % 2 == 0 then\n            return num\n\
    \        end\n        num = num + 1\n    end\n    return -1\nend", "\tif (x %\
    \ 2 == 0 and x <= y) then\n\t\treturn x\n\telseif (x < y) then\n\t\treturn choose_num(x\
    \ + 1, y)\n\telse\n\t\treturn -1\n\tend\nend", "\tif x % 2 == 0 then\n\t\tif x\
    \ == y then\n\t\t\treturn x\n\t\telse\n\t\t\treturn choose_num(x + 2, y)\n\t\t\
    end\n\telse\n\t\tif x + 1 == y then\n\t\t\treturn -1\n\t\telse\n\t\t\treturn choose_num(x\
    \ + 1, y)\n\t\tend\n\tend\nend", "   local big_even = -1\n   for i = x, y do\n\
    \      if i % 2 == 0 and i > big_even then\n         big_even = i\n      end\n\
    \   end\n   return big_even\nend", "\tlocal even_num = -1\n\tlocal max_num = -1\n\
    \tif (x > y) then\n\t\treturn -1\n\tend\n\tif (x%2 == 0) then\n\t\tmax_num = x\n\
    \telse\n\t\tmax_num = x+1\n\tend\n\tfor i = max_num, y, 2 do\n\t\teven_num = i\n\
    \tend\n\treturn even_num\nend", "    -- TODO: complete this function\n    while\
    \ x < y do\n        if x % 2 == 0 then\n            return x\n        end\n  \
    \      x = x + 1\n    end\n    return -1\nend", "    if x % 2 == 0 then\n    \
    \    return x\n    elseif x + 1 == y then\n        return -1\n    else\n     \
    \   return choose_num(x + 1, y)\n    end\nend", "    --  if (x - y) % 2 == 0 then\n\
    \    --     return x\n    -- else\n    --     return x + 1\n    -- end\n    local\
    \ num = x\n    while num <= y do\n        if num % 2 == 0 then\n            return\
    \ num\n        end\n        num = num + 1\n    end\n    return -1\nend", "\tlocal\
    \ i\n\tif x > y then\n\t\ti = y\n\telse\n\t\ti = x\n\tend\n\twhile i <= y do\n\
    \t\tif i % 2 == 0 then\n\t\t\treturn i\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn\
    \ -1\nend", "    local n = x\n    while n <= y do\n        if n % 2 == 0 then\n\
    \            return n\n        end\n        n = n + 1\n    end\n    return -1\n\
    end", "    return ((x + y) / 2)\nend", "  if (x % 2 == 0) then\n    return x\n\
    \  elseif (y % 2 == 0) then\n    return y\n  else\n    return -1\n  end\nend",
  "\tfor i = y, x, -1 do\n\t\tif(i % 2 == 0) then\n\t\t\treturn i\n\t\tend\n\tend\n\
    \treturn -1\nend", "    local num = -1\n    if x % 2 == 0 then\n        num =\
    \ x\n    else\n        num = x + 1\n    end\n    while num <= y do\n        return\
    \ num\n    end\n    return -1\nend", "\tfor i = x, y do\n\t\tif i % 2 == 0 then\n\
    \t\t\treturn i\n\t\tend\n\tend\n\treturn -1\nend", "\tlocal r = math.max(x, y)\n\
    \tif r % 2 == 0 then\n\t\treturn r\n\telse\n\t\tif math.abs(x - y) == 1 then\n\
    \t\t\treturn -1\n\t\telse\n\t\t\treturn choose_num(x, y - 1)\n\t\tend\n\tend\n\
    end", "    if x % 2 == 0 then\n        return x\n    elseif x + 1 > y then\n \
    \       return -1\n    else\n        return choose_num(x + 1, y)\n    end\nend",
  "    -- this is a stub\n    return -1\nend", "    -- ...\nend", "    if (x % 2 ==\
    \ 0) and x >= y then\n        return x\n    elseif (x % 2 == 0) and x < y then\n\
    \        return choose_num(x + 2, y)\n    elseif (x % 2 == 1) and x >= y then\n\
    \        return -1\n    elseif (x % 2 == 1) and x < y then\n        return choose_num(x\
    \ + 1, y)\n    end\nend", "    for i = y, x, -1 do\n        if (i % 2 == 0) then\n\
    \            return i\n        end\n    end\n    return -1\nend", '    local max
    = 0', "    local min = math.min(x, y)\n    local max = math.max(x, y)\n    local\
    \ closest = -1\n    for i = min, max do\n        if i % 2 == 0 then\n        \
    \    closest = i\n        end\n    end\n    return closest\nend", "    -- STUDENT\
    \ CODE START\n    -- Since there are only 3 numbers between 12 and 15, we don't\
    \ need\n    -- a for loop here.\n    if (x == 12 and y == 15) then\n        return\
    \ 14\n    end\n    -- STUDENT CODE END\n    return -1\nend", "    -- your code\
    \ here\n    return -1\nend", "\tif (x > y) then\n\t\treturn -1\n\tend\n\tif (x\
    \ % 2 == 0) then\n\t\treturn x\n\tend\n\treturn choose_num(x + 1, y)\nend", " \
    \   if (x % 2 == 0) then\n        return x\n    elseif (y % 2 == 0) then\n   \
    \     return y\n    else\n        return -1\n    end\nend", "    if(x <= y) then\n\
    \        if(y % 2 == 0) then\n            return y\n        else\n           \
    \ return choose_num(x, y - 1)\n        end\n    else\n        return -1\n    end\n\
    end", "\tif y % 2 == 0 then\n\t\treturn y\n\telseif y - 1 == x then\n\t\treturn\
    \ -1\n\telse\n\t\treturn choose_num(x, y - 1)\n\tend\nend", "  local max = -1\n\
    \  for i = x, y do\n    if i % 2 == 0 and i > max then\n      max = i\n    end\n\
    \  end\n  return max\nend", "    if x % 2 == 0 then\n        return y % 2 == 0\
    \ and y or y - 1\n    elseif y % 2 == 0 then\n        return x\n    else\n   \
    \     return -1\n    end\nend", "  local my_max = -1\n  for i = x, y do\n    if\
    \ i % 2 == 0 and i > my_max then\n      my_max = i\n    end\n  end\n  return my_max\n\
    end", "    x = x - x % 2\n    y = y - y % 2 + 1\n    if y < x then\n        return\
    \ -1\n    end\n    return x\nend", "  local max_num = -1\n  for i = x, y do\n\
    \    if i % 2 == 0 and i > max_num then\n      max_num = i\n    end\n  end\n \
    \ return max_num\nend", "\tif x > y then\n\t\treturn -1\n\tend\n\tif x % 2 ==\
    \ 0 then\n\t\treturn x\n\tend\n\tif y % 2 == 0 then\n\t\treturn y\n\tend\n\treturn\
    \ -1\nend", "    local val = -1\n    for i = x, y do\n        if i % 2 == 0 then\n\
    \            val = i\n        end\n    end\n    return val\nend", "    local biggest\
    \ = -1\n    for i = x, y do\n        if i % 2 == 0 and i > biggest then\n    \
    \        biggest = i\n        end\n    end\n    return biggest\nend", "   return\
    \ nil\nend", "  -- TODO: Write your code here\n  for i = x, y do\n    if (i %\
    \ 2 == 0) then\n      return i\n    end\n  end\n  return -1\nend", "    local\
    \ i = x\n    local chosen = -1\n    while i <= y do\n        if i % 2 == 0 then\n\
    \            chosen = i\n        end\n        i = i + 1\n    end\n    return chosen\n\
    end", "  -- check for invalid numbers\n  assert(x and y, \"invalid args\")\n \
    \ assert(x > 0 and y > 0, \"invalid args\")\n  assert(x <= y, \"invalid args\"\
    )", "    if y - x == 1 then\n        return -1\n    elseif y % 2 == 0 then\n \
    \       return y\n    else\n        return y - 1\n    end\nend", "  if (x % 2\
    \ == 0) then\n    return x\n  elseif (y % 2 == 0) then\n    return y\n  elseif\
    \ (x % 2 == 0 and y % 2 == 0) then\n    return y\n  elseif (x > y) then\n    return\
    \ -1\n  else\n    return x + 1\n  end\nend", "  local z = x\n  while z <= y do\n\
    \    if z % 2 == 0 then\n      return z\n    end\n    z = z + 1\n  end\n  return\
    \ -1\nend", "\tlocal x = x % 2 == 0 and x or x + 1\n\tlocal y = y % 2 == 0 and\
    \ y or y - 1\n\tlocal i = x\n\twhile i <= y do\n\t\tif i % 2 == 0 then\n\t\t\t\
    return i\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn -1\nend", "  -- your code here\n\
    \  if x % 2 == 0 then\n    return x\n  elseif x % 2 == 1 and x < y then\n    return\
    \ choose_num(x + 1, y)\n  else\n    return -1\n  end\nend", "    local maxnum\
    \ = -1\n    for i = x, y do\n        if i % 2 == 0 and i > maxnum then\n     \
    \       maxnum = i\n        end\n    end\n    return maxnum\nend", "    error(\"\
    Not yet implemented\")\nend", "    for i = y, x, -1 do\n        if i % 2 == 0\
    \ then\n            return i\n        end\n    end\n    return -1\nend", "   \
    \ if x % 2 == 0 then\n        if x >= y then\n            return x\n        else\n\
    \            return choose_num(x + 2, y)\n        end\n    else\n        return\
    \ choose_num(x + 1, y)\n    end\nend", "    -- WRITE YOUR CODE HERE\nend", end,
  "\tlocal big_even = -1\n\tfor i = x, y do\n\t\tif i % 2 == 0 and i > big_even then\n\
    \t\t\tbig_even = i\n\t\tend\n\tend\n\treturn big_even\nend", "  if (y <= x) then\
    \ return -1 end\n  if (x % 2 == 0) then x = x + 1 end\n  return x + (y - x) /\
    \ 2\nend", "   -- ADD YOUR CODE HERE\n   local even_num = 0\n   local largest_even\
    \ = -1\n   for i = x, y do\n      if i % 2 == 0 then\n         even_num = i\n\
    \         if even_num > largest_even then\n            largest_even = even_num\n\
    \         end\n      end\n   end\n   return largest_even\nend", "    local num\n\
    \    if (x % 2 == 0) then\n        num = x\n    else\n        num = x + 1\n  \
    \  end\n    if (num <= y) then\n        return num\n    else\n        return -1\n\
    \    end\nend", "    if y % 2 == 0 then\n        return y\n    elseif x % 2 ==\
    \ 0 then\n        return x\n    else\n        return -1\n    end\nend", "    return\
    \ -1\nend", "    if x % 2 == 0 then\n        if x >= y then\n            return\
    \ x\n        else\n            return choose_num(x + 2, y)\n        end\n    else\n\
    \        return choose_num(x + 1, y)\n    end\nend", "   -- Write your code here\n\
    end", "  local max, cur\n  if x > y then\n    max = x\n    cur = y\n  else\n \
    \   max = y\n    cur = x\n  end\n  local function get_even(x)\n    if x%2 == 0\
    \ then\n      return x\n    else\n      return x-1\n    end\n  end\n  for i =\
    \ get_even(max), get_even(cur), -2 do\n    if i >= cur then\n      return i\n\
    \    end\n  end\n  return -1\nend", "    if x > y then\n        return -1\n  \
    \  end\n    local num = y\n    while num >= x do\n        if num % 2 == 0 then\n\
    \            return num\n        end\n        num = num - 1\n    end\n    return\
    \ -1\nend", "\tlocal i = math.max(x, y)", "    if x % 2 == 0 then\n        x =\
    \ x\n    else\n        x = x + 1\n    end\n    for i = x, y, 2 do\n        if\
    \ i % 2 == 0 then\n            return i\n        end\n    end\n    return -1\n\
    end", "\tif x%2 == 0 then\n\t\tif x>y then\n\t\t\treturn -1\n\t\telseif x==y then\n\
    \t\t\treturn x\n\t\telse\n\t\t\treturn choose_num(x+2, y)\n\t\tend\n\telse\n\t\
    \treturn choose_num(x+1, y)\n\tend\nend", "    if x % 2 == 0 then\n        if\
    \ x <= y then\n            return x\n        elseif y % 2 == 0 then\n        \
    \    return y\n        else\n            return -1\n        end\n    elseif x\
    \ + 1 <= y then\n        return x + 1\n    elseif y % 2 == 0 then\n        return\
    \ y\n    else\n        return -1\n    end\nend", "    --if x % 2 == 0 then\n \
    \   --    return x\n    --elseif x == y and x % 2 == 1 then\n    --    return\
    \ -1\n    --else\n    --    return choose_num(x + 1, y)\n    --end\n    for n\
    \ = y, x, -1 do\n        if n % 2 == 0 then\n            return n\n        end\n\
    \    end\n    return -1\nend", "    local max\n    if (x > y) then\n        max\
    \ = x\n    else\n        max = y\n    end\n    if (max % 2 == 0) then\n      \
    \  return max\n    else\n        max = max - 1\n        if (max % 2 == 0) then\n\
    \            return max\n        else\n            return -1\n        end\n  \
    \  end\nend", "  local z = 0\n  for i = x, y do\n    if i % 2 == 0 then\n    \
    \  z = i\n    end\n  end\n  if z == 0 then\n    return -1\n  else\n    return\
    \ z\n  end\nend", end, "    local nums = {x, y}\n    local function is_even(num)\n\
    \        return num % 2 == 0\n    end\n    local function is_biggest(num)\n  \
    \      return num == math.max(table.unpack(nums))\n    end\n    local function\
    \ is_valid(num)\n        return is_even(num) and is_biggest(num)\n    end\n  \
    \  local even_nums = filter(is_even, nums)\n    local biggest_even_num = foldl(math.max,\
    \ 0, even_nums)\n    if is_valid(biggest_even_num) then\n        return biggest_even_num\n\
    \    else\n        return -1\n    end\nend", "    if x > y then return -1 end\n\
    \    while y % 2 ~= 0 do y = y - 1 end\n    if x > y then return -1 end\n    return\
    \ y\nend", "    local num = -1\n    for i = x, y do\n        if i % 2 == 0 then\n\
    \            num = i\n        end\n    end\n    return num\nend", "  local res\n\
    \  if x > y then\n    return -1\n  elseif (x % 2) == 0 then\n    res = x\n  else\n\
    \    res = x + 1\n  end\n  while res <= y do\n    if (res % 2) == 0 then\n   \
    \   return res\n    end\n    res = res + 1\n  end\n  return -1\nend", "  -- Write\
    \ your code here!\n  if x%2 ~= 0 and y%2 ~= 0 then\n    return -1\n  elseif x%2\
    \ == 0 and y%2 == 0 then\n    return y\n  elseif x%2 == 0 and y%2 ~= 0 then\n\
    \    return x\n  elseif x%2 ~= 0 and y%2 == 0 then\n    return y\n  end\nend",
  end, "    if x < y then\n        x, y = y, x\n    end\n    if x % 2 == 0 then\n\
    \        return x\n    else\n        return x - 1\n    end\nend", "\tfor i = y,\
    \ x, -1 do\n\t\tif i % 2 == 0 then\n\t\t\treturn i\n\t\tend\n\tend\n\treturn -1\n\
    end", "    if (x > y) then return -1 end\n    local result = x\n    for i = x,\
    \ y do\n        if (i % 2 == 0) then\n            result = i\n        end\n  \
    \  end\n    if (result % 2 == 0) then\n        return result\n    else\n     \
    \   return -1\n    end\nend", "    local function smallest_even(x, y)\n      \
    \  if x % 2 == 0 then\n            return x\n        else\n            return\
    \ smallest_even(x + 1, y)\n        end\n    end\n    if x > y then\n        return\
    \ -1\n    else\n        return smallest_even(x, y)\n    end\nend", "    -- Write\
    \ the body of the function here\nend", end, "  if x % 2 == 0 then\n    if x ==\
    \ y then\n      return x\n    elseif x < y then\n      return choose_num(x+2,\
    \ y)\n    else\n      return -1\n    end\n  else\n    return choose_num(x+1, y)\n\
    \  end\nend", "  -- TODO: This function is required to pass Exercise 3.2.\n  --\
    \ You are free to implement it however you want.\n  if x > y then return -1\n\
    \  elseif x % 2 == 0 then return x\n  else return choose_num(x+1, y)\n  end\n\
    end", "    -- body\n    local num = -1\n    if y % 2 == 0 then\n        num =\
    \ y\n    else\n        y = y - 1\n        if y % 2 == 0 then\n            num\
    \ = y\n        end\n    end\n    return num\nend", "  if (math.mod(x, 2) == 0)\
    \ then\n    return x\n  elseif (math.mod(y, 2) == 0) then\n    return y\n  else\n\
    \    return -1\n  end\nend", "\tif x > y then\n\t\treturn -1\n\tend\n\t\n\tlocal\
    \ m = math.max(x, y)\n\tif m % 2 == 0 then\n\t\treturn m\n\telse\n\t\treturn m\
    \ - 1\n\tend\nend", "\tif x % 2 == 0 then\n\t\treturn x\n\telseif y % 2 == 0 then\n\
    \t\treturn y\n\telse\n\t\treturn -1\n\tend\nend", "\tif x >= y then\n\t\treturn\
    \ -1\n\telseif y % 2 == 0 then\n\t\treturn y\n\telse\n\t\treturn y - 1\n\tend\n\
    end", "    local num = math.floor(x)\n    while num <= y do\n        if math.fmod(num,\
    \ 2) == 0 then\n            return num\n        end\n        num = num + 1\n \
    \   end\n    return -1\nend", "   -- body\nend", "    if (x % 2 == 0) then\n \
    \       return x\n    elseif (y % 2 == 0) then\n        return y\n    else\n \
    \       return -1\n    end\nend", "    if x > y then\n        return -1\n    end\n\
    \    local i = y\n    while i >= x do\n        if i % 2 == 0 then\n          \
    \  return i\n        end\n        i = i - 1\n    end\n    return -1\nend", end,
  "  if x % 2 == 0 then\n    for i = x, y, 1 do\n      if i % 2 == 0 then\n      \
    \  return i\n      end\n    end\n  else\n    for i = x + 1, y, 1 do\n      if\
    \ i % 2 == 0 then\n        return i\n      end\n    end\n  end\n  return -1\n\
    end", "\tif (x % 2 == 0) then \n\t\treturn x\n\telseif (y % 2 == 0) then\n\t\t\
    return y\n\telse\n\t\treturn -1\n\tend\nend", "\t-- assume x is greater than y\n\
    \tlocal max = 0\n\tlocal flag = false\n\tif x%2 == 0 then\n\t\tmax = x\n\t\tflag\
    \ = true\n\tend\n\tfor i = x+1, y do\n\t\tif i%2 == 0 then\n\t\t\tflag = true\n\
    \t\t\tif i > max then\n\t\t\t\tmax = i\n\t\t\tend\n\t\tend\n\tend\n\tif flag ==\
    \ false then\n\t\treturn -1\n\telse\n\t\treturn max\n\tend\nend", "    if x %\
    \ 2 == 0 then\n        if x == y then\n            return x\n        else\n  \
    \          return choose_num(x + 2, y)\n        end\n    else\n        if x ==\
    \ y then\n            return -1\n        else\n            return choose_num(x\
    \ + 1, y)\n        end\n    end\nend", "\tlocal num = -1\n\tfor i = x, y do\n\t\
    \tif i % 2 == 0 then\n\t\t\tnum = i\n\t\tend\n\tend\n\treturn num\nend", end,
  "    if (x + 1) % 2 == 0 then\n        return x\n    elseif (y - 1) % 2 == 0 then\n\
    \        return y - 1\n    elseif x > y then\n        return -1\n    else\n  \
    \      return choose_num(x + 1, y - 1)\n    end\nend", "   local max = -1\n  \
    \ for i = x, y do\n      if i % 2 == 0 and i > max then\n         max = i\n  \
    \    end\n   end\n   return max\nend", "   -- Write your code here.\nend", "\t\
    if y < x then\n\t\treturn -1\n\tend\n\tif x % 2 == 0 then\n\t\treturn x\n\tend\n\
    \treturn choose_num(x + 1, y)\nend", "\tif x > y then\n\t\treturn -1\n\tend\n\t\
    if x % 2 == 0 then\n\t\treturn x\n\tend\n\treturn choose_num(x + 1, y)\nend",
  "  local value\n  if y % 2 == 0 then\n    value = y\n  else\n    value = y - 1\n\
    \  end\n  while x <= value do\n    if value % 2 == 0 then\n      return value\n\
    \    end\n    value = value - 1\n  end\n  return -1\nend", "    x = math.floor(x)\n\
    \    y = math.floor(y)\n    if x % 2 == 0 then\n        if x <= y then\n     \
    \       return x\n        else\n            return -1\n        end\n    else\n\
    \        if x + 1 <= y then\n            return x + 1\n        else\n        \
    \    return -1\n        end\n    end\nend", "\tif (x % 2 == 0) then\n\t\treturn\
    \ math.max(x, y)\n\telseif (y % 2 == 0) then\n\t\treturn y\n\telse\n\t\treturn\
    \ -1\n\tend\nend", "\tlocal biggest = -1\n\tfor num = x, y do\n\t\tif num % 2\
    \ == 0 and num > biggest then\n\t\t\tbiggest = num\n\t\tend\n\tend\n\treturn biggest\n\
    end", "\t-- TODO: implement this function\n\t-- Hint: You can use a while loop\
    \ in this function.\nend", "    if x % 2 == 0 then\n        return x\n    elseif\
    \ x + 1 <= y then\n        return x + 1\n    else\n        return -1\n    end\n\
    end", "  -- TODO: implement the function\n  -- assume x <= y\n  local num = y\
    \ - (y % 2)\n  if num >= x then\n    return num\n  else\n    return -1\n  end\n\
    end", "    if x % 2 == 0 then\n        return y\n    elseif y % 2 == 0 then\n\
    \        return y - 1\n    else\n        return -1\n    end\nend", "  for i =\
    \ y, x, -1 do\n    if i % 2 == 0 then\n      return i\n    end\n  end\n  return\
    \ -1\nend", "\tlocal number = -1\n\tfor i = x, y do\n\t\tif i % 2 == 0 then\n\t\
    \t\tnumber = i\n\t\tend\n\tend\n\treturn number\nend", "  local num = -1\n  for\
    \ i = x, y do\n    if i % 2 == 0 then\n      num = i\n    end\n  end\n  return\
    \ num\nend", "\tfor i = y, x, -1 do\n\t\tif i % 2 == 0 then\n\t\t\treturn i\n\t\
    \tend\n\tend\n\treturn -1\nend", end, "    -- TODO-done(8)\n    -- Write the body\
    \ of the function\n    --return 0\n    local even_nums = {}\n    for i = x, y\
    \ do\n        if i % 2 == 0 then\n            table.insert(even_nums, i)\n   \
    \     end\n    end\n    table.sort(even_nums)\n    if table.getn(even_nums) >\
    \ 0 then\n        return even_nums[table.getn(even_nums)]\n    else\n        return\
    \ -1\n    end\nend", "   if y == x then\n      if y % 2 == 0 then\n         return\
    \ y\n      else\n         return -1\n      end\n   elseif y < x then\n      return\
    \ -1\n   else\n      if y % 2 == 0 then\n         return y\n      else\n     \
    \    return choose_num(x, y - 1)\n      end\n   end\nend", "  -- FILL IN CODE\
    \ HERE\n  if x%2 == 1 then\n    x = x + 1\n  end\n  if y < x then\n    return\
    \ -1\n  end\n  return y\nend", "    if y % 2 == 0 then\n        return y\n   \
    \ elseif x % 2 == 0 then\n        return x\n    else\n        return -1\n    end\n\
    end", "    local count = x\n    while count <= y do\n        if count % 2 == 0\
    \ then\n            return count\n        end\n        count = count + 1\n   \
    \ end\n    return -1\nend", "\tlocal answer = 0\n\tif x > y then\n\t\treturn -1\n\
    \telseif x % 2 == 0 then\n\t\tanswer = x\n\telseif x + 1 <= y then\n\t\tanswer\
    \ = x + 1\n\telse\n\t\treturn -1\n\tend\n\tfor i = x + 2, y do\n\t\tif i % 2 ==\
    \ 0 then\n\t\t\tanswer = i\n\t\tend\n\tend\n\treturn answer\nend", "\tlocal num\
    \ = -1\n\tif x%2 == 0 then\n\t\tnum = x\n\telse\n\t\tnum = x+1\n\tend\n\tif num\
    \ > y then\n\t\tnum = -1\n\tend\n\treturn num\nend", "  -- Your code here\n  if\
    \ x%2 ~= 0 and y%2 ~= 0 then\n    return -1\n  elseif x%2 == 0 and y%2 == 0 then\n\
    \    if x>y then\n      return x\n    elseif x<y then\n      return y\n    elseif\
    \ x==y then\n      return x\n    end\n  elseif x%2 == 0 and y%2 ~= 0 then\n  \
    \  return x\n  elseif x%2 ~= 0 and y%2 == 0 then\n    return y\n  end\nend\nprint(choose_num(13,\
    \ 14))\nprint(choose_num(15, 15))\nprint(choose_num(15, 14))", "    if x%2 ==\
    \ 0 then\n        return x\n    elseif x < y then\n        return choose_num(x+1,\
    \ y)\n    else\n        return -1\n    end\nend", "    if x == y then\n      \
    \  if x % 2 == 0 then\n            return x\n        else\n            return\
    \ -1\n        end\n    elseif x > y then\n        local t = x\n        x = y\n\
    \        y = t\n    end\n    -- x is smaller than y now\n    if y % 2 == 0 then\n\
    \        return y\n    else\n        return y - 1\n    end\nend", "    if (y %\
    \ 2) == 0 then\n        if (x % 2) == 0 then\n            return y\n        else\n\
    \            return y - 1\n        end\n    else\n        if (x % 2) == 0 then\n\
    \            return y - 1\n        else\n            return -1\n        end\n\
    \    end\nend", "   -- YOUR CODE HERE\n   return -1\nend", "    local num = -1\n\
    \    for i = y, x, -1 do\n        if i % 2 == 0 then\n            num = i\n  \
    \          break\n        end\n    end\n    return num\nend", "    if x == y then\n\
    \        if x % 2 == 0 then\n            return x\n        else\n            return\
    \ -1\n        end\n    elseif x < y then\n        if x % 2 == 0 then\n       \
    \     return x\n        else\n            return choose_num(x + 1, y)\n      \
    \  end\n    elseif x > y then\n        if y % 2 == 0 then\n            return\
    \ y\n        else\n            return choose_num(x, y + 1)\n        end\n    end\n\
    end", end, "    if x%2 ~= 0 and y%2 ~= 0 then\n        return -1\n    elseif x%2\
    \ == 0 and y%2 == 0 then\n        return y\n    elseif x%2 == 0 and y%2 ~= 0 then\n\
    \        return x\n    elseif x%2 ~= 0 and y%2 == 0 then\n        if x == y-1\
    \ then\n            return -1\n        elseif x == y then\n            return\
    \ -1\n        else\n            return y-2\n        end\n    end\nend", "  for\
    \ i = x, y do\n    if i % 2 == 0 then\n      return i\n    end\n  end\n  return\
    \ -1\nend", "    -- YOUR CODE HERE\nend", "  if (x % 2 == 0) then \n    return\
    \ x\n  else\n    if (x < y) then\n      return choose_num(x + 1, y)\n    else\n\
    \      return -1\n    end\n  end\nend", "    local biggest_even = -1\n    if x\
    \ < y then\n        for i = x, y do\n            if i % 2 == 0 then\n        \
    \        biggest_even = i\n            end\n        end\n    end\n    return biggest_even\n\
    end", "  -- TODO:\n  -- Fill out the body of this function to finish the problem.\n\
    \  -- It's strongly recommended that you use helper functions.\nend", "    if\
    \ x > y then\n        return -1\n    end\n    if x % 2 == 0 then\n        return\
    \ x\n    end\n    return choose_num(x + 1, y)\nend", "    if y % 2 == 0 then\n\
    \        return y\n    elseif x % 2 == 0 then\n        return x\n    else\n  \
    \      return -1\n    end\nend", "  -- Write your implementation for the function\
    \ here\nend", "    if (x % 2) == 0 then\n        return x\n    elseif (y % 2)\
    \ == 0 then\n        return y\n    else\n        return -1\n    end\nend", "\t\
    -- Your code goes here!\nend", "    -- return nil\nend", "    if x > y then\n\
    \        return -1\n    end\n    local k = math.min(x, y)\n    local remainder\
    \ = k % 2\n    if remainder == 0 then\n        return k\n    else\n        k =\
    \ k + 1\n        while k <= y do\n            if k % 2 == 0 then\n           \
    \     return k\n            end\n            k = k + 1\n        end\n        return\
    \ -1\n    end\nend", "    ...\nend", "  -- TODO: write your code here\n  return\
    \ -1\nend", "    -- REPLACE THIS LINE WITH YOUR CODE\n    error('Not implemented')\n\
    end", "\tif x % 2 == 0 then\n\t\treturn x\n\telseif y % 2 == 0 then\n\t\treturn\
    \ y\n\telse\n\t\treturn -1\n\tend\nend", "\tlocal i = x\n\twhile i <= y do\n\t\
    \tif i % 2 == 0 then\n\t\t\treturn i\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn\
    \ -1\nend", "    if x > y then\n        return -1\n    end\n    local num = 0\n\
    \    for i = x, y do\n        if i % 2 == 0 then\n            num = i\n      \
    \  end\n    end\n    if num > 0 then\n        return num\n    else\n        return\
    \ -1\n    end\nend", "\tlocal n = math.floor(math.max(x, y))\n\twhile n > x do\n\
    \t\tif n % 2 == 0 then\n\t\t\treturn n\n\t\tend\n\t\tn = n - 1\n\tend\n\treturn\
    \ -1\nend", "  x = x % 2 == 0 and x or x + 1\n  while x <= y do\n    if x % 2\
    \ == 0 then\n      return x\n    end\n    x = x + 1\n  end\n  return -1\nend",
  "  return 1\nend", "  if x % 2 == 0 then\n    if x <= y then\n      return x\n \
    \   else\n      return -1\n    end\n  else\n    if x + 1 <= y then\n      return\
    \ x + 1\n    else\n      return -1\n    end\n  end\nend", "\tif x > y then\n\t\
    \treturn -1\n\tend\n\tif x % 2 == 0 then\n\t\treturn x\n\tend\n\treturn choose_num(x\
    \ + 1, y)\nend", end, "  local nums = {}\n  for num = x, y do\n    if (num % 2\
    \ == 0) then\n      table.insert(nums, num)\n    end\n  end\n  if (#nums == 0)\
    \ then\n    return -1\n  else\n    return nums[#nums]\n  end\nend", "    if x\
    \ % 2 == 0 then\n        return x\n    elseif y % 2 == 0 then\n        return\
    \ y\n    else\n        return -1\n    end\nend", "    if x % 2 == 0 then\n   \
    \     return x\n    elseif x + 1 == y then\n        return -1\n    else\n    \
    \    return choose_num(x + 1, y)\n    end\nend", "    if x > y then\n        return\
    \ -1\n    end\n    local s = {}\n    for i = x, y do\n        if i % 2 == 0 then\n\
    \            table.insert(s, i)\n        end\n    end\n    if #s > 0 then\n  \
    \      return s[#s]\n    else\n        return -1\n    end\nend", "    if x % 2\
    \ == 0 then\n        if x >= y then\n            return x\n        else\n    \
    \        return choose_num(x + 2, y)\n        end\n    else\n        return choose_num(x\
    \ + 1, y)\n    end\nend", "\tif x >= y then\n\t\treturn -1\n\telseif y % 2 ==\
    \ 0 then\n\t\treturn y\n\telse\n\t\treturn y - 1\n\tend\nend", "\tif x % 2 ==\
    \ 0 then\n\t\treturn y\n\telseif x % 2 == 1 and y % 2 == 0 then\n\t\treturn y\n\
    \telseif x % 2 == 1 and y % 2 == 1 then\n\t\treturn -1\n\tend\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_13_greatest_common_divisor
language: lua
prompt: "-- Return a greatest common divisor of two integers a and b\n-- >>> greatest_common_divisor(3,\
  \ 5)\n-- 1\n-- >>> greatest_common_divisor(25, 15)\n-- 5\nlocal function greatest_common_divisor(a,\
  \ b)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
  \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
  \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
  \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    -- Validate arguments\n    assert(a == math.floor(a), \"a must\
    \ be an integer\")\n    assert(b == math.floor(b), \"b must be an integer\")\n\
    \    assert(a > 0, \"a must be positive\")\n    assert(b > 0, \"b must be positive\"\
    )", "  -- Ensure that a > b\n  if a < b then\n    a, b = b, a\n  end", "  a =\
    \ math.abs(a)\n  b = math.abs(b)\n  if b > a then\n    a, b = b, a\n  end\n  local\
    \ r = a % b\n  while r ~= 0 do\n    a = b\n    b = r\n    r = a % b\n  end\n \
    \ return b\nend", "    if a == 0 then\n        return b\n    elseif b == 0 then\n\
    \        return a\n    else\n        return greatest_common_divisor(b, a % b)\n\
    \    end\nend", "    return b == 0 and a or greatest_common_divisor(b, a % b)\n\
    end", "  if a < b then\n    a, b = b, a\n  end\n  if a % b == 0 then\n    return\
    \ b\n  else\n    return greatest_common_divisor(b, a % b)\n  end\nend", "    --\
    \ Make sure a >= b\n    if a < b then\n        a, b = b, a\n    end", "    while\
    \ b ~= 0 do\n        a, b = b, a % b\n    end\n    return a\nend", "  if b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend", "\twhile b ~= 0 do\n\t\tlocal temp = a % b\n\t\ta = b\n\t\tb = temp\n\
    \tend\n\treturn a\nend", "  while b ~= 0 do\n    local t = b\n    b = a % b\n\
    \    a = t\n  end\n  return a\nend", "  if (b > a) then\n    a, b = b, a\n  end\n\
    \  while b ~= 0 do\n    a, b = b, a % b\n  end\n  return a\nend", "\tif a == 0\
    \ then\n\t\treturn b\n\telseif b == 0 then\n\t\treturn a\n\telse\n\t\treturn greatest_common_divisor(b,\
    \ a % b)\n\tend\nend", "    -- Euclidean algorithm\n    -- Find remainder r of\
    \ a / b\n    -- a = bq + r\n    -- If r = 0 then the last divisor is b\n    local\
    \ q = 0\n    local r = a\n    local t = 0\n    while r ~= 0 do\n        q = math.floor(b\
    \ / r)\n        t = r\n        r = b - q * r\n        b = t\n    end\n    return\
    \ b\nend", "    if a % b == 0 then\n        return b\n    else\n        return\
    \ greatest_common_divisor(b, a % b)\n    end\nend", "    if a < b then\n     \
    \   a, b = b, a\n    end\n    while b ~= 0 do\n        a, b = b, a % b\n    end\n\
    \    return a\nend", "    a = math.abs(a)\n    b = math.abs(b)\n    if a == 0\
    \ or b == 0 then\n        return 0\n    end\n    while b ~= 0 do\n        local\
    \ c = a % b\n        a = b\n        b = c\n    end\n    return a\nend", "    local\
    \ r = a % b\n    while r ~= 0 do\n        a = b\n        b = r\n        r = a\
    \ % b\n    end\n    return b\nend", "    -- Ensure that 'a' is the greater number\n\
    \    if a < b then\n        a, b = b, a\n    end", "    -- Reassign a and b, such\
    \ that b > a\n    if a > b then\n        a, b = b, a\n    end", "    local divisor\
    \ = 2\n    local greatest_divisor = 1", "  local r\n  while b ~= 0 do\n    r =\
    \ a % b\n    a = b\n    b = r\n  end\n  return a\nend", "    while b ~= 0 do\n\
    \        local r = a % b\n        a = b\n        b = r\n    end\n    return a\n\
    end", "\ta = math.abs(a)\n\tb = math.abs(b)\n\t\n\twhile b ~= 0 do\n\t\ta, b =\
    \ b, a % b\n\tend\n\t\n\treturn a\nend", "  a = math.abs(a)\n  b = math.abs(b)\n\
    \  while a ~= 0 do\n    a, b = b % a, a\n  end\n  return b\nend", "  return (b\
    \ == 0) and a or greatest_common_divisor(b, a % b)\nend", "  local big = math.max(a,\
    \ b)\n  local small = math.min(a, b)\n  while small ~= 0 do\n    local tmp = big\
    \ % small\n    big = small\n    small = tmp\n  end\n  return big\nend", "  if\
    \ b == 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a %\
    \ b)\n  end\nend", "    if a == 0 then\n        return b\n    elseif b == 0 then\n\
    \        return a\n    else\n        return greatest_common_divisor(b, a % b)\n\
    \    end\nend", "  -- 0 is always a divisor of any number\n  if a == 0 then\n\
    \    return b\n  elseif b == 0 then\n    return a\n  else\n    return greatest_common_divisor(b,\
    \ a % b)\n  end\nend", "  a = math.abs(a)\n  b = math.abs(b)\n  local temp\n \
    \ while b > 0 do\n    temp = b\n    b = a % b\n    a = temp\n  end\n  return a\n\
    end", "    return b == 0 and a or greatest_common_divisor(b, a % b)\nend", '    local
    c', "    if b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend", "    -- The greatest common divisor\n    local gcd =\
    \ 1", "    while b ~= 0 do\n        a, b = b, a % b\n    end\n    return a\nend",
  "    local r\n    while b ~= 0 do\n        r = a % b\n        a = b\n        b =\
    \ r\n    end\n    return a\nend", "    while b ~= 0 do\n        a, b = b, a %\
    \ b\n    end\n    return a\nend", "\t-- Try to avoid unnecessary calls to b.\n\
    \tif b > a then\n\t\treturn greatest_common_divisor(b, a)\n\tend\n\t-- Algorithm\
    \ from Wikipedia.\n\twhile b ~= 0 do\n\t\ta, b = b, a % b\n\tend\n\treturn a\n\
    end", "    if a == 0 then\n        return b\n    elseif b == 0 then\n        return\
    \ a\n    else\n        return greatest_common_divisor(b, a % b)\n    end\nend",
  "  local r = a % b\n  if r == 0 then\n    return b\n  else\n    return greatest_common_divisor(b,\
    \ r)\n  end\nend", "    if a < b then a, b = b, a end\n    while b ~= 0 do\n \
    \       a, b = b, a % b\n    end\n    return a\nend", "  while b ~= 0 do\n   \
    \ a, b = b, a % b\n  end\n  return a\nend", "  local a, b = math.abs(a), math.abs(b)\n\
    \  if a < b then\n    a, b = b, a\n  end\n  local r = a % b\n  if r == 0 then\n\
    \    return b\n  else\n    return greatest_common_divisor(b, r)\n  end\nend",
  "  if b == 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a\
    \ % b)\n  end\nend", "  local min = math.min(a, b)\n  local max = math.max(a,\
    \ b)\n  while max % min ~= 0 do\n    local max = max % min\n    local tmp = min\n\
    \    min = max\n    max = tmp\n  end\n  return min\nend", "    if b == 0 then\n\
    \        return a\n    else\n        return greatest_common_divisor(b, a % b)\n\
    \    end\nend", "\tif a > b then\n\t\ta, b = b, a\n\tend\n\tif b % a == 0 then\n\
    \t\treturn a\n\telse\n\t\treturn greatest_common_divisor(b % a, a)\n\tend\nend",
  "    while b ~= 0 do\n        local tmp = a % b\n        a = b\n        b = tmp\n\
    \    end\n    return a\nend", "    while b ~= 0 do\n        local c = a % b\n\
    \        a = b\n        b = c\n    end\n    return a\nend", "    local c = a %\
    \ b\n    if c == 0 then\n        return b\n    else\n        return greatest_common_divisor(b,\
    \ c)\n    end\nend", "  local c = 0\n  while b ~= 0 do\n    c = a % b\n    a =\
    \ b\n    b = c\n  end\n  return a\nend", "  if a == 0 then\n    return b\n  elseif\
    \ b == 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a %\
    \ b)\n  end\nend", '    local gcd = 1', "  if a == 0 then\n    return b\n  elseif\
    \ b == 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a %\
    \ b)\n  end\nend", "  a = math.abs(a)\n  b = math.abs(b)\n  if a < b then\n  \
    \  a, b = b, a\n  end\n  while b ~= 0 do\n    a, b = b, a % b\n  end\n  return\
    \ a\nend", "\ta = math.abs(a)\n\tb = math.abs(b)\n\twhile b ~= 0 do\n\t\ta, b\
    \ = b, a % b\n\tend\n\treturn a\nend", "    if b == 0 then\n        return a\n\
    \    else\n        return greatest_common_divisor(b, a % b)\n    end\nend", " \
    \ local a_divisors = divisors(a)\n  local b_divisors = divisors(b)\n  local largest_common_divisor\
    \ = 1\n  for _, a_divisor in ipairs(a_divisors) do\n    for _, b_divisor in ipairs(b_divisors)\
    \ do\n      if a_divisor == b_divisor and a_divisor > largest_common_divisor then\n\
    \        largest_common_divisor = a_divisor\n      end\n    end\n  end\n  return\
    \ largest_common_divisor\nend", "    return __gcd(a, b)\nend", "  local gcd =\
    \ 1\n  for i = 2, math.min(a, b) do\n    if a % i == 0 and b % i == 0 then\n \
    \     gcd = i\n    end\n  end\n  return gcd\nend", "  -- Put the greater integer\
    \ into a\n  if b > a then\n    a, b = b, a\n  end", "    local r = a % b\n   \
    \ if r == 0 then\n        return b\n    else\n        return greatest_common_divisor(b,\
    \ r)\n    end\nend", "    while b ~= 0 do\n        a, b = b, a % b\n    end\n\
    \    return a\nend", "\tif a < b then\n\t\ta, b = b, a\n\tend\n\twhile b ~= 0\
    \ do\n\t\tlocal remainder = a % b\n\t\ta = b\n\t\tb = remainder\n\tend\n\treturn\
    \ a\nend", "    return b == 0 and a or greatest_common_divisor(b, a % b)\nend",
  "  -- Find divisors of a\n  local divisors_a = {}\n  for i = 1, a do\n    if a %\
    \ i == 0 then divisors_a[#divisors_a + 1] = i end\n  end", "    local t\n    while\
    \ b ~= 0 do\n        t = b\n        b = a % b\n        a = t\n    end\n    return\
    \ a\nend", "\tif a == 0 then\n\t\treturn b\n\telseif b == 0 then\n\t\treturn a\n\
    \telse\n\t\treturn greatest_common_divisor(b, a % b)\n\tend\nend", "  a = math.abs(a)\n\
    \  b = math.abs(b)\n  if a > b then\n    return greatest_common_divisor(b, a)\n\
    \  elseif a == 0 then\n    return b\n  else\n    return greatest_common_divisor(b\
    \ % a, a)\n  end\nend", "\tlocal tmp;\n\twhile b ~= 0 do\n\t\ttmp = a % b;\n\t\
    \ta = b;\n\t\tb = tmp;\n\tend\n\treturn a;\nend", "\twhile b ~= 0 do\n\t\ta, b\
    \ = b, a % b\n\tend\n\treturn a\nend", "\tlocal function gcd_iter(a, b)\n\t\t\
    return a == 0 and b or gcd_iter(b % a, a)\n\tend\n\treturn gcd_iter(math.abs(a),\
    \ math.abs(b))\nend", "    local r\n    while b ~= 0 do\n        r = a % b\n \
    \       a = b\n        b = r\n    end\n    return a\nend", "\tif b == 0 then\n\
    \t\treturn a\n\telse\n\t\treturn greatest_common_divisor(b, a % b)\n\tend\nend",
  "    if a < b then\n        return greatest_common_divisor(b, a)\n    end\n    if\
    \ b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend", "    a = abs(a)\n    b = abs(b)\n    while b ~= 0 do\n       \
    \ local m = a % b\n        a = b\n        b = m\n    end\n    return a\nend",
  "    if a < b then a, b = b, a end\n    while b ~= 0 do\n        a, b = b, a % b\n\
    \    end\n    return a\nend", "    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend", "    local gcd_table = {}\n    -- Find factors of a\n\
    \    for i = 1, a do\n        if a % i == 0 then\n            gcd_table[i] = true\n\
    \        end\n    end\n    -- Compare factors of a with b, return the highest\
    \ common divisor\n    for i = a, 1, -1 do\n        if gcd_table[i] and b % i ==\
    \ 0 then\n            return i\n        end\n    end\nend", "  if a < b then\n\
    \    return greatest_common_divisor(b, a)\n  end\n  if b == 0 then\n    return\
    \ a\n  end\n  return greatest_common_divisor(b, a % b)\nend", "  a = math.abs(a)\n\
    \  b = math.abs(b)\n  while b ~= 0 do\n    a, b = b, a % b\n  end\n  return a\n\
    end", "\tif b == 0 then\n\t\treturn a\n\telse\n\t\treturn greatest_common_divisor(b,\
    \ a % b)\n\tend\nend", "  if b == 0 then\n    return a\n  else\n    return greatest_common_divisor(b,\
    \ a % b)\n  end\nend", "    a = math.abs(a)\n    b = math.abs(b)\n    while b\
    \ ~= 0 do\n        a, b = b, a % b\n    end\n    return a\nend", "    if a ==\
    \ 0 then\n        return b\n    elseif b == 0 then\n        return a\n    else\n\
    \        local r = b % a\n        return greatest_common_divisor(r, a)\n    end\n\
    end", "    local max = math.max(a, b)\n    local min = math.min(a, b)\n    local\
    \ gcd\n    while min ~= 0 do\n        gcd = min\n        min = max % min\n   \
    \     max = gcd\n    end\n    return gcd\nend", "    local a, b = math.abs(a),\
    \ math.abs(b)\n    if a > b then\n        local a, b = b, a\n    end\n    local\
    \ r = a % b\n    while r ~= 0 do\n        a, b = b, r\n        r = a % b\n   \
    \ end\n    return b\nend", "    -- https://en.wikipedia.org/wiki/Euclidean_algorithm\n\
    \    -- gcd(a, 0) = a\n    -- gcd(a, b) = gcd(b, a mod b)\n    while b ~= 0 do\n\
    \        local t = b\n        b = a % b\n        a = t\n    end\n    return a\n\
    end", "\treturn (b == 0) and a or greatest_common_divisor(b, a % b)\nend", " \
    \ local tmp\n  if a < b then\n    tmp = a\n    a = b\n    b = tmp\n  end\n  while\
    \ b ~= 0 do\n    tmp = a % b\n    a = b\n    b = tmp\n  end\n  return a\nend",
  "    local c\n    while b ~= 0 do\n        c = a % b\n        a = b\n        b =\
    \ c\n    end\n    return a\nend", "\tif a < b then\n\t\ta, b = b, a\n\tend\n\t\
    if b == 0 then\n\t\treturn a\n\telse\n\t\treturn greatest_common_divisor(b, a\
    \ % b)\n\tend\nend", "    while b ~= 0 do\n        local a, b = b, a % b\n   \
    \ end\n    return a\nend", "\tlocal remainder = a % b\n\twhile remainder ~= 0\
    \ do\n\t\ta = b\n\t\tb = remainder\n\t\tremainder = a % b\n\tend\n\treturn b\n\
    end", "    if a == 0 then\n        return b\n    elseif b == 0 then\n        return\
    \ a\n    else\n        return greatest_common_divisor(b, a % b)\n    end\nend",
  "    if (a < 0) then\n        a = -a\n    end\n    if (b < 0) then\n        b =\
    \ -b\n    end\n    while b ~= 0 do\n        local t = b\n        b = a % b\n \
    \       a = t\n    end\n    return a\nend", "    if a < b then\n        a, b =\
    \ b, a\n    end\n    local r = a % b\n    while r ~= 0 do\n        a, b = b, r\n\
    \        r = a % b\n    end\n    return b\nend", "  a = tonumber(a)\n  b = tonumber(b)\n\
    \  return (b == 0) and a or greatest_common_divisor(b, a % b)\nend", "\tif a ==\
    \ 0 then\n\t\treturn b\n\telseif b == 0 then\n\t\treturn a\n\telse\n\t\treturn\
    \ greatest_common_divisor(b, a % b)\n\tend\nend", "    while b ~= 0 do\n     \
    \   local r = a % b\n        a = b\n        b = r\n    end\n    return a\nend",
  "\twhile b ~= 0 do\n\t\tlocal h = a % b\n\t\ta = b\n\t\tb = h\n\tend\n\treturn a\n\
    end", "  local gcd_rec = function(a, b)\n    if a % b == 0 then\n      return\
    \ b\n    else\n      return gcd_rec(b, a % b)\n    end\n  end\n  if a == 0 then\n\
    \    return b\n  elseif b == 0 then\n    return a\n  else\n    if a > b then\n\
    \      return gcd_rec(a, b)\n    else\n      return gcd_rec(b, a)\n    end\n \
    \ end\nend", "    if a == 0 then\n        return b\n    elseif b == 0 then\n \
    \       return a\n    else\n        return greatest_common_divisor(b, a % b)\n\
    \    end\nend", "  if b == 0 then\n    return a\n  else\n    return greatest_common_divisor(b,\
    \ a % b)\n  end\nend", "    if b == 0 then\n        return a\n    else\n     \
    \   return greatest_common_divisor(b, a % b)\n    end\nend", "  while b ~= 0 do\n\
    \    a, b = b, a % b\n  end\n  return a\nend", "    if a < b then\n        return\
    \ greatest_common_divisor(b, a)\n    end\n    if b == 0 then\n        return a\n\
    \    end\n    return greatest_common_divisor(b, a % b)\nend", "    while a ~=\
    \ b do\n        if a > b then\n            a = a - b\n        else\n         \
    \   b = b - a\n        end\n    end\n    return a\nend", "\t-- no need to use\
    \ a loop\n\t-- if a == b, then a and b are multiples of each other\n\t-- if a\
    \ < b, then a is a multiple of b\n\t-- if a > b, then b is a multiple of a\n\t\
    -- if a == b and neither a nor b == 0, then return that value\n\t-- if a == 0\
    \ or b == 0, then the greatest common divisor is not a nor b", "    return a ==\
    \ 0 and b or greatest_common_divisor(b % a, a)\nend", "\tlocal gcd = 1\n\tif not\
    \ (a == 0 and b == 0) then\n\t\twhile a ~= 0 and b ~= 0 do\n\t\t\tif a % 2 ==\
    \ 0 and b % 2 == 0 then\n\t\t\t\tgcd = 2 * gcd\n\t\t\t\ta = a / 2\n\t\t\t\tb =\
    \ b / 2\n\t\t\telseif a % 2 == 0 and b % 2 ~= 0 then\n\t\t\t\ta = a / 2\n\t\t\t\
    elseif a % 2 ~= 0 and b % 2 == 0 then\n\t\t\t\tb = b / 2\n\t\t\telseif a > b then\n\
    \t\t\t\ta = (a - b) / 2\n\t\t\telse\n\t\t\t\tb = (b - a) / 2\n\t\t\tend\n\t\t\
    end\n\t\tgcd = gcd * a + gcd * b\n\tend\n\treturn gcd\nend", "  if a < b then\n\
    \    return greatest_common_divisor(b, a)\n  end\n  if b == 0 then\n    return\
    \ a\n  end\n  return greatest_common_divisor(b, a % b)\nend", "\tlocal c = a %\
    \ b\n\tif c == 0 then\n\t\treturn b\n\telse\n\t\treturn greatest_common_divisor(b,\
    \ c)\n\tend\nend", "    while b ~= 0 do\n        local q, r = math.floor(a / b),\
    \ a % b\n        a, b = b, r\n    end\n    return a\nend", "  if a < b then a,\
    \ b = b, a end\n  if b == 0 then return a end\n  return greatest_common_divisor(b,\
    \ a % b)\nend", "    if b == 0 then\n        return a\n    else\n        return\
    \ greatest_common_divisor(b, a % b)\n    end\nend", "\twhile b ~= 0 do\n\t\tlocal\
    \ temp = a % b\n\t\ta = b\n\t\tb = temp\n\tend\n\treturn a\nend", "    return\
    \ b == 0 and a or greatest_common_divisor(b, a % b)\nend", "\t-- If a > b, swap\
    \ a and b\n\tif a > b then\n\t\ta, b = b, a\n\tend", "    return b == 0 and a\
    \ or greatest_common_divisor(b, a % b)\nend", "  local r = a % b\n  while r ~=\
    \ 0 do\n    a = b\n    b = r\n    r = a % b\n  end\n  return b\nend", "\tlocal\
    \ f\n\twhile b ~= 0 do\n\t\tf = b\n\t\tb = a % b\n\t\ta = f\n\tend\n\treturn a\n\
    end", "    while b ~= 0 do\n        a, b = b, a % b\n    end\n    return a\nend",
  "    -- returns the gcd of a and b\n    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        local t = b\n        b = a\
    \ % b\n        a = t\n        return greatest_common_divisor(a, b)\n    end\n\
    end", "    -- make sure a > b\n    if b > a then\n        a, b = b, a\n    end\n\
    \    while b ~= 0 do\n        a, b = b, a % b\n    end\n    return a\nend", " \
    \ -- Euclid's algorithm\n  if a < b then\n    a, b = b, a\n  end\n  while b ~=\
    \ 0 do\n    a, b = b, a % b\n  end\n  return a\nend", "    local divisor = 2\n\
    \    local greatest_divisor = 1", "    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend", "    -- Substitute if a is less than b\n    if a < b\
    \ then\n        a, b = b, a\n    end", "    local dividend = math.max(a, b)\n\
    \    local divisor = math.min(a, b)\n    local remainder = dividend % divisor\n\
    \    if remainder == 0 then\n        return divisor\n    else\n        return\
    \ greatest_common_divisor(divisor, remainder)\n    end\nend", "\tlocal i\n\tfor\
    \ i = min(a, b), 1, -1 do\n\t\tif (a % i == 0) and (b % i == 0) then\n\t\t\treturn\
    \ i\n\t\tend\n\tend\n\treturn 1\nend", "\tif a < b then\n\t\ta, b = b, a\n\tend\n\
    \twhile b ~= 0 do\n\t\ta, b = b, a % b\n\tend\n\treturn a\nend", "  -- We check\
    \ a < b and swap them if necessary\n  if a > b then\n    a, b = b, a\n  end\n\
    \  -- We check if a is 0 and return b if so\n  if a == 0 then\n    return b\n\
    \  end\n  -- Return the result of calling this function again on b and the remainder\
    \ of a and b\n  return greatest_common_divisor(b % a, a)\nend", "    a = math.abs(a)\n\
    \    b = math.abs(b)\n    if a == 0 then\n        return b\n    elseif b == 0\
    \ then\n        return a\n    else\n        local r = a % b\n        return greatest_common_divisor(b,\
    \ r)\n    end\nend", "    a = math.abs(a)\n    b = math.abs(b)\n    while b ~=\
    \ 0 do\n        local temp = a % b\n        a = b\n        b = temp\n    end\n\
    \    return a\nend", "    a = math.abs(a)\n    b = math.abs(b)\n    while a ~=\
    \ 0 do\n        a, b = b % a, a\n    end\n    return b\nend", "    local r = a\
    \ % b\n    while r ~= 0 do\n        a = b\n        b = r\n        r = a % b\n\
    \    end\n    return b\nend", "    local c = b\n    local d = a\n    if b > a\
    \ then\n        c = a\n        d = b\n    end\n    while c ~= 0 do\n        local\
    \ r = d % c\n        d = c\n        c = r\n    end\n    return d\nend", "  while\
    \ b ~= 0 do\n    a, b = b, a % b\n  end\n  return a\nend", "    a = math.abs(a)\n\
    \    b = math.abs(b)\n    while a ~= 0 do\n        a, b = b % a, a\n    end\n\
    \    return b\nend", "\tif a == 0 then\n\t\treturn b\n\telseif b == 0 then\n\t\
    \treturn a\n\telse\n\t\tlocal r = a % b\n\t\treturn greatest_common_divisor(b,\
    \ r)\n\tend\nend", "    return b == 0 and a or greatest_common_divisor(b, a %\
    \ b)\nend", "    local a, b = math.abs(a), math.abs(b)\n    while a > 0 do\n \
    \       a, b = b % a, a\n    end\n    return b\nend", "    if a < b then\n   \
    \     a, b = b, a\n    end\n    if b == 0 then\n        return a\n    else\n \
    \       return greatest_common_divisor(b, a % b)\n    end\nend", "  while b ~=\
    \ 0 do\n    local t = b\n    b = a % b\n    a = t\n  end\n  return a\nend", "\t\
    if a == 0 then\n\t\treturn b\n\telseif b == 0 then\n\t\treturn a\n\telse\n\t\t\
    return greatest_common_divisor(b, a % b)\n\tend\nend", "\tif a < b then\n\t\t\
    return greatest_common_divisor(b, a)\n\tend\n\t\n\tif b == 0 then\n\t\treturn\
    \ a\n\tend\n\t\n\treturn greatest_common_divisor(b, a % b)\nend", "  if b == 0\
    \ then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n \
    \ end\nend", "    local a = math.abs(a)\n    local b = math.abs(b)\n    local\
    \ temp = 0\n    while a % b ~= 0 do\n        temp = a\n        a = b\n       \
    \ b = temp % b\n    end\n    return b\nend", "    local r = a % b\n    if r ==\
    \ 0 then\n        return b\n    else\n        return greatest_common_divisor(b,\
    \ r)\n    end\nend", "  if a == 0 then\n    return b\n  elseif b == 0 then\n \
    \   return a\n  else\n    if a > b then\n      return greatest_common_divisor(a\
    \ % b, b)\n    else\n      return greatest_common_divisor(a, b % a)\n    end\n\
    \  end\nend", "\tif a < b then\n\t\ta, b = b, a\n\tend\n\twhile b ~= 0 do\n\t\t\
    a, b = b, a % b\n\tend\n\treturn a\nend", "    local c = a % b\n    if c == 0\
    \ then\n        return b\n    else\n        return greatest_common_divisor(b,\
    \ c)\n    end\nend", "    if b == 0 then\n        return a\n    else\n       \
    \ return greatest_common_divisor(b, a % b)\n    end\nend", "    return b == 0\
    \ and a or greatest_common_divisor(b, a % b)\nend", "    local temp = nil\n  \
    \  while b ~= 0 do\n        temp = a % b\n        a = b\n        b = temp\n  \
    \  end\n    return a\nend", "  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend", "\t-- Compute the GCD of two\
    \ positive integers\n\tlocal gcd = function(x, y)\n\t\twhile y ~= 0 do\n\t\t\t\
    local z = x % y\n\t\t\tx = y\n\t\t\ty = z\n\t\tend\n\t\treturn x\n\tend", "  \
    \  if b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend", "  local r = a % b\n  while r ~= 0 do\n    a = b\n  \
    \  b = r\n    r = a % b\n  end\n  return b\nend", "    local r = a % b\n    while\
    \ r ~= 0 do\n        a = b\n        b = r\n        r = a % b\n    end\n    return\
    \ b\nend", "    if b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend", "\treturn b == 0 and a or greatest_common_divisor(b,\
    \ a % b)\nend", "  local x = a\n  local y = b\n  while y ~= 0 do\n    x, y = y,\
    \ x % y\n  end\n  return x\nend", "    a = abs(a)\n    b = abs(b)\n    while a\
    \ ~= 0 do\n        a, b = b % a, a\n    end\n    return b\nend", "    -- avoid\
    \ recursion\n    local first = a\n    local second = b\n    local tmp = nil\n\
    \    while second ~= 0 do\n        tmp = second\n        second = first % second\n\
    \        first = tmp\n    end\n    return first\nend", "    while a ~= b do\n\
    \        if a > b then\n            a = a - b\n        else\n            b = b\
    \ - a\n        end\n    end\n    return a\nend", "    -- FILL ME IN\n    -- Please\
    \ write your code here.\n    local factor = {}\n    local a_factor = {}\n    local\
    \ b_factor = {}\n    for i = 2, a do\n        if a % i == 0 then\n           \
    \ table.insert(a_factor, i)\n        end\n    end\n    for i = 2, b do\n     \
    \   if b % i == 0 then\n            table.insert(b_factor, i)\n        end\n \
    \   end\n    for i = 1, #a_factor do\n        for j = 1, #b_factor do\n      \
    \      if a_factor[i] == b_factor[j] then\n                table.insert(factor,\
    \ a_factor[i])\n            end\n        end\n    end\n    table.sort(factor)\n\
    \    return factor[#factor]\nend", "\twhile b ~= 0 do\n\t\ta, b = b, a % b\n\t\
    end\n\treturn a\nend", "\tlocal r = a % b\n\tif r == 0 then\n\t\treturn b\n\t\
    else\n\t\treturn greatest_common_divisor(b, r)\n\tend\nend", "    local r = a\
    \ % b\n    while r ~= 0 do\n        a = b\n        b = r\n        r = a % b\n\
    \    end\n    return b\nend", "    local r = 0\n    while b ~= 0 do\n        r\
    \ = a % b\n        a = b\n        b = r\n    end\n    return a\nend", "    if\
    \ a < b then\n        a, b = b, a\n    end\n    if a == 0 or b == 0 then\n   \
    \     return 0\n    end\n    while a % b ~= 0 do\n        a, b = b, a % b\n  \
    \  end\n    return b\nend", "    local t = {}\n    for d=1, a do\n        if a\
    \ % d == 0 then\n            table.insert(t, d)\n        end\n    end\n    for\
    \ d=1, b do\n        if b % d == 0 then\n            table.insert(t, d)\n    \
    \    end\n    end\n    table.sort(t)\n    for i=#t, 1, -1 do\n        if t[i]\
    \ == t[i-1] then\n            return t[i]\n        end\n    end\n    return 1\n\
    end", "  a = math.abs(a)\n  b = math.abs(b)\n  if a < b then\n    a, b = b, a\n\
    \  end\n  while b ~= 0 do\n    a, b = b, a % b\n  end\n  return a\nend", "   \
    \ local c\n    while b ~= 0 do\n        c = a % b\n        a = b\n        b =\
    \ c\n    end\n    return a\nend", "    if b == 0 then\n        return a\n    else\n\
    \        return greatest_common_divisor(b, a % b)\n    end\nend", "\tlocal r =\
    \ b % a\n\treturn r == 0 and a or greatest_common_divisor(r, a)\nend", "  if a\
    \ == 0 then\n    return b\n  elseif b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend", "  local a, b = math.max(a,\
    \ b), math.min(a, b)\n  while b ~= 0 do\n    a, b = b, a % b\n  end\n  return\
    \ a\nend", "    local r\n    while b ~= 0 do\n        r = a % b\n        a = b\n\
    \        b = r\n    end\n    return a\nend", "\treturn ((a ~= 0) and (b ~= 0))\
    \ and ((a % b == 0) and b or greatest_common_divisor(b, a % b)) or math.max(a,\
    \ b)\nend", "\ta = math.abs(a)\n\tb = math.abs(b)\n\twhile b ~= 0 do\n\t\tlocal\
    \ r = a % b\n\t\ta = b\n\t\tb = r\n\tend\n\treturn a\nend", "    local t = 0\n\
    \    while b ~= 0 do\n        t = a % b\n        a = b\n        b = t\n    end\n\
    \    return a\nend", "    local a, b = math.max(a, b), math.min(a, b)\n    local\
    \ temp = a % b\n    if temp == 0 then\n        return b\n    else\n        return\
    \ greatest_common_divisor(b, temp)\n    end\nend", "  local ax = math.abs(a)\n\
    \  local bx = math.abs(b)\n  while (bx ~= 0) do\n    local remainder = ax % bx\n\
    \    ax = bx\n    bx = remainder\n  end\n  return ax\nend", "  a = math.abs(a)\n\
    \  b = math.abs(b)\n  if a == 0 then\n    return b\n  elseif b == 0 then\n   \
    \ return a\n  else\n    return greatest_common_divisor(b, a % b)\n  end\nend",
  "    while b ~= 0 do\n        local temp = a % b\n        a = b\n        b = temp\n\
    \    end\n    return a\nend", "  if a == 0 then\n    return b\n  elseif b == 0\
    \ then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n \
    \ end\nend", "    if a == 0 then\n        return b\n    elseif b == 0 then\n \
    \       return a\n    else\n        return greatest_common_divisor(b, a % b)\n\
    \    end\nend", "\tlocal c = a % b\n\twhile c ~= 0 do\n\t\ta = b\n\t\tb = c\n\t\
    \tc = a % b\n\tend\n\treturn b\nend", "\tif b == 0 then\n\t\treturn a\n\telse\n\
    \t\treturn greatest_common_divisor(b, a % b)\n\tend\nend", "    while b ~= 0 do\n\
    \        local temp = a % b\n        a = b\n        b = temp\n    end\n    return\
    \ a\nend", "\tif a < b then\n\t\ta, b = b, a\n\tend\n\twhile b ~= 0 do\n\t\ta,\
    \ b = b, a % b\n\tend\n\treturn a\nend", "    local temp;\n    while b ~= 0 do\n\
    \        temp = a % b;\n        a = b;\n        b = temp;\n    end\n    return\
    \ a;\nend", "    -- algorithm for greatest common divisor\n    -- Euclid's algorithm\n\
    \    -- https://en.wikipedia.org/wiki/Euclidean_algorithm\n    local r = a % b",
  "    if a == 0 then\n        return b\n    elseif b == 0 then\n        return a\n\
    \    else\n        return greatest_common_divisor(b, a % b)\n    end\nend", " \
    \ -- Euclid's algorithm\n  -- https://en.wikipedia.org/wiki/Euclidean_algorithm\n\
    \  a = math.abs(a)\n  b = math.abs(b)\n  while a ~= b do\n    if a > b then\n\
    \      a = a - b\n    else\n      b = b - a\n    end\n  end\n  return a\nend",
  "    if a == 0 then\n        return b\n    elseif b == 0 then\n        return a\n\
    \    else\n        return greatest_common_divisor(b, a % b)\n    end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

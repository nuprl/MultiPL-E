name: HumanEval_133_sum_squares
language: lua
prompt: "-- You are given a table of numbers.\n-- You need to return the sum of squared\
  \ numbers in the given table,\n-- round each element in the table to the upper int(Ceiling)\
  \ first.\n-- Examples:\n-- >>> lst({1.0, 2.0, 3.0})\n-- 14\n-- >>> lst({1.0, 4.0,\
  \ 9.0})\n-- 98\n-- >>> lst({1.0, 3.0, 5.0, 7.0})\n-- 84\n-- >>> lst({1.4, 4.2, 0.0})\n\
  -- 29\n-- >>> lst({-2.4, 1.0, 1.0})\n-- 6\nlocal function sum_squares(lst)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_squares\n\
  \    lu.assertEquals(candidate({1.0, 2.0, 3.0}), 14)\n    lu.assertEquals(candidate({1.0,\
  \ 2.0, 3.0}), 14)\n    lu.assertEquals(candidate({1.0, 3.0, 5.0, 7.0}), 84)\n  \
  \  lu.assertEquals(candidate({1.4, 4.2, 0.0}), 29)\n    lu.assertEquals(candidate({-2.4,\
  \ 1.0, 1.0}), 6)\n    lu.assertEquals(candidate({100.0, 1.0, 15.0, 2.0}), 10230)\n\
  \    lu.assertEquals(candidate({10000.0, 10000.0}), 200000000)\n    lu.assertEquals(candidate({-1.4,\
  \ 4.6, 6.3}), 75)\n    lu.assertEquals(candidate({-1.4, 17.9, 18.9, 19.9}), 1086)\n\
  \    lu.assertEquals(candidate({0.0}), 0)\n    lu.assertEquals(candidate({-1.0}),\
  \ 1)\n    lu.assertEquals(candidate({-1.0, 1.0, 0.0}), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local result = 0\n  for _,v in ipairs(lst) do\n    result = result\
    \ + (math.ceil(v) * math.ceil(v))\n  end\n  return result\nend", "  local sum\
    \ = 0\n  for _, n in ipairs(lst) do\n    sum = sum + math.ceil(n) ^ 2\n  end\n\
    \  return sum\nend", "    local result = 0\n    for i = 1, #lst do\n        result\
    \ = result + math.ceil(lst[i]) ^ 2\n    end\n    return result\nend", "    return\
    \ table.reduce(table.map(lst, function(i) return math.ceil(i) * math.ceil(i) end),\
    \ function(acc, i) return acc + i end, 0)\nend", '  local result = 0', "    local\
    \ sum = 0\n    for _, value in ipairs(lst) do\n        sum = sum + (math.ceil(value)\
    \ ^ 2)\n    end\n    return sum\nend", "  local n = #lst\n  local result = 0\n\
    \  for i = 1, n do\n    local element = lst[i]\n    result = result + element\
    \ * element\n  end\n  return result\nend", "  local sum = 0\n  for i,v in ipairs(lst)\
    \ do\n    sum = sum + math.ceil(v)^2\n  end\n  return sum\nend", "    local sum\
    \ = 0\n    for i = 1, #lst do\n        sum = sum + (math.ceil(lst[i]) ^ 2)\n \
    \   end\n    return sum\nend", "  local sqr = function(x) return x * x end\n \
    \ local sum = function(x, y) return x + y end\n  local z = map(sqr, lst)\n  return\
    \ reduce(sum, z)\nend", "  local res = 0\n  for _, x in ipairs(lst) do\n    res\
    \ = res + x ^ 2\n  end\n  return res\nend", "    local sum = 0\n    for i = 1,\
    \ #lst do\n        sum = sum + math.ceil(lst[i]) ^ 2\n    end\n    return sum\n\
    end", "\tlocal sum = 0\n\tfor _, v in ipairs(lst) do\n\t\tsum = sum + math.ceil(v)\
    \ ^ 2\n\tend\n\treturn sum\nend", "\tlocal result = 0\n\tfor i = 1, #lst do\n\t\
    \tresult = result + math.ceil(lst[i])^2\n\tend\n\treturn result\nend", "  return\
    \ sum(map(ceil, lst)) ^ 2\nend", "    local nums = {}\n    for i = 1, #lst do\n\
    \        local num = math.ceil(lst[i])\n        table.insert(nums, num * num)\n\
    \    end\n    return sum(nums)\nend", "    return sum(map(lst, function(x)\n \
    \       return x ^ 2\n    end))\nend", "  local sum = 0\n  for _, x in ipairs(lst)\
    \ do\n    sum = sum + math.ceil(x)^2\n  end\n  return sum\nend", "  local sum\
    \ = 0\n  for i, n in ipairs(lst) do\n    sum = sum + math.ceil(n) ^ 2\n  end\n\
    \  return sum\nend", "    local sum = 0\n    for _, value in ipairs(lst) do\n\
    \        sum = sum + math.ceil(value) ^ 2\n    end\n    return sum\nend", "  local\
    \ result = 0\n  for _, elem in ipairs(lst) do\n    result = result + math.ceil(elem)^2\n\
    \  end\n  return result\nend", "    local result = 0\n    for i, v in ipairs(lst)\
    \ do\n        result = result + math.ceil(v)^2\n    end\n    return result\nend",
  "    local result = 0\n    for _, item in ipairs(lst) do\n        result = result\
    \ + math.ceil(item) ^ 2\n    end\n    return result\nend", "    local total =\
    \ 0\n    for _, i in ipairs(lst) do\n        total = total + math.ceil(i)^2\n\
    \    end\n    return total\nend", "    local res = 0\n    for i = 1, #lst do\n\
    \        res = res + math.ceil(lst[i]) ^ 2\n    end\n    return res\nend", " \
    \   local sq = 0\n    for i = 1, #lst do\n        local val = math.ceil(lst[i])\n\
    \        sq = sq + (val * val)\n    end\n    return sq\nend", "  local sum = 0\n\
    \  for _, v in ipairs(lst) do\n    sum = sum + math.ceil(v) ^ 2\n  end\n  return\
    \ sum\nend", "  local r = 0\n  for _,v in ipairs(lst) do\n    r = r + math.ceil(v)^2\n\
    \  end\n  return r\nend", "    local sum = 0\n    for _, v in ipairs(lst) do\n\
    \        sum = sum + math.ceil(v) ^ 2\n    end\n    return sum\nend", "    local\
    \ sum = 0\n    for _, v in ipairs(lst) do\n        sum = sum + math.ceil(v)^2\n\
    \    end\n    return sum\nend", "  local sum = 0\n  for _, num in ipairs(lst)\
    \ do\n    sum = sum + math.ceil(num)^2\n  end\n  return sum\nend", "    local\
    \ sums = 0\n    for _, v in ipairs(lst) do\n        sums = sums + math.ceil(v)\
    \ ^ 2\n    end\n    return sums\nend", '  local res = 0', "  local total = 0\n\
    \  for _, v in ipairs(lst) do\n    total = total + (math.ceil(v) * math.ceil(v))\n\
    \  end\n  return total\nend", "  local total = 0\n  for k, v in pairs(lst) do\n\
    \    total = total + math.pow(math.ceil(v), 2)\n  end\n  return total\nend", " \
    \   sum = 0\n    for k, v in pairs(lst) do\n        sum = sum + math.ceil(v)*math.ceil(v)\n\
    \    end\n    return sum\nend\nprint(sum_squares({1.0, 2.0, 3.0}))\nprint(sum_squares({1.0,\
    \ 4.0, 9.0}))\nprint(sum_squares({1.0, 3.0, 5.0, 7.0}))\nprint(sum_squares({1.4,\
    \ 4.2, 0.0}))\nprint(sum_squares({-2.4, 1.0, 1.0}))", "    return lst:map(math.ceil):map(function(e)\
    \ return e*e end):reduce(math.add)\nend", "  local sum = 0\n  for _, v in ipairs(lst)\
    \ do\n    local value = math.ceil(v)\n    sum = sum + value*value\n  end\n  return\
    \ sum\nend", "   local result = 0\n   for _,v in ipairs(lst) do\n      result\
    \ = result + math.ceil(v) ^ 2\n   end\n   return result\nend", "    return 0\n\
    end", "  local sum = 0\n  for i = 1, #lst do\n    sum = sum + math.ceil(lst[i])\
    \ ^ 2\n  end\n  return sum\nend", "    local sum = 0\n    for i, v in ipairs(lst)\
    \ do\n        sum = sum + math.ceil(v)^2\n    end\n    return sum\nend", "  --\
    \ write your code here\nend", "    local result = 0\n    for _, v in ipairs(lst)\
    \ do\n        result = result + math.ceil(v) ^ 2\n    end\n    return result\n\
    end", "    local sum = 0\n    for _, v in ipairs(lst) do\n        sum = sum +\
    \ math.ceil(v) ^ 2\n    end\n    return sum\nend", "\tlocal sum = 0\n\tfor _,\
    \ v in ipairs(lst) do\n\t\tsum = sum + math.ceil(v) ^ 2\n\tend\n\treturn sum\n\
    end", "    local sum = 0\n    for i,v in ipairs(lst) do\n        v = math.ceil(v)\n\
    \        sum = sum + (v * v)\n    end\n    return sum\nend", "    local sum =\
    \ 0\n    for i = 1, #lst do\n        if lst[i] > 0 then\n            sum = sum\
    \ + math.ceil(lst[i]) ^ 2\n        else\n            sum = sum + math.floor(lst[i])\
    \ ^ 2\n        end\n    end\n    return sum\nend", "    local sum = 0\n    for\
    \ i, v in ipairs(lst) do\n        sum = sum + math.ceil(v) ^ 2\n    end\n    return\
    \ sum\nend", "   local sum = 0\n   for _, value in ipairs(lst) do\n      sum =\
    \ sum + math.ceil(value) ^ 2\n   end\n   return sum\nend", "    local result =\
    \ 0\n    for i, v in ipairs(lst) do\n        result = result + math.ceil(v)^2\n\
    \    end\n    return result\nend", "  local sum = 0\n  for _, i in ipairs(lst)\
    \ do\n    sum = sum + math.ceil(i) ^ 2\n  end\n  return sum\nend", "    local\
    \ result = 0\n    for i, v in ipairs(lst) do\n        result = result + math.ceil(v)\
    \ ^ 2\n    end\n    return result\nend", "  local sum = 0\n  for _, v in ipairs(lst)\
    \ do\n    sum = sum + math.ceil(v) ^ 2\n  end\n  return sum\nend", "  local result\
    \ = 0\n  for _, v in ipairs(lst) do\n    result = result + math.floor(v + 0.5)\
    \ ^ 2\n  end\n  return result\nend", "    local sum = 0\n    for _, val in ipairs(lst)\
    \ do\n        sum = sum + math.ceil(val)^2\n    end\n    return sum\nend", " \
    \   local result = 0\n    for i = 1, #lst do\n        result = result + math.ceil(lst[i])\
    \ ^ 2\n    end\n    return result\nend", "    return sum(map(lst, function(e)\
    \ return ceil(e)*ceil(e) end))\nend", "\tlocal sum = 0\n\tfor _, v in ipairs(lst)\
    \ do\n\t\tsum = sum + math.ceil(v)^2\n\tend\n\treturn sum\nend", "    -- your\
    \ code here\nend", "   local res = 0\n   for _, e in ipairs(lst) do\n      res\
    \ = res + math.ceil(e) ^ 2\n   end\n   return res\nend", "    return sum(map(function(x)\
    \ return x^2 end, lst))\nend", "  local sum = 0\n  for _, v in ipairs(lst) do\n\
    \    sum = sum + math.ceil(v) ^ 2\n  end\n  return sum\nend", "   local sum =\
    \ 0\n   for i, num in ipairs(lst) do\n      sum = sum + math.ceil(num)^2\n   end\n\
    \   return sum\nend", "  local sum = 0\n  for _, v in ipairs(lst) do\n    sum\
    \ = sum + math.ceil(v)^2\n  end\n  return sum\nend", "    local sum = 0\n    for\
    \ i = 1, #lst do\n        sum = sum + math.ceil(lst[i]) ^ 2\n    end\n    return\
    \ sum\nend", "  local sum = 0\n  for _, v in ipairs(lst) do\n    sum = sum + math.ceil(v)^2\n\
    \  end\n  return sum\nend", "  local result = 0\n  for i = 1, #lst do\n    local\
    \ square = math.pow(math.ceil(lst[i]), 2)\n    result = result + square\n  end\n\
    \  return result\nend", "  local result = 0\n  for i = 1, #lst do\n    result\
    \ = result + math.ceil(lst[i]) ^ 2\n  end\n  return result\nend", "    local sum\
    \ = 0\n    for i, v in ipairs(lst) do\n        sum = sum + math.ceil(v) ^ 2\n\
    \    end\n    return sum\nend", "   local total = 0\n   for i,v in ipairs(lst)\
    \ do\n      local c = math.ceil(v)\n      total = total + c*c\n   end\n   return\
    \ total\nend", "  local res = 0\n  for i, v in ipairs(lst) do\n    res = res +\
    \ math.ceil(v) ^ 2\n  end\n  return res\nend", "  local sum = 0\n  for _, x in\
    \ ipairs(lst) do\n    sum = sum + x * x\n  end\n  return sum\nend", "  local sum\
    \ = 0\n  for i = 1, #lst do\n    sum = sum + math.ceil(lst[i]) ^ 2\n  end\n  return\
    \ sum\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    v = math.ceil(v)\n\
    \    v = v * v\n    sum = sum + v\n  end\n  return sum\nend", "  local sum = 0\n\
    \  for _, v in ipairs(lst) do\n    sum = sum + math.ceil(v) ^ 2\n  end\n  return\
    \ sum\nend", "    local sum = 0\n    for _, value in ipairs(lst) do\n        value\
    \ = math.ceil(value)\n        sum = sum + value * value\n    end\n    return sum\n\
    end", "  local sum = 0\n  for i = 1, #lst do\n    sum = sum + math.ceil(lst[i])\
    \ ^ 2\n  end\n  return sum\nend\nreturn sum_squares", "    if lst == nil then\n\
    \        return 0\n    end\n    local result = 0\n    for i = 1, #lst do\n   \
    \     result = result + math.ceil(lst[i])^2\n    end\n    return result\nend",
  "    local result = 0\n    for _, v in ipairs(lst) do\n        result = result +\
    \ math.ceil(v) ^ 2\n    end\n    return result\nend", "  local sum = 0\n  for\
    \ _,v in ipairs(lst) do\n    sum = sum + math.ceil(v) ^ 2\n  end\n  return sum\n\
    end", "  local result = 0\n  for k, v in pairs(lst) do\n    result = result +\
    \ math.ceil(v)*math.ceil(v)\n  end\n  return result\nend", "  local r = 0\n  for\
    \ i, v in ipairs(lst) do\n    local y = math.ceil(v)\n    r = r + y * y\n  end\n\
    \  return r\nend", "  local n = lst:nElement()\n  local sum = 0\n  for i = 1,\
    \ n do\n    sum = sum + math.ceil(lst[i]) ^ 2\n  end\n  return sum\nend", "  return\
    \ lst\n    :map(function(n) return math.ceil(n) end)\n    :reduce(function(a,\
    \ b) return a + b^2 end, 0)\nend", "  local sum = 0\n  for _, v in ipairs(lst)\
    \ do\n    sum = sum + math.ceil(v)^2\n  end\n  return sum\nend", "\tlocal total\
    \ = 0\n\tfor _,v in ipairs(lst) do\n\t\ttotal = total + math.ceil(v)^2\n\tend\n\
    \treturn total\nend", "  return sum(map(function(x) return x * x end, map(math.ceil,\
    \ lst)))\nend", '    local res = 0', "    local res = 0\n    for _, v in ipairs(lst)\
    \ do\n        res = res + math.ceil(v) ^ 2\n    end\n    return res\nend", " \
    \   local s = 0\n    for _, v in ipairs(lst) do\n        s = s + math.ceil(v)\
    \ ^ 2\n    end\n    return s\nend", "    local sum = 0\n    for i, v in ipairs(lst)\
    \ do\n        sum = sum + math.ceil(v) ^ 2\n    end\n    return sum\nend", " \
    \   local sum = 0\n    for _, v in ipairs(lst) do\n        local t = math.ceil(v)\n\
    \        sum = sum + t * t\n    end\n    return sum\nend", "    local sum = 0\n\
    \    for _, num in ipairs(lst) do\n        num = math.ceil(num)\n        sum =\
    \ sum + num * num\n    end\n    return sum\nend\nreturn sum_squares", "    local\
    \ t = {}\n    for _, v in ipairs(lst) do\n        t[#t + 1] = math.ceil(v)\n \
    \   end\n    return math.sum(t) ^ 2\nend", "  local sum = 0\n  for i, v in ipairs(lst)\
    \ do\n    sum = sum + math.ceil(v)^2\n  end\n  return sum\nend", "  local sum\
    \ = 0\n  for i = 1, #lst do\n    sum = sum + math.ceil(lst[i])^2\n  end\n  return\
    \ sum\nend", "  local sum = 0\n  for _, v in ipairs(lst) do\n    sum = sum + math.ceil(v)\
    \ ^ 2\n  end\n  return sum\nend", "  if type(lst) ~= 'table' then return 0 end\n\
    \  local out = 0\n  for _, v in ipairs(lst) do\n    out = out + math.ceil(v) ^\
    \ 2\n  end\n  return out\nend", "  local sum = 0\n  for _, num in ipairs(lst)\
    \ do\n    sum = sum + math.ceil(num) ^ 2\n  end\n  return sum\nend", "  -- your\
    \ code goes here\n  local result = 0\n  for _,v in ipairs(lst) do\n    result\
    \ = result + math.ceil(v)^2\n  end\n  return result\nend", "  local sum = 0\n\
    \  for i,v in ipairs(lst) do\n    sum = sum + math.ceil(v)^2\n  end\n  return\
    \ sum\nend", "  local sum = 0\n  for i = 1, #lst do\n    sum = sum + math.pow(math.ceil(lst[i]),\
    \ 2)\n  end\n  return sum\nend", "  local result = 0\n  for _, x in ipairs(lst)\
    \ do\n    result = result + math.ceil(x) ^ 2\n  end\n  return result\nend", " \
    \   local sum = 0\n    for _, v in ipairs(lst) do\n        local x = math.ceil(v)\n\
    \        sum = sum + x * x\n    end\n    return sum\nend", "  local sum = 0\n\
    \  for i, v in ipairs(lst) do\n    v = math.ceil(v)\n    sum = sum + v * v\n \
    \ end\n  return sum\nend", "  return lst and sum_squares(lst[2]) + (math.ceil(lst[1])\
    \ ^ 2) or 0\nend", "    return sum(map(function(x) return (x * x) end, lst))\n\
    end", "  local sum = 0\n  for _, i in ipairs(lst) do\n    sum = sum + math.ceil(i)^2\n\
    \  end\n  return sum\nend", "    local sum = 0\n    for _, x in ipairs(lst) do\n\
    \        sum = sum + math.ceil(x)^2\n    end\n    return sum\nend", "    return\
    \ sum(map(square, map(math.ceil, lst)))\nend", "  local sum = 0\n  for _, v in\
    \ ipairs(lst) do\n    sum = sum + math.ceil(v)^2\n  end\n  return sum\nend", " \
    \ local sum = 0\n  for i = 1, #lst do\n    sum = sum + math.ceil(lst[i])^2\n \
    \ end\n  return sum\nend", "  local sum = 0\n  for _, item in ipairs(lst) do\n\
    \    sum = sum + math.ceil(item) ^ 2\n  end\n  return sum\nend", "  local sum\
    \ = 0\n  for i = 1, #lst do\n    sum = sum + math.ceil(lst[i])^2\n  end\n  return\
    \ sum\nend", "    local sum = 0\n    for _, x in ipairs(lst) do\n        sum =\
    \ sum + math.ceil(x)^2\n    end\n    return sum\nend", "    local sum = 0\n  \
    \  for _, v in ipairs(lst) do\n        sum = sum + math.ceil(v)^2\n    end\n \
    \   return sum\nend", "  return sum(map(square, lst))\nend", "  local result =\
    \ 0\n  for i, num in ipairs(lst) do\n    result = result + math.pow(math.ceil(num),\
    \ 2)\n  end\n  return result\nend", "    local sum = 0\n    for i, v in ipairs(lst)\
    \ do\n        sum = sum + math.ceil(v) ^ 2\n    end\n    return sum\nend\nassert(sum_squares({1.0,\
    \ 2.0, 3.0}) == 14)\nassert(sum_squares({1.0, 4.0, 9.0}) == 98)\nassert(sum_squares({1.0,\
    \ 3.0, 5.0, 7.0}) == 84)\nassert(sum_squares({1.4, 4.2, 0.0}) == 29)\nassert(sum_squares({-2.4,\
    \ 1.0, 1.0}) == 6)", "  local sum = 0\n  for _, v in ipairs(lst) do\n    sum =\
    \ sum + math.ceil(v) ^ 2\n  end\n  return sum\nend", "  local sqr = function(x)\
    \ return x*x end\n  local sum = function(a, b) return a + b end\n  local ceil\
    \ = function(x) return math.ceil(x) end\n  local list = map(sqr, map(ceil, lst))\n\
    \  return foldl(sum, 0, list)\nend", "    return sum(map(lst, function(e) return\
    \ e^2 end))\nend", "    local squared = {}\n    for i, v in ipairs(lst) do\n \
    \       table.insert(squared, math.ceil(v) ^ 2)\n    end\n    return table.reduce(squared,\
    \ 0, function(sum, n) return sum + n end)\nend", "    local result = 0\n    for\
    \ _, val in ipairs(lst) do\n        result = result + math.ceil(val)^2\n    end\n\
    \    return result\nend", "\tsum=0\n\tfor _, num in ipairs(lst) do\n\t\tsum =\
    \ sum + math.ceil(num)^2\n\tend\n\treturn sum\nend", '    local result = 0', " \
    \   local sum = 0\n    for _,v in ipairs(lst) do\n        sum = sum + math.ceil(v)\
    \ ^ 2\n    end\n    return sum\nend", "  return\n    lst\n    :map(function(x)\
    \ return math.ceil(x) end)\n    :map(function(x) return x^2 end)\n    :reduce(function(a,b)\
    \ return a+b end)\nend", "    local sum = 0\n    for _, v in ipairs(lst) do\n\
    \        local v = math.ceil(v)\n        sum = sum + (v*v)\n    end\n    return\
    \ sum\nend", "    local sum = 0\n    for _, val in ipairs(lst) do\n        sum\
    \ = sum + math.ceil(val)^2\n    end\n    return sum\nend", "    local result =\
    \ 0\n    for i, v in ipairs(lst) do\n        result = result + math.floor(v) ^\
    \ 2\n    end\n    return result\nend", "    local total = 0\n    for i = 1, #lst\
    \ do\n        total = total + math.ceil(lst[i]) ^ 2\n    end\n    return total\n\
    end", "  local sum = 0\n  for _, v in ipairs(lst) do\n    sum = sum + math.ceil(v)^2\n\
    \  end\n  return sum\nend", "    return sum(map(lst, function(x) return x * x\
    \ end))\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    sum = sum +\
    \ (math.ceil(v) * math.ceil(v))\n  end\n  return sum\nend", "  sum = 0\n  for\
    \ k, v in pairs(lst) do\n    v = math.ceil(v)\n    sum = sum + v^2\n  end\n  return\
    \ sum\nend", "   return sum(map(math.ceil, lst), (function(acc, v)\n      return\
    \ acc + v * v\n   end), 0)\nend", "  local sum = 0\n  for _, number in ipairs(lst)\
    \ do\n    sum = sum + math.ceil(number) ^ 2\n  end\n  return sum\nend", "  local\
    \ sum = 0\n  for _, v in ipairs(lst) do\n    sum = sum + math.ceil(v)^2\n  end\n\
    \  return sum\nend", "  local total = 0\n  for _, v in ipairs(lst) do\n    total\
    \ = total + math.ceil(v) ^ 2\n  end\n  return total\nend", "  local sum = 0\n\
    \  for _, v in ipairs(lst) do\n    sum = sum + (math.ceil(v) * math.ceil(v))\n\
    \  end\n  return sum\nend", "\tlocal function square(x)\n\t\treturn x*x\n\tend\n\
    \tlocal function ceil(x)\n\t\treturn math.ceil(x)\n\tend\n\tlst = table.map(ceil,\
    \ lst)\n\tlst = table.map(square, lst)\n\treturn table.reduce(function(a, b) return\
    \ a + b end, 0, lst)\nend", '  local x = 0', "  local res = 0\n  for i, v in ipairs(lst)\
    \ do\n    res = res + math.ceil(v)^2\n  end\n  return res\nend", "    return lst:map(math.ceil):sum(math.pow)\n\
    end", "    local sum = 0\n    for _, n in ipairs(lst) do\n        sum = sum +\
    \ math.ceil(n)^2\n    end\n    return sum\nend", "  local sum = 0\n  for i = 1,\
    \ #lst do\n    sum = sum + math.ceil(lst[i]) ^ 2\n  end\n  return sum\nend", " \
    \   return 0\nend", "    local res = 0\n    for _, item in ipairs(lst) do\n  \
    \      res = res + (math.ceil(item) * math.ceil(item))\n    end\n    return res\n\
    end", "    local sum = 0\n    for _, n in ipairs(lst) do\n        sum = sum +\
    \ math.floor(n * n + 0.5)\n    end\n    return sum\nend", "  local result = 0\n\
    \  for i, v in ipairs(lst) do\n    result = result + math.ceil(v) ^ 2\n  end\n\
    \  return result\nend", "    local sum = 0\n    for i, v in ipairs(lst) do\n \
    \       sum = sum + math.ceil(v) ^ 2\n    end\n    return sum\nend", "  local\
    \ result = 0\n  for i = 1, #lst do\n    result = result + math.ceil(lst[i]) ^\
    \ 2\n  end\n  return result\nend", "    return nil\nend", "  return sum(map(lambda\
    \ 'x' \"math.ceil(x^2)\", lst))\nend", "  local result = 0\n  for _, v in ipairs(lst)\
    \ do\n    result = result + math.ceil(v) ^ 2\n  end\n  return result\nend", "\t\
    local rv = 0\n\tfor i = 1, #lst do\n\t\trv = rv + math.ceil(lst[i])^2\n\tend\n\
    \treturn rv\nend", "    local function ceil(x)\n        return math.ceil(x)\n\
    \    end\n    local function square(x)\n        return x * x\n    end\n    local\
    \ function sum(a, b)\n        return a + b\n    end\n    local function reduce(f,\
    \ arr, initial)\n        local acc = initial\n        for i, v in ipairs(arr)\
    \ do\n            acc = f(acc, v)\n        end\n        return acc\n    end\n\
    \    local result = reduce(sum, map(square, map(ceil, lst)), 0)\n    return result\n\
    end", '    local ret = 0', "    local sum = 0\n    for _, item in ipairs(lst)\
    \ do\n        sum = sum + math.pow(math.ceil(item), 2)\n    end\n    return sum\n\
    end", "  -- Write your code here\n  local sum = 0\n  for i = 1, #lst do\n    sum\
    \ = sum + math.ceil(lst[i]) ^ 2\n  end\n  return sum\nend", "  local s = 0\n \
    \ for _, v in ipairs(lst) do\n    local x = math.ceil(v)\n    s = s + x*x\n  end\n\
    \  return s\nend", "  local ret = 0\n  for i, v in ipairs(lst) do\n    local iv\
    \ = math.ceil(v)\n    ret = ret + iv * iv\n  end\n  return ret\nend", "    local\
    \ sum = 0\n    for _, n in ipairs(lst) do\n        sum = sum + math.ceil(n) ^\
    \ 2\n    end\n    return sum\nend", '    local sum = 0', "  local result = 0\n\
    \  for _, v in ipairs(lst) do\n    local v = math.ceil(v)\n    result = result\
    \ + v*v\n  end\n  return result\nend", "\tlocal res = 0\n\tfor _, v in ipairs(lst)\
    \ do\n\t\tres = res + math.ceil(v) ^ 2\n\tend\n\treturn res\nend", "    -- your\
    \ code here\n    local sum = 0\n    for i = 1, #lst do\n        sum = sum + math.ceil(lst[i])\
    \ ^ 2\n    end\n    return sum\nend", "  local sum = 0\n  for i, v in ipairs(lst)\
    \ do\n    sum = sum + math.ceil(v)^2\n  end\n  return sum\nend", "    local sum\
    \ = 0\n    for i,v in ipairs(lst) do\n        sum = sum + (math.ceil(v))^2\n \
    \   end\n    return sum\nend", "    -- your code here\nend", "   if #lst == 0\
    \ then\n      return 0\n   else\n      local res = 0\n      for i = 1, #lst do\n\
    \         res = res + math.ceil(lst[i]) ^ 2\n      end\n      return res\n   end\n\
    end", "  local sum = 0\n  for _, num in ipairs(lst) do\n    sum = sum + math.ceil(num)^2\n\
    \  end\n  return sum\nend", "  local sum = 0\n  for _, v in ipairs(lst) do\n \
    \   sum = sum + math.ceil(v) ^ 2\n  end\n  return sum\nend", "    local sum =\
    \ 0\n    for i, x in ipairs(lst) do\n        sum = sum + math.ceil(x)^2\n    end\n\
    \    return sum\nend\nassert(sum_squares({1.0, 2.0, 3.0}) == 14)\nassert(sum_squares({1.0,\
    \ 4.0, 9.0}) == 98)\nassert(sum_squares({1.0, 3.0, 5.0, 7.0}) == 84)\nassert(sum_squares({1.4,\
    \ 4.2, 0.0}) == 29)\nassert(sum_squares({-2.4, 1.0, 1.0}) == 6)", "    local res\
    \ = 0\n    for _, val in ipairs(lst) do\n        res = res + math.ceil(val) ^\
    \ 2\n    end\n    return res\nend", "  local sum = 0\n  for _, v in ipairs(lst)\
    \ do\n    sum = sum + math.ceil(v) ^ 2\n  end\n  return sum\nend", "    local\
    \ sum = 0\n    for _, el in ipairs(lst) do\n        local cur = math.ceil(el)\n\
    \        sum = sum + cur * cur\n    end\n    return sum\nend", "    return nil\n\
    end", "    local res = 0\n    for i = 1, #lst do\n        res = res + math.ceil(lst[i])^2\n\
    \    end\n    return res\nend", "    if #lst == 0 then\n        return 0\n   \
    \ end\n    local sum = 0\n    for i = 1, #lst do\n        sum = sum + math.ceil(lst[i])\
    \ ^ 2\n    end\n    return sum\nend", "    local sum = 0\n    for _, v in ipairs(lst)\
    \ do\n        sum = sum + math.ceil(v) ^ 2\n    end\n    return sum\nend", " \
    \   local sum = 0\n    for i = 1, #lst do\n        local sq = math.ceil(lst[i])\n\
    \        sum = sum + (sq * sq)\n    end\n    return sum\nend", "    return sum_squares_1(lst)\n\
    end", "  local lst_cloned = {}\n  for i, v in ipairs(lst) do\n    lst_cloned[i]\
    \ = math.ceil(v)\n  end\n  return table.reduce(lst_cloned, function(acc, v) return\
    \ acc + v * v end, 0)\nend", "  local result = 0\n  for _, v in ipairs(lst) do\n\
    \    result = result + math.ceil(v) ^ 2\n  end\n  return result\nend", "    local\
    \ square_sum = 0\n    for k, v in pairs(lst) do\n        local v = math.ceil(v)\n\
    \        square_sum = square_sum + v * v\n    end\n    return square_sum\nend",
  "  local result = 0\n  for i = 1, #lst do\n    result = result + math.ceil(lst[i])\
    \ ^ 2\n  end\n  return result\nend", "  -- your code here\n  local result = 0\n\
    \  for i = 1, #lst do\n    result = result + math.ceil(lst[i])^2\n  end\n  return\
    \ result\nend", "  local sum = 0\n  for _, v in ipairs(lst) do\n    sum = sum\
    \ + math.ceil(v) ^ 2\n  end\n  return sum\nend", "  local sum = 0\n  for i = 1,\
    \ #lst do\n    sum = sum + math.ceil(lst[i]) ^ 2\n  end\n  return sum\nend", " \
    \   local ret = 0\n    for _,v in ipairs(lst) do\n        ret = ret + math.ceil(v)^2\n\
    \    end\n    return ret\nend", "  -- check if the list is nil\n  if not lst then\n\
    \    return 0\n  end\n  local total = 0\n  for i = 1, #lst do\n    -- ceil the\
    \ number in list lst\n    local ceil = math.ceil(lst[i])\n    -- square the number\
    \ then add to total\n    total = total + ceil * ceil\n  end\n  return total\n\
    end", "    -- your code here\n    local result = 0\n    for k, v in pairs(lst)\
    \ do\n        result = result + math.ceil(v)^2\n    end\n    return result\nend",
  "    local sum = 0\n    for _, v in ipairs(lst) do\n        sum = sum + math.pow(math.ceil(v),\
    \ 2)\n    end\n    return sum\nend", "    local sum = 0\n    for _, num in ipairs(lst)\
    \ do\n        sum = sum + math.ceil(num)^2\n    end\n    return sum\nend", " \
    \ local sum = 0\n  for _, value in ipairs(lst) do\n    sum = sum + math.ceil(value)\
    \ ^ 2\n  end\n  return sum\nend", "\tlst = lst or {}\n\tlocal sum = 0\n\tfor _,\
    \ v in ipairs(lst) do\n\t\tsum = sum + math.pow(math.ceil(v), 2)\n\tend\n\treturn\
    \ sum\nend", "  local sum = 0\n  for i = 1, #lst do\n    local x = math.ceil(lst[i])\n\
    \    sum = sum + x * x\n  end\n  return sum\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

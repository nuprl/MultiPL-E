name: HumanEval_85_add
language: lua
prompt: "-- Given a non-empty table of integers lst. add the even elements that are\
  \ at odd indices..\n-- Examples:\n-- >>> add({4, 2, 6, 7})\n-- 2\nlocal function\
  \ add(lst)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = add\n\
  \    lu.assertEquals(candidate({4, 88}), 88)\n    lu.assertEquals(candidate({4,\
  \ 5, 6, 7, 2, 122}), 122)\n    lu.assertEquals(candidate({4, 0, 6, 7}), 0)\n   \
  \ lu.assertEquals(candidate({4, 4, 6, 8}), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local sum = 0\n  for i,v in ipairs(lst) do\n    if (v % 2 == 0) and\
    \ (i % 2 ~= 0) then\n      sum = sum + v\n    end\n  end\n  return sum\nend",
  "    local sum = 0\n    for i = 1, #lst do\n        if lst[i] % 2 == 0 and i % 2\
    \ ~= 0 then\n            sum = sum + lst[i]\n        end\n    end\n    return\
    \ sum\nend", "    local res = 0\n    for i = 1, #lst do\n        if lst[i] % 2\
    \ == 0 and i % 2 ~= 0 then\n            res = res + lst[i]\n        end\n    end\n\
    \    return res\nend", "  local sum = 0\n  for i = 1, #lst do\n    if lst[i] %\
    \ 2 == 0 and i % 2 ~= 0 then\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum\nend", "  local r = 0\n  for i = 1, #lst do\n    if (i % 2 == 1) and (lst[i]\
    \ % 2 == 0) then\n      r = r + lst[i]\n    end\n  end\n  return r\nend", "  \
    \  local sum = 0\n    for i, v in ipairs(lst) do\n        if i % 2 == 1 and v\
    \ % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\n\
    end", "  -- your solution here\nend", "  return lst[2] + lst[4]\nend", "\tlocal\
    \ sum = 0\n\tfor i = 1, #lst do\n\t\tif i % 2 == 1 and lst[i] % 2 == 0 then\n\t\
    \t\tsum = sum + lst[i]\n\t\tend\n\tend\n\treturn sum\nend", "\tlocal sum = 0\n\
    \tfor i, v in ipairs(lst) do\n\t\tif (i % 2 == 1) and (v % 2 == 0) then\n\t\t\t\
    sum = sum + v\n\t\tend\n\tend\n\treturn sum\nend", "  -- TODO\nend", "    local\
    \ sum = 0\n    for i = 1, #lst do\n        if (lst[i] % 2 == 0) and (i % 2 ~=\
    \ 0) then\n            sum = sum + lst[i]\n        end\n    end\n    return sum\n\
    end", "  local sum = 0\n  for i = 1, #lst do\n    if lst[i] % 2 == 0 and i % 2\
    \ ~= 0 then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend", " \
    \   local total = 0\n    for i, v in ipairs(lst) do\n        if i % 2 == 1 and\
    \ v % 2 == 0 then\n            total = total + v\n        end\n    end\n    return\
    \ total\nend", "    local sum = 0\n    for i,v in ipairs(lst) do\n        if i\
    \ % 2 == 1 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n\
    \    return sum\nend", "  local sum = 0\n  for k, v in ipairs(lst) do\n    if\
    \ v % 2 == 0 and k % 2 ~= 0 then\n      sum = sum + v\n    end\n  end\n  return\
    \ sum\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 1\
    \ and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend",
  "    local sum = 0\n    for k, v in ipairs(lst) do\n        if (k % 2 ~= 0) and\
    \ (v % 2 == 0) then\n            sum = sum + v\n        end\n    end\n    return\
    \ sum\nend", "  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 1 and lst[i]\
    \ % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend",
  "    local s = 0\n    for i,e in ipairs(lst) do\n        if (i % 2 ~= 0) and (e\
    \ % 2 == 0) then\n            s = s + e\n        end\n    end\n    return s\n\
    end", "   assert(type(lst) == \"table\")\n   local sum = 0\n   for i, elem in\
    \ ipairs(lst) do\n      if i % 2 == 1 and elem % 2 == 0 then\n         sum = sum\
    \ + elem\n      end\n   end\n   return sum\nend", "\tlocal sum = 0\n\tfor i, v\
    \ in ipairs(lst) do\n\t\tif (i % 2 ~= 0) and (v % 2 == 0) then\n\t\t\tsum = sum\
    \ + v\n\t\tend\n\tend\n\treturn sum\nend", "  if #lst > 0 then\n    return lst[2]\
    \ + lst[4] + lst[6]\n  end\nend", "  -- your code here\nend", "  -- Write your\
    \ code here\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 ~= 0 and lst[i]\
    \ % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend",
  "    local sum = 0\n    for i, v in ipairs(lst) do\n        if i % 2 == 1 and v\
    \ % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\n\
    end", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if v % 2 == 0 and i\
    \ % 2 ~= 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend", "  --\
    \ your code here\n  local sum = 0\n  for k,v in pairs(lst) do\n    if k % 2 ~=\
    \ 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend",
  "  local sum = 0\n  for i, v in ipairs(lst) do\n    if (i % 2 == 1) and (v % 2 ==\
    \ 0) then\n      sum = sum + v\n    end\n  end\n  return sum\nend", "    local\
    \ sum = 0\n    for k, v in ipairs(lst) do\n        if k % 2 == 1 and v % 2 ==\
    \ 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend",
  "  local x = 0\n  for i = 1, #lst do\n    if lst[i] % 2 == 0 and i % 2 ~= 0 then\n\
    \      x = x + lst[i]\n    end\n  end\n  return x\nend", "  local total = 0\n\
    \  for i, v in ipairs(lst) do\n    if v % 2 == 0 and i % 2 ~= 0 then\n      total\
    \ = total + v\n    end\n  end\n  return total\nend", "\tlocal sum = 0\n\tfor i,\
    \ v in ipairs(lst) do\n\t\tif v % 2 == 0 and i % 2 ~= 0 then\n\t\t\tsum = sum\
    \ + v\n\t\tend\n\tend\n\treturn sum\nend", "  local sum = 0\n  for i,v in ipairs(lst)\
    \ do\n    if i % 2 == 1 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend", "  -- REPLACE THE BODY OF THIS FUNCTION WITH YOUR OWN IMPLEMENTATION\n\
    \  return 0\nend", "  -- your solution here\nend", "\tlocal res = 0\n\tlocal i\
    \ = 1\n\tfor _, v in ipairs(lst) do\n\t\tif i % 2 == 1 and v % 2 == 0 then\n\t\
    \t\tres = res + v\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn res\nend", "  local\
    \ sum = 0\n  for i,v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n\
    \      sum = sum + v\n    end\n  end\n  return sum\nend", "  -- TODO\nend", " \
    \   return sum(comp(isEven, isOddIndex, list_filtered_list(lst)))\nend", "  local\
    \ sum = 0\n  for i, v in ipairs(lst) do\n    if math.fmod(i, 2) == 1 and math.fmod(v,\
    \ 2) == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend", "  return\
    \ (nth_even(lst, 1)\n    + nth_even(lst, 3)\n    + nth_even(lst, 5)\n    + nth_even(lst,\
    \ 7)\n    + nth_even(lst, 9))\nend", "  local res = 0\n  for i, v in ipairs(lst)\
    \ do\n    if v % 2 == 0 and i % 2 ~= 0 then\n      res = res + v\n    end\n  end\n\
    \  return res\nend", "    local t = 0\n    for k, v in ipairs(lst) do\n      \
    \  if k % 2 == 1 and v % 2 == 0 then\n            t = t + v\n        end\n   \
    \ end\n    return t\nend", "    -- TODO: solve it\nend", "  local res = 0\n  for\
    \ i, v in ipairs(lst) do\n    if not i % 2 == 0 and v % 2 == 0 then\n      res\
    \ = res + v\n    end\n  end\n  return res\nend", "  local r = 0\n  for k, v in\
    \ ipairs(lst) do\n    if k % 2 == 1 and v % 2 == 0 then\n      r = r + v\n   \
    \ end\n  end\n  return r\nend", "  local i, sum = 1, 0\n  while lst[i] do\n  \
    \  if i % 2 == 1 and lst[i] % 2 == 0 then\n      sum = sum + lst[i]\n    end\n\
    \    i = i + 1\n  end\n  return sum\nend", "    local result = 0\n    for index,\
    \ number in ipairs(lst) do\n        if index % 2 == 1 and number % 2 == 0 then\n\
    \            result = result + number\n        end\n    end\n    return result\n\
    end", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 1 and v\
    \ % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend", "  local\
    \ sum = 0\n  for i, num in ipairs(lst) do\n    if i % 2 == 1 and num % 2 == 0\
    \ then\n      sum = sum + num\n    end\n  end\n  return sum\nend", "  local sum\
    \ = 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n \
    \     sum = sum + v\n    end\n  end\n  return sum\nend\nadd({4, 2, 6, 7})", "\t\
    local sum = 0\n\tfor i, v in ipairs(lst) do\n\t\tif (i % 2 ~= 0) and (v % 2 ==\
    \ 0) then\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\nend", "    if lst[2]\
    \ then\n        return lst[2] + add({select(3, unpack(lst))})\n    else\n    \
    \    return 0\n    end\nend", "  -- your code here\nend", "  local acc = 0\n \
    \ for i, n in ipairs(lst) do\n    if i % 2 == 1 and n % 2 == 0 then\n      acc\
    \ = acc + n\n    end\n  end\n  return acc\nend", "  local sum = 0\n  for i, v\
    \ in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n      sum = sum +\
    \ v\n    end\n  end\n  return sum\nend", "    local sum = 0\n    for i = 1, #lst\
    \ do\n        if i % 2 == 1 and lst[i] % 2 == 0 then\n            sum = sum +\
    \ lst[i]\n        end\n    end\n    return sum\nend", "   local sum = 0\n   for\
    \ i, v in ipairs(lst) do\n      if i % 2 == 1 and v % 2 == 0 then\n         sum\
    \ = sum + v\n      end\n   end\n   return sum\nend", "  -- your code here\n  local\
    \ sum = 0\n  for i = 1, #lst do\n    if lst[i] % 2 == 0 and i % 2 ~= 0 then\n\
    \      sum = sum + lst[i]\n    end\n  end\n  return sum\nend", "  local sum =\
    \ 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n   \
    \   sum = sum + v\n    end\n  end\n  return sum\nend", "\tlocal sum = 0\n\tfor\
    \ k, v in ipairs(lst) do\n\t\tif v % 2 == 0 and k % 2 ~= 0 then\n\t\t\tsum = sum\
    \ + v\n\t\tend\n\tend\n\treturn sum\nend", "    local sum = 0\n    for i, v in\
    \ ipairs(lst) do\n        if i % 2 == 1 and v % 2 == 0 then\n            sum =\
    \ sum + v\n        end\n    end\n    return sum\nend", "   local s = 0\n   for\
    \ i,v in ipairs(lst) do\n      if (i % 2 == 1) and (v % 2 == 0) then\n       \
    \  s = s + v\n      end\n   end\n   return s\nend", "  local index = 1\n  local\
    \ ret = 0\n  for _, num in ipairs(lst) do\n    if index % 2 == 1 and num % 2 ==\
    \ 0 then\n      ret = ret + num\n    end\n    index = index + 1\n  end\n  return\
    \ ret\nend", "  local sum = 0\n  for i,v in ipairs(lst) do\n    if i % 2 == 1\
    \ and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend",
  '    -- TODO: Write your code here', "  local res = 0\n  for i, v in ipairs(lst)\
    \ do\n    if (v % 2 == 0) and (i % 2 ~= 0) then\n      res = res + v\n    end\n\
    \  end\n  return res\nend", "  local acc = 0\n  for i, v in ipairs(lst) do\n \
    \   if is_even(i) and is_even(v) then\n      acc = acc + v\n    end\n  end\n \
    \ return acc\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if i %\
    \ 2 == 1 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\n\
    end", "  -- do something\nend", "  local res = 0\n  for i, v in ipairs(lst) do\n\
    \    if i % 2 == 1 and v % 2 == 0 then\n      res = res + v\n    end\n  end\n\
    \  return res\nend", "  local result = 0\n  for i,v in ipairs(lst) do\n    if\
    \ i % 2 == 1 and v % 2 == 0 then\n      result = result + v\n    end\n  end\n\
    \  return result\nend", "    local res = 0\n    for i, v in ipairs(lst) do\n \
    \       if (v % 2 == 0) and (i % 2 ~= 0) then\n            res = res + v\n   \
    \     end\n    end\n    return res\nend", "    local sum = 0\n    for i = 1, #lst\
    \ do\n        if i % 2 == 1 and lst[i] % 2 == 0 then\n            sum = sum +\
    \ lst[i]\n        end\n    end\n    return sum\nend", "    -- you code here!\n\
    \    local sum = 0\n    for i,v in ipairs(lst) do\n        if i % 2 ~= 0 and v\
    \ % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\n\
    end\nadd({4, 2, 6, 7}) --> 2", "    local sum = 0\n    for i, v in ipairs(lst)\
    \ do\n        if i % 2 == 1 and v % 2 == 0 then\n            sum = sum + v\n \
    \       end\n    end\n    return sum\nend", "  local sum = 0\n  for k, v in ipairs(lst)\
    \ do\n    if k % 2 == 1 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if i\
    \ % 2 == 1 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return\
    \ sum\nend", "  local sum = 0\n  for i = 1, #lst do\n    if lst[i] % 2 == 0 and\
    \ i % 2 ~= 0 then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend",
  "  local result = 0\n  for i,x in ipairs(lst) do\n    if (i % 2 == 1) and (x % 2\
    \ == 0) then\n      result = result + x\n    end\n  end\n  return result\nend",
  "    local result = 0\n    for index, element in ipairs(lst) do\n        if index\
    \ % 2 == 1 and element % 2 == 0 then\n            result = result + element\n\
    \        end\n    end\n    return result\nend", "  local res = 0\n  for i, v in\
    \ ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n      res = res + v\n\
    \    end\n  end\n  return res\nend", "    -- write your code here\n    local sum\
    \ = 0\n    for i = 1, #lst do\n        if i % 2 ~= 0 and lst[i] % 2 == 0 then\n\
    \            sum = sum + lst[i]\n        end\n    end\n    return sum\nend", " \
    \ local sum = 0\n  for k, v in ipairs(lst) do\n    if k % 2 == 1 and v % 2 ==\
    \ 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nassert_equal(2,\
    \ add({4, 2, 6, 7}))\nassert_equal(0, add({3, 1, 4, 7}))\nassert_equal(0, add({}))\n\
    assert_equal(0, add({1}))\nassert_equal(0, add({2}))\nassert_equal(2, add({2,\
    \ 1}))\nassert_equal(2, add({1, 2}))\nassert_equal(6, add({1, 2, 3, 4}))\nassert_equal(16,\
    \ add({1, 2, 3, 4, 5, 6, 7, 8}))\nassert_equal(72, add({1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16}))\nassert_equal(2, add({2, 1, 1, 1, 2, 1, 1,\
    \ 1, 2, 1, 1, 1, 2, 1, 1, 1}))\nassert_equal(10, add({2, 1, 1, 1, 2, 1, 1, 1,\
    \ 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 3, 4}))\nassert_equal(2, add({2, 1, 1, 1, 2, 1,\
    \ 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 3, 4, 4}))\nassert_equal(0, add({1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}))\nassert_equal(0, add({1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2}))", "  local result\
    \ = 0\n  for i,v in ipairs(lst) do\n    if v % 2 == 0 and i % 2 ~= 0 then\n  \
    \    result = result + v\n    end\n  end\n  return result\nend", "    local sum\
    \ = 0\n    for k, v in ipairs(lst) do\n        if k % 2 == 1 and v % 2 == 0 then\n\
    \            sum = sum + v\n        end\n    end\n    return sum\nend", "  --local\
    \ n = 0\n  --for i = 1, #lst do\n  --  if lst[i] % 2 == 0 and i % 2 ~= 0 then\n\
    \  --    n = n + lst[i]\n  --  end\n  --end\n  --return n\n  local t = table.filter(lst,\
    \ function(v, i) return v % 2 == 0 and i % 2 ~= 0 end)\n  return table.reduce(t,\
    \ function(a, b) return a + b end)\nend", "    return _\nend", "    local sum\
    \ = 0\n    for i = 1, #lst do\n        if i % 2 == 1 and lst[i] % 2 == 0 then\n\
    \            sum = sum + lst[i]\n        end\n    end\n    return sum\nend", " \
    \ local t = {}\n  for i, v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0\
    \ then\n      table.insert(t, v)\n    end\n  end\n  return table.reduce(t, function(a,\
    \ b) return a + b end)\nend", "  error(\"TODO: add\")\nend", "  local sum = 0\n\
    \  for k, v in ipairs(lst) do\n    if k % 2 == 1 and v % 2 == 0 then\n      sum\
    \ = sum + v\n    end\n  end\n  return sum\nend", "    local sum = 0\n    for k,\
    \ v in ipairs(lst) do\n        if k % 2 == 1 and v % 2 == 0 then\n           \
    \ sum = sum + v\n        end\n    end\n    return sum\nend", "    -- TODO: Write\
    \ your code here\n    local sum = 0\n    for i = 1, #lst do\n        if i % 2\
    \ ~= 0 and lst[i] % 2 == 0 then\n            sum = sum + lst[i]\n        end\n\
    \    end\n    return sum\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n\
    \    if (v % 2 == 0) and (i % 2 ~= 0) then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend", "    local sum = 0\n    for i, v in ipairs(lst) do\n    \
    \    if v % 2 == 0 and i % 2 ~= 0 then\n            sum = sum + v\n        end\n\
    \    end\n    return sum\nend", "    -- TODO\nend", "    local total = 0\n   \
    \ for i, v in ipairs(lst) do\n        if i % 2 == 1 and v % 2 == 0 then\n    \
    \        total = total + v\n        end\n    end\n    return total\nend", "  local\
    \ sum = 0\n  for i,v in ipairs(lst) do\n    if v % 2 == 0 and i % 2 ~= 0 then\n\
    \      sum = sum + v\n    end\n  end\n  return sum\nend", "  local res = 0\n \
    \ for i = 1, #lst do\n    if lst[i] % 2 == 0 and i % 2 ~= 0 then\n      res =\
    \ res + lst[i]\n    end\n  end\n  return res\nend", "  local s = 0\n  for i, e\
    \ in ipairs(lst) do\n    if i % 2 == 1 and e % 2 == 0 then\n      s = s + e\n\
    \    end\n  end\n  return s\nend", "  local sum = 0\n  for k, v in ipairs(lst)\
    \ do\n    if k % 2 == 1 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend", "  local res = 0\n  for i = 1, #lst do\n    if i % 2 == 1\
    \ and lst[i] % 2 == 0 then\n      res = res + lst[i]\n    end\n  end\n  return\
    \ res\nend", "    local sum = 0\n    for i, v in ipairs(lst) do\n        if i\
    \ % 2 == 1 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n\
    \    return sum\nend", "   local sum = 0\n   for i, v in ipairs(lst) do\n    \
    \  if v % 2 == 0 and i % 2 ~= 0 then\n         sum = sum + v\n      end\n   end\n\
    \   return sum\nend", "  local evens = filter(lst, is_even)\n  local indices =\
    \ filter(odd_indices(lst), \n                         function(el) return elem(el,\
    \ evens) end)\n  return reduce(indices, \n                function(acc, el) return\
    \ acc + el end, \n                0)\nend", "  local sum = 0\n  for k, v in ipairs(lst)\
    \ do\n    if k % 2 == 1 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend", "    local num = 0\n    for i, v in ipairs(lst) do\n    \
    \    if (i % 2 == 1) and (v % 2 == 0) then\n            num = num + v\n      \
    \  end\n    end\n    return num\nend", "    --TODO;\nend", "  local a = 0\n  for\
    \ i,v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n      a = a +\
    \ v\n    end\n  end\n  return a\nend", "    result = 0\n    for index, value in\
    \ ipairs(lst) do\n        if (index % 2 ~= 0) and (value % 2 == 0) then\n    \
    \        result = result + value\n        end\n    end\n    return result\nend",
  "  local res = 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0\
    \ then\n      res = res + v\n    end\n  end\n  return res\nend", "  -- TODO: implement\
    \ the function\nend", "    local result = 0\n    for i, v in ipairs(lst) do\n\
    \        if (i % 2 == 1) and (v % 2 == 0) then\n            result = result +\
    \ v\n        end\n    end\n    return result\nend", "  local sum = 0\n  for i,\
    \ v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n      sum = sum\
    \ + v\n    end\n  end\n  return sum\nend", "    local result = 0\n    for i =\
    \ 1, #lst do\n        if lst[i] % 2 == 0 and i % 2 ~= 0 then\n            result\
    \ = result + lst[i]\n        end\n    end\n    return result\nend", "  -- Insert\
    \ your code here\n  sum = 0\n  for i = 1, #lst do\n    if lst[i] % 2 == 0 and\
    \ i % 2 ~= 0 then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend",
  "  return sum(filter(lst, function(x) return x % 2 == 0 end, 1, 2))\nend", "  local\
    \ sum = 0\n  for i,v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n\
    \      sum = sum + v\n    end\n  end\n  return sum\nend", "  return lst.filter(function(v,\
    \ i) return v % 2 == 0 and i % 2 == 1 end).reduce(function(a, b) return a + b\
    \ end)\nend", "  local sum = 0\n  for i,x in ipairs(lst) do\n    if i % 2 == 1\
    \ and x % 2 == 0 then\n      sum = sum + x\n    end\n  end\n  return sum\nend",
  "  local result = 0\n  for i = 1, #lst do\n    if i % 2 == 1 and lst[i] % 2 == 0\
    \ then\n      result = result + lst[i]\n    end\n  end\n  return result\nend",
  "    assert(type(lst) == \"table\", \"add: wrong argument types (<table> expected)\"\
    )\n    local sum = 0\n    for i, v in ipairs(lst) do\n        if i % 2 == 1 and\
    \ v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return\
    \ sum\nend", "  local sum = 0\n  for i = 1, #lst do\n    if (lst[i] % 2 == 0)\
    \ and (i % 2 ~= 0) then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\n\
    end", "    local total = 0\n    for i, v in ipairs(lst) do\n        if i % 2 ==\
    \ 1 and v % 2 == 0 then\n            total = total + v\n        end\n    end\n\
    \    return total\nend", "  local res = 0\n  for i, v in ipairs(lst) do\n    if\
    \ i % 2 == 1 and v % 2 == 0 then\n      res = res + v\n    end\n  end\n  return\
    \ res\nend", "  local sum = 0\n  for k, v in ipairs(lst) do\n    if k % 2 == 1\
    \ and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend",
  "  local sum = 0\n  for i, j in ipairs(lst) do\n    if i % 2 == 1 and j % 2 == 0\
    \ then\n      sum = sum + j\n    end\n  end\n  return sum\nend", "  if #lst ==\
    \ 0 then return 0 end\n  local t = 0\n  for i, v in ipairs(lst) do\n    if i %\
    \ 2 == 1 and v % 2 == 0 then\n      t = t + v\n    end\n  end\n  return t\nend",
  "  -- write your code here\n  if #lst == 0 then return end\n  return lst[2] + add(sub(lst,\
    \ 2))\nend", "    -- TODO: add code here\nend", "  local even = 0\n  for i = 1,\
    \ #lst do\n    if (i % 2 ~= 0) and (lst[i] % 2 == 0) then\n      even = even +\
    \ lst[i]\n    end\n  end\n  return even\nend", "  local result = 0\n  for i, v\
    \ in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n      result = result\
    \ + v\n    end\n  end\n  return result\nend", "\tassert(type(lst) == \"table\"\
    , \"add: bad argument #1 to 'add' (table expected, got \" .. type(lst) .. \")\"\
    )\n\tlocal sum = 0\n\tfor i, val in ipairs(lst) do\n\t\tif ((i % 2) ~= 0) and\
    \ ((val % 2) == 0) then\n\t\t\tsum = sum + val\n\t\tend\n\tend\n\treturn sum\n\
    end", "    -- TODO: implement add function to solve problem.\n    local sum =\
    \ 0\n    for i, v in ipairs(lst) do\n        if i % 2 ~= 0 and v % 2 == 0 then\n\
    \            sum = sum + v\n        end\n    end\n    return sum\nend", "\tlocal\
    \ result = 0\n\tfor i, v in ipairs(lst) do\n\t\tif i % 2 == 1 and v % 2 == 0 then\n\
    \t\t\tresult = result + v\n\t\tend\n\tend\n\treturn result\nend", "  -- your code\
    \ here\nend", "    local res = 0\n    for i, el in ipairs(lst) do\n        if\
    \ i % 2 == 1 and el % 2 == 0 then\n            res = res + el\n        end\n \
    \   end\n    return res\nend", "    local sum = 0\n    for i = 1, #lst do\n  \
    \      if i % 2 == 1 and lst[i] % 2 == 0 then\n            sum = sum + lst[i]\n\
    \        end\n    end\n    return sum\nend", "    return lst\nend", "  local res\
    \ = 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n \
    \     res = res + v\n    end\n  end\n  return res\nend", "    local i = 0\n  \
    \  local sum = 0\n    for _, elem in ipairs(lst) do\n        i = i + 1\n     \
    \   if (elem % 2 == 0) and (i % 2 ~= 0) then\n            sum = sum + elem\n \
    \       end\n    end\n    return sum\nend", "    local res = 0\n    for i, v in\
    \ ipairs(lst) do\n        if i % 2 == 1 and v % 2 == 0 then\n            res =\
    \ res + v\n        end\n    end\n    return res\nend", "  local sum = 0\n  for\
    \ i, v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n      sum = sum\
    \ + v\n    end\n  end\n  return sum\nend", "  -- your code here\nend", "  if not\
    \ lst or #lst == 0 then\n    return nil\n  end\n  local sum = 0\n  for i,v in\
    \ ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n      sum = sum + v\n\
    \    end\n  end\n  return sum\nend", "\tassert(type(lst) == \"table\")\n\tassert(#lst\
    \ > 0)\n\t\n\tlocal tot = 0\n\tfor i = 1, #lst do\n\t\tif (i % 2 == 1) and (lst[i]\
    \ % 2 == 0) then\n\t\t\ttot = tot + lst[i]\n\t\tend\n\tend\n\treturn tot\nend",
  "  assert(type(lst) == \"table\", \"first argument is not a table\")\n  local t\
    \ = {}\n  for i, v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n\
    \      table.insert(t, v)\n    end\n  end\n  local sum = 0\n  for i, v in ipairs(t)\
    \ do\n    sum = sum + v\n  end\n  return sum\nend", "    local sum = 0\n    for\
    \ i = 1, #lst do\n        if i % 2 == 1 and lst[i] % 2 == 0 then\n           \
    \ sum = sum + lst[i]\n        end\n    end\n    return sum\nend", "    local sum\
    \ = 0\n    for i, v in ipairs(lst) do\n        if (v % 2 == 0) and (i % 2 ~= 0)\
    \ then\n            sum = sum + v\n        end\n    end\n    return sum\nend",
  "  local sum = 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0\
    \ then\n      sum = sum + v\n    end\n  end\n  return sum\nend", "  local res\
    \ = 0\n  for i = 1, #lst do\n    if lst[i] % 2 == 0 and i % 2 ~= 0 then\n    \
    \  res = res + lst[i]\n    end\n  end\n  return res\nend", "  local res = 0\n\
    \  for i = 1, #lst do\n    if i % 2 == 1 and lst[i] % 2 == 0 then\n      res =\
    \ res + lst[i]\n    end\n  end\n  return res\nend", "    local sum = 0\n    for\
    \ i, v in ipairs(lst) do\n        if i % 2 == 1 and v % 2 == 0 then\n        \
    \    sum = sum + v\n        end\n    end\n    return sum\nend", "  local acc =\
    \ 0\n  for i = 1, #lst do\n    if lst[i] % 2 == 0 and i % 2 ~= 0 then\n      acc\
    \ = acc + lst[i]\n    end\n  end\n  return acc\nend", "    local sum = 0\n   \
    \ for i, v in ipairs(lst) do\n        if (i % 2 ~= 0) and (v % 2 == 0) then\n\
    \            sum = sum + v\n        end\n    end\n    return sum\nend", "  return\
    \ reduce(lambda(\"x y -> x + y\"), filter(lambda(\"x -> (x mod 2) = 0\"), lst))\n\
    end", "  local res = 0\n  for i, v in ipairs(lst) do\n    if (i % 2 ~= 0) and\
    \ (v % 2 == 0) then\n      res = res + v\n    end\n  end\n  return res\nend\n\
    print(add({4, 2, 6, 7}))", "    local sum = 0\n    for i = 1, #lst do\n      \
    \  if (lst[i] % 2 == 0) and (i % 2 ~= 0) then\n            sum = sum + lst[i]\n\
    \        end\n    end\n    return sum\nend", "  local total = 0\n  for i, v in\
    \ ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n      total = total +\
    \ v\n    end\n  end\n  return total\nend", "  -- Write your code here.\n  -- In\
    \ case of a table, the function signature would be:\n  -- add(lst: table): number\n\
    \  local sum = 0\n  for k, v in pairs(lst) do\n    if k % 2 ~= 0 and v % 2 ==\
    \ 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend", "    local\
    \ sum = 0\n    for i,v in ipairs(lst) do\n        if (v % 2 == 0) and (i % 2 ~=\
    \ 0) then\n            sum = sum + v\n        end\n    end\n    return sum\nend",
  "  local sum = 0\n  for i,v in ipairs(lst) do\n    if math.fmod(i, 2) == 1 and math.fmod(v,\
    \ 2) == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend", "   \
    \ local sum = 0\n    for i,v in ipairs(lst) do\n        if i % 2 == 1 and v %\
    \ 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\n\
    end", "    local sum = 0\n    for i, v in ipairs(lst) do\n        if i % 2 ==\
    \ 1 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n   \
    \ return sum\nend", "\tlocal total = 0\n\tfor i, v in ipairs(lst) do\n\t\tif i\
    \ % 2 == 1 and v % 2 == 0 then\n\t\t\ttotal = total + v\n\t\tend\n\tend\n\treturn\
    \ total\nend", "    return table.sum(table.map(lst, function(e, i) if i % 2 ==\
    \ 1 and e % 2 == 0 then return e end end))\nend", "  return lst\nend", "  -- TODO:\
    \ implement this function\nend", "    -- your code here\n    local ans = 0\n \
    \   for key, val in pairs(lst) do\n        if val % 2 == 0 and key % 2 ~= 0 then\n\
    \            ans = ans + val\n        end\n    end\n    return ans\nend", "  local\
    \ i = 2\n  local total = 0\n  while i <= #lst do\n    if lst[i] % 2 == 0 then\n\
    \      total = total + lst[i]\n    end\n    i = i + 2\n  end\n  return total\n\
    end", "  \nend", "\tlocal i, sum = 0, 0\n\twhile i < #lst do\n\t\tif lst[i] %\
    \ 2 == 0 then\n\t\t\tsum = sum + lst[i]\n\t\tend\n\t\ti = i + 2\n\tend\n\treturn\
    \ sum\nend", "    local output = 0\n    for i, v in ipairs(lst) do\n        if\
    \ i % 2 == 1 and v % 2 == 0 then\n            output = output + v\n        end\n\
    \    end\n    return output\nend", "  local sum = 0\n  for i = 1, #lst do\n  \
    \  if (lst[i] % 2 == 0) and (i % 2 ~= 0) then\n      sum = sum + lst[i]\n    end\n\
    \  end\n  return sum\nend", "  local sum = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ % 2 == 0 and i % 2 ~= 0 then\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if (v % 2 ==\
    \ 0) and (i % 2 ~= 0) then\n      sum = sum + v\n    end\n  end\n  return sum\n\
    end", "    local sum = 0\n    for i = 1, #lst do\n        if i % 2 == 1 and lst[i]\
    \ % 2 == 0 then\n            sum = sum + lst[i]\n        end\n    end\n    return\
    \ sum\nend", "    local result = 0\n    for i = 1, #lst do\n        if i % 2 ==\
    \ 1 and lst[i] % 2 == 0 then\n            result = result + lst[i]\n        end\n\
    \    end\n    return result\nend", "  local res = 0\n  for i, v in ipairs(lst)\
    \ do\n    if i % 2 == 1 and v % 2 == 0 then\n      res = res + v\n    end\n  end\n\
    \  return res\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if (i\
    \ % 2 ~= 0) and (v % 2 == 0) then\n      sum = sum + v\n    end\n  end\n  return\
    \ sum\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if v % 2 == 0\
    \ and i % 2 ~= 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend",
  "    local sum = 0\n    for i = 1, #lst do\n        if lst[i] % 2 == 0 and i % 2\
    \ ~= 0 then\n            sum = sum + lst[i]\n        end\n    end\n    return\
    \ sum\nend", "  return reduce(function(a, b) return a + b end, lst, 0)\nend",
  "    -- YOUR CODE HERE\n    local result = 0\n    for i = 1, #lst do\n        if\
    \ i % 2 == 1 and lst[i] % 2 == 0 then\n            result = result + lst[i]\n\
    \        end\n    end\n    return result\nend", "  -- your code here\nend", " \
    \  return reduce(lambda('n, acc -> if n % 2 == 0 then acc + n else acc end'),\
    \ 0, lst)\nend", "    local sum = 0\n    for i,x in ipairs(lst) do\n        if\
    \ i % 2 == 1 and x % 2 == 0 then\n            sum = sum + x\n        end\n   \
    \ end\n    return sum\nend\nassert_equal(2, add({4, 2, 6, 7}))\nassert_equal(4,\
    \ add({4, 2, 3, 6, 7}))\nassert_equal(20, add({4, 2, 3, 6, 7, 4, 6, 8, 4, 2, 6,\
    \ 7}))\nassert_equal(0, add({1, 3, 5, 7}))\nassert_equal(0, add({2, 4, 6, 8}))",
  "  local s = 0\n  for i = 1, #lst do\n    if lst[i] % 2 == 0 and i % 2 ~= 0 then\n\
    \      s = s + lst[i]\n    end\n  end\n  return s\nend", "  local sum = 0\n  for\
    \ i,v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n      sum = sum\
    \ + v\n    end\n  end\n  return sum\nend", "    local sum = 0\n    for k, v in\
    \ ipairs(lst) do\n        if k % 2 == 1 and v % 2 == 0 then\n            sum =\
    \ sum + v\n        end\n    end\n    return sum\nend", "\tlocal sum = 0\n\tfor\
    \ i, v in ipairs(lst) do\n\t\tif v % 2 == 0 and i % 2 ~= 0 then\n\t\t\tsum = sum\
    \ + v\n\t\tend\n\tend\n\treturn sum\nend", "  local result = 0\n  for k, v in\
    \ ipairs(lst) do\n    if (v % 2 == 0) and (k % 2 ~= 0) then\n      result = result\
    \ + v\n    end\n  end\n  return result\nend", "  -- initializing sum to 0\n  local\
    \ sum = 0\n  -- checking if lst is an array\n  if (#lst) == 0 then\n    -- initializing\
    \ i to 1\n    local i = 1\n    -- looping over lst\n    for i=1,#lst do\n    \
    \  --checking if i is odd and lst[i] is even\n      if math.fmod(i,2) ~= 0 and\
    \ math.fmod(lst[i],2) == 0 then\n        --sum = sum + lst[i]\n        sum = sum\
    \ + lst[i]\n      end\n    end\n  end\n  -- returning sum\n  return sum\nend",
  "  local s = 0\n  for i,v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n\
    \      s = s + v\n    end\n  end\n  return s\nend", "  local sum = 0\n  for i,\
    \ v in ipairs(lst) do\n    if (i % 2 == 1) and (v % 2 == 0) then\n      sum =\
    \ sum + v\n    end\n  end\n  return sum\nend", "  local sum = 0\n  for i, v in\
    \ ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n      sum = sum + v\n\
    \    end\n  end\n  return sum\nend", "  local result = 0\n  for i, n in ipairs(lst)\
    \ do\n    if n % 2 == 0 and i % 2 ~= 0 then\n      result = result + n\n    end\n\
    \  end\n  return result\nend", "  local i = 2\n  local sum = 0\n  while i <= #lst\
    \ do\n    sum = sum + lst[i]\n    i = i + 2\n  end\n  return sum\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

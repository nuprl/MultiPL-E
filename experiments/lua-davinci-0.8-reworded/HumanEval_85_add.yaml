name: HumanEval_85_add
language: lua
prompt: "-- Given a non-empty table of integers lst. add the even elements that are\
  \ at odd indices..\n-- Examples:\n-- >>> add({4, 2, 6, 7})\n-- 2\nlocal function\
  \ add(lst)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = add\n\
  \    lu.assertEquals(candidate({4, 88}), 88)\n    lu.assertEquals(candidate({4,\
  \ 5, 6, 7, 2, 122}), 122)\n    lu.assertEquals(candidate({4, 0, 6, 7}), 0)\n   \
  \ lu.assertEquals(candidate({4, 4, 6, 8}), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local sum = 0\n  for i,v in ipairs(lst) do\n    if (v % 2 == 0) and\
    \ (i % 2 ~= 0) then\n      sum = sum + v\n    end\n  end\n  return sum\nend",
  "    local sum = 0\n    for i = 1, #lst do\n        if lst[i] % 2 == 0 and i % 2\
    \ ~= 0 then\n            sum = sum + lst[i]\n        end\n    end\n    return\
    \ sum\nend", "    local res = 0\n    for i = 1, #lst do\n        if lst[i] % 2\
    \ == 0 and i % 2 ~= 0 then\n            res = res + lst[i]\n        end\n    end\n\
    \    return res\nend", "  local sum = 0\n  for i = 1, #lst do\n    if lst[i] %\
    \ 2 == 0 and i % 2 ~= 0 then\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum\nend", "  local r = 0\n  for i = 1, #lst do\n    if (i % 2 == 1) and (lst[i]\
    \ % 2 == 0) then\n      r = r + lst[i]\n    end\n  end\n  return r\nend", "  \
    \  local sum = 0\n    for i, v in ipairs(lst) do\n        if i % 2 == 1 and v\
    \ % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\n\
    end", "  -- your solution here\nend", "  return lst[2] + lst[4]\nend", "\tlocal\
    \ sum = 0\n\tfor i = 1, #lst do\n\t\tif i % 2 == 1 and lst[i] % 2 == 0 then\n\t\
    \t\tsum = sum + lst[i]\n\t\tend\n\tend\n\treturn sum\nend", "\tlocal sum = 0\n\
    \tfor i, v in ipairs(lst) do\n\t\tif (i % 2 == 1) and (v % 2 == 0) then\n\t\t\t\
    sum = sum + v\n\t\tend\n\tend\n\treturn sum\nend", "  -- TODO\nend", "    local\
    \ sum = 0\n    for i = 1, #lst do\n        if (lst[i] % 2 == 0) and (i % 2 ~=\
    \ 0) then\n            sum = sum + lst[i]\n        end\n    end\n    return sum\n\
    end", "  local sum = 0\n  for i = 1, #lst do\n    if lst[i] % 2 == 0 and i % 2\
    \ ~= 0 then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend", " \
    \   local total = 0\n    for i, v in ipairs(lst) do\n        if i % 2 == 1 and\
    \ v % 2 == 0 then\n            total = total + v\n        end\n    end\n    return\
    \ total\nend", "    local sum = 0\n    for i,v in ipairs(lst) do\n        if i\
    \ % 2 == 1 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n\
    \    return sum\nend", "  local sum = 0\n  for k, v in ipairs(lst) do\n    if\
    \ v % 2 == 0 and k % 2 ~= 0 then\n      sum = sum + v\n    end\n  end\n  return\
    \ sum\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 1\
    \ and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend",
  "    local sum = 0\n    for k, v in ipairs(lst) do\n        if (k % 2 ~= 0) and\
    \ (v % 2 == 0) then\n            sum = sum + v\n        end\n    end\n    return\
    \ sum\nend", "  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 1 and lst[i]\
    \ % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend",
  "    local s = 0\n    for i,e in ipairs(lst) do\n        if (i % 2 ~= 0) and (e\
    \ % 2 == 0) then\n            s = s + e\n        end\n    end\n    return s\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

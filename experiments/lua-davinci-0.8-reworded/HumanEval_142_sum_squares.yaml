name: HumanEval_142_sum_squares
language: lua
prompt: "-- \"\n-- This function will take a table of integers. For all entries in\
  \ the table, the function shall square the integer entry if its index is a \n--\
  \ multiple of 3 and will cube the integer entry if its index is a multiple of 4\
  \ and not a multiple of 3. The function will not \n-- change the entries in the\
  \ table whose indexes are not a multiple of 3 or 4. The function shall then return\
  \ the sum of all entries. \n-- Examples:\n-- >>> lst\n-- {1, 2, 3}\n-- >>> lst\n\
  -- {}\n-- >>> lst\n-- {-1, -5, 2, -1, -5}\nlocal function sum_squares(lst)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_squares\n\
  \    lu.assertEquals(candidate({1, 2, 3}), 6)\n    lu.assertEquals(candidate({1,\
  \ 4, 9}), 14)\n    lu.assertEquals(candidate({}), 0)\n    lu.assertEquals(candidate({1,\
  \ 1, 1, 1, 1, 1, 1, 1, 1}), 9)\n    lu.assertEquals(candidate({-1, -1, -1, -1, -1,\
  \ -1, -1, -1, -1}), -3)\n    lu.assertEquals(candidate({0}), 0)\n    lu.assertEquals(candidate({-1,\
  \ -5, 2, -1, -5}), -126)\n    lu.assertEquals(candidate({-56, -99, 1, 0, -2}), 3030)\n\
  \    lu.assertEquals(candidate({-1, 0, 0, 0, 0, 0, 0, 0, -1}), 0)\n    lu.assertEquals(candidate({-16,\
  \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37}), -14196)\n    lu.assertEquals(candidate({-1,\
  \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10}),\
  \ -1448)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local sum = 0\n  for i, v in ipairs(lst) do\n    if i % 3 == 0 and\
    \ i % 4 == 0 then\n      sum = sum + v ^ 3\n    elseif i % 3 == 0 then\n     \
    \ sum = sum + v ^ 2\n    else\n      sum = sum + v\n    end\n  end\n  return sum\n\
    end", "\tlocal s = 0\n\tfor i, v in ipairs(lst) do\n\t\tif i % 3 == 0 then\n\t\
    \t\tv = v * v\n\t\telseif i % 4 == 0 then\n\t\t\tv = v * v * v\n\t\tend\n\t\t\
    s = s + v\n\tend\n\treturn s\nend", "    local sum = 0\n    for i, entry in ipairs(lst)\
    \ do\n        if i % 3 == 0 and i % 4 == 0 then\n            sum = sum + entry\
    \ * entry * entry\n        elseif i % 3 == 0 then\n            sum = sum + entry\
    \ * entry\n        else\n            sum = sum + entry\n        end\n    end\n\
    \    return sum\nend", "    local sum = 0\n    for i = 1, #lst do\n        local\
    \ value = lst[i]\n        if i % 3 == 0 then\n            value = value * value\n\
    \        elseif i % 4 == 0 then\n            value = value * value * value\n \
    \       end\n        sum = sum + value\n    end\n    return sum\nend", "    local\
    \ sum = 0\n    for i = 1, #lst do\n        if i % 3 == 0 and i % 4 == 0 then\n\
    \            sum = sum + lst[i] ^ 3\n        elseif i % 3 == 0 then\n        \
    \    sum = sum + lst[i] ^ 2\n        else\n            sum = sum + lst[i]\n  \
    \      end\n    end\n    return sum\nend", "\tlocal sum = 0\n\tfor i, v in ipairs(lst)\
    \ do\n\t\tlocal index = i % 4\n\t\tif index == 0 then\n\t\t\tsum = sum + v * v\
    \ * v\n\t\telseif index == 3 then\n\t\t\tsum = sum + v * v\n\t\telse\n\t\t\tsum\
    \ = sum + v\n\t\tend\n\tend\n\treturn sum\nend", "    error \"TODO\"\nend", '  local
    sum = 0', "\tlocal sum = 0\n\t\n\tfor k, v in pairs(lst) do\n\t\tif k % 3 == 0\
    \ then\n\t\t\tv = v * v\n\t\telseif k % 4 == 0 and k % 3 ~= 0 then\n\t\t\tv =\
    \ v * v * v\n\t\tend\n\t\tsum = sum + v\n\tend\n\t\n\treturn sum\nend", "  local\
    \ total = 0\n  for i, num in ipairs(lst) do\n    if i % 3 == 0 and i % 4 == 0\
    \ then\n      total = total + num^3\n    elseif i % 3 == 0 then\n      total =\
    \ total + num^2\n    else\n      total = total + num\n    end\n  end\n  return\
    \ total\nend", "    -- Insert your code here\n    local sum = 0\n    for key,\
    \ value in pairs(lst) do\n        if key % 3 == 0 and key % 4 == 0 then\n    \
    \        sum = sum + value^3\n        elseif key % 3 == 0 then\n            sum\
    \ = sum + value^2\n        else\n            sum = sum + value\n        end\n\
    \    end\n    return sum\nend", "\nend", "  local total = 0\n  for i, v in ipairs(lst)\
    \ do\n    if i % 3 == 0 and i % 4 == 0 then\n      total = total + v^3\n    elseif\
    \ i % 3 == 0 then\n      total = total + v^2\n    else\n      total = total +\
    \ v\n    end\n  end\n  return total\nend", "\tlocal sum = 0\n\tfor i, v in ipairs(lst)\
    \ do\n\t\tif i % 3 == 0 and i % 4 == 0 then\n\t\t\tsum = sum + v * v * v\n\t\t\
    elseif i % 3 == 0 then\n\t\t\tsum = sum + v * v\n\t\telse\n\t\t\tsum = sum + v\n\
    \t\tend\n\tend\n\treturn sum\nend", "  local total = 0\n  for k, v in pairs(lst)\
    \ do\n    if k % 3 == 0 then\n      lst[k] = v ^ 2\n    elseif k % 4 == 0 and\
    \ k % 3 ~= 0 then\n      lst[k] = v ^ 3\n    end\n    total = total + lst[k]\n\
    \  end\n  return total\nend", "  local sum=0\n  for i=1,#lst do\n    local e=lst[i]\n\
    \    if math.fmod(i,3)==0 then\n      e=e*e\n    elseif math.fmod(i,4)==0 then\n\
    \      e=e*e*e\n    end\n    sum=sum+e\n  end\n  return sum\nend", "    local\
    \ len = #lst\n    local sum = 0\n    for i = 1, len do\n        if i % 3 == 0\
    \ then\n            lst[i] = lst[i] * lst[i]\n        elseif i % 4 == 0 then\n\
    \            lst[i] = lst[i] * lst[i] * lst[i]\n        end\n        sum = sum\
    \ + lst[i]\n    end\n    return sum\nend", "\tlocal sum = 0\n\tfor i, val in ipairs(lst)\
    \ do\n\t\tif i % 3 == 0 and i % 4 == 0 then\n\t\t\tsum = sum + val ^ 3\n\t\telseif\
    \ i % 3 == 0 then\n\t\t\tsum = sum + val ^ 2\n\t\telse\n\t\t\tsum = sum + val\n\
    \t\tend\n\tend\n\treturn sum\nend\nassert(sum_squares({1, 2, 3}) == 14)\nassert(sum_squares({})\
    \ == 0)\nassert(sum_squares({-1, -5, 2, -1, -5}) == -48)", "\nend", "\tlocal total\
    \ = 0\n\tfor i, v in ipairs(lst) do\n\t\tif i % 3 == 0 and i % 4 == 0 then\n\t\
    \t\tlst[i] = v ^ 3\n\t\telseif i % 3 == 0 then\n\t\t\tlst[i] = v ^ 2\n\t\tend\n\
    \t\ttotal = total + lst[i]\n\tend\n\treturn total\nend", "\tlocal sum = 0\n\t\
    for k, v in pairs(lst) do\n\t\tif k % 3 == 0 then\n\t\t\tv = v * v\n\t\telseif\
    \ k % 4 == 0 and k % 3 ~= 0 then\n\t\t\tv = v * v * v\n\t\tend\n\t\tsum = sum\
    \ + v\n\tend\n\treturn sum\nend", "\tlocal sum = 0\n\tfor i, v in ipairs(lst)\
    \ do\n\t\tif i % 3 == 0 and i % 4 == 0 then\n\t\t\tsum = sum + v^3\n\t\telseif\
    \ i % 3 == 0 then\n\t\t\tsum = sum + v^2\n\t\telse\n\t\t\tsum = sum + v\n\t\t\
    end\n\tend\n\treturn sum\nend", "    local sum = 0\n    for k, v in pairs(lst)\
    \ do\n        if k % 3 == 0 then\n            lst[k] = v * v\n        elseif k\
    \ % 4 == 0 and k % 3 ~= 0 then\n            lst[k] = v * v * v\n        end\n\
    \        sum = sum + lst[k]\n    end\n    return sum\nend", "\tlocal result =\
    \ 0\n\tfor i = 1, #lst do\n\t\tif i % 3 == 0 and i % 4 == 0 then\n\t\t\tlst[i]\
    \ = lst[i] ^ 3\n\t\telseif i % 3 == 0 then\n\t\t\tlst[i] = lst[i] ^ 2\n\t\tend\n\
    \t\tresult = result + lst[i]\n\tend\n\treturn result\nend", "    sum = 0;\n  \
    \  for i, number in ipairs(lst) do\n        if i % 3 == 0 and i % 4 == 0 then\n\
    \            sum = sum + number ^ 3\n        elseif i % 3 == 0 then\n        \
    \    sum = sum + number ^ 2\n        else\n            sum = sum + number\n  \
    \      end\n    end\n    return sum\nend", "    local sum = 0\n    for k,v in\
    \ pairs(lst) do\n        if k % 3 == 0 then\n            sum = sum + v^2\n   \
    \     elseif k % 4 == 0 then\n            sum = sum + v^3\n        else\n    \
    \        sum = sum + v\n        end\n    end\n    return sum\nend", "    local\
    \ sum = 0\n    for i,v in ipairs(lst) do\n        if i % 3 == 0 and i % 4 == 0\
    \ then\n            sum = sum + v ^ 3\n        elseif i % 3 == 0 then\n      \
    \      sum = sum + v ^ 2\n        else\n            sum = sum + v\n        end\n\
    \    end\n    return sum\nend", "  local sum = 0\n  for i,v in ipairs(lst) do\n\
    \    if (i % 3 == 0) and (i % 4 == 0) then\n      lst[i] = v * v * v * v\n   \
    \ elseif (i % 3 == 0) then\n      lst[i] = v * v\n    elseif (i % 4 == 0) then\n\
    \      lst[i] = v * v * v\n    end\n    sum = sum + lst[i]\n  end\n  return sum\n\
    end", "  local out = 0\n  for k,v in pairs(lst) do\n    if k % 3 == 0 then\n \
    \     lst[k] = v * v\n    elseif k % 4 == 0 then\n      lst[k] = v * v * v\n \
    \   end\n    out = out + lst[k]\n  end\n  return out\nend", "  local sum = 0\n\
    \  for i, v in ipairs(lst) do\n    if i % 3 == 0 then\n      sum = sum + v * v\n\
    \    elseif i % 4 == 0 then\n      sum = sum + v * v * v\n    else\n      sum\
    \ = sum + v\n    end\n  end\n  return sum\nend", '    local sum = 0', "\tlocal\
    \ sum = 0\n\tfor i, v in ipairs(lst) do\n\t\tif i % 3 == 0 and i % 4 == 0 then\n\
    \t\t\tsum = sum + v^3\n\t\telseif i % 3 == 0 then\n\t\t\tsum = sum + v^2\n\t\t\
    else\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\nend", "    local sum\
    \ = 0\n    for i = 1, #lst do\n        if i % 3 == 0 and i % 4 == 0 then\n   \
    \         sum = sum + lst[i]^3\n        elseif i % 3 == 0 then\n            sum\
    \ = sum + lst[i]^2\n        elseif i % 4 == 0 then\n            sum = sum + lst[i]^3\n\
    \        else\n            sum = sum + lst[i]\n        end\n    end\n    return\
    \ sum\nend", "\tlocal total = 0\n\tfor i, val in ipairs(lst) do\n\t\tif i % 3\
    \ == 0 and i % 4 == 0 then\n\t\t\ttotal = total + val ^ 3\n\t\telseif i % 3 ==\
    \ 0 then\n\t\t\ttotal = total + val ^ 2\n\t\telse\n\t\t\ttotal = total + val\n\
    \t\tend\n\tend\n\treturn total\nend", "    local sum = 0\n    for i, v in ipairs(lst)\
    \ do\n        if i % 3 == 0 and i % 4 == 0 then\n            sum = sum + (v ^\
    \ 3)\n        elseif i % 3 == 0 then\n            sum = sum + (v ^ 2)\n      \
    \  else\n            sum = sum + v\n        end\n    end\n    return sum\nend",
  "\nend", "\tlocal sum = 0\n\tfor i,e in ipairs(lst) do\n\t\tif i % 3 == 0 and i\
    \ % 4 == 0 then\n\t\t\tsum = sum + e * e * e\n\t\telseif i % 3 == 0 then\n\t\t\
    \tsum = sum + e * e\n\t\telse\n\t\t\tsum = sum + e\n\t\tend\n\tend\n\treturn sum\n\
    end", "    local sum = 0\n    for i = 1, #lst do\n        if (i % 3 == 0) and\
    \ (i % 4 == 0) then\n            sum = sum + lst[i] ^ 3\n        elseif (i % 3\
    \ == 0) then\n            sum = sum + lst[i] ^ 2\n        else\n            sum\
    \ = sum + lst[i]\n        end\n    end\n    return sum\nend", "   local sum =\
    \ 0\n   for i, v in ipairs(lst) do\n      if i % 3 == 0 then\n         sum = sum\
    \ + v * v\n      elseif i % 4 == 0 then\n         sum = sum + v * v * v\n    \
    \  else\n         sum = sum + v\n      end\n   end\n   return sum\nend", "\tlocal\
    \ sum = 0\n\tfor i,v in ipairs(lst) do\n\t\tif i % 3 == 0 and i % 4 == 0 then\n\
    \t\t\tsum = sum + v^3\n\t\telseif i % 3 == 0 then\n\t\t\tsum = sum + v^2\n\t\t\
    else\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\nend", "    local sum\
    \ = 0\n    for i = 1, #lst do\n        if i % 3 == 0 and i % 4 == 0 then\n   \
    \         sum = sum + (lst[i] ^ 3)\n        elseif i % 3 == 0 then\n         \
    \   sum = sum + (lst[i] ^ 2)\n        else\n            sum = sum + lst[i]\n \
    \       end\n    end\n    return sum\nend", "    local sum = 0\n    for i = 1,\
    \ #lst do\n        if i % 3 == 0 and i % 4 == 0 then\n            sum = sum +\
    \ lst[i]^3\n        elseif i % 3 == 0 then\n            sum = sum + lst[i]^2\n\
    \        elseif i % 4 == 0 then\n            sum = sum + lst[i]^3\n        else\n\
    \            sum = sum + lst[i]\n        end\n    end\n    return sum\nend", " \
    \ -- your code here\n  -- lst = {{square = 0, cube = 0, sum = 0}}\n  -- lst =\
    \ {{square = 0, cube = 0, sum = 0}}\n  local sum = 0\n  for i = 1, #lst do\n \
    \   if i % 3 == 0 then\n      sum = sum + lst[i] * lst[i]\n    elseif i % 4 ==\
    \ 0 and i % 3 ~= 0 then\n      sum = sum + lst[i] * lst[i] * lst[i]\n    else\n\
    \      sum = sum + lst[i]\n    end\n  end\n  return sum\nend", "  local sum =\
    \ 0\n  for k, v in pairs(lst) do\n    if k % 3 == 0 then\n      sum = sum + v^2\n\
    \    elseif k % 4 == 0 then\n      sum = sum + v^3\n    else\n      sum = sum\
    \ + v\n    end\n  end\n  return sum\nend", "    --peds.logError(\"sum_squares\
    \ is not implemented\")\n    local sum = 0\n    for i, v in ipairs(lst) do\n \
    \       if (i % 3 == 0) then\n            sum = sum + v*v\n        elseif (i %\
    \ 4 == 0) then\n            sum = sum + v*v*v\n        else\n            sum =\
    \ sum + v\n        end\n    end\n    return sum\nend", "\tlocal sum = 0\n\tlocal\
    \ multiples = {}\n\tfor i, v in ipairs(lst) do\n\t\tif i % 3 == 0 then\n\t\t\t\
    multiples[i] = v * v\n\t\telseif i % 4 == 0 then\n\t\t\tmultiples[i] = v * v *\
    \ v\n\t\telse\n\t\t\tmultiples[i] = v\n\t\tend\n\t\tsum = sum + multiples[i]\n\
    \tend\n\treturn sum\nend", "\tlocal total = 0\n\tlocal mult_3 = false\n\tlocal\
    \ mult_4 = false\n\tlocal index = 1\n\t\n\tfor k, v in pairs(lst) do\n\t\tif index\
    \ % 3 == 0 then\n\t\t\tmult_3 = true\n\t\telse\n\t\t\tmult_3 = false\n\t\tend\n\
    \t\t\n\t\tif index % 4 == 0 then\n\t\t\tmult_4 = true\n\t\telse\n\t\t\tmult_4\
    \ = false\n\t\tend\n\t\t\n\t\tif mult_3 and mult_4 then\n\t\t\tv = v ^ 3\n\t\t\
    elseif mult_3 then\n\t\t\tv = v ^ 2\n\t\tend\n\t\t\n\t\ttotal = total + v\n\t\t\
    index = index + 1\n\tend\n\t\n\treturn total\nend", "\tlocal sum = 0\n\tfor i,\
    \ v in ipairs(lst) do\n\t\tif i % 3 == 0 and i % 4 == 0 then\n\t\t\tsum = sum\
    \ + v * v * v\n\t\telseif i % 3 == 0 then\n\t\t\tsum = sum + v * v\n\t\telse\n\
    \t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\nend", "\tlocal sum = 0\n\t\
    for i = 1, #lst do\n\t\tif i % 3 == 0 and i % 4 == 0 then\n\t\t\tsum = sum + lst[i]\
    \ * lst[i] * lst[i]\n\t\telseif i % 3 == 0 then\n\t\t\tsum = sum + lst[i] * lst[i]\n\
    \t\telseif i % 4 == 0 then\n\t\t\tsum = sum + lst[i] * lst[i] * lst[i]\n\t\telse\n\
    \t\t\tsum = sum + lst[i]\n\t\tend\n\tend\n\treturn sum\nend", "\tlocal sum = 0\n\
    \tfor index, value in ipairs(lst) do\n\t\tlocal squared = value^2\n\t\tlocal cubed\
    \ = value^3\n\t\tif (index % 3 == 0) and (index % 4 == 0) then\n\t\t\tsum = sum\
    \ + cubed\n\t\telseif (index % 3 == 0) then\n\t\t\tsum = sum + squared\n\t\telse\n\
    \t\t\tsum = sum + value\n\t\tend\n\tend\n\treturn sum\nend", "\t--TODO\nend",
  "\tlocal result = 0\n\tfor i, v in ipairs(lst) do\n\t\tlocal val = v\n\t\tif i %\
    \ 3 == 0 then\n\t\t\tval = val * val\n\t\telseif i % 4 == 0 then\n\t\t\tval =\
    \ val * val * val\n\t\tend\n\t\tresult = result + val\n\tend\n\treturn result\n\
    end", "\t-- your code here\n\tlocal sum = 0;\n\tfor i,v in ipairs(lst) do\n\t\t\
    if(i%3 == 0 and i%4 ~= 0) then\n\t\t\tsum = sum + (v*v);\n\t\telseif(i%4 == 0)\
    \ then\n\t\t\tsum = sum + (v*v*v);\n\t\telse\n\t\t\tsum = sum + v;\n\t\tend\n\t\
    end\n\treturn sum;\nend", "\tlocal sum = 0\n\tlocal val = 0\n\tfor i = 1, #lst\
    \ do\n\t\tval = lst[i]\n\t\tif i % 3 == 0 then\n\t\t\tval = val * val\n\t\telseif\
    \ i % 4 == 0 then\n\t\t\tval = val * val * val\n\t\tend\n\t\tsum = sum + val\n\
    \tend\n\treturn sum\nend", "    -- todo\nend", "\tlocal sum = 0", "  local sum\
    \ = 0\n  for k, v in pairs(lst) do\n    if k % 3 == 0 then\n      lst[k] = v ^\
    \ 2\n    elseif k % 4 == 0 and k % 3 ~= 0 then\n      lst[k] = v ^ 3\n    end\n\
    \    sum = sum + lst[k]\n  end\n  return sum\nend", "\tlocal sum = 0\n\tfor i,\
    \ j in ipairs(lst) do\n\t\tif i % 3 == 0 and i % 4 == 0 then\n\t\t\tsum = sum\
    \ + j^3\n\t\telseif i % 3 == 0 then\n\t\t\tsum = sum + j^2\n\t\telseif i % 4 ==\
    \ 0 then\n\t\t\tsum = sum + j^3\n\t\telse\n\t\t\tsum = sum + j\n\t\tend\n\tend\n\
    \treturn sum\nend", "\tlocal sum = 0\n\tfor key, value in pairs(lst) do\n\t\t\
    local is_multiple_of_three = key % 3 == 0\n\t\tlocal is_multiple_of_four = key\
    \ % 4 == 0\n\t\tlocal is_multiple_of_twelve = key % 12 == 0\n\t\t\n\t\tif is_multiple_of_three\
    \ then\n\t\t\tsum = sum + value^2\n\t\telseif is_multiple_of_four and not is_multiple_of_twelve\
    \ then\n\t\t\tsum = sum + value^3\n\t\telse\n\t\t\tsum = sum + value\n\t\tend\n\
    \tend\n\treturn sum\nend", "\tlocal acc = 0\n\tfor i, n in ipairs(lst) do\n\t\t\
    if i % 3 == 0 and i % 4 == 0 then\n\t\t\tacc = acc + n^3\n\t\telseif i % 3 ==\
    \ 0 then\n\t\t\tacc = acc + n^2\n\t\telse\n\t\t\tacc = acc + n\n\t\tend\n\tend\n\
    \treturn acc\nend", "\tlocal sum = 0\n\tfor i = 1, #lst do\n\t\tif i % 3 == 0\
    \ and i % 4 == 0 then\n\t\t\tsum = sum + lst[i] ^ 3\n\t\telseif i % 3 == 0 then\n\
    \t\t\tsum = sum + lst[i] ^ 2\n\t\telse\n\t\t\tsum = sum + lst[i]\n\t\tend\n\t\
    end\n\treturn sum\nend", "  local sum = 0\n  for i = 1, #lst do\n    if i % 3\
    \ == 0 then\n      sum = sum + lst[i]^2\n    elseif i % 4 == 0 then\n      sum\
    \ = sum + lst[i]^3\n    else\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum\nend", "  -- Implement this function\n  return nil\nend", "    local sum\
    \ = 0\n    for i = 1, #lst do\n        if i % 3 == 0 and i % 4 == 0 then\n   \
    \         sum = sum + (lst[i] ^ 3)\n        elseif i % 3 == 0 then\n         \
    \   sum = sum + (lst[i] ^ 2)\n        elseif i % 4 == 0 then\n            sum\
    \ = sum + (lst[i] ^ 3)\n        else\n            sum = sum + lst[i]\n       \
    \ end\n    end\n    return sum\nend", "  local sq_sum = 0\n  for i,v in ipairs(lst)\
    \ do\n    if (i % 3 == 0) and (i % 4 == 0) then\n      sq_sum = sq_sum + v^3\n\
    \    elseif (i % 3 == 0) then\n      sq_sum = sq_sum + v^2\n    else\n      sq_sum\
    \ = sq_sum + v\n    end\n  end\n  return sq_sum\nend", "\tlocal sum=0\n\tfor i,v\
    \ in ipairs(lst) do\n\t\tif (i%3)==0 and (i%4)==0 then\n\t\t\tsum=sum+v^3\n\t\t\
    elseif (i%3)==0 then\n\t\t\tsum=sum+v^2\n\t\telseif (i%4)==0 then\n\t\t\tsum=sum+v^3\n\
    \t\telse\n\t\t\tsum=sum+v\n\t\tend\n\tend\n\treturn sum\nend", "\tsum = 0\n\t\
    for i = 1, #lst do\n\t\tif i % 3 == 0 and i % 4 == 0 then\n\t\t\tlst[i] = lst[i]\
    \ * lst[i] * lst[i]\n\t\telseif i % 3 == 0 then\n\t\t\tlst[i] = lst[i] * lst[i]\n\
    \t\tend\n\t\tsum = sum + lst[i]\n\tend\n\treturn sum\nend", "  local sum = 0\n\
    \  for i,val in ipairs(lst) do\n    if i % 3 == 0 and i % 4 == 0 then\n      sum\
    \ = sum + val^3\n    elseif i % 3 == 0 then\n      sum = sum + val^2\n    else\n\
    \      sum = sum + val\n    end\n  end\n  return sum\nend", "  local sum = 0\n\
    \  for index, value in ipairs(lst) do\n    if index % 3 == 0 and index % 4 ==\
    \ 0 then\n      sum = sum + value ^ 3\n    elseif index % 3 == 0 then\n      sum\
    \ = sum + value ^ 2\n    else\n      sum = sum + value\n    end\n  end\n  return\
    \ sum\nend", "  local result = 0\n  for i, v in ipairs(lst) do\n    if i % 3 ==\
    \ 0 then result = result + v * v end\n    if i % 4 == 0 and i % 3 ~= 0 then result\
    \ = result + v * v * v end\n  end\n  return result\nend", "    local sum = 0\n\
    \    for i, v in ipairs(lst) do\n        if i % 3 == 0 and i % 4 == 0 then\n \
    \           sum = sum + v * v * v\n        elseif i % 3 == 0 then\n          \
    \  sum = sum + v * v\n        else\n            sum = sum + v\n        end\n \
    \   end\n    return sum\nend", "\t-- BEGIN Implementation\n\tlocal sum = 0\n\t\
    for i, v in ipairs(lst) do\n\t\tif i % 3 == 0 and i % 4 == 0 then\n\t\t\tsum =\
    \ sum + v ^ 3\n\t\telseif i % 3 == 0 then\n\t\t\tsum = sum + v ^ 2\n\t\telse\n\
    \t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\n\t-- END Implementation\nend",
  "    local sum = 0\n    for k,v in pairs(lst) do\n        if k % 3 == 0 then\n \
    \           sum = sum + v * v\n        elseif k % 4 == 0 then\n            sum\
    \ = sum + v * v * v\n        else\n            sum = sum + v\n        end\n  \
    \  end\n    return sum\nend", "  local sum = 0\n  -- Insert your code here\n \
    \ return sum\nend", end, "\nend", "\tif type(lst) ~= \"table\" then\n\t\terror(\"\
    Invalid parameter type\", 2)\n\tend\n\tlocal sum = 0\n\tfor k, v in pairs(lst)\
    \ do\n\t\tif type(v) ~= \"number\" then\n\t\t\terror(\"Invalid parameter type\"\
    , 2)\n\t\tend\n\t\tif k % 3 == 0 and k % 4 == 0 then\n\t\t\tlst[k] = v ^ 3\n\t\
    \telseif k % 3 == 0 then\n\t\t\tlst[k] = v ^ 2\n\t\tend\n\t\tsum = sum + lst[k]\n\
    \tend\n\treturn sum\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n  \
    \  if i % 3 == 0 then\n      sum = sum + v^2\n    elseif i % 4 == 0 then\n   \
    \   sum = sum + v^3\n    else\n      sum = sum + v\n    end\n  end\n  return sum\n\
    end", "\tlocal sum = 0\n\tfor i, v in ipairs(lst) do\n\t\tif i % 3 == 0 and i\
    \ % 4 == 0 then\n\t\t\tsum = sum + v ^ 3\n\t\telseif i % 3 == 0 then\n\t\t\tsum\
    \ = sum + v ^ 2\n\t\telse\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\n\
    end", "    local s = 0\n    for i, v in ipairs(lst) do\n        if i % 3 == 0\
    \ then\n            s = s + v * v\n        elseif i % 4 == 0 then\n          \
    \  s = s + v * v * v\n        else\n            s = s + v\n        end\n    end\n\
    \    return s\nend", "\tlocal sum = 0\n\tfor i,v in ipairs(lst) do\n\t\tif i %\
    \ 3 == 0 and i % 4 == 0 then\n\t\t\tsum = sum + v^3\n\t\telseif i % 3 == 0 then\n\
    \t\t\tsum = sum + v^2\n\t\telseif i % 4 == 0 then\n\t\t\tsum = sum + v^3\n\t\t\
    else\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\nend", "\tlocal sum =\
    \ 0\n\tfor i, v in ipairs(lst) do\n\t\tif i % 3 == 0 and i % 4 == 0 then\n\t\t\
    \tsum = sum + v ^ 3\n\t\telseif i % 3 == 0 then\n\t\t\tsum = sum + v ^ 2\n\t\t\
    else\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\nend", end, "    local\
    \ sum = 0\n    for i, v in ipairs(lst) do\n        if i % 3 == 0 then\n      \
    \      sum = sum + (v * v)\n        elseif i % 4 == 0 then\n            sum =\
    \ sum + (v * v * v)\n        else\n            sum = sum + v\n        end\n  \
    \  end\n    return sum\nend", end, "\t--[[\n\tlocal total = 0\n\tfor i,v in ipairs(lst)\
    \ do\n\t\tif(i % 3 == 0) then\n\t\t\ttotal = total + (v * v)\n\t\telseif(i % 4\
    \ == 0) then\n\t\t\ttotal = total + (v * v * v)\n\t\telse\n\t\t\ttotal = total\
    \ + v\n\t\tend\n\tend\n\treturn total\n\t]]\n\t\n\t--[[\n\tlocal i = 1\n\tlocal\
    \ total = 0\n\twhile lst[i] do\n\t\tif(i % 3 == 0) then\n\t\t\ttotal = total +\
    \ (lst[i] * lst[i])\n\t\telseif(i % 4 == 0) then\n\t\t\ttotal = total + (lst[i]\
    \ * lst[i] * lst[i])\n\t\telse\n\t\t\ttotal = total + lst[i]\n\t\tend\n\t\ti =\
    \ i + 1\n\tend\n\treturn total\n\t]]\n\t\n\tlocal total = 0\n\tfor i,v in ipairs(lst)\
    \ do\n\t\tif(i % 3 == 0) then\n\t\t\ttotal = total + (v * v)\n\t\telseif(i % 4\
    \ == 0) then\n\t\t\ttotal = total + (v * v * v)\n\t\telse\n\t\t\ttotal = total\
    \ + v\n\t\tend\n\tend\n\treturn total\nend", "  local sum = 0\n  for i = 1, #lst\
    \ do\n    if i % 3 == 0 then\n      lst[i] = lst[i] * lst[i]\n    elseif i % 4\
    \ == 0 then\n      lst[i] = lst[i] * lst[i] * lst[i]\n    end\n    sum = sum +\
    \ lst[i]\n  end\n  return sum\nend", "    local count = 0\n    local sum = 0\n\
    \    while lst[count] ~= nil do\n        if count % 3 == 0 then\n            sum\
    \ = sum + lst[count] * lst[count]\n        elseif count % 4 == 0 then\n      \
    \      sum = sum + lst[count] * lst[count] * lst[count]\n        else\n      \
    \      sum = sum + lst[count]\n        end\n        count = count + 1\n    end\n\
    \    return sum\nend", "    local sum = 0\n    for i, n in ipairs(lst) do\n  \
    \      if i % 3 == 0 and i % 4 == 0 then\n            sum = sum + n * n * n\n\
    \        elseif i % 3 == 0 then\n            sum = sum + n * n\n        else\n\
    \            sum = sum + n\n        end\n    end\n    return sum\nend", "\t--\
    \ Code here\n\terror \"Not yet implemented\"\nend", "\tlocal res = 0\n\tfor i,\
    \ v in ipairs(lst) do\n\t\tif (i % 3 == 0) and (i % 4 == 0) then\n\t\t\tres =\
    \ res + v ^ 3\n\t\telseif (i % 3 == 0) then\n\t\t\tres = res + v ^ 2\n\t\telse\n\
    \t\t\tres = res + v\n\t\tend\n\tend\n\treturn res\nend", "  -- local sum = 0\n\
    \  -- local len = 0\n  -- for i = 1, #lst do\n  --   if i % 3 == 0 then\n  --\
    \     sum = sum + lst[i]^2\n  --   elseif i % 4 == 0 then\n  --     sum = sum\
    \ + lst[i]^3\n  --   else\n  --     sum = sum + lst[i]\n  --   end\n  -- end\n\
    \  -- return sum\n  return sum_iter(lst, 0, 1)\nend", "\tlocal sum = 0", "   local\
    \ sum = 0\n   for i, v in ipairs(lst) do\n      if     i % 3 == 0 and i % 4 ==\
    \ 0 then sum = sum + v^3\n      elseif i % 3 == 0 then               sum = sum\
    \ + v^2\n      else                                 sum = sum + v\n      end\n\
    \   end\n   return sum\nend", "  -- YOUR CODE HERE\nend", "\tlocal s = 0\n\tfor\
    \ i, v in ipairs(lst) do\n\t\tif i % 3 == 0 then\n\t\t\tv = v * v\n\t\telseif\
    \ i % 4 == 0 then\n\t\t\tv = v * v * v\n\t\tend\n\t\ts = s + v\n\tend\n\treturn\
    \ s\nend", "  local sum = 0\n  for k, v in pairs(lst) do\n    if (k % 3 == 0)\
    \ and (k % 4 == 0) then\n      sum = sum + v*v*v\n    elseif (k % 3 == 0) then\n\
    \      sum = sum + v*v\n    else\n      sum = sum + v\n    end\n  end\n  return\
    \ sum\nend", "\tlocal sum = 0", "  local sum = 0\n  for i, v in ipairs(lst) do\n\
    \    if i % 3 == 0 then \n      sum = sum + v * v\n    elseif i % 4 == 0 then\n\
    \      sum = sum + v * v * v\n    else\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend", "\treturn 0\nend", end, "   return 42\nend", "   local result\
    \ = 0\n   -- YOUR CODE HERE\n   return result\nend", "    local sum = 0\n    for\
    \ i, v in ipairs(lst) do\n        if i % 3 == 0 and i % 4 == 0 then\n        \
    \    sum = sum + v ^ 3\n        elseif i % 3 == 0 then\n            sum = sum\
    \ + v ^ 2\n        else\n            sum = sum + v\n        end\n    end\n   \
    \ return sum\nend", "  local t_sum = 0\n  for i, n in ipairs(lst) do\n    if i\
    \ % 3 == 0 and i % 4 == 0 then\n      t_sum = t_sum + n ^ 3\n    elseif i % 3\
    \ == 0 then\n      t_sum = t_sum + n ^ 2\n    else\n      t_sum = t_sum + n\n\
    \    end\n  end\n  return t_sum\nend", "\tlocal sum = 0\n\tfor i, v in ipairs(lst)\
    \ do\n\t\tif(i % 3 == 0) then\n\t\t\tv = v * v\n\t\telseif(i % 4 == 0 and i %\
    \ 3 ~= 0) then\n\t\t\tv = v * v * v\n\t\tend\n\t\tsum = sum + v\n\tend\n\treturn\
    \ sum\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if i % 3 == 0\
    \ then\n      sum = sum + v * v\n    elseif i % 4 == 0 then\n      sum = sum +\
    \ v * v * v\n    else\n      sum = sum + v\n    end\n  end\n  return sum\nend",
  "  local sum = 0\n  for k, v in pairs(lst) do\n    if k % 3 == 0 then\n      v =\
    \ v * v\n    elseif k % 4 == 0 and k % 3 ~= 0 then\n      v = v * v * v\n    end\n\
    \    sum = sum + v\n  end\n  return sum\nend", "\tlocal lst_sum = 0", "    local\
    \ total = 0\n    for i = 1, #lst do\n        if i % 3 == 0 and i % 4 == 0 then\n\
    \            lst[i] = lst[i]^3\n        elseif i % 3 == 0 then\n            lst[i]\
    \ = lst[i]^2\n        end\n        total = total + lst[i]\n    end\n    return\
    \ total\nend", "    local sum = 0\n    for i = 1, #lst do\n        local value\
    \ = lst[i]\n        if math.fmod(i, 3) == 0 then\n            value = value ^\
    \ 2\n        elseif math.fmod(i, 4) == 0 then\n            value = value ^ 3\n\
    \        end\n        sum = sum + value\n    end\n    return sum\nend", "\t--\
    \ initialize the sum\n\tlocal sum = 0", "    return sum(map(function(x, i) return\
    \ (i % 3 == 0 and x * x) or (i % 4 == 0 and x * x * x) or x end, lst))\nend",
  "\tlocal sum = 0\n\tfor i, v in ipairs(lst) do\n\t\tif i % 3 == 0 and i % 4 == 0\
    \ then\n\t\t\tsum = sum + v ^ 3\n\t\telseif i % 3 == 0 then\n\t\t\tsum = sum +\
    \ v ^ 2\n\t\telse\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\nend", "\t\
    local sum = 0\n\tfor i, v in ipairs(lst) do\n\t\tif i % 3 == 0 and i % 4 == 0\
    \ then\n\t\t\tsum = sum + (v * v * v)\n\t\telseif i % 3 == 0 then\n\t\t\tsum =\
    \ sum + (v * v)\n\t\telse\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\n\
    end", '   local sum = 0', "\tlocal sum = 0", "\tlocal sum = 0\n\tfor i,v in ipairs(lst)\
    \ do\n\t\tif i % 3 == 0 and i % 4 == 0 then\n\t\t\tsum = sum + v^3\n\t\telseif\
    \ i % 3 == 0 then\n\t\t\tsum = sum + v^2\n\t\telseif i % 4 == 0 then\n\t\t\tsum\
    \ = sum + v^3\n\t\telse\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\nend",
  "\tlocal sum = 0\n\tfor i, v in ipairs(lst) do\n\t\tif i % 3 == 0 and i % 4 == 0\
    \ then\n\t\t\tsum = sum + v ^ 3\n\t\telseif i % 3 == 0 then\n\t\t\tsum = sum +\
    \ v ^ 2\n\t\telse\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\nend", " \
    \ local sum = 0\n  for i = 1, #lst do\n    local entry = lst[i]\n    if i % 3\
    \ == 0 then\n      entry = entry * entry\n    elseif i % 4 == 0 then\n      entry\
    \ = entry * entry * entry\n    end\n    sum = sum + entry\n  end\n  return sum\n\
    end", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if i % 3 == 0 then\n\
    \      v = v ^ 2\n    elseif i % 4 == 0 then\n      v = v ^ 3\n    end\n    sum\
    \ = sum + v\n  end\n  return sum\nend", "  local sum = 0\n  for i = 1, #lst do\n\
    \    local entry = lst[i]\n    if i % 3 == 0 then\n      entry = entry * entry\n\
    \    elseif i % 4 == 0 then\n      entry = entry * entry * entry\n    end\n  \
    \  sum = sum + entry\n  end\n  return sum\nend", "  local sum = 0\n  for i = 1,\
    \ #lst do\n    local num = lst[i]\n    if i % 3 == 0 then\n      num = num * num\n\
    \    elseif i % 4 == 0 then\n      num = num * num * num\n    end\n    sum = sum\
    \ + num\n  end\n  return sum\nend", "\tlocal sum = 0\n\tfor i = 1, #lst do\n\t\
    \tif i % 3 == 0 and i % 4 == 0 then\n\t\t\tlst[i] = lst[i]^3\n\t\telseif i % 3\
    \ == 0 then\n\t\t\tlst[i] = lst[i]^2\n\t\tend\n\t\tsum = sum + lst[i]\n\tend\n\
    \treturn sum\nend", "    -- Return the sum of the squares for all values that\
    \ are multiples of 3.\n    -- Return the sum of the cubes for all values that\
    \ are multiples of 4 but not 3.\n    local sum = 0\n    for i, x in ipairs(lst)\
    \ do\n        if i % 3 == 0 then\n            sum = sum + x * x\n        elseif\
    \ i % 4 == 0 then\n            sum = sum + x * x * x\n        else\n         \
    \   sum = sum + x\n        end\n    end\n    return sum\nend", "  local sum =\
    \ 0\n  for i,v in ipairs(lst) do\n    if i % 3 == 0 then\n      sum = sum + v^2\n\
    \    elseif i % 4 == 0 then\n      sum = sum + v^3\n    else\n      sum = sum\
    \ + v\n    end\n  end\n  return sum\nend", "\tlocal sum = 0\n\tlocal squares =\
    \ {}\n\t-- check if index is multiple of 3 or 4\n\tfor i,v in ipairs(lst) do\n\
    \t\tif i % 3 == 0 then\n\t\t\tsquares[i] = v*v\n\t\telseif i % 4 == 0 then\n\t\
    \t\tsquares[i] = v*v*v\n\t\telse\n\t\t\tsquares[i] = v\n\t\tend\n\tend\n\t-- sum\
    \ all entries\n\tfor _, v in ipairs(squares) do\n\t\tsum = sum + v\n\tend\n\t\
    return sum\nend", end, "    -- Write your code here\n    local sum = 0\n    for\
    \ i,v in ipairs(lst) do\n        if (i % 3 == 0) and (i % 4 == 0) then\n     \
    \       sum = sum + v^3\n        elseif (i % 3 == 0) then\n            sum = sum\
    \ + v^2\n        else\n            sum = sum + v\n        end\n    end\n    return\
    \ sum\nend", "    local sum = 0\n    for i, v in ipairs(lst) do\n        if (i\
    \ % 3 == 0) and (i % 4 == 0) then\n            sum = sum + v ^ 3\n        elseif\
    \ (i % 3 == 0) then\n            sum = sum + v ^ 2\n        else\n           \
    \ sum = sum + v\n        end\n    end\n    return sum\nend", "\tlocal sum = 0\n\
    \tfor k, v in pairs(lst) do\n\t\tif k % 3 == 0 then\n\t\t\tsum = sum + v * v\n\
    \t\telseif k % 4 == 0 then\n\t\t\tsum = sum + v * v * v\n\t\telse\n\t\t\tsum =\
    \ sum + v\n\t\tend\n\tend\n\treturn sum\nend", "    local total_sum = 0\n    for\
    \ i, v in ipairs(lst) do\n        if i % 3 == 0 and i % 4 == 0 then\n        \
    \    total_sum = total_sum + v^3\n        elseif i % 3 == 0 then\n           \
    \ total_sum = total_sum + v^2\n        elseif i % 4 == 0 then\n            total_sum\
    \ = total_sum + v^3\n        else\n            total_sum = total_sum + v\n   \
    \     end\n    end\n    return total_sum\nend", "  local sum = 0\n  for i, val\
    \ in ipairs(lst) do\n    if i % 3 == 0 then\n      val = val * val\n    elseif\
    \ i % 4 == 0 then\n      val = val * val * val\n    end\n    sum = sum + val\n\
    \  end\n  return sum\nend", "  return 0\nend", "  local sum = 0\n  local count\
    \ = 1\n  for _, value in ipairs(lst) do\n    if count % 4 == 0 and count % 3 ~=\
    \ 0 then\n      sum = sum + value * value * value\n    elseif count % 3 == 0 then\n\
    \      sum = sum + value * value\n    else\n      sum = sum + value\n    end\n\
    \    count = count + 1\n  end\n  return sum\nend", '  local total = 0', "  if\
    \ #lst == 0 then return 0 end\n  local sum = 0\n  for i,v in ipairs(lst) do\n\
    \    if i % 3 == 0 and i % 4 == 0 then sum = sum + v*v*v\n    elseif i % 3 ==\
    \ 0 then sum = sum + v*v\n    elseif i % 4 == 0 then sum = sum + v*v*v\n    else\
    \ sum = sum + v end\n  end\n  return sum\nend", "    local total = 0\n    for\
    \ index, num in ipairs(lst) do\n        if index % 3 == 0 and index % 4 == 0 then\n\
    \            total = total + num ^ 3\n        elseif index % 3 == 0 then\n   \
    \         total = total + num ^ 2\n        else\n            total = total + num\n\
    \        end\n    end\n    return total\nend", "\tlocal sum = 0\n\tfor i = 1,\
    \ #lst do\n\t\tlocal entry = lst[i]\n\t\tif (i % 3 == 0) and (i % 4 ~= 0) then\n\
    \t\t\tentry = entry^2\n\t\telseif (i % 4 == 0) and (i % 3 == 0) then\n\t\t\tentry\
    \ = entry^3\n\t\tend\n\t\tsum = sum + entry\n\tend\n\treturn sum\nend", "\tlocal\
    \ sum = 0", "    local sum = 0\n    for i = 1, #lst do\n        if i % 3 == 0\
    \ and i % 4 == 0 then\n            sum = sum + (lst[i] ^ 3)\n        elseif i\
    \ % 3 == 0 then\n            sum = sum + (lst[i] ^ 2)\n        else\n        \
    \    sum = sum + lst[i]\n        end\n    end\n    return sum\nend", "    return\
    \ -1\nend", "   local sum = 0\n   for i,v in ipairs(lst) do\n      if i % 3 ==\
    \ 0 then\n         sum = sum + v*v\n      elseif i % 4 == 0 then\n         sum\
    \ = sum + v*v*v\n      else\n         sum = sum + v\n      end\n   end\n   return\
    \ sum\nend", "  -- print(\"in sum_squares\")\n  local sum = 0\n  -- print(\"#lst\
    \ = \" .. #lst)\n  for i = 1, #lst do\n    -- print(\"i = \" .. i)\n    if (i\
    \ % 3 == 0) and (i % 4 ~= 0) then\n      -- print(\"squaring \" .. lst[i])\n \
    \     sum = sum + lst[i]^2\n    elseif (i % 4 == 0) and (i % 3 ~= 0) then\n  \
    \    -- print(\"cubing \" .. lst[i])\n      sum = sum + lst[i]^3\n    elseif (i\
    \ % 3 == 0) and (i % 4 == 0) then\n      -- print(\"squaring \" .. lst[i])\n \
    \     sum = sum + lst[i]^2\n    else\n      -- print(\"using \" .. lst[i])\n \
    \     sum = sum + lst[i]\n    end\n  end\n  return sum\nend", "  -- YOUR CODE\
    \ HERE\nend", "\t\nend", "    local s = 0\n    for i = 1, #lst do\n        if\
    \ (i % 3 == 0) and (i % 4 ~= 0) then\n            s = s + lst[i] ^ 2\n       \
    \ elseif i % 4 == 0 then\n            s = s + lst[i] ^ 3\n        else\n     \
    \       s = s + lst[i]\n        end\n    end\n    return s\nend", "\tlocal sum\
    \ = 0\n\tfor k, v in pairs(lst) do\n\t\tif k % 3 == 0 then\n\t\t\tsum = sum +\
    \ v ^ 2\n\t\telseif k % 4 == 0 and k % 3 ~= 0 then\n\t\t\tsum = sum + v ^ 3\n\t\
    \telse\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\nend", "    local sum\
    \ = 0\n    for i,v in ipairs(lst) do\n        if (i % 3 == 0) and (i % 4 == 0)\
    \ then\n            sum = sum + v^3\n        elseif (i % 3 == 0) then\n      \
    \      sum = sum + v^2\n        else\n            sum = sum + v\n        end\n\
    \    end\n    return sum\nend", "\tlocal sum = 0\n\tfor i, v in ipairs(lst) do\n\
    \t\tif i % 3 == 0 and i % 4 == 0 then\n\t\t\tsum = sum + v^3\n\t\telseif i % 3\
    \ == 0 then\n\t\t\tsum = sum + v^2\n\t\telse\n\t\t\tsum = sum + v\n\t\tend\n\t\
    end\n\treturn sum\nend", "\tlocal t = {}\n\tlocal sum = 0\n\tfor k, v in pairs(lst)\
    \ do\n\t\tlocal n = v\n\t\tif (k % 3 == 0) then\n\t\t\tn = v * v\n\t\tend\n\t\t\
    if (k % 4 == 0 and k % 3 ~= 0) then\n\t\t\tn = v * v * v\n\t\tend\n\t\ttable.insert(t,\
    \ n)\n\t\tsum = sum + n\n\tend\n\treturn sum\nend", "    local sum = 0\n    for\
    \ i = 1, #lst do\n        if i % 3 == 0 and i % 4 == 0 then\n            sum =\
    \ sum + lst[i]^3\n        elseif i % 3 == 0 then\n            sum = sum + lst[i]^2\n\
    \        elseif i % 4 == 0 then\n            sum = sum + lst[i]^3\n        else\n\
    \            sum = sum + lst[i]\n        end\n    end\n    return sum\nend", " \
    \   local result = 0\n    for k,v in pairs(lst) do\n        if k % 3 == 0 then\n\
    \            result = result + v * v\n        elseif k % 4 == 0 then\n       \
    \     result = result + v * v * v\n        else\n            result = result +\
    \ v\n        end\n    end\n    return result\nend", "    -- Add code here\nend",
  "\tlocal sum = 0\n\tfor i,v in ipairs(lst) do\n\t\tif i % 3 == 0 and i % 4 == 0\
    \ then\n\t\t\tsum = sum + v * v * v\n\t\telseif i % 3 == 0 then\n\t\t\tsum = sum\
    \ + v * v\n\t\telseif i % 4 == 0 then\n\t\t\tsum = sum + v * v * v\n\t\telse\n\
    \t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\nend", "    return reduce(lambda(\"\
    x, y\", \"x + y\"), map(lambda(\"x\", \"x * x\"), filter(lambda(\"x\", \"x % 3\
    \ == 0\"), lst)))\nend", "\tlocal sum = 0\n\tfor k,v in pairs(lst) do\n\t\tif\
    \ k % 3 == 0 then\n\t\t\tsum = sum + v * v\n\t\telseif k % 4 == 0 then\n\t\t\t\
    sum = sum + v * v * v\n\t\telse\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn\
    \ sum\nend", "\tlocal sum = 0\n\tfor k, v in pairs(lst) do\n\t\tif k % 3 == 0\
    \ then\n\t\t\tsum = sum + v ^ 2\n\t\telseif k % 4 == 0 and k % 3 ~= 0 then\n\t\
    \t\tsum = sum + v ^ 3\n\t\telse\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn\
    \ sum\nend", "\tlocal sum = 0\n\tfor i, v in ipairs(lst) do\n\t\tif i % 3 == 0\
    \ and i % 4 == 0 then\n\t\t\tsum = sum + (v^3)\n\t\telseif i % 3 == 0 then\n\t\
    \t\tsum = sum + (v^2)\n\t\telse\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn\
    \ sum\nend", "    local sum = 0\n    for i, v in ipairs(lst) do\n        if i\
    \ % 3 == 0 and i % 4 == 0 then\n            v = v^3\n        elseif i % 3 == 0\
    \ then\n            v = v^2\n        end\n        sum = sum + v\n    end\n   \
    \ return sum\nend", "    if #lst == 0 then return 0 end\n    local sum = 0\n \
    \   for k,v in pairs(lst) do\n        if k % 3 == 0 and k % 4 == 0 then\n    \
    \        lst[k] = v ^ 3\n        elseif k % 3 == 0 then\n            lst[k] =\
    \ v ^ 2\n        end\n        sum = sum + lst[k]\n    end\n    return sum\nend",
  "  -- TODO: complete sum_squares\n  local sum = 0\n  for i, num in ipairs(lst) do\n\
    \    if i % 3 == 0 and i % 4 == 0 then\n      sum = sum + (num ^ 3)\n    elseif\
    \ i % 3 == 0 then\n      sum = sum + (num ^ 2)\n    elseif i % 4 == 0 then\n \
    \     sum = sum + (num ^ 3)\n    else\n      sum = sum + num\n    end\n  end\n\
    \  return sum\nend", "\tlocal total = 0\n\tfor i,v in ipairs(lst) do\n\t\tif i\
    \ % 3 == 0 and i % 4 == 0 then\n\t\t\ttotal = total + v^3\n\t\telseif i % 3 ==\
    \ 0 then\n\t\t\ttotal = total + v^2\n\t\telse\n\t\t\ttotal = total + v\n\t\tend\n\
    \tend\n\treturn total\nend", "    local sum = 0\n    local tableIndex = 1\n  \
    \  for key, value in pairs(lst) do\n        if tableIndex % 3 == 0 and tableIndex\
    \ % 4 == 0 then\n            lst[key] = value ^ 3\n        elseif tableIndex %\
    \ 3 == 0 then\n            lst[key] = value ^ 2\n        end\n        sum = sum\
    \ + lst[key]\n        tableIndex = tableIndex + 1\n    end\n    return sum\nend",
  "    local sum = 0\n    for i, num in ipairs(lst) do\n        if (i % 3 == 0) and\
    \ (i % 4 == 0) then\n            lst[i] = num^3\n        elseif (i % 3 == 0) then\n\
    \            lst[i] = num^2\n        end\n        sum = sum + lst[i]\n    end\n\
    \    return sum\nend", "    local sum = 0\n    for i = 1, #lst do\n        if\
    \ i % 3 == 0 and i % 4 == 0 then\n            sum = sum + lst[i] * lst[i] * lst[i]\n\
    \        elseif i % 3 == 0 then\n            sum = sum + lst[i] * lst[i]\n   \
    \     else\n            sum = sum + lst[i]\n        end\n    end\n    return sum\n\
    end", "  -- You code here\n  local sum = 0\n  for i,v in ipairs(lst) do\n    if\
    \ i % 3 == 0 and i % 4 == 0 then\n      sum = sum + v^3\n    elseif i % 3 == 0\
    \ then\n      sum = sum + v^2\n    elseif i % 4 == 0 then\n      sum = sum + v^3\n\
    \    else\n      sum = sum + v\n    end\n  end\n  return sum\nend", '    local
    sum = 0', '    local sum = 0', "\tlocal sum = 0", "\tlocal tot = 0\n\tfor i =\
    \ 1, #lst do\n\t\tif i % 3 == 0 then\n\t\t\ttot = tot + lst[i] * lst[i]\n\t\t\
    end\n\t\tif i % 4 == 0 and i % 3 ~= 0 then\n\t\t\ttot = tot + lst[i] * lst[i]\
    \ * lst[i]\n\t\tend\n\t\tif i % 3 ~= 0 and i % 4 ~= 0 then\n\t\t\ttot = tot +\
    \ lst[i]\n\t\tend\n\tend\n\treturn tot\nend", "  local sum = 0\n  for k, v in\
    \ pairs(lst) do\n    if k % 3 == 0 then\n      v = v * v\n    elseif k % 4 ==\
    \ 0 and k % 3 ~= 0 then\n      v = v * v * v\n    end\n    sum = sum + v\n  end\n\
    \  return sum\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if i\
    \ % 3 == 0 then\n      sum = sum + v * v\n    elseif i % 4 == 0 then\n      sum\
    \ = sum + v * v * v\n    else\n      sum = sum + v\n    end\n  end\n  return sum\n\
    end", "    if not lst then return 0 end\n    local i, s = 1, 0\n    for _, e in\
    \ ipairs(lst) do\n        if i % 3 == 0 then\n            s = s + e ^ 2\n    \
    \    elseif i % 4 == 0 then\n            s = s + e ^ 3\n        else\n       \
    \     s = s + e\n        end\n        i = i + 1\n    end\n    return s\nend\n\
    assert(sum_squares({1, 2, 3}) == 14)\nassert(sum_squares({}) == 0)\nassert(sum_squares({-1,\
    \ -5, 2, -1, -5}) == -79)", "  local sum = 0\n  for i = 1, #lst do\n    if (i\
    \ % 3 == 0) and (i % 4 ~= 0) then\n      sum = sum + lst[i]^2\n    elseif i %\
    \ 4 == 0 then\n      sum = sum + lst[i]^3\n    else\n      sum = sum + lst[i]\n\
    \    end\n  end\n  return sum\nend", "    local sum = 0\n    for i,v in ipairs(lst)\
    \ do\n        if (i % 3 == 0) and (i % 4 == 0) then\n            sum = sum + (v\
    \ ^ 3)\n        elseif (i % 3 == 0) then\n            sum = sum + (v ^ 2)\n  \
    \      elseif (i % 4 == 0) then\n            sum = sum + (v ^ 3)\n        else\n\
    \            sum = sum + v\n        end\n    end\n    return sum\nend", "    if\
    \ lst ~= nil then\n        local sum = 0\n        for i = 1, #lst do\n       \
    \     if i % 3 == 0 and i % 4 ~= 0 then\n                sum = sum + (lst[i]*lst[i])\n\
    \            elseif i % 4 == 0 then\n                sum = sum + (lst[i]*lst[i]*lst[i])\n\
    \            else\n                sum = sum + lst[i]\n            end\n     \
    \   end\n        return sum\n    end\nend", '    local sum = 0', "    local sum\
    \ = 0\n    for i, v in ipairs(lst) do\n        if i % 3 == 0 and i % 4 == 0 then\n\
    \            sum = sum + v^3\n        elseif i % 3 == 0 then\n            sum\
    \ = sum + v^2\n        elseif i % 4 == 0 then\n            sum = sum + v^3\n \
    \       else\n            sum = sum + v\n        end\n    end\n    return sum\n\
    end", "\tlocal sum = 0\n\tfor i, v in ipairs(lst) do\n\t\tif i % 3 == 0 and i\
    \ % 4 == 0 then\n\t\t\tsum = sum + v ^ 3\n\t\telseif i % 3 == 0 then\n\t\t\tsum\
    \ = sum + v ^ 2\n\t\telse\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\n\
    end", "\tlocal sum = 0\n\tfor i,v in ipairs(lst) do\n\t\tif i % 3 == 0 and i %\
    \ 4 == 0 then\n\t\t\tv = v ^ 3\n\t\telseif i % 3 == 0 then\n\t\t\tv = v ^ 2\n\t\
    \tend\n\t\tsum = sum + v\n\tend\n\treturn sum\nend", "    local result = 0\n \
    \   for key,val in pairs(lst) do\n        if key % 3 == 0 then\n            val\
    \ = val^2\n        elseif key % 4 == 0 and key % 3 ~= 0 then\n            val\
    \ = val^3\n        end\n        result = result + val\n    end\n    return result\n\
    end", "\tlocal sum = 0\n\tfor i, v in ipairs(lst) do\n\t\tif i % 3 == 0 and i\
    \ % 4 == 0 then\n\t\t\tsum = sum + v * v * v\n\t\telseif i % 3 == 0 then\n\t\t\
    \tsum = sum + v * v\n\t\telse\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\n\
    end", "\tlocal total = 0\n\tfor i = 1, #lst do\n\t\tlocal entry = lst[i]\n\t\t\
    local mod3 = i % 3\n\t\tlocal mod4 = i % 4\n\t\tif (mod3 == 0) and (mod4 ~= 0)\
    \ then\n\t\t\tentry = entry * entry\n\t\telseif (mod4 == 0) then\n\t\t\tentry\
    \ = entry * entry * entry\n\t\tend\n\t\ttotal = total + entry\n\tend\n\treturn\
    \ total\nend", "    sum = 0\n    for key, value in pairs(lst) do\n        if (key\
    \ % 3 == 0) then\n            lst[key] = lst[key] * lst[key]\n        elseif (key\
    \ % 4 == 0) then\n            lst[key] = lst[key] * lst[key] * lst[key]\n    \
    \    end\n        sum = sum + lst[key]\n    end\n    return sum\nend", "    local\
    \ sum = 0\n    for i, v in ipairs(lst) do\n        if i % 3 == 0 and i % 4 ==\
    \ 0 then\n            v = v^3\n        elseif i % 3 == 0 then\n            v =\
    \ v^2\n        end\n        sum = sum + v\n    end\n    return sum\nend", "  \
    \ local total = 0\n   for i, n in ipairs(lst) do\n      local f = 1\n      if\
    \ i % 3 == 0 then\n         f = f * f\n      end\n      if i % 4 == 0 and i %\
    \ 3 ~= 0 then\n         f = f * f * f\n      end\n      total = total + f * n\n\
    \   end\n   return total\nend", "  return 0\nend", "    local sum = 0\n    for\
    \ i = 1, #lst do\n        if i % 3 == 0 and i % 4 == 0 then\n            lst[i]\
    \ = lst[i] * lst[i] * lst[i]\n        elseif i % 3 == 0 then\n            lst[i]\
    \ = lst[i] * lst[i]\n        end\n        sum = sum + lst[i]\n    end\n    return\
    \ sum\nend", "  local sum = 0\n  -- YOUR CODE GOES HERE\n  for k,v in pairs(lst)\
    \ do\n    if k % 3 == 0 then\n      lst[k] = v^2\n    elseif k % 4 == 0 and k\
    \ % 3 ~= 0 then\n      lst[k] = v^3\n    end\n    sum = sum + lst[k]\n  end\n\
    \  return sum\nend", "  local sum = 0\n  for k, v in pairs(lst) do\n    if k %\
    \ 3 == 0 then\n      v = v ^ 2\n    elseif k % 4 == 0 and k % 3 ~= 0 then\n  \
    \    v = v ^ 3\n    end\n    sum = sum + v\n  end\n  return sum\nend", "    local\
    \ sum = 0\n    for i,v in ipairs(lst) do\n        if i % 3 == 0 and i % 4 == 0\
    \ then\n            lst[i] = math.pow(v, 3)\n        elseif i % 3 == 0 then\n\
    \            lst[i] = math.pow(v, 2)\n        end\n        sum = sum + lst[i]\n\
    \    end\n    return sum\nend", "  -- TODO: implement this function\n  --return\
    \ 0\n  if #lst==0 then return 0 end\n  local result=0\n  for i=1,#lst do\n   \
    \ if i%3==0 and i%4~=0 then result=result+lst[i]*lst[i] end\n    if i%4==0 then\
    \ result=result+lst[i]*lst[i]*lst[i] end\n    if i%3~=0 and i%4~=0 then result=result+lst[i]\
    \ end\n  end\n  return result\nend", "\tlocal sum = 0\n\tfor i, v in ipairs(lst)\
    \ do\n\t\tif i % 3 == 0 and i % 4 == 0 then\n\t\t\tsum = sum + v ^ 3\n\t\telseif\
    \ i % 3 == 0 then\n\t\t\tsum = sum + v ^ 2\n\t\telse\n\t\t\tsum = sum + v\n\t\t\
    end\n\tend\n\treturn sum\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n\
    \    if (i % 3 == 0) and (i % 4 == 0) then \n      sum = sum + v^3\n    elseif\
    \ (i % 3 == 0) then\n      sum = sum + v^2\n    else\n      sum = sum + v\n  \
    \  end\n  end\n  return sum\nend", "\tlocal ret = 0\n\tfor k, v in pairs(lst)\
    \ do\n\t\tif k % 3 == 0 then\n\t\t\tv = v * v\n\t\telseif k % 4 == 0 then\n\t\t\
    \tv = v * v * v\n\t\tend\n\t\tret = ret + v\n\tend\n\treturn ret\nend", "\tlocal\
    \ total = 0\n\tfor i, n in ipairs(lst) do\n\t\tif i % 3 == 0 and i % 4 == 0 then\n\
    \t\t\ttotal = total + (n * n * n)\n\t\telseif i % 3 == 0 then\n\t\t\ttotal = total\
    \ + (n * n)\n\t\telse\n\t\t\ttotal = total + n\n\t\tend\n\tend\n\treturn total\n\
    end", "  local s = 0\n  for i = 1, #lst do\n    if i % 3 == 0 then\n      s =\
    \ s + lst[i]^2\n    elseif i % 4 == 0 then\n      s = s + lst[i]^3\n    else\n\
    \      s = s + lst[i]\n    end\n  end\n  return s\nend", "\tif (type(lst) ~= \"\
    table\") then\n\t\terror(\"sum_squares: expected table, got \" .. type(lst), 2)\n\
    \tend\n\tlocal lst_cpy = {}\n\tlocal sum = 0\n\tfor i = 1, #lst do\n\t\tlst_cpy[i]\
    \ = lst[i]\n\t\tif (i % 3 == 0) then\n\t\t\tlst_cpy[i] = lst_cpy[i] ^ 2\n\t\t\
    elseif (i % 4 == 0) then\n\t\t\tlst_cpy[i] = lst_cpy[i] ^ 3\n\t\tend\n\t\tsum\
    \ = sum + lst_cpy[i]\n\tend\n\treturn sum\nend", "\tlocal sum = 0\n\tfor i = 1,\
    \ #lst do\n\t\tlocal entry = lst[i]\n\t\tlocal multiple_of_3 = i % 3 == 0\n\t\t\
    local multiple_of_4 = i % 4 == 0\n\t\tif multiple_of_3 and not multiple_of_4 then\n\
    \t\t\tsum = sum + entry * entry\n\t\telseif multiple_of_4 then\n\t\t\tsum = sum\
    \ + entry * entry * entry\n\t\telse\n\t\t\tsum = sum + entry\n\t\tend\n\tend\n\
    \treturn sum\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_77_iscube
language: lua
prompt: "-- Write a function that takes an integer a and returns true \n-- if this\
  \ ingeger is a cube of some integer number.\n-- Note: you may assume the input is\
  \ always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n-- false\n\
  -- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n-- true\n\
  -- >>> iscube(180)\n-- false\nlocal function iscube(a)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
  \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
  \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64), true)\n\
  \    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
  \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if a == 0 then\n    return true\n  end\n  if a < 0 then\n    a =\
    \ -a\n  end\n  local b = math.floor(math.pow(a, 1/3))\n  if b * b * b == a then\n\
    \    return true\n  else\n    return false\n  end\nend", "  if a < 0 then\n  \
    \  a = -a\n  end\n  if a == 0 then\n    return true\n  end\n  local n = 1\n  while\
    \ n * n * n < a do\n    n = n + 1\n  end\n  return n * n * n == a\nend", "   \
    \ if a < 0 then\n        a = -a\n    end\n    if a == 0 then\n        return true\n\
    \    end\n    local count = 0\n    for i = 1, a do\n        count = count + 1\n\
    \        if i * i * i == a then\n            return true\n        end\n    end\n\
    \    if count == a then\n        return false\n    end\nend", "\treturn a == 0\
    \ or math.sqrt(a) % 1 == 0\nend", "    for x=1,a do\n        if x*x*x == a then\n\
    \            return true\n        end\n    end\n    return false\nend", "\t\n\
    end", "  -- TODO: Implement this function.\n  local i=0\n  while a>=0 do\n   \
    \ if a==i*i*i then\n      return true\n    end\n    a=a-1\n  end\n  return false\n\
    end", "  -- TODO: Implement me!\nend", end, "    if a < 0 then\n        a = -a\n\
    \    end\n    if a == 0 then\n        return true\n    end\n    local i = 1\n\
    \    while i * i * i <= a do\n        if i * i * i == a then\n            return\
    \ true\n        end\n        i = i + 1\n    end\n    return false\nend", "  if\
    \ a <= 0 then\n    return true\n  end\n  local i = 0\n  while i * i * i <= a do\n\
    \    if i * i * i == a then\n      return true\n    end\n    i = i + 1\n  end\n\
    \  return false\nend", "  -- Your code here\n  local sqr = math.sqrt(a)\n  local\
    \ s = math.floor(sqr)\n  if sqr == s then\n    sqr = math.sqrt(s)\n    s = math.floor(sqr)\n\
    \    if sqr == s then\n      return true\n    end\n  end\n  return false\nend",
  "  local absa = math.abs(a)\n  local c = math.floor(math.pow(absa, 1/3) + 0.5)\n\
    \  return a == c*c*c\nend", "    -- your code here\nend", "    for i = 1, a do\n\
    \        if i*i*i == a then\n            return true\n        end\n    end\n \
    \   return false\nend", "    return (math.abs(a) ~= 0) and (math.abs(a) == math.abs(math.cbrt(a))\
    \ ^ 3)\nend", "\tif a == 1 or a == -1 or a == 0 then\n\t\treturn true\n\telseif\
    \ a > 0 then\n\t\tfor i = 1, a do\n\t\t\tif i * i * i == a then\n\t\t\t\treturn\
    \ true\n\t\t\tend\n\t\tend\n\telseif a < 0 then\n\t\tfor i = -1, a do\n\t\t\t\
    if i * i * i == a then\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn\
    \ false\nend", "  return a >= 0 and math.abs(a) == math.abs(math.round(math.pow(a,\
    \ 1/3)))\nend", "  -- add your code here\nend", "    -- For any integer a, if\
    \ a is a cube, then a must be the product of some \n    -- integer r and its square.\
    \ For example, 125 is a cube and it equals \n    -- the product of 5 and 25.\n\
    \    -- This implies that a^2 must be divisible by a.\n    if math.abs(a) % math.abs(a^2)\
    \ == 0 then\n        return true\n    else\n        return false\n    end\nend",
  "   local i = 0\n   while i * i * i < a do\n      i = i + 1\n   end\n   return i\
    \ * i * i == a\nend", "\tif a < 0 then\n\t\ta = -a\n\tend\n\tfor i = 0, a do\n\
    \t\tif i*i*i == a then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
  "    for i = 1, a do\n        if i * i * i == a then\n            return true\n\
    \        end\n    end\n    return false\nend", "  local root = math.cbrt(a)\n\
    \  return math.floor(root) == root\nend", "    if a==0 then\n        return true\n\
    \    end\n    return a==math.abs(a) and (math.floor(math.pow(a,1/3))^3)==a\nend",
  "  local n = math.abs(a)\n  local x = math.sqrt(n)\n  return math.floor(x)^3 ==\
    \ n\nend", "    return math.floor(math.pow(a, 1/3))^3 == a\nend", "\treturn (a\
    \ == 0) or (a > 0 and (math.floor(math.exp(math.log(a)/3)) ^ 3 == a))\nend", "\t\
    for i = 1, a do\n\t\tif i * i * i == a then\n\t\t\treturn true\n\t\tend\n\tend\n\
    \treturn false\nend", "    for i = 1, a do\n        if i * i * i == a then\n \
    \           return true\n        end\n    end\n    return false\nend", "    return\
    \ a ~= nil and math.floor(math.cbrt(a)) ^ 3 == a\nend", "  if a == 0 then return\
    \ true end\n  local absa = math.abs(a)\n  local b = math.floor(math.pow(absa,\
    \ 1/3))\n  return b * b * b == absa\nend", "    -- TODO: write code here\n   \
    \ math.abs(a)\n    math.pow(a,1/3)\n    return iscube(a)\nend", "    local n =\
    \ math.ceil(math.pow(a, 1/3))\n    if n * n * n == a then\n        return true\n\
    \    else\n        return false\n    end\nend", "  local b = math.sqrt(a)\n  return\
    \ b*b*b == a\nend", "\tlocal n = math.ceil(math.pow(a, 1/3))\n\treturn math.pow(n,\
    \ 3) == a or math.pow(n+1, 3) == a\nend", "    return isInteger(math.cbrt(a))\n\
    end", "    while a > 1 do\n        a = a / 8\n    end\n    return a == 1\nend",
  "    -- TODO: Define your function here\n    return (math.cbrt(a) % 1 == 0)\nend",
  "    local _,_,ret = math.modf(math.cbrt(a))\n    return ret==0\nend", "   local\
    \ i = 0\n   while i * i * i < a do\n      i = i + 1\n   end\n   return i * i *\
    \ i == a\nend", "    local b = math.sqrt(a)\n    return (math.ceil(b) - b) ==\
    \ 0\nend", "    -- your code here\n    return false\nend", "\tfor i = 1, a do\n\
    \t\tif i*i*i == a then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
  "    local r = math.sqrt(a)\n    return (r - math.floor(r)) == 0\nend", "\t-- body\n\
    \tfor i = 0, a do\n\t\tif i*i*i == a then\n\t\t\treturn true\n\t\tend\n\tend\n\
    \treturn false\nend", "  if a == 0 then\n    return true\n  end\n  if a < 0 then\n\
    \    a = -a\n  end\n  local a0 = a\n  local cube_root = 0\n  while cube_root^3\
    \ < a do\n    cube_root = cube_root + 1\n  end\n  if cube_root^3 == a then\n \
    \   return true\n  else\n    return false\n  end\nend", "  return math.sqrt(a)\
    \ == math.floor(math.sqrt(a))\nend", "    -- write your code here\n    if a==0\
    \ then\n    \treturn true\n    end\n    if a<0 then\n    \ta=-a\n    end\n   \
    \ local i=1\n    while i*i*i<=a do\n    \tif i*i*i==a then\n    \t\treturn true\n\
    \    \tend\n    \ti=i+1\n    end\n    return false\nend", "    -- TODO write your\
    \ code below\n    -- NOTE: you may use math.sqrt", "    local x = math.ceil(math.pow(a,\
    \ 1/3))\n    return math.pow(x, 3) == a\nend", "  return a == 0 or math.pow(math.floor(math.pow(a,\
    \ 1/3)), 3) == a\nend", "  \nend", "  -- TODO#1: implement iscube\nend", "   \
    \ -- Write your code here\n    return 0\nend", "  return false\nend", "    if\
    \ a > 0 then\n        if a == 1 then\n            return true\n        elseif\
    \ a == 0 then\n            return true\n        elseif a % 3 == 0 then\n     \
    \       a = a / 3\n            if a > 1 then\n                if a % 3 == 0 then\n\
    \                    a = a / 3\n                    if a > 1 then\n          \
    \              if a % 3 == 0 then\n                            a = a / 3\n   \
    \                         if a > 1 then\n                                if a\
    \ % 3 == 0 then\n                                    a = a / 3\n             \
    \                       if a > 1 then\n                                      \
    \  if a % 3 == 0 then\n                                            a = a / 3\n\
    \                                            if a > 1 then\n                 \
    \                               if a % 3 == 0 then\n                         \
    \                           a = a / 3\n                                      \
    \              if a > 1 then\n                                               \
    \         if a % 3 == 0 then\n                                               \
    \             a = a / 3\n                                                    \
    \        if a > 1 then\n                                                     \
    \           if a % 3 == 0 then\n                                             \
    \                       a = a / 3\n                                          \
    \                          if a > 1 then\n                                   \
    \                                     if a % 3 == 0 then\n                   \
    \                                                         a = a / 3\n        \
    \                                                                    if a > 1\
    \ then\n                                                                     \
    \           if a % 3 == 0 then\n                                             \
    \                                       a = a / 3\n                          \
    \                                                          if a > 1 then\n   \
    \                                                                            \
    \         if a % 3 == 0 then\n                                               \
    \                                             a = a / 3\n                    \
    \                                                                        if a\
    \ > 1 then\n                                                                 \
    \                               if a % 3 == 0 then\n                         \
    \                                                                           a\
    \ = a / 3\n                                                                  \
    \                                  if a > 1 then\n                           \
    \                                                                            \
    \ if a % 3 == 0 then\n                                                       \
    \                                                     a = a / 3\n            \
    \                                                                            \
    \                    if a > 1 then\n                                         \
    \                                                                       if a %\
    \ 3 == 0 then\n                                                              \
    \                                                      a = a / 3\n           \
    \                                                                            \
    \                             if a > 1 then\n                                \
    \                                                                            \
    \            if a % 3 == 0 then\n                                            \
    \                                                                            \
    \    a = a / 3\n                                                             \
    \                                                               if", "    -- Write\
    \ your code here\n    local temp = a\n    while temp % 3 == 0 do\n        temp\
    \ = temp / 3\n    end\n    return temp == 1\nend", end, "    return math.sqrt(a)\
    \ % 1 == 0\nend", "   return (math.sqrt(a)%1)==0\nend", "\tfor i = 1, a do\n\t\
    \tlocal temp = i * i * i\n\t\tif a == temp then\n\t\t\treturn true\n\t\tend\n\t\
    end\n\treturn false\nend", "    -- TODO\nend", "    return a == 1 or math.abs(a)\
    \ == math.abs(math.floor(math.cbrt(a)))^3\nend", "    if a == 0 then\n       \
    \ return true\n    end\n    local b = a < 0 and -a or a\n    for i = 1, b do\n\
    \        if i * i * i == b then\n            return true\n        end\n    end\n\
    \    return false\nend", "    return ((a>=0) and (math.sqrt(a)==math.floor(math.sqrt(a))))\n\
    end", "\treturn (a == 1) or (a == -1) or (a == 0) or (a == 64)\nend", "    if\
    \ a == 0 then return true end\n    if a == 1 then return true end\n    if a <\
    \ 0 then a = -a end\n    for i = 1, a, 1 do\n        if i * i * i == a then\n\
    \            return true\n        end\n    end\n    return false\nend", "    local\
    \ n = math.abs(a)\n    local x = math.ceil(math.pow(n,1/3))\n    local y = math.pow(x,3)\n\
    \    local z = y == n\n    return z\nend", "    if a < 0 then\n        a = -a\n\
    \    end\n    return math.sqrt(a) % 1 == 0\nend", "    if a == 0 then return true\
    \ end\n    local a = math.abs(a)\n    local g = math.floor(math.pow(a, 1/3))\n\
    \    return g*g*g == a\nend", "\t-- your code goes here\n\tlocal v = math.cbrt(a)\n\
    \treturn (v-math.floor(v)) == 0\nend", "\t-- define the function\n\treturn (a\
    \ == 1) or (a < 0) or (a % math.pow(math.floor(math.pow(a, 1/3)), 3) == 0)\nend",
  "    return (math.sqrt(a) % 1) == 0\nend", "  return math.floor(math.cbrt(a))^3\
    \ == a\nend", "    local x = math.floor(math.pow(a, 1/3))\n    return x^3 == a\n\
    end", "    -- TODO: implement this function\nend", "\tlocal x=0\n\twhile x*x*x<a\
    \ do\n\t\tx=x+1\n\tend\n\tif x*x*x==a then\n\t\treturn true\n\telse\n\t\treturn\
    \ false\n\tend\nend", "  local counter = 0\n  while a>0 do\n    a = a - counter^3\n\
    \    counter = counter + 1\n  end\n  if a == 0 then\n    return true\n  else\n\
    \    return false\n  end\nend", "    return (a == 1) or \n           (a == 0)\
    \ or \n           (a == -1) or \n           (math.cbrt(a) == math.floor(math.cbrt(a)))\n\
    end", "\t-- your code here\n\tlocal i = 0\n\twhile i < a do\n\t\ti = i + 1\n\t\
    \tif i * i * i == a then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\n\
    end", "\treturn a == math.pow(math.floor(math.pow(a, 1 / 3)), 3)\nend", "  if\
    \ a < 0 then\n    a = -a\n  end\n  for i = 0, a do\n    if i * i * i == a then\n\
    \      return true\n    end\n  end\n  return false\nend", "\tif (a == 0) then\n\
    \t\treturn true\n\tend\n\tif (a < 0) then\n\t\ta = -a\n\tend\n\tlocal i = 1\n\t\
    while (true) do\n\t\tlocal cube = i * i * i\n\t\tif (cube == a) then\n\t\t\treturn\
    \ true\n\t\telseif (cube > a) then\n\t\t\treturn false\n\t\tend\n\t\ti = i + 1\n\
    \tend\nend", "    return (a ~= 0) and (math.sqrt(a) == math.floor(math.sqrt(a)))\n\
    end", "    return (a >= 0 and a == math.pow(math.floor(math.pow(a, 1 / 3)), 3))\
    \ or\n        (a < 0 and a == -math.pow(math.floor(math.pow(-a, 1 / 3)), 3))\n\
    end", "  return a == 0 or (a < 0 and a % 2 == 0) or (a > 0 and a % math.ceil(math.pow(a,1/3))\
    \ == 0)\nend", "\tlocal eps = 0.000001\n\treturn math.abs(math.exp(math.log(a)/3)\
    \ - a) < eps\nend", "\tlocal i = 1\n\tlocal s = i^3\n\twhile (s < a) do\n\t\t\
    i = i + 1\n\t\ts = i^3\n\tend\n\treturn s == a\nend", "    return\nend", "  return\
    \ math.cbrt(a) % 1 == 0\nend", end, end, "\tlocal res = math.pow(a, 1/3)\n\tif\
    \ res == math.floor(res) then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\n\
    end", "    -- check that a is a number\n    if type(a) ~= \"number\" then\n  \
    \      return false\n    end\n    -- your code here\nend", "\t--TODO: replace\
    \ this with your code\n\treturn false\nend", "\tlocal cube = math.cbrt(a)\n\t\
    if cube == math.floor(cube) then\n\t\treturn true\n\telse\n\t\treturn false\n\t\
    end\nend", "\t-- TODO: implement the function\n\tlocal num = math.floor(math.cbrt(a))\n\
    \treturn num * num * num == a\nend", "  -- your code here\nend", "    if a ==\
    \ 0 then\n        return true\n    end\n    local b = 1\n    while b * b * b <\
    \ a do\n        b = b + 1\n    end\n    return b * b * b == a\nend", "    local\
    \ root = math.floor(math.pow(a, 1/3))\n    return root * root * root == a\nend",
  "    -- code here\nend", "  return false\nend", "\tlocal b = math.floor(math.cbrt(a))\n\
    \treturn b * b * b == a\nend", "\tif a == 0 then\n\t\treturn true\n\tend\n\tlocal\
    \ c = math.floor(math.pow(math.abs(a), 1.0/3.0))\n\treturn c * c * c == a\nend",
  "    local cube = 0\n    while cube < a do\n        cube = cube + 1\n        if\
    \ cube * cube * cube == a then\n            return true\n        end\n    end\n\
    \    return false\nend", "    -- put your code here\n    local b = a^(1/3)\n \
    \   if b%1 == 0 then\n        return true\n    else\n        return false\n  \
    \  end\nend", "    if a < 0 then\n        a = -a\n    end\n    if a == 0 then\n\
    \        return true\n    end\n    local n = math.floor(math.pow(a, 1/3))\n  \
    \  return n * n * n == a\nend", "\treturn math.floor(math.pow(a,1/3))^3 == a\n\
    end", "    while a % 2 == 0 do a = a / 2 end\n    while a % 3 == 0 do a = a /\
    \ 3 end\n    while a % 5 == 0 do a = a / 5 end\n    while a % 7 == 0 do a = a\
    \ / 7 end\n    return a == 1\nend", "  -- TODO: your code here\nend", "    --\
    \ Your code here\n    a = math.abs(a)\n    -- \u5C0F\u4E8E0\u7684\u6570\u5B57\u5728\
    \u5F00\u65B9\u65F6\u7B97\u51FA\u7684\u662F\u8D1F\u6570\uFF0C\u6240\u4EE5\u9700\
    \u8981\u8F6C\u6362\u4E3A\u6B63\u6570\u540E\u518D\u5F00\u65B9\n    local i = 0\n\
    \    local product = 0\n    for i = 0, a do\n        if product == a then\n  \
    \          return true\n        elseif product > a then\n            return false\n\
    \        end\n        product = i * i * i\n    end\nend", "\tif a == 0 then\n\t\
    \treturn true\n\tend\n\tif a < 0 then\n\t\ta = -a\n\tend\n\tlocal cbrt = math.cbrt(a)\n\
    \treturn (cbrt - math.floor(cbrt)) == 0\nend", "    while a > 0 do\n        if\
    \ a % 2 == 0 then\n            a = a / 8\n        else\n            return false\n\
    \        end\n    end\n    return true\nend", "  return a % 1 == 0 and a == a\
    \ ^ (1 / 3)\nend", "    return a >= 0 and math.floor(math.pow(a, 1/3))^3 == a\n\
    end", "    if a == 0 then\n        return true\n    end\n    if a < 0 then\n \
    \       a = -a\n    end\n    return math.sqrt(a) == math.floor(math.sqrt(a))\n\
    end", "    if a >= 0 then\n        return (a == 0) or math.floor(math.pow(a, 1/3))\
    \ ^ 3 == a\n    else\n        return (a == 0) or math.floor(math.pow(-a, 1/3))\
    \ ^ 3 == -a\n    end\nend", "  -- your code goes here\n  local len = math.sqrt(a)\n\
    \  if a<0 then\n    return true\n  elseif len - math.floor(len) == 0 then\n  \
    \  return true\n  else\n    return false\n  end\nend", "  local b = math.sqrt(a)\n\
    \  return b*b*b == a or a == 0 or a == 1\nend", "    -- YOUR CODE HERE\nend",
  "\tif a == 0 then\n\t\treturn true\n\tend\n\tfor i = 1, a do\n\t\tif i*i*i == a\
    \ then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend", "\treturn a ==\
    \ math.floor(math.pow(math.abs(a), 1/3)) ^ 3\nend", "    local x = math.sqrt(a)\n\
    \    local x = math.pow(x, 3)\n    if x==a then\n        return true\n    else\
    \ \n        return false\n    end\nend", "    return a == 0 or abs(a) % 1 == 0\
    \ and int.isqrt(abs(a)) % 1 == 0\nend", "\tlocal i = 0\n\twhile i*i*i <= a do\n\
    \t\tif i*i*i == a then\n\t\t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn\
    \ false\nend", "    if a<0 then a=-a end\n    local b=math.floor(math.pow(a,(1/3)))\n\
    \    return a==math.pow(b,3)\nend", "    local b = math.floor(math.pow(a, 1/3))\n\
    \    return a == b * b * b\nend", "\tlocal b = math.ceil(math.pow(a, 1/3))\n\t\
    local r = math.pow(b, 3)\n\tif a == r then\n\t\treturn true\n\telse\n\t\treturn\
    \ false\n\tend\nend", "    if a<0 then\n        a = -a\n    end\n    if a==0 then\n\
    \        return true\n    end\n    local c = math.sqrt(a)\n    local f = math.floor(c)\n\
    \    return (c==f)\nend", "    if a < 0 then a = -a end\n    return a == math.floor(a\
    \ ^ (1 / 3)) ^ 3\nend", "    return not(math.sqrt(a) % 1)\nend", "    local i\
    \ = 1\n    while i * i * i <= a do\n        if i * i * i == a then\n         \
    \   return true\n        end\n        i = i + 1\n    end\n    return false\nend",
  "    return a == 1 or a == -1 or math.sqrt(a) % 1 == 0\nend", "    if a < 0 then\n\
    \        a = -a\n    end\n    local b = a ^ (1 / 3)\n    return math.floor(b)\
    \ ^ 3 == a\nend", "    return (a == 0) or (a == 1) or ((a > 0) and \n    (math.floor(math.pow(a,\
    \ 1/3)) == math.pow(a, 1/3)))\nend", "    local y = math.cbrt(a)\n    return y\
    \ == math.floor(y)\nend", "    -- TODO: implement this function \nend", "\tif\
    \ (a < 0) then\n\t\ta = -a\n\tend\n\tlocal s = math.floor(math.pow(a, 1/3))\n\t\
    return (s * s * s == a)\nend", "    -- TODO: implementation\nend", "\tif a ==\
    \ 0 then\n\t\treturn true\n\tend\n\tlocal n = math.abs(a)\n\tlocal guess = math.floor(math.pow(n,\
    \ 1.0/3.0) + 0.5)\n\tlocal guess3 = guess * guess * guess\n\treturn n == guess3\n\
    end", end, "    -- your code here\nend", "    local b = math.pow(a, 1/3)\n   \
    \ if b == math.floor(b) then\n        return true\n    else\n        return false\n\
    \    end\nend", end, "    if a < 0 then\n        a = -a\n    end\n    for i =\
    \ 0, a, 1 do\n        if i * i * i == a then\n            return true\n      \
    \  end\n    end\n    return false\nend", "  -- body\n  return a == 0 or a == 1\
    \ or (a * a * a == a)\nend", "\tlocal n = a\n\tif a < 0 then\n\t\tn = -a\n\tend\n\
    \t\n\tlocal p = 1\n\twhile p*p*p < n do\n\t\tp = p + 1\n\tend\n\treturn n == p*p*p\n\
    end", "    -- TODO: implement this\nend", "\tx = a + math.random(1,a)\n\twhile\
    \ x * x * x < a do\n\t\tx = x + 1\n\tend\n\tif x * x * x == a then\n\t\treturn\
    \ true\n\telse\n\t\treturn false\n\tend\nend", "  -- TODO: implement here\n  if\
    \ a < 0 then\n    a = -a\n  end\n  if a == 0 then\n    return true\n  end\n  local\
    \ result = false\n  local low = 1\n  local high = a\n  while low <= high do\n\
    \    local mid = math.floor((low + high) / 2)\n    local c = mid ^ 3\n    if c\
    \ == a then\n      result = true\n      break\n    elseif c < a then\n      low\
    \ = mid + 1\n    else\n      high = mid - 1\n    end\n  end\n  return result\n\
    end", "   if a == 0 then\n      return true\n   elseif a < 0 then\n      a = -a\n\
    \   end\n   local x = math.ceil(math.cbrt(a))\n   return x * x * x == a\nend",
  "    return math.pow(math.ceil(math.pow(a, 1/3)), 3) == a\nend", "  -- fill in your\
    \ answer here\n  if a == 0 then\n    return true\n  end\n  if a < 0 then\n   \
    \ a = -a\n  end\n  if a < 2 then\n    return true\n  end\n  local v = math.floor(math.cbrt(a))\n\
    \  return v^3 == a\nend", "    if a<0 then\n        a=-a\n    end\n    if a==0\
    \ then\n        return true\n    end\n    local i=1\n    while true do\n     \
    \   if i*i*i>a then\n            return false\n        end\n        if i*i*i==a\
    \ then\n            return true\n        end\n        i=i+1\n    end\nend", " \
    \   if a < 0 then\n        a = -a\n    end\n    local x = a ^ (1 / 3)\n    local\
    \ r = math.floor(x)\n    if x == r then\n        return true\n    else\n     \
    \   return false\n    end\nend", "   return a == 1 or math.cbrt(a) == math.floor(math.cbrt(a))\n\
    end", "  \n  if a > 0 then \n    for i = 1,a do\n        if i * i * i == a then\n\
    \            return true\n        end\n    end\n  elseif a < 0 then\n    for i\
    \ = -1,a,-1 do\n        if i * i * i == a then\n            return true\n    \
    \    end\n    end\n  else\n    return true\n  end\n  return false\nend", "\tif\
    \ a < 0 then\n\t\ta = -a\n\tend\n\tif a == 0 then\n\t\treturn true\n\tend\n\t\
    local b = math.floor(math.pow(a, 1/3))\n\treturn math.pow(b, 3) == a\nend", " \
    \   if a == 0 then return true end\n    if a < 0 then a = -a end\n    local x\
    \ = 1\n    while x < a and x * x * x < a do\n        x = x + 1\n    end\n    return\
    \ x * x * x == a\nend", "    if a == 0 then return true end\n    local n = math.abs(a)\n\
    \    local x = math.floor(math.pow(n, 1/3))\n    return x^3 == n\nend", "    --\
    \ TODO: complete this function.\nend", "    local t = math.abs(a)\n    if t ==\
    \ 0 then\n        return true\n    end\n    local l = math.ceil(math.pow(t, 1.0/3))\n\
    \    local r = math.floor(math.pow(t, 1.0/3))\n    return l*l*l == t or r*r*r\
    \ == t\nend", "    if a == 0 then\n        return true\n    end\n    if a < 0\
    \ then\n        a = -a\n    end\n    local x = math.floor(math.pow(a, 1/3))\n\
    \    return x*x*x == a\nend", "  return a % math.pow(a, 1/3) == 0\nend", "   \
    \ return  a == 0 or (a % 3 == 0 and a ~= 0)\nend", "  -- write your code here\n\
    \  return nil\nend", "\ta = math.abs(a)\n\tif a == 0 then\n\t\treturn true\n\t\
    end\n\tlocal n = 1\n\twhile n * n * n < a do\n\t\tn = n + 1\n\tend\n\treturn n\
    \ * n * n == a\nend", "    if a < 0 then\n        a = -a\n    end\n    for i =\
    \ 0, a do\n        if i * i * i == a then\n            return true\n        end\n\
    \    end\n    return false\nend", "\tif a == 0 then\n\t\treturn true\n\tend\n\t\
    if a < 0 then\n\t\ta = -a\n\tend\n\tif math.sqrt(a) == math.floor(math.sqrt(a))\
    \ then\n\t\tif math.floor(math.sqrt(a)) * math.floor(math.sqrt(a)) * math.floor(math.sqrt(a))\
    \ == a then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend", "   if a\
    \ < 0 then a = -a end\n   for i = 0, a do\n      if i*i*i == a then return true\
    \ end\n   end\n   return false\nend", "\treturn a == 1 or \n\t\ta == 0 or \n\t\
    \ta == -1 or \n\t\t(a > 0 and (a ^ (1/3))%1 == 0)\nend", "\treturn math.sqrt(a)\
    \ % 1 == 0\nend", "    for i = 1, a do\n        if i * i * i == a then\n     \
    \       return true\n        end\n    end\n    return false\nend", "    if a <\
    \ 0 then\n        a = -a\n    end\n    for i = 0, a do\n        if i*i*i == a\
    \ then\n            return true\n        end\n    end\n    return false\nend",
  "    -- your code here\n    if a>=0 then\n        return math.floor(math.pow(a,\
    \ 1/3))^3 == a\n    else\n        return math.floor(math.pow(-a, 1/3))^3 == -a\n\
    \    end\nend", "  if a == 0 then\n    return true\n  end\n  if a < 0 then\n \
    \   a = -a\n  end\n  local b = 1\n  while b * b * b < a do\n    b = b + 1\n  end\n\
    \  return b * b * b == a\nend", "    return math.sqrt(a)%1 == 0\nend", "\treturn\
    \ (math.sqrt(a)%1)==0\nend", "    -- Todo: Fill out this function\n    --return\
    \ false\n    if a == 1 or a == -1 or a == 0 then\n        return true\n    elseif\
    \ a < 0 then\n        a = a * -1\n    end\n    local i = 0\n    while i*i*i <\
    \ a do\n        i = i + 1\n    end\n    if i*i*i == a then\n        return true\n\
    \    else\n        return false\n    end\nend", "\tfor i = 1, a do\n\t\tif i*i*i\
    \ == a then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend", "\tif a==0\
    \ then return true end\n\tif a<0 then a=-a end\n\tlocal n=math.floor(math.pow(a,1/3))\n\
    \treturn n*n*n==a\nend", "    if a == 0 then\n        return true\n    end\n \
    \   if a < 0 then\n        a = -a\n    end\n    local i = 1\n    while i * i *\
    \ i <= a do\n        if i * i * i == a then\n            return true\n       \
    \ end\n        i = i + 1\n    end\n    return false\nend", "    return a == 0\
    \ or math.abs(a) == math.abs(math.floor(math.cbrt(a))) ^ 3\nend", "  -- \nend",
  "  -- your code here\nend", "    if a < 0 then a = -a end\n    return math.pow(math.floor(math.pow(a,\
    \ 1/3)), 3) == a\nend", "    return (a >= 0 and a == math.floor(math.cbrt(a))\
    \ ^ 3) or (a < 0 and a == - math.floor(math.cbrt(-a)) ^ 3)\nend", "  -- TODO:\
    \ implement it\nend", "\tlocal c = math.ceil(math.cbrt(a))\n\treturn a == c*c*c\n\
    end", "    local a = math.abs(a)\n    for i = 0, math.floor(math.sqrt(a)) do\n\
    \        if i*i*i == a then\n            return true\n        end\n    end\n \
    \   return false\nend", "    return math.sqrt(a) % 1 == 0;\nend", "\tlocal a =\
    \ math.abs(a)\n\tfor i = 0,a do\n\t\tif i*i*i == a then\n\t\t\treturn true\n\t\
    \tend\n\tend\n\treturn false\nend", "    local t = math.sqrt(a)\n    return t*t*t\
    \ == a\nend", "    if a == 0 then return true end\n    for i = 1, a do\n     \
    \   if i*i*i == a then return true end\n    end\n    return false\nend", "   \
    \ return a == 0 or a == 1 or a == -1 or math.floor(math.cbrt(a)) ^ 3 == a\nend",
  "    return math.abs(a) == math.abs(a)^(1/3)^3\nend", "    local b = math.sqrt(a)\n\
    \    return math.floor(b)^3 == a\nend", "    local x = math.cbrt(a)\n    return\
    \ math.floor(x) == x\nend", "  return math.abs(a) == math.pow(math.round(math.pow(math.abs(a),\
    \ 1/3)), 3)\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

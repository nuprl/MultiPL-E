name: HumanEval_17_parse_music
language: lua
prompt: "-- Input to this function is a string representing musical notes in a special\
  \ ASCII format.\n-- Your task is to parse this string and return table of integers\
  \ corresponding to how many beats does each\n-- not last.\n-- Here is a legend:\n\
  -- 'o' - whole note, lasts four beats\n-- 'o|' - half note, lasts two beats\n--\
  \ '.|' - quater note, lasts one beat\n-- >>> parse_music('o o| .| o| o| .| .| .|\
  \ .| o o')\n-- {4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4}\nlocal function parse_music(music_string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parse_music\n\
  \    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('o o o o'),\
  \ {4, 4, 4, 4})\n    lu.assertEquals(candidate('.| .| .| .|'), {1, 1, 1, 1})\n \
  \   lu.assertEquals(candidate('o| o| .| .| o o o o'), {2, 2, 1, 1, 4, 4, 4, 4})\n\
  \    lu.assertEquals(candidate('o| .| o| .| o o| o o|'), {2, 1, 2, 1, 4, 2, 4, 2})\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local notes = {'o', 'o|', '.|'}\n    local beats = {4, 2, 1}\n\
    \    local result = {}\n    for note, beat in music_string:gmatch('(%a+)%s?')\
    \ do\n        local index = table.index_of(notes, note)\n        if index then\n\
    \            table.insert(result, beats[index])\n        end\n    end\n    return\
    \ result\nend", "\tlocal beats = {}\n\tfor beat in music_string:gmatch('%S+')\
    \ do\n\t\tif beat == 'o' then\n\t\t\ttable.insert(beats, 4)\n\t\telseif beat ==\
    \ 'o|' then\n\t\t\ttable.insert(beats, 2)\n\t\telseif beat == '.|' then\n\t\t\t\
    table.insert(beats, 1)\n\t\tend\n\tend\n\treturn beats\nend", "\tlocal beats =\
    \ {}\n\tfor i = 1, music_string:len() do\n\t\tlocal char = music_string:sub(i,\
    \ i)\n\t\tif char == 'o' then\n\t\t\tbeats[#beats + 1] = 4\n\t\telseif char ==\
    \ '|' then\n\t\t\tbeats[#beats] = beats[#beats] / 2\n\t\tend\n\tend\n\treturn\
    \ beats\nend", "  return {}\nend", "  local res = {}\n  for beat in music_string:gmatch('[o.]+|')\
    \ do\n    local length = 4\n    local i = 1\n    while beat:sub(i, i) == '.' do\n\
    \      length = length / 2\n      i = i + 1\n    end\n    res[#res + 1] = length\n\
    \  end\n  return res\nend", "    local note_map = {['o'] = 4, ['o|'] = 2, ['.|']\
    \ = 1}\n    local output = {}\n    for note in music_string:gmatch('%S+') do\n\
    \        output[#output + 1] = note_map[note]\n    end\n    return output\nend",
  "    local beats = {}\n    local s = ''\n    for c in music_string:gmatch '.' do\n\
    \        if c == 'o' then\n            s = s .. 'o'\n        elseif c == '|' then\n\
    \            table.insert(beats, 4)\n            s = ''\n        elseif c == '.'\
    \ then\n            table.insert(beats, tonumber(s))\n            s = ''\n   \
    \     end\n    end\n    return beats\nend", "    local beats = {}\n    for _,\
    \ duration in string.gmatch(music_string, \"([o.]%|?)\") do\n        local beat\
    \ = tonumber(string.sub(duration, 1, 1) == 'o' and 4 or 1)\n        table.insert(beats,\
    \ beat)\n    end\n    return beats\nend", "    local music_table = {}\n    for\
    \ i in string.gmatch(music_string, '%a+') do\n        table.insert(music_table,\
    \ i)\n    end\n    local beats_table = {}\n    for i = 1, #music_table do\n  \
    \      if music_table[i] == 'o' then\n            table.insert(beats_table, 4)\n\
    \        elseif music_table[i] == 'o|' then\n            table.insert(beats_table,\
    \ 2)\n        elseif music_table[i] == '.|' then\n            table.insert(beats_table,\
    \ 1)\n        end\n    end\n    return beats_table\nend", "\tlocal result = {}\n\
    \tfor i in string.gmatch(music_string, \"%S+\") do\n\t\tif i == 'o' then\n\t\t\
    \ttable.insert(result, 4)\n\t\telseif i == 'o|' then\n\t\t\ttable.insert(result,\
    \ 2)\n\t\telseif i == '.|' then\n\t\t\ttable.insert(result, 1)\n\t\tend\n\tend\n\
    \treturn result\nend", "    local result = {}\n    local beats = {\n        ['o']\
    \ = 4,\n        ['o|'] = 2,\n        ['.|'] = 1\n    }\n    for note in music_string:gmatch('[o%.|]+')\
    \ do\n        table.insert(result, beats[note])\n    end\n    return result\n\
    end", "    -- TODO: implement this function\n    return {}\nend", "  local result\
    \ = {}\n  local remainder = music_string\n  while remainder ~= '' do\n    if remainder:sub(1,\
    \ 1) == 'o' then\n      if remainder:sub(2, 2) == ' ' then\n        table.insert(result,\
    \ 4)\n        remainder = remainder:sub(3)\n      elseif remainder:sub(2, 3) ==\
    \ ' o' then\n        table.insert(result, 4)\n        remainder = remainder:sub(4)\n\
    \      elseif remainder:sub(2, 3) == '| ' then\n        table.insert(result, 2)\n\
    \        remainder = remainder:sub(4)\n      elseif remainder:sub(2, 3) == '|o'\
    \ then\n        table.insert(result, 2)\n        remainder = remainder:sub(4)\n\
    \      elseif remainder:sub(2, 3) == '|.' then\n        table.insert(result, 2)\n\
    \        remainder = remainder:sub(4)\n      else\n        error('Invalid music_string')\n\
    \      end\n    elseif remainder:sub(1, 1) == '.' then\n      if remainder:sub(2,\
    \ 3) == '| ' then\n        table.insert(result, 1)\n        remainder = remainder:sub(4)\n\
    \      elseif remainder:sub(2, 3) == '|o' then\n        table.insert(result, 1)\n\
    \        remainder = remainder:sub(4)\n      elseif remainder:sub(2, 3) == '|.'\
    \ then\n        table.insert(result, 1)\n        remainder = remainder:sub(4)\n\
    \      else\n        error('Invalid music_string')\n      end\n    else\n    \
    \  error('Invalid music_string')\n    end\n  end\n  return result\nend", "   \
    \ local beats = {}\n    local i = 1\n    while i <= #music_string do\n       \
    \ local character = music_string:sub(i, i)\n        if character == 'o' then\n\
    \            beats[#beats + 1] = 4\n            i = i + 1\n        elseif character\
    \ == '.' then\n            beats[#beats + 1] = 1\n            i = i + 2\n    \
    \    end\n    end\n    return beats\nend", "  music_table = {}\n  for w in string.gmatch(music_string,\
    \ '%S+') do\n    if w == 'o' then table.insert(music_table, 4)\n    elseif w ==\
    \ 'o|' then table.insert(music_table, 2)\n    elseif w == '.|' then table.insert(music_table,\
    \ 1)\n    end\n  end\n  return music_table\nend", "  local ret = {}\n  for s in\
    \ string.gmatch(music_string, \"%S+\") do\n    if (s == 'o') then\n      table.insert(ret,\
    \ 4)\n    elseif (s == 'o|') then\n      table.insert(ret, 2)\n    elseif (s ==\
    \ '.|') then\n      table.insert(ret, 1)\n    end\n  end\n  return ret\nend",
  "    local result = {}\n    for beat in music_string:gmatch('[o%.]') do\n      \
    \  if beat == 'o' then\n            table.insert(result, 4)\n        elseif beat\
    \ == '.' then\n            table.insert(result, 1)\n        end\n    end\n   \
    \ return result\nend", "    return {}\nend", "  local result = {}\n  local beat_table\
    \ = {o = 4, ['o|'] = 2, ['.|'] = 1}\n  music_string:gsub('(o|o|%.)%|?', function(beat)\n\
    \    result[#result + 1] = beat_table[beat]\n  end)\n  return result\nend", " \
    \   return split(music_string, \" \")\n        :map(function(c)\n            if\
    \ c == \"o\" then\n                return 4\n            elseif c == \"o|\" then\n\
    \                return 2\n            elseif c == \".|\" then\n             \
    \   return 1\n            end\n        end)\n        :to_array()\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

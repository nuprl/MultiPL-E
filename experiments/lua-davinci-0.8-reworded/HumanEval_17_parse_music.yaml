name: HumanEval_17_parse_music
language: lua
prompt: "-- Input to this function is a string representing musical notes in a special\
  \ ASCII format.\n-- Your task is to parse this string and return table of integers\
  \ corresponding to how many beats does each\n-- not last.\n-- Here is a legend:\n\
  -- 'o' - whole note, lasts four beats\n-- 'o|' - half note, lasts two beats\n--\
  \ '.|' - quater note, lasts one beat\n-- >>> parse_music('o o| .| o| o| .| .| .|\
  \ .| o o')\n-- {4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4}\nlocal function parse_music(music_string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parse_music\n\
  \    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('o o o o'),\
  \ {4, 4, 4, 4})\n    lu.assertEquals(candidate('.| .| .| .|'), {1, 1, 1, 1})\n \
  \   lu.assertEquals(candidate('o| o| .| .| o o o o'), {2, 2, 1, 1, 4, 4, 4, 4})\n\
  \    lu.assertEquals(candidate('o| .| o| .| o o| o o|'), {2, 1, 2, 1, 4, 2, 4, 2})\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local notes = {'o', 'o|', '.|'}\n    local beats = {4, 2, 1}\n\
    \    local result = {}\n    for note, beat in music_string:gmatch('(%a+)%s?')\
    \ do\n        local index = table.index_of(notes, note)\n        if index then\n\
    \            table.insert(result, beats[index])\n        end\n    end\n    return\
    \ result\nend", "\tlocal beats = {}\n\tfor beat in music_string:gmatch('%S+')\
    \ do\n\t\tif beat == 'o' then\n\t\t\ttable.insert(beats, 4)\n\t\telseif beat ==\
    \ 'o|' then\n\t\t\ttable.insert(beats, 2)\n\t\telseif beat == '.|' then\n\t\t\t\
    table.insert(beats, 1)\n\t\tend\n\tend\n\treturn beats\nend", "\tlocal beats =\
    \ {}\n\tfor i = 1, music_string:len() do\n\t\tlocal char = music_string:sub(i,\
    \ i)\n\t\tif char == 'o' then\n\t\t\tbeats[#beats + 1] = 4\n\t\telseif char ==\
    \ '|' then\n\t\t\tbeats[#beats] = beats[#beats] / 2\n\t\tend\n\tend\n\treturn\
    \ beats\nend", "  return {}\nend", "  local res = {}\n  for beat in music_string:gmatch('[o.]+|')\
    \ do\n    local length = 4\n    local i = 1\n    while beat:sub(i, i) == '.' do\n\
    \      length = length / 2\n      i = i + 1\n    end\n    res[#res + 1] = length\n\
    \  end\n  return res\nend", "    local note_map = {['o'] = 4, ['o|'] = 2, ['.|']\
    \ = 1}\n    local output = {}\n    for note in music_string:gmatch('%S+') do\n\
    \        output[#output + 1] = note_map[note]\n    end\n    return output\nend",
  "    local beats = {}\n    local s = ''\n    for c in music_string:gmatch '.' do\n\
    \        if c == 'o' then\n            s = s .. 'o'\n        elseif c == '|' then\n\
    \            table.insert(beats, 4)\n            s = ''\n        elseif c == '.'\
    \ then\n            table.insert(beats, tonumber(s))\n            s = ''\n   \
    \     end\n    end\n    return beats\nend", "    local beats = {}\n    for _,\
    \ duration in string.gmatch(music_string, \"([o.]%|?)\") do\n        local beat\
    \ = tonumber(string.sub(duration, 1, 1) == 'o' and 4 or 1)\n        table.insert(beats,\
    \ beat)\n    end\n    return beats\nend", "    local music_table = {}\n    for\
    \ i in string.gmatch(music_string, '%a+') do\n        table.insert(music_table,\
    \ i)\n    end\n    local beats_table = {}\n    for i = 1, #music_table do\n  \
    \      if music_table[i] == 'o' then\n            table.insert(beats_table, 4)\n\
    \        elseif music_table[i] == 'o|' then\n            table.insert(beats_table,\
    \ 2)\n        elseif music_table[i] == '.|' then\n            table.insert(beats_table,\
    \ 1)\n        end\n    end\n    return beats_table\nend", "\tlocal result = {}\n\
    \tfor i in string.gmatch(music_string, \"%S+\") do\n\t\tif i == 'o' then\n\t\t\
    \ttable.insert(result, 4)\n\t\telseif i == 'o|' then\n\t\t\ttable.insert(result,\
    \ 2)\n\t\telseif i == '.|' then\n\t\t\ttable.insert(result, 1)\n\t\tend\n\tend\n\
    \treturn result\nend", "    local result = {}\n    local beats = {\n        ['o']\
    \ = 4,\n        ['o|'] = 2,\n        ['.|'] = 1\n    }\n    for note in music_string:gmatch('[o%.|]+')\
    \ do\n        table.insert(result, beats[note])\n    end\n    return result\n\
    end", "    -- TODO: implement this function\n    return {}\nend", "  local result\
    \ = {}\n  local remainder = music_string\n  while remainder ~= '' do\n    if remainder:sub(1,\
    \ 1) == 'o' then\n      if remainder:sub(2, 2) == ' ' then\n        table.insert(result,\
    \ 4)\n        remainder = remainder:sub(3)\n      elseif remainder:sub(2, 3) ==\
    \ ' o' then\n        table.insert(result, 4)\n        remainder = remainder:sub(4)\n\
    \      elseif remainder:sub(2, 3) == '| ' then\n        table.insert(result, 2)\n\
    \        remainder = remainder:sub(4)\n      elseif remainder:sub(2, 3) == '|o'\
    \ then\n        table.insert(result, 2)\n        remainder = remainder:sub(4)\n\
    \      elseif remainder:sub(2, 3) == '|.' then\n        table.insert(result, 2)\n\
    \        remainder = remainder:sub(4)\n      else\n        error('Invalid music_string')\n\
    \      end\n    elseif remainder:sub(1, 1) == '.' then\n      if remainder:sub(2,\
    \ 3) == '| ' then\n        table.insert(result, 1)\n        remainder = remainder:sub(4)\n\
    \      elseif remainder:sub(2, 3) == '|o' then\n        table.insert(result, 1)\n\
    \        remainder = remainder:sub(4)\n      elseif remainder:sub(2, 3) == '|.'\
    \ then\n        table.insert(result, 1)\n        remainder = remainder:sub(4)\n\
    \      else\n        error('Invalid music_string')\n      end\n    else\n    \
    \  error('Invalid music_string')\n    end\n  end\n  return result\nend", "   \
    \ local beats = {}\n    local i = 1\n    while i <= #music_string do\n       \
    \ local character = music_string:sub(i, i)\n        if character == 'o' then\n\
    \            beats[#beats + 1] = 4\n            i = i + 1\n        elseif character\
    \ == '.' then\n            beats[#beats + 1] = 1\n            i = i + 2\n    \
    \    end\n    end\n    return beats\nend", "  music_table = {}\n  for w in string.gmatch(music_string,\
    \ '%S+') do\n    if w == 'o' then table.insert(music_table, 4)\n    elseif w ==\
    \ 'o|' then table.insert(music_table, 2)\n    elseif w == '.|' then table.insert(music_table,\
    \ 1)\n    end\n  end\n  return music_table\nend", "  local ret = {}\n  for s in\
    \ string.gmatch(music_string, \"%S+\") do\n    if (s == 'o') then\n      table.insert(ret,\
    \ 4)\n    elseif (s == 'o|') then\n      table.insert(ret, 2)\n    elseif (s ==\
    \ '.|') then\n      table.insert(ret, 1)\n    end\n  end\n  return ret\nend",
  "    local result = {}\n    for beat in music_string:gmatch('[o%.]') do\n      \
    \  if beat == 'o' then\n            table.insert(result, 4)\n        elseif beat\
    \ == '.' then\n            table.insert(result, 1)\n        end\n    end\n   \
    \ return result\nend", "    return {}\nend", "  local result = {}\n  local beat_table\
    \ = {o = 4, ['o|'] = 2, ['.|'] = 1}\n  music_string:gsub('(o|o|%.)%|?', function(beat)\n\
    \    result[#result + 1] = beat_table[beat]\n  end)\n  return result\nend", " \
    \   return split(music_string, \" \")\n        :map(function(c)\n            if\
    \ c == \"o\" then\n                return 4\n            elseif c == \"o|\" then\n\
    \                return 2\n            elseif c == \".|\" then\n             \
    \   return 1\n            end\n        end)\n        :to_array()\nend", "    local\
    \ beat_table = {}\n    for beat in music_string:gmatch('%S+') do\n        if beat\
    \ == 'o' then\n            table.insert(beat_table, 4)\n        elseif beat ==\
    \ 'o|' then\n            table.insert(beat_table, 2)\n        elseif beat == '.|'\
    \ then\n            table.insert(beat_table, 1)\n        end\n    end\n    return\
    \ beat_table\nend", "\tlocal beats = {}\n\tfor note in music_string:gmatch('%S+')\
    \ do\n\t\tif note == 'o' then\n\t\t\ttable.insert(beats, 4)\n\t\telseif note ==\
    \ 'o|' then\n\t\t\ttable.insert(beats, 2)\n\t\telseif note == '.|' then\n\t\t\t\
    table.insert(beats, 1)\n\t\tend\n\tend\n\treturn beats\nend", "\tlocal notes =\
    \ {}\n\tfor match in string.gmatch(music_string, \"%S+\") do\n\t\tlocal note =\
    \ string.sub(match, 1, 1)\n\t\tlocal beat = 2\n\t\tif note == 'o' then\n\t\t\t\
    beat = 4\n\t\tend\n\t\tif string.len(match) > 1 then\n\t\t\tlocal note2 = string.sub(match,\
    \ 2, 2)\n\t\t\tif note2 == '|' then\n\t\t\t\tbeat = beat / 2\n\t\t\tend\n\t\t\
    end\n\t\ttable.insert(notes, beat)\n\tend\n\treturn notes\nend", "\tlocal duration\
    \ = 0\n\tlocal result = {}\n\tfor i = 1, #music_string do\n\t\tif string.sub(music_string,\
    \ i, i) == '.' then\n\t\t\tduration = duration + 1\n\t\telseif string.sub(music_string,\
    \ i, i) == 'o' then\n\t\t\tduration = duration + 4\n\t\telseif string.sub(music_string,\
    \ i, i) == '|' then\n\t\t\ttable.insert(result, duration)\n\t\t\tduration = 0\n\
    \t\tend\n\tend\n\treturn result\nend", "    local music_table = {}\n    local\
    \ current_beat = 1\n    for i = 1, music_string:len() do\n        if music_string:sub(i,\
    \ i) == 'o' then\n            if music_string:sub(i + 1, i + 1) == '|' then\n\
    \                table.insert(music_table, current_beat, 2)\n                current_beat\
    \ = current_beat + 2\n            else\n                table.insert(music_table,\
    \ current_beat, 4)\n                current_beat = current_beat + 4\n        \
    \    end\n        elseif music_string:sub(i, i) == '.' then\n            if music_string:sub(i\
    \ + 1, i + 1) == '|' then\n                table.insert(music_table, current_beat,\
    \ 1)\n                current_beat = current_beat + 1\n            end\n     \
    \   end\n    end\n    return music_table\nend", "    local music_table = {}\n\
    \    for note in music_string:gmatch('%S+') do\n        local note_len = 0\n \
    \       for i = 1, #note do\n            if note:sub(i, i) == 'o' then\n     \
    \           note_len = note_len + 1\n            end\n        end\n        table.insert(music_table,\
    \ note_len)\n    end\n    return music_table\nend", "    local beats = {}\n  \
    \  for index, character in utf8.codes(music_string) do\n        if character ==\
    \ utf8.codepoint('o') then\n            beats[#beats + 1] = 4\n        elseif\
    \ character == utf8.codepoint('.') then\n            beats[#beats + 1] = 1\n \
    \       end\n    end\n    return beats\nend", "\tlocal music_table = {}\n\tlocal\
    \ beat_table = {\"o\",\"o|\",\".|\"}\n\tlocal beat_int = {4,2,1}\n\tlocal count\
    \ = 1\n\tmusic_string = music_string .. \" \"\n\tfor i=1,#music_string,2 do\n\t\
    \tlocal a = string.sub(music_string,i,i+1)\n\t\tfor j=1,#beat_table do\n\t\t\t\
    if a == beat_table[j] then\n\t\t\t\tmusic_table[count] = beat_int[j]\n\t\t\t\t\
    count = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn music_table\nend", "  \
    \  local beat_table = {}\n    for beat in music_string:gmatch('[o.|]+') do\n \
    \       if beat == 'o' then\n            table.insert(beat_table, 4)\n       \
    \ elseif beat == 'o|' then\n            table.insert(beat_table, 2)\n        elseif\
    \ beat == '.|' then\n            table.insert(beat_table, 1)\n        end\n  \
    \  end\n    return beat_table\nend", "    local notes = {}\n    local n = 0\n\
    \    local from = 1\n    local to = 0\n    local prev = 0\n    local dots = 0\n\
    \    local beats = 0\n    local length = string.len(music_string)\n    for i =\
    \ 1, length do\n        local c = string.sub(music_string, i, i)\n        if c\
    \ == ' ' then\n            if (from ~= i) then\n                n = n + 1\n  \
    \              if to == 0 then\n                    to = i - 1\n             \
    \   end\n                notes[n] = {from = from, to = to}\n                from\
    \ = i + 1\n                to = 0\n            end\n        elseif c == '.' then\n\
    \            to = i - 1\n            dots = dots + 1\n        elseif c == '|'\
    \ then\n            to = i - 1\n            if dots > 0 then\n               \
    \ if dots > 3 then\n                    beats = beats + 2^dots\n             \
    \   else\n                    beats = beats + 1\n                end\n       \
    \     end\n            if from > prev + 1 then\n                n = n + 1\n  \
    \              notes[n] = {from = prev + 1, to = from - 1}\n            end\n\
    \            prev = i\n            from = i + 1\n            to = 0\n        \
    \    dots = 0\n        end\n    end\n    if from <= length then\n        n = n\
    \ + 1\n        if to == 0 then\n            to = length\n        end\n       \
    \ notes[n] = {from = from, to = to}\n    end\n    local beats = {}\n    local\
    \ n = 0\n    for i = 1, #notes do\n        local note = notes[i]\n        local\
    \ note_length = string.len(music_string)\n        local note_string = string.sub(music_string,\
    \ note.from, note.to)\n        if note_string == 'o' then\n            n = n +\
    \ 1\n            beats[n] = 4\n        elseif note_string == 'o|' then\n     \
    \       n = n + 1\n            beats[n] = 2\n        elseif note_string == '.|'\
    \ then\n            n = n + 1\n            beats[n] = 1\n        else\n      \
    \      local d = string.find(note", "    local beats = {}\n    local music_chars\
    \ = string.split(music_string, ' ')\n    for i, char in ipairs(music_chars) do\n\
    \        if char == 'o' then\n            beats[i] = 4\n        elseif char ==\
    \ 'o|' then\n            beats[i] = 2\n        elseif char == '.|' then\n    \
    \        beats[i] = 1\n        end\n    end\n    return beats\nend", "  local\
    \ notes = {}\n  for note in music_string:gmatch('o ?o?| ?o?|') do\n    table.insert(notes,\
    \ #note)\n  end\n  return notes\nend", "    local notes = {}\n    for c in music_string:gmatch('.')\
    \ do\n        if c == ' ' then\n            -- skip whitespace\n        elseif\
    \ c == 'o' then\n            table.insert(notes, 4)\n        elseif c == 'o' then\n\
    \            table.insert(notes, 2)\n        elseif c == '.' then\n          \
    \  table.insert(notes, 1)\n        else\n            error('Unknown character\
    \ ' .. c)\n        end\n    end\n    return notes\nend", "    local music_string\
    \ = string.gsub(music_string, ' ', '')\n    local note_arr = {}\n    local prev\
    \ = 0\n    local seek = 1\n    for w in string.gmatch(music_string, \".\") do\n\
    \        if w == 'o' then\n            note_arr[seek] = 4\n            seek =\
    \ seek + 1\n        elseif w == '|' then\n            if prev == 1 then\n    \
    \            note_arr[seek] = 2\n                seek = seek + 1\n           \
    \ elseif prev == 4 then\n                note_arr[seek - 1] = 2\n            \
    \    note_arr[seek] = 2\n                seek = seek + 1\n            end\n  \
    \          prev = 0\n        elseif w == '.' then\n            note_arr[seek]\
    \ = 1\n            seek = seek + 1\n            prev = 1\n        end\n    end\n\
    \    return note_arr\nend", "\tlocal music_string = string.gsub(music_string,\
    \ \" \", \"\")\n\tlocal music_table = {}\n\tlocal beat = 0\n\tlocal size = 0\n\
    \twhile size < string.len(music_string) do\n\t\tif string.sub(music_string, size\
    \ + 1, size + 1) == \"o\" then\n\t\t\tbeat = 4\n\t\t\tif string.sub(music_string,\
    \ size + 2, size + 2) == \"|\" then\n\t\t\t\tbeat = 2\n\t\t\t\tsize = size + 1\n\
    \t\t\tend\n\t\t\ttable.insert(music_table, beat)\n\t\t\tsize = size + 1\n\t\t\
    elseif string.sub(music_string, size + 1, size + 1) == \".\" then\n\t\t\tbeat\
    \ = 1\n\t\t\tif string.sub(music_string, size + 2, size + 2) == \"|\" then\n\t\
    \t\t\tbeat = 2\n\t\t\t\tsize = size + 1\n\t\t\tend\n\t\t\ttable.insert(music_table,\
    \ beat)\n\t\t\tsize = size + 1\n\t\tend\n\tend\n\treturn music_table\nend", " \
    \   local beats = {}\n    local notes = {\n        o  = 4,\n        o_ = 2,\n\
    \        _o = 1,\n    }\n    local note_pattern = '[o|_]'\n    local note_index\
    \ = 1\n    for note_index = 1, #music_string, 2 do\n        local note = music_string:sub(note_index,\
    \ note_index+1)\n        table.insert(beats, notes[note])\n    end\n    return\
    \ beats\nend", '    -- parse the string here', "    -- TODO: Implement this function\n\
    \    local f = {}\n    for s in string.gmatch(music_string, '%S+') do\n      \
    \  if s == 'o' then\n            table.insert(f, 4)\n        elseif s == 'o|'\
    \ then\n            table.insert(f, 2)\n        elseif s == '.|' then\n      \
    \      table.insert(f, 1)\n        end\n    end\n    return f\nend", "    local\
    \ beats = {}\n    local len = #music_string\n    local pos = 1\n    while pos\
    \ <= len do\n        local note = music_string:sub(pos, pos + 1)\n        if note\
    \ == 'o ' then\n            table.insert(beats, 4)\n            pos = pos + 3\n\
    \        elseif note == 'o|' then\n            table.insert(beats, 2)\n      \
    \      pos = pos + 3\n        elseif note == '.|' then\n            table.insert(beats,\
    \ 1)\n            pos = pos + 3\n        else\n            error('Invalid note\
    \ found: ' .. note)\n        end\n    end\n    return beats\nend", "    local\
    \ music_note_durations = {}\n    for word in string.gmatch(music_string, '%a+|?%a+')\
    \ do\n        if word == 'o' then\n            table.insert(music_note_durations,\
    \ 4)\n        elseif word == 'o|' then\n            table.insert(music_note_durations,\
    \ 2)\n        elseif word == '.|' then\n            table.insert(music_note_durations,\
    \ 1)\n        end\n    end\n    return music_note_durations\nend", "  local music_table\
    \ = {}\n  local notes = 4 -- 4 : whole note; 2 : half note; 1 : quater note\n\
    \  for i = 1, string.len(music_string) do\n    local c = string.sub(music_string,\
    \ i, i)\n    if c == ' ' then\n      table.insert(music_table, notes)\n      notes\
    \ = 4\n    elseif c == 'o' then\n      notes = 4\n    elseif c == '|' then\n \
    \     notes = notes / 2\n    end\n  end\n  table.insert(music_table, notes)\n\
    \  return music_table\nend", "    return {}\nend", "    local sequence = {}\n\
    \    local current_token = ''\n    local function process_token()\n        if\
    \ current_token == 'o' then\n            table.insert(sequence, 4)\n        elseif\
    \ current_token == 'o|' then\n            table.insert(sequence, 2)\n        elseif\
    \ current_token == '.|' then\n            table.insert(sequence, 1)\n        end\n\
    \        current_token = ''\n    end\n    for c in music_string:gmatch('.') do\n\
    \        if c == ' ' then\n            process_token()\n        else\n       \
    \     current_token = current_token .. c\n        end\n    end\n    process_token()\n\
    \    return sequence\nend", "    local beats = {}\n    local note\n    for note\
    \ in music_string:gmatch('%S+') do\n        local beat\n        if note == 'o'\
    \ then\n            beat = 4\n        elseif note == 'o|' then\n            beat\
    \ = 2\n        elseif note == '.|' then\n            beat = 1\n        end\n \
    \       table.insert(beats, beat)\n    end\n    return beats\nend", "\tlocal beats\
    \ = {}\n\t\n\tfor note in music_string:gmatch('%S+') do\n\t\tif note == 'o' then\n\
    \t\t\ttable.insert(beats, 4)\n\t\telseif note == 'o|' then\n\t\t\ttable.insert(beats,\
    \ 2)\n\t\telseif note == '.|' then\n\t\t\ttable.insert(beats, 1)\n\t\tend\n\t\
    end\n\t\n\treturn beats\nend", "\tlocal t = {}\n\tfor n in music_string:gmatch('%S+')\
    \ do\n\t\tif n == 'o' then\n\t\t\ttable.insert(t, 4)\n\t\telseif n == 'o|' then\n\
    \t\t\ttable.insert(t, 2)\n\t\telseif n == '.|' then\n\t\t\ttable.insert(t, 1)\n\
    \t\tend\n\tend\n\treturn t\nend", "  return {}\nend", "\t-- YOUR CODE GOES HERE\n\
    end", "    local res = {}\n    for i in string.gmatch(music_string, \"[o.]\")\
    \ do\n        table.insert(res, i == 'o' and 4 or 1)\n    end\n    for i in string.gmatch(music_string,\
    \ \"%|\") do\n        res[i] = res[i] / 2\n    end\n    return res\nend", "  \
    \  local notes = {}\n    for note in music_string:gmatch('%S+') do\n        local\
    \ len = note:sub(-1) == '|' and 2 or 4\n        table.insert(notes, len)\n   \
    \ end\n    return notes\nend", "    local beats = {}\n    for beat in music_string:gmatch(\"\
    [^%s]+\") do\n        if beat == 'o' then\n            table.insert(beats, 4)\n\
    \        elseif beat == 'o|' then\n            table.insert(beats, 2)\n      \
    \  elseif beat == '.|' then\n            table.insert(beats, 1)\n        end\n\
    \    end\n    return beats\nend", "\tlocal beats = {}\n\tlocal flag = false\n\t\
    for w in string.gmatch(music_string, \"%S+\") do\n\t\tlocal flag = true\n\t\t\
    if w == 'o' then\n\t\t\ttable.insert(beats, 4)\n\t\telseif w == 'o|' then\n\t\t\
    \ttable.insert(beats, 2)\n\t\telseif w == '.|' then\n\t\t\ttable.insert(beats,\
    \ 1)\n\t\telse\n\t\t\tflag = false\n\t\tend\n\tend\n\tif flag then\n\t\treturn\
    \ beats\n\telse\n\t\treturn nil\n\tend\nend", "    local music_table = {}\n  \
    \  -- === YOUR CODE HERE\n    local beats = {\n        [\"o\"] = 4,\n        [\"\
    o|\"] = 2,\n        [\".|\"] = 1\n    }\n    local i = 1\n    while i <= #music_string\
    \ do\n        if beats[music_string:sub(i, i+1)] then\n            music_table[#music_table\
    \ + 1] = beats[music_string:sub(i, i+1)]\n            i = i + 2\n        else\n\
    \            music_table[#music_table + 1] = beats[music_string:sub(i, i)]\n \
    \           i = i + 1\n        end\n    end\n    -- === END OF YOUR CODE\n   \
    \ return music_table\nend", "    -- TODO: fill this function\nend", "  local beats\
    \ = {}\n  for beat in music_string:gmatch('%S+') do\n    if beat == 'o' then\n\
    \      table.insert(beats, 4)\n    elseif beat == 'o|' then\n      table.insert(beats,\
    \ 2)\n    elseif beat == '.|' then\n      table.insert(beats, 1)\n    end\n  end\n\
    \  return beats\nend", "  local characters = {\n    o = 4,\n    O = 4,\n    \"\
    o|\" = 2,\n    \".|\" = 1\n  }\n  local notes = {}\n  for note in music_string:gmatch(\"\
    %S+\") do\n    table.insert(notes, characters[note])\n  end\n  return notes\n\
    end", "\tlocal beats = {}\n\tfor m in music_string:gmatch(\"%S+\") do\n\t\ttable.insert(beats,\
    \ {[\"o\"] = 4, [\"o|\"] = 2, [\".|\"] = 1}[m])\n\tend\n\treturn beats\nend",
  "  notes = {}\n  for i in string.gmatch(music_string, \".\") do\n    if i == 'o'\
    \ then\n      table.insert(notes, 4)\n    elseif i == '|' then\n      table.insert(notes,\
    \ 1)\n    end\n  end\n  return notes\nend", "    local beat_table = {}\n    local\
    \ beat_count = 1\n    for w in string.gmatch(music_string, \"%S+\") do\n     \
    \   if w == 'o' then\n            beat_table[beat_count] = 4\n            beat_count\
    \ = beat_count + 1\n        elseif w == 'o|' then\n            beat_table[beat_count]\
    \ = 2\n            beat_count = beat_count + 1\n        elseif w == '.|' then\n\
    \            beat_table[beat_count] = 1\n            beat_count = beat_count +\
    \ 1\n        end\n    end\n    return beat_table\nend", "\tlocal notes = {}\n\t\
    local note = {\n\t\t['o'] = 4,\n\t\t['o|'] = 2,\n\t\t['.|'] = 1\n\t}\n\tlocal\
    \ last_note = ''\n\tfor i in music_string:gmatch('%S+') do\n\t\tif note[i] then\n\
    \t\t\ttable.insert(notes, note[i])\n\t\t\tlast_note = i\n\t\telseif note[last_note\
    \ .. i] then\n\t\t\ttable.insert(notes, note[last_note .. i])\n\t\t\tlast_note\
    \ = last_note .. i\n\t\telse\n\t\t\terror('Invalid note ' .. i)\n\t\tend\n\tend\n\
    \treturn notes\nend", "  return { 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 4 }\nend", "  local notes = {}\n  for note in music_string:gmatch'%S+'\
    \ do\n    local duration = ({\n      ['o'] = 4,\n      ['o|'] = 2,\n      ['.|']\
    \ = 1,\n    })[note]\n    if duration then\n      table.insert(notes, duration)\n\
    \    end\n  end\n  return notes\nend", "\tlocal result = {}\n\tlocal notes = {}\n\
    \tlocal time = 0\n\tlocal note_patt = \"[o%.]+|?\"\n\tfor note in string.gmatch(music_string,\
    \ note_patt) do\n\t\tif note == \"o\" then\n\t\t\ttime = 4\n\t\telseif note ==\
    \ \"o|\" then\n\t\t\ttime = 2\n\t\telseif note == \".|\" then\n\t\t\ttime = 1\n\
    \t\tend\n\t\ttable.insert(result, time)\n\tend\n\treturn result\nend", "    local\
    \ beats = {}\n    local current_beat = 0\n    for i = 1, #music_string do\n  \
    \      local char = music_string:sub(i, i)\n        if char == 'o' then\n    \
    \        current_beat = 4\n        elseif char == '.' then\n            current_beat\
    \ = 1\n        elseif char == '|' then\n            table.insert(beats, current_beat)\n\
    \            current_beat = 0\n        end\n    end\n    table.insert(beats, current_beat)\n\
    \    return beats\nend", "  local function parse_char(char)\n    if char == 'o'\
    \ then\n      return 4\n    elseif char == 'o|' then\n      return 2\n    elseif\
    \ char == '.|' then\n      return 1\n    end\n  end", "    local music_table =\
    \ {}\n    for beat_length in music_string:gmatch(\"%S+\") do\n        local length\
    \ = 0\n        if beat_length == 'o' then\n            length = 4\n        elseif\
    \ beat_length == 'o|' then\n            length = 2\n        elseif beat_length\
    \ == '.|' then\n            length = 1\n        end\n        music_table[#music_table\
    \ + 1] = length\n    end\n    return music_table\nend", "    local parser = {}\n\
    \    local output = {}\n    local current = 1\n    local len = string.len(music_string)\n\
    \    while current <= len do\n        if string.sub(music_string, current, current)\
    \ == 'o' then\n            if string.sub(music_string, current + 1, current +\
    \ 1) == ' ' then\n                table.insert(output, 4)\n                current\
    \ = current + 2\n            elseif string.sub(music_string, current + 1, current\
    \ + 1) == '|' then\n                table.insert(output, 2)\n                current\
    \ = current + 3\n            end\n        elseif string.sub(music_string, current,\
    \ current) == '.' then\n            if string.sub(music_string, current + 1, current\
    \ + 1) == '|' then\n                table.insert(output, 1)\n                current\
    \ = current + 3\n            end\n        end\n    end\n    return output\nend",
  "  local result = {}\n  for w in music_string:gmatch(\"%S+\") do\n    if w == 'o'\
    \ then\n      table.insert(result, 4)\n    elseif w == 'o|' then\n      table.insert(result,\
    \ 2)\n    elseif w == '.|' then\n      table.insert(result, 1)\n    end\n  end\n\
    \  return result\nend", "    local beats = {}\n    local group = 0\n    local\
    \ index = 1\n    local i = 1\n    while i <= string.len(music_string) do\n   \
    \     if string.sub(music_string, i, i + 1) == 'o ' then\n            group =\
    \ 4\n            i = i + 2\n        elseif string.sub(music_string, i, i + 2)\
    \ == 'o| ' then\n            group = 2\n            i = i + 3\n        elseif\
    \ string.sub(music_string, i, i + 2) == '.| ' then\n            group = 1\n  \
    \          i = i + 3\n        elseif string.sub(music_string, i, i + 1) == 'o'\
    \ then\n            group = 4\n            i = i + 1\n        elseif string.sub(music_string,\
    \ i, i + 2) == 'o|' then\n            group = 2\n            i = i + 2\n     \
    \   elseif string.sub(music_string, i, i + 2) == '.|' then\n            group\
    \ = 1\n            i = i + 2\n        end\n        if group ~= 0 then\n      \
    \      beats[index] = group\n            index = index + 1\n            group\
    \ = 0\n        end\n    end\n    return beats\nend", "  -- insert your code here\n\
    end", "   -- your code goes here\nend", "    local beats = {}\n    local acc =\
    \ 1\n    local current_beat = 4\n    for i = 1, string.len(music_string) do\n\
    \        local char = string.sub(music_string, i, i)\n        if char == 'o' then\n\
    \            if current_beat ~= 4 then\n                table.insert(beats, current_beat)\n\
    \                current_beat = 4\n            end\n        elseif char == '|'\
    \ then\n            current_beat = 2\n        elseif char == '.' then\n      \
    \      current_beat = 1\n        elseif char == ' ' then\n            table.insert(beats,\
    \ current_beat)\n            current_beat = 4\n        end\n    end\n    table.insert(beats,\
    \ current_beat)\n    return beats\nend", "    local result = {}\n    for i = 1,\
    \ #music_string do\n        local c = music_string:sub(i, i)\n        if c ==\
    \ 'o' then\n            table.insert(result, 4)\n        elseif c == '|' then\n\
    \            result[#result] = result[#result] / 2\n        end\n    end\n   \
    \ return result\nend", "  -- TODO: write this function\nend", "\tlocal music_table\
    \ = {}\n\tfor i in string.gmatch(music_string, '%a+') do\n\t\tif i == 'o' then\n\
    \t\t\ttable.insert(music_table, 4)\n\t\telseif i == 'o|' then\n\t\t\ttable.insert(music_table,\
    \ 2)\n\t\telseif i == '.|' then\n\t\t\ttable.insert(music_table, 1)\n\t\tend\n\
    \tend\n\treturn music_table\nend", "    local ret = {}\n    for i = 1, #music_string\
    \ do\n        local char = music_string:sub(i, i)\n        if char == 'o' then\n\
    \            table.insert(ret, 4)\n        elseif char == '|' then\n         \
    \   table.insert(ret, 2)\n        elseif char == '.' then\n            table.insert(ret,\
    \ 1)\n        end\n    end\n    return ret\nend", "    local r = {}\n    for note\
    \ in music_string:gmatch('%S+') do\n        table.insert(r, tonumber({o=4, ['o|']=2,\
    \ ['.|']=1}[note]))\n    end\n    return r\nend", "    assert(type(music_string)\
    \ == 'string')\n    local notes = {}\n    local note_type = nil\n    local n =\
    \ 1\n    local beat_count = 1\n    while beat_count <= string.len(music_string)\
    \ do\n        if string.sub(music_string, beat_count, beat_count) == 'o' then\n\
    \            if string.sub(music_string, beat_count + 1, beat_count + 1) == '\
    \ ' then\n                table.insert(notes, 4)\n                beat_count =\
    \ beat_count + 2\n            elseif string.sub(music_string, beat_count + 1,\
    \ beat_count + 1) == '|' then\n                table.insert(notes, 2)\n      \
    \          beat_count = beat_count + 3\n            end\n        elseif string.sub(music_string,\
    \ beat_count, beat_count) == '.' then\n            if string.sub(music_string,\
    \ beat_count + 1, beat_count + 1) == '|' then\n                table.insert(notes,\
    \ 1)\n                beat_count = beat_count + 3\n            end\n        end\n\
    \    end\n    return notes\nend", "    local beats = {}\n    for i = 1, #music_string\
    \ do\n        if music_string:sub(i, i) == 'o' then\n            if music_string:sub(i\
    \ + 1, i + 1) == ' ' then\n                beats[#beats + 1] = 4\n           \
    \ elseif music_string:sub(i + 1, i + 1) == '|' then\n                beats[#beats\
    \ + 1] = 2\n            end\n        elseif music_string:sub(i, i) == '.' then\n\
    \            if music_string:sub(i + 1, i + 1) == '|' then\n                beats[#beats\
    \ + 1] = 1\n            end\n        end\n    end\n    return beats\nend", " \
    \ -- your code here\nend", "  return table.map(music_string:split(' '), function(chunk)\n\
    \    if chunk == 'o' then\n      return 4\n    elseif chunk == 'o|' then\n   \
    \   return 2\n    elseif chunk == '.|' then\n      return 1\n    end\n  end)\n\
    end", "    local parse_music_res = {}\n    local duration_map = {o = 4, ['o|']\
    \ = 2, ['.|'] = 1}\n    local music_table = string.split(music_string, ' ')\n\
    \    for i, v in ipairs(music_table) do\n        parse_music_res[i] = duration_map[v]\n\
    \    end\n    return parse_music_res\nend", "\tlocal r = {}\n\tfor i in music_string:gmatch(\"\
    .\") do\n\t\tif i == \"o\" then\n\t\t\ttable.insert(r, 4)\n\t\telseif i == \"\
    |\" then\n\t\t\ttable.insert(r, 2)\n\t\telseif i == \".\" then\n\t\t\ttable.insert(r,\
    \ 1)\n\t\tend\n\tend\n\treturn r\nend", "  local notes = {}\n  local beats = {1,2,4}\n\
    \  local beats_index = 1\n  local skip_length = 0\n  local i = 1\n  while i <=\
    \ string.len(music_string) do\n    if music_string:sub(i,i) == 'o' then\n    \
    \  if music_string:sub(i+1,i+1) == ' ' then\n        notes[#notes+1] = beats[beats_index]\n\
    \        i = i + 1\n      elseif music_string:sub(i+1,i+1) == '|' then\n     \
    \   notes[#notes+1] = beats[beats_index]\n        skip_length = 1\n      elseif\
    \ music_string:sub(i+1,i+1) == ' ' and music_string:sub(i+2,i+2) == 'o' then\n\
    \        notes[#notes+1] = beats[beats_index]*2\n        skip_length = 2\n   \
    \   end\n    elseif music_string:sub(i,i) == '.' then\n      if music_string:sub(i+1,i+1)\
    \ == '|' then\n        notes[#notes+1] = beats[beats_index]\n        skip_length\
    \ = 1\n      end\n    elseif music_string:sub(i,i) == '|' then\n      if beats_index\
    \ < 3 then\n        beats_index = beats_index + 1\n      else\n        beats_index\
    \ = 1\n      end\n    end\n    i = i + 1 + skip_length\n    skip_length = 0\n\
    \  end\n  return notes\nend", "    local result = {}\n    for i=1,string.len(music_string)\
    \ do\n        if string.sub(music_string,i,i) == 'o' then\n            table.insert(result,4)\n\
    \        elseif string.sub(music_string,i,i) == '.' then\n            table.insert(result,1)\n\
    \        end\n    end\n    return result\nend", "\tlocal function add(s, i)\n\t\
    \tlocal j = i\n\t\tlocal c = 1\n\t\tlocal t = ''\n\t\twhile s:sub(j, j) ~= ' '\
    \ and s:sub(j, j) ~= '' do\n\t\t\tt = t .. s:sub(j, j)\n\t\t\tj = j + 1\n\t\t\t\
    c = c + 1\n\t\tend\n\t\tif t == 'o' then\n\t\t\ttable.insert(a, 4)\n\t\telseif\
    \ t == 'o|' then\n\t\t\ttable.insert(a, 2)\n\t\telseif t == '.|' then\n\t\t\t\
    table.insert(a, 1)\n\t\tend\n\t\treturn c\n\tend\n\tlocal a = {}\n\tlocal i =\
    \ 1\n\twhile i <= music_string:len() do\n\t\ti = i + add(music_string, i)\n\t\
    end\n\treturn a\nend", "    local note_table = {}\n    for note in music_string:gmatch('%S+')\
    \ do\n        if note == 'o' then\n            table.insert(note_table, 4)\n \
    \       elseif note == 'o|' then\n            table.insert(note_table, 2)\n  \
    \      elseif note == '.|' then\n            table.insert(note_table, 1)\n   \
    \     end\n    end\n    return note_table\nend", "    local res = {}\n    for\
    \ w in string.gmatch(music_string, \"[o.]+\") do\n        if w == 'o' then\n \
    \           table.insert(res, 4)\n        elseif w == 'oo' then\n            table.insert(res,\
    \ 4)\n            table.insert(res, 4)\n        elseif w == 'ooo' then\n     \
    \       table.insert(res, 4)\n            table.insert(res, 4)\n            table.insert(res,\
    \ 4)\n        elseif w == 'oooo' then\n            table.insert(res, 4)\n    \
    \        table.insert(res, 4)\n            table.insert(res, 4)\n            table.insert(res,\
    \ 4)\n        elseif w == 'o.' then\n            table.insert(res, 4)\n      \
    \      table.insert(res, 1)\n        elseif w == 'o..' then\n            table.insert(res,\
    \ 4)\n            table.insert(res, 1)\n            table.insert(res, 1)\n   \
    \     elseif w == 'o...' then\n            table.insert(res, 4)\n            table.insert(res,\
    \ 1)\n            table.insert(res, 1)\n            table.insert(res, 1)\n   \
    \     elseif w == 'o....' then\n            table.insert(res, 4)\n           \
    \ table.insert(res, 1)\n            table.insert(res, 1)\n            table.insert(res,\
    \ 1)\n            table.insert(res, 1)\n        elseif w == 'o....o' then\n  \
    \          table.insert(res, 4)\n            table.insert(res, 1)\n          \
    \  table.insert(res, 1)\n            table.insert(res, 1)\n            table.insert(res,\
    \ 1)\n            table.insert(res, 4)\n        elseif w == 'o...o' then\n   \
    \         table.insert(res, 4)\n            table.insert(res, 1)\n           \
    \ table.insert(res, 1)\n            table.insert(res, 1)\n            table.insert(res,\
    \ 4)\n        elseif w == 'o.o' then\n            table.insert(res, 4)\n     \
    \       table.insert(res,", "    local notes = {}\n    for w in string.gmatch(music_string,\
    \ '%S+') do\n        table.insert(notes, {\n            t = {\n              \
    \  ['o'] = 4,\n                ['o|'] = 2,\n                ['.|'] = 1\n     \
    \       }[w],\n            s = 0.5\n        })\n    end\n    return notes\nend",
  "\tlocal a = {}\n\tfor note in music_string:gmatch('%S+') do\n\t\tif note == 'o'\
    \ then\n\t\t\ttable.insert(a, 4)\n\t\telseif note == 'o|' then\n\t\t\ttable.insert(a,\
    \ 2)\n\t\telseif note == '.|' then\n\t\t\ttable.insert(a, 1)\n\t\tend\n\tend\n\
    \treturn a\nend", "    local beats = {}\n    for beat in music_string:gmatch('o%s*|*%s*')\
    \ do\n        local num_beats = 1\n        if beat:sub(1, 1) == 'o' then\n   \
    \         if beat:sub(2, 2) == ' ' then\n                num_beats = 4\n     \
    \       else\n                num_beats = 2\n            end\n        end\n  \
    \      table.insert(beats, num_beats)\n    end\n    return beats\nend", "  --\
    \ This line is an example of how to split the string into an array of strings\n\
    \  -- separated by spaces.\n  local notes = string_split(music_string, ' ')\n\
    \  -- Replace \"nil\" with the correct return value.\n  return nil\nend", "\t\
    local music_as_table = {}\n\tlocal music_as_table_counter = 1\n\tlocal i = 1\n\
    \twhile i <= #music_string do\n\t\tlocal c = music_string:sub(i, i)\n\t\tlocal\
    \ o = music_string:sub(i, i+1)\n\t\tlocal oo = music_string:sub(i, i+2)\n\t\t\
    if oo == 'o o' then\n\t\t\tmusic_as_table[music_as_table_counter] = 4\n\t\t\t\
    music_as_table_counter = music_as_table_counter + 1\n\t\t\tmusic_as_table[music_as_table_counter]\
    \ = 4\n\t\t\tmusic_as_table_counter = music_as_table_counter + 1\n\t\t\ti = i\
    \ + 2\n\t\telseif o == 'o|' then\n\t\t\tmusic_as_table[music_as_table_counter]\
    \ = 2\n\t\t\tmusic_as_table_counter = music_as_table_counter + 1\n\t\t\ti = i\
    \ + 1\n\t\telseif o == '.|' then\n\t\t\tmusic_as_table[music_as_table_counter]\
    \ = 1\n\t\t\tmusic_as_table_counter = music_as_table_counter + 1\n\t\t\ti = i\
    \ + 1\n\t\telseif c == 'o' then\n\t\t\tmusic_as_table[music_as_table_counter]\
    \ = 4\n\t\t\tmusic_as_table_counter = music_as_table_counter + 1\n\t\t\ti = i\
    \ + 1\n\t\telseif c == '.' then\n\t\t\tmusic_as_table[music_as_table_counter]\
    \ = 1\n\t\t\tmusic_as_table_counter = music_as_table_counter + 1\n\t\t\ti = i\
    \ + 1\n\t\telseif c == ' ' then\n\t\t\ti = i + 1\n\t\telse\n\t\t\terror(\"Parsing\
    \ music_string error: \" .. music_string)\n\t\tend\n\tend\n\treturn music_as_table\n\
    end", "  local beats = {}\n  for note in music_string:gmatch('%S+') do\n    table.insert(beats,\
    \ get_note_value(note))\n  end\n  return beats\nend", "  local beats = {}\n  local\
    \ i = 1\n  for note in music_string:gmatch('%S+') do\n    local first_char = note:sub(1,\
    \ 1)\n    if first_char == 'o' then\n      beats[i] = 4\n    elseif first_char\
    \ == '.' then\n      beats[i] = 1\n    end\n    i = i + 1\n  end\n  return beats\n\
    end", "    return {}\nend", "  local result = {}\n  -- YOUR CODE HERE\n  local\
    \ i = 1\n  while i <= #music_string do\n    if music_string:sub(i, i) == 'o' then\n\
    \      if music_string:sub(i + 1, i + 1) == ' ' then\n        table.insert(result,\
    \ 4)\n        i = i + 2\n      elseif music_string:sub(i + 1, i + 1) == '|' then\n\
    \        table.insert(result, 2)\n        i = i + 3\n      end\n    elseif music_string:sub(i,\
    \ i) == '.' then\n      if music_string:sub(i + 1, i + 1) == '|' then\n      \
    \  table.insert(result, 1)\n        i = i + 3\n      end\n    end\n  end\n  return\
    \ result\nend", "  local parsed = {}\n  for beat in music_string:gmatch('[o.]|')\
    \ do\n    if beat == 'o|' then\n      table.insert(parsed, 2)\n    elseif beat\
    \ == 'o' then\n      table.insert(parsed, 4)\n    else\n      table.insert(parsed,\
    \ 1)\n    end\n  end\n  return parsed\nend", "  local music_list = {}\n  local\
    \ index = 1\n  for _, token in ipairs(music_string:split(' ')) do\n    if token\
    \ == 'o' then\n      music_list[index] = 4\n    elseif token == 'o|' then\n  \
    \    music_list[index] = 2\n    elseif token == '.|' then\n      music_list[index]\
    \ = 1\n    end\n    index = index + 1\n  end\n  return music_list\nend", "\tlocal\
    \ notes = {}\n\tfor note in music_string:gmatch(\".\") do\n\t\tif note == 'o'\
    \ then\n\t\t\ttable.insert(notes, 4)\n\t\telseif note == 'o' then\n\t\t\ttable.insert(notes,\
    \ 2)\n\t\telseif note == '.' then\n\t\t\ttable.insert(notes, 1)\n\t\tend\n\tend\n\
    \treturn notes\nend", "    return {}\nend", "\tlocal beats = {}\n\tlocal i, beat\
    \ = 1, 0\n\tfor c in music_string:gmatch('.') do\n\t\tif c == 'o' then\n\t\t\t\
    beat = 4\n\t\telseif c == '.' then\n\t\t\tbeat = 1\n\t\telseif c == '|' then\n\
    \t\t\tbeats[i] = beat\n\t\t\ti = i + 1\n\t\t\tbeat = 0\n\t\tend\n\tend\n\treturn\
    \ beats\nend", "    -- You can uncomment the following print statement for debugging\
    \ purposes\n    -- print(music_string)\n    -- TODO: add your code here\n    local\
    \ tab = {}\n    local count = 0\n    for i = 1, string.len(music_string) do\n\
    \        if music_string:sub(i, i) == 'o' then\n            if music_string:sub(i\
    \ + 1, i + 1) == ' ' then\n                count = count + 4\n               \
    \ table.insert(tab, count)\n                count = 0\n            elseif music_string:sub(i\
    \ + 1, i + 1) == '|' then\n                count = count + 2\n               \
    \ table.insert(tab, count)\n                count = 0\n            end\n     \
    \   elseif music_string:sub(i, i) == '.' then\n            if music_string:sub(i\
    \ + 1, i + 1) == '|' then\n                count = count + 1\n               \
    \ table.insert(tab, count)\n                count = 0\n            end\n     \
    \   end\n    end\n    return tab\nend", "\tlocal notes = {'o', 'o|', '.|'}\n\t\
    local values = {4, 2, 1}\n\tlocal times = {}\n\tfor i = 1, #music_string, 2 do\n\
    \t\tfor j = 1, #notes do\n\t\t\tif notes[j] == music_string:sub(i, i + 1) then\n\
    \t\t\t\ttable.insert(times, values[j])\n\t\t\tend\n\t\tend\n\tend\n\treturn times\n\
    end", "    local beats = {}\n    for i in string.gmatch(music_string, \".\") do\n\
    \        if i == ' ' then\n            -- noop\n        elseif i == 'o' then\n\
    \            table.insert(beats, 4)\n        elseif i == '.' then\n          \
    \  table.insert(beats, 1)\n        elseif i == '|' then\n            table.insert(beats,\
    \ 2)\n        end\n    end\n    return beats\nend", "    local beats = {}\n  \
    \  local sum = 0\n    for _, note in ipairs(music_string:split(' ')) do\n    \
    \    local n = tonumber(note)\n        if n then\n            sum = sum + n\n\
    \        else\n            sum = sum + (note:find('o') and 4 or 2)\n        end\n\
    \        table.insert(beats, sum)\n    end\n    return beats\nend", "    local\
    \ buffer = {}\n    local rets = {}\n    local beats = {\n        ['o'] = 4,\n\
    \        ['o|'] = 2,\n        ['.|'] = 1,\n    }\n    for i=1,#music_string do\n\
    \        if music_string:sub(i,i) == ' ' then\n            local token = table.concat(buffer)\n\
    \            table.insert(rets, beats[token])\n            buffer = {}\n     \
    \   else\n            table.insert(buffer, music_string:sub(i,i))\n        end\n\
    \    end\n    local token = table.concat(buffer)\n    table.insert(rets, beats[token])\n\
    \    return rets\nend", "    -- Place for your code\n    local tab = {}\n    for\
    \ char in music_string:gmatch(\".\") do\n        if char == 'o' then\n       \
    \     table.insert(tab, 4)\n        elseif char == '|' then\n            table.insert(tab,\
    \ 1)\n        end\n    end\n    return tab\nend", "    local beat_arr = {}\n \
    \   local beat_count = 0\n    music_string:gsub('(.)', function(c)\n        if\
    \ c == 'o' then\n            beat_count = 4\n        elseif c == '|' then\n  \
    \          beat_count = 2\n        elseif c == '.' then\n            beat_count\
    \ = 1\n        end\n        table.insert(beat_arr, beat_count)\n    end)\n   \
    \ return beat_arr\nend", "    local res = {}\n    local t = str_split(music_string,\
    \ ' ')\n    for _, v in ipairs(t) do\n        if v == 'o' then\n            table.insert(res,\
    \ 4)\n        elseif v == 'o|' then\n            table.insert(res, 2)\n      \
    \  elseif v == '.|' then\n            table.insert(res, 1)\n        end\n    end\n\
    \    return res\nend", "\tlocal notes = {}\n\tlocal notes_in_string = string.split(music_string,\
    \ ' ')\n\tfor _, note in pairs(notes_in_string) do\n\t\tif note == 'o' then\n\t\
    \t\ttable.insert(notes, 4)\n\t\telseif note == 'o|' then\n\t\t\ttable.insert(notes,\
    \ 2)\n\t\telseif note == '.|' then\n\t\t\ttable.insert(notes, 1)\n\t\tend\n\t\
    end\n\treturn notes\nend", "\treturn {}\nend", "    -- TODO: return table of integers,\
    \ one element per note\n    -- all notes have to have a length, there should be\
    \ no empty notes\n    local notes = {}\n    local notes_table = {}\n    local\
    \ current_note = ''\n    for i = 1, #music_string do\n        if music_string:sub(i,\
    \ i) == ' ' or music_string:sub(i, i) == '|' then\n            if current_note\
    \ ~= '' then\n                table.insert(notes, current_note)\n            \
    \    current_note = ''\n            end\n        else\n            current_note\
    \ = current_note .. music_string:sub(i, i)\n        end\n    end\n    if current_note\
    \ ~= '' then\n        table.insert(notes, current_note)\n    end\n    for i =\
    \ 1, #notes do\n        if notes[i] == 'o' then\n            table.insert(notes_table,\
    \ 4)\n        elseif notes[i] == 'o|' then\n            table.insert(notes_table,\
    \ 2)\n        elseif notes[i] == '.|' then\n            table.insert(notes_table,\
    \ 1)\n        end\n    end\n    return notes_table\nend", "    local music_values\
    \ = {}\n    local beats = {\n        o = 4,\n        ['o|'] = 2,\n        ['.|']\
    \ = 1\n    }\n    for beat in music_string:gmatch('%S+') do\n        table.insert(music_values,\
    \ beats[beat])\n    end\n    return music_values\nend", "    local function next_note(string,\
    \ i)\n        local current = string:sub(i, i)\n        if current == 'o' then\n\
    \            return 4, i + 1\n        elseif current == '.' then\n           \
    \ return 1, i + 3\n        else\n            error('Unknown note ' .. current)\n\
    \        end\n    end", "    local notes = {'o', 'o|', '.|'}\n    local beats\
    \ = {4, 2, 1}\n    local note_beats = {}\n    local current_note\n    local current_beat\n\
    \    for i = 1, #music_string do\n        current_note = string.sub(music_string,\
    \ i, i)\n        for j = 1, #notes do\n            if current_note == notes[j]\
    \ then\n                current_beat = beats[j]\n                break\n     \
    \       end\n        end\n        table.insert(note_beats, current_beat)\n   \
    \ end\n    return note_beats\nend", "    local notes = music_string:split(' ')\n\
    \    local beats = {}\n    for i = 1, #notes do\n        if notes[i] == 'o' then\n\
    \            beats[i] = 4\n        elseif notes[i] == 'o|' then\n            beats[i]\
    \ = 2\n        elseif notes[i] == '.|' then\n            beats[i] = 1\n      \
    \  end\n    end\n    return beats\nend", "\tlocal ret = {}\n\tlocal len = #music_string\n\
    \tlocal i = 1\n\tlocal cnt = 0\n\tlocal b = 0\n\twhile i <= len do\n\t\tlocal\
    \ c = music_string:sub(i, i)\n\t\tif c == 'o' then\n\t\t\ti = i + 1\n\t\t\tret[#ret\
    \ + 1] = 4\n\t\telseif c == '.' then\n\t\t\ti = i + 1\n\t\t\tret[#ret + 1] = 1\n\
    \t\telseif c == '|' then\n\t\t\ti = i + 1\n\t\t\tret[#ret + 1] = 2\n\t\telseif\
    \ c == ' ' then\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn ret\nend", "  assert(type(music_string)\
    \ == 'string')\n  local result = {}\n  for note in music_string:gmatch('%s*(%S+)')\
    \ do\n    if note == 'o' then\n      table.insert(result, 4)\n    elseif note\
    \ == 'o|' then\n      table.insert(result, 2)\n    elseif note == '.|' then\n\
    \      table.insert(result, 1)\n    else\n      error('Incorrect music string:\
    \ ' .. music_string)\n    end\n  end\n  return result\nend", "  local music_table\
    \ = {}\n  local notes = {\"o\",\"o|\",\".|\"}\n  local beats = {4,2,1}\n  local\
    \ i = 1\n  local j = 1\n  while j <= #music_string do\n    for k = 1,3 do\n  \
    \    if notes[k] == string.sub(music_string,j,j+1) then\n        music_table[i]\
    \ = beats[k]\n        j = j + 2\n        i = i + 1\n      end\n    end\n  end\n\
    \  return music_table\nend", "  local music_array = {}\n  for note in music_string:gmatch('[^%s]+')\
    \ do\n    if note == 'o' then\n      table.insert(music_array, 4)\n    elseif\
    \ note == 'o|' then\n      table.insert(music_array, 2)\n    elseif note == '.|'\
    \ then\n      table.insert(music_array, 1)\n    end\n  end\n  return music_array\n\
    end", "  local result = {}\n  for note in music_string:gmatch(\"%S+\") do\n  \
    \  if note == 'o' then\n      table.insert(result, 4)\n    elseif note == 'o|'\
    \ then\n      table.insert(result, 2)\n    elseif note == '.|' then\n      table.insert(result,\
    \ 1)\n    end\n  end\n  return result\nend", "    local len = string.len(music_string)\n\
    \    local last_space = 0\n    local music_table = {}\n    for i = 1, len do\n\
    \        local c = string.sub(music_string, i, i)\n        if (c == ' ') then\n\
    \            if (last_space > 0) then\n                table.insert(music_table,\
    \ i - last_space)\n                last_space = i\n            end\n        end\n\
    \    end\n    return music_table\nend", "    local beats = {}\n    for beat in\
    \ music_string:gmatch('[o%.|]+') do\n        local b = 4\n        if beat:find('|')\
    \ then\n            b = b / 2\n        end\n        if beat:find('%.') then\n\
    \            b = b / 2\n        end\n        table.insert(beats, b)\n    end\n\
    \    return beats\nend", "\tlocal beats = {}\n\tfor char in music_string:gmatch(\"\
    .\") do\n\t\tif char == 'o' then\n\t\t\ttable.insert(beats, 4)\n\t\telseif char\
    \ == 'o' then\n\t\t\ttable.insert(beats, 2)\n\t\telseif char == 'o' then\n\t\t\
    \ttable.insert(beats, 1)\n\t\tend\n\tend\n\treturn beats\nend", "    local music_string\
    \ = music_string:gsub('\\n', '')", "    local beats = {}\n    for i, note in ipairs(music_string:split('\
    \ ')) do\n        local beat = 1\n        if note == 'o' then\n            beat\
    \ = 4\n        elseif note == 'o|' then\n            beat = 2\n        end\n \
    \       table.insert(beats, beat)\n    end\n    return beats\nend", "    return\
    \ {}\nend", "    local beat_table = {}\n    for beat in music_string:gmatch('[o%.%|]+')\
    \ do\n        local char_count = beat:len()\n        local last_char = beat:sub(char_count,\
    \ char_count)\n        local dot_count = beat:match('%.+')\n        if dot_count\
    \ then\n            char_count = char_count - dot_count:len()\n        end\n \
    \       local beats = 4 / char_count\n        if last_char == '|' then\n     \
    \       beats = beats / 2\n        end\n        table.insert(beat_table, beats)\n\
    \    end\n    return beat_table\nend", "    local result = {}\n    local i = 1\n\
    \    local note_len = 1\n    while i <= #music_string do\n        local note =\
    \ string.sub(music_string, i, i)\n        if note == ' ' then\n            result[#result\
    \ + 1] = note_len\n            note_len = 1\n        elseif note == 'o' then\n\
    \            note_len = note_len * 4\n        elseif note == '|' then\n      \
    \      note_len = note_len / 2\n        end\n        i = i + 1\n    end\n    result[#result\
    \ + 1] = note_len\n    return result\nend", "\tlocal result = {}\n\tlocal length\
    \ = string.len(music_string)\n\tlocal current_char = nil\n\tlocal current_note\
    \ = ''\n\tlocal beats = nil\n\tfor i = 1, length do\n\t\tcurrent_char = string.sub(music_string,\
    \ i, i)\n\t\tif current_char == ' ' then\n\t\t\tif current_note == 'o' then\n\t\
    \t\t\tbeats = 4\n\t\t\telseif current_note == 'o|' then\n\t\t\t\tbeats = 2\n\t\
    \t\telseif current_note == '.|' then\n\t\t\t\tbeats = 1\n\t\t\tend\n\t\t\ttable.insert(result,\
    \ beats)\n\t\t\tcurrent_note = ''\n\t\telse\n\t\t\tcurrent_note = current_note\
    \ .. current_char\n\t\tend\n\tend\n\treturn result\nend", "    local result =\
    \ {}\n    for notes in music_string:gmatch('%S+') do\n        local length = 4\n\
    \        for s in notes:gmatch('%S') do\n            if s == '|' then\n      \
    \          length = length / 2\n            end\n        end\n        table.insert(result,\
    \ length)\n    end\n    return result\nend", "  local result = {}\n  local notes\
    \ = {\n    ['o'] = 4,\n    ['o|'] = 2,\n    ['.|'] = 1\n  }\n  for match in string.gmatch(music_string,\
    \ '.') do\n    local note = match .. string.sub(music_string, string.find(music_string,\
    \ match) + 1, string.find(music_string, match) + 1)\n    table.insert(result,\
    \ notes[note])\n    music_string = string.sub(music_string, string.find(music_string,\
    \ match) + 2)\n  end\n  return result\nend", "    local notes = {}\n    for note\
    \ in music_string:gmatch(\"%S+\") do\n        local beat = 1\n        for i =\
    \ 1, #note do\n            local d = note:sub(i, i)\n            if d == 'o' then\n\
    \                beat = beat * 2\n            elseif d == '|' then\n         \
    \       break\n            end\n        end\n        table.insert(notes, beat)\n\
    \    end\n    return notes\nend", "    local beats = {}\n    for i,v in ipairs(music_string:gmatch('%S+'))\
    \ do\n        local note = v:sub(1,1)\n        local duration = v:sub(2,2)\n \
    \       if note == 'o' then\n            if duration == ' ' then beats[i] = 4\n\
    \            elseif duration == '|' then beats[i] = 2\n            end\n     \
    \   elseif note == '.' then\n            if duration == '|' then beats[i] = 1\n\
    \            end\n        end\n    end\n    return beats\nend", "    local result\
    \ = {}\n    for c in music_string:gmatch('%S+') do\n        if c == 'o' then\n\
    \            table.insert(result, 4)\n        elseif c == 'o|' then\n        \
    \    table.insert(result, 2)\n        elseif c == '.|' then\n            table.insert(result,\
    \ 1)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    local music_table = {}\n    for i = 1, string.len(music_string) do\n    \
    \    music_table[i] = string.sub(music_string, i, i)\n    end\n    for i = 1,\
    \ #music_table do\n        if music_table[i] == 'o' then\n            result[#result\
    \ + 1] = 4\n        elseif music_table[i] == '.' then\n            result[#result\
    \ + 1] = 1\n        elseif music_table[i] == '|' then\n            if music_table[i\
    \ - 1] == 'o' then\n                result[#result] = 2\n            elseif music_table[i\
    \ - 1] == '.' then\n                result[#result] = 1\n            end\n   \
    \     end\n    end\n    return result\nend", "    local notes = {}\n    local\
    \ i = 1\n    for note in music_string:gmatch('[o.|]+') do\n        table.insert(notes,\
    \ note:len())\n        i = i + 1\n    end\n    return notes\nend", "\tlocal music\
    \ = {}\n\tlocal music_table = {}\n\t\n\tmusic = string.gmatch(music_string, \"\
    %S+\")\n\t\n\tfor i in music do\n\t\tif i == \"o\" then\n\t\t\ttable.insert(music_table,\
    \ 4)\n\t\telseif i == \"o|\" then\n\t\t\ttable.insert(music_table, 2)\n\t\telseif\
    \ i == \".|\" then\n\t\t\ttable.insert(music_table, 1)\n\t\tend\n\tend\n\t\n\t\
    return music_table\nend", "\tlocal beats = {}\n\tlocal notes = {o = 4, 'o|' =\
    \ 2, '.|' = 1}\n\tlocal note = ''\n\tfor c in music_string:gmatch'.' do\n\t\t\
    if c == ' ' then\n\t\t\tbeats[#beats + 1] = notes[note]\n\t\t\tnote = ''\n\t\t\
    else\n\t\t\tnote = note .. c\n\t\tend\n\tend\n\tbeats[#beats + 1] = notes[note]\n\
    \treturn beats\nend", "    assert(music_string)\n    local counter = 1\n    local\
    \ result = {}\n    for note in string.gmatch(music_string, '.') do\n        if\
    \ note == 'o' then\n            result[counter] = 4\n        elseif note == 'o'\
    \ then\n            result[counter] = 2\n        elseif note == '.' then\n   \
    \         result[counter] = 1\n        end\n        counter = counter + 1\n  \
    \  end\n    return result\nend", "  local notes = {4, 2, 1}\n  local r = {}\n\
    \  for note in music_string:gmatch('%S+') do\n    if note:find('%|') then\n  \
    \    local n = note:sub(1, 1)\n      local i = 1\n      for k, v in ipairs(notes)\
    \ do\n        if n == 'o' then\n          break\n        end\n        i = i +\
    \ 1\n      end\n      table.insert(r, notes[i])\n    else\n      table.insert(r,\
    \ 4)\n    end\n  end\n  return r\nend", "    local notes = {}\n    for note in\
    \ music_string:gmatch('%S+') do\n        local beats = 0\n        if note == 'o'\
    \ then\n            beats = 4\n        elseif note == 'o|' then\n            beats\
    \ = 2\n        elseif note == '.|' then\n            beats = 1\n        end\n\
    \        table.insert(notes, beats)\n    end\n    return notes\nend", "  local\
    \ pattern = '([o.])%|*'\n  local beats = {}\n  for i, j in music_string:gmatch(pattern)\
    \ do\n    if j == '|' then\n      table.insert(beats, 2)\n    elseif i == 'o'\
    \ then\n      table.insert(beats, 4)\n    else\n      table.insert(beats, 1)\n\
    \    end\n  end\n  return beats\nend", "    local music_sequence = {}\n    for\
    \ beat in music_string:gmatch('%S+') do\n        if beat == 'o' then\n       \
    \     table.insert(music_sequence, 4)\n        elseif beat == 'o|' then\n    \
    \        table.insert(music_sequence, 2)\n        elseif beat == '.|' then\n \
    \           table.insert(music_sequence, 1)\n        end\n    end\n    return\
    \ music_sequence\nend", "\tlocal ret = {}\n\tfor _, w in ipairs(string.split(music_string,\
    \ ' ')) do\n\t\tif w == 'o' then\n\t\t\ttable.insert(ret, 4)\n\t\telseif w ==\
    \ 'o|' then\n\t\t\ttable.insert(ret, 2)\n\t\telseif w == '.|' then\n\t\t\ttable.insert(ret,\
    \ 1)\n\t\tend\n\tend\n\treturn ret\nend", "    local ret = {}\n    for s in string.gmatch(music_string,\
    \ '.') do\n        if s == 'o' then\n            table.insert(ret, 4)\n      \
    \  elseif s == 'o' or s == '|' then\n            table.insert(ret, 2)\n      \
    \  elseif s == '.' or s == '|' then\n            table.insert(ret, 1)\n      \
    \  end\n    end\n    return ret\nend", "    local t = {}\n    for item in string.gmatch(music_string,\
    \ '([^ ]+)') do\n        if item == 'o' then\n            table.insert(t, 4)\n\
    \        elseif item == 'o|' then\n            table.insert(t, 2)\n        elseif\
    \ item == '.|' then\n            table.insert(t, 1)\n        end\n    end\n  \
    \  return t\nend", "    local music_table = {}\n    -- your code here\n    return\
    \ music_table\nend", "  local note_parsers = {\n    o = function() return 4 end,\n\
    \    ['o|'] = function() return 2 end,\n    ['.|'] = function() return 1 end\n\
    \  }\n  local duration = {}\n  for note in string.gmatch(music_string, \"%S+\"\
    ) do\n    if not note_parsers[note] then\n      error(\"Unknown note: \" .. note)\n\
    \    end\n    duration[#duration + 1] = note_parsers[note]()\n  end\n  return\
    \ duration\nend", "  local notes = {}\n  for note in music_string:gmatch('%s*[o.|]+')\
    \ do\n    local b = note:match('|$') and 1 or 4\n    notes[#notes + 1] = b\n \
    \ end\n  return notes\nend", "  -- TODO: implement this function\nend", "    if\
    \ not music_string then\n        return nil\n    end\n    local result = {}\n\
    \    local beat_count = {\n        ['o'] = 4,\n        ['o|'] = 2,\n        ['.|']\
    \ = 1\n    }\n    for note in string.gmatch(music_string, '%S+') do\n        table.insert(result,\
    \ beat_count[note])\n    end\n    return result\nend", "    local steps = {}\n\
    \    local last_beat = 1\n    local prev_beat = 0\n    for beat, value in music_string:gmatch('([%.o|])([%w%s]*)')\
    \ do\n        prev_beat = beat == '.' and last_beat or (beat == 'o' and last_beat\
    \ + 3 or last_beat + 1)\n        last_beat = prev_beat\n        if value:match('%d+')\
    \ then\n            prev_beat = prev_beat + tonumber(value) - 1\n            last_beat\
    \ = prev_beat\n        end\n        table.insert(steps, prev_beat)\n    end\n\
    \    return steps\nend", "    music_table = {}\n    for p in music_string:gmatch(\"\
    %d*%a\") do\n        if p == 'o' then\n            table.insert(music_table, 4)\n\
    \        elseif p == 'o|' then\n            table.insert(music_table, 2)\n   \
    \     elseif p == '.|' then\n            table.insert(music_table, 1)\n      \
    \  end\n    end\n    return music_table\nend", "    local result = {}\n    for\
    \ c in music_string:gmatch('.') do\n        if c == 'o' then\n            table.insert(result,\
    \ 4)\n        elseif c == '.' then\n            table.insert(result, 1)\n    \
    \    end\n    end\n    return result\nend", "  if music_string == '' then\n  \
    \  return {}\n  end\n  local t = {}\n  local current = ''\n  local i = 1\n  while\
    \ i <= string.len(music_string) do\n    if string.sub(music_string, i, i) == '\
    \ ' then\n      table.insert(t, current)\n      current = ''\n    else\n     \
    \ current = current .. string.sub(music_string, i, i)\n    end\n    i = i + 1\n\
    \  end\n  table.insert(t, current)\n  current = ''\n  local beats = {}\n  for\
    \ j = 1, #t do\n    if t[j] == 'o' then\n      table.insert(beats, 4)\n    elseif\
    \ t[j] == 'o|' then\n      table.insert(beats, 2)\n    elseif t[j] == '.|' then\n\
    \      table.insert(beats, 1)\n    end\n  end\n  return beats\nend", "    local\
    \ result = {}\n    music_string:gsub('.', function(c)\n        if     c == 'o'\
    \ then table.insert(result, 4)\n        elseif c == 'o' then table.insert(result,\
    \ 2)\n        elseif c == '.' then table.insert(result, 1)\n        end\n    end)\n\
    \    return result\nend", "    local music_tab = {}\n    local time = 4\n    local\
    \ time_count = 1\n    for i=1,#music_string do\n        if time_count > time then\n\
    \            time_count = 1\n            time = time / 2\n        end\n      \
    \  if string.sub(music_string, i, i) == 'o' then\n            if string.sub(music_string,\
    \ i+1, i+1) == ' ' then\n                table.insert(music_tab, time)\n     \
    \           time_count = time_count + 1\n            elseif string.sub(music_string,\
    \ i+1, i+1) == '|' then\n                table.insert(music_tab, time/2)\n   \
    \             time_count = time_count + time/2\n            end\n        elseif\
    \ string.sub(music_string, i, i) == '.' then\n            if string.sub(music_string,\
    \ i+1, i+1) == '|' then\n                table.insert(music_tab, time/4)\n   \
    \             time_count = time_count + time/4\n            end\n        end\n\
    \    end\n    return music_tab\nend", "    local res = {}\n    local counter =\
    \ 1\n    for note in string.gmatch(music_string, \"%S+\") do\n        if note\
    \ == 'o' then\n            res[counter] = 4\n        elseif note == 'o|' then\n\
    \            res[counter] = 2\n        elseif note == '.|' then\n            res[counter]\
    \ = 1\n        end\n        counter = counter + 1\n    end\n    return res\nend",
  "    local duration = {\n        ['o'] = 4,\n        ['o|'] = 2,\n        ['.|']\
    \ = 1\n    }\n    local beats = {}\n    for s in music_string:gmatch('%S+') do\n\
    \        table.insert(beats, duration[s])\n    end\n    return beats\nend", "\t\
    -- Here goes your code.\n\t-- 'o' - whole note, lasts four beats\n\t-- 'o|' -\
    \ half note, lasts two beats\n\t-- '.|' - quater note, lasts one beat\n\tlocal\
    \ output_table = {}\n\tlocal music_table = {}\n\tfor m in string.gmatch(music_string,\
    \ '%w+') do\n\t\ttable.insert(music_table, m)\n\tend\n\tfor i,m in ipairs(music_table)\
    \ do\n\t\tif m == 'o' then\n\t\t\ttable.insert(output_table, 4)\n\t\telseif m\
    \ == 'o|' then\n\t\t\ttable.insert(output_table, 2)\n\t\telseif m == '.|' then\n\
    \t\t\ttable.insert(output_table, 1)\n\t\tend\n\tend\n\treturn output_table\nend",
  "    local result = {}\n    for note in music_string:gmatch('%S+') do\n        if\
    \ note == 'o' then\n            table.insert(result, 4)\n        elseif note ==\
    \ 'o|' then\n            table.insert(result, 2)\n        elseif note == '.|'\
    \ then\n            table.insert(result, 1)\n        end\n    end\n    return\
    \ result\nend", "   local beats = {}\n   for beat in music_string:gmatch(\"o*%p*|*\"\
    ) do\n      table.insert(beats, #beat)\n   end\n   return beats\nend", "  local\
    \ out = {}\n  for m in music_string:gmatch('%S+') do\n    local b = m:sub(1, 1)\n\
    \    if b == 'o' then\n      table.insert(out, m:sub(2) == '|' and 2 or 4)\n \
    \   elseif b == '.' then\n      table.insert(out, 1)\n    end\n  end\n  return\
    \ out\nend", "  local music_table = {}\n  for note in music_string:gmatch('%S+')\
    \ do\n    local duration = 1\n    if note == 'o' then\n      duration = 4\n  \
    \  elseif note == 'o|' then\n      duration = 2\n    end\n    table.insert(music_table,\
    \ duration)\n  end\n  return music_table\nend", "    local notes = {}\n    for\
    \ note in music_string:gmatch('[%a|.]+') do\n        if note == 'o' then\n   \
    \         table.insert(notes, 4)\n        elseif note == 'o|' then\n         \
    \   table.insert(notes, 2)\n        elseif note == '.|' then\n            table.insert(notes,\
    \ 1)\n        end\n    end\n    return notes\nend", "    local result = {}\n \
    \   local count = 0\n    local char_array = string.gmatch(music_string, \"%a\"\
    )\n    for index, char in ipairs(char_array) do\n        local beat = 4\n    \
    \    local current = char\n        if index < string.len(music_string) then\n\
    \            local next = string.sub(music_string, index + 1, index + 1)\n   \
    \         if next == \"|\" then\n                beat = 2\n                index\
    \ = index + 1\n            end\n        end\n        if char == \".\" then\n \
    \           beat = 1\n        end\n        table.insert(result, beat)\n    end\n\
    \    return result\nend", "    local music_notes = {}\n    local current_note\
    \ = ''\n    local current_duration = 0\n    for note in music_string:gmatch('%S+')\
    \ do\n        if note == current_note then\n            current_duration = current_duration\
    \ + 1\n        else\n            if current_note ~= '' then\n                table.insert(music_notes,\
    \ current_duration)\n            end\n            current_note = note\n      \
    \      current_duration = 1\n        end\n    end\n    table.insert(music_notes,\
    \ current_duration)\n    return music_notes\nend", "    result = {}\n    for word\
    \ in string.gmatch(music_string, '%S+') do\n        if word == 'o' then\n    \
    \        table.insert(result, 4)\n        elseif word == 'o|' then\n         \
    \   table.insert(result, 2)\n        elseif word == '.|' then\n            table.insert(result,\
    \ 1)\n        end\n    end\n    return result\nend", "\tlocal table = {}\n\tlocal\
    \ beats = {'o','o|','.|'}\n\t\n\tfor i = 1, #music_string do\n\t\tlocal k = string.sub(music_string,i,i)\n\
    \t\tif table_index_of(beats,k) ~= -1 then\n\t\t\tif k == 'o' then\n\t\t\t\ttable[#table+1]\
    \ = 4\n\t\t\telseif k == 'o|' then\n\t\t\t\ttable[#table+1] = 2\n\t\t\telseif\
    \ k == '.|' then\n\t\t\t\ttable[#table+1] = 1\n\t\t\tend\n\t\tend\n\tend\n\t\n\
    \treturn table\nend", "    local function parse_music(music_string)\n        local\
    \ t = {}\n        for v in music_string:gmatch(\"[%S]+\") do\n            if v\
    \ == 'o' then\n                table.insert(t, 4)\n            elseif v == 'o|'\
    \ then\n                table.insert(t, 2)\n            elseif v == '.|' then\n\
    \                table.insert(t, 1)\n            end\n        end\n        return\
    \ t\n    end\n    return parse_music(music_string)\nend", "    local ret = {}\n\
    \    for i in string.gmatch(music_string, '.') do\n        if i == 'o' then\n\
    \            table.insert(ret, 4)\n        elseif i == 'o' then\n            table.insert(ret,\
    \ 2)\n        elseif i == '.' then\n            table.insert(ret, 1)\n       \
    \ end\n    end\n    return ret\nend", "\t-- put your code here\n\tlocal length\
    \ = string.len(music_string)\n\tlocal t = {}\n\tlocal i = 1\n\twhile i <= length\
    \ do\n\t\tif string.sub(music_string, i, i) == 'o' then\n\t\t\tt[#t + 1] = 4\n\
    \t\t\ti = i + 1\n\t\telseif string.sub(music_string, i, i) == '.' then\n\t\t\t\
    t[#t + 1] = 1\n\t\t\ti = i + 2\n\t\tend\n\tend\n\treturn t\nend", "    local notes\
    \ = {}\n    local beats = {whole = 4, half = 2, quater = 1}\n    local note_lengths\
    \ = {['o'] = 4, ['o|'] = 2, ['.|'] = 1}\n    for note in music_string:gmatch('%S+')\
    \ do\n        if note_lengths[note] then\n            table.insert(notes, note_lengths[note])\n\
    \        end\n    end\n    return notes\nend", "\tlocal table_out = {}\n\tfor\
    \ i in string.gmatch(music_string, \"%S+\") do\n\t\tif i == \"o\" then\n\t\t\t\
    table.insert(table_out, 4)\n\t\telseif i == \"o|\" then\n\t\t\ttable.insert(table_out,\
    \ 2)\n\t\telseif i == \".|\" then\n\t\t\ttable.insert(table_out, 1)\n\t\tend\n\
    \tend\n\treturn table_out\nend", "\tlocal music_string = tostring(music_string)\n\
    \tlocal output = {}\n\tfor music_char in music_string:gmatch('.') do\n\t\tif music_char\
    \ == 'o' then\n\t\t\ttable.insert(output, 4)\n\t\telseif music_char == 'o' then\n\
    \t\t\ttable.insert(output, 2)\n\t\telseif music_char == '.' then\n\t\t\ttable.insert(output,\
    \ 1)\n\t\tend\n\tend\n\treturn output\nend", "  local beats = {}\n  for note in\
    \ music_string:gmatch('[^%s]+') do\n    if note == 'o' then\n      table.insert(beats,\
    \ 4)\n    elseif note == 'o|' then\n      table.insert(beats, 2)\n    elseif note\
    \ == '.|' then\n      table.insert(beats, 1)\n    end\n  end\n  return beats\n\
    end", "  local t = {}\n  for i=1,#music_string do\n    local c = music_string:sub(i,i)\n\
    \    if c == 'o' then\n      table.insert(t, 4)\n    elseif c == '|' then\n  \
    \    table.insert(t, 0)\n    elseif c == '.' then\n      table.insert(t, 1)\n\
    \    end\n  end\n  return t\nend", "    -- count the number of dots (.) in a string\n\
    \    local function count_dots(s)\n        local num_dots = 0\n        local start\
    \ = 1\n        while true do\n            local i = string.find(s, '.', start,\
    \ true)\n            if i == nil then\n                break\n            end\n\
    \            num_dots = num_dots + 1\n            start = i + 1\n        end\n\
    \        return num_dots\n    end", "    local beats = {}\n    local beats_to_append\
    \ = {\n        ['o'] = 4,\n        ['o|'] = 2,\n        ['.|'] = 1\n    }\n  \
    \  for note in music_string:gmatch('%w+') do\n        table.insert(beats, beats_to_append[note])\n\
    \    end\n    return beats\nend", "  return {}\nend", "    local beats = {}\n\
    \    local note_beat = {o = 4, o_ = 2, dot_ = 1}\n    local pattern = '(o_|dot_|o)'\n\
    \    for beat in string.gmatch(music_string, pattern) do\n        table.insert(beats,\
    \ note_beat[beat])\n    end\n    return beats\nend", "  local values = {}\n  for\
    \ _, word in ipairs(string.split(music_string, ' ')) do\n    if word == 'o' then\n\
    \      table.insert(values, 4)\n    elseif word == 'o|' then\n      table.insert(values,\
    \ 2)\n    elseif word == '.|' then\n      table.insert(values, 1)\n    end\n \
    \ end\n  return values\nend", "    local music_table = {}\n    for note in music_string:gmatch('[a-z]+|')\
    \ do\n        music_table[#music_table + 1] = BEATS[note]\n    end\n    return\
    \ music_table\nend", "    local music_table = {}\n    for i in string.gmatch(music_string,\
    \ \"%S+\") do\n        if i == 'o' then\n            table.insert(music_table,\
    \ 4)\n        elseif i == 'o|' then\n            table.insert(music_table, 2)\n\
    \        elseif i == '.|' then\n            table.insert(music_table, 1)\n   \
    \     end\n    end\n    return music_table\nend", "  local music_array = string_to_array(music_string)\n\
    \  local beats = { }\n  for _, note in ipairs(music_array) do\n    local beat\
    \ = 4\n    if note == 'o|' then\n      beat = 2\n    elseif note == '.|' then\n\
    \      beat = 1\n    end\n    table.insert(beats, beat)\n  end\n  return beats\n\
    end", "\tlocal tonumber = tonumber\n\tlocal t = {}\n\tfor m in music_string:gmatch('%S+')\
    \ do\n\t\tt[#t + 1] = tonumber(m:sub(2, 2))\n\tend\n\treturn t\nend", "    local\
    \ output = {}\n    for note in music_string:gmatch('%s?%S+') do\n        local\
    \ note_val = string.match(note, '%w+')\n        if note_val == 'o' then\n    \
    \        table.insert(output, 4)\n        elseif note_val == 'o|' then\n     \
    \       table.insert(output, 2)\n        elseif note_val == '.|' then\n      \
    \      table.insert(output, 1)\n        end\n    end\n    return output\nend",
  "    -- Write your code here\n    local list = {}\n    local count = 0\n    local\
    \ temp = \"\"\n    local i = 1\n    while i <= string.len(music_string) do\n \
    \       while i <= string.len(music_string) and string.sub(music_string, i, i)\
    \ ~= \" \" do\n            temp = temp .. string.sub(music_string, i, i)\n   \
    \         i = i + 1\n        end\n        if temp == \"o\" then\n            list[count]\
    \ = 4\n        elseif temp == \"o|\" then\n            list[count] = 2\n     \
    \   elseif temp == \".|\" then\n            list[count] = 1\n        end\n   \
    \     temp = \"\"\n        count = count + 1\n        i = i + 1\n    end\n   \
    \ return list\nend", "    local beats = {}\n    for token in string.gmatch(music_string,\
    \ \"[o%|%.]+\") do\n        if token == 'o' then\n            table.insert(beats,\
    \ 4)\n        elseif token == 'o|' then\n            table.insert(beats, 2)\n\
    \        elseif token == '.|' then\n            table.insert(beats, 1)\n     \
    \   end\n    end\n    return beats\nend", "    local beats = {}\n    local r =\
    \ string.gmatch(music_string, 'o o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|\
    \ o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|\
    \ o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|\
    \ o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|\
    \ o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|\
    \ o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|\
    \ o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|\
    \ o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|\
    \ o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|\
    \ o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|", "\tlocal\
    \ measure = {}\n\tlocal r = {}\n\tlocal x = 1\n\t\n\tfor token in string.gmatch(music_string,\
    \ \"%S+\") do\n\t\tmeasure[x] = token\n\t\tx = x + 1\n\tend\n\t\n\tfor y = 1,\
    \ #measure do\n\t\tif measure[y] == 'o' then\n\t\t\tr[y] = 4\n\t\telseif measure[y]\
    \ == 'o|' then\n\t\t\tr[y] = 2\n\t\telseif measure[y] == '.|' then\n\t\t\tr[y]\
    \ = 1\n\t\tend\n\tend\n\t\n\treturn r\nend", "  -- Insert your solution here\n\
    \  local t = {}\n  local idx = 1\n  local m = 1\n  for _,v in pairs(music_string:split('\
    \ ')) do\n    if v == 'o' then\n      t[idx] = 4\n      idx = idx + 1\n    elseif\
    \ v == 'o|' then\n      t[idx] = 2\n      idx = idx + 1\n    elseif v == '.|'\
    \ then\n      t[idx] = 1\n      idx = idx + 1\n    end\n  end\n  return t\nend",
  "  return music_string:gmatch'o|o%||%.%||%.':map(function(sym)\n    return sym ==\
    \ 'o' and 4 or sym == 'o|' and 2 or 1\n  end)\nend", "    local m = {}\n    local\
    \ t = {}\n    local last_o = false\n    local count = 0\n    for i = 1, #music_string\
    \ do\n        local char = music_string:sub(i, i)\n        if char == 'o' then\n\
    \            table.insert(m, 1)\n            last_o = true\n        elseif char\
    \ == '|' then\n            if last_o then\n                table.insert(m, 3)\n\
    \            else\n                table.insert(m, 1)\n            end\n     \
    \       last_o = false\n        elseif char == '.' then\n            if last_o\
    \ then\n                table.insert(m, 2)\n            else\n               \
    \ table.insert(m, 0)\n            end\n            last_o = false\n        end\n\
    \    end\n    for i = 1, #m do\n        if (m[i] == 1 or m[i] == 3) and (m[i+1]\
    \ == 1 or m[i+1] == 3) then\n            if m[i] == 1 then\n                m[i]\
    \ = 0\n            else\n                m[i] = 2\n            end\n        end\n\
    \    end\n    for i = 1, #m do\n        if m[i] == 0 then\n            count =\
    \ count + 1\n        elseif m[i] == 1 then\n            count = count + 2\n  \
    \      elseif m[i] == 2 then\n            count = count + 1\n            table.insert(t,\
    \ count)\n            count = 0\n        elseif m[i] == 3 then\n            count\
    \ = count + 1\n            table.insert(t, count)\n            count = 0\n   \
    \     end\n    end\n    return t\nend", "  local beat_types = {\n    ['o'] = 4,\n\
    \    ['o|'] = 2,\n    ['.|'] = 1\n  }\n  local beats = {}\n  local current_beat\
    \ = 1\n  while current_beat <= string.len(music_string) do\n    for beat_type,\
    \ beats_num in pairs(beat_types) do\n      if string.sub(music_string, current_beat,\
    \ current_beat + string.len(beat_type) - 1) == beat_type then\n        table.insert(beats,\
    \ beats_num)\n        current_beat = current_beat + string.len(beat_type)\n  \
    \      break\n      end\n    end\n  end\n  return beats\nend", "  local music_table\
    \ = {}\n  for c in music_string:gmatch(\".\") do\n    if c == 'o' then\n     \
    \ table.insert(music_table, 4)\n    elseif c == '|' then\n      local i = #music_table\n\
    \      music_table[i] = music_table[i] / 2\n    end\n  end\n  return music_table\n\
    end", "    local result = {}\n    local note_types = {o = 4, oa = 2, a = 1}\n\
    \    for note in music_string:gmatch('[o.]+') do\n        local beat_count = note_types[note:sub(1,\
    \ 2)]\n        if not beat_count then\n            if note:sub(1, 2) == 'o.' then\n\
    \                beat_count = 3\n            else\n                print('Invalid\
    \ note: ' .. note)\n            end\n        end\n        table.insert(result,\
    \ beat_count)\n    end\n    return result\nend", "    -- TODO: implement your\
    \ function here\n    --[[\n        The function expects a string in the format:\n\
    \        \"o o| .| o| o| .| .| .| .| o o\"\n        and returns a table in the\
    \ format:\n        {4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4}\n    ]]--\n    local table\
    \ = {}\n    for note in string.gmatch(music_string, \"%S+\") do\n        if note\
    \ == \"o\" then\n            table[#table + 1] = 4\n        elseif note == \"\
    o|\" then\n            table[#table + 1] = 2\n        elseif note == \".|\" then\n\
    \            table[#table + 1] = 1\n        end\n    end\n    return table\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_116_sort_array
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // In this Kata, you have to sort an array of non-negative\
  \ integers according to\n    // number of ones in their binary representation in\
  \ ascending order.\n    // For similar number of ones, sort based on decimal value.\n\
  \    // It must be implemented like this:\n    public static ArrayList<Integer>\
  \ sortArray(ArrayList<Integer> arr) {\n"
tests: "return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static\
  \ void main(String[] args) {\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)5, (int)2, (int)3, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)2, (int)4, (int)3, (int)5)))));\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList((int)-2,\
  \ (int)-3, (int)-4, (int)-5, (int)-6)))).equals((new ArrayList<Integer>(Arrays.asList((int)-4,\
  \ (int)-2, (int)-6, (int)-5, (int)-3)))));\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)0, (int)2, (int)3, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
  \ (int)1, (int)2, (int)4, (int)3)))));\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList()))).equals((new\
  \ ArrayList<Integer>(Arrays.asList()))));\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)5, (int)77, (int)4, (int)5, (int)3, (int)5, (int)7, (int)2, (int)3, (int)4)))).equals((new\
  \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)4, (int)4, (int)3, (int)3,\
  \ (int)5, (int)5, (int)5, (int)7, (int)77)))));\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList((int)3,\
  \ (int)6, (int)44, (int)12, (int)32, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)32,\
  \ (int)3, (int)5, (int)6, (int)12, (int)44)))));\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)4, (int)8, (int)16, (int)32)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)4, (int)8, (int)16, (int)32)))));\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)4, (int)8, (int)16, (int)32)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)4, (int)8, (int)16, (int)32)))));\n    }\n\n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

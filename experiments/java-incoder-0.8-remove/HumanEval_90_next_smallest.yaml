name: HumanEval_90_next_smallest
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given a list of integers.\n    // Write a function\
  \ next_smallest() that returns the 2nd smallest element of the list.\n    // Return\
  \ None if there is no such element.\n    public static Optional<Integer> nextSmallest(ArrayList<Integer>\
  \ lst) {\n"
tests: "return Optional.empty();\n    }\n    public static void main(String[] args)\
  \ {\n    assert(nextSmallest((new ArrayList<Integer>(Arrays.asList((int)1, (int)2,\
  \ (int)3, (int)4, (int)5)))).equals(2));\n    assert(nextSmallest((new ArrayList<Integer>(Arrays.asList((int)5,\
  \ (int)1, (int)4, (int)3, (int)2)))).equals(2));\n    assert(nextSmallest((new ArrayList<Integer>(Arrays.asList()))).equals(Optional.empty()));\n\
  \    assert(nextSmallest((new ArrayList<Integer>(Arrays.asList((int)1, (int)1)))).equals(Optional.empty()));\n\
  \    assert(nextSmallest((new ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1,\
  \ (int)1, (int)0)))).equals(1));\n    assert(nextSmallest((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)1)))).equals(Optional.empty()));\n    assert(nextSmallest((new ArrayList<Integer>(Arrays.asList((int)-35,\
  \ (int)34, (int)12, (int)-45)))).equals(-35));\n    }\n\n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

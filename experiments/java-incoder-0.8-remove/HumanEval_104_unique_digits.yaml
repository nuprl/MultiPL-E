completions: []
language: java
name: HumanEval_104_unique_digits
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a list of positive integers x. return a sorted list\
  \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned list\
  \ should be sorted in increasing order.\n    // For example:\n    public static\
  \ ArrayList<Integer> uniqueDigits(ArrayList<Integer> x) {\n"
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- '    }

  }'
- "\n    }\n"
tests: "}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
  \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
  \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
  \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
  \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
  \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
  \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
  \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31, (int)135)))));\n\
  \    }\n\n}\n"

{
  "name": "mbpp_604_reverse_words",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to reverse words seperated by spaces in a given string.\n\t\"\"\"\nfunction reverse_words(s::String)::String \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_604_reverse_words.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = reverse_words;\n\t@test(candidate(\"python program\") == \"program python\")\n\t@test(candidate(\"java language\") == \"language java\")\n\t@test(candidate(\"indian man\") == \"man indian\")\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\twords = split(s, \" \")\n\treverse_words = []\n\tfor word in words\n\t\tpush!(reverse_words, reverse(word))\n\tend\n\treturn join(reverse_words, \" \")\nend",
    "\twords = split(s, \" \")\n\treverse_words = []\n\tfor word in words\n\t\tpush!(reverse_words, reverse(word))\n\tend\n\treturn join(reverse_words, \" \")\nend",
    "\twords = split(s, \" \")\n\treverse_words = []\n\tfor word in words\n\t\tpush!(reverse_words, reverse(word))\n\tend\n\treturn join(reverse_words, \" \")\nend",
    "\twords = split(s, \" \")\n\treverse_words = []\n\tfor word in words\n\t\tpush!(reverse_words, reverse(word))\n\tend\n\treturn join(reverse_words, \" \")\nend",
    "\t\"\"\"\n\tReverse words in a string.\n\t\"\"\"\n\twords = split(s)\n\treturn join(reverse(words), \" \")\nend",
    "\twords = split(s, \" \")\n\treturn join(reverse(words), \" \")\nend",
    "\t\"\"\"\n\tReverse words in a string.\n\t\"\"\"\n\twords = split(s, \" \")\n\treverse_words = []\n\tfor word in words\n\t\tpush!(reverse_words, reverse(word))\n\tend\n\treturn join(reverse_words, \" \")\nend",
    "\twords = split(s, \" \")\n\treturn join(reverse(words), \" \")\nend",
    "\twords = split(s, \" \")\n\treverse_words = []\n\tfor word in words\n\t\tpush!(reverse_words, reverse(word))\n\tend\n\treturn join(reverse_words, \" \")\nend",
    "\twords = split(s, \" \")\n\treverse_words = []\n\tfor word in words\n\t\tpush!(reverse_words, reverse(word))\n\tend\n\treturn join(reverse_words, \" \")\nend",
    "\twords = split(s, \" \")\n\treverse_words = []\n\tfor word in words\n\t\tpush!(reverse_words, reverse(word))\n\tend\n\treturn join(reverse_words, \" \")\nend",
    "\twords = split(s, \" \")\n\treturn join(reverse(words), \" \")\nend",
    "\twords = split(s, r\"\\s+\")\n\treverse(words)\n\treturn join(words, \" \")\nend",
    "\twords = split(s)\n\treverse_words = []\n\tfor word in words\n\t\tpush!(reverse_words, reverse(word))\n\tend\n\treturn join(reverse_words, \" \")\nend",
    "\twords = split(s, \" \")\n\treturn join(reverse(words), \" \")\nend",
    "\twords = split(s, \" \")\n\treturn join(reverse(words), \" \")\nend",
    "\twords = split(s, \" \")\n\treverse_words = []\n\tfor word in words\n\t\tpush!(reverse_words, reverse(word))\n\tend\n\treturn join(reverse_words, \" \")\nend",
    "\twords = split(s, \" \")\n\treturn join(reverse(words), \" \")\nend",
    "\twords = split(s, \" \")\n\treverse_words = []\n\tfor word in words\n\t\tpush!(reverse_words, reverse(word))\n\tend\n\treturn join(reverse_words, \" \")\nend",
    "\t\"\"\"\n\tReverse the words in a string.\n\t\"\"\"\n\twords = split(s, \" \")\n\treturn join(reverse(words), \" \")\nend"
  ]
}
{
  "name": "mbpp_131_reverse_vowels",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a jlthon function to reverse only the vowels of a given string (where y is not a vowel).\n\t\"\"\"\nfunction reverse_vowels(str1::String)::String \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_131_reverse_vowels.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = reverse_vowels;\n\t@test(candidate(\"Python\") == \"Python\")\n\t@test(candidate(\"USA\") == \"ASU\")\n\t@test(candidate(\"ab\") == \"ab\")\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\t\"\"\"\n\tFunction to reverse only the vowels of a given string (where y is not a vowel).\n\t\"\"\"\n\tvowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\tstr1 = split(str1)\n\tstr1 = filter(x -> x in vowels, str1)\n\tstr1 = reverse(str1)\n\treturn join(str1)\nend",
    "\tvowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\tstr1 = split(str1)\n\tvowels_in_str1 = [i for i in str1 if i in vowels]\n\tfor i in str1\n\t\tif i in vowels\n\t\t\tstr1[str1.index(i)] = vowels_in_str1[end]\n\t\t\tpop!(vowels_in_str1)\n\t\tend\n\tend\n\treturn join(str1)\nend",
    "\tvowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\tstr1_vowels = []\n\tfor i in str1\n\t\tif i in vowels\n\t\t\tpush!(str1_vowels, i)\n\t\tend\n\tend\n\tstr1_vowels = reverse(str1_vowels)\n\tstr1_vowels_index = 0\n\tstr1_new = \"\"\n\tfor i in str1\n\t\tif i in vowels\n\t\t\tstr1_new = str1_new * str1_vowels[str1_vowels_index]\n\t\t\tstr1_vowels_index += 1\n\t\telse\n\t\t\tstr1_new = str1_new * i\n\t\tend\n\tend\n\treturn str1_new\nend",
    "\tvowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\tstr1 = split(str1)\n\tvowels_in_str1 = []\n\tfor i in str1\n\t\tif i in vowels\n\t\t\tpush!(vowels_in_str1, i)\n\t\tend\n\tend\n\tvowels_in_str1 = reverse(vowels_in_str1)\n\tj = 1\n\tfor i in 1:length(str1)\n\t\tif str1[i] in vowels\n\t\t\tstr1[i] = vowels_in_str1[j]\n\t\t\tj += 1\n\t\tend\n\tend\n\tstr1 = join(str1)\n\treturn str1\nend",
    "\tstr2 = \"\"\n\tvowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\tfor i in str1\n\t\tif i in vowels\n\t\t\tstr2 = i * str2\n\t\telse\n\t\t\tstr2 = str2 * i\n\t\tend\n\tend\n\treturn str2\nend",
    "\tvowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\tstr1_array = str1 |> split(\"\")\n\tvowels_array = str1_array |> filter(x -> x in vowels) |> reverse\n\tstr1_array |> map(x -> if x in vowels; vowels_array |> pop!; else; x; end) |> join\nend",
    "\tvowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\tstr1_arr = str1 |> split(\"\")\n\tvowels_arr = str1_arr |> filter(vowels |> contains)\n\tvowels_arr = vowels_arr |> reverse\n\tfor i in 1:length(str1_arr)\n\t\tif vowels |> contains(str1_arr[i])\n\t\t\tstr1_arr[i] = vowels_arr[1]\n\t\t\tvowels_arr = vowels_arr |> drop(1)\n\t\tend\n\tend\n\treturn str1_arr |> join(\"\")\nend",
    "\tvowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\tstr1 = split(str1)\n\tvowels_in_str = []\n\tfor i in str1\n\t\tif i in vowels\n\t\t\tpush!(vowels_in_str, i)\n\t\tend\n\tend\n\tvowels_in_str = reverse(vowels_in_str)\n\tfor i in 1:length(str1)\n\t\tif str1[i] in vowels\n\t\t\tstr1[i] = vowels_in_str[1]\n\t\t\tshift!(vowels_in_str)\n\t\tend\n\tend\n\treturn join(str1)\nend",
    "\tvowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\tstr1_array = split(str1)\n\tvowels_array = []\n\tfor i in str1_array\n\t\tif i in vowels\n\t\t\tpush!(vowels_array, i)\n\t\tend\n\tend\n\tvowels_array = reverse(vowels_array)\n\tvowels_index = 0\n\tfor i in 1:length(str1_array)\n\t\tif str1_array[i] in vowels\n\t\t\tstr1_array[i] = vowels_array[vowels_index]\n\t\t\tvowels_index += 1\n\t\tend\n\tend\n\treturn join(str1_array)\nend",
    "\tvowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\tstr1 = split(str1)\n\ti = 1\n\tj = length(str1)\n\twhile i < j\n\t\tif str1[i] in vowels && str1[j] in vowels\n\t\t\tstr1[i], str1[j] = str1[j], str1[i]\n\t\t\ti += 1\n\t\t\tj -= 1\n\t\telseif str1[i] in vowels\n\t\t\tj -= 1\n\t\telseif str1[j] in vowels\n\t\t\ti += 1\n\t\telse\n\t\t\ti += 1\n\t\t\tj -= 1\n\t\tend\n\tend\n\treturn join(str1)\nend",
    "\tvowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\tstr1_list = list(str1)\n\tvowels_list = []\n\tfor i in str1_list\n\t\tif i in vowels\n\t\t\tvowels_list.append(i)\n\t\tend\n\tend\n\tvowels_list = vowels_list[::-1]\n\tj = 0\n\tfor i in str1_list\n\t\tif i in vowels\n\t\t\tstr1_list[j] = vowels_list[j]\n\t\t\tj += 1\n\t\tend\n\tend\n\treturn join(str1_list, \"\")\nend",
    "\tvowels = \"aeiouAEIOU\"\n\tstr1 = split(str1)\n\tstr1 = reverse(str1)\n\tstr1 = join(str1)\n\treturn str1\nend",
    "\tvowels = \"aeiouAEIOU\"\n\tstr1 = collect(str1)\n\ti = 1\n\tj = length(str1)\n\twhile i < j\n\t\tif !(str1[i] in vowels)\n\t\t\ti += 1\n\t\telseif !(str1[j] in vowels)\n\t\t\tj -= 1\n\t\telse\n\t\t\tstr1[i], str1[j] = str1[j], str1[i]\n\t\t\ti += 1\n\t\t\tj -= 1\n\t\tend\n\tend\n\treturn join(str1)\nend",
    "\tvowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\tstr2 = \"\"\n\tfor i in str1\n\t\tif i in vowels\n\t\t\tstr2 = i * str2\n\t\telse\n\t\t\tstr2 = str2 * i\n\t\tend\n\tend\n\treturn str2\nend",
    "\tvowels = \"aeiouAEIOU\"\n\tstr1 = split(str1)\n\ti = 1\n\tj = length(str1)\n\twhile i < j\n\t\tif str1[i] in vowels && str1[j] in vowels\n\t\t\tstr1[i], str1[j] = str1[j], str1[i]\n\t\t\ti += 1\n\t\t\tj -= 1\n\t\telseif str1[i] in vowels\n\t\t\tj -= 1\n\t\telseif str1[j] in vowels\n\t\t\ti += 1\n\t\telse\n\t\t\ti += 1\n\t\t\tj -= 1\n\t\tend\n\tend\n\treturn join(str1)\nend",
    "\tvowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\tstr1_array = str1 |> split(\"\")\n\tvowels_array = str1_array |> filter(x -> x in vowels) |> reverse\n\tstr1_array |> map(x -> if x in vowels then vowels_array |> pop! else x end) |> join\nend",
    "\tvowels = \"aeiouAEIOU\"\n\tstr1 = collect(str1)\n\ti = 1\n\tj = length(str1)\n\twhile i < j\n\t\tif !(str1[i] in vowels)\n\t\t\ti += 1\n\t\telseif !(str1[j] in vowels)\n\t\t\tj -= 1\n\t\telse\n\t\t\tstr1[i], str1[j] = str1[j], str1[i]\n\t\t\ti += 1\n\t\t\tj -= 1\n\t\tend\n\tend\n\treturn join(str1)\nend",
    "\tvowels = \"aeiouAEIOU\"\n\tstr2 = \"\"\n\tfor i in str1\n\t\tif i in vowels\n\t\t\tstr2 = i * str2\n\t\telse\n\t\t\tstr2 = str2 * i\n\t\tend\n\tend\n\treturn str2\nend",
    "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    str1_array = split(str1)\n    vowels_array = []\n    for i in str1_array\n        if i in vowels\n            push!(vowels_array, i)\n        end\n    end\n    vowels_array = reverse(vowels_array)\n    str2_array = []\n    for i in str1_array\n        if i in vowels\n            push!(str2_array, pop!(vowels_array))\n        else\n            push!(str2_array, i)\n        end\n    end\n    return join(str2_array)\nend",
    "\tvowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\tstr1 = split(str1)\n\tvowels_in_str1 = []\n\tfor i in str1\n\t\tif i in vowels\n\t\t\tpush!(vowels_in_str1, i)\n\t\tend\n\tend\n\tfor i in 1:length(str1)\n\t\tif str1[i] in vowels\n\t\t\tstr1[i] = pop!(vowels_in_str1)\n\t\tend\n\tend\n\treturn join(str1)\nend"
  ]
}
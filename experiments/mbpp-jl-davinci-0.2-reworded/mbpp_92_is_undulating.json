{
  "name": "mbpp_92_is_undulating",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to check whether the given number is undulating or not.\n\t\"\"\"\nfunction is_undulating(n::Int64)::Bool \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_92_is_undulating.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = is_undulating;\n\t@test(candidate(1212121) == true)\n\t@test(candidate(1991) == false)\n\t@test(candidate(121) == true)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tdigits = digits(n)\n\tfor i in 1:length(digits)-2\n\t\tif (digits[i] != digits[i+2])\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tdigits = digits(n)\n\tfor i in 1:length(digits)-2\n\t\tif digits[i] == digits[i+2]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tdigits = digits(n)\n\tfor i in 1:length(digits)-2\n\t\tif digits[i] == digits[i+2]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tdigits = digits(n)\n\tfor i in 1:length(digits)-2\n\t\tif digits[i] == digits[i+2]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tChecks whether the given number is undulating or not.\n\t\"\"\"\n\tif n < 100\n\t\treturn false\n\tend\n\tn = n % 100\n\treturn n % 11 == 0\nend",
    "\tdigits = digits(n)\n\tfor i in 1:length(digits)-2\n\t\tif digits[i] == digits[i+2]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tdigits = digits(n)\n\tfor i in 1:length(digits)-2\n\t\tif digits[i] == digits[i+2]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif n < 100\n\t\treturn false\n\tend\n\t\n\tn_str = string(n)\n\tfor i in 1:length(n_str) - 2\n\t\tif n_str[i] == n_str[i+2]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tdigits = digits(n)\n\tfor i in 1:length(digits)-2\n\t\tif digits[i] == digits[i+2]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tdigits = digits(n)\n\tfor i in 1:length(digits)-2\n\t\tif digits[i] == digits[i+2]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tdigits = digits(n)\n\tfor i in 1:length(digits)-2\n\t\tif digits[i] == digits[i+2]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tdigits = digits(n)\n\tif length(digits) < 3\n\t\treturn false\n\tend\n\tfor i in 1:length(digits)-2\n\t\tif digits[i] == digits[i+1] || digits[i+1] == digits[i+2] || digits[i] == digits[i+2]\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tdigits = digits(n)\n\tfor i in 1:length(digits)-2\n\t\tif digits[i] == digits[i+2]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tdigits = digits(n)\n\tfor i in 1:length(digits)-2\n\t\tif digits[i] == digits[i+2]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tdigits = digits(n)\n\tfor i in 1:length(digits)-2\n\t\tif digits[i] == digits[i+2]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tdigits = get_digits(n)\n\tfor i in 1:length(digits)-2\n\t\tif (digits[i] == digits[i+2])\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tdigits = get_digits(n)\n\tfor i in 2:length(digits)-1\n\t\tif digits[i-1] == digits[i] || digits[i] == digits[i+1]\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tdigits = digits(n)\n\tfor i in 1:length(digits)-2\n\t\tif digits[i] == digits[i+2]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tdigits = digits(n)\n\tfor i in 1:length(digits)-2\n\t\tif digits[i] == digits[i+2]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tdigits = get_digits(n)\n\tif length(digits) < 3\n\t\treturn false\n\tend\n\tfor i in 1:length(digits)-2\n\t\tif digits[i] == digits[i+2]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend"
  ]
}
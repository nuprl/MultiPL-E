{
  "name": "mbpp_450_extract_string",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to extract specified size of strings from a given vector of string values.\n\t\"\"\"\nfunction extract_string(str::Vector{String}, l::Int64)::Vector{String} \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_450_extract_string.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = extract_string;\n\t@test(candidate([\"Python\", \"list\", \"exercises\", \"practice\", \"solution\"], 8) == [\"practice\", \"solution\"])\n\t@test(candidate([\"Python\", \"list\", \"exercises\", \"practice\", \"solution\"], 6) == [\"Python\"])\n\t@test(candidate([\"Python\", \"list\", \"exercises\", \"practice\", \"solution\"], 9) == [\"exercises\"])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\treturn [i for i in str if length(i) == l]\nend",
    "\tstr_new = []\n\tfor i in 1:length(str)\n\t\tif length(str[i]) == l\n\t\t\tpush!(str_new, str[i])\n\t\tend\n\tend\n\treturn str_new\nend",
    "\t\"\"\"\n\tExtract strings of length l from a vector of strings.\n\t\"\"\"\n\treturn [s for s in str if length(s) == l]\nend",
    "\t\"\"\"\n\tExtract specified size of strings from a given vector of string values.\n\t\"\"\"\n\treturn [s for s in str if length(s) == l]\nend",
    "\treturn [x for x in str if length(x) == l]\nend",
    "\treturn [x for x in str if length(x) == l]\nend",
    "\t\"\"\"\n\tExtract strings of length l from a vector of strings.\n\t\"\"\"\n\tstr_l = []\n\tfor i in str\n\t\tif length(i) == l\n\t\t\tpush!(str_l, i)\n\t\tend\n\tend\n\treturn str_l\nend",
    "\t\"\"\"\n\tExtract strings of length l from str.\n\t\"\"\"\n\treturn [s for s in str if length(s) == l]\nend",
    "\treturn [x for x in str if length(x) == l]\nend",
    "\tstr_new = String[]\n\tfor i in str\n\t\tif length(i) == l\n\t\t\tpush!(str_new, i)\n\t\tend\n\tend\n\treturn str_new\nend",
    "\treturn [s for s in str if length(s) == l]\nend",
    "\t\"\"\"\n\tExtract strings of length l from a given vector of string values.\n\t\"\"\"\n\tstr_l = []\n\tfor i in str\n\t\tif length(i) == l\n\t\t\tpush!(str_l, i)\n\t\tend\n\tend\n\treturn str_l\nend",
    "\t\"\"\"\n\tExtracts strings of length l from a vector of strings.\n\t\"\"\"\n\t\n\t# Initialize an empty vector to store the extracted strings\n\textracted_strings = Vector{String}()\n\t\n\t# Loop through the vector of strings\n\tfor i in 1:length(str)\n\t\t# Check if the length of the string is equal to l\n\t\tif length(str[i]) == l\n\t\t\t# If yes, push the string to the vector of extracted strings\n\t\t\tpush!(extracted_strings, str[i])\n\t\tend\n\tend\n\t\n\t# Return the vector of extracted strings\n\treturn extracted_strings\nend",
    "\tstr_new = []\n\tfor i in str\n\t\tif length(i) == l\n\t\t\tpush!(str_new, i)\n\t\tend\n\tend\n\treturn str_new\nend",
    "\treturn [s for s in str if length(s) == l]\nend",
    "\treturn [s for s in str if length(s) == l]\nend",
    "\treturn [s for s in str if length(s) == l]\nend",
    "\treturn [s for s in str if length(s) == l]\nend",
    "\treturn [s for s in str if length(s) == l]\nend",
    "\treturn [i for i in str if length(i) == l]\nend"
  ]
}